BOLT-INFO: shared object or position-independent executable detected
BOLT-INFO: Target architecture: x86_64
BOLT-INFO: BOLT version: <unknown>
BOLT-INFO: first alloc address is 0x0
BOLT-INFO: creating new program header table at address 0x200000, offset 0x200000
BOLT-INFO: enabling lite mode
BOLT-WARNING: ignoring symbol __bss_start at 0x60030, which lies outside .bss
BOLT-WARNING: split function detected on input : _GLOBAL__sub_I__ZN9benchmark6scrandEm.cold
Binary Function "_init" after disassembly {
  Number      : 1
  State       : disassembled
  Address     : 0x1000
  Size        : 0x1b
  MaxSize     : 0x1b
  Offset      : 0x1000
  Section     : .init
  Orc Section : .local.text._init
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB00:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	movq	DATAat0x5ffe8(%rip), %rax
    0000000f: 	testq	%rax, %rax
    00000012: 	je	.Ltmp0 # Offset: 18
    00000014: 	callq	*%rax # Offset: 20
.Ltmp0:
    00000016: 	addq	$0x8, %rsp
    0000001a: 	retq # Offset: 26
DWARF CFI Instructions:
    <empty>
End of Function "_init"

Binary Function "main" after disassembly {
  Number      : 3
  State       : disassembled
  Address     : 0x1410
  Size        : 0x106
  MaxSize     : 0x110
  Offset      : 0x1410
  Section     : .text
  Orc Section : .local.text.main
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB02:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	pushq	%rbp
    0000000b: 	pushq	%rbx
    0000000c: 	testl	%edi, %edi
    0000000e: 	jle	.Ltmp1 # Offset: 14
    00000014: 	leal	-0x1(%rdi), %eax
    00000017: 	movl	%edi, %r13d
    0000001a: 	movq	%rsi, %r14
    0000001d: 	movq	%rsi, %rbx
    00000020: 	leaq	0x8(%rsi,%rax,8), %r12
    00000025: 	leaq	DATAat0x57180(%rip), %rbp
    0000002c: 	nopl	(%rax) # Size: 4
.Ltmp2:
    00000030: 	movq	(%rbx), %rdx
    00000033: 	movq	%rbp, %rsi
    00000036: 	movl	$0x1, %edi
    0000003b: 	xorl	%eax, %eax
    0000003d: 	addq	$0x8, %rbx
    00000041: 	callq	__printf_chk@PLT # Offset: 65
    00000046: 	cmpq	%r12, %rbx
    00000049: 	jne	.Ltmp2 # Offset: 73
    0000004b: 	xorl	%eax, %eax
    0000004d: 	leaq	DATAat0x57166(%rip), %rsi
    00000054: 	movl	$0x1, %edi
    00000059: 	callq	__printf_chk@PLT # Offset: 89
    0000005e: 	cmpl	$0x1, %r13d
    00000062: 	jg	.Ltmp3 # Offset: 98
.Ltmp4:
    00000064: 	callq	_Z11TestOneTypeIaEvv # Offset: 100
    00000069: 	callq	_Z11TestOneTypeIhEvv # Offset: 105
    0000006e: 	callq	_Z11TestOneTypeIsEvv # Offset: 110
    00000073: 	callq	_Z11TestOneTypeItEvv # Offset: 115
    00000078: 	movl	iterations(%rip), %edx
    0000007e: 	testl	%edx, %edx
    00000080: 	leal	0x3(%rdx), %eax
    00000083: 	cmovnsl	%edx, %eax
    00000086: 	sarl	$0x2, %eax
    00000089: 	movl	%eax, iterations(%rip)
    0000008f: 	callq	_Z11TestOneTypeIiEvv # Offset: 143
    00000094: 	callq	_Z11TestOneTypeIjEvv # Offset: 148
    00000099: 	callq	_Z11TestOneTypeIlEvv # Offset: 153
    0000009e: 	callq	_Z11TestOneTypeImEvv # Offset: 158
    000000a3: 	shll	$0x2, iterations(%rip)
    000000aa: 	callq	_Z20TestOneTypeInductionImEvv # Offset: 170
    000000af: 	popq	%rbx
    000000b0: 	xorl	%eax, %eax
    000000b2: 	popq	%rbp
    000000b3: 	popq	%r12
    000000b5: 	popq	%r13
    000000b7: 	popq	%r14
    000000b9: 	retq # Offset: 185
.Ltmp3:
    000000ba: 	movq	0x8(%r14), %rdi
    000000be: 	movl	$0xa, %edx
    000000c3: 	xorl	%esi, %esi
    000000c5: 	callq	strtol@PLT # Offset: 197
    000000ca: 	movl	%eax, iterations(%rip)
    000000d0: 	cmpl	$0x2, %r13d
    000000d4: 	jle	.Ltmp4 # Offset: 212
    000000d6: 	movq	0x10(%r14), %rdi
    000000da: 	xorl	%esi, %esi
    000000dc: 	callq	strtod@PLT # Offset: 220
    000000e1: 	movsd	%xmm0, init_value(%rip)
    000000e9: 	jmp	.Ltmp4 # Offset: 233
.Ltmp1:
    000000ee: 	leaq	DATAat0x57166(%rip), %rsi
    000000f5: 	movl	$0x1, %edi
    000000fa: 	xorl	%eax, %eax
    000000fc: 	callq	__printf_chk@PLT # Offset: 252
    00000101: 	jmp	.Ltmp4 # Offset: 257
DWARF CFI Instructions:
    <empty>
End of Function "main"

Binary Function "_start" after disassembly {
  Number      : 5
  State       : disassembled
  Address     : 0x1620
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x1620
  Section     : .text
  Orc Section : .local.text._start
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB04:
    00000000: 	endbr64
    00000004: 	xorl	%ebp, %ebp
    00000006: 	movq	%rdx, %r9
    00000009: 	popq	%rsi
    0000000a: 	movq	%rsp, %rdx
    0000000d: 	andq	$-0x10, %rsp
    00000011: 	pushq	%rax
    00000012: 	pushq	%rsp
    00000013: 	xorl	%r8d, %r8d
    00000016: 	xorl	%ecx, %ecx
    00000018: 	leaq	main(%rip), %rdi
    0000001f: 	callq	*DATAat0x5ffd8(%rip) # Offset: 31
    00000025: 	hlt
DWARF CFI Instructions:
    <empty>
End of Function "_start"

Binary Function "deregister_tm_clones/1(*2)" after disassembly {
  All names   : deregister_tm_clones/1
                deregister_tm_clones/crtstuff.c/1
  Number      : 6
  State       : disassembled
  Address     : 0x1650
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x1650
  Section     : .text
  Orc Section : .local.text.deregister_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB05:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rax
    0000000e: 	cmpq	%rdi, %rax
    00000011: 	je	.Ltmp5 # Offset: 17
    00000013: 	movq	DATAat0x5ffe0(%rip), %rax
    0000001a: 	testq	%rax, %rax
    0000001d: 	je	.Ltmp5 # Offset: 29
    0000001f: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 31
    00000021: 	nopl	(%rax) # Size: 7
.Ltmp5:
    00000028: 	retq # Offset: 40
    00000029: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "deregister_tm_clones/1(*2)"

Binary Function "register_tm_clones/1(*2)" after disassembly {
  All names   : register_tm_clones/1
                register_tm_clones/crtstuff.c/1
  Number      : 7
  State       : disassembled
  Address     : 0x1680
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x1680
  Section     : .text
  Orc Section : .local.text.register_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB06:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rsi
    0000000e: 	subq	%rdi, %rsi
    00000011: 	movq	%rsi, %rax
    00000014: 	shrq	$0x3f, %rsi
    00000018: 	sarq	$0x3, %rax
    0000001c: 	addq	%rax, %rsi
    0000001f: 	sarq	%rsi
    00000022: 	je	.Ltmp6 # Offset: 34
    00000024: 	movq	DATAat0x5fff0(%rip), %rax
    0000002b: 	testq	%rax, %rax
    0000002e: 	je	.Ltmp6 # Offset: 46
    00000030: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 48
    00000032: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "register_tm_clones/1(*2)"

Binary Function "__do_global_dtors_aux/1(*2)" after disassembly {
  All names   : __do_global_dtors_aux/1
                __do_global_dtors_aux/crtstuff.c/1
  Number      : 8
  State       : disassembled
  Address     : 0x16c0
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x16c0
  Section     : .text
  Orc Section : .local.text.__do_global_dtors_aux/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB07:
    00000000: 	endbr64
    00000004: 	cmpb	$0x0, "completed.0/1"(%rip)
    0000000b: 	jne	.Ltmp7 # Offset: 11
    0000000d: 	pushq	%rbp
    0000000e: 	cmpq	$0x0, __cxa_finalize@GOT(%rip)
    00000016: 	movq	%rsp, %rbp
    00000019: 	je	.Ltmp8 # Offset: 25
    0000001b: 	movq	__dso_handle(%rip), %rdi
    00000022: 	callq	__cxa_finalize@PLT # Offset: 34
.Ltmp8:
    00000027: 	callq	"deregister_tm_clones/1" # Offset: 39
    0000002c: 	movb	$0x1, "completed.0/1"(%rip)
    00000033: 	popq	%rbp
    00000034: 	retq # Offset: 52
    00000035: 	nopl	(%rax) # Size: 3
.Ltmp7:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "__do_global_dtors_aux/1(*2)"

Binary Function "frame_dummy/1(*2)" after disassembly {
  All names   : frame_dummy/1
                frame_dummy/crtstuff.c/1
  Number      : 9
  State       : disassembled
  Address     : 0x1700
  Size        : 0x10
  MaxSize     : 0x10
  Offset      : 0x1700
  Section     : .text
  Orc Section : .local.text.frame_dummy/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB08:
    00000000: 	endbr64
    00000004: 	jmp	"register_tm_clones/1" # TAILCALL  # Offset: 4
    00000009: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "frame_dummy/1(*2)"

Binary Function "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1(*2)" after disassembly {
  All names   : _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1
                _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 10
  State       : disassembled
  Address     : 0x1710
  Size        : 0xd3
  MaxSize     : 0xe0
  Offset      : 0x1710
  Section     : .text
  Orc Section : .local.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB09:
    00000000: 	pushq	%r13
    00000002: 	pushq	%r12
    00000004: 	leaq	0x10(%rdi), %r12
    00000008: 	pushq	%rbp
    00000009: 	pushq	%rbx
    0000000a: 	subq	$0x18, %rsp
    0000000e: 	movq	%fs:0x28, %rax
    00000017: 	movq	%rax, 0x8(%rsp)
    0000001c: 	xorl	%eax, %eax
    0000001e: 	movq	%r12, (%rdi)
    00000021: 	testq	%rsi, %rsi
    00000024: 	je	.Ltmp9 # Offset: 36
    0000002a: 	movq	%rdi, %rbx
    0000002d: 	movq	%rsi, %rdi
    00000030: 	movq	%rsi, %rbp
    00000033: 	callq	strlen@PLT # Offset: 51
    00000038: 	movq	%rax, (%rsp)
    0000003c: 	movq	%rax, %r13
    0000003f: 	cmpq	$0xf, %rax
    00000043: 	ja	.Ltmp10 # Offset: 67
    00000045: 	cmpq	$0x1, %rax
    00000049: 	jne	.Ltmp11 # Offset: 73
    0000004b: 	movzbl	(%rbp), %edx
    0000004f: 	movb	%dl, 0x10(%rbx)
.Ltmp13:
    00000052: 	movq	%rax, 0x8(%rbx)
    00000056: 	movb	$0x0, (%r12,%rax)
    0000005b: 	movq	0x8(%rsp), %rax
    00000060: 	subq	%fs:0x28, %rax
    00000069: 	jne	.Ltmp12 # Offset: 105
    0000006b: 	addq	$0x18, %rsp
    0000006f: 	popq	%rbx
    00000070: 	popq	%rbp
    00000071: 	popq	%r12
    00000073: 	popq	%r13
    00000075: 	retq # Offset: 117
    00000076: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp11:
    00000080: 	testq	%rax, %rax
    00000083: 	je	.Ltmp13 # Offset: 131
    00000085: 	jmp	.Ltmp14 # Offset: 133
    00000087: 	nopw	(%rax,%rax) # Size: 9
.Ltmp10:
    00000090: 	movq	%rsp, %rsi
    00000093: 	xorl	%edx, %edx
    00000095: 	movq	%rbx, %rdi
    00000098: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 152
    0000009d: 	movq	%rax, (%rbx)
    000000a0: 	movq	%rax, %r12
    000000a3: 	movq	(%rsp), %rax
    000000a7: 	movq	%rax, 0x10(%rbx)
.Ltmp14:
    000000ab: 	movq	%r12, %rdi
    000000ae: 	movq	%r13, %rdx
    000000b1: 	movq	%rbp, %rsi
    000000b4: 	callq	memcpy@PLT # Offset: 180
    000000b9: 	movq	(%rsp), %rax
    000000bd: 	movq	(%rbx), %r12
    000000c0: 	jmp	.Ltmp13 # Offset: 192
.Ltmp12:
    000000c2: 	callq	__stack_chk_fail@PLT # Offset: 194
.Ltmp9:
    000000c7: 	leaq	DATAat0x57008(%rip), %rdi
    000000ce: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 206
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1(*2)"

Binary Function "_ZN9benchmark6scrandEm" after disassembly {
  Number      : 11
  State       : disassembled
  Address     : 0x17f0
  Size        : 0xc
  MaxSize     : 0x10
  Offset      : 0x17f0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark6scrandEm
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB010:
    00000000: 	endbr64
    00000004: 	movq	%rdi, "_ZN9benchmarkL12gCRand64SeedE/1"(%rip)
    0000000b: 	retq # Offset: 11
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark6scrandEm"

Binary Function "_ZN9benchmark7crand64Ev" after disassembly {
  Number      : 12
  State       : disassembled
  Address     : 0x1800
  Size        : 0x42
  MaxSize     : 0x50
  Offset      : 0x1800
  Section     : .text
  Orc Section : .local.text._ZN9benchmark7crand64Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB011:
    00000000: 	endbr64
    00000004: 	movq	"_ZN9benchmarkL12gCRand64SeedE/1"(%rip), %rdx
    0000000b: 	movabsq	$0x5851f42d4c957f2d, %rax
    00000015: 	imulq	%rax, %rdx
    00000019: 	movabsq	$0x14057b7ef767814f, %rax
    00000023: 	addq	%rax, %rdx
    00000026: 	movq	%rdx, %rax
    00000029: 	movq	%rdx, %rcx
    0000002c: 	movq	%rdx, "_ZN9benchmarkL12gCRand64SeedE/1"(%rip)
    00000033: 	shrq	$0x14, %rax
    00000037: 	shlq	$0x17, %rcx
    0000003b: 	xorq	%rcx, %rax
    0000003e: 	xorq	%rdx, %rax
    00000041: 	retq # Offset: 65
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark7crand64Ev"

Binary Function "_ZN9benchmark7crand32Ev" after disassembly {
  Number      : 13
  State       : disassembled
  Address     : 0x1850
  Size        : 0x41
  MaxSize     : 0x50
  Offset      : 0x1850
  Section     : .text
  Orc Section : .local.text._ZN9benchmark7crand32Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB012:
    00000000: 	endbr64
    00000004: 	movq	"_ZN9benchmarkL12gCRand64SeedE/1"(%rip), %rax
    0000000b: 	movabsq	$0x5851f42d4c957f2d, %rdx
    00000015: 	imulq	%rdx, %rax
    00000019: 	movabsq	$0x14057b7ef767814f, %rdx
    00000023: 	addq	%rdx, %rax
    00000026: 	movq	%rax, %rdx
    00000029: 	movq	%rax, %rcx
    0000002c: 	movq	%rax, "_ZN9benchmarkL12gCRand64SeedE/1"(%rip)
    00000033: 	shrq	$0x14, %rdx
    00000037: 	shlq	$0x17, %rcx
    0000003b: 	xorq	%rcx, %rdx
    0000003e: 	xorl	%edx, %eax
    00000040: 	retq # Offset: 64
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark7crand32Ev"

Binary Function "_Z13record_resultdPKc" after disassembly {
  Number      : 14
  State       : disassembled
  Address     : 0x18a0
  Size        : 0xa0
  MaxSize     : 0xa0
  Offset      : 0x18a0
  Section     : .text
  Orc Section : .local.text._Z13record_resultdPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB013:
    00000000: 	endbr64
    00000004: 	pushq	%rbx
    00000005: 	movq	%rdi, %rbx
    00000008: 	subq	$0x10, %rsp
    0000000c: 	movq	results(%rip), %rdi
    00000013: 	movl	allocated_results(%rip), %esi
    00000019: 	testq	%rdi, %rdi
    0000001c: 	je	.Ltmp15 # Offset: 28
    0000001e: 	movl	current_test(%rip), %eax
    00000024: 	cmpl	%esi, %eax
    00000026: 	jl	.Ltmp16 # Offset: 38
.Ltmp15:
    00000028: 	addl	$0xa, %esi
    0000002b: 	movsd	%xmm0, 0x8(%rsp)
    00000031: 	movl	%esi, allocated_results(%rip)
    00000037: 	movslq	%esi, %rsi
    0000003a: 	shlq	$0x4, %rsi
    0000003e: 	callq	realloc@PLT # Offset: 62
    00000043: 	movq	%rax, results(%rip)
    0000004a: 	movq	%rax, %rdi
    0000004d: 	testq	%rax, %rax
    00000050: 	je	.Ltmp17 # Offset: 80
    00000052: 	movl	current_test(%rip), %eax
    00000058: 	movsd	0x8(%rsp), %xmm0
.Ltmp16:
    0000005e: 	movslq	%eax, %rdx
    00000061: 	addl	$0x1, %eax
    00000064: 	shlq	$0x4, %rdx
    00000068: 	addq	%rdx, %rdi
    0000006b: 	movsd	%xmm0, (%rdi)
    0000006f: 	movq	%rbx, 0x8(%rdi)
    00000073: 	movl	%eax, current_test(%rip)
    00000079: 	addq	$0x10, %rsp
    0000007d: 	popq	%rbx
    0000007e: 	retq # Offset: 126
.Ltmp17:
    0000007f: 	movl	allocated_results(%rip), %edx
    00000085: 	movl	$0x1, %edi
    0000008a: 	leaq	DATAat0x57038(%rip), %rsi
    00000091: 	xorl	%eax, %eax
    00000093: 	callq	__printf_chk@PLT # Offset: 147
    00000098: 	orl	$-0x1, %edi
    0000009b: 	callq	exit@PLT # Offset: 155
DWARF CFI Instructions:
    <empty>
End of Function "_Z13record_resultdPKc"

Binary Function "_Z9summarizePKciiii" after disassembly {
  Number      : 15
  State       : disassembled
  Address     : 0x1940
  Size        : 0x325
  MaxSize     : 0x330
  Offset      : 0x1940
  Section     : .text
  Orc Section : .local.text._Z9summarizePKciiii
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB014:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x38, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movl	%r8d, 0x2c(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp18 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	movl	%esi, %r15d
    0000002b: 	movl	%edx, %r13d
    0000002e: 	jle	.Ltmp19 # Offset: 46
    00000034: 	movq	results(%rip), %rcx
    0000003b: 	subl	$0x1, %eax
    0000003e: 	movl	$0xc, %ebx
    00000043: 	shlq	$0x4, %rax
    00000047: 	leaq	0x8(%rcx), %r14
    0000004b: 	leaq	0x18(%rcx,%rax), %rbp
.Ltmp20:
    00000050: 	movq	(%r14), %rdi
    00000053: 	callq	strlen@PLT # Offset: 83
    00000058: 	cmpl	%eax, %ebx
    0000005a: 	cmovll	%eax, %ebx
    0000005d: 	addq	$0x10, %r14
    00000061: 	cmpq	%r14, %rbp
    00000064: 	jne	.Ltmp20 # Offset: 100
    00000066: 	leal	-0xc(%rbx), %edx
.Ltmp33:
    00000069: 	leaq	DATAat0x57182(%rip), %rbp
    00000070: 	leaq	DATAat0x57058(%rip), %rsi
    00000077: 	movl	$0x1, %edi
    0000007c: 	xorl	%eax, %eax
    0000007e: 	movq	%rbp, %rcx
    00000081: 	callq	__printf_chk@PLT # Offset: 129
    00000086: 	movl	%ebx, %edx
    00000088: 	movq	%rbp, %rcx
    0000008b: 	movl	$0x1, %edi
    00000090: 	leaq	DATAat0x57098(%rip), %rsi
    00000097: 	xorl	%eax, %eax
    00000099: 	callq	__printf_chk@PLT # Offset: 153
    0000009e: 	movl	current_test(%rip), %edx
    000000a4: 	testl	%edx, %edx
    000000a6: 	jle	.Ltmp21 # Offset: 166
    000000ac: 	pxor	%xmm0, %xmm0
    000000b0: 	pxor	%xmm1, %xmm1
    000000b4: 	xorl	%r14d, %r14d
    000000b7: 	movsd	DATAat0x57bd0(%rip), %xmm3
    000000bf: 	cvtsi2sd	%r15d, %xmm0
    000000c4: 	leaq	DATAat0x570c8(%rip), %rbp
    000000cb: 	cvtsi2sd	%r13d, %xmm1
    000000d0: 	mulsd	%xmm1, %xmm0
    000000d4: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000000dc: 	movsd	%xmm0, 0x20(%rsp)
    000000e2: 	jmp	.Ltmp22 # Offset: 226
    000000e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp26:
    000000f0: 	comisd	%xmm0, %xmm3
    000000f4: 	ja	.Ltmp23 # Offset: 244
    000000fa: 	movq	DATAat0x57bb8(%rip), %rdi
    00000101: 	movq	%rdi, %xmm2
.Ltmp27:
    00000106: 	comisd	%xmm0, %xmm3
    0000010a: 	movq	DATAat0x57bb8(%rip), %rsi
    00000111: 	movq	%rsi, %xmm1
    00000116: 	ja	.Ltmp24 # Offset: 278
    00000118: 	movsd	0x20(%rsp), %xmm1
    0000011e: 	divsd	%xmm0, %xmm1
.Ltmp24:
    00000122: 	movq	0x8(%rax), %r15
    00000126: 	movsd	%xmm0, 0x18(%rsp)
    0000012c: 	addq	$0x1, %r14
    00000130: 	movsd	%xmm1, 0x10(%rsp)
    00000136: 	movq	%r15, %rdi
    00000139: 	movsd	%xmm2, 0x8(%rsp)
    0000013f: 	callq	strlen@PLT # Offset: 319
    00000144: 	movsd	0x8(%rsp), %xmm2
    0000014a: 	movl	%ebx, %ecx
    0000014c: 	movq	%r15, %r9
    0000014f: 	movsd	0x10(%rsp), %xmm1
    00000155: 	subl	%eax, %ecx
    00000157: 	movl	$0x1, %edi
    0000015c: 	movl	%r13d, %edx
    0000015f: 	movsd	0x18(%rsp), %xmm0
    00000165: 	leaq	DATAat0x57167(%rip), %r8
    0000016c: 	movq	%rbp, %rsi
    0000016f: 	movl	$0x3, %eax
    00000174: 	callq	__printf_chk@PLT # Offset: 372
    00000179: 	movl	current_test(%rip), %eax
    0000017f: 	movq	DATAat0x57bd0(%rip), %rdi
    00000186: 	cmpl	%r14d, %eax
    00000189: 	movq	%rdi, %xmm3
    0000018e: 	jle	.Ltmp25 # Offset: 398
.Ltmp22:
    00000190: 	movq	results(%rip), %rax
    00000197: 	movq	%r14, %rcx
    0000019a: 	movl	%r14d, %r13d
    0000019d: 	shlq	$0x4, %rcx
    000001a1: 	movsd	(%rax), %xmm1
    000001a5: 	addq	%rcx, %rax
    000001a8: 	movsd	(%rax), %xmm0
    000001ac: 	comisd	%xmm1, %xmm3
    000001b0: 	ja	.Ltmp26 # Offset: 432
    000001b6: 	movapd	%xmm0, %xmm2
    000001ba: 	divsd	%xmm1, %xmm2
    000001be: 	jmp	.Ltmp27 # Offset: 446
    000001c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp23:
    000001c8: 	movq	DATAat0x57bc0(%rip), %rsi
    000001cf: 	movq	DATAat0x57bb8(%rip), %rdx
    000001d6: 	movq	%rsi, %xmm2
    000001db: 	movq	%rdx, %xmm1
    000001e0: 	jmp	.Ltmp24 # Offset: 480
    000001e5: 	nopl	(%rax) # Size: 3
.Ltmp25:
    000001e8: 	testl	%eax, %eax
    000001ea: 	jle	.Ltmp21 # Offset: 490
    000001f0: 	movq	results(%rip), %rdx
    000001f7: 	leal	-0x1(%rax), %ecx
    000001fa: 	pxor	%xmm1, %xmm1
    000001fe: 	shlq	$0x4, %rcx
    00000202: 	movapd	%xmm1, %xmm0
    00000206: 	leaq	0x10(%rdx), %rax
    0000020a: 	addq	%rax, %rcx
    0000020d: 	jmp	.Ltmp28 # Offset: 525
    0000020f: 	nop # Size: 1
.Ltmp29:
    00000210: 	addq	$0x10, %rax
.Ltmp28:
    00000214: 	addsd	(%rdx), %xmm0
    00000218: 	movq	%rax, %rdx
    0000021b: 	cmpq	%rax, %rcx
    0000021e: 	jne	.Ltmp29 # Offset: 542
.Ltmp34:
    00000220: 	movq	%r12, %rdx
    00000223: 	movl	$0x1, %edi
    00000228: 	movl	$0x1, %eax
    0000022d: 	movsd	%xmm1, 0x8(%rsp)
    00000233: 	leaq	DATAat0x570f8(%rip), %rsi
    0000023a: 	callq	__printf_chk@PLT # Offset: 570
    0000023f: 	movl	0x2c(%rsp), %eax
    00000243: 	movl	current_test(%rip), %ebp
    00000249: 	testl	%eax, %eax
    0000024b: 	je	.Ltmp30 # Offset: 587
    0000024d: 	cmpl	$0x1, %ebp
    00000250: 	jg	.Ltmp31 # Offset: 592
.Ltmp30:
    00000252: 	movl	$0x0, current_test(%rip)
.Ltmp18:
    0000025c: 	addq	$0x38, %rsp
    00000260: 	popq	%rbx
    00000261: 	popq	%rbp
    00000262: 	popq	%r12
    00000264: 	popq	%r13
    00000266: 	popq	%r14
    00000268: 	popq	%r15
    0000026a: 	retq # Offset: 618
    0000026b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp31:
    00000270: 	movq	results(%rip), %rbx
    00000277: 	movsd	0x8(%rsp), %xmm1
    0000027d: 	movl	$0x1, %r13d
    00000283: 	movsd	(%rbx), %xmm5
    00000287: 	addq	$0x10, %rbx
    0000028b: 	movsd	%xmm5, 0x10(%rsp)
    00000291: 	nopl	(%rax) # Size: 7
.Ltmp32:
    00000298: 	movsd	(%rbx), %xmm0
    0000029c: 	movsd	%xmm1, 0x8(%rsp)
    000002a2: 	addl	$0x1, %r13d
    000002a6: 	addq	$0x10, %rbx
    000002aa: 	divsd	0x10(%rsp), %xmm0
    000002b0: 	callq	log@PLT # Offset: 688
    000002b5: 	movsd	0x8(%rsp), %xmm1
    000002bb: 	addsd	%xmm0, %xmm1
    000002bf: 	cmpl	%r13d, %ebp
    000002c2: 	jg	.Ltmp32 # Offset: 706
    000002c4: 	subl	$0x1, %ebp
    000002c7: 	pxor	%xmm0, %xmm0
    000002cb: 	cvtsi2sd	%ebp, %xmm0
    000002cf: 	divsd	%xmm0, %xmm1
    000002d3: 	movapd	%xmm1, %xmm0
    000002d7: 	callq	exp@PLT # Offset: 727
    000002dc: 	movq	%r12, %rdx
    000002df: 	movl	$0x1, %edi
    000002e4: 	leaq	DATAat0x57142(%rip), %rsi
    000002eb: 	movl	$0x1, %eax
    000002f0: 	callq	__printf_chk@PLT # Offset: 752
    000002f5: 	movl	$0x0, current_test(%rip)
    000002ff: 	jmp	.Ltmp18 # Offset: 767
    00000304: 	nopl	(%rax) # Size: 4
.Ltmp19:
    00000308: 	xorl	%edx, %edx
    0000030a: 	movl	$0xc, %ebx
    0000030f: 	jmp	.Ltmp33 # Offset: 783
    00000314: 	nopl	(%rax) # Size: 4
.Ltmp21:
    00000318: 	pxor	%xmm1, %xmm1
    0000031c: 	movapd	%xmm1, %xmm0
    00000320: 	jmp	.Ltmp34 # Offset: 800
DWARF CFI Instructions:
    <empty>
End of Function "_Z9summarizePKciiii"

Binary Function "_Z17summarize_simplefP8_IO_FILEPKc" after disassembly {
  Number      : 16
  State       : disassembled
  Address     : 0x1c70
  Size        : 0x1a6
  MaxSize     : 0x1b0
  Offset      : 0x1c70
  Section     : .text
  Orc Section : .local.text._Z17summarize_simplefP8_IO_FILEPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB015:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x18, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movq	%rsi, 0x8(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp35 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	jle	.Ltmp36 # Offset: 40
    0000002e: 	movq	results(%rip), %rdx
    00000035: 	subl	$0x1, %eax
    00000038: 	movl	$0xc, %ebp
    0000003d: 	shlq	$0x4, %rax
    00000041: 	leaq	0x8(%rdx), %r13
    00000045: 	leaq	0x18(%rdx,%rax), %rbx
    0000004a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp37:
    00000050: 	movq	(%r13), %rdi
    00000054: 	callq	strlen@PLT # Offset: 84
    00000059: 	cmpl	%eax, %ebp
    0000005b: 	cmovll	%eax, %ebp
    0000005e: 	addq	$0x10, %r13
    00000062: 	cmpq	%r13, %rbx
    00000065: 	jne	.Ltmp37 # Offset: 101
    00000067: 	leal	-0xc(%rbp), %ecx
.Ltmp42:
    0000006a: 	leaq	DATAat0x57182(%rip), %r8
    00000071: 	movl	$0x1, %esi
    00000076: 	xorl	%eax, %eax
    00000078: 	xorl	%ebx, %ebx
    0000007a: 	leaq	DATAat0x57120(%rip), %rdx
    00000081: 	movq	%r12, %rdi
    00000084: 	leaq	DATAat0x57168(%rip), %r14
    0000008b: 	callq	__fprintf_chk@PLT # Offset: 139
    00000090: 	movl	$0x1, %esi
    00000095: 	movl	%ebp, %ecx
    00000097: 	movq	%r12, %rdi
    0000009a: 	leaq	DATAat0x57182(%rip), %r8
    000000a1: 	leaq	DATAat0x57156(%rip), %rdx
    000000a8: 	xorl	%eax, %eax
    000000aa: 	callq	__fprintf_chk@PLT # Offset: 170
    000000af: 	movl	current_test(%rip), %esi
    000000b5: 	testl	%esi, %esi
    000000b7: 	jle	.Ltmp38 # Offset: 183
    000000bd: 	nopl	(%rax) # Size: 3
.Ltmp39:
    000000c0: 	movq	%rbx, %rdx
    000000c3: 	shlq	$0x4, %rdx
    000000c7: 	addq	results(%rip), %rdx
    000000ce: 	movq	0x8(%rdx), %r13
    000000d2: 	movq	%rdx, %r15
    000000d5: 	movq	%r13, %rdi
    000000d8: 	callq	strlen@PLT # Offset: 216
    000000dd: 	subq	$0x8, %rsp
    000000e1: 	movsd	(%r15), %xmm0
    000000e6: 	movl	%ebx, %ecx
    000000e8: 	pushq	%r13
    000000ea: 	movl	%ebp, %r8d
    000000ed: 	movq	%r14, %rdx
    000000f0: 	leaq	DATAat0x57167(%rip), %r9
    000000f7: 	subl	%eax, %r8d
    000000fa: 	movl	$0x1, %esi
    000000ff: 	movq	%r12, %rdi
    00000102: 	movl	$0x1, %eax
    00000107: 	addq	$0x1, %rbx
    0000010b: 	callq	__fprintf_chk@PLT # Offset: 267
    00000110: 	movl	current_test(%rip), %eax
    00000116: 	popq	%rdx
    00000117: 	popq	%rcx
    00000118: 	cmpl	%ebx, %eax
    0000011a: 	jg	.Ltmp39 # Offset: 282
    0000011c: 	testl	%eax, %eax
    0000011e: 	jle	.Ltmp38 # Offset: 286
    00000124: 	movq	results(%rip), %rdx
    0000012b: 	leal	-0x1(%rax), %ecx
    0000012e: 	pxor	%xmm0, %xmm0
    00000132: 	shlq	$0x4, %rcx
    00000136: 	leaq	0x10(%rdx), %rax
    0000013a: 	addq	%rax, %rcx
    0000013d: 	jmp	.Ltmp40 # Offset: 317
    0000013f: 	nop # Size: 1
.Ltmp41:
    00000140: 	addq	$0x10, %rax
.Ltmp40:
    00000144: 	addsd	(%rdx), %xmm0
    00000148: 	movq	%rax, %rdx
    0000014b: 	cmpq	%rax, %rcx
    0000014e: 	jne	.Ltmp41 # Offset: 334
.Ltmp43:
    00000150: 	movq	0x8(%rsp), %rcx
    00000155: 	movl	$0x1, %esi
    0000015a: 	movq	%r12, %rdi
    0000015d: 	movl	$0x1, %eax
    00000162: 	leaq	DATAat0x570f8(%rip), %rdx
    00000169: 	callq	__fprintf_chk@PLT # Offset: 361
    0000016e: 	movl	$0x0, current_test(%rip)
.Ltmp35:
    00000178: 	addq	$0x18, %rsp
    0000017c: 	popq	%rbx
    0000017d: 	popq	%rbp
    0000017e: 	popq	%r12
    00000180: 	popq	%r13
    00000182: 	popq	%r14
    00000184: 	popq	%r15
    00000186: 	retq # Offset: 390
    00000187: 	nopw	(%rax,%rax) # Size: 9
.Ltmp36:
    00000190: 	xorl	%ecx, %ecx
    00000192: 	movl	$0xc, %ebp
    00000197: 	jmp	.Ltmp42 # Offset: 407
    0000019c: 	nopl	(%rax) # Size: 4
.Ltmp38:
    000001a0: 	pxor	%xmm0, %xmm0
    000001a4: 	jmp	.Ltmp43 # Offset: 420
DWARF CFI Instructions:
    <empty>
End of Function "_Z17summarize_simplefP8_IO_FILEPKc"

Binary Function "_Z11start_timerv" after disassembly {
  Number      : 17
  State       : disassembled
  Address     : 0x1e20
  Size        : 0x19
  MaxSize     : 0x20
  Offset      : 0x1e20
  Section     : .text
  Orc Section : .local.text._Z11start_timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB016:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	movq	%rax, start_time(%rip)
    00000014: 	addq	$0x8, %rsp
    00000018: 	retq # Offset: 24
DWARF CFI Instructions:
    <empty>
End of Function "_Z11start_timerv"

Binary Function "_Z5timerv" after disassembly {
  Number      : 18
  State       : disassembled
  Address     : 0x1e40
  Size        : 0x31
  MaxSize     : 0x40
  Offset      : 0x1e40
  Section     : .text
  Orc Section : .local.text._Z5timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB017:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	pxor	%xmm0, %xmm0
    00000011: 	movq	%rax, end_time(%rip)
    00000018: 	subq	start_time(%rip), %rax
    0000001f: 	cvtsi2sd	%rax, %xmm0
    00000024: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000002c: 	addq	$0x8, %rsp
    00000030: 	retq # Offset: 48
DWARF CFI Instructions:
    <empty>
End of Function "_Z5timerv"

Binary Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 19
  State       : disassembled
  Address     : 0x1e80
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1e80
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB018:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f38, %edx
    00000017: 	movl	$0x746e6975, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 20
  State       : disassembled
  Address     : 0x1eb0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1eb0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB019:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3631746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 21
  State       : disassembled
  Address     : 0x1ee0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1ee0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB020:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3233746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 22
  State       : disassembled
  Address     : 0x1f10
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1f10
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB021:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3436746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 23
  State       : disassembled
  Address     : 0x1f40
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1f40
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB022:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 24
  State       : disassembled
  Address     : 0x1f70
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1f70
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB023:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 25
  State       : disassembled
  Address     : 0x1fa0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1fa0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB024:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f36, %edx
    00000017: 	movl	$0x31746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 26
  State       : disassembled
  Address     : 0x1fd0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1fd0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB025:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f32, %edx
    00000017: 	movl	$0x33746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 27
  State       : disassembled
  Address     : 0x2000
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x2000
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB026:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f34, %edx
    00000017: 	movl	$0x36746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 28
  State       : disassembled
  Address     : 0x2030
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x2030
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB027:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x14(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x616f6c66, 0x10(%rdi)
    00000019: 	movq	$0x5, 0x8(%rdi)
    00000021: 	movb	$0x0, 0x15(%rdi)
    00000025: 	retq # Offset: 37
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 29
  State       : disassembled
  Address     : 0x2060
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x2060
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB028:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x62756f64, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x656c, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 30
  State       : disassembled
  Address     : 0x2090
  Size        : 0x36
  MaxSize     : 0x40
  Offset      : 0x2090
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB029:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x65, 0x1a(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movl	$0x6c62, %edx
    00000021: 	movq	%rcx, 0x10(%rdi)
    00000025: 	movw	%dx, 0x18(%rdi)
    00000029: 	movq	$0xb, 0x8(%rdi)
    00000031: 	movb	$0x0, 0x1b(%rdi)
    00000035: 	retq # Offset: 53
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 31
  State       : disassembled
  Address     : 0x20d0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x20d0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB030:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f38746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 32
  State       : disassembled
  Address     : 0x2100
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x2100
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB031:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3631746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 33
  State       : disassembled
  Address     : 0x2130
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x2130
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB032:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3233746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 34
  State       : disassembled
  Address     : 0x2160
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x2160
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB033:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3436746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 35
  State       : disassembled
  Address     : 0x2190
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x2190
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB034:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x745f, %edx
    00000017: 	movl	$0x38746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 36
  State       : disassembled
  Address     : 0x21c0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x21c0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB035:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3631746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 37
  State       : disassembled
  Address     : 0x21f0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x21f0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB036:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3233746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 38
  State       : disassembled
  Address     : 0x2220
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2220
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB037:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3436746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 39
  State       : disassembled
  Address     : 0x2250
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x2250
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB038:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x616f6c66, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x2a74, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 40
  State       : disassembled
  Address     : 0x2280
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x2280
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB039:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x656c, %edx
    00000017: 	movl	$0x62756f64, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 41
  State       : disassembled
  Address     : 0x22b0
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x22b0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB040:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x0, 0x1c(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movl	$0x2a656c62, 0x18(%rdi)
    00000027: 	movq	$0xc, 0x8(%rdi)
    0000002f: 	retq # Offset: 47
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)" after disassembly {
  All names   : _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
                _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
  Number      : 42
  State       : disassembled
  Address     : 0x22e0
  Size        : 0x1f7
  MaxSize     : 0x200
  Offset      : 0x22e0
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB041:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x28, %rsp
    00000015: 	movq	0x20(%rdi), %rcx
    00000019: 	movq	0x30(%rdi), %rax
    0000001d: 	movq	0x38(%rdi), %r13
    00000021: 	movq	0x10(%rdi), %rbp
    00000025: 	movq	%rcx, 0x10(%rsp)
    0000002a: 	movq	0x28(%rdi), %rcx
    0000002e: 	movq	%rax, 0x8(%rsp)
    00000033: 	movq	0x48(%rdi), %rax
    00000037: 	leaq	0x8(%rcx), %r12
    0000003b: 	movq	%rcx, 0x18(%rsp)
    00000040: 	movq	%rax, (%rsp)
    00000044: 	cmpq	%r12, %rax
    00000047: 	jbe	.Ltmp44 # Offset: 71
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp47:
    00000050: 	movq	(%r12), %r15
    00000054: 	leaq	0x200(%r15), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp46:
    00000060: 	movq	(%r15), %rdi
    00000063: 	leaq	0x10(%r15), %rdx
    00000067: 	cmpq	%rdx, %rdi
    0000006a: 	je	.Ltmp45 # Offset: 106
    00000070: 	movq	0x10(%r15), %rax
    00000074: 	addq	$0x20, %r15
    00000078: 	leaq	0x1(%rax), %rsi
    0000007c: 	callq	_ZdlPvm@PLT # Offset: 124
    00000081: 	cmpq	%r15, %rbx
    00000084: 	jne	.Ltmp46 # Offset: 132
    00000086: 	addq	$0x8, %r12
    0000008a: 	cmpq	%r12, (%rsp)
    0000008e: 	ja	.Ltmp47 # Offset: 142
.Ltmp44:
    00000090: 	movq	(%rsp), %rcx
    00000094: 	cmpq	%rcx, 0x18(%rsp)
    00000099: 	je	.Ltmp48 # Offset: 153
    0000009f: 	cmpq	0x10(%rsp), %rbp
    000000a4: 	je	.Ltmp49 # Offset: 164
.Ltmp52:
    000000a6: 	movq	(%rbp), %rdi
    000000aa: 	leaq	0x10(%rbp), %rax
    000000ae: 	cmpq	%rax, %rdi
    000000b1: 	je	.Ltmp50 # Offset: 177
.Ltmp51:
    000000b3: 	movq	0x10(%rbp), %rax
    000000b7: 	addq	$0x20, %rbp
    000000bb: 	leaq	0x1(%rax), %rsi
    000000bf: 	callq	_ZdlPvm@PLT # Offset: 191
    000000c4: 	cmpq	%rbp, 0x10(%rsp)
    000000c9: 	je	.Ltmp49 # Offset: 201
    000000cb: 	movq	(%rbp), %rdi
    000000cf: 	leaq	0x10(%rbp), %rax
    000000d3: 	cmpq	%rax, %rdi
    000000d6: 	jne	.Ltmp51 # Offset: 214
.Ltmp50:
    000000d8: 	addq	$0x20, %rbp
    000000dc: 	cmpq	%rbp, 0x10(%rsp)
    000000e1: 	jne	.Ltmp52 # Offset: 225
    000000e3: 	cmpq	%r13, 0x8(%rsp)
    000000e8: 	je	.Ltmp53 # Offset: 232
    000000ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp55:
    000000f0: 	movq	(%r13), %rdi
    000000f4: 	leaq	0x10(%r13), %rax
    000000f8: 	cmpq	%rax, %rdi
    000000fb: 	je	.Ltmp54 # Offset: 251
    000000fd: 	movq	0x10(%r13), %rax
    00000101: 	leaq	0x1(%rax), %rsi
    00000105: 	callq	_ZdlPvm@PLT # Offset: 261
.Ltmp54:
    0000010a: 	addq	$0x20, %r13
.Ltmp49:
    0000010e: 	cmpq	%r13, 0x8(%rsp)
    00000113: 	jne	.Ltmp55 # Offset: 275
.Ltmp53:
    00000115: 	movq	(%r14), %rdi
    00000118: 	testq	%rdi, %rdi
    0000011b: 	je	.Ltmp56 # Offset: 283
.Ltmp62:
    00000121: 	movq	0x48(%r14), %rax
    00000125: 	movq	0x28(%r14), %rbx
    00000129: 	leaq	0x8(%rax), %rbp
    0000012d: 	cmpq	%rbx, %rbp
    00000130: 	jbe	.Ltmp57 # Offset: 304
    00000132: 	nopw	(%rax,%rax) # Size: 6
.Ltmp58:
    00000138: 	movq	(%rbx), %rdi
    0000013b: 	movl	$0x200, %esi
    00000140: 	addq	$0x8, %rbx
    00000144: 	callq	_ZdlPvm@PLT # Offset: 324
    00000149: 	cmpq	%rbx, %rbp
    0000014c: 	ja	.Ltmp58 # Offset: 332
    0000014e: 	movq	(%r14), %rdi
.Ltmp57:
    00000151: 	movq	0x8(%r14), %rsi
    00000155: 	addq	$0x28, %rsp
    00000159: 	popq	%rbx
    0000015a: 	popq	%rbp
    0000015b: 	shlq	$0x3, %rsi
    0000015f: 	popq	%r12
    00000161: 	popq	%r13
    00000163: 	popq	%r14
    00000165: 	popq	%r15
    00000167: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 359
    0000016c: 	nopl	(%rax) # Size: 4
.Ltmp45:
    00000170: 	addq	$0x20, %r15
    00000174: 	cmpq	%r15, %rbx
    00000177: 	jne	.Ltmp46 # Offset: 375
    0000017d: 	addq	$0x8, %r12
    00000181: 	cmpq	%r12, (%rsp)
    00000185: 	ja	.Ltmp47 # Offset: 389
    0000018b: 	jmp	.Ltmp44 # Offset: 395
.Ltmp48:
    00000190: 	cmpq	0x8(%rsp), %rbp
    00000195: 	je	.Ltmp53 # Offset: 405
.Ltmp61:
    0000019b: 	movq	(%rbp), %rdi
    0000019f: 	leaq	0x10(%rbp), %rax
    000001a3: 	cmpq	%rax, %rdi
    000001a6: 	je	.Ltmp59 # Offset: 422
.Ltmp60:
    000001a8: 	movq	0x10(%rbp), %rax
    000001ac: 	addq	$0x20, %rbp
    000001b0: 	leaq	0x1(%rax), %rsi
    000001b4: 	callq	_ZdlPvm@PLT # Offset: 436
    000001b9: 	cmpq	%rbp, 0x8(%rsp)
    000001be: 	je	.Ltmp53 # Offset: 446
    000001c4: 	movq	(%rbp), %rdi
    000001c8: 	leaq	0x10(%rbp), %rax
    000001cc: 	cmpq	%rax, %rdi
    000001cf: 	jne	.Ltmp60 # Offset: 463
.Ltmp59:
    000001d1: 	addq	$0x20, %rbp
    000001d5: 	cmpq	%rbp, 0x8(%rsp)
    000001da: 	jne	.Ltmp61 # Offset: 474
    000001dc: 	movq	(%r14), %rdi
    000001df: 	testq	%rdi, %rdi
    000001e2: 	jne	.Ltmp62 # Offset: 482
.Ltmp56:
    000001e8: 	addq	$0x28, %rsp
    000001ec: 	popq	%rbx
    000001ed: 	popq	%rbp
    000001ee: 	popq	%r12
    000001f0: 	popq	%r13
    000001f2: 	popq	%r14
    000001f4: 	popq	%r15
    000001f6: 	retq # Offset: 502
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)"

Binary Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_" after disassembly {
  Number      : 43
  State       : disassembled
  Address     : 0x24e0
  Size        : 0x145
  MaxSize     : 0x150
  Offset      : 0x24e0
  Section     : .text
  Orc Section : .local.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB042:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rdi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdx, %rbp
    00000011: 	pushq	%rbx
    00000012: 	leaq	0x10(%rdi), %rbx
    00000016: 	subq	$0x10, %rsp
    0000001a: 	movq	0x8(%rsi), %r13
    0000001e: 	movq	%fs:0x28, %rax
    00000027: 	movq	%rax, 0x8(%rsp)
    0000002c: 	xorl	%eax, %eax
    0000002e: 	movq	%rbx, (%rdi)
    00000031: 	movq	(%rsi), %r14
    00000034: 	movq	%r14, %rax
    00000037: 	addq	%r13, %rax
    0000003a: 	je	.Ltmp63 # Offset: 58
    0000003c: 	testq	%r14, %r14
    0000003f: 	je	.Ltmp64 # Offset: 63
.Ltmp63:
    00000045: 	movq	%r13, (%rsp)
    00000049: 	cmpq	$0xf, %r13
    0000004d: 	ja	.Ltmp65 # Offset: 77
    0000004f: 	cmpq	$0x1, %r13
    00000053: 	jne	.Ltmp66 # Offset: 83
    00000055: 	movzbl	(%r14), %eax
    00000059: 	movb	%al, 0x10(%r12)
    0000005e: 	movq	%rbx, %rax
.Ltmp70:
    00000061: 	movq	%r13, 0x8(%r12)
    00000066: 	movq	%rbp, %rdi
    00000069: 	movb	$0x0, (%rax,%r13)
    0000006e: 	callq	strlen@PLT # Offset: 110
    00000073: 	movq	%rax, %rdx
    00000076: 	movabsq	$0x3fffffffffffffff, %rax
    00000080: 	subq	0x8(%r12), %rax
    00000085: 	cmpq	%rax, %rdx
    00000088: 	ja	.Ltmp67 # Offset: 136
    0000008a: 	movq	%rbp, %rsi
    0000008d: 	movq	%r12, %rdi
    00000090: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 144
    00000095: 	movq	0x8(%rsp), %rax
    0000009a: 	subq	%fs:0x28, %rax
    000000a3: 	jne	.Ltmp68 # Offset: 163
    000000a5: 	addq	$0x10, %rsp
    000000a9: 	movq	%r12, %rax
    000000ac: 	popq	%rbx
    000000ad: 	popq	%rbp
    000000ae: 	popq	%r12
    000000b0: 	popq	%r13
    000000b2: 	popq	%r14
    000000b4: 	retq # Offset: 180
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp66:
    000000b8: 	testq	%r13, %r13
    000000bb: 	jne	.Ltmp69 # Offset: 187
    000000bd: 	movq	%rbx, %rax
    000000c0: 	jmp	.Ltmp70 # Offset: 192
    000000c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp65:
    000000c8: 	movq	%r12, %rdi
    000000cb: 	movq	%rsp, %rsi
    000000ce: 	xorl	%edx, %edx
    000000d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 208
    000000d5: 	movq	%rax, (%r12)
    000000d9: 	movq	%rax, %rdi
    000000dc: 	movq	(%rsp), %rax
    000000e0: 	movq	%rax, 0x10(%r12)
.Ltmp71:
    000000e5: 	movq	%r13, %rdx
    000000e8: 	movq	%r14, %rsi
    000000eb: 	callq	memcpy@PLT # Offset: 235
    000000f0: 	movq	(%rsp), %r13
    000000f4: 	movq	(%r12), %rax
    000000f8: 	jmp	.Ltmp70 # Offset: 248
.Ltmp64:
    000000fd: 	leaq	DATAat0x57008(%rip), %rdi
    00000104: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 260
.Ltmp67:
    00000109: 	leaq	DATAat0x57184(%rip), %rdi
    00000110: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 272
.Ltmp68:
    00000115: 	callq	__stack_chk_fail@PLT # Offset: 277
.Ltmp69:
    0000011a: 	movq	%rbx, %rdi
    0000011d: 	jmp	.Ltmp71 # Offset: 285
    0000011f: 	endbr64
    00000123: 	movq	%rax, %rbp
    00000126: 	movq	(%r12), %rdi
    0000012a: 	cmpq	%rdi, %rbx
    0000012d: 	je	.Ltmp72 # Offset: 301
    0000012f: 	movq	0x10(%r12), %rsi
    00000134: 	addq	$0x1, %rsi
    00000138: 	callq	_ZdlPvm@PLT # Offset: 312
.Ltmp72:
    0000013d: 	movq	%rbp, %rdi
    00000140: 	callq	_Unwind_Resume@PLT # Offset: 320
DWARF CFI Instructions:
    <empty>
End of Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E" after disassembly {
  Number      : 44
  State       : disassembled
  Address     : 0x2630
  Size        : 0x21d
  MaxSize     : 0x220
  Offset      : 0x2630
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB043:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rsi, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x38, %rsp
    00000015: 	movq	0x30(%rdi), %rcx
    00000019: 	movq	0x48(%rdi), %rax
    0000001d: 	movq	0x38(%rdi), %r13
    00000021: 	movq	(%rsi), %rbp
    00000024: 	movq	%rdi, 0x20(%rsp)
    00000029: 	movq	%rcx, 0x10(%rsp)
    0000002e: 	movq	0x10(%rsi), %rcx
    00000032: 	movq	%rax, (%rsp)
    00000036: 	movq	%rcx, 0x18(%rsp)
    0000003b: 	movq	0x18(%rsi), %rcx
    0000003f: 	leaq	0x8(%rcx), %r12
    00000043: 	movq	%rcx, 0x28(%rsp)
    00000048: 	cmpq	%r12, %rax
    0000004b: 	jbe	.Ltmp73 # Offset: 75
    0000004d: 	nopl	(%rax) # Size: 3
.Ltmp76:
    00000050: 	movq	(%r12), %r14
    00000054: 	leaq	0x200(%r14), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp75:
    00000060: 	movq	(%r14), %rdi
    00000063: 	leaq	0x10(%r14), %rdx
    00000067: 	cmpq	%rdx, %rdi
    0000006a: 	je	.Ltmp74 # Offset: 106
    00000070: 	movq	0x10(%r14), %rax
    00000074: 	addq	$0x20, %r14
    00000078: 	leaq	0x1(%rax), %rsi
    0000007c: 	callq	_ZdlPvm@PLT # Offset: 124
    00000081: 	cmpq	%rbx, %r14
    00000084: 	jne	.Ltmp75 # Offset: 132
    00000086: 	addq	$0x8, %r12
    0000008a: 	cmpq	%r12, (%rsp)
    0000008e: 	ja	.Ltmp76 # Offset: 142
.Ltmp73:
    00000090: 	movq	(%rsp), %rcx
    00000094: 	cmpq	%rcx, 0x28(%rsp)
    00000099: 	je	.Ltmp77 # Offset: 153
    0000009f: 	cmpq	0x18(%rsp), %rbp
    000000a4: 	je	.Ltmp78 # Offset: 164
    000000a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp80:
    000000b0: 	movq	(%rbp), %rdi
    000000b4: 	leaq	0x10(%rbp), %rax
    000000b8: 	cmpq	%rax, %rdi
    000000bb: 	je	.Ltmp79 # Offset: 187
    000000c1: 	movq	0x10(%rbp), %rax
    000000c5: 	addq	$0x20, %rbp
    000000c9: 	leaq	0x1(%rax), %rsi
    000000cd: 	callq	_ZdlPvm@PLT # Offset: 205
    000000d2: 	cmpq	%rbp, 0x18(%rsp)
    000000d7: 	jne	.Ltmp80 # Offset: 215
.Ltmp78:
    000000d9: 	cmpq	%r13, 0x10(%rsp)
    000000de: 	je	.Ltmp81 # Offset: 222
.Ltmp83:
    000000e0: 	movq	(%r13), %rdi
    000000e4: 	leaq	0x10(%r13), %rax
    000000e8: 	cmpq	%rax, %rdi
    000000eb: 	je	.Ltmp82 # Offset: 235
    000000f1: 	movq	0x10(%r13), %rax
    000000f5: 	addq	$0x20, %r13
    000000f9: 	leaq	0x1(%rax), %rsi
    000000fd: 	callq	_ZdlPvm@PLT # Offset: 253
    00000102: 	cmpq	%r13, 0x10(%rsp)
    00000107: 	jne	.Ltmp83 # Offset: 263
.Ltmp81:
    00000109: 	movq	0x20(%rsp), %rax
    0000010e: 	movq	0x48(%rax), %rax
    00000112: 	movq	%rax, (%rsp)
    00000116: 	leaq	0x8(%rax), %rbp
    0000011a: 	movq	0x18(%r15), %rax
    0000011e: 	leaq	0x8(%rax), %rbx
    00000122: 	cmpq	%rbx, %rbp
    00000125: 	jbe	.Ltmp84 # Offset: 293
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp85:
    00000130: 	movq	(%rbx), %rdi
    00000133: 	movl	$0x200, %esi
    00000138: 	addq	$0x8, %rbx
    0000013c: 	callq	_ZdlPvm@PLT # Offset: 316
    00000141: 	cmpq	%rbx, %rbp
    00000144: 	ja	.Ltmp85 # Offset: 324
.Ltmp84:
    00000146: 	movdqu	(%r15), %xmm0
    0000014b: 	movq	0x20(%rsp), %rax
    00000150: 	movups	%xmm0, 0x30(%rax)
    00000154: 	movdqu	0x10(%r15), %xmm1
    0000015a: 	movaps	%xmm1, (%rsp)
    0000015e: 	movups	%xmm1, 0x40(%rax)
    00000162: 	addq	$0x38, %rsp
    00000166: 	popq	%rbx
    00000167: 	popq	%rbp
    00000168: 	popq	%r12
    0000016a: 	popq	%r13
    0000016c: 	popq	%r14
    0000016e: 	popq	%r15
    00000170: 	retq # Offset: 368
    00000171: 	nopl	(%rax) # Size: 7
.Ltmp74:
    00000178: 	addq	$0x20, %r14
    0000017c: 	cmpq	%r14, %rbx
    0000017f: 	jne	.Ltmp75 # Offset: 383
    00000185: 	addq	$0x8, %r12
    00000189: 	cmpq	%r12, (%rsp)
    0000018d: 	ja	.Ltmp76 # Offset: 397
    00000193: 	jmp	.Ltmp73 # Offset: 403
    00000198: 	nopl	(%rax,%rax) # Size: 8
.Ltmp82:
    000001a0: 	addq	$0x20, %r13
    000001a4: 	cmpq	%r13, 0x10(%rsp)
    000001a9: 	jne	.Ltmp83 # Offset: 425
    000001af: 	jmp	.Ltmp81 # Offset: 431
    000001b4: 	nopl	(%rax) # Size: 4
.Ltmp79:
    000001b8: 	addq	$0x20, %rbp
    000001bc: 	cmpq	%rbp, 0x18(%rsp)
    000001c1: 	jne	.Ltmp80 # Offset: 449
    000001c7: 	jmp	.Ltmp78 # Offset: 455
.Ltmp77:
    000001cc: 	cmpq	0x10(%rsp), %rbp
    000001d1: 	je	.Ltmp81 # Offset: 465
.Ltmp88:
    000001d7: 	movq	(%rbp), %rdi
    000001db: 	leaq	0x10(%rbp), %rax
    000001df: 	cmpq	%rax, %rdi
    000001e2: 	je	.Ltmp86 # Offset: 482
.Ltmp87:
    000001e4: 	movq	0x10(%rbp), %rax
    000001e8: 	addq	$0x20, %rbp
    000001ec: 	leaq	0x1(%rax), %rsi
    000001f0: 	callq	_ZdlPvm@PLT # Offset: 496
    000001f5: 	cmpq	%rbp, 0x10(%rsp)
    000001fa: 	je	.Ltmp81 # Offset: 506
    00000200: 	movq	(%rbp), %rdi
    00000204: 	leaq	0x10(%rbp), %rax
    00000208: 	cmpq	%rax, %rdi
    0000020b: 	jne	.Ltmp87 # Offset: 523
.Ltmp86:
    0000020d: 	addq	$0x20, %rbp
    00000211: 	cmpq	%rbp, 0x10(%rsp)
    00000216: 	jne	.Ltmp88 # Offset: 534
    00000218: 	jmp	.Ltmp81 # Offset: 536
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_" after disassembly {
  Number      : 45
  State       : disassembled
  Address     : 0x2850
  Size        : 0x328
  MaxSize     : 0x330
  Offset      : 0x2850
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB044:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movq	%rsi, %rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x18, %rsp
    00000015: 	movq	0x48(%rdi), %r12
    00000019: 	movq	0x28(%rdi), %rsi
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x8(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	movq	0x30(%rdi), %rax
    00000031: 	subq	0x38(%rdi), %rax
    00000035: 	movq	%r12, %r13
    00000038: 	sarq	$0x5, %rax
    0000003c: 	subq	%rsi, %r13
    0000003f: 	movq	%r13, %rcx
    00000042: 	sarq	$0x3, %rcx
    00000046: 	cmpq	$0x1, %r12
    0000004a: 	movq	%rcx, %rdx
    0000004d: 	adcq	$-0x1, %rdx
    00000051: 	shlq	$0x4, %rdx
    00000055: 	addq	%rdx, %rax
    00000058: 	movq	0x20(%rdi), %rdx
    0000005c: 	subq	0x10(%rdi), %rdx
    00000060: 	sarq	$0x5, %rdx
    00000064: 	addq	%rdx, %rax
    00000067: 	movabsq	$0x3ffffffffffffff, %rdx
    00000071: 	cmpq	%rdx, %rax
    00000074: 	je	.Ltmp89 # Offset: 116
    0000007a: 	movq	0x8(%rdi), %rdx
    0000007e: 	movq	%rdi, %rbx
    00000081: 	movq	(%rdi), %rdi
    00000084: 	movq	%r12, %rax
    00000087: 	subq	%rdi, %rax
    0000008a: 	movq	%rdx, %r8
    0000008d: 	sarq	$0x3, %rax
    00000091: 	subq	%rax, %r8
    00000094: 	cmpq	$0x1, %r8
    00000098: 	jbe	.Ltmp90 # Offset: 152
.Ltmp101:
    0000009e: 	movl	$0x200, %edi
    000000a3: 	callq	_Znwm@PLT # Offset: 163
    000000a8: 	movq	%rax, 0x8(%r12)
    000000ad: 	movq	0x30(%rbx), %r13
    000000b1: 	movq	0x8(%rbp), %r12
    000000b5: 	leaq	0x10(%r13), %rdi
    000000b9: 	movq	%rdi, (%r13)
    000000bd: 	movq	(%rbp), %r14
    000000c1: 	movq	%r14, %rax
    000000c4: 	addq	%r12, %rax
    000000c7: 	je	.Ltmp91 # Offset: 199
    000000c9: 	testq	%r14, %r14
    000000cc: 	je	.Ltmp92 # Offset: 204
.Ltmp91:
    000000d2: 	movq	%r12, (%rsp)
    000000d6: 	cmpq	$0xf, %r12
    000000da: 	ja	.Ltmp93 # Offset: 218
    000000e0: 	cmpq	$0x1, %r12
    000000e4: 	jne	.Ltmp94 # Offset: 228
    000000e6: 	movzbl	(%r14), %eax
    000000ea: 	movb	%al, 0x10(%r13)
.Ltmp96:
    000000ee: 	movq	%r12, 0x8(%r13)
    000000f2: 	movb	$0x0, (%rdi,%r12)
    000000f7: 	movq	0x48(%rbx), %rdx
    000000fb: 	movq	0x8(%rdx), %rax
    000000ff: 	addq	$0x8, %rdx
    00000103: 	movq	%rdx, %xmm1
    00000108: 	movq	%rax, %xmm0
    0000010d: 	addq	$0x200, %rax
    00000113: 	punpcklqdq	%xmm0, %xmm0
    00000117: 	movups	%xmm0, 0x30(%rbx)
    0000011b: 	movq	%rax, %xmm0
    00000120: 	punpcklqdq	%xmm1, %xmm0
    00000124: 	movups	%xmm0, 0x40(%rbx)
    00000128: 	movq	0x8(%rsp), %rax
    0000012d: 	subq	%fs:0x28, %rax
    00000136: 	jne	.Ltmp95 # Offset: 310
    0000013c: 	addq	$0x18, %rsp
    00000140: 	popq	%rbx
    00000141: 	popq	%rbp
    00000142: 	popq	%r12
    00000144: 	popq	%r13
    00000146: 	popq	%r14
    00000148: 	popq	%r15
    0000014a: 	retq # Offset: 330
    0000014b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp94:
    00000150: 	testq	%r12, %r12
    00000153: 	je	.Ltmp96 # Offset: 339
    00000155: 	jmp	.Ltmp97 # Offset: 341
    0000015a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp90:
    00000160: 	leaq	0x2(%rcx), %r14
    00000164: 	leaq	(%r14,%r14), %rax
    00000168: 	cmpq	%rax, %rdx
    0000016b: 	ja	.Ltmp98 # Offset: 363
    00000171: 	testq	%rdx, %rdx
    00000174: 	movl	$0x1, %eax
    00000179: 	cmovneq	%rdx, %rax
    0000017d: 	leaq	0x2(%rdx,%rax), %r15
    00000182: 	movq	%r15, %rax
    00000185: 	shrq	$0x3c, %rax
    00000189: 	jne	.Ltmp99 # Offset: 393
    0000018f: 	leaq	(,%r15,8), %rdi
    00000197: 	callq	_Znwm@PLT # Offset: 407
    0000019c: 	movq	0x28(%rbx), %rsi
    000001a0: 	movq	%rax, %r12
    000001a3: 	movq	%r15, %rax
    000001a6: 	subq	%r14, %rax
    000001a9: 	shrq	%rax
    000001ac: 	leaq	(%r12,%rax,8), %r14
    000001b0: 	movq	0x48(%rbx), %rax
    000001b4: 	leaq	0x8(%rax), %rdx
    000001b8: 	cmpq	%rsi, %rdx
    000001bb: 	je	.Ltmp100 # Offset: 443
    000001bd: 	subq	%rsi, %rdx
    000001c0: 	movq	%r14, %rdi
    000001c3: 	callq	memmove@PLT # Offset: 451
.Ltmp100:
    000001c8: 	movq	0x8(%rbx), %rax
    000001cc: 	movq	(%rbx), %rdi
    000001cf: 	leaq	(,%rax,8), %rsi
    000001d7: 	callq	_ZdlPvm@PLT # Offset: 471
    000001dc: 	movq	%r12, (%rbx)
    000001df: 	movq	%r15, 0x8(%rbx)
.Ltmp103:
    000001e3: 	movq	(%r14), %rax
    000001e6: 	movq	(%r14), %xmm0
    000001eb: 	leaq	(%r14,%r13), %r12
    000001ef: 	movq	%r14, 0x28(%rbx)
    000001f3: 	movq	%r12, 0x48(%rbx)
    000001f7: 	addq	$0x200, %rax
    000001fd: 	movq	%rax, %xmm2
    00000202: 	punpcklqdq	%xmm2, %xmm0
    00000206: 	movups	%xmm0, 0x18(%rbx)
    0000020a: 	movq	(%r12), %rax
    0000020e: 	movq	(%r12), %xmm0
    00000214: 	addq	$0x200, %rax
    0000021a: 	movq	%rax, %xmm3
    0000021f: 	punpcklqdq	%xmm3, %xmm0
    00000223: 	movups	%xmm0, 0x38(%rbx)
    00000227: 	jmp	.Ltmp101 # Offset: 551
    0000022c: 	nopl	(%rax) # Size: 4
.Ltmp93:
    00000230: 	movq	%rsp, %rsi
    00000233: 	xorl	%edx, %edx
    00000235: 	movq	%r13, %rdi
    00000238: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 568
    0000023d: 	movq	%rax, (%r13)
    00000241: 	movq	%rax, %rdi
    00000244: 	movq	(%rsp), %rax
    00000248: 	movq	%rax, 0x10(%r13)
.Ltmp97:
    0000024c: 	movq	%r12, %rdx
    0000024f: 	movq	%r14, %rsi
    00000252: 	callq	memcpy@PLT # Offset: 594
    00000257: 	movq	(%rsp), %r12
    0000025b: 	movq	(%r13), %rdi
    0000025f: 	jmp	.Ltmp96 # Offset: 607
    00000264: 	nopl	(%rax) # Size: 4
.Ltmp98:
    00000268: 	subq	%r14, %rdx
    0000026b: 	addq	$0x8, %r12
    0000026f: 	shrq	%rdx
    00000272: 	leaq	(%rdi,%rdx,8), %r14
    00000276: 	movq	%r12, %rdx
    00000279: 	subq	%rsi, %rdx
    0000027c: 	cmpq	%r14, %rsi
    0000027f: 	jbe	.Ltmp102 # Offset: 639
    00000281: 	cmpq	%r12, %rsi
    00000284: 	je	.Ltmp103 # Offset: 644
    0000028a: 	movq	%r14, %rdi
    0000028d: 	callq	memmove@PLT # Offset: 653
    00000292: 	jmp	.Ltmp103 # Offset: 658
    00000297: 	nopw	(%rax,%rax) # Size: 9
.Ltmp102:
    000002a0: 	cmpq	%r12, %rsi
    000002a3: 	je	.Ltmp103 # Offset: 675
    000002a9: 	leaq	0x8(%r13), %rdi
    000002ad: 	subq	%rdx, %rdi
    000002b0: 	addq	%r14, %rdi
    000002b3: 	callq	memmove@PLT # Offset: 691
    000002b8: 	jmp	.Ltmp103 # Offset: 696
.Ltmp92:
    000002bd: 	leaq	DATAat0x57008(%rip), %rdi
    000002c4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 708
    000002c9: 	nopl	(%rax) # Size: 7
.Ltmp99:
    000002d0: 	shrq	$0x3d, %r15
    000002d4: 	je	.Ltmp104 # Offset: 724
    000002d6: 	callq	_ZSt28__throw_bad_array_new_lengthv@PLT # Offset: 726
.Ltmp104:
    000002db: 	callq	_ZSt17__throw_bad_allocv@PLT # Offset: 731
.Ltmp89:
    000002e0: 	leaq	DATAat0x571a0(%rip), %rdi
    000002e7: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 743
.Ltmp95:
    000002ec: 	callq	__stack_chk_fail@PLT # Offset: 748
    000002f1: 	endbr64
    000002f5: 	movq	%rax, %rdi
    000002f8: 	callq	__cxa_begin_catch@PLT # Offset: 760
    000002fd: 	movq	0x48(%rbx), %rax
    00000301: 	movl	$0x200, %esi
    00000306: 	movq	0x8(%rax), %rdi
    0000030a: 	callq	_ZdlPvm@PLT # Offset: 778
    0000030f: 	callq	__cxa_rethrow@PLT # Offset: 783
    00000314: 	endbr64
    00000318: 	movq	%rax, %rbp
    0000031b: 	callq	__cxa_end_catch@PLT # Offset: 795
    00000320: 	movq	%rbp, %rdi
    00000323: 	callq	_Unwind_Resume@PLT # Offset: 803
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_" after disassembly {
  Number      : 46
  State       : disassembled
  Address     : 0x2b80
  Size        : 0x10c
  MaxSize     : 0x110
  Offset      : 0x2b80
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB045:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	movq	%rdi, %rbp
    0000000c: 	pushq	%rbx
    0000000d: 	subq	$0x18, %rsp
    00000011: 	movq	0x30(%rdi), %rbx
    00000015: 	movq	%fs:0x28, %rax
    0000001e: 	movq	%rax, 0x8(%rsp)
    00000023: 	xorl	%eax, %eax
    00000025: 	movq	0x40(%rdi), %rax
    00000029: 	subq	$0x20, %rax
    0000002d: 	cmpq	%rax, %rbx
    00000030: 	je	.Ltmp105 # Offset: 48
    00000036: 	leaq	0x10(%rbx), %rdi
    0000003a: 	movq	0x8(%rsi), %r12
    0000003e: 	movq	%rdi, (%rbx)
    00000041: 	movq	(%rsi), %r13
    00000044: 	movq	%r13, %rax
    00000047: 	addq	%r12, %rax
    0000004a: 	je	.Ltmp106 # Offset: 74
    0000004c: 	testq	%r13, %r13
    0000004f: 	je	.Ltmp107 # Offset: 79
.Ltmp106:
    00000055: 	movq	%r12, (%rsp)
    00000059: 	cmpq	$0xf, %r12
    0000005d: 	ja	.Ltmp108 # Offset: 93
    0000005f: 	cmpq	$0x1, %r12
    00000063: 	jne	.Ltmp109 # Offset: 99
    00000069: 	movzbl	(%r13), %eax
    0000006e: 	movb	%al, 0x10(%rbx)
.Ltmp111:
    00000071: 	movq	%r12, 0x8(%rbx)
    00000075: 	movb	$0x0, (%rdi,%r12)
    0000007a: 	addq	$0x20, 0x30(%rbp)
    0000007f: 	movq	0x8(%rsp), %rax
    00000084: 	subq	%fs:0x28, %rax
    0000008d: 	jne	.Ltmp110 # Offset: 141
    0000008f: 	addq	$0x18, %rsp
    00000093: 	popq	%rbx
    00000094: 	popq	%rbp
    00000095: 	popq	%r12
    00000097: 	popq	%r13
    00000099: 	retq # Offset: 153
    0000009a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp108:
    000000a0: 	movq	%rbx, %rdi
    000000a3: 	movq	%rsp, %rsi
    000000a6: 	xorl	%edx, %edx
    000000a8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 168
    000000ad: 	movq	%rax, (%rbx)
    000000b0: 	movq	%rax, %rdi
    000000b3: 	movq	(%rsp), %rax
    000000b7: 	movq	%rax, 0x10(%rbx)
.Ltmp112:
    000000bb: 	movq	%r12, %rdx
    000000be: 	movq	%r13, %rsi
    000000c1: 	callq	memcpy@PLT # Offset: 193
    000000c6: 	movq	(%rsp), %r12
    000000ca: 	movq	(%rbx), %rdi
    000000cd: 	jmp	.Ltmp111 # Offset: 205
    000000cf: 	nop # Size: 1
.Ltmp105:
    000000d0: 	movq	0x8(%rsp), %rax
    000000d5: 	subq	%fs:0x28, %rax
    000000de: 	jne	.Ltmp110 # Offset: 222
    000000e0: 	addq	$0x18, %rsp
    000000e4: 	popq	%rbx
    000000e5: 	popq	%rbp
    000000e6: 	popq	%r12
    000000e8: 	popq	%r13
    000000ea: 	jmp	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # TAILCALL  # Offset: 234
    000000ef: 	nop # Size: 1
.Ltmp109:
    000000f0: 	testq	%r12, %r12
    000000f3: 	je	.Ltmp111 # Offset: 243
    000000f9: 	jmp	.Ltmp112 # Offset: 249
.Ltmp107:
    000000fb: 	leaq	DATAat0x57008(%rip), %rdi
    00000102: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 258
.Ltmp110:
    00000107: 	callq	__stack_chk_fail@PLT # Offset: 263
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_"

Binary Function "_Z18test_loopstep_mul1Im11shift_rightImLi2EEEvPKT_mmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0.constprop.0/1(*2)" after disassembly {
  All names   : _Z18test_loopstep_mul1Im11shift_rightImLi2EEEvPKT_mmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0.constprop.0/1
                _Z18test_loopstep_mul1Im11shift_rightImLi2EEEvPKT_mmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 47
  State       : disassembled
  Address     : 0x2c90
  Size        : 0x264
  MaxSize     : 0x270
  Offset      : 0x2c90
  Section     : .text
  Orc Section : .local.text._Z18test_loopstep_mul1Im11shift_rightImLi2EEEvPKT_mmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB046:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	subq	$0x10, %rsp
    0000000f: 	movl	iterations(%rip), %esi
    00000015: 	movq	%fs:0x28, %rax
    0000001e: 	movq	%rax, 0x8(%rsp)
    00000023: 	xorl	%eax, %eax
    00000025: 	testl	%esi, %esi
    00000027: 	je	.Ltmp113 # Offset: 39
    0000002d: 	movsd	DATAat0x57bd8(%rip), %xmm1
    00000035: 	movq	%rdi, %r13
    00000038: 	xorl	%r14d, %r14d
    0000003b: 	leaq	DATAat0x571d0(%rip), %rbp
    00000042: 	movsd	init_value(%rip), %xmm0
    0000004a: 	movabsq	$-0x8000000000000000, %rbx
    00000054: 	nopl	(%rax) # Size: 4
.Ltmp117:
    00000058: 	xorl	%eax, %eax
    0000005a: 	xorl	%ecx, %ecx
    0000005c: 	nopl	(%rax) # Size: 4
.Ltmp114:
    00000060: 	movq	%rax, %rdx
    00000063: 	addq	$0x4, %rax
    00000067: 	shrq	$0x2, %rdx
    0000006b: 	addq	(%r13,%rdx,8), %rcx
    00000070: 	movq	%rcx, %rdx
    00000073: 	cmpq	$0x7d00, %rax
    00000079: 	jne	.Ltmp114 # Offset: 121
    0000007b: 	comisd	%xmm1, %xmm0
    0000007f: 	jae	.Ltmp115 # Offset: 127
    00000085: 	cvttsd2si	%xmm0, %rax
.Ltmp125:
    0000008a: 	imulq	$0x1f40, %rax, %rax
    00000091: 	cmpq	%rax, %rdx
    00000094: 	je	.Ltmp116 # Offset: 148
    00000096: 	movl	current_test(%rip), %edx
    0000009c: 	movq	%rbp, %rsi
    0000009f: 	movl	$0x1, %edi
    000000a4: 	xorl	%eax, %eax
    000000a6: 	addq	$0x1, %r14
    000000aa: 	callq	__printf_chk@PLT # Offset: 170
    000000af: 	movslq	iterations(%rip), %rax
    000000b6: 	movq	%rax, %rsi
    000000b9: 	cmpq	%rax, %r14
    000000bc: 	jae	.Ltmp113 # Offset: 188
    000000be: 	movq	DATAat0x57bd8(%rip), %rax
    000000c5: 	movsd	init_value(%rip), %xmm0
    000000cd: 	movq	%rax, %xmm1
    000000d2: 	jmp	.Ltmp117 # Offset: 210
    000000d4: 	nopl	(%rax) # Size: 4
.Ltmp116:
    000000d8: 	addq	$0x1, %r14
    000000dc: 	movslq	%esi, %rax
    000000df: 	cmpq	%rax, %r14
    000000e2: 	jb	.Ltmp117 # Offset: 226
.Ltmp113:
    000000e8: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000ef: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000f6: 	subq	$0x20, %rax
    000000fa: 	cmpq	%rax, %rbx
    000000fd: 	je	.Ltmp118 # Offset: 253
    00000103: 	leaq	0x10(%rbx), %rdi
    00000107: 	movq	%rdi, (%rbx)
    0000010a: 	movq	(%r12), %rbp
    0000010e: 	movq	0x8(%r12), %r12
    00000113: 	movq	%rbp, %rax
    00000116: 	addq	%r12, %rax
    00000119: 	je	.Ltmp119 # Offset: 281
    0000011b: 	testq	%rbp, %rbp
    0000011e: 	je	.Ltmp120 # Offset: 286
.Ltmp119:
    00000124: 	movq	%r12, (%rsp)
    00000128: 	cmpq	$0xf, %r12
    0000012c: 	ja	.Ltmp121 # Offset: 300
    00000132: 	cmpq	$0x1, %r12
    00000136: 	jne	.Ltmp122 # Offset: 310
    0000013c: 	movzbl	(%rbp), %eax
    00000140: 	movb	%al, 0x10(%rbx)
.Ltmp126:
    00000143: 	movq	%r12, 0x8(%rbx)
    00000147: 	movb	$0x0, (%rdi,%r12)
    0000014c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000153: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000015a: 	addq	$0x20, %rax
    0000015e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000165: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000016c: 	je	.Ltmp123 # Offset: 364
.Ltmp127:
    00000172: 	movq	-0x20(%rax), %rbp
    00000176: 	callq	clock@PLT # Offset: 374
    0000017b: 	movq	%rax, end_time(%rip)
    00000182: 	movq	0x8(%rsp), %rdx
    00000187: 	subq	%fs:0x28, %rdx
    00000190: 	jne	.Ltmp124 # Offset: 400
    00000196: 	subq	start_time(%rip), %rax
    0000019d: 	pxor	%xmm0, %xmm0
    000001a1: 	movq	%rbp, %rdi
    000001a4: 	cvtsi2sd	%rax, %xmm0
    000001a9: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001b1: 	addq	$0x10, %rsp
    000001b5: 	popq	%rbx
    000001b6: 	popq	%rbp
    000001b7: 	popq	%r12
    000001b9: 	popq	%r13
    000001bb: 	popq	%r14
    000001bd: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 445
    000001c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp115:
    000001c8: 	movapd	%xmm0, %xmm2
    000001cc: 	subsd	%xmm1, %xmm2
    000001d0: 	cvttsd2si	%xmm2, %rax
    000001d5: 	xorq	%rbx, %rax
    000001d8: 	jmp	.Ltmp125 # Offset: 472
.Ltmp121:
    000001dd: 	movq	%rbx, %rdi
    000001e0: 	movq	%rsp, %rsi
    000001e3: 	xorl	%edx, %edx
    000001e5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 485
    000001ea: 	movq	%rax, (%rbx)
    000001ed: 	movq	%rax, %rdi
    000001f0: 	movq	(%rsp), %rax
    000001f4: 	movq	%rax, 0x10(%rbx)
.Ltmp128:
    000001f8: 	movq	%r12, %rdx
    000001fb: 	movq	%rbp, %rsi
    000001fe: 	callq	memcpy@PLT # Offset: 510
    00000203: 	movq	(%rsp), %r12
    00000207: 	movq	(%rbx), %rdi
    0000020a: 	jmp	.Ltmp126 # Offset: 522
.Ltmp118:
    0000020f: 	movq	%r12, %rsi
    00000212: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000219: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 537
    0000021e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000225: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000022c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000233: 	jne	.Ltmp127 # Offset: 563
.Ltmp123:
    00000239: 	movq	-0x8(%rdx), %rax
    0000023d: 	addq	$0x200, %rax
    00000243: 	jmp	.Ltmp127 # Offset: 579
.Ltmp122:
    00000248: 	testq	%r12, %r12
    0000024b: 	je	.Ltmp126 # Offset: 587
    00000251: 	jmp	.Ltmp128 # Offset: 593
.Ltmp124:
    00000253: 	callq	__stack_chk_fail@PLT # Offset: 595
.Ltmp120:
    00000258: 	leaq	DATAat0x57008(%rip), %rdi
    0000025f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 607
DWARF CFI Instructions:
    <empty>
End of Function "_Z18test_loopstep_mul1Im11shift_rightImLi2EEEvPKT_mmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0.constprop.0/1(*2)"

Binary Function "_Z14test_variable1Ia25custom_remainder_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_variable1Ia25custom_remainder_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_variable1Ia25custom_remainder_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 48
  State       : disassembled
  Address     : 0x2f00
  Size        : 0x22c
  MaxSize     : 0x230
  Offset      : 0x2f00
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Ia25custom_remainder_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB047:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	movl	%esi, %r13d
    00000009: 	pushq	%r12
    0000000b: 	movq	%rdx, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	pushq	%rbx
    00000010: 	movq	%rdi, %rbx
    00000013: 	subq	$0x18, %rsp
    00000017: 	movq	%fs:0x28, %rax
    00000020: 	movq	%rax, 0x8(%rsp)
    00000025: 	xorl	%eax, %eax
    00000027: 	callq	clock@PLT # Offset: 39
    0000002c: 	movl	iterations(%rip), %edi
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	testl	%edi, %edi
    0000003b: 	jle	.Ltmp129 # Offset: 59
    00000041: 	movsd	init_value(%rip), %xmm0
    00000049: 	movsbl	%r13b, %r13d
    0000004d: 	xorl	%r15d, %r15d
    00000050: 	leaq	0x1f40(%rbx), %r14
    00000057: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005e: 	nop # Size: 2
.Ltmp132:
    00000060: 	movq	%rbx, %rcx
    00000063: 	xorl	%esi, %esi
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp130:
    00000068: 	movsbl	(%rcx), %eax
    0000006b: 	addq	$0x1, %rcx
    0000006f: 	cltd
    00000070: 	idivl	%r13d
    00000073: 	addl	%edx, %esi
    00000075: 	cmpq	%rcx, %r14
    00000078: 	jne	.Ltmp130 # Offset: 120
    0000007a: 	cvttsd2si	%xmm0, %eax
    0000007e: 	movsbl	%al, %eax
    00000081: 	cltd
    00000082: 	idivl	%r13d
    00000085: 	shll	$0x6, %edx
    00000088: 	cmpb	%dl, %sil
    0000008b: 	je	.Ltmp131 # Offset: 139
    0000008d: 	movl	current_test(%rip), %edx
    00000093: 	movl	$0x1, %edi
    00000098: 	movq	%rbp, %rsi
    0000009b: 	xorl	%eax, %eax
    0000009d: 	addl	$0x1, %r15d
    000000a1: 	callq	__printf_chk@PLT # Offset: 161
    000000a6: 	movl	iterations(%rip), %edi
    000000ac: 	cmpl	%r15d, %edi
    000000af: 	jle	.Ltmp129 # Offset: 175
    000000b1: 	movsd	init_value(%rip), %xmm0
    000000b9: 	jmp	.Ltmp132 # Offset: 185
    000000bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp131:
    000000c0: 	addl	$0x1, %r15d
    000000c4: 	cmpl	%edi, %r15d
    000000c7: 	jl	.Ltmp132 # Offset: 199
.Ltmp129:
    000000c9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000d7: 	subq	$0x20, %rax
    000000db: 	cmpq	%rax, %rbx
    000000de: 	je	.Ltmp133 # Offset: 222
    000000e4: 	leaq	0x10(%rbx), %rdi
    000000e8: 	movq	%rdi, (%rbx)
    000000eb: 	movq	(%r12), %rbp
    000000ef: 	movq	0x8(%r12), %r12
    000000f4: 	movq	%rbp, %rax
    000000f7: 	addq	%r12, %rax
    000000fa: 	je	.Ltmp134 # Offset: 250
    000000fc: 	testq	%rbp, %rbp
    000000ff: 	je	.Ltmp135 # Offset: 255
.Ltmp134:
    00000105: 	movq	%r12, (%rsp)
    00000109: 	cmpq	$0xf, %r12
    0000010d: 	ja	.Ltmp136 # Offset: 269
    00000113: 	cmpq	$0x1, %r12
    00000117: 	jne	.Ltmp137 # Offset: 279
    0000011d: 	movzbl	(%rbp), %eax
    00000121: 	movb	%al, 0x10(%rbx)
.Ltmp140:
    00000124: 	movq	%r12, 0x8(%rbx)
    00000128: 	movb	$0x0, (%rdi,%r12)
    0000012d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000134: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000013b: 	addq	$0x20, %rax
    0000013f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000146: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000014d: 	je	.Ltmp138 # Offset: 333
.Ltmp141:
    00000153: 	movq	-0x20(%rax), %rbp
    00000157: 	callq	clock@PLT # Offset: 343
    0000015c: 	movq	%rax, end_time(%rip)
    00000163: 	movq	0x8(%rsp), %rdx
    00000168: 	subq	%fs:0x28, %rdx
    00000171: 	jne	.Ltmp139 # Offset: 369
    00000177: 	subq	start_time(%rip), %rax
    0000017e: 	pxor	%xmm0, %xmm0
    00000182: 	movq	%rbp, %rdi
    00000185: 	cvtsi2sd	%rax, %xmm0
    0000018a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000192: 	addq	$0x18, %rsp
    00000196: 	popq	%rbx
    00000197: 	popq	%rbp
    00000198: 	popq	%r12
    0000019a: 	popq	%r13
    0000019c: 	popq	%r14
    0000019e: 	popq	%r15
    000001a0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 416
.Ltmp136:
    000001a5: 	movq	%rbx, %rdi
    000001a8: 	movq	%rsp, %rsi
    000001ab: 	xorl	%edx, %edx
    000001ad: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 429
    000001b2: 	movq	%rax, (%rbx)
    000001b5: 	movq	%rax, %rdi
    000001b8: 	movq	(%rsp), %rax
    000001bc: 	movq	%rax, 0x10(%rbx)
.Ltmp142:
    000001c0: 	movq	%r12, %rdx
    000001c3: 	movq	%rbp, %rsi
    000001c6: 	callq	memcpy@PLT # Offset: 454
    000001cb: 	movq	(%rsp), %r12
    000001cf: 	movq	(%rbx), %rdi
    000001d2: 	jmp	.Ltmp140 # Offset: 466
.Ltmp133:
    000001d7: 	movq	%r12, %rsi
    000001da: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 481
    000001e6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ed: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001fb: 	jne	.Ltmp141 # Offset: 507
.Ltmp138:
    00000201: 	movq	-0x8(%rdx), %rax
    00000205: 	addq	$0x200, %rax
    0000020b: 	jmp	.Ltmp141 # Offset: 523
.Ltmp137:
    00000210: 	testq	%r12, %r12
    00000213: 	je	.Ltmp140 # Offset: 531
    00000219: 	jmp	.Ltmp142 # Offset: 537
.Ltmp139:
    0000021b: 	callq	__stack_chk_fail@PLT # Offset: 539
.Ltmp135:
    00000220: 	leaq	DATAat0x57008(%rip), %rdi
    00000227: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 551
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Ia25custom_remainder_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z14test_variable1Ih24custom_multiply_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_variable1Ih24custom_multiply_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_variable1Ih24custom_multiply_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 49
  State       : disassembled
  Address     : 0x3130
  Size        : 0x2b2
  MaxSize     : 0x2c0
  Offset      : 0x3130
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Ih24custom_multiply_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB048:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rdx, %r13
    00000007: 	pushq	%r12
    00000009: 	movq	%rdi, %r12
    0000000c: 	pushq	%rbp
    0000000d: 	movl	%esi, %ebp
    0000000f: 	pushq	%rbx
    00000010: 	subq	$0x30, %rsp
    00000014: 	movq	%fs:0x28, %rax
    0000001d: 	movq	%rax, 0x28(%rsp)
    00000022: 	xorl	%eax, %eax
    00000024: 	callq	clock@PLT # Offset: 36
    00000029: 	movl	iterations(%rip), %ecx
    0000002f: 	movq	%rax, start_time(%rip)
    00000036: 	testl	%ecx, %ecx
    00000038: 	jle	.Ltmp143 # Offset: 56
    0000003e: 	movd	%ebp, %xmm6
    00000042: 	cvttsd2si	init_value(%rip), %esi
    0000004a: 	xorl	%r14d, %r14d
    0000004d: 	movdqa	DATAat0x57be0(%rip), %xmm3
    00000055: 	punpcklbw	%xmm6, %xmm6
    00000059: 	leaq	0x1f40(%r12), %rbx
    00000061: 	punpcklwd	%xmm6, %xmm6
    00000065: 	pshufd	$0x0, %xmm6, %xmm6
    0000006a: 	movdqa	%xmm6, %xmm5
    0000006e: 	punpcklbw	%xmm6, %xmm5
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp146:
    00000078: 	movdqa	%xmm6, %xmm4
    0000007c: 	movq	%r12, %rdx
    0000007f: 	pxor	%xmm2, %xmm2
    00000083: 	punpckhbw	%xmm6, %xmm4
    00000087: 	nopw	(%rax,%rax) # Size: 9
.Ltmp144:
    00000090: 	movdqu	(%rdx), %xmm0
    00000094: 	addq	$0x10, %rdx
    00000098: 	movdqa	%xmm0, %xmm1
    0000009c: 	punpcklbw	%xmm0, %xmm1
    000000a0: 	punpckhbw	%xmm0, %xmm0
    000000a4: 	pmullw	%xmm5, %xmm1
    000000a8: 	pmullw	%xmm4, %xmm0
    000000ac: 	pand	%xmm3, %xmm1
    000000b0: 	pand	%xmm3, %xmm0
    000000b4: 	packuswb	%xmm0, %xmm1
    000000b8: 	paddb	%xmm1, %xmm2
    000000bc: 	cmpq	%rdx, %rbx
    000000bf: 	jne	.Ltmp144 # Offset: 191
    000000c1: 	movdqa	%xmm2, %xmm0
    000000c5: 	movl	%ebp, %eax
    000000c7: 	psrldq	$0x8, %xmm0
    000000cc: 	imull	%esi, %eax
    000000cf: 	paddb	%xmm0, %xmm2
    000000d3: 	pxor	%xmm0, %xmm0
    000000d7: 	psadbw	%xmm0, %xmm2
    000000db: 	movd	%xmm2, %edx
    000000df: 	shll	$0x6, %eax
    000000e2: 	cmpb	%dl, %al
    000000e4: 	je	.Ltmp145 # Offset: 228
    000000e6: 	movl	current_test(%rip), %edx
    000000ec: 	xorl	%eax, %eax
    000000ee: 	movaps	%xmm6, (%rsp)
    000000f2: 	addl	$0x1, %r14d
    000000f6: 	leaq	DATAat0x571d0(%rip), %rsi
    000000fd: 	movl	$0x1, %edi
    00000102: 	movaps	%xmm5, 0x10(%rsp)
    00000107: 	callq	__printf_chk@PLT # Offset: 263
    0000010c: 	movl	iterations(%rip), %ecx
    00000112: 	cmpl	%r14d, %ecx
    00000115: 	jle	.Ltmp143 # Offset: 277
    00000117: 	cvttsd2si	init_value(%rip), %esi
    0000011f: 	movdqa	(%rsp), %xmm6
    00000124: 	movdqa	0x10(%rsp), %xmm5
    0000012a: 	movdqa	DATAat0x57be0(%rip), %xmm3
    00000132: 	jmp	.Ltmp146 # Offset: 306
    00000137: 	nopw	(%rax,%rax) # Size: 9
.Ltmp145:
    00000140: 	addl	$0x1, %r14d
    00000144: 	cmpl	%ecx, %r14d
    00000147: 	jl	.Ltmp146 # Offset: 327
.Ltmp143:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp147 # Offset: 354
    00000168: 	leaq	0x10(%rbx), %rdi
    0000016c: 	movq	0x8(%r13), %r12
    00000170: 	movq	%rdi, (%rbx)
    00000173: 	movq	(%r13), %rbp
    00000177: 	movq	%rbp, %rax
    0000017a: 	addq	%r12, %rax
    0000017d: 	je	.Ltmp148 # Offset: 381
    0000017f: 	testq	%rbp, %rbp
    00000182: 	je	.Ltmp149 # Offset: 386
.Ltmp148:
    00000188: 	movq	%r12, 0x20(%rsp)
    0000018d: 	cmpq	$0xf, %r12
    00000191: 	ja	.Ltmp150 # Offset: 401
    00000197: 	cmpq	$0x1, %r12
    0000019b: 	jne	.Ltmp151 # Offset: 411
    000001a1: 	movzbl	(%rbp), %eax
    000001a5: 	movb	%al, 0x10(%rbx)
.Ltmp154:
    000001a8: 	movq	%r12, 0x8(%rbx)
    000001ac: 	movb	$0x0, (%rdi,%r12)
    000001b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001b8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001bf: 	addq	$0x20, %rax
    000001c3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ca: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d1: 	je	.Ltmp152 # Offset: 465
.Ltmp155:
    000001d7: 	movq	-0x20(%rax), %rbp
    000001db: 	callq	clock@PLT # Offset: 475
    000001e0: 	movq	%rax, end_time(%rip)
    000001e7: 	movq	0x28(%rsp), %rdx
    000001ec: 	subq	%fs:0x28, %rdx
    000001f5: 	jne	.Ltmp153 # Offset: 501
    000001fb: 	subq	start_time(%rip), %rax
    00000202: 	pxor	%xmm0, %xmm0
    00000206: 	movq	%rbp, %rdi
    00000209: 	cvtsi2sd	%rax, %xmm0
    0000020e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000216: 	addq	$0x30, %rsp
    0000021a: 	popq	%rbx
    0000021b: 	popq	%rbp
    0000021c: 	popq	%r12
    0000021e: 	popq	%r13
    00000220: 	popq	%r14
    00000222: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 546
.Ltmp150:
    00000227: 	movq	%rbx, %rdi
    0000022a: 	leaq	0x20(%rsp), %rsi
    0000022f: 	xorl	%edx, %edx
    00000231: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 561
    00000236: 	movq	%rax, (%rbx)
    00000239: 	movq	%rax, %rdi
    0000023c: 	movq	0x20(%rsp), %rax
    00000241: 	movq	%rax, 0x10(%rbx)
.Ltmp156:
    00000245: 	movq	%r12, %rdx
    00000248: 	movq	%rbp, %rsi
    0000024b: 	callq	memcpy@PLT # Offset: 587
    00000250: 	movq	0x20(%rsp), %r12
    00000255: 	movq	(%rbx), %rdi
    00000258: 	jmp	.Ltmp154 # Offset: 600
.Ltmp147:
    0000025d: 	movq	%r13, %rsi
    00000260: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000267: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 615
    0000026c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000273: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000027a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000281: 	jne	.Ltmp155 # Offset: 641
.Ltmp152:
    00000287: 	movq	-0x8(%rdx), %rax
    0000028b: 	addq	$0x200, %rax
    00000291: 	jmp	.Ltmp155 # Offset: 657
.Ltmp151:
    00000296: 	testq	%r12, %r12
    00000299: 	je	.Ltmp154 # Offset: 665
    0000029f: 	jmp	.Ltmp156 # Offset: 671
.Ltmp153:
    000002a1: 	callq	__stack_chk_fail@PLT # Offset: 673
.Ltmp149:
    000002a6: 	leaq	DATAat0x57008(%rip), %rdi
    000002ad: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 685
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Ih24custom_multiply_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z14test_variable1Ia24custom_multiply_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_variable1Ia24custom_multiply_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_variable1Ia24custom_multiply_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 50
  State       : disassembled
  Address     : 0x33f0
  Size        : 0x2b3
  MaxSize     : 0x2c0
  Offset      : 0x33f0
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Ia24custom_multiply_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB049:
    00000000: 	pushq	%r14
    00000002: 	movl	%esi, %r14d
    00000005: 	pushq	%r13
    00000007: 	pushq	%r12
    00000009: 	movq	%rdx, %r12
    0000000c: 	pushq	%rbp
    0000000d: 	movq	%rdi, %rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x30, %rsp
    00000015: 	movq	%fs:0x28, %rax
    0000001e: 	movq	%rax, 0x28(%rsp)
    00000023: 	xorl	%eax, %eax
    00000025: 	callq	clock@PLT # Offset: 37
    0000002a: 	movl	iterations(%rip), %esi
    00000030: 	movq	%rax, start_time(%rip)
    00000037: 	testl	%esi, %esi
    00000039: 	jle	.Ltmp157 # Offset: 57
    0000003f: 	movd	%r14d, %xmm6
    00000044: 	movdqa	DATAat0x57be0(%rip), %xmm3
    0000004c: 	xorl	%r13d, %r13d
    0000004f: 	movsd	init_value(%rip), %xmm7
    00000057: 	punpcklbw	%xmm6, %xmm6
    0000005b: 	leaq	0x1f40(%rbp), %rbx
    00000062: 	punpcklwd	%xmm6, %xmm6
    00000066: 	pshufd	$0x0, %xmm6, %xmm6
    0000006b: 	movdqa	%xmm6, %xmm5
    0000006f: 	punpcklbw	%xmm6, %xmm5
    00000073: 	nopl	(%rax,%rax) # Size: 5
.Ltmp160:
    00000078: 	movdqa	%xmm6, %xmm4
    0000007c: 	movq	%rbp, %rdx
    0000007f: 	pxor	%xmm2, %xmm2
    00000083: 	punpckhbw	%xmm6, %xmm4
    00000087: 	nopw	(%rax,%rax) # Size: 9
.Ltmp158:
    00000090: 	movdqu	(%rdx), %xmm0
    00000094: 	addq	$0x10, %rdx
    00000098: 	movdqa	%xmm0, %xmm1
    0000009c: 	punpcklbw	%xmm0, %xmm1
    000000a0: 	punpckhbw	%xmm0, %xmm0
    000000a4: 	pmullw	%xmm5, %xmm1
    000000a8: 	pmullw	%xmm4, %xmm0
    000000ac: 	pand	%xmm3, %xmm1
    000000b0: 	pand	%xmm3, %xmm0
    000000b4: 	packuswb	%xmm0, %xmm1
    000000b8: 	paddb	%xmm1, %xmm2
    000000bc: 	cmpq	%rdx, %rbx
    000000bf: 	jne	.Ltmp158 # Offset: 191
    000000c1: 	cvttsd2si	%xmm7, %ecx
    000000c5: 	movdqa	%xmm2, %xmm0
    000000c9: 	psrldq	$0x8, %xmm0
    000000ce: 	paddb	%xmm0, %xmm2
    000000d2: 	pxor	%xmm0, %xmm0
    000000d6: 	psadbw	%xmm0, %xmm2
    000000da: 	movl	%ecx, %eax
    000000dc: 	movd	%xmm2, %edx
    000000e0: 	imull	%r14d, %eax
    000000e4: 	shll	$0x6, %eax
    000000e7: 	cmpb	%dl, %al
    000000e9: 	je	.Ltmp159 # Offset: 233
    000000eb: 	movl	current_test(%rip), %edx
    000000f1: 	xorl	%eax, %eax
    000000f3: 	movaps	%xmm6, (%rsp)
    000000f7: 	addl	$0x1, %r13d
    000000fb: 	leaq	DATAat0x571d0(%rip), %rsi
    00000102: 	movl	$0x1, %edi
    00000107: 	movaps	%xmm5, 0x10(%rsp)
    0000010c: 	callq	__printf_chk@PLT # Offset: 268
    00000111: 	movl	iterations(%rip), %esi
    00000117: 	cmpl	%r13d, %esi
    0000011a: 	jle	.Ltmp157 # Offset: 282
    0000011c: 	movsd	init_value(%rip), %xmm7
    00000124: 	movdqa	(%rsp), %xmm6
    00000129: 	movdqa	DATAat0x57be0(%rip), %xmm3
    00000131: 	movdqa	0x10(%rsp), %xmm5
    00000137: 	jmp	.Ltmp160 # Offset: 311
    0000013c: 	nopl	(%rax) # Size: 4
.Ltmp159:
    00000140: 	addl	$0x1, %r13d
    00000144: 	cmpl	%esi, %r13d
    00000147: 	jl	.Ltmp160 # Offset: 327
.Ltmp157:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp161 # Offset: 354
    00000168: 	leaq	0x10(%rbx), %rdi
    0000016c: 	movq	%rdi, (%rbx)
    0000016f: 	movq	(%r12), %rbp
    00000173: 	movq	0x8(%r12), %r12
    00000178: 	movq	%rbp, %rax
    0000017b: 	addq	%r12, %rax
    0000017e: 	je	.Ltmp162 # Offset: 382
    00000180: 	testq	%rbp, %rbp
    00000183: 	je	.Ltmp163 # Offset: 387
.Ltmp162:
    00000189: 	movq	%r12, 0x20(%rsp)
    0000018e: 	cmpq	$0xf, %r12
    00000192: 	ja	.Ltmp164 # Offset: 402
    00000198: 	cmpq	$0x1, %r12
    0000019c: 	jne	.Ltmp165 # Offset: 412
    000001a2: 	movzbl	(%rbp), %eax
    000001a6: 	movb	%al, 0x10(%rbx)
.Ltmp168:
    000001a9: 	movq	%r12, 0x8(%rbx)
    000001ad: 	movb	$0x0, (%rdi,%r12)
    000001b2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001b9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001c0: 	addq	$0x20, %rax
    000001c4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001cb: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d2: 	je	.Ltmp166 # Offset: 466
.Ltmp169:
    000001d8: 	movq	-0x20(%rax), %rbp
    000001dc: 	callq	clock@PLT # Offset: 476
    000001e1: 	movq	%rax, end_time(%rip)
    000001e8: 	movq	0x28(%rsp), %rdx
    000001ed: 	subq	%fs:0x28, %rdx
    000001f6: 	jne	.Ltmp167 # Offset: 502
    000001fc: 	subq	start_time(%rip), %rax
    00000203: 	pxor	%xmm0, %xmm0
    00000207: 	movq	%rbp, %rdi
    0000020a: 	cvtsi2sd	%rax, %xmm0
    0000020f: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000217: 	addq	$0x30, %rsp
    0000021b: 	popq	%rbx
    0000021c: 	popq	%rbp
    0000021d: 	popq	%r12
    0000021f: 	popq	%r13
    00000221: 	popq	%r14
    00000223: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 547
.Ltmp164:
    00000228: 	movq	%rbx, %rdi
    0000022b: 	leaq	0x20(%rsp), %rsi
    00000230: 	xorl	%edx, %edx
    00000232: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 562
    00000237: 	movq	%rax, (%rbx)
    0000023a: 	movq	%rax, %rdi
    0000023d: 	movq	0x20(%rsp), %rax
    00000242: 	movq	%rax, 0x10(%rbx)
.Ltmp170:
    00000246: 	movq	%r12, %rdx
    00000249: 	movq	%rbp, %rsi
    0000024c: 	callq	memcpy@PLT # Offset: 588
    00000251: 	movq	0x20(%rsp), %r12
    00000256: 	movq	(%rbx), %rdi
    00000259: 	jmp	.Ltmp168 # Offset: 601
.Ltmp161:
    0000025e: 	movq	%r12, %rsi
    00000261: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000268: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 616
    0000026d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000274: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000027b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000282: 	jne	.Ltmp169 # Offset: 642
.Ltmp166:
    00000288: 	movq	-0x8(%rdx), %rax
    0000028c: 	addq	$0x200, %rax
    00000292: 	jmp	.Ltmp169 # Offset: 658
.Ltmp165:
    00000297: 	testq	%r12, %r12
    0000029a: 	je	.Ltmp168 # Offset: 666
    000002a0: 	jmp	.Ltmp170 # Offset: 672
.Ltmp167:
    000002a2: 	callq	__stack_chk_fail@PLT # Offset: 674
.Ltmp163:
    000002a7: 	leaq	DATAat0x57008(%rip), %rdi
    000002ae: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 686
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Ia24custom_multiply_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIh24custom_remainder_inline8IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIh24custom_remainder_inline8IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIh24custom_remainder_inline8IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 51
  State       : disassembled
  Address     : 0x36b0
  Size        : 0x24d
  MaxSize     : 0x250
  Offset      : 0x36b0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIh24custom_remainder_inline8IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB050:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp171 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	movdqa	DATAat0x57bf0(%rip), %xmm2
    0000004c: 	xorl	%r14d, %r14d
    0000004f: 	leaq	0x1f40(%rbp), %rbx
    00000056: 	leaq	DATAat0x571d0(%rip), %r12
    0000005d: 	nopl	(%rax) # Size: 3
.Ltmp174:
    00000060: 	movq	%rbp, %rax
    00000063: 	pxor	%xmm1, %xmm1
    00000067: 	nopw	(%rax,%rax) # Size: 9
.Ltmp172:
    00000070: 	movdqu	(%rax), %xmm0
    00000074: 	addq	$0x10, %rax
    00000078: 	pand	%xmm2, %xmm0
    0000007c: 	paddb	%xmm0, %xmm1
    00000080: 	cmpq	%rax, %rbx
    00000083: 	jne	.Ltmp172 # Offset: 131
    00000085: 	movdqa	%xmm1, %xmm0
    00000089: 	movl	%esi, %edx
    0000008b: 	psrldq	$0x8, %xmm0
    00000090: 	shll	$0x6, %edx
    00000093: 	paddb	%xmm0, %xmm1
    00000097: 	pxor	%xmm0, %xmm0
    0000009b: 	psadbw	%xmm0, %xmm1
    0000009f: 	movd	%xmm1, %eax
    000000a3: 	cmpb	%al, %dl
    000000a5: 	je	.Ltmp173 # Offset: 165
    000000a7: 	movl	current_test(%rip), %edx
    000000ad: 	movq	%r12, %rsi
    000000b0: 	movl	$0x1, %edi
    000000b5: 	xorl	%eax, %eax
    000000b7: 	addl	$0x1, %r14d
    000000bb: 	callq	__printf_chk@PLT # Offset: 187
    000000c0: 	movl	iterations(%rip), %ecx
    000000c6: 	cmpl	%r14d, %ecx
    000000c9: 	jle	.Ltmp171 # Offset: 201
    000000cb: 	cvttsd2si	init_value(%rip), %esi
    000000d3: 	movdqa	DATAat0x57bf0(%rip), %xmm2
    000000db: 	jmp	.Ltmp174 # Offset: 219
    000000dd: 	nopl	(%rax) # Size: 3
.Ltmp173:
    000000e0: 	addl	$0x1, %r14d
    000000e4: 	cmpl	%ecx, %r14d
    000000e7: 	jl	.Ltmp174 # Offset: 231
.Ltmp171:
    000000ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000fb: 	subq	$0x20, %rax
    000000ff: 	cmpq	%rax, %rbx
    00000102: 	je	.Ltmp175 # Offset: 258
    00000108: 	leaq	0x10(%rbx), %rdi
    0000010c: 	movq	0x8(%r13), %r12
    00000110: 	movq	%rdi, (%rbx)
    00000113: 	movq	(%r13), %rbp
    00000117: 	movq	%rbp, %rax
    0000011a: 	addq	%r12, %rax
    0000011d: 	je	.Ltmp176 # Offset: 285
    0000011f: 	testq	%rbp, %rbp
    00000122: 	je	.Ltmp177 # Offset: 290
.Ltmp176:
    00000128: 	movq	%r12, (%rsp)
    0000012c: 	cmpq	$0xf, %r12
    00000130: 	ja	.Ltmp178 # Offset: 304
    00000136: 	cmpq	$0x1, %r12
    0000013a: 	jne	.Ltmp179 # Offset: 314
    00000140: 	movzbl	(%rbp), %eax
    00000144: 	movb	%al, 0x10(%rbx)
.Ltmp182:
    00000147: 	movq	%r12, 0x8(%rbx)
    0000014b: 	movb	$0x0, (%rdi,%r12)
    00000150: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000157: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000015e: 	addq	$0x20, %rax
    00000162: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000169: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000170: 	je	.Ltmp180 # Offset: 368
.Ltmp183:
    00000176: 	movq	-0x20(%rax), %rbp
    0000017a: 	callq	clock@PLT # Offset: 378
    0000017f: 	movq	%rax, end_time(%rip)
    00000186: 	movq	0x8(%rsp), %rdx
    0000018b: 	subq	%fs:0x28, %rdx
    00000194: 	jne	.Ltmp181 # Offset: 404
    0000019a: 	subq	start_time(%rip), %rax
    000001a1: 	pxor	%xmm0, %xmm0
    000001a5: 	movq	%rbp, %rdi
    000001a8: 	cvtsi2sd	%rax, %xmm0
    000001ad: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001b5: 	addq	$0x10, %rsp
    000001b9: 	popq	%rbx
    000001ba: 	popq	%rbp
    000001bb: 	popq	%r12
    000001bd: 	popq	%r13
    000001bf: 	popq	%r14
    000001c1: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 449
.Ltmp178:
    000001c6: 	movq	%rbx, %rdi
    000001c9: 	movq	%rsp, %rsi
    000001cc: 	xorl	%edx, %edx
    000001ce: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 462
    000001d3: 	movq	%rax, (%rbx)
    000001d6: 	movq	%rax, %rdi
    000001d9: 	movq	(%rsp), %rax
    000001dd: 	movq	%rax, 0x10(%rbx)
.Ltmp184:
    000001e1: 	movq	%r12, %rdx
    000001e4: 	movq	%rbp, %rsi
    000001e7: 	callq	memcpy@PLT # Offset: 487
    000001ec: 	movq	(%rsp), %r12
    000001f0: 	movq	(%rbx), %rdi
    000001f3: 	jmp	.Ltmp182 # Offset: 499
.Ltmp175:
    000001f8: 	movq	%r13, %rsi
    000001fb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000202: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 514
    00000207: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000020e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000215: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000021c: 	jne	.Ltmp183 # Offset: 540
.Ltmp180:
    00000222: 	movq	-0x8(%rdx), %rax
    00000226: 	addq	$0x200, %rax
    0000022c: 	jmp	.Ltmp183 # Offset: 556
.Ltmp179:
    00000231: 	testq	%r12, %r12
    00000234: 	je	.Ltmp182 # Offset: 564
    0000023a: 	jmp	.Ltmp184 # Offset: 570
.Ltmp181:
    0000023c: 	callq	__stack_chk_fail@PLT # Offset: 572
.Ltmp177:
    00000241: 	leaq	DATAat0x57008(%rip), %rdi
    00000248: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 584
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIh24custom_remainder_inline8IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIh11shift_rightIhLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIh11shift_rightIhLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIh11shift_rightIhLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 52
  State       : disassembled
  Address     : 0x3900
  Size        : 0x25d
  MaxSize     : 0x260
  Offset      : 0x3900
  Section     : .text
  Orc Section : .local.text._Z13test_constantIh11shift_rightIhLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB051:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp185 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	movdqa	DATAat0x57c00(%rip), %xmm2
    0000004c: 	xorl	%r14d, %r14d
    0000004f: 	leaq	0x1f40(%rbp), %rbx
    00000056: 	leaq	DATAat0x571d0(%rip), %r12
    0000005d: 	nopl	(%rax) # Size: 3
.Ltmp188:
    00000060: 	movq	%rbp, %rax
    00000063: 	pxor	%xmm1, %xmm1
    00000067: 	nopw	(%rax,%rax) # Size: 9
.Ltmp186:
    00000070: 	movdqu	(%rax), %xmm0
    00000074: 	addq	$0x10, %rax
    00000078: 	psrlw	$0x1, %xmm0
    0000007d: 	pand	%xmm2, %xmm0
    00000081: 	paddb	%xmm0, %xmm1
    00000085: 	cmpq	%rax, %rbx
    00000088: 	jne	.Ltmp186 # Offset: 136
    0000008a: 	movdqa	%xmm1, %xmm0
    0000008e: 	movl	%esi, %edx
    00000090: 	psrldq	$0x8, %xmm0
    00000095: 	shrb	%dl
    00000097: 	paddb	%xmm0, %xmm1
    0000009b: 	pxor	%xmm0, %xmm0
    0000009f: 	shll	$0x6, %edx
    000000a2: 	psadbw	%xmm0, %xmm1
    000000a6: 	movd	%xmm1, %eax
    000000aa: 	cmpb	%al, %dl
    000000ac: 	je	.Ltmp187 # Offset: 172
    000000ae: 	movl	current_test(%rip), %edx
    000000b4: 	movq	%r12, %rsi
    000000b7: 	movl	$0x1, %edi
    000000bc: 	xorl	%eax, %eax
    000000be: 	addl	$0x1, %r14d
    000000c2: 	callq	__printf_chk@PLT # Offset: 194
    000000c7: 	movl	iterations(%rip), %ecx
    000000cd: 	cmpl	%r14d, %ecx
    000000d0: 	jle	.Ltmp185 # Offset: 208
    000000d2: 	cvttsd2si	init_value(%rip), %esi
    000000da: 	movdqa	DATAat0x57c00(%rip), %xmm2
    000000e2: 	jmp	.Ltmp188 # Offset: 226
    000000e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp187:
    000000f0: 	addl	$0x1, %r14d
    000000f4: 	cmpl	%ecx, %r14d
    000000f7: 	jl	.Ltmp188 # Offset: 247
.Ltmp185:
    000000fd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000104: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000010b: 	subq	$0x20, %rax
    0000010f: 	cmpq	%rax, %rbx
    00000112: 	je	.Ltmp189 # Offset: 274
    00000118: 	leaq	0x10(%rbx), %rdi
    0000011c: 	movq	0x8(%r13), %r12
    00000120: 	movq	%rdi, (%rbx)
    00000123: 	movq	(%r13), %rbp
    00000127: 	movq	%rbp, %rax
    0000012a: 	addq	%r12, %rax
    0000012d: 	je	.Ltmp190 # Offset: 301
    0000012f: 	testq	%rbp, %rbp
    00000132: 	je	.Ltmp191 # Offset: 306
.Ltmp190:
    00000138: 	movq	%r12, (%rsp)
    0000013c: 	cmpq	$0xf, %r12
    00000140: 	ja	.Ltmp192 # Offset: 320
    00000146: 	cmpq	$0x1, %r12
    0000014a: 	jne	.Ltmp193 # Offset: 330
    00000150: 	movzbl	(%rbp), %eax
    00000154: 	movb	%al, 0x10(%rbx)
.Ltmp196:
    00000157: 	movq	%r12, 0x8(%rbx)
    0000015b: 	movb	$0x0, (%rdi,%r12)
    00000160: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000167: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000016e: 	addq	$0x20, %rax
    00000172: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000179: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000180: 	je	.Ltmp194 # Offset: 384
.Ltmp197:
    00000186: 	movq	-0x20(%rax), %rbp
    0000018a: 	callq	clock@PLT # Offset: 394
    0000018f: 	movq	%rax, end_time(%rip)
    00000196: 	movq	0x8(%rsp), %rdx
    0000019b: 	subq	%fs:0x28, %rdx
    000001a4: 	jne	.Ltmp195 # Offset: 420
    000001aa: 	subq	start_time(%rip), %rax
    000001b1: 	pxor	%xmm0, %xmm0
    000001b5: 	movq	%rbp, %rdi
    000001b8: 	cvtsi2sd	%rax, %xmm0
    000001bd: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001c5: 	addq	$0x10, %rsp
    000001c9: 	popq	%rbx
    000001ca: 	popq	%rbp
    000001cb: 	popq	%r12
    000001cd: 	popq	%r13
    000001cf: 	popq	%r14
    000001d1: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 465
.Ltmp192:
    000001d6: 	movq	%rbx, %rdi
    000001d9: 	movq	%rsp, %rsi
    000001dc: 	xorl	%edx, %edx
    000001de: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 478
    000001e3: 	movq	%rax, (%rbx)
    000001e6: 	movq	%rax, %rdi
    000001e9: 	movq	(%rsp), %rax
    000001ed: 	movq	%rax, 0x10(%rbx)
.Ltmp198:
    000001f1: 	movq	%r12, %rdx
    000001f4: 	movq	%rbp, %rsi
    000001f7: 	callq	memcpy@PLT # Offset: 503
    000001fc: 	movq	(%rsp), %r12
    00000200: 	movq	(%rbx), %rdi
    00000203: 	jmp	.Ltmp196 # Offset: 515
.Ltmp189:
    00000208: 	movq	%r13, %rsi
    0000020b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000212: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 530
    00000217: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000021e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000225: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000022c: 	jne	.Ltmp197 # Offset: 556
.Ltmp194:
    00000232: 	movq	-0x8(%rdx), %rax
    00000236: 	addq	$0x200, %rax
    0000023c: 	jmp	.Ltmp197 # Offset: 572
.Ltmp193:
    00000241: 	testq	%r12, %r12
    00000244: 	je	.Ltmp196 # Offset: 580
    0000024a: 	jmp	.Ltmp198 # Offset: 586
.Ltmp195:
    0000024c: 	callq	__stack_chk_fail@PLT # Offset: 588
.Ltmp191:
    00000251: 	leaq	DATAat0x57008(%rip), %rdi
    00000258: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 600
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIh11shift_rightIhLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIh13and_remainderIhLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIh13and_remainderIhLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIh13and_remainderIhLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 53
  State       : disassembled
  Address     : 0x3b60
  Size        : 0x24d
  MaxSize     : 0x250
  Offset      : 0x3b60
  Section     : .text
  Orc Section : .local.text._Z13test_constantIh13and_remainderIhLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB052:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp199 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	movdqa	DATAat0x57c10(%rip), %xmm2
    0000004c: 	xorl	%r14d, %r14d
    0000004f: 	leaq	0x1f40(%rbp), %rbx
    00000056: 	leaq	DATAat0x571d0(%rip), %r12
    0000005d: 	nopl	(%rax) # Size: 3
.Ltmp202:
    00000060: 	movq	%rbp, %rax
    00000063: 	pxor	%xmm1, %xmm1
    00000067: 	nopw	(%rax,%rax) # Size: 9
.Ltmp200:
    00000070: 	movdqu	(%rax), %xmm0
    00000074: 	addq	$0x10, %rax
    00000078: 	pand	%xmm2, %xmm0
    0000007c: 	paddb	%xmm0, %xmm1
    00000080: 	cmpq	%rax, %rbx
    00000083: 	jne	.Ltmp200 # Offset: 131
    00000085: 	movdqa	%xmm1, %xmm0
    00000089: 	movl	%esi, %edx
    0000008b: 	psrldq	$0x8, %xmm0
    00000090: 	shll	$0x6, %edx
    00000093: 	paddb	%xmm0, %xmm1
    00000097: 	pxor	%xmm0, %xmm0
    0000009b: 	psadbw	%xmm0, %xmm1
    0000009f: 	movd	%xmm1, %eax
    000000a3: 	cmpb	%al, %dl
    000000a5: 	je	.Ltmp201 # Offset: 165
    000000a7: 	movl	current_test(%rip), %edx
    000000ad: 	movq	%r12, %rsi
    000000b0: 	movl	$0x1, %edi
    000000b5: 	xorl	%eax, %eax
    000000b7: 	addl	$0x1, %r14d
    000000bb: 	callq	__printf_chk@PLT # Offset: 187
    000000c0: 	movl	iterations(%rip), %ecx
    000000c6: 	cmpl	%r14d, %ecx
    000000c9: 	jle	.Ltmp199 # Offset: 201
    000000cb: 	cvttsd2si	init_value(%rip), %esi
    000000d3: 	movdqa	DATAat0x57c10(%rip), %xmm2
    000000db: 	jmp	.Ltmp202 # Offset: 219
    000000dd: 	nopl	(%rax) # Size: 3
.Ltmp201:
    000000e0: 	addl	$0x1, %r14d
    000000e4: 	cmpl	%ecx, %r14d
    000000e7: 	jl	.Ltmp202 # Offset: 231
.Ltmp199:
    000000ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000fb: 	subq	$0x20, %rax
    000000ff: 	cmpq	%rax, %rbx
    00000102: 	je	.Ltmp203 # Offset: 258
    00000108: 	leaq	0x10(%rbx), %rdi
    0000010c: 	movq	0x8(%r13), %r12
    00000110: 	movq	%rdi, (%rbx)
    00000113: 	movq	(%r13), %rbp
    00000117: 	movq	%rbp, %rax
    0000011a: 	addq	%r12, %rax
    0000011d: 	je	.Ltmp204 # Offset: 285
    0000011f: 	testq	%rbp, %rbp
    00000122: 	je	.Ltmp205 # Offset: 290
.Ltmp204:
    00000128: 	movq	%r12, (%rsp)
    0000012c: 	cmpq	$0xf, %r12
    00000130: 	ja	.Ltmp206 # Offset: 304
    00000136: 	cmpq	$0x1, %r12
    0000013a: 	jne	.Ltmp207 # Offset: 314
    00000140: 	movzbl	(%rbp), %eax
    00000144: 	movb	%al, 0x10(%rbx)
.Ltmp210:
    00000147: 	movq	%r12, 0x8(%rbx)
    0000014b: 	movb	$0x0, (%rdi,%r12)
    00000150: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000157: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000015e: 	addq	$0x20, %rax
    00000162: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000169: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000170: 	je	.Ltmp208 # Offset: 368
.Ltmp211:
    00000176: 	movq	-0x20(%rax), %rbp
    0000017a: 	callq	clock@PLT # Offset: 378
    0000017f: 	movq	%rax, end_time(%rip)
    00000186: 	movq	0x8(%rsp), %rdx
    0000018b: 	subq	%fs:0x28, %rdx
    00000194: 	jne	.Ltmp209 # Offset: 404
    0000019a: 	subq	start_time(%rip), %rax
    000001a1: 	pxor	%xmm0, %xmm0
    000001a5: 	movq	%rbp, %rdi
    000001a8: 	cvtsi2sd	%rax, %xmm0
    000001ad: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001b5: 	addq	$0x10, %rsp
    000001b9: 	popq	%rbx
    000001ba: 	popq	%rbp
    000001bb: 	popq	%r12
    000001bd: 	popq	%r13
    000001bf: 	popq	%r14
    000001c1: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 449
.Ltmp206:
    000001c6: 	movq	%rbx, %rdi
    000001c9: 	movq	%rsp, %rsi
    000001cc: 	xorl	%edx, %edx
    000001ce: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 462
    000001d3: 	movq	%rax, (%rbx)
    000001d6: 	movq	%rax, %rdi
    000001d9: 	movq	(%rsp), %rax
    000001dd: 	movq	%rax, 0x10(%rbx)
.Ltmp212:
    000001e1: 	movq	%r12, %rdx
    000001e4: 	movq	%rbp, %rsi
    000001e7: 	callq	memcpy@PLT # Offset: 487
    000001ec: 	movq	(%rsp), %r12
    000001f0: 	movq	(%rbx), %rdi
    000001f3: 	jmp	.Ltmp210 # Offset: 499
.Ltmp203:
    000001f8: 	movq	%r13, %rsi
    000001fb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000202: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 514
    00000207: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000020e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000215: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000021c: 	jne	.Ltmp211 # Offset: 540
.Ltmp208:
    00000222: 	movq	-0x8(%rdx), %rax
    00000226: 	addq	$0x200, %rax
    0000022c: 	jmp	.Ltmp211 # Offset: 556
.Ltmp207:
    00000231: 	testq	%r12, %r12
    00000234: 	je	.Ltmp210 # Offset: 564
    0000023a: 	jmp	.Ltmp212 # Offset: 570
.Ltmp209:
    0000023c: 	callq	__stack_chk_fail@PLT # Offset: 572
.Ltmp205:
    00000241: 	leaq	DATAat0x57008(%rip), %rdi
    00000248: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 584
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIh13and_remainderIhLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIh16custom_remainderIhLi4EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIh16custom_remainderIhLi4EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIh16custom_remainderIhLi4EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 54
  State       : disassembled
  Address     : 0x3db0
  Size        : 0x24d
  MaxSize     : 0x250
  Offset      : 0x3db0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIh16custom_remainderIhLi4EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB053:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp213 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	movdqa	DATAat0x57c10(%rip), %xmm2
    0000004c: 	xorl	%r14d, %r14d
    0000004f: 	leaq	0x1f40(%rbp), %rbx
    00000056: 	leaq	DATAat0x571d0(%rip), %r12
    0000005d: 	nopl	(%rax) # Size: 3
.Ltmp216:
    00000060: 	movq	%rbp, %rax
    00000063: 	pxor	%xmm1, %xmm1
    00000067: 	nopw	(%rax,%rax) # Size: 9
.Ltmp214:
    00000070: 	movdqu	(%rax), %xmm0
    00000074: 	addq	$0x10, %rax
    00000078: 	pand	%xmm2, %xmm0
    0000007c: 	paddb	%xmm0, %xmm1
    00000080: 	cmpq	%rax, %rbx
    00000083: 	jne	.Ltmp214 # Offset: 131
    00000085: 	movdqa	%xmm1, %xmm0
    00000089: 	movl	%esi, %edx
    0000008b: 	psrldq	$0x8, %xmm0
    00000090: 	shll	$0x6, %edx
    00000093: 	paddb	%xmm0, %xmm1
    00000097: 	pxor	%xmm0, %xmm0
    0000009b: 	psadbw	%xmm0, %xmm1
    0000009f: 	movd	%xmm1, %eax
    000000a3: 	cmpb	%al, %dl
    000000a5: 	je	.Ltmp215 # Offset: 165
    000000a7: 	movl	current_test(%rip), %edx
    000000ad: 	movq	%r12, %rsi
    000000b0: 	movl	$0x1, %edi
    000000b5: 	xorl	%eax, %eax
    000000b7: 	addl	$0x1, %r14d
    000000bb: 	callq	__printf_chk@PLT # Offset: 187
    000000c0: 	movl	iterations(%rip), %ecx
    000000c6: 	cmpl	%r14d, %ecx
    000000c9: 	jle	.Ltmp213 # Offset: 201
    000000cb: 	cvttsd2si	init_value(%rip), %esi
    000000d3: 	movdqa	DATAat0x57c10(%rip), %xmm2
    000000db: 	jmp	.Ltmp216 # Offset: 219
    000000dd: 	nopl	(%rax) # Size: 3
.Ltmp215:
    000000e0: 	addl	$0x1, %r14d
    000000e4: 	cmpl	%ecx, %r14d
    000000e7: 	jl	.Ltmp216 # Offset: 231
.Ltmp213:
    000000ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000fb: 	subq	$0x20, %rax
    000000ff: 	cmpq	%rax, %rbx
    00000102: 	je	.Ltmp217 # Offset: 258
    00000108: 	leaq	0x10(%rbx), %rdi
    0000010c: 	movq	0x8(%r13), %r12
    00000110: 	movq	%rdi, (%rbx)
    00000113: 	movq	(%r13), %rbp
    00000117: 	movq	%rbp, %rax
    0000011a: 	addq	%r12, %rax
    0000011d: 	je	.Ltmp218 # Offset: 285
    0000011f: 	testq	%rbp, %rbp
    00000122: 	je	.Ltmp219 # Offset: 290
.Ltmp218:
    00000128: 	movq	%r12, (%rsp)
    0000012c: 	cmpq	$0xf, %r12
    00000130: 	ja	.Ltmp220 # Offset: 304
    00000136: 	cmpq	$0x1, %r12
    0000013a: 	jne	.Ltmp221 # Offset: 314
    00000140: 	movzbl	(%rbp), %eax
    00000144: 	movb	%al, 0x10(%rbx)
.Ltmp224:
    00000147: 	movq	%r12, 0x8(%rbx)
    0000014b: 	movb	$0x0, (%rdi,%r12)
    00000150: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000157: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000015e: 	addq	$0x20, %rax
    00000162: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000169: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000170: 	je	.Ltmp222 # Offset: 368
.Ltmp225:
    00000176: 	movq	-0x20(%rax), %rbp
    0000017a: 	callq	clock@PLT # Offset: 378
    0000017f: 	movq	%rax, end_time(%rip)
    00000186: 	movq	0x8(%rsp), %rdx
    0000018b: 	subq	%fs:0x28, %rdx
    00000194: 	jne	.Ltmp223 # Offset: 404
    0000019a: 	subq	start_time(%rip), %rax
    000001a1: 	pxor	%xmm0, %xmm0
    000001a5: 	movq	%rbp, %rdi
    000001a8: 	cvtsi2sd	%rax, %xmm0
    000001ad: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001b5: 	addq	$0x10, %rsp
    000001b9: 	popq	%rbx
    000001ba: 	popq	%rbp
    000001bb: 	popq	%r12
    000001bd: 	popq	%r13
    000001bf: 	popq	%r14
    000001c1: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 449
.Ltmp220:
    000001c6: 	movq	%rbx, %rdi
    000001c9: 	movq	%rsp, %rsi
    000001cc: 	xorl	%edx, %edx
    000001ce: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 462
    000001d3: 	movq	%rax, (%rbx)
    000001d6: 	movq	%rax, %rdi
    000001d9: 	movq	(%rsp), %rax
    000001dd: 	movq	%rax, 0x10(%rbx)
.Ltmp226:
    000001e1: 	movq	%r12, %rdx
    000001e4: 	movq	%rbp, %rsi
    000001e7: 	callq	memcpy@PLT # Offset: 487
    000001ec: 	movq	(%rsp), %r12
    000001f0: 	movq	(%rbx), %rdi
    000001f3: 	jmp	.Ltmp224 # Offset: 499
.Ltmp217:
    000001f8: 	movq	%r13, %rsi
    000001fb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000202: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 514
    00000207: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000020e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000215: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000021c: 	jne	.Ltmp225 # Offset: 540
.Ltmp222:
    00000222: 	movq	-0x8(%rdx), %rax
    00000226: 	addq	$0x200, %rax
    0000022c: 	jmp	.Ltmp225 # Offset: 556
.Ltmp221:
    00000231: 	testq	%r12, %r12
    00000234: 	je	.Ltmp224 # Offset: 564
    0000023a: 	jmp	.Ltmp226 # Offset: 570
.Ltmp223:
    0000023c: 	callq	__stack_chk_fail@PLT # Offset: 572
.Ltmp219:
    00000241: 	leaq	DATAat0x57008(%rip), %rdi
    00000248: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 584
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIh16custom_remainderIhLi4EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z14test_variable1Ia22custom_divide_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_variable1Ia22custom_divide_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_variable1Ia22custom_divide_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 55
  State       : disassembled
  Address     : 0x4000
  Size        : 0x22c
  MaxSize     : 0x230
  Offset      : 0x4000
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Ia22custom_divide_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB054:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	movl	%esi, %r13d
    00000009: 	pushq	%r12
    0000000b: 	movq	%rdx, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	pushq	%rbx
    00000010: 	movq	%rdi, %rbx
    00000013: 	subq	$0x18, %rsp
    00000017: 	movq	%fs:0x28, %rax
    00000020: 	movq	%rax, 0x8(%rsp)
    00000025: 	xorl	%eax, %eax
    00000027: 	callq	clock@PLT # Offset: 39
    0000002c: 	movl	iterations(%rip), %edi
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	testl	%edi, %edi
    0000003b: 	jle	.Ltmp227 # Offset: 59
    00000041: 	movsd	init_value(%rip), %xmm0
    00000049: 	movsbl	%r13b, %r13d
    0000004d: 	xorl	%r15d, %r15d
    00000050: 	leaq	0x1f40(%rbx), %r14
    00000057: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005e: 	nop # Size: 2
.Ltmp230:
    00000060: 	movq	%rbx, %rcx
    00000063: 	xorl	%esi, %esi
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp228:
    00000068: 	movsbl	(%rcx), %eax
    0000006b: 	addq	$0x1, %rcx
    0000006f: 	cltd
    00000070: 	idivl	%r13d
    00000073: 	addl	%eax, %esi
    00000075: 	cmpq	%rcx, %r14
    00000078: 	jne	.Ltmp228 # Offset: 120
    0000007a: 	cvttsd2si	%xmm0, %eax
    0000007e: 	movsbl	%al, %eax
    00000081: 	cltd
    00000082: 	idivl	%r13d
    00000085: 	shll	$0x6, %eax
    00000088: 	cmpb	%al, %sil
    0000008b: 	je	.Ltmp229 # Offset: 139
    0000008d: 	movl	current_test(%rip), %edx
    00000093: 	movl	$0x1, %edi
    00000098: 	movq	%rbp, %rsi
    0000009b: 	xorl	%eax, %eax
    0000009d: 	addl	$0x1, %r15d
    000000a1: 	callq	__printf_chk@PLT # Offset: 161
    000000a6: 	movl	iterations(%rip), %edi
    000000ac: 	cmpl	%r15d, %edi
    000000af: 	jle	.Ltmp227 # Offset: 175
    000000b1: 	movsd	init_value(%rip), %xmm0
    000000b9: 	jmp	.Ltmp230 # Offset: 185
    000000bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp229:
    000000c0: 	addl	$0x1, %r15d
    000000c4: 	cmpl	%edi, %r15d
    000000c7: 	jl	.Ltmp230 # Offset: 199
.Ltmp227:
    000000c9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000d7: 	subq	$0x20, %rax
    000000db: 	cmpq	%rax, %rbx
    000000de: 	je	.Ltmp231 # Offset: 222
    000000e4: 	leaq	0x10(%rbx), %rdi
    000000e8: 	movq	%rdi, (%rbx)
    000000eb: 	movq	(%r12), %rbp
    000000ef: 	movq	0x8(%r12), %r12
    000000f4: 	movq	%rbp, %rax
    000000f7: 	addq	%r12, %rax
    000000fa: 	je	.Ltmp232 # Offset: 250
    000000fc: 	testq	%rbp, %rbp
    000000ff: 	je	.Ltmp233 # Offset: 255
.Ltmp232:
    00000105: 	movq	%r12, (%rsp)
    00000109: 	cmpq	$0xf, %r12
    0000010d: 	ja	.Ltmp234 # Offset: 269
    00000113: 	cmpq	$0x1, %r12
    00000117: 	jne	.Ltmp235 # Offset: 279
    0000011d: 	movzbl	(%rbp), %eax
    00000121: 	movb	%al, 0x10(%rbx)
.Ltmp238:
    00000124: 	movq	%r12, 0x8(%rbx)
    00000128: 	movb	$0x0, (%rdi,%r12)
    0000012d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000134: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000013b: 	addq	$0x20, %rax
    0000013f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000146: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000014d: 	je	.Ltmp236 # Offset: 333
.Ltmp239:
    00000153: 	movq	-0x20(%rax), %rbp
    00000157: 	callq	clock@PLT # Offset: 343
    0000015c: 	movq	%rax, end_time(%rip)
    00000163: 	movq	0x8(%rsp), %rdx
    00000168: 	subq	%fs:0x28, %rdx
    00000171: 	jne	.Ltmp237 # Offset: 369
    00000177: 	subq	start_time(%rip), %rax
    0000017e: 	pxor	%xmm0, %xmm0
    00000182: 	movq	%rbp, %rdi
    00000185: 	cvtsi2sd	%rax, %xmm0
    0000018a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000192: 	addq	$0x18, %rsp
    00000196: 	popq	%rbx
    00000197: 	popq	%rbp
    00000198: 	popq	%r12
    0000019a: 	popq	%r13
    0000019c: 	popq	%r14
    0000019e: 	popq	%r15
    000001a0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 416
.Ltmp234:
    000001a5: 	movq	%rbx, %rdi
    000001a8: 	movq	%rsp, %rsi
    000001ab: 	xorl	%edx, %edx
    000001ad: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 429
    000001b2: 	movq	%rax, (%rbx)
    000001b5: 	movq	%rax, %rdi
    000001b8: 	movq	(%rsp), %rax
    000001bc: 	movq	%rax, 0x10(%rbx)
.Ltmp240:
    000001c0: 	movq	%r12, %rdx
    000001c3: 	movq	%rbp, %rsi
    000001c6: 	callq	memcpy@PLT # Offset: 454
    000001cb: 	movq	(%rsp), %r12
    000001cf: 	movq	(%rbx), %rdi
    000001d2: 	jmp	.Ltmp238 # Offset: 466
.Ltmp231:
    000001d7: 	movq	%r12, %rsi
    000001da: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 481
    000001e6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ed: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001fb: 	jne	.Ltmp239 # Offset: 507
.Ltmp236:
    00000201: 	movq	-0x8(%rdx), %rax
    00000205: 	addq	$0x200, %rax
    0000020b: 	jmp	.Ltmp239 # Offset: 523
.Ltmp235:
    00000210: 	testq	%r12, %r12
    00000213: 	je	.Ltmp238 # Offset: 531
    00000219: 	jmp	.Ltmp240 # Offset: 537
.Ltmp237:
    0000021b: 	callq	__stack_chk_fail@PLT # Offset: 539
.Ltmp233:
    00000220: 	leaq	DATAat0x57008(%rip), %rdi
    00000227: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 551
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Ia22custom_divide_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z14test_variable1Ih22custom_divide_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_variable1Ih22custom_divide_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_variable1Ih22custom_divide_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 56
  State       : disassembled
  Address     : 0x4230
  Size        : 0x224
  MaxSize     : 0x230
  Offset      : 0x4230
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Ih22custom_divide_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB055:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	movl	%esi, %r13d
    00000009: 	pushq	%r12
    0000000b: 	movq	%rdx, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	pushq	%rbx
    00000010: 	movq	%rdi, %rbx
    00000013: 	subq	$0x18, %rsp
    00000017: 	movq	%fs:0x28, %rax
    00000020: 	movq	%rax, 0x8(%rsp)
    00000025: 	xorl	%eax, %eax
    00000027: 	callq	clock@PLT # Offset: 39
    0000002c: 	movl	iterations(%rip), %esi
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	testl	%esi, %esi
    0000003b: 	jle	.Ltmp241 # Offset: 59
    00000041: 	cvttsd2si	init_value(%rip), %edi
    00000049: 	xorl	%r15d, %r15d
    0000004c: 	leaq	0x1f40(%rbx), %r14
    00000053: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp244:
    00000060: 	movq	%rbx, %rdx
    00000063: 	xorl	%ecx, %ecx
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp242:
    00000068: 	movzbl	(%rdx), %eax
    0000006b: 	addq	$0x1, %rdx
    0000006f: 	divb	%r13b
    00000072: 	addl	%eax, %ecx
    00000074: 	cmpq	%rdx, %r14
    00000077: 	jne	.Ltmp242 # Offset: 119
    00000079: 	movzbl	%dil, %eax
    0000007d: 	divb	%r13b
    00000080: 	shll	$0x6, %eax
    00000083: 	cmpb	%al, %cl
    00000085: 	je	.Ltmp243 # Offset: 133
    00000087: 	movl	current_test(%rip), %edx
    0000008d: 	movq	%rbp, %rsi
    00000090: 	movl	$0x1, %edi
    00000095: 	xorl	%eax, %eax
    00000097: 	addl	$0x1, %r15d
    0000009b: 	callq	__printf_chk@PLT # Offset: 155
    000000a0: 	movl	iterations(%rip), %esi
    000000a6: 	cmpl	%r15d, %esi
    000000a9: 	jle	.Ltmp241 # Offset: 169
    000000ab: 	cvttsd2si	init_value(%rip), %edi
    000000b3: 	jmp	.Ltmp244 # Offset: 179
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp243:
    000000b8: 	addl	$0x1, %r15d
    000000bc: 	cmpl	%esi, %r15d
    000000bf: 	jl	.Ltmp244 # Offset: 191
.Ltmp241:
    000000c1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000c8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000cf: 	subq	$0x20, %rax
    000000d3: 	cmpq	%rax, %rbx
    000000d6: 	je	.Ltmp245 # Offset: 214
    000000dc: 	leaq	0x10(%rbx), %rdi
    000000e0: 	movq	%rdi, (%rbx)
    000000e3: 	movq	(%r12), %rbp
    000000e7: 	movq	0x8(%r12), %r12
    000000ec: 	movq	%rbp, %rax
    000000ef: 	addq	%r12, %rax
    000000f2: 	je	.Ltmp246 # Offset: 242
    000000f4: 	testq	%rbp, %rbp
    000000f7: 	je	.Ltmp247 # Offset: 247
.Ltmp246:
    000000fd: 	movq	%r12, (%rsp)
    00000101: 	cmpq	$0xf, %r12
    00000105: 	ja	.Ltmp248 # Offset: 261
    0000010b: 	cmpq	$0x1, %r12
    0000010f: 	jne	.Ltmp249 # Offset: 271
    00000115: 	movzbl	(%rbp), %eax
    00000119: 	movb	%al, 0x10(%rbx)
.Ltmp252:
    0000011c: 	movq	%r12, 0x8(%rbx)
    00000120: 	movb	$0x0, (%rdi,%r12)
    00000125: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000012c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000133: 	addq	$0x20, %rax
    00000137: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000013e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000145: 	je	.Ltmp250 # Offset: 325
.Ltmp253:
    0000014b: 	movq	-0x20(%rax), %rbp
    0000014f: 	callq	clock@PLT # Offset: 335
    00000154: 	movq	%rax, end_time(%rip)
    0000015b: 	movq	0x8(%rsp), %rdx
    00000160: 	subq	%fs:0x28, %rdx
    00000169: 	jne	.Ltmp251 # Offset: 361
    0000016f: 	subq	start_time(%rip), %rax
    00000176: 	pxor	%xmm0, %xmm0
    0000017a: 	movq	%rbp, %rdi
    0000017d: 	cvtsi2sd	%rax, %xmm0
    00000182: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000018a: 	addq	$0x18, %rsp
    0000018e: 	popq	%rbx
    0000018f: 	popq	%rbp
    00000190: 	popq	%r12
    00000192: 	popq	%r13
    00000194: 	popq	%r14
    00000196: 	popq	%r15
    00000198: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 408
.Ltmp248:
    0000019d: 	movq	%rbx, %rdi
    000001a0: 	movq	%rsp, %rsi
    000001a3: 	xorl	%edx, %edx
    000001a5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 421
    000001aa: 	movq	%rax, (%rbx)
    000001ad: 	movq	%rax, %rdi
    000001b0: 	movq	(%rsp), %rax
    000001b4: 	movq	%rax, 0x10(%rbx)
.Ltmp254:
    000001b8: 	movq	%r12, %rdx
    000001bb: 	movq	%rbp, %rsi
    000001be: 	callq	memcpy@PLT # Offset: 446
    000001c3: 	movq	(%rsp), %r12
    000001c7: 	movq	(%rbx), %rdi
    000001ca: 	jmp	.Ltmp252 # Offset: 458
.Ltmp245:
    000001cf: 	movq	%r12, %rsi
    000001d2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001d9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 473
    000001de: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001e5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001f3: 	jne	.Ltmp253 # Offset: 499
.Ltmp250:
    000001f9: 	movq	-0x8(%rdx), %rax
    000001fd: 	addq	$0x200, %rax
    00000203: 	jmp	.Ltmp253 # Offset: 515
.Ltmp249:
    00000208: 	testq	%r12, %r12
    0000020b: 	je	.Ltmp252 # Offset: 523
    00000211: 	jmp	.Ltmp254 # Offset: 529
.Ltmp251:
    00000213: 	callq	__stack_chk_fail@PLT # Offset: 531
.Ltmp247:
    00000218: 	leaq	DATAat0x57008(%rip), %rdi
    0000021f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 543
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Ih22custom_divide_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIh16custom_remainderIhLi8EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIh16custom_remainderIhLi8EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIh16custom_remainderIhLi8EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 57
  State       : disassembled
  Address     : 0x4460
  Size        : 0x24d
  MaxSize     : 0x250
  Offset      : 0x4460
  Section     : .text
  Orc Section : .local.text._Z13test_constantIh16custom_remainderIhLi8EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB056:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp255 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	movdqa	DATAat0x57bf0(%rip), %xmm2
    0000004c: 	xorl	%r14d, %r14d
    0000004f: 	leaq	0x1f40(%rbp), %rbx
    00000056: 	leaq	DATAat0x571d0(%rip), %r12
    0000005d: 	nopl	(%rax) # Size: 3
.Ltmp258:
    00000060: 	movq	%rbp, %rax
    00000063: 	pxor	%xmm1, %xmm1
    00000067: 	nopw	(%rax,%rax) # Size: 9
.Ltmp256:
    00000070: 	movdqu	(%rax), %xmm0
    00000074: 	addq	$0x10, %rax
    00000078: 	pand	%xmm2, %xmm0
    0000007c: 	paddb	%xmm0, %xmm1
    00000080: 	cmpq	%rax, %rbx
    00000083: 	jne	.Ltmp256 # Offset: 131
    00000085: 	movdqa	%xmm1, %xmm0
    00000089: 	movl	%esi, %edx
    0000008b: 	psrldq	$0x8, %xmm0
    00000090: 	shll	$0x6, %edx
    00000093: 	paddb	%xmm0, %xmm1
    00000097: 	pxor	%xmm0, %xmm0
    0000009b: 	psadbw	%xmm0, %xmm1
    0000009f: 	movd	%xmm1, %eax
    000000a3: 	cmpb	%al, %dl
    000000a5: 	je	.Ltmp257 # Offset: 165
    000000a7: 	movl	current_test(%rip), %edx
    000000ad: 	movq	%r12, %rsi
    000000b0: 	movl	$0x1, %edi
    000000b5: 	xorl	%eax, %eax
    000000b7: 	addl	$0x1, %r14d
    000000bb: 	callq	__printf_chk@PLT # Offset: 187
    000000c0: 	movl	iterations(%rip), %ecx
    000000c6: 	cmpl	%r14d, %ecx
    000000c9: 	jle	.Ltmp255 # Offset: 201
    000000cb: 	cvttsd2si	init_value(%rip), %esi
    000000d3: 	movdqa	DATAat0x57bf0(%rip), %xmm2
    000000db: 	jmp	.Ltmp258 # Offset: 219
    000000dd: 	nopl	(%rax) # Size: 3
.Ltmp257:
    000000e0: 	addl	$0x1, %r14d
    000000e4: 	cmpl	%ecx, %r14d
    000000e7: 	jl	.Ltmp258 # Offset: 231
.Ltmp255:
    000000ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000fb: 	subq	$0x20, %rax
    000000ff: 	cmpq	%rax, %rbx
    00000102: 	je	.Ltmp259 # Offset: 258
    00000108: 	leaq	0x10(%rbx), %rdi
    0000010c: 	movq	0x8(%r13), %r12
    00000110: 	movq	%rdi, (%rbx)
    00000113: 	movq	(%r13), %rbp
    00000117: 	movq	%rbp, %rax
    0000011a: 	addq	%r12, %rax
    0000011d: 	je	.Ltmp260 # Offset: 285
    0000011f: 	testq	%rbp, %rbp
    00000122: 	je	.Ltmp261 # Offset: 290
.Ltmp260:
    00000128: 	movq	%r12, (%rsp)
    0000012c: 	cmpq	$0xf, %r12
    00000130: 	ja	.Ltmp262 # Offset: 304
    00000136: 	cmpq	$0x1, %r12
    0000013a: 	jne	.Ltmp263 # Offset: 314
    00000140: 	movzbl	(%rbp), %eax
    00000144: 	movb	%al, 0x10(%rbx)
.Ltmp266:
    00000147: 	movq	%r12, 0x8(%rbx)
    0000014b: 	movb	$0x0, (%rdi,%r12)
    00000150: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000157: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000015e: 	addq	$0x20, %rax
    00000162: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000169: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000170: 	je	.Ltmp264 # Offset: 368
.Ltmp267:
    00000176: 	movq	-0x20(%rax), %rbp
    0000017a: 	callq	clock@PLT # Offset: 378
    0000017f: 	movq	%rax, end_time(%rip)
    00000186: 	movq	0x8(%rsp), %rdx
    0000018b: 	subq	%fs:0x28, %rdx
    00000194: 	jne	.Ltmp265 # Offset: 404
    0000019a: 	subq	start_time(%rip), %rax
    000001a1: 	pxor	%xmm0, %xmm0
    000001a5: 	movq	%rbp, %rdi
    000001a8: 	cvtsi2sd	%rax, %xmm0
    000001ad: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001b5: 	addq	$0x10, %rsp
    000001b9: 	popq	%rbx
    000001ba: 	popq	%rbp
    000001bb: 	popq	%r12
    000001bd: 	popq	%r13
    000001bf: 	popq	%r14
    000001c1: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 449
.Ltmp262:
    000001c6: 	movq	%rbx, %rdi
    000001c9: 	movq	%rsp, %rsi
    000001cc: 	xorl	%edx, %edx
    000001ce: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 462
    000001d3: 	movq	%rax, (%rbx)
    000001d6: 	movq	%rax, %rdi
    000001d9: 	movq	(%rsp), %rax
    000001dd: 	movq	%rax, 0x10(%rbx)
.Ltmp268:
    000001e1: 	movq	%r12, %rdx
    000001e4: 	movq	%rbp, %rsi
    000001e7: 	callq	memcpy@PLT # Offset: 487
    000001ec: 	movq	(%rsp), %r12
    000001f0: 	movq	(%rbx), %rdi
    000001f3: 	jmp	.Ltmp266 # Offset: 499
.Ltmp259:
    000001f8: 	movq	%r13, %rsi
    000001fb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000202: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 514
    00000207: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000020e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000215: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000021c: 	jne	.Ltmp267 # Offset: 540
.Ltmp264:
    00000222: 	movq	-0x8(%rdx), %rax
    00000226: 	addq	$0x200, %rax
    0000022c: 	jmp	.Ltmp267 # Offset: 556
.Ltmp263:
    00000231: 	testq	%r12, %r12
    00000234: 	je	.Ltmp266 # Offset: 564
    0000023a: 	jmp	.Ltmp268 # Offset: 570
.Ltmp265:
    0000023c: 	callq	__stack_chk_fail@PLT # Offset: 572
.Ltmp261:
    00000241: 	leaq	DATAat0x57008(%rip), %rdi
    00000248: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 584
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIh16custom_remainderIhLi8EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z14test_variable1Ih25custom_remainder_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_variable1Ih25custom_remainder_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_variable1Ih25custom_remainder_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 58
  State       : disassembled
  Address     : 0x46b0
  Size        : 0x22c
  MaxSize     : 0x230
  Offset      : 0x46b0
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Ih25custom_remainder_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB057:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	movl	%esi, %r13d
    00000009: 	pushq	%r12
    0000000b: 	movq	%rdx, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	pushq	%rbx
    00000010: 	movq	%rdi, %rbx
    00000013: 	subq	$0x18, %rsp
    00000017: 	movq	%fs:0x28, %rax
    00000020: 	movq	%rax, 0x8(%rsp)
    00000025: 	xorl	%eax, %eax
    00000027: 	callq	clock@PLT # Offset: 39
    0000002c: 	movl	iterations(%rip), %edi
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	testl	%edi, %edi
    0000003b: 	jle	.Ltmp269 # Offset: 59
    00000041: 	cvttsd2si	init_value(%rip), %r8d
    0000004a: 	movzbl	%r13b, %r13d
    0000004e: 	xorl	%r15d, %r15d
    00000051: 	leaq	0x1f40(%rbx), %r14
    00000058: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005f: 	nop # Size: 1
.Ltmp272:
    00000060: 	movq	%rbx, %rcx
    00000063: 	xorl	%esi, %esi
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp270:
    00000068: 	movzbl	(%rcx), %eax
    0000006b: 	addq	$0x1, %rcx
    0000006f: 	cltd
    00000070: 	idivl	%r13d
    00000073: 	addl	%edx, %esi
    00000075: 	cmpq	%rcx, %r14
    00000078: 	jne	.Ltmp270 # Offset: 120
    0000007a: 	movzbl	%r8b, %eax
    0000007e: 	cltd
    0000007f: 	idivl	%r13d
    00000082: 	shll	$0x6, %edx
    00000085: 	cmpb	%dl, %sil
    00000088: 	je	.Ltmp271 # Offset: 136
    0000008a: 	movl	current_test(%rip), %edx
    00000090: 	movl	$0x1, %edi
    00000095: 	movq	%rbp, %rsi
    00000098: 	xorl	%eax, %eax
    0000009a: 	addl	$0x1, %r15d
    0000009e: 	callq	__printf_chk@PLT # Offset: 158
    000000a3: 	movl	iterations(%rip), %edi
    000000a9: 	cmpl	%r15d, %edi
    000000ac: 	jle	.Ltmp269 # Offset: 172
    000000ae: 	cvttsd2si	init_value(%rip), %r8d
    000000b7: 	jmp	.Ltmp272 # Offset: 183
    000000b9: 	nopl	(%rax) # Size: 7
.Ltmp271:
    000000c0: 	addl	$0x1, %r15d
    000000c4: 	cmpl	%edi, %r15d
    000000c7: 	jl	.Ltmp272 # Offset: 199
.Ltmp269:
    000000c9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000d7: 	subq	$0x20, %rax
    000000db: 	cmpq	%rax, %rbx
    000000de: 	je	.Ltmp273 # Offset: 222
    000000e4: 	leaq	0x10(%rbx), %rdi
    000000e8: 	movq	%rdi, (%rbx)
    000000eb: 	movq	(%r12), %rbp
    000000ef: 	movq	0x8(%r12), %r12
    000000f4: 	movq	%rbp, %rax
    000000f7: 	addq	%r12, %rax
    000000fa: 	je	.Ltmp274 # Offset: 250
    000000fc: 	testq	%rbp, %rbp
    000000ff: 	je	.Ltmp275 # Offset: 255
.Ltmp274:
    00000105: 	movq	%r12, (%rsp)
    00000109: 	cmpq	$0xf, %r12
    0000010d: 	ja	.Ltmp276 # Offset: 269
    00000113: 	cmpq	$0x1, %r12
    00000117: 	jne	.Ltmp277 # Offset: 279
    0000011d: 	movzbl	(%rbp), %eax
    00000121: 	movb	%al, 0x10(%rbx)
.Ltmp280:
    00000124: 	movq	%r12, 0x8(%rbx)
    00000128: 	movb	$0x0, (%rdi,%r12)
    0000012d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000134: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000013b: 	addq	$0x20, %rax
    0000013f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000146: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000014d: 	je	.Ltmp278 # Offset: 333
.Ltmp281:
    00000153: 	movq	-0x20(%rax), %rbp
    00000157: 	callq	clock@PLT # Offset: 343
    0000015c: 	movq	%rax, end_time(%rip)
    00000163: 	movq	0x8(%rsp), %rdx
    00000168: 	subq	%fs:0x28, %rdx
    00000171: 	jne	.Ltmp279 # Offset: 369
    00000177: 	subq	start_time(%rip), %rax
    0000017e: 	pxor	%xmm0, %xmm0
    00000182: 	movq	%rbp, %rdi
    00000185: 	cvtsi2sd	%rax, %xmm0
    0000018a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000192: 	addq	$0x18, %rsp
    00000196: 	popq	%rbx
    00000197: 	popq	%rbp
    00000198: 	popq	%r12
    0000019a: 	popq	%r13
    0000019c: 	popq	%r14
    0000019e: 	popq	%r15
    000001a0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 416
.Ltmp276:
    000001a5: 	movq	%rbx, %rdi
    000001a8: 	movq	%rsp, %rsi
    000001ab: 	xorl	%edx, %edx
    000001ad: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 429
    000001b2: 	movq	%rax, (%rbx)
    000001b5: 	movq	%rax, %rdi
    000001b8: 	movq	(%rsp), %rax
    000001bc: 	movq	%rax, 0x10(%rbx)
.Ltmp282:
    000001c0: 	movq	%r12, %rdx
    000001c3: 	movq	%rbp, %rsi
    000001c6: 	callq	memcpy@PLT # Offset: 454
    000001cb: 	movq	(%rsp), %r12
    000001cf: 	movq	(%rbx), %rdi
    000001d2: 	jmp	.Ltmp280 # Offset: 466
.Ltmp273:
    000001d7: 	movq	%r12, %rsi
    000001da: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 481
    000001e6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ed: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001fb: 	jne	.Ltmp281 # Offset: 507
.Ltmp278:
    00000201: 	movq	-0x8(%rdx), %rax
    00000205: 	addq	$0x200, %rax
    0000020b: 	jmp	.Ltmp281 # Offset: 523
.Ltmp277:
    00000210: 	testq	%r12, %r12
    00000213: 	je	.Ltmp280 # Offset: 531
    00000219: 	jmp	.Ltmp282 # Offset: 537
.Ltmp279:
    0000021b: 	callq	__stack_chk_fail@PLT # Offset: 539
.Ltmp275:
    00000220: 	leaq	DATAat0x57008(%rip), %rdi
    00000227: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 551
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Ih25custom_remainder_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIm24shift_divide_toward_zeroImLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 59
  State       : disassembled
  Address     : 0x48e0
  Size        : 0x2e5
  MaxSize     : 0x2f0
  Offset      : 0x48e0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIm24shift_divide_toward_zeroImLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB058:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp283 # Offset: 65
    00000047: 	movl	%r15d, %eax
    0000004a: 	movl	%r15d, %ebx
    0000004d: 	leaq	DATAat0x571d0(%rip), %rbp
    00000054: 	xorl	%r12d, %r12d
    00000057: 	shrl	%eax
    00000059: 	movsd	DATAat0x57bd8(%rip), %xmm3
    00000061: 	movsd	init_value(%rip), %xmm2
    00000069: 	andl	$-0x2, %ebx
    0000006c: 	subl	$0x1, %eax
    0000006f: 	shlq	$0x4, %rax
    00000073: 	leaq	0x10(%r13,%rax), %r14
    00000078: 	nopl	(%rax,%rax) # Size: 8
.Ltmp289:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp284 # Offset: 133
    00000087: 	cmpl	$0x1, %r15d
    0000008b: 	je	.Ltmp285 # Offset: 139
    00000091: 	movq	%r13, %rax
    00000094: 	pxor	%xmm1, %xmm1
    00000098: 	nopl	(%rax,%rax) # Size: 8
.Ltmp286:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	psrlq	$0x6, %xmm0
    000000ad: 	paddq	%xmm0, %xmm1
    000000b1: 	cmpq	%rax, %r14
    000000b4: 	jne	.Ltmp286 # Offset: 180
    000000b6: 	movdqa	%xmm1, %xmm0
    000000ba: 	movslq	%ebx, %rdx
    000000bd: 	psrldq	$0x8, %xmm0
    000000c2: 	paddq	%xmm0, %xmm1
    000000c6: 	movq	%xmm1, %rax
    000000cb: 	cmpl	%r15d, %ebx
    000000ce: 	je	.Ltmp284 # Offset: 206
.Ltmp298:
    000000d0: 	movq	(%r13,%rdx,8), %rdx
    000000d5: 	shrq	$0x6, %rdx
    000000d9: 	addq	%rdx, %rax
.Ltmp284:
    000000dc: 	comisd	%xmm3, %xmm2
    000000e0: 	jae	.Ltmp287 # Offset: 224
    000000e6: 	cvttsd2si	%xmm2, %rdx
.Ltmp297:
    000000eb: 	shrq	$0x6, %rdx
    000000ef: 	imulq	$0x1f40, %rdx, %rdx
    000000f6: 	cmpq	%rax, %rdx
    000000f9: 	je	.Ltmp288 # Offset: 249
    000000fb: 	movl	current_test(%rip), %edx
    00000101: 	movq	%rbp, %rsi
    00000104: 	movl	$0x1, %edi
    00000109: 	xorl	%eax, %eax
    0000010b: 	addl	$0x1, %r12d
    0000010f: 	callq	__printf_chk@PLT # Offset: 271
    00000114: 	movl	iterations(%rip), %esi
    0000011a: 	cmpl	%esi, %r12d
    0000011d: 	jge	.Ltmp283 # Offset: 285
    0000011f: 	movq	DATAat0x57bd8(%rip), %rax
    00000126: 	movsd	init_value(%rip), %xmm2
    0000012e: 	movq	%rax, %xmm3
    00000133: 	jmp	.Ltmp289 # Offset: 307
    00000138: 	nopl	(%rax,%rax) # Size: 8
.Ltmp288:
    00000140: 	addl	$0x1, %r12d
    00000144: 	cmpl	%esi, %r12d
    00000147: 	jl	.Ltmp289 # Offset: 327
.Ltmp283:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp290 # Offset: 354
    00000168: 	movq	0x8(%rsp), %rax
    0000016d: 	leaq	0x10(%rbx), %rdi
    00000171: 	movq	%rdi, (%rbx)
    00000174: 	movq	(%rax), %rbp
    00000177: 	movq	0x8(%rax), %r12
    0000017b: 	movq	%rbp, %rax
    0000017e: 	addq	%r12, %rax
    00000181: 	je	.Ltmp291 # Offset: 385
    00000183: 	testq	%rbp, %rbp
    00000186: 	je	.Ltmp292 # Offset: 390
.Ltmp291:
    0000018c: 	movq	%r12, 0x10(%rsp)
    00000191: 	cmpq	$0xf, %r12
    00000195: 	ja	.Ltmp293 # Offset: 405
    0000019b: 	cmpq	$0x1, %r12
    0000019f: 	jne	.Ltmp294 # Offset: 415
    000001a5: 	movzbl	(%rbp), %eax
    000001a9: 	movb	%al, 0x10(%rbx)
.Ltmp299:
    000001ac: 	movq	%r12, 0x8(%rbx)
    000001b0: 	movb	$0x0, (%rdi,%r12)
    000001b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001bc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001c3: 	addq	$0x20, %rax
    000001c7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ce: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d5: 	je	.Ltmp295 # Offset: 469
.Ltmp300:
    000001db: 	movq	-0x20(%rax), %rbp
    000001df: 	callq	clock@PLT # Offset: 479
    000001e4: 	movq	%rax, end_time(%rip)
    000001eb: 	movq	0x18(%rsp), %rdx
    000001f0: 	subq	%fs:0x28, %rdx
    000001f9: 	jne	.Ltmp296 # Offset: 505
    000001ff: 	subq	start_time(%rip), %rax
    00000206: 	pxor	%xmm0, %xmm0
    0000020a: 	movq	%rbp, %rdi
    0000020d: 	cvtsi2sd	%rax, %xmm0
    00000212: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000021a: 	addq	$0x28, %rsp
    0000021e: 	popq	%rbx
    0000021f: 	popq	%rbp
    00000220: 	popq	%r12
    00000222: 	popq	%r13
    00000224: 	popq	%r14
    00000226: 	popq	%r15
    00000228: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 552
    0000022d: 	nopl	(%rax) # Size: 3
.Ltmp287:
    00000230: 	movabsq	$-0x8000000000000000, %rcx
    0000023a: 	movapd	%xmm2, %xmm0
    0000023e: 	subsd	%xmm3, %xmm0
    00000242: 	cvttsd2si	%xmm0, %rdx
    00000247: 	xorq	%rcx, %rdx
    0000024a: 	jmp	.Ltmp297 # Offset: 586
.Ltmp285:
    0000024f: 	xorl	%edx, %edx
    00000251: 	xorl	%eax, %eax
    00000253: 	jmp	.Ltmp298 # Offset: 595
.Ltmp293:
    00000258: 	movq	%rbx, %rdi
    0000025b: 	leaq	0x10(%rsp), %rsi
    00000260: 	xorl	%edx, %edx
    00000262: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 610
    00000267: 	movq	%rax, (%rbx)
    0000026a: 	movq	%rax, %rdi
    0000026d: 	movq	0x10(%rsp), %rax
    00000272: 	movq	%rax, 0x10(%rbx)
.Ltmp301:
    00000276: 	movq	%r12, %rdx
    00000279: 	movq	%rbp, %rsi
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x10(%rsp), %r12
    00000286: 	movq	(%rbx), %rdi
    00000289: 	jmp	.Ltmp299 # Offset: 649
.Ltmp290:
    0000028e: 	movq	0x8(%rsp), %rsi
    00000293: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000029a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 666
    0000029f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b4: 	jne	.Ltmp300 # Offset: 692
.Ltmp295:
    000002ba: 	movq	-0x8(%rdx), %rax
    000002be: 	addq	$0x200, %rax
    000002c4: 	jmp	.Ltmp300 # Offset: 708
.Ltmp294:
    000002c9: 	testq	%r12, %r12
    000002cc: 	je	.Ltmp299 # Offset: 716
    000002d2: 	jmp	.Ltmp301 # Offset: 722
.Ltmp296:
    000002d4: 	callq	__stack_chk_fail@PLT # Offset: 724
.Ltmp292:
    000002d9: 	leaq	DATAat0x57008(%rip), %rdi
    000002e0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 736
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIm24shift_divide_toward_zeroImLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIj21custom_divide_inline2IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 60
  State       : disassembled
  Address     : 0x4bd0
  Size        : 0x2db
  MaxSize     : 0x2e0
  Offset      : 0x4bd0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIj21custom_divide_inline2IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB059:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp302 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r14d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm2
    00000067: 	andl	$-0x4, %ebx
    0000006a: 	shrl	$0x2, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r15,%rax), %r13
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp307:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r14d, %r14d
    00000085: 	jle	.Ltmp303 # Offset: 133
    0000008b: 	cmpl	$0x2, 0x4(%rsp)
    00000090: 	jbe	.Ltmp304 # Offset: 144
    00000096: 	movq	%r15, %rax
    00000099: 	pxor	%xmm1, %xmm1
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp305:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	psrld	$0x1, %xmm0
    000000ad: 	paddd	%xmm0, %xmm1
    000000b1: 	cmpq	%r13, %rax
    000000b4: 	jne	.Ltmp305 # Offset: 180
    000000b6: 	movdqa	%xmm1, %xmm0
    000000ba: 	movl	%ebx, %edx
    000000bc: 	psrldq	$0x8, %xmm0
    000000c1: 	paddd	%xmm0, %xmm1
    000000c5: 	movdqa	%xmm1, %xmm0
    000000c9: 	psrldq	$0x4, %xmm0
    000000ce: 	paddd	%xmm0, %xmm1
    000000d2: 	movd	%xmm1, %eax
    000000d6: 	cmpl	%r14d, %ebx
    000000d9: 	je	.Ltmp303 # Offset: 217
.Ltmp315:
    000000db: 	movslq	%edx, %rdi
    000000de: 	leaq	(,%rdi,4), %r9
    000000e6: 	movl	(%r15,%rdi,4), %edi
    000000ea: 	shrl	%edi
    000000ec: 	addl	%edi, %eax
    000000ee: 	leal	0x1(%rdx), %edi
    000000f1: 	cmpl	%edi, %r14d
    000000f4: 	jle	.Ltmp303 # Offset: 244
    000000f6: 	movl	0x4(%r15,%r9), %edi
    000000fb: 	addl	$0x2, %edx
    000000fe: 	shrl	%edi
    00000100: 	addl	%edi, %eax
    00000102: 	cmpl	%edx, %r14d
    00000105: 	jle	.Ltmp303 # Offset: 261
    00000107: 	movl	0x8(%r15,%r9), %edx
    0000010c: 	shrl	%edx
    0000010e: 	addl	%edx, %eax
.Ltmp303:
    00000110: 	cvttsd2si	%xmm2, %rdx
    00000115: 	shrl	%edx
    00000117: 	imull	$0x1f40, %edx, %edx
    0000011d: 	cmpl	%eax, %edx
    0000011f: 	je	.Ltmp306 # Offset: 287
    00000121: 	movl	current_test(%rip), %edx
    00000127: 	movq	%rbp, %rsi
    0000012a: 	movl	$0x1, %edi
    0000012f: 	xorl	%eax, %eax
    00000131: 	addl	$0x1, %r12d
    00000135: 	callq	__printf_chk@PLT # Offset: 309
    0000013a: 	movl	iterations(%rip), %esi
    00000140: 	cmpl	%esi, %r12d
    00000143: 	jge	.Ltmp302 # Offset: 323
    00000145: 	movsd	init_value(%rip), %xmm2
    0000014d: 	jmp	.Ltmp307 # Offset: 333
    00000152: 	nopw	(%rax,%rax) # Size: 6
.Ltmp306:
    00000158: 	addl	$0x1, %r12d
    0000015c: 	cmpl	%esi, %r12d
    0000015f: 	jl	.Ltmp307 # Offset: 351
.Ltmp302:
    00000165: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000016c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000173: 	subq	$0x20, %rax
    00000177: 	cmpq	%rax, %rbx
    0000017a: 	je	.Ltmp308 # Offset: 378
    00000180: 	movq	0x8(%rsp), %rax
    00000185: 	leaq	0x10(%rbx), %rdi
    00000189: 	movq	%rdi, (%rbx)
    0000018c: 	movq	(%rax), %rbp
    0000018f: 	movq	0x8(%rax), %r12
    00000193: 	movq	%rbp, %rax
    00000196: 	addq	%r12, %rax
    00000199: 	je	.Ltmp309 # Offset: 409
    0000019b: 	testq	%rbp, %rbp
    0000019e: 	je	.Ltmp310 # Offset: 414
.Ltmp309:
    000001a4: 	movq	%r12, 0x10(%rsp)
    000001a9: 	cmpq	$0xf, %r12
    000001ad: 	ja	.Ltmp311 # Offset: 429
    000001b3: 	cmpq	$0x1, %r12
    000001b7: 	jne	.Ltmp312 # Offset: 439
    000001bd: 	movzbl	(%rbp), %eax
    000001c1: 	movb	%al, 0x10(%rbx)
.Ltmp316:
    000001c4: 	movq	%r12, 0x8(%rbx)
    000001c8: 	movb	$0x0, (%rdi,%r12)
    000001cd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001db: 	addq	$0x20, %rax
    000001df: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001e6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001ed: 	je	.Ltmp313 # Offset: 493
.Ltmp317:
    000001f3: 	movq	-0x20(%rax), %rbp
    000001f7: 	callq	clock@PLT # Offset: 503
    000001fc: 	movq	%rax, end_time(%rip)
    00000203: 	movq	0x18(%rsp), %rdx
    00000208: 	subq	%fs:0x28, %rdx
    00000211: 	jne	.Ltmp314 # Offset: 529
    00000217: 	subq	start_time(%rip), %rax
    0000021e: 	pxor	%xmm0, %xmm0
    00000222: 	movq	%rbp, %rdi
    00000225: 	cvtsi2sd	%rax, %xmm0
    0000022a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000232: 	addq	$0x28, %rsp
    00000236: 	popq	%rbx
    00000237: 	popq	%rbp
    00000238: 	popq	%r12
    0000023a: 	popq	%r13
    0000023c: 	popq	%r14
    0000023e: 	popq	%r15
    00000240: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 576
.Ltmp304:
    00000245: 	xorl	%edx, %edx
    00000247: 	xorl	%eax, %eax
    00000249: 	jmp	.Ltmp315 # Offset: 585
.Ltmp311:
    0000024e: 	movq	%rbx, %rdi
    00000251: 	leaq	0x10(%rsp), %rsi
    00000256: 	xorl	%edx, %edx
    00000258: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 600
    0000025d: 	movq	%rax, (%rbx)
    00000260: 	movq	%rax, %rdi
    00000263: 	movq	0x10(%rsp), %rax
    00000268: 	movq	%rax, 0x10(%rbx)
.Ltmp318:
    0000026c: 	movq	%r12, %rdx
    0000026f: 	movq	%rbp, %rsi
    00000272: 	callq	memcpy@PLT # Offset: 626
    00000277: 	movq	0x10(%rsp), %r12
    0000027c: 	movq	(%rbx), %rdi
    0000027f: 	jmp	.Ltmp316 # Offset: 639
.Ltmp308:
    00000284: 	movq	0x8(%rsp), %rsi
    00000289: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000290: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 656
    00000295: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000029c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002a3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002aa: 	jne	.Ltmp317 # Offset: 682
.Ltmp313:
    000002b0: 	movq	-0x8(%rdx), %rax
    000002b4: 	addq	$0x200, %rax
    000002ba: 	jmp	.Ltmp317 # Offset: 698
.Ltmp312:
    000002bf: 	testq	%r12, %r12
    000002c2: 	je	.Ltmp316 # Offset: 706
    000002c8: 	jmp	.Ltmp318 # Offset: 712
.Ltmp314:
    000002ca: 	callq	__stack_chk_fail@PLT # Offset: 714
.Ltmp310:
    000002cf: 	leaq	DATAat0x57008(%rip), %rdi
    000002d6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 726
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIj21custom_divide_inline2IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIj14and_remainder2IjLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 61
  State       : disassembled
  Address     : 0x4eb0
  Size        : 0x2fb
  MaxSize     : 0x300
  Offset      : 0x4eb0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIj14and_remainder2IjLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB060:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp319 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	xorl	%r12d, %r12d
    00000051: 	movsd	init_value(%rip), %xmm3
    00000059: 	movl	%eax, 0x4(%rsp)
    0000005d: 	movl	%r14d, %eax
    00000060: 	movdqa	DATAat0x57c20(%rip), %xmm2
    00000068: 	andl	$-0x4, %ebx
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000075: 	subl	$0x1, %eax
    00000078: 	shlq	$0x4, %rax
    0000007c: 	leaq	0x10(%r15,%rax), %r13
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp324:
    00000088: 	xorl	%eax, %eax
    0000008a: 	testl	%r14d, %r14d
    0000008d: 	jle	.Ltmp320 # Offset: 141
    00000093: 	cmpl	$0x2, 0x4(%rsp)
    00000098: 	jbe	.Ltmp321 # Offset: 152
    0000009e: 	movq	%r15, %rax
    000000a1: 	pxor	%xmm1, %xmm1
    000000a5: 	nopl	(%rax) # Size: 3
.Ltmp322:
    000000a8: 	movdqu	(%rax), %xmm0
    000000ac: 	addq	$0x10, %rax
    000000b0: 	pand	%xmm2, %xmm0
    000000b4: 	paddd	%xmm0, %xmm1
    000000b8: 	cmpq	%r13, %rax
    000000bb: 	jne	.Ltmp322 # Offset: 187
    000000bd: 	movdqa	%xmm1, %xmm0
    000000c1: 	movl	%ebx, %edx
    000000c3: 	psrldq	$0x8, %xmm0
    000000c8: 	paddd	%xmm0, %xmm1
    000000cc: 	movdqa	%xmm1, %xmm0
    000000d0: 	psrldq	$0x4, %xmm0
    000000d5: 	paddd	%xmm0, %xmm1
    000000d9: 	movd	%xmm1, %eax
    000000dd: 	cmpl	%r14d, %ebx
    000000e0: 	je	.Ltmp320 # Offset: 224
.Ltmp332:
    000000e2: 	movslq	%edx, %rdi
    000000e5: 	leaq	(,%rdi,4), %r9
    000000ed: 	movl	(%r15,%rdi,4), %edi
    000000f1: 	andl	$0x3ff, %edi
    000000f7: 	addl	%edi, %eax
    000000f9: 	leal	0x1(%rdx), %edi
    000000fc: 	cmpl	%edi, %r14d
    000000ff: 	jle	.Ltmp320 # Offset: 255
    00000101: 	movl	0x4(%r15,%r9), %edi
    00000106: 	addl	$0x2, %edx
    00000109: 	andl	$0x3ff, %edi
    0000010f: 	addl	%edi, %eax
    00000111: 	cmpl	%edx, %r14d
    00000114: 	jle	.Ltmp320 # Offset: 276
    00000116: 	movl	0x8(%r15,%r9), %edx
    0000011b: 	andl	$0x3ff, %edx
    00000121: 	addl	%edx, %eax
.Ltmp320:
    00000123: 	cvttsd2si	%xmm3, %rdx
    00000128: 	andl	$0x3ff, %edx
    0000012e: 	imull	$0x1f40, %edx, %edx
    00000134: 	cmpl	%eax, %edx
    00000136: 	je	.Ltmp323 # Offset: 310
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	movq	%rbp, %rsi
    00000141: 	movl	$0x1, %edi
    00000146: 	xorl	%eax, %eax
    00000148: 	addl	$0x1, %r12d
    0000014c: 	callq	__printf_chk@PLT # Offset: 332
    00000151: 	movl	iterations(%rip), %esi
    00000157: 	cmpl	%esi, %r12d
    0000015a: 	jge	.Ltmp319 # Offset: 346
    0000015c: 	movsd	init_value(%rip), %xmm3
    00000164: 	movdqa	DATAat0x57c20(%rip), %xmm2
    0000016c: 	jmp	.Ltmp324 # Offset: 364
    00000171: 	nopl	(%rax) # Size: 7
.Ltmp323:
    00000178: 	addl	$0x1, %r12d
    0000017c: 	cmpl	%esi, %r12d
    0000017f: 	jl	.Ltmp324 # Offset: 383
.Ltmp319:
    00000185: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000018c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000193: 	subq	$0x20, %rax
    00000197: 	cmpq	%rax, %rbx
    0000019a: 	je	.Ltmp325 # Offset: 410
    000001a0: 	movq	0x8(%rsp), %rax
    000001a5: 	leaq	0x10(%rbx), %rdi
    000001a9: 	movq	%rdi, (%rbx)
    000001ac: 	movq	(%rax), %rbp
    000001af: 	movq	0x8(%rax), %r12
    000001b3: 	movq	%rbp, %rax
    000001b6: 	addq	%r12, %rax
    000001b9: 	je	.Ltmp326 # Offset: 441
    000001bb: 	testq	%rbp, %rbp
    000001be: 	je	.Ltmp327 # Offset: 446
.Ltmp326:
    000001c4: 	movq	%r12, 0x10(%rsp)
    000001c9: 	cmpq	$0xf, %r12
    000001cd: 	ja	.Ltmp328 # Offset: 461
    000001d3: 	cmpq	$0x1, %r12
    000001d7: 	jne	.Ltmp329 # Offset: 471
    000001dd: 	movzbl	(%rbp), %eax
    000001e1: 	movb	%al, 0x10(%rbx)
.Ltmp333:
    000001e4: 	movq	%r12, 0x8(%rbx)
    000001e8: 	movb	$0x0, (%rdi,%r12)
    000001ed: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001fb: 	addq	$0x20, %rax
    000001ff: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000206: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000020d: 	je	.Ltmp330 # Offset: 525
.Ltmp334:
    00000213: 	movq	-0x20(%rax), %rbp
    00000217: 	callq	clock@PLT # Offset: 535
    0000021c: 	movq	%rax, end_time(%rip)
    00000223: 	movq	0x18(%rsp), %rdx
    00000228: 	subq	%fs:0x28, %rdx
    00000231: 	jne	.Ltmp331 # Offset: 561
    00000237: 	subq	start_time(%rip), %rax
    0000023e: 	pxor	%xmm0, %xmm0
    00000242: 	movq	%rbp, %rdi
    00000245: 	cvtsi2sd	%rax, %xmm0
    0000024a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000252: 	addq	$0x28, %rsp
    00000256: 	popq	%rbx
    00000257: 	popq	%rbp
    00000258: 	popq	%r12
    0000025a: 	popq	%r13
    0000025c: 	popq	%r14
    0000025e: 	popq	%r15
    00000260: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 608
.Ltmp321:
    00000265: 	xorl	%edx, %edx
    00000267: 	xorl	%eax, %eax
    00000269: 	jmp	.Ltmp332 # Offset: 617
.Ltmp328:
    0000026e: 	movq	%rbx, %rdi
    00000271: 	leaq	0x10(%rsp), %rsi
    00000276: 	xorl	%edx, %edx
    00000278: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 632
    0000027d: 	movq	%rax, (%rbx)
    00000280: 	movq	%rax, %rdi
    00000283: 	movq	0x10(%rsp), %rax
    00000288: 	movq	%rax, 0x10(%rbx)
.Ltmp335:
    0000028c: 	movq	%r12, %rdx
    0000028f: 	movq	%rbp, %rsi
    00000292: 	callq	memcpy@PLT # Offset: 658
    00000297: 	movq	0x10(%rsp), %r12
    0000029c: 	movq	(%rbx), %rdi
    0000029f: 	jmp	.Ltmp333 # Offset: 671
.Ltmp325:
    000002a4: 	movq	0x8(%rsp), %rsi
    000002a9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002b0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 688
    000002b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002bc: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002c3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002ca: 	jne	.Ltmp334 # Offset: 714
.Ltmp330:
    000002d0: 	movq	-0x8(%rdx), %rax
    000002d4: 	addq	$0x200, %rax
    000002da: 	jmp	.Ltmp334 # Offset: 730
.Ltmp329:
    000002df: 	testq	%r12, %r12
    000002e2: 	je	.Ltmp333 # Offset: 738
    000002e8: 	jmp	.Ltmp335 # Offset: 744
.Ltmp331:
    000002ea: 	callq	__stack_chk_fail@PLT # Offset: 746
.Ltmp327:
    000002ef: 	leaq	DATAat0x57008(%rip), %rdi
    000002f6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 758
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIj14and_remainder2IjLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1Im22custom_divide_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 62
  State       : disassembled
  Address     : 0x51b0
  Size        : 0x28c
  MaxSize     : 0x290
  Offset      : 0x51b0
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Im22custom_divide_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB061:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdx, %r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movl	%esi, %ebp
    00000012: 	pushq	%rbx
    00000013: 	movq	%rdi, %rbx
    00000016: 	subq	$0x28, %rsp
    0000001a: 	movq	%rcx, 0x8(%rsp)
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x18(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	callq	clock@PLT # Offset: 47
    00000034: 	movl	iterations(%rip), %edi
    0000003a: 	movq	%rax, start_time(%rip)
    00000041: 	testl	%edi, %edi
    00000043: 	jle	.Ltmp336 # Offset: 67
    00000049: 	leal	-0x1(%rbp), %eax
    0000004c: 	movsd	DATAat0x57bd8(%rip), %xmm1
    00000054: 	xorl	%r13d, %r13d
    00000057: 	movsd	init_value(%rip), %xmm0
    0000005f: 	leaq	0x8(%rbx,%rax,8), %r15
    00000064: 	leaq	DATAat0x571d0(%rip), %r12
    0000006b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp341:
    00000070: 	movq	%rbx, %rcx
    00000073: 	xorl	%esi, %esi
    00000075: 	testl	%ebp, %ebp
    00000077: 	jle	.Ltmp337 # Offset: 119
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp338:
    00000080: 	movq	(%rcx), %rax
    00000083: 	xorl	%edx, %edx
    00000085: 	addq	$0x8, %rcx
    00000089: 	divq	%r14
    0000008c: 	addq	%rax, %rsi
    0000008f: 	cmpq	%rcx, %r15
    00000092: 	jne	.Ltmp338 # Offset: 146
.Ltmp337:
    00000094: 	comisd	%xmm1, %xmm0
    00000098: 	jae	.Ltmp339 # Offset: 152
    0000009e: 	cvttsd2si	%xmm0, %rax
.Ltmp349:
    000000a3: 	xorl	%edx, %edx
    000000a5: 	divq	%r14
    000000a8: 	imulq	$0x1f40, %rax, %rax
    000000af: 	cmpq	%rsi, %rax
    000000b2: 	je	.Ltmp340 # Offset: 178
    000000b4: 	movl	current_test(%rip), %edx
    000000ba: 	movl	$0x1, %edi
    000000bf: 	movq	%r12, %rsi
    000000c2: 	xorl	%eax, %eax
    000000c4: 	addl	$0x1, %r13d
    000000c8: 	callq	__printf_chk@PLT # Offset: 200
    000000cd: 	movl	iterations(%rip), %edi
    000000d3: 	cmpl	%edi, %r13d
    000000d6: 	jge	.Ltmp336 # Offset: 214
    000000d8: 	movq	DATAat0x57bd8(%rip), %rax
    000000df: 	movsd	init_value(%rip), %xmm0
    000000e7: 	movq	%rax, %xmm1
    000000ec: 	jmp	.Ltmp341 # Offset: 236
    000000ee: 	nop # Size: 2
.Ltmp340:
    000000f0: 	addl	$0x1, %r13d
    000000f4: 	cmpl	%edi, %r13d
    000000f7: 	jl	.Ltmp341 # Offset: 247
.Ltmp336:
    000000fd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000104: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000010b: 	subq	$0x20, %rax
    0000010f: 	cmpq	%rax, %rbx
    00000112: 	je	.Ltmp342 # Offset: 274
    00000118: 	movq	0x8(%rsp), %rax
    0000011d: 	leaq	0x10(%rbx), %rdi
    00000121: 	movq	%rdi, (%rbx)
    00000124: 	movq	(%rax), %rbp
    00000127: 	movq	0x8(%rax), %r12
    0000012b: 	movq	%rbp, %rax
    0000012e: 	addq	%r12, %rax
    00000131: 	je	.Ltmp343 # Offset: 305
    00000133: 	testq	%rbp, %rbp
    00000136: 	je	.Ltmp344 # Offset: 310
.Ltmp343:
    0000013c: 	movq	%r12, 0x10(%rsp)
    00000141: 	cmpq	$0xf, %r12
    00000145: 	ja	.Ltmp345 # Offset: 325
    0000014b: 	cmpq	$0x1, %r12
    0000014f: 	jne	.Ltmp346 # Offset: 335
    00000155: 	movzbl	(%rbp), %eax
    00000159: 	movb	%al, 0x10(%rbx)
.Ltmp350:
    0000015c: 	movq	%r12, 0x8(%rbx)
    00000160: 	movb	$0x0, (%rdi,%r12)
    00000165: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000016c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000173: 	addq	$0x20, %rax
    00000177: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000017e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000185: 	je	.Ltmp347 # Offset: 389
.Ltmp351:
    0000018b: 	movq	-0x20(%rax), %rbp
    0000018f: 	callq	clock@PLT # Offset: 399
    00000194: 	movq	%rax, end_time(%rip)
    0000019b: 	movq	0x18(%rsp), %rdx
    000001a0: 	subq	%fs:0x28, %rdx
    000001a9: 	jne	.Ltmp348 # Offset: 425
    000001af: 	subq	start_time(%rip), %rax
    000001b6: 	pxor	%xmm0, %xmm0
    000001ba: 	movq	%rbp, %rdi
    000001bd: 	cvtsi2sd	%rax, %xmm0
    000001c2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001ca: 	addq	$0x28, %rsp
    000001ce: 	popq	%rbx
    000001cf: 	popq	%rbp
    000001d0: 	popq	%r12
    000001d2: 	popq	%r13
    000001d4: 	popq	%r14
    000001d6: 	popq	%r15
    000001d8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 472
    000001dd: 	nopl	(%rax) # Size: 3
.Ltmp339:
    000001e0: 	movabsq	$-0x8000000000000000, %rdx
    000001ea: 	movapd	%xmm0, %xmm2
    000001ee: 	subsd	%xmm1, %xmm2
    000001f2: 	cvttsd2si	%xmm2, %rax
    000001f7: 	xorq	%rdx, %rax
    000001fa: 	jmp	.Ltmp349 # Offset: 506
.Ltmp345:
    000001ff: 	movq	%rbx, %rdi
    00000202: 	leaq	0x10(%rsp), %rsi
    00000207: 	xorl	%edx, %edx
    00000209: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 521
    0000020e: 	movq	%rax, (%rbx)
    00000211: 	movq	%rax, %rdi
    00000214: 	movq	0x10(%rsp), %rax
    00000219: 	movq	%rax, 0x10(%rbx)
.Ltmp352:
    0000021d: 	movq	%r12, %rdx
    00000220: 	movq	%rbp, %rsi
    00000223: 	callq	memcpy@PLT # Offset: 547
    00000228: 	movq	0x10(%rsp), %r12
    0000022d: 	movq	(%rbx), %rdi
    00000230: 	jmp	.Ltmp350 # Offset: 560
.Ltmp342:
    00000235: 	movq	0x8(%rsp), %rsi
    0000023a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000241: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 577
    00000246: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000024d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000254: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000025b: 	jne	.Ltmp351 # Offset: 603
.Ltmp347:
    00000261: 	movq	-0x8(%rdx), %rax
    00000265: 	addq	$0x200, %rax
    0000026b: 	jmp	.Ltmp351 # Offset: 619
.Ltmp346:
    00000270: 	testq	%r12, %r12
    00000273: 	je	.Ltmp350 # Offset: 627
    00000279: 	jmp	.Ltmp352 # Offset: 633
.Ltmp348:
    0000027b: 	callq	__stack_chk_fail@PLT # Offset: 635
.Ltmp344:
    00000280: 	leaq	DATAat0x57008(%rip), %rdi
    00000287: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 647
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Im22custom_divide_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIt14and_remainder2ItLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 63
  State       : disassembled
  Address     : 0x5440
  Size        : 0x34d
  MaxSize     : 0x350
  Offset      : 0x5440
  Section     : .text
  Orc Section : .local.text._Z13test_constantIt14and_remainder2ItLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB062:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp353 # Offset: 67
    00000049: 	leal	-0x1(%r14), %eax
    0000004d: 	movl	%r14d, %ebx
    00000050: 	movq	DATAat0x57c30(%rip), %xmm3
    00000058: 	movdqa	DATAat0x57c30(%rip), %xmm2
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r14d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	leaq	DATAat0x571d0(%rip), %rbp
    00000077: 	cvttsd2si	init_value(%rip), %r10d
    00000080: 	subl	$0x1, %eax
    00000083: 	shlq	$0x4, %rax
    00000087: 	leaq	0x10(%r15,%rax), %r13
    0000008c: 	nopl	(%rax) # Size: 4
.Ltmp359:
    00000090: 	xorl	%edx, %edx
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp354 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp355 # Offset: 160
    000000a6: 	movq	%r15, %rax
    000000a9: 	pxor	%xmm1, %xmm1
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp356:
    000000b0: 	movdqu	(%rax), %xmm0
    000000b4: 	addq	$0x10, %rax
    000000b8: 	pand	%xmm2, %xmm0
    000000bc: 	paddw	%xmm0, %xmm1
    000000c0: 	cmpq	%r13, %rax
    000000c3: 	jne	.Ltmp356 # Offset: 195
    000000c5: 	movdqa	%xmm1, %xmm0
    000000c9: 	psrldq	$0x8, %xmm0
    000000ce: 	paddw	%xmm0, %xmm1
    000000d2: 	movdqa	%xmm1, %xmm0
    000000d6: 	psrldq	$0x4, %xmm0
    000000db: 	paddw	%xmm0, %xmm1
    000000df: 	movdqa	%xmm1, %xmm0
    000000e3: 	psrldq	$0x2, %xmm0
    000000e8: 	paddw	%xmm0, %xmm1
    000000ec: 	pextrw	$0x0, %xmm1, %edx
    000000f1: 	cmpl	%r14d, %ebx
    000000f4: 	je	.Ltmp354 # Offset: 244
    000000f6: 	movl	%ebx, %eax
    000000f8: 	movl	%ebx, %ecx
.Ltmp367:
    000000fa: 	movl	%r14d, %esi
    000000fd: 	subl	%eax, %esi
    000000ff: 	leal	-0x1(%rsi), %edi
    00000102: 	cmpl	$0x2, %edi
    00000105: 	jbe	.Ltmp357 # Offset: 261
    00000107: 	movq	(%r15,%rax,2), %xmm0
    0000010d: 	pand	%xmm3, %xmm0
    00000111: 	pextrw	$0x0, %xmm0, %eax
    00000116: 	pextrw	$0x1, %xmm0, %edi
    0000011b: 	addl	%edi, %eax
    0000011d: 	addl	%edx, %eax
    0000011f: 	pextrw	$0x2, %xmm0, %edx
    00000124: 	addl	%edx, %eax
    00000126: 	pextrw	$0x3, %xmm0, %edx
    0000012b: 	addl	%eax, %edx
    0000012d: 	movl	%esi, %eax
    0000012f: 	andl	$-0x4, %eax
    00000132: 	addl	%eax, %ecx
    00000134: 	cmpl	%eax, %esi
    00000136: 	je	.Ltmp354 # Offset: 310
.Ltmp357:
    00000138: 	movslq	%ecx, %rax
    0000013b: 	leaq	(%rax,%rax), %rsi
    0000013f: 	movzwl	(%r15,%rax,2), %eax
    00000144: 	andl	$0x7f, %eax
    00000147: 	addl	%eax, %edx
    00000149: 	leal	0x1(%rcx), %eax
    0000014c: 	cmpl	%eax, %r14d
    0000014f: 	jle	.Ltmp354 # Offset: 335
    00000151: 	movzwl	0x2(%r15,%rsi), %eax
    00000157: 	addl	$0x2, %ecx
    0000015a: 	andl	$0x7f, %eax
    0000015d: 	addl	%eax, %edx
    0000015f: 	cmpl	%ecx, %r14d
    00000162: 	jle	.Ltmp354 # Offset: 354
    00000164: 	movzwl	0x4(%r15,%rsi), %eax
    0000016a: 	andl	$0x7f, %eax
    0000016d: 	addl	%eax, %edx
.Ltmp354:
    0000016f: 	movl	%r10d, %eax
    00000172: 	andl	$0x7f, %eax
    00000175: 	imulw	$0x1f40, %ax, %ax
    0000017a: 	cmpw	%dx, %ax
    0000017d: 	je	.Ltmp358 # Offset: 381
    0000017f: 	movl	current_test(%rip), %edx
    00000185: 	movq	%rbp, %rsi
    00000188: 	movl	$0x1, %edi
    0000018d: 	xorl	%eax, %eax
    0000018f: 	addl	$0x1, %r12d
    00000193: 	callq	__printf_chk@PLT # Offset: 403
    00000198: 	movl	iterations(%rip), %r9d
    0000019f: 	cmpl	%r12d, %r9d
    000001a2: 	jle	.Ltmp353 # Offset: 418
    000001a4: 	cvttsd2si	init_value(%rip), %r10d
    000001ad: 	movdqa	DATAat0x57c30(%rip), %xmm2
    000001b5: 	movq	DATAat0x57c30(%rip), %xmm3
    000001bd: 	jmp	.Ltmp359 # Offset: 445
    000001c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp358:
    000001c8: 	addl	$0x1, %r12d
    000001cc: 	cmpl	%r9d, %r12d
    000001cf: 	jl	.Ltmp359 # Offset: 463
.Ltmp353:
    000001d5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001dc: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001e3: 	subq	$0x20, %rax
    000001e7: 	cmpq	%rax, %rbx
    000001ea: 	je	.Ltmp360 # Offset: 490
    000001f0: 	movq	0x8(%rsp), %rax
    000001f5: 	leaq	0x10(%rbx), %rdi
    000001f9: 	movq	%rdi, (%rbx)
    000001fc: 	movq	(%rax), %rbp
    000001ff: 	movq	0x8(%rax), %r12
    00000203: 	movq	%rbp, %rax
    00000206: 	addq	%r12, %rax
    00000209: 	je	.Ltmp361 # Offset: 521
    0000020b: 	testq	%rbp, %rbp
    0000020e: 	je	.Ltmp362 # Offset: 526
.Ltmp361:
    00000214: 	movq	%r12, 0x10(%rsp)
    00000219: 	cmpq	$0xf, %r12
    0000021d: 	ja	.Ltmp363 # Offset: 541
    00000223: 	cmpq	$0x1, %r12
    00000227: 	jne	.Ltmp364 # Offset: 551
    0000022d: 	movzbl	(%rbp), %eax
    00000231: 	movb	%al, 0x10(%rbx)
.Ltmp368:
    00000234: 	movq	%r12, 0x8(%rbx)
    00000238: 	movb	$0x0, (%rdi,%r12)
    0000023d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000244: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000024b: 	addq	$0x20, %rax
    0000024f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000256: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000025d: 	je	.Ltmp365 # Offset: 605
.Ltmp369:
    00000263: 	movq	-0x20(%rax), %rbp
    00000267: 	callq	clock@PLT # Offset: 615
    0000026c: 	movq	%rax, end_time(%rip)
    00000273: 	movq	0x18(%rsp), %rdx
    00000278: 	subq	%fs:0x28, %rdx
    00000281: 	jne	.Ltmp366 # Offset: 641
    00000287: 	subq	start_time(%rip), %rax
    0000028e: 	pxor	%xmm0, %xmm0
    00000292: 	movq	%rbp, %rdi
    00000295: 	cvtsi2sd	%rax, %xmm0
    0000029a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002a2: 	addq	$0x28, %rsp
    000002a6: 	popq	%rbx
    000002a7: 	popq	%rbp
    000002a8: 	popq	%r12
    000002aa: 	popq	%r13
    000002ac: 	popq	%r14
    000002ae: 	popq	%r15
    000002b0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 688
.Ltmp355:
    000002b5: 	xorl	%eax, %eax
    000002b7: 	xorl	%ecx, %ecx
    000002b9: 	xorl	%edx, %edx
    000002bb: 	jmp	.Ltmp367 # Offset: 699
.Ltmp363:
    000002c0: 	movq	%rbx, %rdi
    000002c3: 	leaq	0x10(%rsp), %rsi
    000002c8: 	xorl	%edx, %edx
    000002ca: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 714
    000002cf: 	movq	%rax, (%rbx)
    000002d2: 	movq	%rax, %rdi
    000002d5: 	movq	0x10(%rsp), %rax
    000002da: 	movq	%rax, 0x10(%rbx)
.Ltmp370:
    000002de: 	movq	%r12, %rdx
    000002e1: 	movq	%rbp, %rsi
    000002e4: 	callq	memcpy@PLT # Offset: 740
    000002e9: 	movq	0x10(%rsp), %r12
    000002ee: 	movq	(%rbx), %rdi
    000002f1: 	jmp	.Ltmp368 # Offset: 753
.Ltmp360:
    000002f6: 	movq	0x8(%rsp), %rsi
    000002fb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000302: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 770
    00000307: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000030e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000315: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000031c: 	jne	.Ltmp369 # Offset: 796
.Ltmp365:
    00000322: 	movq	-0x8(%rdx), %rax
    00000326: 	addq	$0x200, %rax
    0000032c: 	jmp	.Ltmp369 # Offset: 812
.Ltmp364:
    00000331: 	testq	%r12, %r12
    00000334: 	je	.Ltmp368 # Offset: 820
    0000033a: 	jmp	.Ltmp370 # Offset: 826
.Ltmp366:
    0000033c: 	callq	__stack_chk_fail@PLT # Offset: 828
.Ltmp362:
    00000341: 	leaq	DATAat0x57008(%rip), %rdi
    00000348: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 840
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIt14and_remainder2ItLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1Im25custom_remainder_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 64
  State       : disassembled
  Address     : 0x5790
  Size        : 0x28c
  MaxSize     : 0x290
  Offset      : 0x5790
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Im25custom_remainder_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB063:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdx, %r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movl	%esi, %ebp
    00000012: 	pushq	%rbx
    00000013: 	movq	%rdi, %rbx
    00000016: 	subq	$0x28, %rsp
    0000001a: 	movq	%rcx, 0x8(%rsp)
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x18(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	callq	clock@PLT # Offset: 47
    00000034: 	movl	iterations(%rip), %edi
    0000003a: 	movq	%rax, start_time(%rip)
    00000041: 	testl	%edi, %edi
    00000043: 	jle	.Ltmp371 # Offset: 67
    00000049: 	leal	-0x1(%rbp), %eax
    0000004c: 	movslq	%r14d, %r14
    0000004f: 	leaq	DATAat0x571d0(%rip), %r12
    00000056: 	xorl	%r13d, %r13d
    00000059: 	movsd	DATAat0x57bd8(%rip), %xmm1
    00000061: 	movsd	init_value(%rip), %xmm0
    00000069: 	leaq	0x8(%rbx,%rax,8), %r15
    0000006e: 	nop # Size: 2
.Ltmp376:
    00000070: 	movq	%rbx, %rcx
    00000073: 	xorl	%esi, %esi
    00000075: 	testl	%ebp, %ebp
    00000077: 	jle	.Ltmp372 # Offset: 119
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp373:
    00000080: 	movq	(%rcx), %rax
    00000083: 	xorl	%edx, %edx
    00000085: 	addq	$0x8, %rcx
    00000089: 	divq	%r14
    0000008c: 	addq	%rdx, %rsi
    0000008f: 	cmpq	%rcx, %r15
    00000092: 	jne	.Ltmp373 # Offset: 146
.Ltmp372:
    00000094: 	comisd	%xmm1, %xmm0
    00000098: 	jae	.Ltmp374 # Offset: 152
    0000009e: 	cvttsd2si	%xmm0, %rax
.Ltmp384:
    000000a3: 	xorl	%edx, %edx
    000000a5: 	divq	%r14
    000000a8: 	imulq	$0x1f40, %rdx, %rdx
    000000af: 	cmpq	%rsi, %rdx
    000000b2: 	je	.Ltmp375 # Offset: 178
    000000b4: 	movl	current_test(%rip), %edx
    000000ba: 	movl	$0x1, %edi
    000000bf: 	movq	%r12, %rsi
    000000c2: 	xorl	%eax, %eax
    000000c4: 	addl	$0x1, %r13d
    000000c8: 	callq	__printf_chk@PLT # Offset: 200
    000000cd: 	movl	iterations(%rip), %edi
    000000d3: 	cmpl	%edi, %r13d
    000000d6: 	jge	.Ltmp371 # Offset: 214
    000000d8: 	movq	DATAat0x57bd8(%rip), %rax
    000000df: 	movsd	init_value(%rip), %xmm0
    000000e7: 	movq	%rax, %xmm1
    000000ec: 	jmp	.Ltmp376 # Offset: 236
    000000ee: 	nop # Size: 2
.Ltmp375:
    000000f0: 	addl	$0x1, %r13d
    000000f4: 	cmpl	%edi, %r13d
    000000f7: 	jl	.Ltmp376 # Offset: 247
.Ltmp371:
    000000fd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000104: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000010b: 	subq	$0x20, %rax
    0000010f: 	cmpq	%rax, %rbx
    00000112: 	je	.Ltmp377 # Offset: 274
    00000118: 	movq	0x8(%rsp), %rax
    0000011d: 	leaq	0x10(%rbx), %rdi
    00000121: 	movq	%rdi, (%rbx)
    00000124: 	movq	(%rax), %rbp
    00000127: 	movq	0x8(%rax), %r12
    0000012b: 	movq	%rbp, %rax
    0000012e: 	addq	%r12, %rax
    00000131: 	je	.Ltmp378 # Offset: 305
    00000133: 	testq	%rbp, %rbp
    00000136: 	je	.Ltmp379 # Offset: 310
.Ltmp378:
    0000013c: 	movq	%r12, 0x10(%rsp)
    00000141: 	cmpq	$0xf, %r12
    00000145: 	ja	.Ltmp380 # Offset: 325
    0000014b: 	cmpq	$0x1, %r12
    0000014f: 	jne	.Ltmp381 # Offset: 335
    00000155: 	movzbl	(%rbp), %eax
    00000159: 	movb	%al, 0x10(%rbx)
.Ltmp385:
    0000015c: 	movq	%r12, 0x8(%rbx)
    00000160: 	movb	$0x0, (%rdi,%r12)
    00000165: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000016c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000173: 	addq	$0x20, %rax
    00000177: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000017e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000185: 	je	.Ltmp382 # Offset: 389
.Ltmp386:
    0000018b: 	movq	-0x20(%rax), %rbp
    0000018f: 	callq	clock@PLT # Offset: 399
    00000194: 	movq	%rax, end_time(%rip)
    0000019b: 	movq	0x18(%rsp), %rdx
    000001a0: 	subq	%fs:0x28, %rdx
    000001a9: 	jne	.Ltmp383 # Offset: 425
    000001af: 	subq	start_time(%rip), %rax
    000001b6: 	pxor	%xmm0, %xmm0
    000001ba: 	movq	%rbp, %rdi
    000001bd: 	cvtsi2sd	%rax, %xmm0
    000001c2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001ca: 	addq	$0x28, %rsp
    000001ce: 	popq	%rbx
    000001cf: 	popq	%rbp
    000001d0: 	popq	%r12
    000001d2: 	popq	%r13
    000001d4: 	popq	%r14
    000001d6: 	popq	%r15
    000001d8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 472
    000001dd: 	nopl	(%rax) # Size: 3
.Ltmp374:
    000001e0: 	movabsq	$-0x8000000000000000, %rdx
    000001ea: 	movapd	%xmm0, %xmm2
    000001ee: 	subsd	%xmm1, %xmm2
    000001f2: 	cvttsd2si	%xmm2, %rax
    000001f7: 	xorq	%rdx, %rax
    000001fa: 	jmp	.Ltmp384 # Offset: 506
.Ltmp380:
    000001ff: 	movq	%rbx, %rdi
    00000202: 	leaq	0x10(%rsp), %rsi
    00000207: 	xorl	%edx, %edx
    00000209: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 521
    0000020e: 	movq	%rax, (%rbx)
    00000211: 	movq	%rax, %rdi
    00000214: 	movq	0x10(%rsp), %rax
    00000219: 	movq	%rax, 0x10(%rbx)
.Ltmp387:
    0000021d: 	movq	%r12, %rdx
    00000220: 	movq	%rbp, %rsi
    00000223: 	callq	memcpy@PLT # Offset: 547
    00000228: 	movq	0x10(%rsp), %r12
    0000022d: 	movq	(%rbx), %rdi
    00000230: 	jmp	.Ltmp385 # Offset: 560
.Ltmp377:
    00000235: 	movq	0x8(%rsp), %rsi
    0000023a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000241: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 577
    00000246: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000024d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000254: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000025b: 	jne	.Ltmp386 # Offset: 603
.Ltmp382:
    00000261: 	movq	-0x8(%rdx), %rax
    00000265: 	addq	$0x200, %rax
    0000026b: 	jmp	.Ltmp386 # Offset: 619
.Ltmp381:
    00000270: 	testq	%r12, %r12
    00000273: 	je	.Ltmp385 # Offset: 627
    00000279: 	jmp	.Ltmp387 # Offset: 633
.Ltmp383:
    0000027b: 	callq	__stack_chk_fail@PLT # Offset: 635
.Ltmp379:
    00000280: 	leaq	DATAat0x57008(%rip), %rdi
    00000287: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 647
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Im25custom_remainder_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIm13and_remainderImLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 65
  State       : disassembled
  Address     : 0x5a20
  Size        : 0x2e5
  MaxSize     : 0x2f0
  Offset      : 0x5a20
  Section     : .text
  Orc Section : .local.text._Z13test_constantIm13and_remainderImLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB064:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp388 # Offset: 65
    00000047: 	movl	%r15d, %eax
    0000004a: 	movl	%r15d, %ebx
    0000004d: 	movsd	DATAat0x57bd8(%rip), %xmm4
    00000055: 	movsd	init_value(%rip), %xmm3
    0000005d: 	shrl	%eax
    0000005f: 	movdqa	DATAat0x57c40(%rip), %xmm2
    00000067: 	andl	$-0x2, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	subl	$0x1, %eax
    00000070: 	leaq	DATAat0x571d0(%rip), %rbp
    00000077: 	shlq	$0x4, %rax
    0000007b: 	leaq	0x10(%r13,%rax), %r14
.Ltmp394:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp389 # Offset: 133
    00000087: 	cmpl	$0x1, %r15d
    0000008b: 	je	.Ltmp390 # Offset: 139
    00000091: 	movq	%r13, %rax
    00000094: 	pxor	%xmm1, %xmm1
    00000098: 	nopl	(%rax,%rax) # Size: 8
.Ltmp391:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	pand	%xmm2, %xmm0
    000000ac: 	paddq	%xmm0, %xmm1
    000000b0: 	cmpq	%rax, %r14
    000000b3: 	jne	.Ltmp391 # Offset: 179
    000000b5: 	movdqa	%xmm1, %xmm0
    000000b9: 	movslq	%ebx, %rdx
    000000bc: 	psrldq	$0x8, %xmm0
    000000c1: 	paddq	%xmm0, %xmm1
    000000c5: 	movq	%xmm1, %rax
    000000ca: 	cmpl	%r15d, %ebx
    000000cd: 	je	.Ltmp389 # Offset: 205
.Ltmp403:
    000000cf: 	movq	(%r13,%rdx,8), %rdx
    000000d4: 	andl	$0x7, %edx
    000000d7: 	addq	%rdx, %rax
.Ltmp389:
    000000da: 	comisd	%xmm4, %xmm3
    000000de: 	jae	.Ltmp392 # Offset: 222
    000000e4: 	cvttsd2si	%xmm3, %rdx
.Ltmp402:
    000000e9: 	andl	$0x7, %edx
    000000ec: 	imulq	$0x1f40, %rdx, %rdx
    000000f3: 	cmpq	%rax, %rdx
    000000f6: 	je	.Ltmp393 # Offset: 246
    000000f8: 	movl	current_test(%rip), %edx
    000000fe: 	movq	%rbp, %rsi
    00000101: 	movl	$0x1, %edi
    00000106: 	xorl	%eax, %eax
    00000108: 	addl	$0x1, %r12d
    0000010c: 	callq	__printf_chk@PLT # Offset: 268
    00000111: 	movl	iterations(%rip), %esi
    00000117: 	cmpl	%esi, %r12d
    0000011a: 	jge	.Ltmp388 # Offset: 282
    0000011c: 	movq	DATAat0x57bd8(%rip), %rax
    00000123: 	movsd	init_value(%rip), %xmm3
    0000012b: 	movdqa	DATAat0x57c40(%rip), %xmm2
    00000133: 	movq	%rax, %xmm4
    00000138: 	jmp	.Ltmp394 # Offset: 312
    0000013d: 	nopl	(%rax) # Size: 3
.Ltmp393:
    00000140: 	addl	$0x1, %r12d
    00000144: 	cmpl	%esi, %r12d
    00000147: 	jl	.Ltmp394 # Offset: 327
.Ltmp388:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp395 # Offset: 354
    00000168: 	movq	0x8(%rsp), %rax
    0000016d: 	leaq	0x10(%rbx), %rdi
    00000171: 	movq	%rdi, (%rbx)
    00000174: 	movq	(%rax), %rbp
    00000177: 	movq	0x8(%rax), %r12
    0000017b: 	movq	%rbp, %rax
    0000017e: 	addq	%r12, %rax
    00000181: 	je	.Ltmp396 # Offset: 385
    00000183: 	testq	%rbp, %rbp
    00000186: 	je	.Ltmp397 # Offset: 390
.Ltmp396:
    0000018c: 	movq	%r12, 0x10(%rsp)
    00000191: 	cmpq	$0xf, %r12
    00000195: 	ja	.Ltmp398 # Offset: 405
    0000019b: 	cmpq	$0x1, %r12
    0000019f: 	jne	.Ltmp399 # Offset: 415
    000001a5: 	movzbl	(%rbp), %eax
    000001a9: 	movb	%al, 0x10(%rbx)
.Ltmp404:
    000001ac: 	movq	%r12, 0x8(%rbx)
    000001b0: 	movb	$0x0, (%rdi,%r12)
    000001b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001bc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001c3: 	addq	$0x20, %rax
    000001c7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ce: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d5: 	je	.Ltmp400 # Offset: 469
.Ltmp405:
    000001db: 	movq	-0x20(%rax), %rbp
    000001df: 	callq	clock@PLT # Offset: 479
    000001e4: 	movq	%rax, end_time(%rip)
    000001eb: 	movq	0x18(%rsp), %rdx
    000001f0: 	subq	%fs:0x28, %rdx
    000001f9: 	jne	.Ltmp401 # Offset: 505
    000001ff: 	subq	start_time(%rip), %rax
    00000206: 	pxor	%xmm0, %xmm0
    0000020a: 	movq	%rbp, %rdi
    0000020d: 	cvtsi2sd	%rax, %xmm0
    00000212: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000021a: 	addq	$0x28, %rsp
    0000021e: 	popq	%rbx
    0000021f: 	popq	%rbp
    00000220: 	popq	%r12
    00000222: 	popq	%r13
    00000224: 	popq	%r14
    00000226: 	popq	%r15
    00000228: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 552
    0000022d: 	nopl	(%rax) # Size: 3
.Ltmp392:
    00000230: 	movabsq	$-0x8000000000000000, %rcx
    0000023a: 	movapd	%xmm3, %xmm0
    0000023e: 	subsd	%xmm4, %xmm0
    00000242: 	cvttsd2si	%xmm0, %rdx
    00000247: 	xorq	%rcx, %rdx
    0000024a: 	jmp	.Ltmp402 # Offset: 586
.Ltmp390:
    0000024f: 	xorl	%edx, %edx
    00000251: 	xorl	%eax, %eax
    00000253: 	jmp	.Ltmp403 # Offset: 595
.Ltmp398:
    00000258: 	movq	%rbx, %rdi
    0000025b: 	leaq	0x10(%rsp), %rsi
    00000260: 	xorl	%edx, %edx
    00000262: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 610
    00000267: 	movq	%rax, (%rbx)
    0000026a: 	movq	%rax, %rdi
    0000026d: 	movq	0x10(%rsp), %rax
    00000272: 	movq	%rax, 0x10(%rbx)
.Ltmp406:
    00000276: 	movq	%r12, %rdx
    00000279: 	movq	%rbp, %rsi
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x10(%rsp), %r12
    00000286: 	movq	(%rbx), %rdi
    00000289: 	jmp	.Ltmp404 # Offset: 649
.Ltmp395:
    0000028e: 	movq	0x8(%rsp), %rsi
    00000293: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000029a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 666
    0000029f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b4: 	jne	.Ltmp405 # Offset: 692
.Ltmp400:
    000002ba: 	movq	-0x8(%rdx), %rax
    000002be: 	addq	$0x200, %rax
    000002c4: 	jmp	.Ltmp405 # Offset: 708
.Ltmp399:
    000002c9: 	testq	%r12, %r12
    000002cc: 	je	.Ltmp404 # Offset: 716
    000002d2: 	jmp	.Ltmp406 # Offset: 722
.Ltmp401:
    000002d4: 	callq	__stack_chk_fail@PLT # Offset: 724
.Ltmp397:
    000002d9: 	leaq	DATAat0x57008(%rip), %rdi
    000002e0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 736
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIm13and_remainderImLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIm16custom_remainderImLi256EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 66
  State       : disassembled
  Address     : 0x5d10
  Size        : 0x2e5
  MaxSize     : 0x2f0
  Offset      : 0x5d10
  Section     : .text
  Orc Section : .local.text._Z13test_constantIm16custom_remainderImLi256EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB065:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp407 # Offset: 65
    00000047: 	movl	%r15d, %eax
    0000004a: 	movl	%r15d, %ebx
    0000004d: 	movsd	DATAat0x57bd8(%rip), %xmm4
    00000055: 	movsd	init_value(%rip), %xmm3
    0000005d: 	shrl	%eax
    0000005f: 	movdqa	DATAat0x57c50(%rip), %xmm2
    00000067: 	andl	$-0x2, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	subl	$0x1, %eax
    00000070: 	leaq	DATAat0x571d0(%rip), %rbp
    00000077: 	shlq	$0x4, %rax
    0000007b: 	leaq	0x10(%r13,%rax), %r14
.Ltmp413:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp408 # Offset: 133
    00000087: 	cmpl	$0x1, %r15d
    0000008b: 	je	.Ltmp409 # Offset: 139
    00000091: 	movq	%r13, %rax
    00000094: 	pxor	%xmm1, %xmm1
    00000098: 	nopl	(%rax,%rax) # Size: 8
.Ltmp410:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	pand	%xmm2, %xmm0
    000000ac: 	paddq	%xmm0, %xmm1
    000000b0: 	cmpq	%rax, %r14
    000000b3: 	jne	.Ltmp410 # Offset: 179
    000000b5: 	movdqa	%xmm1, %xmm0
    000000b9: 	movslq	%ebx, %rdx
    000000bc: 	psrldq	$0x8, %xmm0
    000000c1: 	paddq	%xmm0, %xmm1
    000000c5: 	movq	%xmm1, %rax
    000000ca: 	cmpl	%r15d, %ebx
    000000cd: 	je	.Ltmp408 # Offset: 205
.Ltmp422:
    000000cf: 	movzbl	(%r13,%rdx,8), %edx
    000000d5: 	addq	%rdx, %rax
.Ltmp408:
    000000d8: 	comisd	%xmm4, %xmm3
    000000dc: 	jae	.Ltmp411 # Offset: 220
    000000e2: 	cvttsd2si	%xmm3, %rdx
.Ltmp421:
    000000e7: 	movzbl	%dl, %edx
    000000ea: 	imulq	$0x1f40, %rdx, %rdx
    000000f1: 	cmpq	%rax, %rdx
    000000f4: 	je	.Ltmp412 # Offset: 244
    000000f6: 	movl	current_test(%rip), %edx
    000000fc: 	movq	%rbp, %rsi
    000000ff: 	movl	$0x1, %edi
    00000104: 	xorl	%eax, %eax
    00000106: 	addl	$0x1, %r12d
    0000010a: 	callq	__printf_chk@PLT # Offset: 266
    0000010f: 	movl	iterations(%rip), %esi
    00000115: 	cmpl	%esi, %r12d
    00000118: 	jge	.Ltmp407 # Offset: 280
    0000011a: 	movq	DATAat0x57bd8(%rip), %rax
    00000121: 	movsd	init_value(%rip), %xmm3
    00000129: 	movdqa	DATAat0x57c50(%rip), %xmm2
    00000131: 	movq	%rax, %xmm4
    00000136: 	jmp	.Ltmp413 # Offset: 310
    0000013b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp412:
    00000140: 	addl	$0x1, %r12d
    00000144: 	cmpl	%esi, %r12d
    00000147: 	jl	.Ltmp413 # Offset: 327
.Ltmp407:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp414 # Offset: 354
    00000168: 	movq	0x8(%rsp), %rax
    0000016d: 	leaq	0x10(%rbx), %rdi
    00000171: 	movq	%rdi, (%rbx)
    00000174: 	movq	(%rax), %rbp
    00000177: 	movq	0x8(%rax), %r12
    0000017b: 	movq	%rbp, %rax
    0000017e: 	addq	%r12, %rax
    00000181: 	je	.Ltmp415 # Offset: 385
    00000183: 	testq	%rbp, %rbp
    00000186: 	je	.Ltmp416 # Offset: 390
.Ltmp415:
    0000018c: 	movq	%r12, 0x10(%rsp)
    00000191: 	cmpq	$0xf, %r12
    00000195: 	ja	.Ltmp417 # Offset: 405
    0000019b: 	cmpq	$0x1, %r12
    0000019f: 	jne	.Ltmp418 # Offset: 415
    000001a5: 	movzbl	(%rbp), %eax
    000001a9: 	movb	%al, 0x10(%rbx)
.Ltmp423:
    000001ac: 	movq	%r12, 0x8(%rbx)
    000001b0: 	movb	$0x0, (%rdi,%r12)
    000001b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001bc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001c3: 	addq	$0x20, %rax
    000001c7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ce: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d5: 	je	.Ltmp419 # Offset: 469
.Ltmp424:
    000001db: 	movq	-0x20(%rax), %rbp
    000001df: 	callq	clock@PLT # Offset: 479
    000001e4: 	movq	%rax, end_time(%rip)
    000001eb: 	movq	0x18(%rsp), %rdx
    000001f0: 	subq	%fs:0x28, %rdx
    000001f9: 	jne	.Ltmp420 # Offset: 505
    000001ff: 	subq	start_time(%rip), %rax
    00000206: 	pxor	%xmm0, %xmm0
    0000020a: 	movq	%rbp, %rdi
    0000020d: 	cvtsi2sd	%rax, %xmm0
    00000212: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000021a: 	addq	$0x28, %rsp
    0000021e: 	popq	%rbx
    0000021f: 	popq	%rbp
    00000220: 	popq	%r12
    00000222: 	popq	%r13
    00000224: 	popq	%r14
    00000226: 	popq	%r15
    00000228: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 552
    0000022d: 	nopl	(%rax) # Size: 3
.Ltmp411:
    00000230: 	movabsq	$-0x8000000000000000, %rcx
    0000023a: 	movapd	%xmm3, %xmm0
    0000023e: 	subsd	%xmm4, %xmm0
    00000242: 	cvttsd2si	%xmm0, %rdx
    00000247: 	xorq	%rcx, %rdx
    0000024a: 	jmp	.Ltmp421 # Offset: 586
.Ltmp409:
    0000024f: 	xorl	%edx, %edx
    00000251: 	xorl	%eax, %eax
    00000253: 	jmp	.Ltmp422 # Offset: 595
.Ltmp417:
    00000258: 	movq	%rbx, %rdi
    0000025b: 	leaq	0x10(%rsp), %rsi
    00000260: 	xorl	%edx, %edx
    00000262: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 610
    00000267: 	movq	%rax, (%rbx)
    0000026a: 	movq	%rax, %rdi
    0000026d: 	movq	0x10(%rsp), %rax
    00000272: 	movq	%rax, 0x10(%rbx)
.Ltmp425:
    00000276: 	movq	%r12, %rdx
    00000279: 	movq	%rbp, %rsi
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x10(%rsp), %r12
    00000286: 	movq	(%rbx), %rdi
    00000289: 	jmp	.Ltmp423 # Offset: 649
.Ltmp414:
    0000028e: 	movq	0x8(%rsp), %rsi
    00000293: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000029a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 666
    0000029f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b4: 	jne	.Ltmp424 # Offset: 692
.Ltmp419:
    000002ba: 	movq	-0x8(%rdx), %rax
    000002be: 	addq	$0x200, %rax
    000002c4: 	jmp	.Ltmp424 # Offset: 708
.Ltmp418:
    000002c9: 	testq	%r12, %r12
    000002cc: 	je	.Ltmp423 # Offset: 716
    000002d2: 	jmp	.Ltmp425 # Offset: 722
.Ltmp420:
    000002d4: 	callq	__stack_chk_fail@PLT # Offset: 724
.Ltmp416:
    000002d9: 	leaq	DATAat0x57008(%rip), %rdi
    000002e0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 736
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIm16custom_remainderImLi256EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIm25custom_remainder_inline32ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 67
  State       : disassembled
  Address     : 0x6000
  Size        : 0x2e5
  MaxSize     : 0x2f0
  Offset      : 0x6000
  Section     : .text
  Orc Section : .local.text._Z13test_constantIm25custom_remainder_inline32ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB066:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp426 # Offset: 65
    00000047: 	movl	%r15d, %eax
    0000004a: 	movl	%r15d, %ebx
    0000004d: 	movsd	DATAat0x57bd8(%rip), %xmm4
    00000055: 	movsd	init_value(%rip), %xmm3
    0000005d: 	shrl	%eax
    0000005f: 	movdqa	DATAat0x57c60(%rip), %xmm2
    00000067: 	andl	$-0x2, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	subl	$0x1, %eax
    00000070: 	leaq	DATAat0x571d0(%rip), %rbp
    00000077: 	shlq	$0x4, %rax
    0000007b: 	leaq	0x10(%r13,%rax), %r14
.Ltmp432:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp427 # Offset: 133
    00000087: 	cmpl	$0x1, %r15d
    0000008b: 	je	.Ltmp428 # Offset: 139
    00000091: 	movq	%r13, %rax
    00000094: 	pxor	%xmm1, %xmm1
    00000098: 	nopl	(%rax,%rax) # Size: 8
.Ltmp429:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	pand	%xmm2, %xmm0
    000000ac: 	paddq	%xmm0, %xmm1
    000000b0: 	cmpq	%rax, %r14
    000000b3: 	jne	.Ltmp429 # Offset: 179
    000000b5: 	movdqa	%xmm1, %xmm0
    000000b9: 	movslq	%ebx, %rdx
    000000bc: 	psrldq	$0x8, %xmm0
    000000c1: 	paddq	%xmm0, %xmm1
    000000c5: 	movq	%xmm1, %rax
    000000ca: 	cmpl	%r15d, %ebx
    000000cd: 	je	.Ltmp427 # Offset: 205
.Ltmp441:
    000000cf: 	movq	(%r13,%rdx,8), %rdx
    000000d4: 	andl	$0x1f, %edx
    000000d7: 	addq	%rdx, %rax
.Ltmp427:
    000000da: 	comisd	%xmm4, %xmm3
    000000de: 	jae	.Ltmp430 # Offset: 222
    000000e4: 	cvttsd2si	%xmm3, %rdx
.Ltmp440:
    000000e9: 	andl	$0x1f, %edx
    000000ec: 	imulq	$0x1f40, %rdx, %rdx
    000000f3: 	cmpq	%rax, %rdx
    000000f6: 	je	.Ltmp431 # Offset: 246
    000000f8: 	movl	current_test(%rip), %edx
    000000fe: 	movq	%rbp, %rsi
    00000101: 	movl	$0x1, %edi
    00000106: 	xorl	%eax, %eax
    00000108: 	addl	$0x1, %r12d
    0000010c: 	callq	__printf_chk@PLT # Offset: 268
    00000111: 	movl	iterations(%rip), %esi
    00000117: 	cmpl	%esi, %r12d
    0000011a: 	jge	.Ltmp426 # Offset: 282
    0000011c: 	movq	DATAat0x57bd8(%rip), %rax
    00000123: 	movsd	init_value(%rip), %xmm3
    0000012b: 	movdqa	DATAat0x57c60(%rip), %xmm2
    00000133: 	movq	%rax, %xmm4
    00000138: 	jmp	.Ltmp432 # Offset: 312
    0000013d: 	nopl	(%rax) # Size: 3
.Ltmp431:
    00000140: 	addl	$0x1, %r12d
    00000144: 	cmpl	%esi, %r12d
    00000147: 	jl	.Ltmp432 # Offset: 327
.Ltmp426:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp433 # Offset: 354
    00000168: 	movq	0x8(%rsp), %rax
    0000016d: 	leaq	0x10(%rbx), %rdi
    00000171: 	movq	%rdi, (%rbx)
    00000174: 	movq	(%rax), %rbp
    00000177: 	movq	0x8(%rax), %r12
    0000017b: 	movq	%rbp, %rax
    0000017e: 	addq	%r12, %rax
    00000181: 	je	.Ltmp434 # Offset: 385
    00000183: 	testq	%rbp, %rbp
    00000186: 	je	.Ltmp435 # Offset: 390
.Ltmp434:
    0000018c: 	movq	%r12, 0x10(%rsp)
    00000191: 	cmpq	$0xf, %r12
    00000195: 	ja	.Ltmp436 # Offset: 405
    0000019b: 	cmpq	$0x1, %r12
    0000019f: 	jne	.Ltmp437 # Offset: 415
    000001a5: 	movzbl	(%rbp), %eax
    000001a9: 	movb	%al, 0x10(%rbx)
.Ltmp442:
    000001ac: 	movq	%r12, 0x8(%rbx)
    000001b0: 	movb	$0x0, (%rdi,%r12)
    000001b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001bc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001c3: 	addq	$0x20, %rax
    000001c7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ce: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d5: 	je	.Ltmp438 # Offset: 469
.Ltmp443:
    000001db: 	movq	-0x20(%rax), %rbp
    000001df: 	callq	clock@PLT # Offset: 479
    000001e4: 	movq	%rax, end_time(%rip)
    000001eb: 	movq	0x18(%rsp), %rdx
    000001f0: 	subq	%fs:0x28, %rdx
    000001f9: 	jne	.Ltmp439 # Offset: 505
    000001ff: 	subq	start_time(%rip), %rax
    00000206: 	pxor	%xmm0, %xmm0
    0000020a: 	movq	%rbp, %rdi
    0000020d: 	cvtsi2sd	%rax, %xmm0
    00000212: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000021a: 	addq	$0x28, %rsp
    0000021e: 	popq	%rbx
    0000021f: 	popq	%rbp
    00000220: 	popq	%r12
    00000222: 	popq	%r13
    00000224: 	popq	%r14
    00000226: 	popq	%r15
    00000228: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 552
    0000022d: 	nopl	(%rax) # Size: 3
.Ltmp430:
    00000230: 	movabsq	$-0x8000000000000000, %rcx
    0000023a: 	movapd	%xmm3, %xmm0
    0000023e: 	subsd	%xmm4, %xmm0
    00000242: 	cvttsd2si	%xmm0, %rdx
    00000247: 	xorq	%rcx, %rdx
    0000024a: 	jmp	.Ltmp440 # Offset: 586
.Ltmp428:
    0000024f: 	xorl	%edx, %edx
    00000251: 	xorl	%eax, %eax
    00000253: 	jmp	.Ltmp441 # Offset: 595
.Ltmp436:
    00000258: 	movq	%rbx, %rdi
    0000025b: 	leaq	0x10(%rsp), %rsi
    00000260: 	xorl	%edx, %edx
    00000262: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 610
    00000267: 	movq	%rax, (%rbx)
    0000026a: 	movq	%rax, %rdi
    0000026d: 	movq	0x10(%rsp), %rax
    00000272: 	movq	%rax, 0x10(%rbx)
.Ltmp444:
    00000276: 	movq	%r12, %rdx
    00000279: 	movq	%rbp, %rsi
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x10(%rsp), %r12
    00000286: 	movq	(%rbx), %rdi
    00000289: 	jmp	.Ltmp442 # Offset: 649
.Ltmp433:
    0000028e: 	movq	0x8(%rsp), %rsi
    00000293: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000029a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 666
    0000029f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b4: 	jne	.Ltmp443 # Offset: 692
.Ltmp438:
    000002ba: 	movq	-0x8(%rdx), %rax
    000002be: 	addq	$0x200, %rax
    000002c4: 	jmp	.Ltmp443 # Offset: 708
.Ltmp437:
    000002c9: 	testq	%r12, %r12
    000002cc: 	je	.Ltmp442 # Offset: 716
    000002d2: 	jmp	.Ltmp444 # Offset: 722
.Ltmp439:
    000002d4: 	callq	__stack_chk_fail@PLT # Offset: 724
.Ltmp435:
    000002d9: 	leaq	DATAat0x57008(%rip), %rdi
    000002e0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 736
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIm25custom_remainder_inline32ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIm12and_constantImLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 68
  State       : disassembled
  Address     : 0x62f0
  Size        : 0x2e5
  MaxSize     : 0x2f0
  Offset      : 0x62f0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIm12and_constantImLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB067:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp445 # Offset: 65
    00000047: 	movl	%r15d, %eax
    0000004a: 	movl	%r15d, %ebx
    0000004d: 	movsd	DATAat0x57bd8(%rip), %xmm4
    00000055: 	movsd	init_value(%rip), %xmm3
    0000005d: 	shrl	%eax
    0000005f: 	movdqa	DATAat0x57c40(%rip), %xmm2
    00000067: 	andl	$-0x2, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	subl	$0x1, %eax
    00000070: 	leaq	DATAat0x571d0(%rip), %rbp
    00000077: 	shlq	$0x4, %rax
    0000007b: 	leaq	0x10(%r13,%rax), %r14
.Ltmp451:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp446 # Offset: 133
    00000087: 	cmpl	$0x1, %r15d
    0000008b: 	je	.Ltmp447 # Offset: 139
    00000091: 	movq	%r13, %rax
    00000094: 	pxor	%xmm1, %xmm1
    00000098: 	nopl	(%rax,%rax) # Size: 8
.Ltmp448:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	pand	%xmm2, %xmm0
    000000ac: 	paddq	%xmm0, %xmm1
    000000b0: 	cmpq	%rax, %r14
    000000b3: 	jne	.Ltmp448 # Offset: 179
    000000b5: 	movdqa	%xmm1, %xmm0
    000000b9: 	movslq	%ebx, %rdx
    000000bc: 	psrldq	$0x8, %xmm0
    000000c1: 	paddq	%xmm0, %xmm1
    000000c5: 	movq	%xmm1, %rax
    000000ca: 	cmpl	%r15d, %ebx
    000000cd: 	je	.Ltmp446 # Offset: 205
.Ltmp460:
    000000cf: 	movq	(%r13,%rdx,8), %rdx
    000000d4: 	andl	$0x7, %edx
    000000d7: 	addq	%rdx, %rax
.Ltmp446:
    000000da: 	comisd	%xmm4, %xmm3
    000000de: 	jae	.Ltmp449 # Offset: 222
    000000e4: 	cvttsd2si	%xmm3, %rdx
.Ltmp459:
    000000e9: 	andl	$0x7, %edx
    000000ec: 	imulq	$0x1f40, %rdx, %rdx
    000000f3: 	cmpq	%rax, %rdx
    000000f6: 	je	.Ltmp450 # Offset: 246
    000000f8: 	movl	current_test(%rip), %edx
    000000fe: 	movq	%rbp, %rsi
    00000101: 	movl	$0x1, %edi
    00000106: 	xorl	%eax, %eax
    00000108: 	addl	$0x1, %r12d
    0000010c: 	callq	__printf_chk@PLT # Offset: 268
    00000111: 	movl	iterations(%rip), %esi
    00000117: 	cmpl	%esi, %r12d
    0000011a: 	jge	.Ltmp445 # Offset: 282
    0000011c: 	movq	DATAat0x57bd8(%rip), %rax
    00000123: 	movsd	init_value(%rip), %xmm3
    0000012b: 	movdqa	DATAat0x57c40(%rip), %xmm2
    00000133: 	movq	%rax, %xmm4
    00000138: 	jmp	.Ltmp451 # Offset: 312
    0000013d: 	nopl	(%rax) # Size: 3
.Ltmp450:
    00000140: 	addl	$0x1, %r12d
    00000144: 	cmpl	%esi, %r12d
    00000147: 	jl	.Ltmp451 # Offset: 327
.Ltmp445:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp452 # Offset: 354
    00000168: 	movq	0x8(%rsp), %rax
    0000016d: 	leaq	0x10(%rbx), %rdi
    00000171: 	movq	%rdi, (%rbx)
    00000174: 	movq	(%rax), %rbp
    00000177: 	movq	0x8(%rax), %r12
    0000017b: 	movq	%rbp, %rax
    0000017e: 	addq	%r12, %rax
    00000181: 	je	.Ltmp453 # Offset: 385
    00000183: 	testq	%rbp, %rbp
    00000186: 	je	.Ltmp454 # Offset: 390
.Ltmp453:
    0000018c: 	movq	%r12, 0x10(%rsp)
    00000191: 	cmpq	$0xf, %r12
    00000195: 	ja	.Ltmp455 # Offset: 405
    0000019b: 	cmpq	$0x1, %r12
    0000019f: 	jne	.Ltmp456 # Offset: 415
    000001a5: 	movzbl	(%rbp), %eax
    000001a9: 	movb	%al, 0x10(%rbx)
.Ltmp461:
    000001ac: 	movq	%r12, 0x8(%rbx)
    000001b0: 	movb	$0x0, (%rdi,%r12)
    000001b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001bc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001c3: 	addq	$0x20, %rax
    000001c7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ce: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d5: 	je	.Ltmp457 # Offset: 469
.Ltmp462:
    000001db: 	movq	-0x20(%rax), %rbp
    000001df: 	callq	clock@PLT # Offset: 479
    000001e4: 	movq	%rax, end_time(%rip)
    000001eb: 	movq	0x18(%rsp), %rdx
    000001f0: 	subq	%fs:0x28, %rdx
    000001f9: 	jne	.Ltmp458 # Offset: 505
    000001ff: 	subq	start_time(%rip), %rax
    00000206: 	pxor	%xmm0, %xmm0
    0000020a: 	movq	%rbp, %rdi
    0000020d: 	cvtsi2sd	%rax, %xmm0
    00000212: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000021a: 	addq	$0x28, %rsp
    0000021e: 	popq	%rbx
    0000021f: 	popq	%rbp
    00000220: 	popq	%r12
    00000222: 	popq	%r13
    00000224: 	popq	%r14
    00000226: 	popq	%r15
    00000228: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 552
    0000022d: 	nopl	(%rax) # Size: 3
.Ltmp449:
    00000230: 	movabsq	$-0x8000000000000000, %rcx
    0000023a: 	movapd	%xmm3, %xmm0
    0000023e: 	subsd	%xmm4, %xmm0
    00000242: 	cvttsd2si	%xmm0, %rdx
    00000247: 	xorq	%rcx, %rdx
    0000024a: 	jmp	.Ltmp459 # Offset: 586
.Ltmp447:
    0000024f: 	xorl	%edx, %edx
    00000251: 	xorl	%eax, %eax
    00000253: 	jmp	.Ltmp460 # Offset: 595
.Ltmp455:
    00000258: 	movq	%rbx, %rdi
    0000025b: 	leaq	0x10(%rsp), %rsi
    00000260: 	xorl	%edx, %edx
    00000262: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 610
    00000267: 	movq	%rax, (%rbx)
    0000026a: 	movq	%rax, %rdi
    0000026d: 	movq	0x10(%rsp), %rax
    00000272: 	movq	%rax, 0x10(%rbx)
.Ltmp463:
    00000276: 	movq	%r12, %rdx
    00000279: 	movq	%rbp, %rsi
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x10(%rsp), %r12
    00000286: 	movq	(%rbx), %rdi
    00000289: 	jmp	.Ltmp461 # Offset: 649
.Ltmp452:
    0000028e: 	movq	0x8(%rsp), %rsi
    00000293: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000029a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 666
    0000029f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b4: 	jne	.Ltmp462 # Offset: 692
.Ltmp457:
    000002ba: 	movq	-0x8(%rdx), %rax
    000002be: 	addq	$0x200, %rax
    000002c4: 	jmp	.Ltmp462 # Offset: 708
.Ltmp456:
    000002c9: 	testq	%r12, %r12
    000002cc: 	je	.Ltmp461 # Offset: 716
    000002d2: 	jmp	.Ltmp463 # Offset: 722
.Ltmp458:
    000002d4: 	callq	__stack_chk_fail@PLT # Offset: 724
.Ltmp454:
    000002d9: 	leaq	DATAat0x57008(%rip), %rdi
    000002e0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 736
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIm12and_constantImLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIj14and_remainder2IjLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 69
  State       : disassembled
  Address     : 0x65e0
  Size        : 0x2f3
  MaxSize     : 0x300
  Offset      : 0x65e0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIj14and_remainder2IjLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB068:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp464 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	xorl	%r12d, %r12d
    00000051: 	movsd	init_value(%rip), %xmm3
    00000059: 	movl	%eax, 0x4(%rsp)
    0000005d: 	movl	%r14d, %eax
    00000060: 	movdqa	DATAat0x57c70(%rip), %xmm2
    00000068: 	andl	$-0x4, %ebx
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000075: 	subl	$0x1, %eax
    00000078: 	shlq	$0x4, %rax
    0000007c: 	leaq	0x10(%r15,%rax), %r13
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp469:
    00000088: 	xorl	%eax, %eax
    0000008a: 	testl	%r14d, %r14d
    0000008d: 	jle	.Ltmp465 # Offset: 141
    00000093: 	cmpl	$0x2, 0x4(%rsp)
    00000098: 	jbe	.Ltmp466 # Offset: 152
    0000009e: 	movq	%r15, %rax
    000000a1: 	pxor	%xmm1, %xmm1
    000000a5: 	nopl	(%rax) # Size: 3
.Ltmp467:
    000000a8: 	movdqu	(%rax), %xmm0
    000000ac: 	addq	$0x10, %rax
    000000b0: 	pand	%xmm2, %xmm0
    000000b4: 	paddd	%xmm0, %xmm1
    000000b8: 	cmpq	%r13, %rax
    000000bb: 	jne	.Ltmp467 # Offset: 187
    000000bd: 	movdqa	%xmm1, %xmm0
    000000c1: 	movl	%ebx, %edx
    000000c3: 	psrldq	$0x8, %xmm0
    000000c8: 	paddd	%xmm0, %xmm1
    000000cc: 	movdqa	%xmm1, %xmm0
    000000d0: 	psrldq	$0x4, %xmm0
    000000d5: 	paddd	%xmm0, %xmm1
    000000d9: 	movd	%xmm1, %eax
    000000dd: 	cmpl	%r14d, %ebx
    000000e0: 	je	.Ltmp465 # Offset: 224
.Ltmp477:
    000000e2: 	movslq	%edx, %rdi
    000000e5: 	leaq	(,%rdi,4), %r9
    000000ed: 	movl	(%r15,%rdi,4), %edi
    000000f1: 	andl	$0x1, %edi
    000000f4: 	addl	%edi, %eax
    000000f6: 	leal	0x1(%rdx), %edi
    000000f9: 	cmpl	%edi, %r14d
    000000fc: 	jle	.Ltmp465 # Offset: 252
    000000fe: 	movl	0x4(%r15,%r9), %edi
    00000103: 	addl	$0x2, %edx
    00000106: 	andl	$0x1, %edi
    00000109: 	addl	%edi, %eax
    0000010b: 	cmpl	%edx, %r14d
    0000010e: 	jle	.Ltmp465 # Offset: 270
    00000110: 	movl	0x8(%r15,%r9), %edx
    00000115: 	andl	$0x1, %edx
    00000118: 	addl	%edx, %eax
.Ltmp465:
    0000011a: 	cvttsd2si	%xmm3, %rdx
    0000011f: 	andl	$0x1, %edx
    00000122: 	negl	%edx
    00000124: 	andl	$0x1f40, %edx
    0000012a: 	cmpl	%eax, %edx
    0000012c: 	je	.Ltmp468 # Offset: 300
    0000012e: 	movl	current_test(%rip), %edx
    00000134: 	movq	%rbp, %rsi
    00000137: 	movl	$0x1, %edi
    0000013c: 	xorl	%eax, %eax
    0000013e: 	addl	$0x1, %r12d
    00000142: 	callq	__printf_chk@PLT # Offset: 322
    00000147: 	movl	iterations(%rip), %esi
    0000014d: 	cmpl	%esi, %r12d
    00000150: 	jge	.Ltmp464 # Offset: 336
    00000152: 	movsd	init_value(%rip), %xmm3
    0000015a: 	movdqa	DATAat0x57c70(%rip), %xmm2
    00000162: 	jmp	.Ltmp469 # Offset: 354
    00000167: 	nopw	(%rax,%rax) # Size: 9
.Ltmp468:
    00000170: 	addl	$0x1, %r12d
    00000174: 	cmpl	%esi, %r12d
    00000177: 	jl	.Ltmp469 # Offset: 375
.Ltmp464:
    0000017d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000184: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000018b: 	subq	$0x20, %rax
    0000018f: 	cmpq	%rax, %rbx
    00000192: 	je	.Ltmp470 # Offset: 402
    00000198: 	movq	0x8(%rsp), %rax
    0000019d: 	leaq	0x10(%rbx), %rdi
    000001a1: 	movq	%rdi, (%rbx)
    000001a4: 	movq	(%rax), %rbp
    000001a7: 	movq	0x8(%rax), %r12
    000001ab: 	movq	%rbp, %rax
    000001ae: 	addq	%r12, %rax
    000001b1: 	je	.Ltmp471 # Offset: 433
    000001b3: 	testq	%rbp, %rbp
    000001b6: 	je	.Ltmp472 # Offset: 438
.Ltmp471:
    000001bc: 	movq	%r12, 0x10(%rsp)
    000001c1: 	cmpq	$0xf, %r12
    000001c5: 	ja	.Ltmp473 # Offset: 453
    000001cb: 	cmpq	$0x1, %r12
    000001cf: 	jne	.Ltmp474 # Offset: 463
    000001d5: 	movzbl	(%rbp), %eax
    000001d9: 	movb	%al, 0x10(%rbx)
.Ltmp478:
    000001dc: 	movq	%r12, 0x8(%rbx)
    000001e0: 	movb	$0x0, (%rdi,%r12)
    000001e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001f3: 	addq	$0x20, %rax
    000001f7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001fe: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000205: 	je	.Ltmp475 # Offset: 517
.Ltmp479:
    0000020b: 	movq	-0x20(%rax), %rbp
    0000020f: 	callq	clock@PLT # Offset: 527
    00000214: 	movq	%rax, end_time(%rip)
    0000021b: 	movq	0x18(%rsp), %rdx
    00000220: 	subq	%fs:0x28, %rdx
    00000229: 	jne	.Ltmp476 # Offset: 553
    0000022f: 	subq	start_time(%rip), %rax
    00000236: 	pxor	%xmm0, %xmm0
    0000023a: 	movq	%rbp, %rdi
    0000023d: 	cvtsi2sd	%rax, %xmm0
    00000242: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000024a: 	addq	$0x28, %rsp
    0000024e: 	popq	%rbx
    0000024f: 	popq	%rbp
    00000250: 	popq	%r12
    00000252: 	popq	%r13
    00000254: 	popq	%r14
    00000256: 	popq	%r15
    00000258: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 600
.Ltmp466:
    0000025d: 	xorl	%edx, %edx
    0000025f: 	xorl	%eax, %eax
    00000261: 	jmp	.Ltmp477 # Offset: 609
.Ltmp473:
    00000266: 	movq	%rbx, %rdi
    00000269: 	leaq	0x10(%rsp), %rsi
    0000026e: 	xorl	%edx, %edx
    00000270: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 624
    00000275: 	movq	%rax, (%rbx)
    00000278: 	movq	%rax, %rdi
    0000027b: 	movq	0x10(%rsp), %rax
    00000280: 	movq	%rax, 0x10(%rbx)
.Ltmp480:
    00000284: 	movq	%r12, %rdx
    00000287: 	movq	%rbp, %rsi
    0000028a: 	callq	memcpy@PLT # Offset: 650
    0000028f: 	movq	0x10(%rsp), %r12
    00000294: 	movq	(%rbx), %rdi
    00000297: 	jmp	.Ltmp478 # Offset: 663
.Ltmp470:
    0000029c: 	movq	0x8(%rsp), %rsi
    000002a1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002a8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 680
    000002ad: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002b4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002bb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002c2: 	jne	.Ltmp479 # Offset: 706
.Ltmp475:
    000002c8: 	movq	-0x8(%rdx), %rax
    000002cc: 	addq	$0x200, %rax
    000002d2: 	jmp	.Ltmp479 # Offset: 722
.Ltmp474:
    000002d7: 	testq	%r12, %r12
    000002da: 	je	.Ltmp478 # Offset: 730
    000002e0: 	jmp	.Ltmp480 # Offset: 736
.Ltmp476:
    000002e2: 	callq	__stack_chk_fail@PLT # Offset: 738
.Ltmp472:
    000002e7: 	leaq	DATAat0x57008(%rip), %rdi
    000002ee: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 750
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIj14and_remainder2IjLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIt13and_remainderItLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 70
  State       : disassembled
  Address     : 0x68e0
  Size        : 0x34d
  MaxSize     : 0x350
  Offset      : 0x68e0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIt13and_remainderItLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB069:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp481 # Offset: 67
    00000049: 	leal	-0x1(%r14), %eax
    0000004d: 	movl	%r14d, %ebx
    00000050: 	movq	DATAat0x57c30(%rip), %xmm3
    00000058: 	movdqa	DATAat0x57c30(%rip), %xmm2
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r14d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	leaq	DATAat0x571d0(%rip), %rbp
    00000077: 	cvttsd2si	init_value(%rip), %r10d
    00000080: 	subl	$0x1, %eax
    00000083: 	shlq	$0x4, %rax
    00000087: 	leaq	0x10(%r15,%rax), %r13
    0000008c: 	nopl	(%rax) # Size: 4
.Ltmp487:
    00000090: 	xorl	%edx, %edx
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp482 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp483 # Offset: 160
    000000a6: 	movq	%r15, %rax
    000000a9: 	pxor	%xmm1, %xmm1
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp484:
    000000b0: 	movdqu	(%rax), %xmm0
    000000b4: 	addq	$0x10, %rax
    000000b8: 	pand	%xmm2, %xmm0
    000000bc: 	paddw	%xmm0, %xmm1
    000000c0: 	cmpq	%r13, %rax
    000000c3: 	jne	.Ltmp484 # Offset: 195
    000000c5: 	movdqa	%xmm1, %xmm0
    000000c9: 	psrldq	$0x8, %xmm0
    000000ce: 	paddw	%xmm0, %xmm1
    000000d2: 	movdqa	%xmm1, %xmm0
    000000d6: 	psrldq	$0x4, %xmm0
    000000db: 	paddw	%xmm0, %xmm1
    000000df: 	movdqa	%xmm1, %xmm0
    000000e3: 	psrldq	$0x2, %xmm0
    000000e8: 	paddw	%xmm0, %xmm1
    000000ec: 	pextrw	$0x0, %xmm1, %edx
    000000f1: 	cmpl	%r14d, %ebx
    000000f4: 	je	.Ltmp482 # Offset: 244
    000000f6: 	movl	%ebx, %eax
    000000f8: 	movl	%ebx, %ecx
.Ltmp495:
    000000fa: 	movl	%r14d, %esi
    000000fd: 	subl	%eax, %esi
    000000ff: 	leal	-0x1(%rsi), %edi
    00000102: 	cmpl	$0x2, %edi
    00000105: 	jbe	.Ltmp485 # Offset: 261
    00000107: 	movq	(%r15,%rax,2), %xmm0
    0000010d: 	pand	%xmm3, %xmm0
    00000111: 	pextrw	$0x0, %xmm0, %eax
    00000116: 	pextrw	$0x1, %xmm0, %edi
    0000011b: 	addl	%edi, %eax
    0000011d: 	addl	%edx, %eax
    0000011f: 	pextrw	$0x2, %xmm0, %edx
    00000124: 	addl	%edx, %eax
    00000126: 	pextrw	$0x3, %xmm0, %edx
    0000012b: 	addl	%eax, %edx
    0000012d: 	movl	%esi, %eax
    0000012f: 	andl	$-0x4, %eax
    00000132: 	addl	%eax, %ecx
    00000134: 	cmpl	%eax, %esi
    00000136: 	je	.Ltmp482 # Offset: 310
.Ltmp485:
    00000138: 	movslq	%ecx, %rax
    0000013b: 	leaq	(%rax,%rax), %rsi
    0000013f: 	movzwl	(%r15,%rax,2), %eax
    00000144: 	andl	$0x7f, %eax
    00000147: 	addl	%eax, %edx
    00000149: 	leal	0x1(%rcx), %eax
    0000014c: 	cmpl	%eax, %r14d
    0000014f: 	jle	.Ltmp482 # Offset: 335
    00000151: 	movzwl	0x2(%r15,%rsi), %eax
    00000157: 	addl	$0x2, %ecx
    0000015a: 	andl	$0x7f, %eax
    0000015d: 	addl	%eax, %edx
    0000015f: 	cmpl	%ecx, %r14d
    00000162: 	jle	.Ltmp482 # Offset: 354
    00000164: 	movzwl	0x4(%r15,%rsi), %eax
    0000016a: 	andl	$0x7f, %eax
    0000016d: 	addl	%eax, %edx
.Ltmp482:
    0000016f: 	movl	%r10d, %eax
    00000172: 	andl	$0x7f, %eax
    00000175: 	imulw	$0x1f40, %ax, %ax
    0000017a: 	cmpw	%dx, %ax
    0000017d: 	je	.Ltmp486 # Offset: 381
    0000017f: 	movl	current_test(%rip), %edx
    00000185: 	movq	%rbp, %rsi
    00000188: 	movl	$0x1, %edi
    0000018d: 	xorl	%eax, %eax
    0000018f: 	addl	$0x1, %r12d
    00000193: 	callq	__printf_chk@PLT # Offset: 403
    00000198: 	movl	iterations(%rip), %r9d
    0000019f: 	cmpl	%r12d, %r9d
    000001a2: 	jle	.Ltmp481 # Offset: 418
    000001a4: 	cvttsd2si	init_value(%rip), %r10d
    000001ad: 	movdqa	DATAat0x57c30(%rip), %xmm2
    000001b5: 	movq	DATAat0x57c30(%rip), %xmm3
    000001bd: 	jmp	.Ltmp487 # Offset: 445
    000001c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp486:
    000001c8: 	addl	$0x1, %r12d
    000001cc: 	cmpl	%r9d, %r12d
    000001cf: 	jl	.Ltmp487 # Offset: 463
.Ltmp481:
    000001d5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001dc: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001e3: 	subq	$0x20, %rax
    000001e7: 	cmpq	%rax, %rbx
    000001ea: 	je	.Ltmp488 # Offset: 490
    000001f0: 	movq	0x8(%rsp), %rax
    000001f5: 	leaq	0x10(%rbx), %rdi
    000001f9: 	movq	%rdi, (%rbx)
    000001fc: 	movq	(%rax), %rbp
    000001ff: 	movq	0x8(%rax), %r12
    00000203: 	movq	%rbp, %rax
    00000206: 	addq	%r12, %rax
    00000209: 	je	.Ltmp489 # Offset: 521
    0000020b: 	testq	%rbp, %rbp
    0000020e: 	je	.Ltmp490 # Offset: 526
.Ltmp489:
    00000214: 	movq	%r12, 0x10(%rsp)
    00000219: 	cmpq	$0xf, %r12
    0000021d: 	ja	.Ltmp491 # Offset: 541
    00000223: 	cmpq	$0x1, %r12
    00000227: 	jne	.Ltmp492 # Offset: 551
    0000022d: 	movzbl	(%rbp), %eax
    00000231: 	movb	%al, 0x10(%rbx)
.Ltmp496:
    00000234: 	movq	%r12, 0x8(%rbx)
    00000238: 	movb	$0x0, (%rdi,%r12)
    0000023d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000244: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000024b: 	addq	$0x20, %rax
    0000024f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000256: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000025d: 	je	.Ltmp493 # Offset: 605
.Ltmp497:
    00000263: 	movq	-0x20(%rax), %rbp
    00000267: 	callq	clock@PLT # Offset: 615
    0000026c: 	movq	%rax, end_time(%rip)
    00000273: 	movq	0x18(%rsp), %rdx
    00000278: 	subq	%fs:0x28, %rdx
    00000281: 	jne	.Ltmp494 # Offset: 641
    00000287: 	subq	start_time(%rip), %rax
    0000028e: 	pxor	%xmm0, %xmm0
    00000292: 	movq	%rbp, %rdi
    00000295: 	cvtsi2sd	%rax, %xmm0
    0000029a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002a2: 	addq	$0x28, %rsp
    000002a6: 	popq	%rbx
    000002a7: 	popq	%rbp
    000002a8: 	popq	%r12
    000002aa: 	popq	%r13
    000002ac: 	popq	%r14
    000002ae: 	popq	%r15
    000002b0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 688
.Ltmp483:
    000002b5: 	xorl	%eax, %eax
    000002b7: 	xorl	%ecx, %ecx
    000002b9: 	xorl	%edx, %edx
    000002bb: 	jmp	.Ltmp495 # Offset: 699
.Ltmp491:
    000002c0: 	movq	%rbx, %rdi
    000002c3: 	leaq	0x10(%rsp), %rsi
    000002c8: 	xorl	%edx, %edx
    000002ca: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 714
    000002cf: 	movq	%rax, (%rbx)
    000002d2: 	movq	%rax, %rdi
    000002d5: 	movq	0x10(%rsp), %rax
    000002da: 	movq	%rax, 0x10(%rbx)
.Ltmp498:
    000002de: 	movq	%r12, %rdx
    000002e1: 	movq	%rbp, %rsi
    000002e4: 	callq	memcpy@PLT # Offset: 740
    000002e9: 	movq	0x10(%rsp), %r12
    000002ee: 	movq	(%rbx), %rdi
    000002f1: 	jmp	.Ltmp496 # Offset: 753
.Ltmp488:
    000002f6: 	movq	0x8(%rsp), %rsi
    000002fb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000302: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 770
    00000307: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000030e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000315: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000031c: 	jne	.Ltmp497 # Offset: 796
.Ltmp493:
    00000322: 	movq	-0x8(%rdx), %rax
    00000326: 	addq	$0x200, %rax
    0000032c: 	jmp	.Ltmp497 # Offset: 812
.Ltmp492:
    00000331: 	testq	%r12, %r12
    00000334: 	je	.Ltmp496 # Offset: 820
    0000033a: 	jmp	.Ltmp498 # Offset: 826
.Ltmp494:
    0000033c: 	callq	__stack_chk_fail@PLT # Offset: 828
.Ltmp490:
    00000341: 	leaq	DATAat0x57008(%rip), %rdi
    00000348: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 840
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIt13and_remainderItLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIj10shift_leftIjLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 71
  State       : disassembled
  Address     : 0x6c30
  Size        : 0x2d3
  MaxSize     : 0x2e0
  Offset      : 0x6c30
  Section     : .text
  Orc Section : .local.text._Z13test_constantIj10shift_leftIjLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB070:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp499 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r14d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm2
    00000067: 	andl	$-0x4, %ebx
    0000006a: 	shrl	$0x2, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r15,%rax), %r13
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp504:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r14d, %r14d
    00000085: 	jle	.Ltmp500 # Offset: 133
    0000008b: 	cmpl	$0x2, 0x4(%rsp)
    00000090: 	jbe	.Ltmp501 # Offset: 144
    00000096: 	movq	%r15, %rax
    00000099: 	pxor	%xmm1, %xmm1
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp502:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	pslld	$0x3, %xmm0
    000000ad: 	paddd	%xmm0, %xmm1
    000000b1: 	cmpq	%r13, %rax
    000000b4: 	jne	.Ltmp502 # Offset: 180
    000000b6: 	movdqa	%xmm1, %xmm0
    000000ba: 	movl	%ebx, %edx
    000000bc: 	psrldq	$0x8, %xmm0
    000000c1: 	paddd	%xmm0, %xmm1
    000000c5: 	movdqa	%xmm1, %xmm0
    000000c9: 	psrldq	$0x4, %xmm0
    000000ce: 	paddd	%xmm0, %xmm1
    000000d2: 	movd	%xmm1, %eax
    000000d6: 	cmpl	%r14d, %ebx
    000000d9: 	je	.Ltmp500 # Offset: 217
.Ltmp512:
    000000db: 	movslq	%edx, %rdi
    000000de: 	leaq	(,%rdi,4), %r9
    000000e6: 	movl	(%r15,%rdi,4), %edi
    000000ea: 	leal	(%rax,%rdi,8), %eax
    000000ed: 	leal	0x1(%rdx), %edi
    000000f0: 	cmpl	%edi, %r14d
    000000f3: 	jle	.Ltmp500 # Offset: 243
    000000f5: 	movl	0x4(%r15,%r9), %edi
    000000fa: 	addl	$0x2, %edx
    000000fd: 	leal	(%rax,%rdi,8), %eax
    00000100: 	cmpl	%edx, %r14d
    00000103: 	jle	.Ltmp500 # Offset: 259
    00000105: 	movl	0x8(%r15,%r9), %edx
    0000010a: 	leal	(%rax,%rdx,8), %eax
.Ltmp500:
    0000010d: 	cvttsd2si	%xmm2, %rdx
    00000112: 	shll	$0x3, %edx
    00000115: 	imull	$0x1f40, %edx, %edx
    0000011b: 	cmpl	%eax, %edx
    0000011d: 	je	.Ltmp503 # Offset: 285
    0000011f: 	movl	current_test(%rip), %edx
    00000125: 	movq	%rbp, %rsi
    00000128: 	movl	$0x1, %edi
    0000012d: 	xorl	%eax, %eax
    0000012f: 	addl	$0x1, %r12d
    00000133: 	callq	__printf_chk@PLT # Offset: 307
    00000138: 	movl	iterations(%rip), %esi
    0000013e: 	cmpl	%esi, %r12d
    00000141: 	jge	.Ltmp499 # Offset: 321
    00000143: 	movsd	init_value(%rip), %xmm2
    0000014b: 	jmp	.Ltmp504 # Offset: 331
.Ltmp503:
    00000150: 	addl	$0x1, %r12d
    00000154: 	cmpl	%esi, %r12d
    00000157: 	jl	.Ltmp504 # Offset: 343
.Ltmp499:
    0000015d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000164: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000016b: 	subq	$0x20, %rax
    0000016f: 	cmpq	%rax, %rbx
    00000172: 	je	.Ltmp505 # Offset: 370
    00000178: 	movq	0x8(%rsp), %rax
    0000017d: 	leaq	0x10(%rbx), %rdi
    00000181: 	movq	%rdi, (%rbx)
    00000184: 	movq	(%rax), %rbp
    00000187: 	movq	0x8(%rax), %r12
    0000018b: 	movq	%rbp, %rax
    0000018e: 	addq	%r12, %rax
    00000191: 	je	.Ltmp506 # Offset: 401
    00000193: 	testq	%rbp, %rbp
    00000196: 	je	.Ltmp507 # Offset: 406
.Ltmp506:
    0000019c: 	movq	%r12, 0x10(%rsp)
    000001a1: 	cmpq	$0xf, %r12
    000001a5: 	ja	.Ltmp508 # Offset: 421
    000001ab: 	cmpq	$0x1, %r12
    000001af: 	jne	.Ltmp509 # Offset: 431
    000001b5: 	movzbl	(%rbp), %eax
    000001b9: 	movb	%al, 0x10(%rbx)
.Ltmp513:
    000001bc: 	movq	%r12, 0x8(%rbx)
    000001c0: 	movb	$0x0, (%rdi,%r12)
    000001c5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001cc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001d3: 	addq	$0x20, %rax
    000001d7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001de: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001e5: 	je	.Ltmp510 # Offset: 485
.Ltmp514:
    000001eb: 	movq	-0x20(%rax), %rbp
    000001ef: 	callq	clock@PLT # Offset: 495
    000001f4: 	movq	%rax, end_time(%rip)
    000001fb: 	movq	0x18(%rsp), %rdx
    00000200: 	subq	%fs:0x28, %rdx
    00000209: 	jne	.Ltmp511 # Offset: 521
    0000020f: 	subq	start_time(%rip), %rax
    00000216: 	pxor	%xmm0, %xmm0
    0000021a: 	movq	%rbp, %rdi
    0000021d: 	cvtsi2sd	%rax, %xmm0
    00000222: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000022a: 	addq	$0x28, %rsp
    0000022e: 	popq	%rbx
    0000022f: 	popq	%rbp
    00000230: 	popq	%r12
    00000232: 	popq	%r13
    00000234: 	popq	%r14
    00000236: 	popq	%r15
    00000238: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 568
.Ltmp501:
    0000023d: 	xorl	%edx, %edx
    0000023f: 	xorl	%eax, %eax
    00000241: 	jmp	.Ltmp512 # Offset: 577
.Ltmp508:
    00000246: 	movq	%rbx, %rdi
    00000249: 	leaq	0x10(%rsp), %rsi
    0000024e: 	xorl	%edx, %edx
    00000250: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 592
    00000255: 	movq	%rax, (%rbx)
    00000258: 	movq	%rax, %rdi
    0000025b: 	movq	0x10(%rsp), %rax
    00000260: 	movq	%rax, 0x10(%rbx)
.Ltmp515:
    00000264: 	movq	%r12, %rdx
    00000267: 	movq	%rbp, %rsi
    0000026a: 	callq	memcpy@PLT # Offset: 618
    0000026f: 	movq	0x10(%rsp), %r12
    00000274: 	movq	(%rbx), %rdi
    00000277: 	jmp	.Ltmp513 # Offset: 631
.Ltmp505:
    0000027c: 	movq	0x8(%rsp), %rsi
    00000281: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000288: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 648
    0000028d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000294: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000029b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002a2: 	jne	.Ltmp514 # Offset: 674
.Ltmp510:
    000002a8: 	movq	-0x8(%rdx), %rax
    000002ac: 	addq	$0x200, %rax
    000002b2: 	jmp	.Ltmp514 # Offset: 690
.Ltmp509:
    000002b7: 	testq	%r12, %r12
    000002ba: 	je	.Ltmp513 # Offset: 698
    000002c0: 	jmp	.Ltmp515 # Offset: 704
.Ltmp511:
    000002c2: 	callq	__stack_chk_fail@PLT # Offset: 706
.Ltmp507:
    000002c7: 	leaq	DATAat0x57008(%rip), %rdi
    000002ce: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 718
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIj10shift_leftIjLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIm14and_remainder2ImLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 72
  State       : disassembled
  Address     : 0x6f10
  Size        : 0x2e5
  MaxSize     : 0x2f0
  Offset      : 0x6f10
  Section     : .text
  Orc Section : .local.text._Z13test_constantIm14and_remainder2ImLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB071:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp516 # Offset: 65
    00000047: 	movl	%r15d, %eax
    0000004a: 	movl	%r15d, %ebx
    0000004d: 	movsd	DATAat0x57bd8(%rip), %xmm4
    00000055: 	movsd	init_value(%rip), %xmm3
    0000005d: 	shrl	%eax
    0000005f: 	movdqa	DATAat0x57c80(%rip), %xmm2
    00000067: 	andl	$-0x2, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	subl	$0x1, %eax
    00000070: 	leaq	DATAat0x571d0(%rip), %rbp
    00000077: 	shlq	$0x4, %rax
    0000007b: 	leaq	0x10(%r13,%rax), %r14
.Ltmp522:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp517 # Offset: 133
    00000087: 	cmpl	$0x1, %r15d
    0000008b: 	je	.Ltmp518 # Offset: 139
    00000091: 	movq	%r13, %rax
    00000094: 	pxor	%xmm1, %xmm1
    00000098: 	nopl	(%rax,%rax) # Size: 8
.Ltmp519:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	pand	%xmm2, %xmm0
    000000ac: 	paddq	%xmm0, %xmm1
    000000b0: 	cmpq	%rax, %r14
    000000b3: 	jne	.Ltmp519 # Offset: 179
    000000b5: 	movdqa	%xmm1, %xmm0
    000000b9: 	movslq	%ebx, %rdx
    000000bc: 	psrldq	$0x8, %xmm0
    000000c1: 	paddq	%xmm0, %xmm1
    000000c5: 	movq	%xmm1, %rax
    000000ca: 	cmpl	%r15d, %ebx
    000000cd: 	je	.Ltmp517 # Offset: 205
.Ltmp531:
    000000cf: 	movq	(%r13,%rdx,8), %rdx
    000000d4: 	andl	$0x3, %edx
    000000d7: 	addq	%rdx, %rax
.Ltmp517:
    000000da: 	comisd	%xmm4, %xmm3
    000000de: 	jae	.Ltmp520 # Offset: 222
    000000e4: 	cvttsd2si	%xmm3, %rdx
.Ltmp530:
    000000e9: 	andl	$0x3, %edx
    000000ec: 	imulq	$0x1f40, %rdx, %rdx
    000000f3: 	cmpq	%rax, %rdx
    000000f6: 	je	.Ltmp521 # Offset: 246
    000000f8: 	movl	current_test(%rip), %edx
    000000fe: 	movq	%rbp, %rsi
    00000101: 	movl	$0x1, %edi
    00000106: 	xorl	%eax, %eax
    00000108: 	addl	$0x1, %r12d
    0000010c: 	callq	__printf_chk@PLT # Offset: 268
    00000111: 	movl	iterations(%rip), %esi
    00000117: 	cmpl	%esi, %r12d
    0000011a: 	jge	.Ltmp516 # Offset: 282
    0000011c: 	movq	DATAat0x57bd8(%rip), %rax
    00000123: 	movsd	init_value(%rip), %xmm3
    0000012b: 	movdqa	DATAat0x57c80(%rip), %xmm2
    00000133: 	movq	%rax, %xmm4
    00000138: 	jmp	.Ltmp522 # Offset: 312
    0000013d: 	nopl	(%rax) # Size: 3
.Ltmp521:
    00000140: 	addl	$0x1, %r12d
    00000144: 	cmpl	%esi, %r12d
    00000147: 	jl	.Ltmp522 # Offset: 327
.Ltmp516:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp523 # Offset: 354
    00000168: 	movq	0x8(%rsp), %rax
    0000016d: 	leaq	0x10(%rbx), %rdi
    00000171: 	movq	%rdi, (%rbx)
    00000174: 	movq	(%rax), %rbp
    00000177: 	movq	0x8(%rax), %r12
    0000017b: 	movq	%rbp, %rax
    0000017e: 	addq	%r12, %rax
    00000181: 	je	.Ltmp524 # Offset: 385
    00000183: 	testq	%rbp, %rbp
    00000186: 	je	.Ltmp525 # Offset: 390
.Ltmp524:
    0000018c: 	movq	%r12, 0x10(%rsp)
    00000191: 	cmpq	$0xf, %r12
    00000195: 	ja	.Ltmp526 # Offset: 405
    0000019b: 	cmpq	$0x1, %r12
    0000019f: 	jne	.Ltmp527 # Offset: 415
    000001a5: 	movzbl	(%rbp), %eax
    000001a9: 	movb	%al, 0x10(%rbx)
.Ltmp532:
    000001ac: 	movq	%r12, 0x8(%rbx)
    000001b0: 	movb	$0x0, (%rdi,%r12)
    000001b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001bc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001c3: 	addq	$0x20, %rax
    000001c7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ce: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d5: 	je	.Ltmp528 # Offset: 469
.Ltmp533:
    000001db: 	movq	-0x20(%rax), %rbp
    000001df: 	callq	clock@PLT # Offset: 479
    000001e4: 	movq	%rax, end_time(%rip)
    000001eb: 	movq	0x18(%rsp), %rdx
    000001f0: 	subq	%fs:0x28, %rdx
    000001f9: 	jne	.Ltmp529 # Offset: 505
    000001ff: 	subq	start_time(%rip), %rax
    00000206: 	pxor	%xmm0, %xmm0
    0000020a: 	movq	%rbp, %rdi
    0000020d: 	cvtsi2sd	%rax, %xmm0
    00000212: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000021a: 	addq	$0x28, %rsp
    0000021e: 	popq	%rbx
    0000021f: 	popq	%rbp
    00000220: 	popq	%r12
    00000222: 	popq	%r13
    00000224: 	popq	%r14
    00000226: 	popq	%r15
    00000228: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 552
    0000022d: 	nopl	(%rax) # Size: 3
.Ltmp520:
    00000230: 	movabsq	$-0x8000000000000000, %rcx
    0000023a: 	movapd	%xmm3, %xmm0
    0000023e: 	subsd	%xmm4, %xmm0
    00000242: 	cvttsd2si	%xmm0, %rdx
    00000247: 	xorq	%rcx, %rdx
    0000024a: 	jmp	.Ltmp530 # Offset: 586
.Ltmp518:
    0000024f: 	xorl	%edx, %edx
    00000251: 	xorl	%eax, %eax
    00000253: 	jmp	.Ltmp531 # Offset: 595
.Ltmp526:
    00000258: 	movq	%rbx, %rdi
    0000025b: 	leaq	0x10(%rsp), %rsi
    00000260: 	xorl	%edx, %edx
    00000262: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 610
    00000267: 	movq	%rax, (%rbx)
    0000026a: 	movq	%rax, %rdi
    0000026d: 	movq	0x10(%rsp), %rax
    00000272: 	movq	%rax, 0x10(%rbx)
.Ltmp534:
    00000276: 	movq	%r12, %rdx
    00000279: 	movq	%rbp, %rsi
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x10(%rsp), %r12
    00000286: 	movq	(%rbx), %rdi
    00000289: 	jmp	.Ltmp532 # Offset: 649
.Ltmp523:
    0000028e: 	movq	0x8(%rsp), %rsi
    00000293: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000029a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 666
    0000029f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b4: 	jne	.Ltmp533 # Offset: 692
.Ltmp528:
    000002ba: 	movq	-0x8(%rdx), %rax
    000002be: 	addq	$0x200, %rax
    000002c4: 	jmp	.Ltmp533 # Offset: 708
.Ltmp527:
    000002c9: 	testq	%r12, %r12
    000002cc: 	je	.Ltmp532 # Offset: 716
    000002d2: 	jmp	.Ltmp534 # Offset: 722
.Ltmp529:
    000002d4: 	callq	__stack_chk_fail@PLT # Offset: 724
.Ltmp525:
    000002d9: 	leaq	DATAat0x57008(%rip), %rdi
    000002e0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 736
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIm14and_remainder2ImLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIt13and_remainderItLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 73
  State       : disassembled
  Address     : 0x7200
  Size        : 0x34d
  MaxSize     : 0x350
  Offset      : 0x7200
  Section     : .text
  Orc Section : .local.text._Z13test_constantIt13and_remainderItLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB072:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp535 # Offset: 67
    00000049: 	leal	-0x1(%r14), %eax
    0000004d: 	movl	%r14d, %ebx
    00000050: 	movq	DATAat0x57c90(%rip), %xmm3
    00000058: 	movdqa	DATAat0x57c90(%rip), %xmm2
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r14d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	leaq	DATAat0x571d0(%rip), %rbp
    00000077: 	cvttsd2si	init_value(%rip), %r10d
    00000080: 	subl	$0x1, %eax
    00000083: 	shlq	$0x4, %rax
    00000087: 	leaq	0x10(%r15,%rax), %r13
    0000008c: 	nopl	(%rax) # Size: 4
.Ltmp541:
    00000090: 	xorl	%edx, %edx
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp536 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp537 # Offset: 160
    000000a6: 	movq	%r15, %rax
    000000a9: 	pxor	%xmm1, %xmm1
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp538:
    000000b0: 	movdqu	(%rax), %xmm0
    000000b4: 	addq	$0x10, %rax
    000000b8: 	pand	%xmm2, %xmm0
    000000bc: 	paddw	%xmm0, %xmm1
    000000c0: 	cmpq	%r13, %rax
    000000c3: 	jne	.Ltmp538 # Offset: 195
    000000c5: 	movdqa	%xmm1, %xmm0
    000000c9: 	psrldq	$0x8, %xmm0
    000000ce: 	paddw	%xmm0, %xmm1
    000000d2: 	movdqa	%xmm1, %xmm0
    000000d6: 	psrldq	$0x4, %xmm0
    000000db: 	paddw	%xmm0, %xmm1
    000000df: 	movdqa	%xmm1, %xmm0
    000000e3: 	psrldq	$0x2, %xmm0
    000000e8: 	paddw	%xmm0, %xmm1
    000000ec: 	pextrw	$0x0, %xmm1, %edx
    000000f1: 	cmpl	%r14d, %ebx
    000000f4: 	je	.Ltmp536 # Offset: 244
    000000f6: 	movl	%ebx, %eax
    000000f8: 	movl	%ebx, %ecx
.Ltmp549:
    000000fa: 	movl	%r14d, %esi
    000000fd: 	subl	%eax, %esi
    000000ff: 	leal	-0x1(%rsi), %edi
    00000102: 	cmpl	$0x2, %edi
    00000105: 	jbe	.Ltmp539 # Offset: 261
    00000107: 	movq	(%r15,%rax,2), %xmm0
    0000010d: 	pand	%xmm3, %xmm0
    00000111: 	pextrw	$0x0, %xmm0, %eax
    00000116: 	pextrw	$0x1, %xmm0, %edi
    0000011b: 	addl	%edi, %eax
    0000011d: 	addl	%edx, %eax
    0000011f: 	pextrw	$0x2, %xmm0, %edx
    00000124: 	addl	%edx, %eax
    00000126: 	pextrw	$0x3, %xmm0, %edx
    0000012b: 	addl	%eax, %edx
    0000012d: 	movl	%esi, %eax
    0000012f: 	andl	$-0x4, %eax
    00000132: 	addl	%eax, %ecx
    00000134: 	cmpl	%eax, %esi
    00000136: 	je	.Ltmp536 # Offset: 310
.Ltmp539:
    00000138: 	movslq	%ecx, %rax
    0000013b: 	leaq	(%rax,%rax), %rsi
    0000013f: 	movzwl	(%r15,%rax,2), %eax
    00000144: 	andl	$0xf, %eax
    00000147: 	addl	%eax, %edx
    00000149: 	leal	0x1(%rcx), %eax
    0000014c: 	cmpl	%eax, %r14d
    0000014f: 	jle	.Ltmp536 # Offset: 335
    00000151: 	movzwl	0x2(%r15,%rsi), %eax
    00000157: 	addl	$0x2, %ecx
    0000015a: 	andl	$0xf, %eax
    0000015d: 	addl	%eax, %edx
    0000015f: 	cmpl	%ecx, %r14d
    00000162: 	jle	.Ltmp536 # Offset: 354
    00000164: 	movzwl	0x4(%r15,%rsi), %eax
    0000016a: 	andl	$0xf, %eax
    0000016d: 	addl	%eax, %edx
.Ltmp536:
    0000016f: 	movl	%r10d, %eax
    00000172: 	andl	$0xf, %eax
    00000175: 	imulw	$0x1f40, %ax, %ax
    0000017a: 	cmpw	%dx, %ax
    0000017d: 	je	.Ltmp540 # Offset: 381
    0000017f: 	movl	current_test(%rip), %edx
    00000185: 	movq	%rbp, %rsi
    00000188: 	movl	$0x1, %edi
    0000018d: 	xorl	%eax, %eax
    0000018f: 	addl	$0x1, %r12d
    00000193: 	callq	__printf_chk@PLT # Offset: 403
    00000198: 	movl	iterations(%rip), %r9d
    0000019f: 	cmpl	%r12d, %r9d
    000001a2: 	jle	.Ltmp535 # Offset: 418
    000001a4: 	cvttsd2si	init_value(%rip), %r10d
    000001ad: 	movdqa	DATAat0x57c90(%rip), %xmm2
    000001b5: 	movq	DATAat0x57c90(%rip), %xmm3
    000001bd: 	jmp	.Ltmp541 # Offset: 445
    000001c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp540:
    000001c8: 	addl	$0x1, %r12d
    000001cc: 	cmpl	%r9d, %r12d
    000001cf: 	jl	.Ltmp541 # Offset: 463
.Ltmp535:
    000001d5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001dc: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001e3: 	subq	$0x20, %rax
    000001e7: 	cmpq	%rax, %rbx
    000001ea: 	je	.Ltmp542 # Offset: 490
    000001f0: 	movq	0x8(%rsp), %rax
    000001f5: 	leaq	0x10(%rbx), %rdi
    000001f9: 	movq	%rdi, (%rbx)
    000001fc: 	movq	(%rax), %rbp
    000001ff: 	movq	0x8(%rax), %r12
    00000203: 	movq	%rbp, %rax
    00000206: 	addq	%r12, %rax
    00000209: 	je	.Ltmp543 # Offset: 521
    0000020b: 	testq	%rbp, %rbp
    0000020e: 	je	.Ltmp544 # Offset: 526
.Ltmp543:
    00000214: 	movq	%r12, 0x10(%rsp)
    00000219: 	cmpq	$0xf, %r12
    0000021d: 	ja	.Ltmp545 # Offset: 541
    00000223: 	cmpq	$0x1, %r12
    00000227: 	jne	.Ltmp546 # Offset: 551
    0000022d: 	movzbl	(%rbp), %eax
    00000231: 	movb	%al, 0x10(%rbx)
.Ltmp550:
    00000234: 	movq	%r12, 0x8(%rbx)
    00000238: 	movb	$0x0, (%rdi,%r12)
    0000023d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000244: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000024b: 	addq	$0x20, %rax
    0000024f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000256: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000025d: 	je	.Ltmp547 # Offset: 605
.Ltmp551:
    00000263: 	movq	-0x20(%rax), %rbp
    00000267: 	callq	clock@PLT # Offset: 615
    0000026c: 	movq	%rax, end_time(%rip)
    00000273: 	movq	0x18(%rsp), %rdx
    00000278: 	subq	%fs:0x28, %rdx
    00000281: 	jne	.Ltmp548 # Offset: 641
    00000287: 	subq	start_time(%rip), %rax
    0000028e: 	pxor	%xmm0, %xmm0
    00000292: 	movq	%rbp, %rdi
    00000295: 	cvtsi2sd	%rax, %xmm0
    0000029a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002a2: 	addq	$0x28, %rsp
    000002a6: 	popq	%rbx
    000002a7: 	popq	%rbp
    000002a8: 	popq	%r12
    000002aa: 	popq	%r13
    000002ac: 	popq	%r14
    000002ae: 	popq	%r15
    000002b0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 688
.Ltmp537:
    000002b5: 	xorl	%eax, %eax
    000002b7: 	xorl	%ecx, %ecx
    000002b9: 	xorl	%edx, %edx
    000002bb: 	jmp	.Ltmp549 # Offset: 699
.Ltmp545:
    000002c0: 	movq	%rbx, %rdi
    000002c3: 	leaq	0x10(%rsp), %rsi
    000002c8: 	xorl	%edx, %edx
    000002ca: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 714
    000002cf: 	movq	%rax, (%rbx)
    000002d2: 	movq	%rax, %rdi
    000002d5: 	movq	0x10(%rsp), %rax
    000002da: 	movq	%rax, 0x10(%rbx)
.Ltmp552:
    000002de: 	movq	%r12, %rdx
    000002e1: 	movq	%rbp, %rsi
    000002e4: 	callq	memcpy@PLT # Offset: 740
    000002e9: 	movq	0x10(%rsp), %r12
    000002ee: 	movq	(%rbx), %rdi
    000002f1: 	jmp	.Ltmp550 # Offset: 753
.Ltmp542:
    000002f6: 	movq	0x8(%rsp), %rsi
    000002fb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000302: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 770
    00000307: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000030e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000315: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000031c: 	jne	.Ltmp551 # Offset: 796
.Ltmp547:
    00000322: 	movq	-0x8(%rdx), %rax
    00000326: 	addq	$0x200, %rax
    0000032c: 	jmp	.Ltmp551 # Offset: 812
.Ltmp546:
    00000331: 	testq	%r12, %r12
    00000334: 	je	.Ltmp550 # Offset: 820
    0000033a: 	jmp	.Ltmp552 # Offset: 826
.Ltmp548:
    0000033c: 	callq	__stack_chk_fail@PLT # Offset: 828
.Ltmp544:
    00000341: 	leaq	DATAat0x57008(%rip), %rdi
    00000348: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 840
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIt13and_remainderItLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIt21custom_divide_inline2ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 74
  State       : disassembled
  Address     : 0x7550
  Size        : 0x335
  MaxSize     : 0x340
  Offset      : 0x7550
  Section     : .text
  Orc Section : .local.text._Z13test_constantIt21custom_divide_inline2ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB073:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp553 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r14d, %eax
    0000005f: 	cvttsd2si	init_value(%rip), %edi
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	shrl	$0x3, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r15,%rax), %r13
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp559:
    00000080: 	xorl	%edx, %edx
    00000082: 	testl	%r14d, %r14d
    00000085: 	jle	.Ltmp554 # Offset: 133
    0000008b: 	cmpl	$0x6, 0x4(%rsp)
    00000090: 	jbe	.Ltmp555 # Offset: 144
    00000096: 	movq	%r15, %rax
    00000099: 	pxor	%xmm1, %xmm1
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp556:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	psrlw	$0x1, %xmm0
    000000ad: 	paddw	%xmm0, %xmm1
    000000b1: 	cmpq	%r13, %rax
    000000b4: 	jne	.Ltmp556 # Offset: 180
    000000b6: 	movdqa	%xmm1, %xmm0
    000000ba: 	psrldq	$0x8, %xmm0
    000000bf: 	paddw	%xmm0, %xmm1
    000000c3: 	movdqa	%xmm1, %xmm0
    000000c7: 	psrldq	$0x4, %xmm0
    000000cc: 	paddw	%xmm0, %xmm1
    000000d0: 	movdqa	%xmm1, %xmm0
    000000d4: 	psrldq	$0x2, %xmm0
    000000d9: 	paddw	%xmm0, %xmm1
    000000dd: 	pextrw	$0x0, %xmm1, %edx
    000000e2: 	cmpl	%r14d, %ebx
    000000e5: 	je	.Ltmp554 # Offset: 229
    000000eb: 	movl	%ebx, %eax
    000000ed: 	movl	%ebx, %ecx
.Ltmp567:
    000000ef: 	movl	%r14d, %r8d
    000000f2: 	subl	%eax, %r8d
    000000f5: 	leal	-0x1(%r8), %r9d
    000000f9: 	cmpl	$0x2, %r9d
    000000fd: 	jbe	.Ltmp557 # Offset: 253
    000000ff: 	movq	(%r15,%rax,2), %xmm0
    00000105: 	psrlw	$0x1, %xmm0
    0000010a: 	pextrw	$0x0, %xmm0, %eax
    0000010f: 	pextrw	$0x1, %xmm0, %r9d
    00000115: 	addl	%r9d, %eax
    00000118: 	addl	%edx, %eax
    0000011a: 	pextrw	$0x2, %xmm0, %edx
    0000011f: 	addl	%edx, %eax
    00000121: 	pextrw	$0x3, %xmm0, %edx
    00000126: 	addl	%eax, %edx
    00000128: 	movl	%r8d, %eax
    0000012b: 	andl	$-0x4, %eax
    0000012e: 	addl	%eax, %ecx
    00000130: 	cmpl	%eax, %r8d
    00000133: 	je	.Ltmp554 # Offset: 307
.Ltmp557:
    00000135: 	movslq	%ecx, %rax
    00000138: 	leaq	(%rax,%rax), %r8
    0000013c: 	movzwl	(%r15,%rax,2), %eax
    00000141: 	shrw	%ax
    00000144: 	addl	%eax, %edx
    00000146: 	leal	0x1(%rcx), %eax
    00000149: 	cmpl	%eax, %r14d
    0000014c: 	jle	.Ltmp554 # Offset: 332
    0000014e: 	movzwl	0x2(%r15,%r8), %eax
    00000154: 	addl	$0x2, %ecx
    00000157: 	shrw	%ax
    0000015a: 	addl	%eax, %edx
    0000015c: 	cmpl	%ecx, %r14d
    0000015f: 	jle	.Ltmp554 # Offset: 351
    00000161: 	movzwl	0x4(%r15,%r8), %eax
    00000167: 	shrw	%ax
    0000016a: 	addl	%eax, %edx
.Ltmp554:
    0000016c: 	movl	%edi, %eax
    0000016e: 	shrw	%ax
    00000171: 	imulw	$0x1f40, %ax, %ax
    00000176: 	cmpw	%dx, %ax
    00000179: 	je	.Ltmp558 # Offset: 377
    0000017b: 	movl	current_test(%rip), %edx
    00000181: 	movq	%rbp, %rsi
    00000184: 	movl	$0x1, %edi
    00000189: 	xorl	%eax, %eax
    0000018b: 	addl	$0x1, %r12d
    0000018f: 	callq	__printf_chk@PLT # Offset: 399
    00000194: 	movl	iterations(%rip), %esi
    0000019a: 	cmpl	%r12d, %esi
    0000019d: 	jle	.Ltmp553 # Offset: 413
    0000019f: 	cvttsd2si	init_value(%rip), %edi
    000001a7: 	jmp	.Ltmp559 # Offset: 423
    000001ac: 	nopl	(%rax) # Size: 4
.Ltmp558:
    000001b0: 	addl	$0x1, %r12d
    000001b4: 	cmpl	%esi, %r12d
    000001b7: 	jl	.Ltmp559 # Offset: 439
.Ltmp553:
    000001bd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001c4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001cb: 	subq	$0x20, %rax
    000001cf: 	cmpq	%rax, %rbx
    000001d2: 	je	.Ltmp560 # Offset: 466
    000001d8: 	movq	0x8(%rsp), %rax
    000001dd: 	leaq	0x10(%rbx), %rdi
    000001e1: 	movq	%rdi, (%rbx)
    000001e4: 	movq	(%rax), %rbp
    000001e7: 	movq	0x8(%rax), %r12
    000001eb: 	movq	%rbp, %rax
    000001ee: 	addq	%r12, %rax
    000001f1: 	je	.Ltmp561 # Offset: 497
    000001f3: 	testq	%rbp, %rbp
    000001f6: 	je	.Ltmp562 # Offset: 502
.Ltmp561:
    000001fc: 	movq	%r12, 0x10(%rsp)
    00000201: 	cmpq	$0xf, %r12
    00000205: 	ja	.Ltmp563 # Offset: 517
    0000020b: 	cmpq	$0x1, %r12
    0000020f: 	jne	.Ltmp564 # Offset: 527
    00000215: 	movzbl	(%rbp), %eax
    00000219: 	movb	%al, 0x10(%rbx)
.Ltmp568:
    0000021c: 	movq	%r12, 0x8(%rbx)
    00000220: 	movb	$0x0, (%rdi,%r12)
    00000225: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000022c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000233: 	addq	$0x20, %rax
    00000237: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000023e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000245: 	je	.Ltmp565 # Offset: 581
.Ltmp569:
    0000024b: 	movq	-0x20(%rax), %rbp
    0000024f: 	callq	clock@PLT # Offset: 591
    00000254: 	movq	%rax, end_time(%rip)
    0000025b: 	movq	0x18(%rsp), %rdx
    00000260: 	subq	%fs:0x28, %rdx
    00000269: 	jne	.Ltmp566 # Offset: 617
    0000026f: 	subq	start_time(%rip), %rax
    00000276: 	pxor	%xmm0, %xmm0
    0000027a: 	movq	%rbp, %rdi
    0000027d: 	cvtsi2sd	%rax, %xmm0
    00000282: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000028a: 	addq	$0x28, %rsp
    0000028e: 	popq	%rbx
    0000028f: 	popq	%rbp
    00000290: 	popq	%r12
    00000292: 	popq	%r13
    00000294: 	popq	%r14
    00000296: 	popq	%r15
    00000298: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 664
.Ltmp555:
    0000029d: 	xorl	%eax, %eax
    0000029f: 	xorl	%ecx, %ecx
    000002a1: 	xorl	%edx, %edx
    000002a3: 	jmp	.Ltmp567 # Offset: 675
.Ltmp563:
    000002a8: 	movq	%rbx, %rdi
    000002ab: 	leaq	0x10(%rsp), %rsi
    000002b0: 	xorl	%edx, %edx
    000002b2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 690
    000002b7: 	movq	%rax, (%rbx)
    000002ba: 	movq	%rax, %rdi
    000002bd: 	movq	0x10(%rsp), %rax
    000002c2: 	movq	%rax, 0x10(%rbx)
.Ltmp570:
    000002c6: 	movq	%r12, %rdx
    000002c9: 	movq	%rbp, %rsi
    000002cc: 	callq	memcpy@PLT # Offset: 716
    000002d1: 	movq	0x10(%rsp), %r12
    000002d6: 	movq	(%rbx), %rdi
    000002d9: 	jmp	.Ltmp568 # Offset: 729
.Ltmp560:
    000002de: 	movq	0x8(%rsp), %rsi
    000002e3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002ea: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 746
    000002ef: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002f6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002fd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000304: 	jne	.Ltmp569 # Offset: 772
.Ltmp565:
    0000030a: 	movq	-0x8(%rdx), %rax
    0000030e: 	addq	$0x200, %rax
    00000314: 	jmp	.Ltmp569 # Offset: 788
.Ltmp564:
    00000319: 	testq	%r12, %r12
    0000031c: 	je	.Ltmp568 # Offset: 796
    00000322: 	jmp	.Ltmp570 # Offset: 802
.Ltmp566:
    00000324: 	callq	__stack_chk_fail@PLT # Offset: 804
.Ltmp562:
    00000329: 	leaq	DATAat0x57008(%rip), %rdi
    00000330: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 816
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIt21custom_divide_inline2ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIm16custom_remainderImLi16EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 75
  State       : disassembled
  Address     : 0x7890
  Size        : 0x2e5
  MaxSize     : 0x2f0
  Offset      : 0x7890
  Section     : .text
  Orc Section : .local.text._Z13test_constantIm16custom_remainderImLi16EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB074:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp571 # Offset: 65
    00000047: 	movl	%r15d, %eax
    0000004a: 	movl	%r15d, %ebx
    0000004d: 	movsd	DATAat0x57bd8(%rip), %xmm4
    00000055: 	movsd	init_value(%rip), %xmm3
    0000005d: 	shrl	%eax
    0000005f: 	movdqa	DATAat0x57ca0(%rip), %xmm2
    00000067: 	andl	$-0x2, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	subl	$0x1, %eax
    00000070: 	leaq	DATAat0x571d0(%rip), %rbp
    00000077: 	shlq	$0x4, %rax
    0000007b: 	leaq	0x10(%r13,%rax), %r14
.Ltmp577:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp572 # Offset: 133
    00000087: 	cmpl	$0x1, %r15d
    0000008b: 	je	.Ltmp573 # Offset: 139
    00000091: 	movq	%r13, %rax
    00000094: 	pxor	%xmm1, %xmm1
    00000098: 	nopl	(%rax,%rax) # Size: 8
.Ltmp574:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	pand	%xmm2, %xmm0
    000000ac: 	paddq	%xmm0, %xmm1
    000000b0: 	cmpq	%rax, %r14
    000000b3: 	jne	.Ltmp574 # Offset: 179
    000000b5: 	movdqa	%xmm1, %xmm0
    000000b9: 	movslq	%ebx, %rdx
    000000bc: 	psrldq	$0x8, %xmm0
    000000c1: 	paddq	%xmm0, %xmm1
    000000c5: 	movq	%xmm1, %rax
    000000ca: 	cmpl	%r15d, %ebx
    000000cd: 	je	.Ltmp572 # Offset: 205
.Ltmp586:
    000000cf: 	movq	(%r13,%rdx,8), %rdx
    000000d4: 	andl	$0xf, %edx
    000000d7: 	addq	%rdx, %rax
.Ltmp572:
    000000da: 	comisd	%xmm4, %xmm3
    000000de: 	jae	.Ltmp575 # Offset: 222
    000000e4: 	cvttsd2si	%xmm3, %rdx
.Ltmp585:
    000000e9: 	andl	$0xf, %edx
    000000ec: 	imulq	$0x1f40, %rdx, %rdx
    000000f3: 	cmpq	%rax, %rdx
    000000f6: 	je	.Ltmp576 # Offset: 246
    000000f8: 	movl	current_test(%rip), %edx
    000000fe: 	movq	%rbp, %rsi
    00000101: 	movl	$0x1, %edi
    00000106: 	xorl	%eax, %eax
    00000108: 	addl	$0x1, %r12d
    0000010c: 	callq	__printf_chk@PLT # Offset: 268
    00000111: 	movl	iterations(%rip), %esi
    00000117: 	cmpl	%esi, %r12d
    0000011a: 	jge	.Ltmp571 # Offset: 282
    0000011c: 	movq	DATAat0x57bd8(%rip), %rax
    00000123: 	movsd	init_value(%rip), %xmm3
    0000012b: 	movdqa	DATAat0x57ca0(%rip), %xmm2
    00000133: 	movq	%rax, %xmm4
    00000138: 	jmp	.Ltmp577 # Offset: 312
    0000013d: 	nopl	(%rax) # Size: 3
.Ltmp576:
    00000140: 	addl	$0x1, %r12d
    00000144: 	cmpl	%esi, %r12d
    00000147: 	jl	.Ltmp577 # Offset: 327
.Ltmp571:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp578 # Offset: 354
    00000168: 	movq	0x8(%rsp), %rax
    0000016d: 	leaq	0x10(%rbx), %rdi
    00000171: 	movq	%rdi, (%rbx)
    00000174: 	movq	(%rax), %rbp
    00000177: 	movq	0x8(%rax), %r12
    0000017b: 	movq	%rbp, %rax
    0000017e: 	addq	%r12, %rax
    00000181: 	je	.Ltmp579 # Offset: 385
    00000183: 	testq	%rbp, %rbp
    00000186: 	je	.Ltmp580 # Offset: 390
.Ltmp579:
    0000018c: 	movq	%r12, 0x10(%rsp)
    00000191: 	cmpq	$0xf, %r12
    00000195: 	ja	.Ltmp581 # Offset: 405
    0000019b: 	cmpq	$0x1, %r12
    0000019f: 	jne	.Ltmp582 # Offset: 415
    000001a5: 	movzbl	(%rbp), %eax
    000001a9: 	movb	%al, 0x10(%rbx)
.Ltmp587:
    000001ac: 	movq	%r12, 0x8(%rbx)
    000001b0: 	movb	$0x0, (%rdi,%r12)
    000001b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001bc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001c3: 	addq	$0x20, %rax
    000001c7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ce: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d5: 	je	.Ltmp583 # Offset: 469
.Ltmp588:
    000001db: 	movq	-0x20(%rax), %rbp
    000001df: 	callq	clock@PLT # Offset: 479
    000001e4: 	movq	%rax, end_time(%rip)
    000001eb: 	movq	0x18(%rsp), %rdx
    000001f0: 	subq	%fs:0x28, %rdx
    000001f9: 	jne	.Ltmp584 # Offset: 505
    000001ff: 	subq	start_time(%rip), %rax
    00000206: 	pxor	%xmm0, %xmm0
    0000020a: 	movq	%rbp, %rdi
    0000020d: 	cvtsi2sd	%rax, %xmm0
    00000212: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000021a: 	addq	$0x28, %rsp
    0000021e: 	popq	%rbx
    0000021f: 	popq	%rbp
    00000220: 	popq	%r12
    00000222: 	popq	%r13
    00000224: 	popq	%r14
    00000226: 	popq	%r15
    00000228: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 552
    0000022d: 	nopl	(%rax) # Size: 3
.Ltmp575:
    00000230: 	movabsq	$-0x8000000000000000, %rcx
    0000023a: 	movapd	%xmm3, %xmm0
    0000023e: 	subsd	%xmm4, %xmm0
    00000242: 	cvttsd2si	%xmm0, %rdx
    00000247: 	xorq	%rcx, %rdx
    0000024a: 	jmp	.Ltmp585 # Offset: 586
.Ltmp573:
    0000024f: 	xorl	%edx, %edx
    00000251: 	xorl	%eax, %eax
    00000253: 	jmp	.Ltmp586 # Offset: 595
.Ltmp581:
    00000258: 	movq	%rbx, %rdi
    0000025b: 	leaq	0x10(%rsp), %rsi
    00000260: 	xorl	%edx, %edx
    00000262: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 610
    00000267: 	movq	%rax, (%rbx)
    0000026a: 	movq	%rax, %rdi
    0000026d: 	movq	0x10(%rsp), %rax
    00000272: 	movq	%rax, 0x10(%rbx)
.Ltmp589:
    00000276: 	movq	%r12, %rdx
    00000279: 	movq	%rbp, %rsi
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x10(%rsp), %r12
    00000286: 	movq	(%rbx), %rdi
    00000289: 	jmp	.Ltmp587 # Offset: 649
.Ltmp578:
    0000028e: 	movq	0x8(%rsp), %rsi
    00000293: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000029a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 666
    0000029f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b4: 	jne	.Ltmp588 # Offset: 692
.Ltmp583:
    000002ba: 	movq	-0x8(%rdx), %rax
    000002be: 	addq	$0x200, %rax
    000002c4: 	jmp	.Ltmp588 # Offset: 708
.Ltmp582:
    000002c9: 	testq	%r12, %r12
    000002cc: 	je	.Ltmp587 # Offset: 716
    000002d2: 	jmp	.Ltmp589 # Offset: 722
.Ltmp584:
    000002d4: 	callq	__stack_chk_fail@PLT # Offset: 724
.Ltmp580:
    000002d9: 	leaq	DATAat0x57008(%rip), %rdi
    000002e0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 736
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIm16custom_remainderImLi16EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIj24shift_divide_toward_zeroIjLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 76
  State       : disassembled
  Address     : 0x7b80
  Size        : 0x2db
  MaxSize     : 0x2e0
  Offset      : 0x7b80
  Section     : .text
  Orc Section : .local.text._Z13test_constantIj24shift_divide_toward_zeroIjLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB075:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp590 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r14d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm2
    00000067: 	andl	$-0x4, %ebx
    0000006a: 	shrl	$0x2, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r15,%rax), %r13
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp595:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r14d, %r14d
    00000085: 	jle	.Ltmp591 # Offset: 133
    0000008b: 	cmpl	$0x2, 0x4(%rsp)
    00000090: 	jbe	.Ltmp592 # Offset: 144
    00000096: 	movq	%r15, %rax
    00000099: 	pxor	%xmm1, %xmm1
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp593:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	psrld	$0x1, %xmm0
    000000ad: 	paddd	%xmm0, %xmm1
    000000b1: 	cmpq	%r13, %rax
    000000b4: 	jne	.Ltmp593 # Offset: 180
    000000b6: 	movdqa	%xmm1, %xmm0
    000000ba: 	movl	%ebx, %edx
    000000bc: 	psrldq	$0x8, %xmm0
    000000c1: 	paddd	%xmm0, %xmm1
    000000c5: 	movdqa	%xmm1, %xmm0
    000000c9: 	psrldq	$0x4, %xmm0
    000000ce: 	paddd	%xmm0, %xmm1
    000000d2: 	movd	%xmm1, %eax
    000000d6: 	cmpl	%r14d, %ebx
    000000d9: 	je	.Ltmp591 # Offset: 217
.Ltmp603:
    000000db: 	movslq	%edx, %rdi
    000000de: 	leaq	(,%rdi,4), %r9
    000000e6: 	movl	(%r15,%rdi,4), %edi
    000000ea: 	shrl	%edi
    000000ec: 	addl	%edi, %eax
    000000ee: 	leal	0x1(%rdx), %edi
    000000f1: 	cmpl	%edi, %r14d
    000000f4: 	jle	.Ltmp591 # Offset: 244
    000000f6: 	movl	0x4(%r15,%r9), %edi
    000000fb: 	addl	$0x2, %edx
    000000fe: 	shrl	%edi
    00000100: 	addl	%edi, %eax
    00000102: 	cmpl	%edx, %r14d
    00000105: 	jle	.Ltmp591 # Offset: 261
    00000107: 	movl	0x8(%r15,%r9), %edx
    0000010c: 	shrl	%edx
    0000010e: 	addl	%edx, %eax
.Ltmp591:
    00000110: 	cvttsd2si	%xmm2, %rdx
    00000115: 	shrl	%edx
    00000117: 	imull	$0x1f40, %edx, %edx
    0000011d: 	cmpl	%eax, %edx
    0000011f: 	je	.Ltmp594 # Offset: 287
    00000121: 	movl	current_test(%rip), %edx
    00000127: 	movq	%rbp, %rsi
    0000012a: 	movl	$0x1, %edi
    0000012f: 	xorl	%eax, %eax
    00000131: 	addl	$0x1, %r12d
    00000135: 	callq	__printf_chk@PLT # Offset: 309
    0000013a: 	movl	iterations(%rip), %esi
    00000140: 	cmpl	%esi, %r12d
    00000143: 	jge	.Ltmp590 # Offset: 323
    00000145: 	movsd	init_value(%rip), %xmm2
    0000014d: 	jmp	.Ltmp595 # Offset: 333
    00000152: 	nopw	(%rax,%rax) # Size: 6
.Ltmp594:
    00000158: 	addl	$0x1, %r12d
    0000015c: 	cmpl	%esi, %r12d
    0000015f: 	jl	.Ltmp595 # Offset: 351
.Ltmp590:
    00000165: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000016c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000173: 	subq	$0x20, %rax
    00000177: 	cmpq	%rax, %rbx
    0000017a: 	je	.Ltmp596 # Offset: 378
    00000180: 	movq	0x8(%rsp), %rax
    00000185: 	leaq	0x10(%rbx), %rdi
    00000189: 	movq	%rdi, (%rbx)
    0000018c: 	movq	(%rax), %rbp
    0000018f: 	movq	0x8(%rax), %r12
    00000193: 	movq	%rbp, %rax
    00000196: 	addq	%r12, %rax
    00000199: 	je	.Ltmp597 # Offset: 409
    0000019b: 	testq	%rbp, %rbp
    0000019e: 	je	.Ltmp598 # Offset: 414
.Ltmp597:
    000001a4: 	movq	%r12, 0x10(%rsp)
    000001a9: 	cmpq	$0xf, %r12
    000001ad: 	ja	.Ltmp599 # Offset: 429
    000001b3: 	cmpq	$0x1, %r12
    000001b7: 	jne	.Ltmp600 # Offset: 439
    000001bd: 	movzbl	(%rbp), %eax
    000001c1: 	movb	%al, 0x10(%rbx)
.Ltmp604:
    000001c4: 	movq	%r12, 0x8(%rbx)
    000001c8: 	movb	$0x0, (%rdi,%r12)
    000001cd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001db: 	addq	$0x20, %rax
    000001df: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001e6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001ed: 	je	.Ltmp601 # Offset: 493
.Ltmp605:
    000001f3: 	movq	-0x20(%rax), %rbp
    000001f7: 	callq	clock@PLT # Offset: 503
    000001fc: 	movq	%rax, end_time(%rip)
    00000203: 	movq	0x18(%rsp), %rdx
    00000208: 	subq	%fs:0x28, %rdx
    00000211: 	jne	.Ltmp602 # Offset: 529
    00000217: 	subq	start_time(%rip), %rax
    0000021e: 	pxor	%xmm0, %xmm0
    00000222: 	movq	%rbp, %rdi
    00000225: 	cvtsi2sd	%rax, %xmm0
    0000022a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000232: 	addq	$0x28, %rsp
    00000236: 	popq	%rbx
    00000237: 	popq	%rbp
    00000238: 	popq	%r12
    0000023a: 	popq	%r13
    0000023c: 	popq	%r14
    0000023e: 	popq	%r15
    00000240: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 576
.Ltmp592:
    00000245: 	xorl	%edx, %edx
    00000247: 	xorl	%eax, %eax
    00000249: 	jmp	.Ltmp603 # Offset: 585
.Ltmp599:
    0000024e: 	movq	%rbx, %rdi
    00000251: 	leaq	0x10(%rsp), %rsi
    00000256: 	xorl	%edx, %edx
    00000258: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 600
    0000025d: 	movq	%rax, (%rbx)
    00000260: 	movq	%rax, %rdi
    00000263: 	movq	0x10(%rsp), %rax
    00000268: 	movq	%rax, 0x10(%rbx)
.Ltmp606:
    0000026c: 	movq	%r12, %rdx
    0000026f: 	movq	%rbp, %rsi
    00000272: 	callq	memcpy@PLT # Offset: 626
    00000277: 	movq	0x10(%rsp), %r12
    0000027c: 	movq	(%rbx), %rdi
    0000027f: 	jmp	.Ltmp604 # Offset: 639
.Ltmp596:
    00000284: 	movq	0x8(%rsp), %rsi
    00000289: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000290: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 656
    00000295: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000029c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002a3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002aa: 	jne	.Ltmp605 # Offset: 682
.Ltmp601:
    000002b0: 	movq	-0x8(%rdx), %rax
    000002b4: 	addq	$0x200, %rax
    000002ba: 	jmp	.Ltmp605 # Offset: 698
.Ltmp600:
    000002bf: 	testq	%r12, %r12
    000002c2: 	je	.Ltmp604 # Offset: 706
    000002c8: 	jmp	.Ltmp606 # Offset: 712
.Ltmp602:
    000002ca: 	callq	__stack_chk_fail@PLT # Offset: 714
.Ltmp598:
    000002cf: 	leaq	DATAat0x57008(%rip), %rdi
    000002d6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 726
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIj24shift_divide_toward_zeroIjLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIm11shift_rightImLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 77
  State       : disassembled
  Address     : 0x7e60
  Size        : 0x2e5
  MaxSize     : 0x2f0
  Offset      : 0x7e60
  Section     : .text
  Orc Section : .local.text._Z13test_constantIm11shift_rightImLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB076:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp607 # Offset: 65
    00000047: 	movl	%r15d, %eax
    0000004a: 	movl	%r15d, %ebx
    0000004d: 	leaq	DATAat0x571d0(%rip), %rbp
    00000054: 	xorl	%r12d, %r12d
    00000057: 	shrl	%eax
    00000059: 	movsd	DATAat0x57bd8(%rip), %xmm3
    00000061: 	movsd	init_value(%rip), %xmm2
    00000069: 	andl	$-0x2, %ebx
    0000006c: 	subl	$0x1, %eax
    0000006f: 	shlq	$0x4, %rax
    00000073: 	leaq	0x10(%r13,%rax), %r14
    00000078: 	nopl	(%rax,%rax) # Size: 8
.Ltmp613:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp608 # Offset: 133
    00000087: 	cmpl	$0x1, %r15d
    0000008b: 	je	.Ltmp609 # Offset: 139
    00000091: 	movq	%r13, %rax
    00000094: 	pxor	%xmm1, %xmm1
    00000098: 	nopl	(%rax,%rax) # Size: 8
.Ltmp610:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	psrlq	$0x1, %xmm0
    000000ad: 	paddq	%xmm0, %xmm1
    000000b1: 	cmpq	%rax, %r14
    000000b4: 	jne	.Ltmp610 # Offset: 180
    000000b6: 	movdqa	%xmm1, %xmm0
    000000ba: 	movslq	%ebx, %rdx
    000000bd: 	psrldq	$0x8, %xmm0
    000000c2: 	paddq	%xmm0, %xmm1
    000000c6: 	movq	%xmm1, %rax
    000000cb: 	cmpl	%r15d, %ebx
    000000ce: 	je	.Ltmp608 # Offset: 206
.Ltmp622:
    000000d0: 	movq	(%r13,%rdx,8), %rdx
    000000d5: 	shrq	%rdx
    000000d8: 	addq	%rdx, %rax
.Ltmp608:
    000000db: 	comisd	%xmm3, %xmm2
    000000df: 	jae	.Ltmp611 # Offset: 223
    000000e5: 	cvttsd2si	%xmm2, %rdx
.Ltmp621:
    000000ea: 	shrq	%rdx
    000000ed: 	imulq	$0x1f40, %rdx, %rdx
    000000f4: 	cmpq	%rax, %rdx
    000000f7: 	je	.Ltmp612 # Offset: 247
    000000f9: 	movl	current_test(%rip), %edx
    000000ff: 	movq	%rbp, %rsi
    00000102: 	movl	$0x1, %edi
    00000107: 	xorl	%eax, %eax
    00000109: 	addl	$0x1, %r12d
    0000010d: 	callq	__printf_chk@PLT # Offset: 269
    00000112: 	movl	iterations(%rip), %esi
    00000118: 	cmpl	%esi, %r12d
    0000011b: 	jge	.Ltmp607 # Offset: 283
    0000011d: 	movq	DATAat0x57bd8(%rip), %rax
    00000124: 	movsd	init_value(%rip), %xmm2
    0000012c: 	movq	%rax, %xmm3
    00000131: 	jmp	.Ltmp613 # Offset: 305
    00000136: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp612:
    00000140: 	addl	$0x1, %r12d
    00000144: 	cmpl	%esi, %r12d
    00000147: 	jl	.Ltmp613 # Offset: 327
.Ltmp607:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp614 # Offset: 354
    00000168: 	movq	0x8(%rsp), %rax
    0000016d: 	leaq	0x10(%rbx), %rdi
    00000171: 	movq	%rdi, (%rbx)
    00000174: 	movq	(%rax), %rbp
    00000177: 	movq	0x8(%rax), %r12
    0000017b: 	movq	%rbp, %rax
    0000017e: 	addq	%r12, %rax
    00000181: 	je	.Ltmp615 # Offset: 385
    00000183: 	testq	%rbp, %rbp
    00000186: 	je	.Ltmp616 # Offset: 390
.Ltmp615:
    0000018c: 	movq	%r12, 0x10(%rsp)
    00000191: 	cmpq	$0xf, %r12
    00000195: 	ja	.Ltmp617 # Offset: 405
    0000019b: 	cmpq	$0x1, %r12
    0000019f: 	jne	.Ltmp618 # Offset: 415
    000001a5: 	movzbl	(%rbp), %eax
    000001a9: 	movb	%al, 0x10(%rbx)
.Ltmp623:
    000001ac: 	movq	%r12, 0x8(%rbx)
    000001b0: 	movb	$0x0, (%rdi,%r12)
    000001b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001bc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001c3: 	addq	$0x20, %rax
    000001c7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ce: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d5: 	je	.Ltmp619 # Offset: 469
.Ltmp624:
    000001db: 	movq	-0x20(%rax), %rbp
    000001df: 	callq	clock@PLT # Offset: 479
    000001e4: 	movq	%rax, end_time(%rip)
    000001eb: 	movq	0x18(%rsp), %rdx
    000001f0: 	subq	%fs:0x28, %rdx
    000001f9: 	jne	.Ltmp620 # Offset: 505
    000001ff: 	subq	start_time(%rip), %rax
    00000206: 	pxor	%xmm0, %xmm0
    0000020a: 	movq	%rbp, %rdi
    0000020d: 	cvtsi2sd	%rax, %xmm0
    00000212: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000021a: 	addq	$0x28, %rsp
    0000021e: 	popq	%rbx
    0000021f: 	popq	%rbp
    00000220: 	popq	%r12
    00000222: 	popq	%r13
    00000224: 	popq	%r14
    00000226: 	popq	%r15
    00000228: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 552
    0000022d: 	nopl	(%rax) # Size: 3
.Ltmp611:
    00000230: 	movabsq	$-0x8000000000000000, %rcx
    0000023a: 	movapd	%xmm2, %xmm0
    0000023e: 	subsd	%xmm3, %xmm0
    00000242: 	cvttsd2si	%xmm0, %rdx
    00000247: 	xorq	%rcx, %rdx
    0000024a: 	jmp	.Ltmp621 # Offset: 586
.Ltmp609:
    0000024f: 	xorl	%edx, %edx
    00000251: 	xorl	%eax, %eax
    00000253: 	jmp	.Ltmp622 # Offset: 595
.Ltmp617:
    00000258: 	movq	%rbx, %rdi
    0000025b: 	leaq	0x10(%rsp), %rsi
    00000260: 	xorl	%edx, %edx
    00000262: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 610
    00000267: 	movq	%rax, (%rbx)
    0000026a: 	movq	%rax, %rdi
    0000026d: 	movq	0x10(%rsp), %rax
    00000272: 	movq	%rax, 0x10(%rbx)
.Ltmp625:
    00000276: 	movq	%r12, %rdx
    00000279: 	movq	%rbp, %rsi
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x10(%rsp), %r12
    00000286: 	movq	(%rbx), %rdi
    00000289: 	jmp	.Ltmp623 # Offset: 649
.Ltmp614:
    0000028e: 	movq	0x8(%rsp), %rsi
    00000293: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000029a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 666
    0000029f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b4: 	jne	.Ltmp624 # Offset: 692
.Ltmp619:
    000002ba: 	movq	-0x8(%rdx), %rax
    000002be: 	addq	$0x200, %rax
    000002c4: 	jmp	.Ltmp624 # Offset: 708
.Ltmp618:
    000002c9: 	testq	%r12, %r12
    000002cc: 	je	.Ltmp623 # Offset: 716
    000002d2: 	jmp	.Ltmp625 # Offset: 722
.Ltmp620:
    000002d4: 	callq	__stack_chk_fail@PLT # Offset: 724
.Ltmp616:
    000002d9: 	leaq	DATAat0x57008(%rip), %rdi
    000002e0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 736
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIm11shift_rightImLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1Ii22custom_divide_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 78
  State       : disassembled
  Address     : 0x8150
  Size        : 0x246
  MaxSize     : 0x250
  Offset      : 0x8150
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Ii22custom_divide_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB077:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movl	%edx, %ebx
    00000016: 	subq	$0x28, %rsp
    0000001a: 	movq	%rcx, 0x8(%rsp)
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x18(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	callq	clock@PLT # Offset: 47
    00000034: 	movl	iterations(%rip), %edi
    0000003a: 	movq	%rax, start_time(%rip)
    00000041: 	testl	%edi, %edi
    00000043: 	jle	.Ltmp626 # Offset: 67
    00000049: 	leal	-0x1(%r15), %eax
    0000004d: 	movsd	init_value(%rip), %xmm0
    00000055: 	xorl	%r13d, %r13d
    00000058: 	leaq	DATAat0x571d0(%rip), %r12
    0000005f: 	leaq	0x4(%rbp,%rax,4), %r14
    00000064: 	nopl	(%rax) # Size: 4
.Ltmp630:
    00000068: 	movq	%rbp, %rcx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp627 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp628:
    00000078: 	movl	(%rcx), %eax
    0000007a: 	addq	$0x4, %rcx
    0000007e: 	cltd
    0000007f: 	idivl	%ebx
    00000081: 	addl	%eax, %esi
    00000083: 	cmpq	%rcx, %r14
    00000086: 	jne	.Ltmp628 # Offset: 134
.Ltmp627:
    00000088: 	cvttsd2si	%xmm0, %eax
    0000008c: 	cltd
    0000008d: 	idivl	%ebx
    0000008f: 	imull	$0x1f40, %eax, %eax
    00000095: 	cmpl	%esi, %eax
    00000097: 	je	.Ltmp629 # Offset: 151
    00000099: 	movl	current_test(%rip), %edx
    0000009f: 	movl	$0x1, %edi
    000000a4: 	movq	%r12, %rsi
    000000a7: 	xorl	%eax, %eax
    000000a9: 	addl	$0x1, %r13d
    000000ad: 	callq	__printf_chk@PLT # Offset: 173
    000000b2: 	movl	iterations(%rip), %edi
    000000b8: 	cmpl	%edi, %r13d
    000000bb: 	jge	.Ltmp626 # Offset: 187
    000000bd: 	movsd	init_value(%rip), %xmm0
    000000c5: 	jmp	.Ltmp630 # Offset: 197
    000000c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp629:
    000000d0: 	addl	$0x1, %r13d
    000000d4: 	cmpl	%edi, %r13d
    000000d7: 	jl	.Ltmp630 # Offset: 215
.Ltmp626:
    000000d9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000e0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000e7: 	subq	$0x20, %rax
    000000eb: 	cmpq	%rax, %rbx
    000000ee: 	je	.Ltmp631 # Offset: 238
    000000f4: 	movq	0x8(%rsp), %rax
    000000f9: 	leaq	0x10(%rbx), %rdi
    000000fd: 	movq	%rdi, (%rbx)
    00000100: 	movq	(%rax), %rbp
    00000103: 	movq	0x8(%rax), %r12
    00000107: 	movq	%rbp, %rax
    0000010a: 	addq	%r12, %rax
    0000010d: 	je	.Ltmp632 # Offset: 269
    0000010f: 	testq	%rbp, %rbp
    00000112: 	je	.Ltmp633 # Offset: 274
.Ltmp632:
    00000118: 	movq	%r12, 0x10(%rsp)
    0000011d: 	cmpq	$0xf, %r12
    00000121: 	ja	.Ltmp634 # Offset: 289
    00000127: 	cmpq	$0x1, %r12
    0000012b: 	jne	.Ltmp635 # Offset: 299
    00000131: 	movzbl	(%rbp), %eax
    00000135: 	movb	%al, 0x10(%rbx)
.Ltmp638:
    00000138: 	movq	%r12, 0x8(%rbx)
    0000013c: 	movb	$0x0, (%rdi,%r12)
    00000141: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000148: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000014f: 	addq	$0x20, %rax
    00000153: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000015a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000161: 	je	.Ltmp636 # Offset: 353
.Ltmp639:
    00000167: 	movq	-0x20(%rax), %rbp
    0000016b: 	callq	clock@PLT # Offset: 363
    00000170: 	movq	%rax, end_time(%rip)
    00000177: 	movq	0x18(%rsp), %rdx
    0000017c: 	subq	%fs:0x28, %rdx
    00000185: 	jne	.Ltmp637 # Offset: 389
    0000018b: 	subq	start_time(%rip), %rax
    00000192: 	pxor	%xmm0, %xmm0
    00000196: 	movq	%rbp, %rdi
    00000199: 	cvtsi2sd	%rax, %xmm0
    0000019e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001a6: 	addq	$0x28, %rsp
    000001aa: 	popq	%rbx
    000001ab: 	popq	%rbp
    000001ac: 	popq	%r12
    000001ae: 	popq	%r13
    000001b0: 	popq	%r14
    000001b2: 	popq	%r15
    000001b4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 436
.Ltmp634:
    000001b9: 	movq	%rbx, %rdi
    000001bc: 	leaq	0x10(%rsp), %rsi
    000001c1: 	xorl	%edx, %edx
    000001c3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 451
    000001c8: 	movq	%rax, (%rbx)
    000001cb: 	movq	%rax, %rdi
    000001ce: 	movq	0x10(%rsp), %rax
    000001d3: 	movq	%rax, 0x10(%rbx)
.Ltmp640:
    000001d7: 	movq	%r12, %rdx
    000001da: 	movq	%rbp, %rsi
    000001dd: 	callq	memcpy@PLT # Offset: 477
    000001e2: 	movq	0x10(%rsp), %r12
    000001e7: 	movq	(%rbx), %rdi
    000001ea: 	jmp	.Ltmp638 # Offset: 490
.Ltmp631:
    000001ef: 	movq	0x8(%rsp), %rsi
    000001f4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001fb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 507
    00000200: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000207: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000020e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000215: 	jne	.Ltmp639 # Offset: 533
.Ltmp636:
    0000021b: 	movq	-0x8(%rdx), %rax
    0000021f: 	addq	$0x200, %rax
    00000225: 	jmp	.Ltmp639 # Offset: 549
.Ltmp635:
    0000022a: 	testq	%r12, %r12
    0000022d: 	je	.Ltmp638 # Offset: 557
    00000233: 	jmp	.Ltmp640 # Offset: 563
.Ltmp637:
    00000235: 	callq	__stack_chk_fail@PLT # Offset: 565
.Ltmp633:
    0000023a: 	leaq	DATAat0x57008(%rip), %rdi
    00000241: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 577
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Ii22custom_divide_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIt12and_constantItLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 79
  State       : disassembled
  Address     : 0x83a0
  Size        : 0x345
  MaxSize     : 0x350
  Offset      : 0x83a0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIt12and_constantItLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB078:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp641 # Offset: 67
    00000049: 	leal	-0x1(%r14), %eax
    0000004d: 	movl	%r14d, %ebx
    00000050: 	movq	DATAat0x57be0(%rip), %xmm3
    00000058: 	movdqa	DATAat0x57be0(%rip), %xmm2
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r14d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	leaq	DATAat0x571d0(%rip), %rbp
    00000077: 	cvttsd2si	init_value(%rip), %r10d
    00000080: 	subl	$0x1, %eax
    00000083: 	shlq	$0x4, %rax
    00000087: 	leaq	0x10(%r15,%rax), %r13
    0000008c: 	nopl	(%rax) # Size: 4
.Ltmp647:
    00000090: 	xorl	%edx, %edx
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp642 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp643 # Offset: 160
    000000a6: 	movq	%r15, %rax
    000000a9: 	pxor	%xmm1, %xmm1
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp644:
    000000b0: 	movdqu	(%rax), %xmm0
    000000b4: 	addq	$0x10, %rax
    000000b8: 	pand	%xmm2, %xmm0
    000000bc: 	paddw	%xmm0, %xmm1
    000000c0: 	cmpq	%r13, %rax
    000000c3: 	jne	.Ltmp644 # Offset: 195
    000000c5: 	movdqa	%xmm1, %xmm0
    000000c9: 	psrldq	$0x8, %xmm0
    000000ce: 	paddw	%xmm0, %xmm1
    000000d2: 	movdqa	%xmm1, %xmm0
    000000d6: 	psrldq	$0x4, %xmm0
    000000db: 	paddw	%xmm0, %xmm1
    000000df: 	movdqa	%xmm1, %xmm0
    000000e3: 	psrldq	$0x2, %xmm0
    000000e8: 	paddw	%xmm0, %xmm1
    000000ec: 	pextrw	$0x0, %xmm1, %edx
    000000f1: 	cmpl	%r14d, %ebx
    000000f4: 	je	.Ltmp642 # Offset: 244
    000000f6: 	movl	%ebx, %eax
    000000f8: 	movl	%ebx, %ecx
.Ltmp655:
    000000fa: 	movl	%r14d, %esi
    000000fd: 	subl	%eax, %esi
    000000ff: 	leal	-0x1(%rsi), %edi
    00000102: 	cmpl	$0x2, %edi
    00000105: 	jbe	.Ltmp645 # Offset: 261
    00000107: 	movq	(%r15,%rax,2), %xmm0
    0000010d: 	pand	%xmm3, %xmm0
    00000111: 	pextrw	$0x0, %xmm0, %eax
    00000116: 	pextrw	$0x1, %xmm0, %edi
    0000011b: 	addl	%edi, %eax
    0000011d: 	addl	%edx, %eax
    0000011f: 	pextrw	$0x2, %xmm0, %edx
    00000124: 	addl	%edx, %eax
    00000126: 	pextrw	$0x3, %xmm0, %edx
    0000012b: 	addl	%eax, %edx
    0000012d: 	movl	%esi, %eax
    0000012f: 	andl	$-0x4, %eax
    00000132: 	addl	%eax, %ecx
    00000134: 	cmpl	%eax, %esi
    00000136: 	je	.Ltmp642 # Offset: 310
.Ltmp645:
    00000138: 	movslq	%ecx, %rax
    0000013b: 	leaq	(%rax,%rax), %rsi
    0000013f: 	movzbl	(%r15,%rax,2), %eax
    00000144: 	addl	%eax, %edx
    00000146: 	leal	0x1(%rcx), %eax
    00000149: 	cmpl	%eax, %r14d
    0000014c: 	jle	.Ltmp642 # Offset: 332
    0000014e: 	movzbl	0x2(%r15,%rsi), %eax
    00000154: 	addl	$0x2, %ecx
    00000157: 	addl	%eax, %edx
    00000159: 	cmpl	%ecx, %r14d
    0000015c: 	jle	.Ltmp642 # Offset: 348
    0000015e: 	movzbl	0x4(%r15,%rsi), %eax
    00000164: 	addl	%eax, %edx
.Ltmp642:
    00000166: 	movzbl	%r10b, %eax
    0000016a: 	imulw	$0x1f40, %ax, %ax
    0000016f: 	cmpw	%dx, %ax
    00000172: 	je	.Ltmp646 # Offset: 370
    00000174: 	movl	current_test(%rip), %edx
    0000017a: 	movq	%rbp, %rsi
    0000017d: 	movl	$0x1, %edi
    00000182: 	xorl	%eax, %eax
    00000184: 	addl	$0x1, %r12d
    00000188: 	callq	__printf_chk@PLT # Offset: 392
    0000018d: 	movl	iterations(%rip), %r9d
    00000194: 	cmpl	%r12d, %r9d
    00000197: 	jle	.Ltmp641 # Offset: 407
    00000199: 	cvttsd2si	init_value(%rip), %r10d
    000001a2: 	movdqa	DATAat0x57be0(%rip), %xmm2
    000001aa: 	movq	DATAat0x57be0(%rip), %xmm3
    000001b2: 	jmp	.Ltmp647 # Offset: 434
    000001b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp646:
    000001c0: 	addl	$0x1, %r12d
    000001c4: 	cmpl	%r9d, %r12d
    000001c7: 	jl	.Ltmp647 # Offset: 455
.Ltmp641:
    000001cd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001d4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001db: 	subq	$0x20, %rax
    000001df: 	cmpq	%rax, %rbx
    000001e2: 	je	.Ltmp648 # Offset: 482
    000001e8: 	movq	0x8(%rsp), %rax
    000001ed: 	leaq	0x10(%rbx), %rdi
    000001f1: 	movq	%rdi, (%rbx)
    000001f4: 	movq	(%rax), %rbp
    000001f7: 	movq	0x8(%rax), %r12
    000001fb: 	movq	%rbp, %rax
    000001fe: 	addq	%r12, %rax
    00000201: 	je	.Ltmp649 # Offset: 513
    00000203: 	testq	%rbp, %rbp
    00000206: 	je	.Ltmp650 # Offset: 518
.Ltmp649:
    0000020c: 	movq	%r12, 0x10(%rsp)
    00000211: 	cmpq	$0xf, %r12
    00000215: 	ja	.Ltmp651 # Offset: 533
    0000021b: 	cmpq	$0x1, %r12
    0000021f: 	jne	.Ltmp652 # Offset: 543
    00000225: 	movzbl	(%rbp), %eax
    00000229: 	movb	%al, 0x10(%rbx)
.Ltmp656:
    0000022c: 	movq	%r12, 0x8(%rbx)
    00000230: 	movb	$0x0, (%rdi,%r12)
    00000235: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000023c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000243: 	addq	$0x20, %rax
    00000247: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000024e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000255: 	je	.Ltmp653 # Offset: 597
.Ltmp657:
    0000025b: 	movq	-0x20(%rax), %rbp
    0000025f: 	callq	clock@PLT # Offset: 607
    00000264: 	movq	%rax, end_time(%rip)
    0000026b: 	movq	0x18(%rsp), %rdx
    00000270: 	subq	%fs:0x28, %rdx
    00000279: 	jne	.Ltmp654 # Offset: 633
    0000027f: 	subq	start_time(%rip), %rax
    00000286: 	pxor	%xmm0, %xmm0
    0000028a: 	movq	%rbp, %rdi
    0000028d: 	cvtsi2sd	%rax, %xmm0
    00000292: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000029a: 	addq	$0x28, %rsp
    0000029e: 	popq	%rbx
    0000029f: 	popq	%rbp
    000002a0: 	popq	%r12
    000002a2: 	popq	%r13
    000002a4: 	popq	%r14
    000002a6: 	popq	%r15
    000002a8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 680
.Ltmp643:
    000002ad: 	xorl	%eax, %eax
    000002af: 	xorl	%ecx, %ecx
    000002b1: 	xorl	%edx, %edx
    000002b3: 	jmp	.Ltmp655 # Offset: 691
.Ltmp651:
    000002b8: 	movq	%rbx, %rdi
    000002bb: 	leaq	0x10(%rsp), %rsi
    000002c0: 	xorl	%edx, %edx
    000002c2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 706
    000002c7: 	movq	%rax, (%rbx)
    000002ca: 	movq	%rax, %rdi
    000002cd: 	movq	0x10(%rsp), %rax
    000002d2: 	movq	%rax, 0x10(%rbx)
.Ltmp658:
    000002d6: 	movq	%r12, %rdx
    000002d9: 	movq	%rbp, %rsi
    000002dc: 	callq	memcpy@PLT # Offset: 732
    000002e1: 	movq	0x10(%rsp), %r12
    000002e6: 	movq	(%rbx), %rdi
    000002e9: 	jmp	.Ltmp656 # Offset: 745
.Ltmp648:
    000002ee: 	movq	0x8(%rsp), %rsi
    000002f3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002fa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 762
    000002ff: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000306: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000030d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000314: 	jne	.Ltmp657 # Offset: 788
.Ltmp653:
    0000031a: 	movq	-0x8(%rdx), %rax
    0000031e: 	addq	$0x200, %rax
    00000324: 	jmp	.Ltmp657 # Offset: 804
.Ltmp652:
    00000329: 	testq	%r12, %r12
    0000032c: 	je	.Ltmp656 # Offset: 812
    00000332: 	jmp	.Ltmp658 # Offset: 818
.Ltmp654:
    00000334: 	callq	__stack_chk_fail@PLT # Offset: 820
.Ltmp650:
    00000339: 	leaq	DATAat0x57008(%rip), %rdi
    00000340: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 832
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIt12and_constantItLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1Ij25custom_remainder_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 80
  State       : disassembled
  Address     : 0x86f0
  Size        : 0x246
  MaxSize     : 0x250
  Offset      : 0x86f0
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Ij25custom_remainder_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB079:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movl	%edx, %ebx
    00000016: 	subq	$0x28, %rsp
    0000001a: 	movq	%rcx, 0x8(%rsp)
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x18(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	callq	clock@PLT # Offset: 47
    00000034: 	movl	iterations(%rip), %edi
    0000003a: 	movq	%rax, start_time(%rip)
    00000041: 	testl	%edi, %edi
    00000043: 	jle	.Ltmp659 # Offset: 67
    00000049: 	leal	-0x1(%r15), %eax
    0000004d: 	movsd	init_value(%rip), %xmm0
    00000055: 	xorl	%r13d, %r13d
    00000058: 	leaq	DATAat0x571d0(%rip), %r12
    0000005f: 	leaq	0x4(%rbp,%rax,4), %r14
    00000064: 	nopl	(%rax) # Size: 4
.Ltmp663:
    00000068: 	movq	%rbp, %rcx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp660 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp661:
    00000078: 	movl	(%rcx), %eax
    0000007a: 	xorl	%edx, %edx
    0000007c: 	addq	$0x4, %rcx
    00000080: 	divl	%ebx
    00000082: 	addl	%edx, %esi
    00000084: 	cmpq	%rcx, %r14
    00000087: 	jne	.Ltmp661 # Offset: 135
.Ltmp660:
    00000089: 	cvttsd2si	%xmm0, %rax
    0000008e: 	xorl	%edx, %edx
    00000090: 	divl	%ebx
    00000092: 	imull	$0x1f40, %edx, %edx
    00000098: 	cmpl	%esi, %edx
    0000009a: 	je	.Ltmp662 # Offset: 154
    0000009c: 	movl	current_test(%rip), %edx
    000000a2: 	movl	$0x1, %edi
    000000a7: 	movq	%r12, %rsi
    000000aa: 	xorl	%eax, %eax
    000000ac: 	addl	$0x1, %r13d
    000000b0: 	callq	__printf_chk@PLT # Offset: 176
    000000b5: 	movl	iterations(%rip), %edi
    000000bb: 	cmpl	%edi, %r13d
    000000be: 	jge	.Ltmp659 # Offset: 190
    000000c0: 	movsd	init_value(%rip), %xmm0
    000000c8: 	jmp	.Ltmp663 # Offset: 200
    000000ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp662:
    000000d0: 	addl	$0x1, %r13d
    000000d4: 	cmpl	%edi, %r13d
    000000d7: 	jl	.Ltmp663 # Offset: 215
.Ltmp659:
    000000d9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000e0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000e7: 	subq	$0x20, %rax
    000000eb: 	cmpq	%rax, %rbx
    000000ee: 	je	.Ltmp664 # Offset: 238
    000000f4: 	movq	0x8(%rsp), %rax
    000000f9: 	leaq	0x10(%rbx), %rdi
    000000fd: 	movq	%rdi, (%rbx)
    00000100: 	movq	(%rax), %rbp
    00000103: 	movq	0x8(%rax), %r12
    00000107: 	movq	%rbp, %rax
    0000010a: 	addq	%r12, %rax
    0000010d: 	je	.Ltmp665 # Offset: 269
    0000010f: 	testq	%rbp, %rbp
    00000112: 	je	.Ltmp666 # Offset: 274
.Ltmp665:
    00000118: 	movq	%r12, 0x10(%rsp)
    0000011d: 	cmpq	$0xf, %r12
    00000121: 	ja	.Ltmp667 # Offset: 289
    00000127: 	cmpq	$0x1, %r12
    0000012b: 	jne	.Ltmp668 # Offset: 299
    00000131: 	movzbl	(%rbp), %eax
    00000135: 	movb	%al, 0x10(%rbx)
.Ltmp671:
    00000138: 	movq	%r12, 0x8(%rbx)
    0000013c: 	movb	$0x0, (%rdi,%r12)
    00000141: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000148: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000014f: 	addq	$0x20, %rax
    00000153: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000015a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000161: 	je	.Ltmp669 # Offset: 353
.Ltmp672:
    00000167: 	movq	-0x20(%rax), %rbp
    0000016b: 	callq	clock@PLT # Offset: 363
    00000170: 	movq	%rax, end_time(%rip)
    00000177: 	movq	0x18(%rsp), %rdx
    0000017c: 	subq	%fs:0x28, %rdx
    00000185: 	jne	.Ltmp670 # Offset: 389
    0000018b: 	subq	start_time(%rip), %rax
    00000192: 	pxor	%xmm0, %xmm0
    00000196: 	movq	%rbp, %rdi
    00000199: 	cvtsi2sd	%rax, %xmm0
    0000019e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001a6: 	addq	$0x28, %rsp
    000001aa: 	popq	%rbx
    000001ab: 	popq	%rbp
    000001ac: 	popq	%r12
    000001ae: 	popq	%r13
    000001b0: 	popq	%r14
    000001b2: 	popq	%r15
    000001b4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 436
.Ltmp667:
    000001b9: 	movq	%rbx, %rdi
    000001bc: 	leaq	0x10(%rsp), %rsi
    000001c1: 	xorl	%edx, %edx
    000001c3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 451
    000001c8: 	movq	%rax, (%rbx)
    000001cb: 	movq	%rax, %rdi
    000001ce: 	movq	0x10(%rsp), %rax
    000001d3: 	movq	%rax, 0x10(%rbx)
.Ltmp673:
    000001d7: 	movq	%r12, %rdx
    000001da: 	movq	%rbp, %rsi
    000001dd: 	callq	memcpy@PLT # Offset: 477
    000001e2: 	movq	0x10(%rsp), %r12
    000001e7: 	movq	(%rbx), %rdi
    000001ea: 	jmp	.Ltmp671 # Offset: 490
.Ltmp664:
    000001ef: 	movq	0x8(%rsp), %rsi
    000001f4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001fb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 507
    00000200: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000207: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000020e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000215: 	jne	.Ltmp672 # Offset: 533
.Ltmp669:
    0000021b: 	movq	-0x8(%rdx), %rax
    0000021f: 	addq	$0x200, %rax
    00000225: 	jmp	.Ltmp672 # Offset: 549
.Ltmp668:
    0000022a: 	testq	%r12, %r12
    0000022d: 	je	.Ltmp671 # Offset: 557
    00000233: 	jmp	.Ltmp673 # Offset: 563
.Ltmp670:
    00000235: 	callq	__stack_chk_fail@PLT # Offset: 565
.Ltmp666:
    0000023a: 	leaq	DATAat0x57008(%rip), %rdi
    00000241: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 577
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Ij25custom_remainder_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIt14and_remainder2ItLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 81
  State       : disassembled
  Address     : 0x8940
  Size        : 0x345
  MaxSize     : 0x350
  Offset      : 0x8940
  Section     : .text
  Orc Section : .local.text._Z13test_constantIt14and_remainder2ItLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB080:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp674 # Offset: 67
    00000049: 	leal	-0x1(%r14), %eax
    0000004d: 	movl	%r14d, %ebx
    00000050: 	movq	DATAat0x57be0(%rip), %xmm3
    00000058: 	movdqa	DATAat0x57be0(%rip), %xmm2
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r14d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	leaq	DATAat0x571d0(%rip), %rbp
    00000077: 	cvttsd2si	init_value(%rip), %r10d
    00000080: 	subl	$0x1, %eax
    00000083: 	shlq	$0x4, %rax
    00000087: 	leaq	0x10(%r15,%rax), %r13
    0000008c: 	nopl	(%rax) # Size: 4
.Ltmp680:
    00000090: 	xorl	%edx, %edx
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp675 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp676 # Offset: 160
    000000a6: 	movq	%r15, %rax
    000000a9: 	pxor	%xmm1, %xmm1
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp677:
    000000b0: 	movdqu	(%rax), %xmm0
    000000b4: 	addq	$0x10, %rax
    000000b8: 	pand	%xmm2, %xmm0
    000000bc: 	paddw	%xmm0, %xmm1
    000000c0: 	cmpq	%r13, %rax
    000000c3: 	jne	.Ltmp677 # Offset: 195
    000000c5: 	movdqa	%xmm1, %xmm0
    000000c9: 	psrldq	$0x8, %xmm0
    000000ce: 	paddw	%xmm0, %xmm1
    000000d2: 	movdqa	%xmm1, %xmm0
    000000d6: 	psrldq	$0x4, %xmm0
    000000db: 	paddw	%xmm0, %xmm1
    000000df: 	movdqa	%xmm1, %xmm0
    000000e3: 	psrldq	$0x2, %xmm0
    000000e8: 	paddw	%xmm0, %xmm1
    000000ec: 	pextrw	$0x0, %xmm1, %edx
    000000f1: 	cmpl	%r14d, %ebx
    000000f4: 	je	.Ltmp675 # Offset: 244
    000000f6: 	movl	%ebx, %eax
    000000f8: 	movl	%ebx, %ecx
.Ltmp688:
    000000fa: 	movl	%r14d, %esi
    000000fd: 	subl	%eax, %esi
    000000ff: 	leal	-0x1(%rsi), %edi
    00000102: 	cmpl	$0x2, %edi
    00000105: 	jbe	.Ltmp678 # Offset: 261
    00000107: 	movq	(%r15,%rax,2), %xmm0
    0000010d: 	pand	%xmm3, %xmm0
    00000111: 	pextrw	$0x0, %xmm0, %eax
    00000116: 	pextrw	$0x1, %xmm0, %edi
    0000011b: 	addl	%edi, %eax
    0000011d: 	addl	%edx, %eax
    0000011f: 	pextrw	$0x2, %xmm0, %edx
    00000124: 	addl	%edx, %eax
    00000126: 	pextrw	$0x3, %xmm0, %edx
    0000012b: 	addl	%eax, %edx
    0000012d: 	movl	%esi, %eax
    0000012f: 	andl	$-0x4, %eax
    00000132: 	addl	%eax, %ecx
    00000134: 	cmpl	%eax, %esi
    00000136: 	je	.Ltmp675 # Offset: 310
.Ltmp678:
    00000138: 	movslq	%ecx, %rax
    0000013b: 	leaq	(%rax,%rax), %rsi
    0000013f: 	movzbl	(%r15,%rax,2), %eax
    00000144: 	addl	%eax, %edx
    00000146: 	leal	0x1(%rcx), %eax
    00000149: 	cmpl	%eax, %r14d
    0000014c: 	jle	.Ltmp675 # Offset: 332
    0000014e: 	movzbl	0x2(%r15,%rsi), %eax
    00000154: 	addl	$0x2, %ecx
    00000157: 	addl	%eax, %edx
    00000159: 	cmpl	%ecx, %r14d
    0000015c: 	jle	.Ltmp675 # Offset: 348
    0000015e: 	movzbl	0x4(%r15,%rsi), %eax
    00000164: 	addl	%eax, %edx
.Ltmp675:
    00000166: 	movzbl	%r10b, %eax
    0000016a: 	imulw	$0x1f40, %ax, %ax
    0000016f: 	cmpw	%dx, %ax
    00000172: 	je	.Ltmp679 # Offset: 370
    00000174: 	movl	current_test(%rip), %edx
    0000017a: 	movq	%rbp, %rsi
    0000017d: 	movl	$0x1, %edi
    00000182: 	xorl	%eax, %eax
    00000184: 	addl	$0x1, %r12d
    00000188: 	callq	__printf_chk@PLT # Offset: 392
    0000018d: 	movl	iterations(%rip), %r9d
    00000194: 	cmpl	%r12d, %r9d
    00000197: 	jle	.Ltmp674 # Offset: 407
    00000199: 	cvttsd2si	init_value(%rip), %r10d
    000001a2: 	movdqa	DATAat0x57be0(%rip), %xmm2
    000001aa: 	movq	DATAat0x57be0(%rip), %xmm3
    000001b2: 	jmp	.Ltmp680 # Offset: 434
    000001b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp679:
    000001c0: 	addl	$0x1, %r12d
    000001c4: 	cmpl	%r9d, %r12d
    000001c7: 	jl	.Ltmp680 # Offset: 455
.Ltmp674:
    000001cd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001d4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001db: 	subq	$0x20, %rax
    000001df: 	cmpq	%rax, %rbx
    000001e2: 	je	.Ltmp681 # Offset: 482
    000001e8: 	movq	0x8(%rsp), %rax
    000001ed: 	leaq	0x10(%rbx), %rdi
    000001f1: 	movq	%rdi, (%rbx)
    000001f4: 	movq	(%rax), %rbp
    000001f7: 	movq	0x8(%rax), %r12
    000001fb: 	movq	%rbp, %rax
    000001fe: 	addq	%r12, %rax
    00000201: 	je	.Ltmp682 # Offset: 513
    00000203: 	testq	%rbp, %rbp
    00000206: 	je	.Ltmp683 # Offset: 518
.Ltmp682:
    0000020c: 	movq	%r12, 0x10(%rsp)
    00000211: 	cmpq	$0xf, %r12
    00000215: 	ja	.Ltmp684 # Offset: 533
    0000021b: 	cmpq	$0x1, %r12
    0000021f: 	jne	.Ltmp685 # Offset: 543
    00000225: 	movzbl	(%rbp), %eax
    00000229: 	movb	%al, 0x10(%rbx)
.Ltmp689:
    0000022c: 	movq	%r12, 0x8(%rbx)
    00000230: 	movb	$0x0, (%rdi,%r12)
    00000235: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000023c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000243: 	addq	$0x20, %rax
    00000247: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000024e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000255: 	je	.Ltmp686 # Offset: 597
.Ltmp690:
    0000025b: 	movq	-0x20(%rax), %rbp
    0000025f: 	callq	clock@PLT # Offset: 607
    00000264: 	movq	%rax, end_time(%rip)
    0000026b: 	movq	0x18(%rsp), %rdx
    00000270: 	subq	%fs:0x28, %rdx
    00000279: 	jne	.Ltmp687 # Offset: 633
    0000027f: 	subq	start_time(%rip), %rax
    00000286: 	pxor	%xmm0, %xmm0
    0000028a: 	movq	%rbp, %rdi
    0000028d: 	cvtsi2sd	%rax, %xmm0
    00000292: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000029a: 	addq	$0x28, %rsp
    0000029e: 	popq	%rbx
    0000029f: 	popq	%rbp
    000002a0: 	popq	%r12
    000002a2: 	popq	%r13
    000002a4: 	popq	%r14
    000002a6: 	popq	%r15
    000002a8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 680
.Ltmp676:
    000002ad: 	xorl	%eax, %eax
    000002af: 	xorl	%ecx, %ecx
    000002b1: 	xorl	%edx, %edx
    000002b3: 	jmp	.Ltmp688 # Offset: 691
.Ltmp684:
    000002b8: 	movq	%rbx, %rdi
    000002bb: 	leaq	0x10(%rsp), %rsi
    000002c0: 	xorl	%edx, %edx
    000002c2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 706
    000002c7: 	movq	%rax, (%rbx)
    000002ca: 	movq	%rax, %rdi
    000002cd: 	movq	0x10(%rsp), %rax
    000002d2: 	movq	%rax, 0x10(%rbx)
.Ltmp691:
    000002d6: 	movq	%r12, %rdx
    000002d9: 	movq	%rbp, %rsi
    000002dc: 	callq	memcpy@PLT # Offset: 732
    000002e1: 	movq	0x10(%rsp), %r12
    000002e6: 	movq	(%rbx), %rdi
    000002e9: 	jmp	.Ltmp689 # Offset: 745
.Ltmp681:
    000002ee: 	movq	0x8(%rsp), %rsi
    000002f3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002fa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 762
    000002ff: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000306: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000030d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000314: 	jne	.Ltmp690 # Offset: 788
.Ltmp686:
    0000031a: 	movq	-0x8(%rdx), %rax
    0000031e: 	addq	$0x200, %rax
    00000324: 	jmp	.Ltmp690 # Offset: 804
.Ltmp685:
    00000329: 	testq	%r12, %r12
    0000032c: 	je	.Ltmp689 # Offset: 812
    00000332: 	jmp	.Ltmp691 # Offset: 818
.Ltmp687:
    00000334: 	callq	__stack_chk_fail@PLT # Offset: 820
.Ltmp683:
    00000339: 	leaq	DATAat0x57008(%rip), %rdi
    00000340: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 832
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIt14and_remainder2ItLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1Is24custom_multiply_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 82
  State       : disassembled
  Address     : 0x8c90
  Size        : 0x365
  MaxSize     : 0x370
  Offset      : 0x8c90
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Is24custom_multiply_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB081:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	movl	%edx, %r13d
    00000013: 	pushq	%r12
    00000015: 	pushq	%rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x38, %rsp
    0000001b: 	movq	%rcx, 0x18(%rsp)
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x28(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movl	iterations(%rip), %esi
    0000003b: 	movq	%rax, start_time(%rip)
    00000042: 	testl	%esi, %esi
    00000044: 	jle	.Ltmp692 # Offset: 68
    0000004a: 	leal	-0x1(%r14), %eax
    0000004e: 	movd	%r13d, %xmm0
    00000053: 	movl	%r14d, %ebp
    00000056: 	xorl	%r12d, %r12d
    00000059: 	movl	%eax, 0x14(%rsp)
    0000005d: 	movl	%r14d, %eax
    00000060: 	punpcklwd	%xmm0, %xmm0
    00000064: 	andl	$-0x8, %ebp
    00000067: 	shrl	$0x3, %eax
    0000006a: 	pshufd	$0x0, %xmm0, %xmm5
    0000006f: 	movsd	init_value(%rip), %xmm3
    00000077: 	subl	$0x1, %eax
    0000007a: 	movaps	%xmm5, (%rsp)
    0000007e: 	shlq	$0x4, %rax
    00000082: 	leaq	0x10(%r15,%rax), %rbx
    00000087: 	nopw	(%rax,%rax) # Size: 9
.Ltmp698:
    00000090: 	xorl	%edx, %edx
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp693 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x14(%rsp)
    000000a0: 	jbe	.Ltmp694 # Offset: 160
    000000a6: 	movdqa	(%rsp), %xmm2
    000000ab: 	movq	%r15, %rax
    000000ae: 	pxor	%xmm1, %xmm1
    000000b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp695:
    000000b8: 	movdqu	(%rax), %xmm0
    000000bc: 	addq	$0x10, %rax
    000000c0: 	pmullw	%xmm2, %xmm0
    000000c4: 	paddw	%xmm0, %xmm1
    000000c8: 	cmpq	%rbx, %rax
    000000cb: 	jne	.Ltmp695 # Offset: 203
    000000cd: 	movdqa	%xmm1, %xmm0
    000000d1: 	psrldq	$0x8, %xmm0
    000000d6: 	paddw	%xmm0, %xmm1
    000000da: 	movdqa	%xmm1, %xmm0
    000000de: 	psrldq	$0x4, %xmm0
    000000e3: 	paddw	%xmm0, %xmm1
    000000e7: 	movdqa	%xmm1, %xmm0
    000000eb: 	psrldq	$0x2, %xmm0
    000000f0: 	paddw	%xmm0, %xmm1
    000000f4: 	pextrw	$0x0, %xmm1, %edx
    000000f9: 	cmpl	%r14d, %ebp
    000000fc: 	je	.Ltmp693 # Offset: 252
    00000102: 	movl	%ebp, %eax
    00000104: 	movl	%ebp, %ecx
.Ltmp706:
    00000106: 	movl	%r14d, %edi
    00000109: 	subl	%eax, %edi
    0000010b: 	leal	-0x1(%rdi), %r8d
    0000010f: 	cmpl	$0x2, %r8d
    00000113: 	jbe	.Ltmp696 # Offset: 275
    00000115: 	movq	(%r15,%rax,2), %xmm0
    0000011b: 	movd	%r13d, %xmm4
    00000120: 	pshuflw	$0x0, %xmm4, %xmm1
    00000125: 	pmullw	%xmm1, %xmm0
    00000129: 	pextrw	$0x1, %xmm0, %r8d
    0000012f: 	pextrw	$0x0, %xmm0, %eax
    00000134: 	addl	%r8d, %eax
    00000137: 	pextrw	$0x2, %xmm0, %r8d
    0000013d: 	addl	%r8d, %eax
    00000140: 	pextrw	$0x3, %xmm0, %r8d
    00000146: 	addl	%r8d, %eax
    00000149: 	addl	%eax, %edx
    0000014b: 	movl	%edi, %eax
    0000014d: 	andl	$-0x4, %eax
    00000150: 	addl	%eax, %ecx
    00000152: 	cmpl	%eax, %edi
    00000154: 	je	.Ltmp693 # Offset: 340
.Ltmp696:
    00000156: 	movslq	%ecx, %rax
    00000159: 	movzwl	(%r15,%rax,2), %r9d
    0000015e: 	leaq	(%rax,%rax), %rdi
    00000162: 	imull	%r13d, %r9d
    00000166: 	movl	%r9d, %eax
    00000169: 	addl	%eax, %edx
    0000016b: 	leal	0x1(%rcx), %eax
    0000016e: 	cmpl	%eax, %r14d
    00000171: 	jle	.Ltmp693 # Offset: 369
    00000173: 	movzwl	0x2(%r15,%rdi), %eax
    00000179: 	addl	$0x2, %ecx
    0000017c: 	imull	%r13d, %eax
    00000180: 	addl	%eax, %edx
    00000182: 	cmpl	%ecx, %r14d
    00000185: 	jle	.Ltmp693 # Offset: 389
    00000187: 	movzwl	0x4(%r15,%rdi), %eax
    0000018d: 	imull	%r13d, %eax
    00000191: 	addl	%eax, %edx
.Ltmp693:
    00000193: 	cvttsd2si	%xmm3, %eax
    00000197: 	imull	%r13d, %eax
    0000019b: 	imulw	$0x1f40, %ax, %ax
    000001a0: 	cmpw	%dx, %ax
    000001a3: 	je	.Ltmp697 # Offset: 419
    000001a5: 	movl	current_test(%rip), %edx
    000001ab: 	leaq	DATAat0x571d0(%rip), %rsi
    000001b2: 	movl	$0x1, %edi
    000001b7: 	xorl	%eax, %eax
    000001b9: 	addl	$0x1, %r12d
    000001bd: 	callq	__printf_chk@PLT # Offset: 445
    000001c2: 	movl	iterations(%rip), %esi
    000001c8: 	cmpl	%esi, %r12d
    000001cb: 	jge	.Ltmp692 # Offset: 459
    000001cd: 	movsd	init_value(%rip), %xmm3
    000001d5: 	jmp	.Ltmp698 # Offset: 469
    000001da: 	nopw	(%rax,%rax) # Size: 6
.Ltmp697:
    000001e0: 	addl	$0x1, %r12d
    000001e4: 	cmpl	%esi, %r12d
    000001e7: 	jl	.Ltmp698 # Offset: 487
.Ltmp692:
    000001ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001fb: 	subq	$0x20, %rax
    000001ff: 	cmpq	%rax, %rbx
    00000202: 	je	.Ltmp699 # Offset: 514
    00000208: 	movq	0x18(%rsp), %rax
    0000020d: 	leaq	0x10(%rbx), %rdi
    00000211: 	movq	%rdi, (%rbx)
    00000214: 	movq	(%rax), %rbp
    00000217: 	movq	0x8(%rax), %r12
    0000021b: 	movq	%rbp, %rax
    0000021e: 	addq	%r12, %rax
    00000221: 	je	.Ltmp700 # Offset: 545
    00000223: 	testq	%rbp, %rbp
    00000226: 	je	.Ltmp701 # Offset: 550
.Ltmp700:
    0000022c: 	movq	%r12, 0x20(%rsp)
    00000231: 	cmpq	$0xf, %r12
    00000235: 	ja	.Ltmp702 # Offset: 565
    0000023b: 	cmpq	$0x1, %r12
    0000023f: 	jne	.Ltmp703 # Offset: 575
    00000245: 	movzbl	(%rbp), %eax
    00000249: 	movb	%al, 0x10(%rbx)
.Ltmp707:
    0000024c: 	movq	%r12, 0x8(%rbx)
    00000250: 	movb	$0x0, (%rdi,%r12)
    00000255: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000025c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000263: 	addq	$0x20, %rax
    00000267: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000026e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000275: 	je	.Ltmp704 # Offset: 629
.Ltmp708:
    0000027b: 	movq	-0x20(%rax), %rbp
    0000027f: 	callq	clock@PLT # Offset: 639
    00000284: 	movq	%rax, end_time(%rip)
    0000028b: 	movq	0x28(%rsp), %rdx
    00000290: 	subq	%fs:0x28, %rdx
    00000299: 	jne	.Ltmp705 # Offset: 665
    0000029f: 	subq	start_time(%rip), %rax
    000002a6: 	pxor	%xmm0, %xmm0
    000002aa: 	movq	%rbp, %rdi
    000002ad: 	cvtsi2sd	%rax, %xmm0
    000002b2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002ba: 	addq	$0x38, %rsp
    000002be: 	popq	%rbx
    000002bf: 	popq	%rbp
    000002c0: 	popq	%r12
    000002c2: 	popq	%r13
    000002c4: 	popq	%r14
    000002c6: 	popq	%r15
    000002c8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 712
.Ltmp694:
    000002cd: 	xorl	%eax, %eax
    000002cf: 	xorl	%ecx, %ecx
    000002d1: 	xorl	%edx, %edx
    000002d3: 	jmp	.Ltmp706 # Offset: 723
.Ltmp702:
    000002d8: 	movq	%rbx, %rdi
    000002db: 	leaq	0x20(%rsp), %rsi
    000002e0: 	xorl	%edx, %edx
    000002e2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 738
    000002e7: 	movq	%rax, (%rbx)
    000002ea: 	movq	%rax, %rdi
    000002ed: 	movq	0x20(%rsp), %rax
    000002f2: 	movq	%rax, 0x10(%rbx)
.Ltmp709:
    000002f6: 	movq	%r12, %rdx
    000002f9: 	movq	%rbp, %rsi
    000002fc: 	callq	memcpy@PLT # Offset: 764
    00000301: 	movq	0x20(%rsp), %r12
    00000306: 	movq	(%rbx), %rdi
    00000309: 	jmp	.Ltmp707 # Offset: 777
.Ltmp699:
    0000030e: 	movq	0x18(%rsp), %rsi
    00000313: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000031a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 794
    0000031f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000326: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000032d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000334: 	jne	.Ltmp708 # Offset: 820
.Ltmp704:
    0000033a: 	movq	-0x8(%rdx), %rax
    0000033e: 	addq	$0x200, %rax
    00000344: 	jmp	.Ltmp708 # Offset: 836
.Ltmp703:
    00000349: 	testq	%r12, %r12
    0000034c: 	je	.Ltmp707 # Offset: 844
    00000352: 	jmp	.Ltmp709 # Offset: 850
.Ltmp705:
    00000354: 	callq	__stack_chk_fail@PLT # Offset: 852
.Ltmp701:
    00000359: 	leaq	DATAat0x57008(%rip), %rdi
    00000360: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 864
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Is24custom_multiply_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1Ii24custom_multiply_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 83
  State       : disassembled
  Address     : 0x9000
  Size        : 0x323
  MaxSize     : 0x330
  Offset      : 0x9000
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Ii24custom_multiply_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB082:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%edx, %r15d
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	movq	%rdi, %r12
    00000015: 	pushq	%rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x48, %rsp
    0000001b: 	movq	%rcx, 0x28(%rsp)
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x38(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movl	iterations(%rip), %esi
    0000003b: 	movq	%rax, start_time(%rip)
    00000042: 	testl	%esi, %esi
    00000044: 	jle	.Ltmp710 # Offset: 68
    0000004a: 	leal	-0x1(%r14), %eax
    0000004e: 	movd	%r15d, %xmm6
    00000053: 	movl	%r14d, %ebp
    00000056: 	xorl	%r13d, %r13d
    00000059: 	movl	%eax, 0x24(%rsp)
    0000005d: 	movl	%r14d, %eax
    00000060: 	pshufd	$0x0, %xmm6, %xmm3
    00000065: 	andl	$-0x4, %ebp
    00000068: 	shrl	$0x2, %eax
    0000006b: 	movdqa	%xmm3, %xmm4
    0000006f: 	movsd	init_value(%rip), %xmm5
    00000077: 	subl	$0x1, %eax
    0000007a: 	psrlq	$0x20, %xmm4
    0000007f: 	shlq	$0x4, %rax
    00000083: 	leaq	0x10(%r12,%rax), %rbx
    00000088: 	nopl	(%rax,%rax) # Size: 8
.Ltmp715:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp711 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x24(%rsp)
    000000a0: 	jbe	.Ltmp712 # Offset: 160
    000000a6: 	movq	%r12, %rax
    000000a9: 	pxor	%xmm2, %xmm2
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp713:
    000000b0: 	movdqu	(%rax), %xmm0
    000000b4: 	movdqu	(%rax), %xmm1
    000000b8: 	addq	$0x10, %rax
    000000bc: 	psrlq	$0x20, %xmm0
    000000c1: 	pmuludq	%xmm3, %xmm1
    000000c5: 	pmuludq	%xmm4, %xmm0
    000000c9: 	pshufd	$0x8, %xmm1, %xmm1
    000000ce: 	pshufd	$0x8, %xmm0, %xmm0
    000000d3: 	punpckldq	%xmm0, %xmm1
    000000d7: 	paddd	%xmm1, %xmm2
    000000db: 	cmpq	%rbx, %rax
    000000de: 	jne	.Ltmp713 # Offset: 222
    000000e0: 	movdqa	%xmm2, %xmm0
    000000e4: 	movl	%ebp, %edx
    000000e6: 	psrldq	$0x8, %xmm0
    000000eb: 	paddd	%xmm0, %xmm2
    000000ef: 	movdqa	%xmm2, %xmm0
    000000f3: 	psrldq	$0x4, %xmm0
    000000f8: 	paddd	%xmm0, %xmm2
    000000fc: 	movd	%xmm2, %eax
    00000100: 	cmpl	%r14d, %ebp
    00000103: 	je	.Ltmp711 # Offset: 259
.Ltmp723:
    00000105: 	movslq	%edx, %rdi
    00000108: 	movl	(%r12,%rdi,4), %ecx
    0000010c: 	leaq	(,%rdi,4), %r10
    00000114: 	leal	0x1(%rdx), %edi
    00000117: 	imull	%r15d, %ecx
    0000011b: 	addl	%ecx, %eax
    0000011d: 	cmpl	%edi, %r14d
    00000120: 	jle	.Ltmp711 # Offset: 288
    00000122: 	movl	0x4(%r12,%r10), %edi
    00000127: 	addl	$0x2, %edx
    0000012a: 	imull	%r15d, %edi
    0000012e: 	addl	%edi, %eax
    00000130: 	cmpl	%edx, %r14d
    00000133: 	jle	.Ltmp711 # Offset: 307
    00000135: 	movl	0x8(%r12,%r10), %edx
    0000013a: 	imull	%r15d, %edx
    0000013e: 	addl	%edx, %eax
.Ltmp711:
    00000140: 	cvttsd2si	%xmm5, %edx
    00000144: 	imull	%r15d, %edx
    00000148: 	imull	$0x1f40, %edx, %edx
    0000014e: 	cmpl	%eax, %edx
    00000150: 	je	.Ltmp714 # Offset: 336
    00000152: 	movl	current_test(%rip), %edx
    00000158: 	xorl	%eax, %eax
    0000015a: 	movaps	%xmm3, (%rsp)
    0000015e: 	addl	$0x1, %r13d
    00000162: 	leaq	DATAat0x571d0(%rip), %rsi
    00000169: 	movl	$0x1, %edi
    0000016e: 	movaps	%xmm4, 0x10(%rsp)
    00000173: 	callq	__printf_chk@PLT # Offset: 371
    00000178: 	movl	iterations(%rip), %esi
    0000017e: 	cmpl	%esi, %r13d
    00000181: 	jge	.Ltmp710 # Offset: 385
    00000183: 	movsd	init_value(%rip), %xmm5
    0000018b: 	movdqa	(%rsp), %xmm3
    00000190: 	movdqa	0x10(%rsp), %xmm4
    00000196: 	jmp	.Ltmp715 # Offset: 406
    0000019b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp714:
    000001a0: 	addl	$0x1, %r13d
    000001a4: 	cmpl	%esi, %r13d
    000001a7: 	jl	.Ltmp715 # Offset: 423
.Ltmp710:
    000001ad: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001b4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001bb: 	subq	$0x20, %rax
    000001bf: 	cmpq	%rax, %rbx
    000001c2: 	je	.Ltmp716 # Offset: 450
    000001c8: 	movq	0x28(%rsp), %rax
    000001cd: 	leaq	0x10(%rbx), %rdi
    000001d1: 	movq	%rdi, (%rbx)
    000001d4: 	movq	(%rax), %rbp
    000001d7: 	movq	0x8(%rax), %r12
    000001db: 	movq	%rbp, %rax
    000001de: 	addq	%r12, %rax
    000001e1: 	je	.Ltmp717 # Offset: 481
    000001e3: 	testq	%rbp, %rbp
    000001e6: 	je	.Ltmp718 # Offset: 486
.Ltmp717:
    000001ec: 	movq	%r12, 0x30(%rsp)
    000001f1: 	cmpq	$0xf, %r12
    000001f5: 	ja	.Ltmp719 # Offset: 501
    000001fb: 	cmpq	$0x1, %r12
    000001ff: 	jne	.Ltmp720 # Offset: 511
    00000205: 	movzbl	(%rbp), %eax
    00000209: 	movb	%al, 0x10(%rbx)
.Ltmp724:
    0000020c: 	movq	%r12, 0x8(%rbx)
    00000210: 	movb	$0x0, (%rdi,%r12)
    00000215: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000021c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000223: 	addq	$0x20, %rax
    00000227: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000022e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000235: 	je	.Ltmp721 # Offset: 565
.Ltmp725:
    0000023b: 	movq	-0x20(%rax), %rbp
    0000023f: 	callq	clock@PLT # Offset: 575
    00000244: 	movq	%rax, end_time(%rip)
    0000024b: 	movq	0x38(%rsp), %rdx
    00000250: 	subq	%fs:0x28, %rdx
    00000259: 	jne	.Ltmp722 # Offset: 601
    0000025f: 	subq	start_time(%rip), %rax
    00000266: 	pxor	%xmm0, %xmm0
    0000026a: 	movq	%rbp, %rdi
    0000026d: 	cvtsi2sd	%rax, %xmm0
    00000272: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000027a: 	addq	$0x48, %rsp
    0000027e: 	popq	%rbx
    0000027f: 	popq	%rbp
    00000280: 	popq	%r12
    00000282: 	popq	%r13
    00000284: 	popq	%r14
    00000286: 	popq	%r15
    00000288: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 648
.Ltmp712:
    0000028d: 	xorl	%edx, %edx
    0000028f: 	xorl	%eax, %eax
    00000291: 	jmp	.Ltmp723 # Offset: 657
.Ltmp719:
    00000296: 	movq	%rbx, %rdi
    00000299: 	leaq	0x30(%rsp), %rsi
    0000029e: 	xorl	%edx, %edx
    000002a0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 672
    000002a5: 	movq	%rax, (%rbx)
    000002a8: 	movq	%rax, %rdi
    000002ab: 	movq	0x30(%rsp), %rax
    000002b0: 	movq	%rax, 0x10(%rbx)
.Ltmp726:
    000002b4: 	movq	%r12, %rdx
    000002b7: 	movq	%rbp, %rsi
    000002ba: 	callq	memcpy@PLT # Offset: 698
    000002bf: 	movq	0x30(%rsp), %r12
    000002c4: 	movq	(%rbx), %rdi
    000002c7: 	jmp	.Ltmp724 # Offset: 711
.Ltmp716:
    000002cc: 	movq	0x28(%rsp), %rsi
    000002d1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002d8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 728
    000002dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002e4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002eb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002f2: 	jne	.Ltmp725 # Offset: 754
.Ltmp721:
    000002f8: 	movq	-0x8(%rdx), %rax
    000002fc: 	addq	$0x200, %rax
    00000302: 	jmp	.Ltmp725 # Offset: 770
.Ltmp720:
    00000307: 	testq	%r12, %r12
    0000030a: 	je	.Ltmp724 # Offset: 778
    00000310: 	jmp	.Ltmp726 # Offset: 784
.Ltmp722:
    00000312: 	callq	__stack_chk_fail@PLT # Offset: 786
.Ltmp718:
    00000317: 	leaq	DATAat0x57008(%rip), %rdi
    0000031e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 798
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Ii24custom_multiply_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIt12and_constantItLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 84
  State       : disassembled
  Address     : 0x9330
  Size        : 0x34d
  MaxSize     : 0x350
  Offset      : 0x9330
  Section     : .text
  Orc Section : .local.text._Z13test_constantIt12and_constantItLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB083:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp727 # Offset: 67
    00000049: 	leal	-0x1(%r14), %eax
    0000004d: 	movl	%r14d, %ebx
    00000050: 	movq	DATAat0x57cb0(%rip), %xmm3
    00000058: 	movdqa	DATAat0x57cb0(%rip), %xmm2
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r14d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	leaq	DATAat0x571d0(%rip), %rbp
    00000077: 	cvttsd2si	init_value(%rip), %r10d
    00000080: 	subl	$0x1, %eax
    00000083: 	shlq	$0x4, %rax
    00000087: 	leaq	0x10(%r15,%rax), %r13
    0000008c: 	nopl	(%rax) # Size: 4
.Ltmp733:
    00000090: 	xorl	%edx, %edx
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp728 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp729 # Offset: 160
    000000a6: 	movq	%r15, %rax
    000000a9: 	pxor	%xmm1, %xmm1
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp730:
    000000b0: 	movdqu	(%rax), %xmm0
    000000b4: 	addq	$0x10, %rax
    000000b8: 	pand	%xmm2, %xmm0
    000000bc: 	paddw	%xmm0, %xmm1
    000000c0: 	cmpq	%r13, %rax
    000000c3: 	jne	.Ltmp730 # Offset: 195
    000000c5: 	movdqa	%xmm1, %xmm0
    000000c9: 	psrldq	$0x8, %xmm0
    000000ce: 	paddw	%xmm0, %xmm1
    000000d2: 	movdqa	%xmm1, %xmm0
    000000d6: 	psrldq	$0x4, %xmm0
    000000db: 	paddw	%xmm0, %xmm1
    000000df: 	movdqa	%xmm1, %xmm0
    000000e3: 	psrldq	$0x2, %xmm0
    000000e8: 	paddw	%xmm0, %xmm1
    000000ec: 	pextrw	$0x0, %xmm1, %edx
    000000f1: 	cmpl	%r14d, %ebx
    000000f4: 	je	.Ltmp728 # Offset: 244
    000000f6: 	movl	%ebx, %eax
    000000f8: 	movl	%ebx, %ecx
.Ltmp741:
    000000fa: 	movl	%r14d, %esi
    000000fd: 	subl	%eax, %esi
    000000ff: 	leal	-0x1(%rsi), %edi
    00000102: 	cmpl	$0x2, %edi
    00000105: 	jbe	.Ltmp731 # Offset: 261
    00000107: 	movq	(%r15,%rax,2), %xmm0
    0000010d: 	pand	%xmm3, %xmm0
    00000111: 	pextrw	$0x0, %xmm0, %eax
    00000116: 	pextrw	$0x1, %xmm0, %edi
    0000011b: 	addl	%edi, %eax
    0000011d: 	addl	%edx, %eax
    0000011f: 	pextrw	$0x2, %xmm0, %edx
    00000124: 	addl	%edx, %eax
    00000126: 	pextrw	$0x3, %xmm0, %edx
    0000012b: 	addl	%eax, %edx
    0000012d: 	movl	%esi, %eax
    0000012f: 	andl	$-0x4, %eax
    00000132: 	addl	%eax, %ecx
    00000134: 	cmpl	%eax, %esi
    00000136: 	je	.Ltmp728 # Offset: 310
.Ltmp731:
    00000138: 	movslq	%ecx, %rax
    0000013b: 	leaq	(%rax,%rax), %rsi
    0000013f: 	movzwl	(%r15,%rax,2), %eax
    00000144: 	andl	$0x7, %eax
    00000147: 	addl	%eax, %edx
    00000149: 	leal	0x1(%rcx), %eax
    0000014c: 	cmpl	%eax, %r14d
    0000014f: 	jle	.Ltmp728 # Offset: 335
    00000151: 	movzwl	0x2(%r15,%rsi), %eax
    00000157: 	addl	$0x2, %ecx
    0000015a: 	andl	$0x7, %eax
    0000015d: 	addl	%eax, %edx
    0000015f: 	cmpl	%ecx, %r14d
    00000162: 	jle	.Ltmp728 # Offset: 354
    00000164: 	movzwl	0x4(%r15,%rsi), %eax
    0000016a: 	andl	$0x7, %eax
    0000016d: 	addl	%eax, %edx
.Ltmp728:
    0000016f: 	movl	%r10d, %eax
    00000172: 	andl	$0x7, %eax
    00000175: 	imulw	$0x1f40, %ax, %ax
    0000017a: 	cmpw	%dx, %ax
    0000017d: 	je	.Ltmp732 # Offset: 381
    0000017f: 	movl	current_test(%rip), %edx
    00000185: 	movq	%rbp, %rsi
    00000188: 	movl	$0x1, %edi
    0000018d: 	xorl	%eax, %eax
    0000018f: 	addl	$0x1, %r12d
    00000193: 	callq	__printf_chk@PLT # Offset: 403
    00000198: 	movl	iterations(%rip), %r9d
    0000019f: 	cmpl	%r12d, %r9d
    000001a2: 	jle	.Ltmp727 # Offset: 418
    000001a4: 	cvttsd2si	init_value(%rip), %r10d
    000001ad: 	movdqa	DATAat0x57cb0(%rip), %xmm2
    000001b5: 	movq	DATAat0x57cb0(%rip), %xmm3
    000001bd: 	jmp	.Ltmp733 # Offset: 445
    000001c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp732:
    000001c8: 	addl	$0x1, %r12d
    000001cc: 	cmpl	%r9d, %r12d
    000001cf: 	jl	.Ltmp733 # Offset: 463
.Ltmp727:
    000001d5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001dc: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001e3: 	subq	$0x20, %rax
    000001e7: 	cmpq	%rax, %rbx
    000001ea: 	je	.Ltmp734 # Offset: 490
    000001f0: 	movq	0x8(%rsp), %rax
    000001f5: 	leaq	0x10(%rbx), %rdi
    000001f9: 	movq	%rdi, (%rbx)
    000001fc: 	movq	(%rax), %rbp
    000001ff: 	movq	0x8(%rax), %r12
    00000203: 	movq	%rbp, %rax
    00000206: 	addq	%r12, %rax
    00000209: 	je	.Ltmp735 # Offset: 521
    0000020b: 	testq	%rbp, %rbp
    0000020e: 	je	.Ltmp736 # Offset: 526
.Ltmp735:
    00000214: 	movq	%r12, 0x10(%rsp)
    00000219: 	cmpq	$0xf, %r12
    0000021d: 	ja	.Ltmp737 # Offset: 541
    00000223: 	cmpq	$0x1, %r12
    00000227: 	jne	.Ltmp738 # Offset: 551
    0000022d: 	movzbl	(%rbp), %eax
    00000231: 	movb	%al, 0x10(%rbx)
.Ltmp742:
    00000234: 	movq	%r12, 0x8(%rbx)
    00000238: 	movb	$0x0, (%rdi,%r12)
    0000023d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000244: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000024b: 	addq	$0x20, %rax
    0000024f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000256: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000025d: 	je	.Ltmp739 # Offset: 605
.Ltmp743:
    00000263: 	movq	-0x20(%rax), %rbp
    00000267: 	callq	clock@PLT # Offset: 615
    0000026c: 	movq	%rax, end_time(%rip)
    00000273: 	movq	0x18(%rsp), %rdx
    00000278: 	subq	%fs:0x28, %rdx
    00000281: 	jne	.Ltmp740 # Offset: 641
    00000287: 	subq	start_time(%rip), %rax
    0000028e: 	pxor	%xmm0, %xmm0
    00000292: 	movq	%rbp, %rdi
    00000295: 	cvtsi2sd	%rax, %xmm0
    0000029a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002a2: 	addq	$0x28, %rsp
    000002a6: 	popq	%rbx
    000002a7: 	popq	%rbp
    000002a8: 	popq	%r12
    000002aa: 	popq	%r13
    000002ac: 	popq	%r14
    000002ae: 	popq	%r15
    000002b0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 688
.Ltmp729:
    000002b5: 	xorl	%eax, %eax
    000002b7: 	xorl	%ecx, %ecx
    000002b9: 	xorl	%edx, %edx
    000002bb: 	jmp	.Ltmp741 # Offset: 699
.Ltmp737:
    000002c0: 	movq	%rbx, %rdi
    000002c3: 	leaq	0x10(%rsp), %rsi
    000002c8: 	xorl	%edx, %edx
    000002ca: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 714
    000002cf: 	movq	%rax, (%rbx)
    000002d2: 	movq	%rax, %rdi
    000002d5: 	movq	0x10(%rsp), %rax
    000002da: 	movq	%rax, 0x10(%rbx)
.Ltmp744:
    000002de: 	movq	%r12, %rdx
    000002e1: 	movq	%rbp, %rsi
    000002e4: 	callq	memcpy@PLT # Offset: 740
    000002e9: 	movq	0x10(%rsp), %r12
    000002ee: 	movq	(%rbx), %rdi
    000002f1: 	jmp	.Ltmp742 # Offset: 753
.Ltmp734:
    000002f6: 	movq	0x8(%rsp), %rsi
    000002fb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000302: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 770
    00000307: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000030e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000315: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000031c: 	jne	.Ltmp743 # Offset: 796
.Ltmp739:
    00000322: 	movq	-0x8(%rdx), %rax
    00000326: 	addq	$0x200, %rax
    0000032c: 	jmp	.Ltmp743 # Offset: 812
.Ltmp738:
    00000331: 	testq	%r12, %r12
    00000334: 	je	.Ltmp742 # Offset: 820
    0000033a: 	jmp	.Ltmp744 # Offset: 826
.Ltmp740:
    0000033c: 	callq	__stack_chk_fail@PLT # Offset: 828
.Ltmp736:
    00000341: 	leaq	DATAat0x57008(%rip), %rdi
    00000348: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 840
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIt12and_constantItLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIt12and_constantItLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 85
  State       : disassembled
  Address     : 0x9680
  Size        : 0x34d
  MaxSize     : 0x350
  Offset      : 0x9680
  Section     : .text
  Orc Section : .local.text._Z13test_constantIt12and_constantItLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB084:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp745 # Offset: 67
    00000049: 	leal	-0x1(%r14), %eax
    0000004d: 	movl	%r14d, %ebx
    00000050: 	movq	DATAat0x57cc0(%rip), %xmm3
    00000058: 	movdqa	DATAat0x57cc0(%rip), %xmm2
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r14d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	leaq	DATAat0x571d0(%rip), %rbp
    00000077: 	cvttsd2si	init_value(%rip), %r10d
    00000080: 	subl	$0x1, %eax
    00000083: 	shlq	$0x4, %rax
    00000087: 	leaq	0x10(%r15,%rax), %r13
    0000008c: 	nopl	(%rax) # Size: 4
.Ltmp751:
    00000090: 	xorl	%edx, %edx
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp746 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp747 # Offset: 160
    000000a6: 	movq	%r15, %rax
    000000a9: 	pxor	%xmm1, %xmm1
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp748:
    000000b0: 	movdqu	(%rax), %xmm0
    000000b4: 	addq	$0x10, %rax
    000000b8: 	pand	%xmm2, %xmm0
    000000bc: 	paddw	%xmm0, %xmm1
    000000c0: 	cmpq	%r13, %rax
    000000c3: 	jne	.Ltmp748 # Offset: 195
    000000c5: 	movdqa	%xmm1, %xmm0
    000000c9: 	psrldq	$0x8, %xmm0
    000000ce: 	paddw	%xmm0, %xmm1
    000000d2: 	movdqa	%xmm1, %xmm0
    000000d6: 	psrldq	$0x4, %xmm0
    000000db: 	paddw	%xmm0, %xmm1
    000000df: 	movdqa	%xmm1, %xmm0
    000000e3: 	psrldq	$0x2, %xmm0
    000000e8: 	paddw	%xmm0, %xmm1
    000000ec: 	pextrw	$0x0, %xmm1, %edx
    000000f1: 	cmpl	%r14d, %ebx
    000000f4: 	je	.Ltmp746 # Offset: 244
    000000f6: 	movl	%ebx, %eax
    000000f8: 	movl	%ebx, %ecx
.Ltmp759:
    000000fa: 	movl	%r14d, %esi
    000000fd: 	subl	%eax, %esi
    000000ff: 	leal	-0x1(%rsi), %edi
    00000102: 	cmpl	$0x2, %edi
    00000105: 	jbe	.Ltmp749 # Offset: 261
    00000107: 	movq	(%r15,%rax,2), %xmm0
    0000010d: 	pand	%xmm3, %xmm0
    00000111: 	pextrw	$0x0, %xmm0, %eax
    00000116: 	pextrw	$0x1, %xmm0, %edi
    0000011b: 	addl	%edi, %eax
    0000011d: 	addl	%edx, %eax
    0000011f: 	pextrw	$0x2, %xmm0, %edx
    00000124: 	addl	%edx, %eax
    00000126: 	pextrw	$0x3, %xmm0, %edx
    0000012b: 	addl	%eax, %edx
    0000012d: 	movl	%esi, %eax
    0000012f: 	andl	$-0x4, %eax
    00000132: 	addl	%eax, %ecx
    00000134: 	cmpl	%eax, %esi
    00000136: 	je	.Ltmp746 # Offset: 310
.Ltmp749:
    00000138: 	movslq	%ecx, %rax
    0000013b: 	leaq	(%rax,%rax), %rsi
    0000013f: 	movzwl	(%r15,%rax,2), %eax
    00000144: 	andl	$0x3f, %eax
    00000147: 	addl	%eax, %edx
    00000149: 	leal	0x1(%rcx), %eax
    0000014c: 	cmpl	%eax, %r14d
    0000014f: 	jle	.Ltmp746 # Offset: 335
    00000151: 	movzwl	0x2(%r15,%rsi), %eax
    00000157: 	addl	$0x2, %ecx
    0000015a: 	andl	$0x3f, %eax
    0000015d: 	addl	%eax, %edx
    0000015f: 	cmpl	%ecx, %r14d
    00000162: 	jle	.Ltmp746 # Offset: 354
    00000164: 	movzwl	0x4(%r15,%rsi), %eax
    0000016a: 	andl	$0x3f, %eax
    0000016d: 	addl	%eax, %edx
.Ltmp746:
    0000016f: 	movl	%r10d, %eax
    00000172: 	andl	$0x3f, %eax
    00000175: 	imulw	$0x1f40, %ax, %ax
    0000017a: 	cmpw	%dx, %ax
    0000017d: 	je	.Ltmp750 # Offset: 381
    0000017f: 	movl	current_test(%rip), %edx
    00000185: 	movq	%rbp, %rsi
    00000188: 	movl	$0x1, %edi
    0000018d: 	xorl	%eax, %eax
    0000018f: 	addl	$0x1, %r12d
    00000193: 	callq	__printf_chk@PLT # Offset: 403
    00000198: 	movl	iterations(%rip), %r9d
    0000019f: 	cmpl	%r12d, %r9d
    000001a2: 	jle	.Ltmp745 # Offset: 418
    000001a4: 	cvttsd2si	init_value(%rip), %r10d
    000001ad: 	movdqa	DATAat0x57cc0(%rip), %xmm2
    000001b5: 	movq	DATAat0x57cc0(%rip), %xmm3
    000001bd: 	jmp	.Ltmp751 # Offset: 445
    000001c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp750:
    000001c8: 	addl	$0x1, %r12d
    000001cc: 	cmpl	%r9d, %r12d
    000001cf: 	jl	.Ltmp751 # Offset: 463
.Ltmp745:
    000001d5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001dc: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001e3: 	subq	$0x20, %rax
    000001e7: 	cmpq	%rax, %rbx
    000001ea: 	je	.Ltmp752 # Offset: 490
    000001f0: 	movq	0x8(%rsp), %rax
    000001f5: 	leaq	0x10(%rbx), %rdi
    000001f9: 	movq	%rdi, (%rbx)
    000001fc: 	movq	(%rax), %rbp
    000001ff: 	movq	0x8(%rax), %r12
    00000203: 	movq	%rbp, %rax
    00000206: 	addq	%r12, %rax
    00000209: 	je	.Ltmp753 # Offset: 521
    0000020b: 	testq	%rbp, %rbp
    0000020e: 	je	.Ltmp754 # Offset: 526
.Ltmp753:
    00000214: 	movq	%r12, 0x10(%rsp)
    00000219: 	cmpq	$0xf, %r12
    0000021d: 	ja	.Ltmp755 # Offset: 541
    00000223: 	cmpq	$0x1, %r12
    00000227: 	jne	.Ltmp756 # Offset: 551
    0000022d: 	movzbl	(%rbp), %eax
    00000231: 	movb	%al, 0x10(%rbx)
.Ltmp760:
    00000234: 	movq	%r12, 0x8(%rbx)
    00000238: 	movb	$0x0, (%rdi,%r12)
    0000023d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000244: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000024b: 	addq	$0x20, %rax
    0000024f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000256: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000025d: 	je	.Ltmp757 # Offset: 605
.Ltmp761:
    00000263: 	movq	-0x20(%rax), %rbp
    00000267: 	callq	clock@PLT # Offset: 615
    0000026c: 	movq	%rax, end_time(%rip)
    00000273: 	movq	0x18(%rsp), %rdx
    00000278: 	subq	%fs:0x28, %rdx
    00000281: 	jne	.Ltmp758 # Offset: 641
    00000287: 	subq	start_time(%rip), %rax
    0000028e: 	pxor	%xmm0, %xmm0
    00000292: 	movq	%rbp, %rdi
    00000295: 	cvtsi2sd	%rax, %xmm0
    0000029a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002a2: 	addq	$0x28, %rsp
    000002a6: 	popq	%rbx
    000002a7: 	popq	%rbp
    000002a8: 	popq	%r12
    000002aa: 	popq	%r13
    000002ac: 	popq	%r14
    000002ae: 	popq	%r15
    000002b0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 688
.Ltmp747:
    000002b5: 	xorl	%eax, %eax
    000002b7: 	xorl	%ecx, %ecx
    000002b9: 	xorl	%edx, %edx
    000002bb: 	jmp	.Ltmp759 # Offset: 699
.Ltmp755:
    000002c0: 	movq	%rbx, %rdi
    000002c3: 	leaq	0x10(%rsp), %rsi
    000002c8: 	xorl	%edx, %edx
    000002ca: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 714
    000002cf: 	movq	%rax, (%rbx)
    000002d2: 	movq	%rax, %rdi
    000002d5: 	movq	0x10(%rsp), %rax
    000002da: 	movq	%rax, 0x10(%rbx)
.Ltmp762:
    000002de: 	movq	%r12, %rdx
    000002e1: 	movq	%rbp, %rsi
    000002e4: 	callq	memcpy@PLT # Offset: 740
    000002e9: 	movq	0x10(%rsp), %r12
    000002ee: 	movq	(%rbx), %rdi
    000002f1: 	jmp	.Ltmp760 # Offset: 753
.Ltmp752:
    000002f6: 	movq	0x8(%rsp), %rsi
    000002fb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000302: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 770
    00000307: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000030e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000315: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000031c: 	jne	.Ltmp761 # Offset: 796
.Ltmp757:
    00000322: 	movq	-0x8(%rdx), %rax
    00000326: 	addq	$0x200, %rax
    0000032c: 	jmp	.Ltmp761 # Offset: 812
.Ltmp756:
    00000331: 	testq	%r12, %r12
    00000334: 	je	.Ltmp760 # Offset: 820
    0000033a: 	jmp	.Ltmp762 # Offset: 826
.Ltmp758:
    0000033c: 	callq	__stack_chk_fail@PLT # Offset: 828
.Ltmp754:
    00000341: 	leaq	DATAat0x57008(%rip), %rdi
    00000348: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 840
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIt12and_constantItLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1Im24custom_multiply_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 86
  State       : disassembled
  Address     : 0x99d0
  Size        : 0x28c
  MaxSize     : 0x290
  Offset      : 0x99d0
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Im24custom_multiply_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB085:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdx, %r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movl	%esi, %ebp
    00000012: 	pushq	%rbx
    00000013: 	movq	%rdi, %rbx
    00000016: 	subq	$0x28, %rsp
    0000001a: 	movq	%rcx, 0x8(%rsp)
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x18(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	callq	clock@PLT # Offset: 47
    00000034: 	movl	iterations(%rip), %esi
    0000003a: 	movq	%rax, start_time(%rip)
    00000041: 	testl	%esi, %esi
    00000043: 	jle	.Ltmp763 # Offset: 67
    00000049: 	leal	-0x1(%rbp), %eax
    0000004c: 	movsd	DATAat0x57bd8(%rip), %xmm1
    00000054: 	xorl	%r13d, %r13d
    00000057: 	movsd	init_value(%rip), %xmm0
    0000005f: 	leaq	0x8(%rbx,%rax,8), %r15
    00000064: 	leaq	DATAat0x571d0(%rip), %r12
    0000006b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp768:
    00000070: 	movq	%rbx, %rax
    00000073: 	xorl	%edx, %edx
    00000075: 	testl	%ebp, %ebp
    00000077: 	jle	.Ltmp764 # Offset: 119
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp765:
    00000080: 	movq	(%rax), %rcx
    00000083: 	addq	$0x8, %rax
    00000087: 	imulq	%r14, %rcx
    0000008b: 	addq	%rcx, %rdx
    0000008e: 	cmpq	%r15, %rax
    00000091: 	jne	.Ltmp765 # Offset: 145
.Ltmp764:
    00000093: 	comisd	%xmm1, %xmm0
    00000097: 	jae	.Ltmp766 # Offset: 151
    0000009d: 	cvttsd2si	%xmm0, %rax
.Ltmp776:
    000000a2: 	imulq	%r14, %rax
    000000a6: 	imulq	$0x1f40, %rax, %rax
    000000ad: 	cmpq	%rdx, %rax
    000000b0: 	je	.Ltmp767 # Offset: 176
    000000b2: 	movl	current_test(%rip), %edx
    000000b8: 	movq	%r12, %rsi
    000000bb: 	movl	$0x1, %edi
    000000c0: 	xorl	%eax, %eax
    000000c2: 	addl	$0x1, %r13d
    000000c6: 	callq	__printf_chk@PLT # Offset: 198
    000000cb: 	movl	iterations(%rip), %esi
    000000d1: 	cmpl	%esi, %r13d
    000000d4: 	jge	.Ltmp763 # Offset: 212
    000000d6: 	movq	DATAat0x57bd8(%rip), %rax
    000000dd: 	movsd	init_value(%rip), %xmm0
    000000e5: 	movq	%rax, %xmm1
    000000ea: 	jmp	.Ltmp768 # Offset: 234
    000000ec: 	nopl	(%rax) # Size: 4
.Ltmp767:
    000000f0: 	addl	$0x1, %r13d
    000000f4: 	cmpl	%esi, %r13d
    000000f7: 	jl	.Ltmp768 # Offset: 247
.Ltmp763:
    000000fd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000104: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000010b: 	subq	$0x20, %rax
    0000010f: 	cmpq	%rax, %rbx
    00000112: 	je	.Ltmp769 # Offset: 274
    00000118: 	movq	0x8(%rsp), %rax
    0000011d: 	leaq	0x10(%rbx), %rdi
    00000121: 	movq	%rdi, (%rbx)
    00000124: 	movq	(%rax), %rbp
    00000127: 	movq	0x8(%rax), %r12
    0000012b: 	movq	%rbp, %rax
    0000012e: 	addq	%r12, %rax
    00000131: 	je	.Ltmp770 # Offset: 305
    00000133: 	testq	%rbp, %rbp
    00000136: 	je	.Ltmp771 # Offset: 310
.Ltmp770:
    0000013c: 	movq	%r12, 0x10(%rsp)
    00000141: 	cmpq	$0xf, %r12
    00000145: 	ja	.Ltmp772 # Offset: 325
    0000014b: 	cmpq	$0x1, %r12
    0000014f: 	jne	.Ltmp773 # Offset: 335
    00000155: 	movzbl	(%rbp), %eax
    00000159: 	movb	%al, 0x10(%rbx)
.Ltmp777:
    0000015c: 	movq	%r12, 0x8(%rbx)
    00000160: 	movb	$0x0, (%rdi,%r12)
    00000165: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000016c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000173: 	addq	$0x20, %rax
    00000177: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000017e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000185: 	je	.Ltmp774 # Offset: 389
.Ltmp778:
    0000018b: 	movq	-0x20(%rax), %rbp
    0000018f: 	callq	clock@PLT # Offset: 399
    00000194: 	movq	%rax, end_time(%rip)
    0000019b: 	movq	0x18(%rsp), %rdx
    000001a0: 	subq	%fs:0x28, %rdx
    000001a9: 	jne	.Ltmp775 # Offset: 425
    000001af: 	subq	start_time(%rip), %rax
    000001b6: 	pxor	%xmm0, %xmm0
    000001ba: 	movq	%rbp, %rdi
    000001bd: 	cvtsi2sd	%rax, %xmm0
    000001c2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001ca: 	addq	$0x28, %rsp
    000001ce: 	popq	%rbx
    000001cf: 	popq	%rbp
    000001d0: 	popq	%r12
    000001d2: 	popq	%r13
    000001d4: 	popq	%r14
    000001d6: 	popq	%r15
    000001d8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 472
    000001dd: 	nopl	(%rax) # Size: 3
.Ltmp766:
    000001e0: 	movabsq	$-0x8000000000000000, %rdi
    000001ea: 	movapd	%xmm0, %xmm2
    000001ee: 	subsd	%xmm1, %xmm2
    000001f2: 	cvttsd2si	%xmm2, %rax
    000001f7: 	xorq	%rdi, %rax
    000001fa: 	jmp	.Ltmp776 # Offset: 506
.Ltmp772:
    000001ff: 	movq	%rbx, %rdi
    00000202: 	leaq	0x10(%rsp), %rsi
    00000207: 	xorl	%edx, %edx
    00000209: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 521
    0000020e: 	movq	%rax, (%rbx)
    00000211: 	movq	%rax, %rdi
    00000214: 	movq	0x10(%rsp), %rax
    00000219: 	movq	%rax, 0x10(%rbx)
.Ltmp779:
    0000021d: 	movq	%r12, %rdx
    00000220: 	movq	%rbp, %rsi
    00000223: 	callq	memcpy@PLT # Offset: 547
    00000228: 	movq	0x10(%rsp), %r12
    0000022d: 	movq	(%rbx), %rdi
    00000230: 	jmp	.Ltmp777 # Offset: 560
.Ltmp769:
    00000235: 	movq	0x8(%rsp), %rsi
    0000023a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000241: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 577
    00000246: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000024d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000254: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000025b: 	jne	.Ltmp778 # Offset: 603
.Ltmp774:
    00000261: 	movq	-0x8(%rdx), %rax
    00000265: 	addq	$0x200, %rax
    0000026b: 	jmp	.Ltmp778 # Offset: 619
.Ltmp773:
    00000270: 	testq	%r12, %r12
    00000273: 	je	.Ltmp777 # Offset: 627
    00000279: 	jmp	.Ltmp779 # Offset: 633
.Ltmp775:
    0000027b: 	callq	__stack_chk_fail@PLT # Offset: 635
.Ltmp771:
    00000280: 	leaq	DATAat0x57008(%rip), %rdi
    00000287: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 647
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Im24custom_multiply_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1Il24custom_multiply_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 87
  State       : disassembled
  Address     : 0x9c60
  Size        : 0x246
  MaxSize     : 0x250
  Offset      : 0x9c60
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Il24custom_multiply_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB086:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdx, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x28, %rsp
    0000001b: 	movq	%rcx, 0x8(%rsp)
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x18(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movl	iterations(%rip), %esi
    0000003b: 	movq	%rax, start_time(%rip)
    00000042: 	testl	%esi, %esi
    00000044: 	jle	.Ltmp780 # Offset: 68
    0000004a: 	leal	-0x1(%r15), %eax
    0000004e: 	movsd	init_value(%rip), %xmm0
    00000056: 	xorl	%r12d, %r12d
    00000059: 	leaq	DATAat0x571d0(%rip), %rbp
    00000060: 	leaq	0x8(%rbx,%rax,8), %r14
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp784:
    00000068: 	movq	%rbx, %rax
    0000006b: 	xorl	%edx, %edx
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp781 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp782:
    00000078: 	movq	(%rax), %rcx
    0000007b: 	addq	$0x8, %rax
    0000007f: 	imulq	%r13, %rcx
    00000083: 	addq	%rcx, %rdx
    00000086: 	cmpq	%rax, %r14
    00000089: 	jne	.Ltmp782 # Offset: 137
.Ltmp781:
    0000008b: 	cvttsd2si	%xmm0, %rax
    00000090: 	imulq	%r13, %rax
    00000094: 	imulq	$0x1f40, %rax, %rax
    0000009b: 	cmpq	%rdx, %rax
    0000009e: 	je	.Ltmp783 # Offset: 158
    000000a0: 	movl	current_test(%rip), %edx
    000000a6: 	movq	%rbp, %rsi
    000000a9: 	movl	$0x1, %edi
    000000ae: 	xorl	%eax, %eax
    000000b0: 	addl	$0x1, %r12d
    000000b4: 	callq	__printf_chk@PLT # Offset: 180
    000000b9: 	movl	iterations(%rip), %esi
    000000bf: 	cmpl	%esi, %r12d
    000000c2: 	jge	.Ltmp780 # Offset: 194
    000000c4: 	movsd	init_value(%rip), %xmm0
    000000cc: 	jmp	.Ltmp784 # Offset: 204
    000000ce: 	nop # Size: 2
.Ltmp783:
    000000d0: 	addl	$0x1, %r12d
    000000d4: 	cmpl	%esi, %r12d
    000000d7: 	jl	.Ltmp784 # Offset: 215
.Ltmp780:
    000000d9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000e0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000e7: 	subq	$0x20, %rax
    000000eb: 	cmpq	%rax, %rbx
    000000ee: 	je	.Ltmp785 # Offset: 238
    000000f4: 	movq	0x8(%rsp), %rax
    000000f9: 	leaq	0x10(%rbx), %rdi
    000000fd: 	movq	%rdi, (%rbx)
    00000100: 	movq	(%rax), %rbp
    00000103: 	movq	0x8(%rax), %r12
    00000107: 	movq	%rbp, %rax
    0000010a: 	addq	%r12, %rax
    0000010d: 	je	.Ltmp786 # Offset: 269
    0000010f: 	testq	%rbp, %rbp
    00000112: 	je	.Ltmp787 # Offset: 274
.Ltmp786:
    00000118: 	movq	%r12, 0x10(%rsp)
    0000011d: 	cmpq	$0xf, %r12
    00000121: 	ja	.Ltmp788 # Offset: 289
    00000127: 	cmpq	$0x1, %r12
    0000012b: 	jne	.Ltmp789 # Offset: 299
    00000131: 	movzbl	(%rbp), %eax
    00000135: 	movb	%al, 0x10(%rbx)
.Ltmp792:
    00000138: 	movq	%r12, 0x8(%rbx)
    0000013c: 	movb	$0x0, (%rdi,%r12)
    00000141: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000148: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000014f: 	addq	$0x20, %rax
    00000153: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000015a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000161: 	je	.Ltmp790 # Offset: 353
.Ltmp793:
    00000167: 	movq	-0x20(%rax), %rbp
    0000016b: 	callq	clock@PLT # Offset: 363
    00000170: 	movq	%rax, end_time(%rip)
    00000177: 	movq	0x18(%rsp), %rdx
    0000017c: 	subq	%fs:0x28, %rdx
    00000185: 	jne	.Ltmp791 # Offset: 389
    0000018b: 	subq	start_time(%rip), %rax
    00000192: 	pxor	%xmm0, %xmm0
    00000196: 	movq	%rbp, %rdi
    00000199: 	cvtsi2sd	%rax, %xmm0
    0000019e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001a6: 	addq	$0x28, %rsp
    000001aa: 	popq	%rbx
    000001ab: 	popq	%rbp
    000001ac: 	popq	%r12
    000001ae: 	popq	%r13
    000001b0: 	popq	%r14
    000001b2: 	popq	%r15
    000001b4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 436
.Ltmp788:
    000001b9: 	movq	%rbx, %rdi
    000001bc: 	leaq	0x10(%rsp), %rsi
    000001c1: 	xorl	%edx, %edx
    000001c3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 451
    000001c8: 	movq	%rax, (%rbx)
    000001cb: 	movq	%rax, %rdi
    000001ce: 	movq	0x10(%rsp), %rax
    000001d3: 	movq	%rax, 0x10(%rbx)
.Ltmp794:
    000001d7: 	movq	%r12, %rdx
    000001da: 	movq	%rbp, %rsi
    000001dd: 	callq	memcpy@PLT # Offset: 477
    000001e2: 	movq	0x10(%rsp), %r12
    000001e7: 	movq	(%rbx), %rdi
    000001ea: 	jmp	.Ltmp792 # Offset: 490
.Ltmp785:
    000001ef: 	movq	0x8(%rsp), %rsi
    000001f4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001fb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 507
    00000200: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000207: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000020e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000215: 	jne	.Ltmp793 # Offset: 533
.Ltmp790:
    0000021b: 	movq	-0x8(%rdx), %rax
    0000021f: 	addq	$0x200, %rax
    00000225: 	jmp	.Ltmp793 # Offset: 549
.Ltmp789:
    0000022a: 	testq	%r12, %r12
    0000022d: 	je	.Ltmp792 # Offset: 557
    00000233: 	jmp	.Ltmp794 # Offset: 563
.Ltmp791:
    00000235: 	callq	__stack_chk_fail@PLT # Offset: 565
.Ltmp787:
    0000023a: 	leaq	DATAat0x57008(%rip), %rdi
    00000241: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 577
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Il24custom_multiply_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1Is25custom_remainder_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 88
  State       : disassembled
  Address     : 0x9eb0
  Size        : 0x24e
  MaxSize     : 0x250
  Offset      : 0x9eb0
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Is25custom_remainder_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB087:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%edx, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x28, %rsp
    0000001b: 	movq	%rcx, 0x8(%rsp)
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x18(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movl	iterations(%rip), %edi
    0000003b: 	movq	%rax, start_time(%rip)
    00000042: 	testl	%edi, %edi
    00000044: 	jle	.Ltmp795 # Offset: 68
    0000004a: 	leal	-0x1(%r15), %eax
    0000004e: 	movsd	init_value(%rip), %xmm0
    00000056: 	movswl	%r13w, %r13d
    0000005a: 	xorl	%r12d, %r12d
    0000005d: 	leaq	0x2(%rbx,%rax,2), %r14
    00000062: 	leaq	DATAat0x571d0(%rip), %rbp
    00000069: 	nopl	(%rax) # Size: 7
.Ltmp799:
    00000070: 	movq	%rbx, %rcx
    00000073: 	xorl	%esi, %esi
    00000075: 	testl	%r15d, %r15d
    00000078: 	jle	.Ltmp796 # Offset: 120
    0000007a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp797:
    00000080: 	movswl	(%rcx), %eax
    00000083: 	addq	$0x2, %rcx
    00000087: 	cltd
    00000088: 	idivl	%r13d
    0000008b: 	addl	%edx, %esi
    0000008d: 	cmpq	%rcx, %r14
    00000090: 	jne	.Ltmp797 # Offset: 144
.Ltmp796:
    00000092: 	cvttsd2si	%xmm0, %eax
    00000096: 	cwtl
    00000097: 	cltd
    00000098: 	idivl	%r13d
    0000009b: 	imulw	$0x1f40, %dx, %dx
    000000a0: 	cmpw	%si, %dx
    000000a3: 	je	.Ltmp798 # Offset: 163
    000000a5: 	movl	current_test(%rip), %edx
    000000ab: 	movl	$0x1, %edi
    000000b0: 	movq	%rbp, %rsi
    000000b3: 	xorl	%eax, %eax
    000000b5: 	addl	$0x1, %r12d
    000000b9: 	callq	__printf_chk@PLT # Offset: 185
    000000be: 	movl	iterations(%rip), %edi
    000000c4: 	cmpl	%edi, %r12d
    000000c7: 	jge	.Ltmp795 # Offset: 199
    000000c9: 	movsd	init_value(%rip), %xmm0
    000000d1: 	jmp	.Ltmp799 # Offset: 209
    000000d3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp798:
    000000d8: 	addl	$0x1, %r12d
    000000dc: 	cmpl	%edi, %r12d
    000000df: 	jl	.Ltmp799 # Offset: 223
.Ltmp795:
    000000e1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000e8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000ef: 	subq	$0x20, %rax
    000000f3: 	cmpq	%rax, %rbx
    000000f6: 	je	.Ltmp800 # Offset: 246
    000000fc: 	movq	0x8(%rsp), %rax
    00000101: 	leaq	0x10(%rbx), %rdi
    00000105: 	movq	%rdi, (%rbx)
    00000108: 	movq	(%rax), %rbp
    0000010b: 	movq	0x8(%rax), %r12
    0000010f: 	movq	%rbp, %rax
    00000112: 	addq	%r12, %rax
    00000115: 	je	.Ltmp801 # Offset: 277
    00000117: 	testq	%rbp, %rbp
    0000011a: 	je	.Ltmp802 # Offset: 282
.Ltmp801:
    00000120: 	movq	%r12, 0x10(%rsp)
    00000125: 	cmpq	$0xf, %r12
    00000129: 	ja	.Ltmp803 # Offset: 297
    0000012f: 	cmpq	$0x1, %r12
    00000133: 	jne	.Ltmp804 # Offset: 307
    00000139: 	movzbl	(%rbp), %eax
    0000013d: 	movb	%al, 0x10(%rbx)
.Ltmp807:
    00000140: 	movq	%r12, 0x8(%rbx)
    00000144: 	movb	$0x0, (%rdi,%r12)
    00000149: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000150: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000157: 	addq	$0x20, %rax
    0000015b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000162: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000169: 	je	.Ltmp805 # Offset: 361
.Ltmp808:
    0000016f: 	movq	-0x20(%rax), %rbp
    00000173: 	callq	clock@PLT # Offset: 371
    00000178: 	movq	%rax, end_time(%rip)
    0000017f: 	movq	0x18(%rsp), %rdx
    00000184: 	subq	%fs:0x28, %rdx
    0000018d: 	jne	.Ltmp806 # Offset: 397
    00000193: 	subq	start_time(%rip), %rax
    0000019a: 	pxor	%xmm0, %xmm0
    0000019e: 	movq	%rbp, %rdi
    000001a1: 	cvtsi2sd	%rax, %xmm0
    000001a6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001ae: 	addq	$0x28, %rsp
    000001b2: 	popq	%rbx
    000001b3: 	popq	%rbp
    000001b4: 	popq	%r12
    000001b6: 	popq	%r13
    000001b8: 	popq	%r14
    000001ba: 	popq	%r15
    000001bc: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 444
.Ltmp803:
    000001c1: 	movq	%rbx, %rdi
    000001c4: 	leaq	0x10(%rsp), %rsi
    000001c9: 	xorl	%edx, %edx
    000001cb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 459
    000001d0: 	movq	%rax, (%rbx)
    000001d3: 	movq	%rax, %rdi
    000001d6: 	movq	0x10(%rsp), %rax
    000001db: 	movq	%rax, 0x10(%rbx)
.Ltmp809:
    000001df: 	movq	%r12, %rdx
    000001e2: 	movq	%rbp, %rsi
    000001e5: 	callq	memcpy@PLT # Offset: 485
    000001ea: 	movq	0x10(%rsp), %r12
    000001ef: 	movq	(%rbx), %rdi
    000001f2: 	jmp	.Ltmp807 # Offset: 498
.Ltmp800:
    000001f7: 	movq	0x8(%rsp), %rsi
    000001fc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000203: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 515
    00000208: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000020f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000216: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000021d: 	jne	.Ltmp808 # Offset: 541
.Ltmp805:
    00000223: 	movq	-0x8(%rdx), %rax
    00000227: 	addq	$0x200, %rax
    0000022d: 	jmp	.Ltmp808 # Offset: 557
.Ltmp804:
    00000232: 	testq	%r12, %r12
    00000235: 	je	.Ltmp807 # Offset: 565
    0000023b: 	jmp	.Ltmp809 # Offset: 571
.Ltmp806:
    0000023d: 	callq	__stack_chk_fail@PLT # Offset: 573
.Ltmp802:
    00000242: 	leaq	DATAat0x57008(%rip), %rdi
    00000249: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 585
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Is25custom_remainder_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIm10shift_leftImLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 89
  State       : disassembled
  Address     : 0xa100
  Size        : 0x2dd
  MaxSize     : 0x2e0
  Offset      : 0xa100
  Section     : .text
  Orc Section : .local.text._Z13test_constantIm10shift_leftImLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB088:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp810 # Offset: 65
    00000047: 	movl	%r15d, %eax
    0000004a: 	movl	%r15d, %ebx
    0000004d: 	leaq	DATAat0x571d0(%rip), %rbp
    00000054: 	xorl	%r12d, %r12d
    00000057: 	shrl	%eax
    00000059: 	movsd	DATAat0x57bd8(%rip), %xmm3
    00000061: 	movsd	init_value(%rip), %xmm2
    00000069: 	andl	$-0x2, %ebx
    0000006c: 	subl	$0x1, %eax
    0000006f: 	shlq	$0x4, %rax
    00000073: 	leaq	0x10(%r13,%rax), %r14
    00000078: 	nopl	(%rax,%rax) # Size: 8
.Ltmp816:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp811 # Offset: 133
    00000087: 	cmpl	$0x1, %r15d
    0000008b: 	je	.Ltmp812 # Offset: 139
    00000091: 	movq	%r13, %rax
    00000094: 	pxor	%xmm1, %xmm1
    00000098: 	nopl	(%rax,%rax) # Size: 8
.Ltmp813:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	psllq	$0x1, %xmm0
    000000ad: 	paddq	%xmm0, %xmm1
    000000b1: 	cmpq	%rax, %r14
    000000b4: 	jne	.Ltmp813 # Offset: 180
    000000b6: 	movdqa	%xmm1, %xmm0
    000000ba: 	movslq	%ebx, %rdx
    000000bd: 	psrldq	$0x8, %xmm0
    000000c2: 	paddq	%xmm0, %xmm1
    000000c6: 	movq	%xmm1, %rax
    000000cb: 	cmpl	%r15d, %ebx
    000000ce: 	je	.Ltmp811 # Offset: 206
.Ltmp825:
    000000d0: 	movq	(%r13,%rdx,8), %rdx
    000000d5: 	leaq	(%rax,%rdx,2), %rax
.Ltmp811:
    000000d9: 	comisd	%xmm3, %xmm2
    000000dd: 	jae	.Ltmp814 # Offset: 221
    000000e3: 	cvttsd2si	%xmm2, %rdx
.Ltmp824:
    000000e8: 	addq	%rdx, %rdx
    000000eb: 	imulq	$0x1f40, %rdx, %rdx
    000000f2: 	cmpq	%rax, %rdx
    000000f5: 	je	.Ltmp815 # Offset: 245
    000000f7: 	movl	current_test(%rip), %edx
    000000fd: 	movq	%rbp, %rsi
    00000100: 	movl	$0x1, %edi
    00000105: 	xorl	%eax, %eax
    00000107: 	addl	$0x1, %r12d
    0000010b: 	callq	__printf_chk@PLT # Offset: 267
    00000110: 	movl	iterations(%rip), %esi
    00000116: 	cmpl	%esi, %r12d
    00000119: 	jge	.Ltmp810 # Offset: 281
    0000011b: 	movq	DATAat0x57bd8(%rip), %rax
    00000122: 	movsd	init_value(%rip), %xmm2
    0000012a: 	movq	%rax, %xmm3
    0000012f: 	jmp	.Ltmp816 # Offset: 303
    00000134: 	nopl	(%rax) # Size: 4
.Ltmp815:
    00000138: 	addl	$0x1, %r12d
    0000013c: 	cmpl	%esi, %r12d
    0000013f: 	jl	.Ltmp816 # Offset: 319
.Ltmp810:
    00000145: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000014c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000153: 	subq	$0x20, %rax
    00000157: 	cmpq	%rax, %rbx
    0000015a: 	je	.Ltmp817 # Offset: 346
    00000160: 	movq	0x8(%rsp), %rax
    00000165: 	leaq	0x10(%rbx), %rdi
    00000169: 	movq	%rdi, (%rbx)
    0000016c: 	movq	(%rax), %rbp
    0000016f: 	movq	0x8(%rax), %r12
    00000173: 	movq	%rbp, %rax
    00000176: 	addq	%r12, %rax
    00000179: 	je	.Ltmp818 # Offset: 377
    0000017b: 	testq	%rbp, %rbp
    0000017e: 	je	.Ltmp819 # Offset: 382
.Ltmp818:
    00000184: 	movq	%r12, 0x10(%rsp)
    00000189: 	cmpq	$0xf, %r12
    0000018d: 	ja	.Ltmp820 # Offset: 397
    00000193: 	cmpq	$0x1, %r12
    00000197: 	jne	.Ltmp821 # Offset: 407
    0000019d: 	movzbl	(%rbp), %eax
    000001a1: 	movb	%al, 0x10(%rbx)
.Ltmp826:
    000001a4: 	movq	%r12, 0x8(%rbx)
    000001a8: 	movb	$0x0, (%rdi,%r12)
    000001ad: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001b4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001bb: 	addq	$0x20, %rax
    000001bf: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001c6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001cd: 	je	.Ltmp822 # Offset: 461
.Ltmp827:
    000001d3: 	movq	-0x20(%rax), %rbp
    000001d7: 	callq	clock@PLT # Offset: 471
    000001dc: 	movq	%rax, end_time(%rip)
    000001e3: 	movq	0x18(%rsp), %rdx
    000001e8: 	subq	%fs:0x28, %rdx
    000001f1: 	jne	.Ltmp823 # Offset: 497
    000001f7: 	subq	start_time(%rip), %rax
    000001fe: 	pxor	%xmm0, %xmm0
    00000202: 	movq	%rbp, %rdi
    00000205: 	cvtsi2sd	%rax, %xmm0
    0000020a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000212: 	addq	$0x28, %rsp
    00000216: 	popq	%rbx
    00000217: 	popq	%rbp
    00000218: 	popq	%r12
    0000021a: 	popq	%r13
    0000021c: 	popq	%r14
    0000021e: 	popq	%r15
    00000220: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 544
    00000225: 	nopl	(%rax) # Size: 3
.Ltmp814:
    00000228: 	movabsq	$-0x8000000000000000, %rcx
    00000232: 	movapd	%xmm2, %xmm0
    00000236: 	subsd	%xmm3, %xmm0
    0000023a: 	cvttsd2si	%xmm0, %rdx
    0000023f: 	xorq	%rcx, %rdx
    00000242: 	jmp	.Ltmp824 # Offset: 578
.Ltmp812:
    00000247: 	xorl	%edx, %edx
    00000249: 	xorl	%eax, %eax
    0000024b: 	jmp	.Ltmp825 # Offset: 587
.Ltmp820:
    00000250: 	movq	%rbx, %rdi
    00000253: 	leaq	0x10(%rsp), %rsi
    00000258: 	xorl	%edx, %edx
    0000025a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 602
    0000025f: 	movq	%rax, (%rbx)
    00000262: 	movq	%rax, %rdi
    00000265: 	movq	0x10(%rsp), %rax
    0000026a: 	movq	%rax, 0x10(%rbx)
.Ltmp828:
    0000026e: 	movq	%r12, %rdx
    00000271: 	movq	%rbp, %rsi
    00000274: 	callq	memcpy@PLT # Offset: 628
    00000279: 	movq	0x10(%rsp), %r12
    0000027e: 	movq	(%rbx), %rdi
    00000281: 	jmp	.Ltmp826 # Offset: 641
.Ltmp817:
    00000286: 	movq	0x8(%rsp), %rsi
    0000028b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000292: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 658
    00000297: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000029e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002a5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002ac: 	jne	.Ltmp827 # Offset: 684
.Ltmp822:
    000002b2: 	movq	-0x8(%rdx), %rax
    000002b6: 	addq	$0x200, %rax
    000002bc: 	jmp	.Ltmp827 # Offset: 700
.Ltmp821:
    000002c1: 	testq	%r12, %r12
    000002c4: 	je	.Ltmp826 # Offset: 708
    000002ca: 	jmp	.Ltmp828 # Offset: 714
.Ltmp823:
    000002cc: 	callq	__stack_chk_fail@PLT # Offset: 716
.Ltmp819:
    000002d1: 	leaq	DATAat0x57008(%rip), %rdi
    000002d8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 728
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIm10shift_leftImLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1It25custom_remainder_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 90
  State       : disassembled
  Address     : 0xa3e0
  Size        : 0x24e
  MaxSize     : 0x250
  Offset      : 0xa3e0
  Section     : .text
  Orc Section : .local.text._Z14test_variable1It25custom_remainder_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB089:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%edx, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x28, %rsp
    0000001b: 	movq	%rcx, 0x8(%rsp)
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x18(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movl	iterations(%rip), %edi
    0000003b: 	movq	%rax, start_time(%rip)
    00000042: 	testl	%edi, %edi
    00000044: 	jle	.Ltmp829 # Offset: 68
    0000004a: 	cvttsd2si	init_value(%rip), %r9d
    00000053: 	leal	-0x1(%r15), %eax
    00000057: 	movzwl	%r13w, %r13d
    0000005b: 	xorl	%r12d, %r12d
    0000005e: 	leaq	0x2(%rbx,%rax,2), %r14
    00000063: 	leaq	DATAat0x571d0(%rip), %rbp
    0000006a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp833:
    00000070: 	movq	%rbx, %rcx
    00000073: 	xorl	%esi, %esi
    00000075: 	testl	%r15d, %r15d
    00000078: 	jle	.Ltmp830 # Offset: 120
    0000007a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp831:
    00000080: 	movzwl	(%rcx), %eax
    00000083: 	addq	$0x2, %rcx
    00000087: 	cltd
    00000088: 	idivl	%r13d
    0000008b: 	addl	%edx, %esi
    0000008d: 	cmpq	%rcx, %r14
    00000090: 	jne	.Ltmp831 # Offset: 144
.Ltmp830:
    00000092: 	movzwl	%r9w, %eax
    00000096: 	cltd
    00000097: 	idivl	%r13d
    0000009a: 	imulw	$0x1f40, %dx, %dx
    0000009f: 	cmpw	%si, %dx
    000000a2: 	je	.Ltmp832 # Offset: 162
    000000a4: 	movl	current_test(%rip), %edx
    000000aa: 	movl	$0x1, %edi
    000000af: 	movq	%rbp, %rsi
    000000b2: 	xorl	%eax, %eax
    000000b4: 	addl	$0x1, %r12d
    000000b8: 	callq	__printf_chk@PLT # Offset: 184
    000000bd: 	movl	iterations(%rip), %edi
    000000c3: 	cmpl	%edi, %r12d
    000000c6: 	jge	.Ltmp829 # Offset: 198
    000000c8: 	cvttsd2si	init_value(%rip), %r9d
    000000d1: 	jmp	.Ltmp833 # Offset: 209
    000000d3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp832:
    000000d8: 	addl	$0x1, %r12d
    000000dc: 	cmpl	%edi, %r12d
    000000df: 	jl	.Ltmp833 # Offset: 223
.Ltmp829:
    000000e1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000e8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000ef: 	subq	$0x20, %rax
    000000f3: 	cmpq	%rax, %rbx
    000000f6: 	je	.Ltmp834 # Offset: 246
    000000fc: 	movq	0x8(%rsp), %rax
    00000101: 	leaq	0x10(%rbx), %rdi
    00000105: 	movq	%rdi, (%rbx)
    00000108: 	movq	(%rax), %rbp
    0000010b: 	movq	0x8(%rax), %r12
    0000010f: 	movq	%rbp, %rax
    00000112: 	addq	%r12, %rax
    00000115: 	je	.Ltmp835 # Offset: 277
    00000117: 	testq	%rbp, %rbp
    0000011a: 	je	.Ltmp836 # Offset: 282
.Ltmp835:
    00000120: 	movq	%r12, 0x10(%rsp)
    00000125: 	cmpq	$0xf, %r12
    00000129: 	ja	.Ltmp837 # Offset: 297
    0000012f: 	cmpq	$0x1, %r12
    00000133: 	jne	.Ltmp838 # Offset: 307
    00000139: 	movzbl	(%rbp), %eax
    0000013d: 	movb	%al, 0x10(%rbx)
.Ltmp841:
    00000140: 	movq	%r12, 0x8(%rbx)
    00000144: 	movb	$0x0, (%rdi,%r12)
    00000149: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000150: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000157: 	addq	$0x20, %rax
    0000015b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000162: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000169: 	je	.Ltmp839 # Offset: 361
.Ltmp842:
    0000016f: 	movq	-0x20(%rax), %rbp
    00000173: 	callq	clock@PLT # Offset: 371
    00000178: 	movq	%rax, end_time(%rip)
    0000017f: 	movq	0x18(%rsp), %rdx
    00000184: 	subq	%fs:0x28, %rdx
    0000018d: 	jne	.Ltmp840 # Offset: 397
    00000193: 	subq	start_time(%rip), %rax
    0000019a: 	pxor	%xmm0, %xmm0
    0000019e: 	movq	%rbp, %rdi
    000001a1: 	cvtsi2sd	%rax, %xmm0
    000001a6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001ae: 	addq	$0x28, %rsp
    000001b2: 	popq	%rbx
    000001b3: 	popq	%rbp
    000001b4: 	popq	%r12
    000001b6: 	popq	%r13
    000001b8: 	popq	%r14
    000001ba: 	popq	%r15
    000001bc: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 444
.Ltmp837:
    000001c1: 	movq	%rbx, %rdi
    000001c4: 	leaq	0x10(%rsp), %rsi
    000001c9: 	xorl	%edx, %edx
    000001cb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 459
    000001d0: 	movq	%rax, (%rbx)
    000001d3: 	movq	%rax, %rdi
    000001d6: 	movq	0x10(%rsp), %rax
    000001db: 	movq	%rax, 0x10(%rbx)
.Ltmp843:
    000001df: 	movq	%r12, %rdx
    000001e2: 	movq	%rbp, %rsi
    000001e5: 	callq	memcpy@PLT # Offset: 485
    000001ea: 	movq	0x10(%rsp), %r12
    000001ef: 	movq	(%rbx), %rdi
    000001f2: 	jmp	.Ltmp841 # Offset: 498
.Ltmp834:
    000001f7: 	movq	0x8(%rsp), %rsi
    000001fc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000203: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 515
    00000208: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000020f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000216: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000021d: 	jne	.Ltmp842 # Offset: 541
.Ltmp839:
    00000223: 	movq	-0x8(%rdx), %rax
    00000227: 	addq	$0x200, %rax
    0000022d: 	jmp	.Ltmp842 # Offset: 557
.Ltmp838:
    00000232: 	testq	%r12, %r12
    00000235: 	je	.Ltmp841 # Offset: 565
    0000023b: 	jmp	.Ltmp843 # Offset: 571
.Ltmp840:
    0000023d: 	callq	__stack_chk_fail@PLT # Offset: 573
.Ltmp836:
    00000242: 	leaq	DATAat0x57008(%rip), %rdi
    00000249: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 585
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1It25custom_remainder_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIt10shift_leftItLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 91
  State       : disassembled
  Address     : 0xa630
  Size        : 0x32d
  MaxSize     : 0x330
  Offset      : 0xa630
  Section     : .text
  Orc Section : .local.text._Z13test_constantIt10shift_leftItLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB090:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp844 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r14d, %eax
    0000005f: 	cvttsd2si	init_value(%rip), %edi
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	shrl	$0x3, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r15,%rax), %r13
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp850:
    00000080: 	xorl	%edx, %edx
    00000082: 	testl	%r14d, %r14d
    00000085: 	jle	.Ltmp845 # Offset: 133
    0000008b: 	cmpl	$0x6, 0x4(%rsp)
    00000090: 	jbe	.Ltmp846 # Offset: 144
    00000096: 	movq	%r15, %rax
    00000099: 	pxor	%xmm1, %xmm1
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp847:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	psllw	$0x3, %xmm0
    000000ad: 	paddw	%xmm0, %xmm1
    000000b1: 	cmpq	%r13, %rax
    000000b4: 	jne	.Ltmp847 # Offset: 180
    000000b6: 	movdqa	%xmm1, %xmm0
    000000ba: 	psrldq	$0x8, %xmm0
    000000bf: 	paddw	%xmm0, %xmm1
    000000c3: 	movdqa	%xmm1, %xmm0
    000000c7: 	psrldq	$0x4, %xmm0
    000000cc: 	paddw	%xmm0, %xmm1
    000000d0: 	movdqa	%xmm1, %xmm0
    000000d4: 	psrldq	$0x2, %xmm0
    000000d9: 	paddw	%xmm0, %xmm1
    000000dd: 	pextrw	$0x0, %xmm1, %edx
    000000e2: 	cmpl	%r14d, %ebx
    000000e5: 	je	.Ltmp845 # Offset: 229
    000000e7: 	movl	%ebx, %eax
    000000e9: 	movl	%ebx, %ecx
.Ltmp858:
    000000eb: 	movl	%r14d, %r8d
    000000ee: 	subl	%eax, %r8d
    000000f1: 	leal	-0x1(%r8), %r9d
    000000f5: 	cmpl	$0x2, %r9d
    000000f9: 	jbe	.Ltmp848 # Offset: 249
    000000fb: 	movq	(%r15,%rax,2), %xmm0
    00000101: 	psllw	$0x3, %xmm0
    00000106: 	pextrw	$0x0, %xmm0, %eax
    0000010b: 	pextrw	$0x1, %xmm0, %r9d
    00000111: 	addl	%r9d, %eax
    00000114: 	addl	%edx, %eax
    00000116: 	pextrw	$0x2, %xmm0, %edx
    0000011b: 	addl	%edx, %eax
    0000011d: 	pextrw	$0x3, %xmm0, %edx
    00000122: 	addl	%eax, %edx
    00000124: 	movl	%r8d, %eax
    00000127: 	andl	$-0x4, %eax
    0000012a: 	addl	%eax, %ecx
    0000012c: 	cmpl	%eax, %r8d
    0000012f: 	je	.Ltmp845 # Offset: 303
.Ltmp848:
    00000131: 	movslq	%ecx, %rax
    00000134: 	leaq	(%rax,%rax), %r8
    00000138: 	movzwl	(%r15,%rax,2), %eax
    0000013d: 	leal	(%rdx,%rax,8), %edx
    00000140: 	leal	0x1(%rcx), %eax
    00000143: 	cmpl	%eax, %r14d
    00000146: 	jle	.Ltmp845 # Offset: 326
    00000148: 	movzwl	0x2(%r15,%r8), %eax
    0000014e: 	addl	$0x2, %ecx
    00000151: 	leal	(%rdx,%rax,8), %edx
    00000154: 	cmpl	%ecx, %r14d
    00000157: 	jle	.Ltmp845 # Offset: 343
    00000159: 	movzwl	0x4(%r15,%r8), %eax
    0000015f: 	leal	(%rdx,%rax,8), %edx
.Ltmp845:
    00000162: 	leal	(,%rdi,8), %eax
    00000169: 	imulw	$0x1f40, %ax, %ax
    0000016e: 	cmpw	%dx, %ax
    00000171: 	je	.Ltmp849 # Offset: 369
    00000173: 	movl	current_test(%rip), %edx
    00000179: 	movq	%rbp, %rsi
    0000017c: 	movl	$0x1, %edi
    00000181: 	xorl	%eax, %eax
    00000183: 	addl	$0x1, %r12d
    00000187: 	callq	__printf_chk@PLT # Offset: 391
    0000018c: 	movl	iterations(%rip), %esi
    00000192: 	cmpl	%r12d, %esi
    00000195: 	jle	.Ltmp844 # Offset: 405
    00000197: 	cvttsd2si	init_value(%rip), %edi
    0000019f: 	jmp	.Ltmp850 # Offset: 415
    000001a4: 	nopl	(%rax) # Size: 4
.Ltmp849:
    000001a8: 	addl	$0x1, %r12d
    000001ac: 	cmpl	%esi, %r12d
    000001af: 	jl	.Ltmp850 # Offset: 431
.Ltmp844:
    000001b5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001bc: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001c3: 	subq	$0x20, %rax
    000001c7: 	cmpq	%rax, %rbx
    000001ca: 	je	.Ltmp851 # Offset: 458
    000001d0: 	movq	0x8(%rsp), %rax
    000001d5: 	leaq	0x10(%rbx), %rdi
    000001d9: 	movq	%rdi, (%rbx)
    000001dc: 	movq	(%rax), %rbp
    000001df: 	movq	0x8(%rax), %r12
    000001e3: 	movq	%rbp, %rax
    000001e6: 	addq	%r12, %rax
    000001e9: 	je	.Ltmp852 # Offset: 489
    000001eb: 	testq	%rbp, %rbp
    000001ee: 	je	.Ltmp853 # Offset: 494
.Ltmp852:
    000001f4: 	movq	%r12, 0x10(%rsp)
    000001f9: 	cmpq	$0xf, %r12
    000001fd: 	ja	.Ltmp854 # Offset: 509
    00000203: 	cmpq	$0x1, %r12
    00000207: 	jne	.Ltmp855 # Offset: 519
    0000020d: 	movzbl	(%rbp), %eax
    00000211: 	movb	%al, 0x10(%rbx)
.Ltmp859:
    00000214: 	movq	%r12, 0x8(%rbx)
    00000218: 	movb	$0x0, (%rdi,%r12)
    0000021d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000224: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000022b: 	addq	$0x20, %rax
    0000022f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000236: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000023d: 	je	.Ltmp856 # Offset: 573
.Ltmp860:
    00000243: 	movq	-0x20(%rax), %rbp
    00000247: 	callq	clock@PLT # Offset: 583
    0000024c: 	movq	%rax, end_time(%rip)
    00000253: 	movq	0x18(%rsp), %rdx
    00000258: 	subq	%fs:0x28, %rdx
    00000261: 	jne	.Ltmp857 # Offset: 609
    00000267: 	subq	start_time(%rip), %rax
    0000026e: 	pxor	%xmm0, %xmm0
    00000272: 	movq	%rbp, %rdi
    00000275: 	cvtsi2sd	%rax, %xmm0
    0000027a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000282: 	addq	$0x28, %rsp
    00000286: 	popq	%rbx
    00000287: 	popq	%rbp
    00000288: 	popq	%r12
    0000028a: 	popq	%r13
    0000028c: 	popq	%r14
    0000028e: 	popq	%r15
    00000290: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 656
.Ltmp846:
    00000295: 	xorl	%eax, %eax
    00000297: 	xorl	%ecx, %ecx
    00000299: 	xorl	%edx, %edx
    0000029b: 	jmp	.Ltmp858 # Offset: 667
.Ltmp854:
    000002a0: 	movq	%rbx, %rdi
    000002a3: 	leaq	0x10(%rsp), %rsi
    000002a8: 	xorl	%edx, %edx
    000002aa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 682
    000002af: 	movq	%rax, (%rbx)
    000002b2: 	movq	%rax, %rdi
    000002b5: 	movq	0x10(%rsp), %rax
    000002ba: 	movq	%rax, 0x10(%rbx)
.Ltmp861:
    000002be: 	movq	%r12, %rdx
    000002c1: 	movq	%rbp, %rsi
    000002c4: 	callq	memcpy@PLT # Offset: 708
    000002c9: 	movq	0x10(%rsp), %r12
    000002ce: 	movq	(%rbx), %rdi
    000002d1: 	jmp	.Ltmp859 # Offset: 721
.Ltmp851:
    000002d6: 	movq	0x8(%rsp), %rsi
    000002db: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002e2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 738
    000002e7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002ee: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002f5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002fc: 	jne	.Ltmp860 # Offset: 764
.Ltmp856:
    00000302: 	movq	-0x8(%rdx), %rax
    00000306: 	addq	$0x200, %rax
    0000030c: 	jmp	.Ltmp860 # Offset: 780
.Ltmp855:
    00000311: 	testq	%r12, %r12
    00000314: 	je	.Ltmp859 # Offset: 788
    0000031a: 	jmp	.Ltmp861 # Offset: 794
.Ltmp857:
    0000031c: 	callq	__stack_chk_fail@PLT # Offset: 796
.Ltmp853:
    00000321: 	leaq	DATAat0x57008(%rip), %rdi
    00000328: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 808
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIt10shift_leftItLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIt14and_remainder2ItLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 92
  State       : disassembled
  Address     : 0xa960
  Size        : 0x34d
  MaxSize     : 0x350
  Offset      : 0xa960
  Section     : .text
  Orc Section : .local.text._Z13test_constantIt14and_remainder2ItLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB091:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp862 # Offset: 67
    00000049: 	leal	-0x1(%r14), %eax
    0000004d: 	movl	%r14d, %ebx
    00000050: 	movq	DATAat0x57c90(%rip), %xmm3
    00000058: 	movdqa	DATAat0x57c90(%rip), %xmm2
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r14d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	leaq	DATAat0x571d0(%rip), %rbp
    00000077: 	cvttsd2si	init_value(%rip), %r10d
    00000080: 	subl	$0x1, %eax
    00000083: 	shlq	$0x4, %rax
    00000087: 	leaq	0x10(%r15,%rax), %r13
    0000008c: 	nopl	(%rax) # Size: 4
.Ltmp868:
    00000090: 	xorl	%edx, %edx
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp863 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp864 # Offset: 160
    000000a6: 	movq	%r15, %rax
    000000a9: 	pxor	%xmm1, %xmm1
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp865:
    000000b0: 	movdqu	(%rax), %xmm0
    000000b4: 	addq	$0x10, %rax
    000000b8: 	pand	%xmm2, %xmm0
    000000bc: 	paddw	%xmm0, %xmm1
    000000c0: 	cmpq	%r13, %rax
    000000c3: 	jne	.Ltmp865 # Offset: 195
    000000c5: 	movdqa	%xmm1, %xmm0
    000000c9: 	psrldq	$0x8, %xmm0
    000000ce: 	paddw	%xmm0, %xmm1
    000000d2: 	movdqa	%xmm1, %xmm0
    000000d6: 	psrldq	$0x4, %xmm0
    000000db: 	paddw	%xmm0, %xmm1
    000000df: 	movdqa	%xmm1, %xmm0
    000000e3: 	psrldq	$0x2, %xmm0
    000000e8: 	paddw	%xmm0, %xmm1
    000000ec: 	pextrw	$0x0, %xmm1, %edx
    000000f1: 	cmpl	%r14d, %ebx
    000000f4: 	je	.Ltmp863 # Offset: 244
    000000f6: 	movl	%ebx, %eax
    000000f8: 	movl	%ebx, %ecx
.Ltmp876:
    000000fa: 	movl	%r14d, %esi
    000000fd: 	subl	%eax, %esi
    000000ff: 	leal	-0x1(%rsi), %edi
    00000102: 	cmpl	$0x2, %edi
    00000105: 	jbe	.Ltmp866 # Offset: 261
    00000107: 	movq	(%r15,%rax,2), %xmm0
    0000010d: 	pand	%xmm3, %xmm0
    00000111: 	pextrw	$0x0, %xmm0, %eax
    00000116: 	pextrw	$0x1, %xmm0, %edi
    0000011b: 	addl	%edi, %eax
    0000011d: 	addl	%edx, %eax
    0000011f: 	pextrw	$0x2, %xmm0, %edx
    00000124: 	addl	%edx, %eax
    00000126: 	pextrw	$0x3, %xmm0, %edx
    0000012b: 	addl	%eax, %edx
    0000012d: 	movl	%esi, %eax
    0000012f: 	andl	$-0x4, %eax
    00000132: 	addl	%eax, %ecx
    00000134: 	cmpl	%eax, %esi
    00000136: 	je	.Ltmp863 # Offset: 310
.Ltmp866:
    00000138: 	movslq	%ecx, %rax
    0000013b: 	leaq	(%rax,%rax), %rsi
    0000013f: 	movzwl	(%r15,%rax,2), %eax
    00000144: 	andl	$0xf, %eax
    00000147: 	addl	%eax, %edx
    00000149: 	leal	0x1(%rcx), %eax
    0000014c: 	cmpl	%eax, %r14d
    0000014f: 	jle	.Ltmp863 # Offset: 335
    00000151: 	movzwl	0x2(%r15,%rsi), %eax
    00000157: 	addl	$0x2, %ecx
    0000015a: 	andl	$0xf, %eax
    0000015d: 	addl	%eax, %edx
    0000015f: 	cmpl	%ecx, %r14d
    00000162: 	jle	.Ltmp863 # Offset: 354
    00000164: 	movzwl	0x4(%r15,%rsi), %eax
    0000016a: 	andl	$0xf, %eax
    0000016d: 	addl	%eax, %edx
.Ltmp863:
    0000016f: 	movl	%r10d, %eax
    00000172: 	andl	$0xf, %eax
    00000175: 	imulw	$0x1f40, %ax, %ax
    0000017a: 	cmpw	%dx, %ax
    0000017d: 	je	.Ltmp867 # Offset: 381
    0000017f: 	movl	current_test(%rip), %edx
    00000185: 	movq	%rbp, %rsi
    00000188: 	movl	$0x1, %edi
    0000018d: 	xorl	%eax, %eax
    0000018f: 	addl	$0x1, %r12d
    00000193: 	callq	__printf_chk@PLT # Offset: 403
    00000198: 	movl	iterations(%rip), %r9d
    0000019f: 	cmpl	%r12d, %r9d
    000001a2: 	jle	.Ltmp862 # Offset: 418
    000001a4: 	cvttsd2si	init_value(%rip), %r10d
    000001ad: 	movdqa	DATAat0x57c90(%rip), %xmm2
    000001b5: 	movq	DATAat0x57c90(%rip), %xmm3
    000001bd: 	jmp	.Ltmp868 # Offset: 445
    000001c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp867:
    000001c8: 	addl	$0x1, %r12d
    000001cc: 	cmpl	%r9d, %r12d
    000001cf: 	jl	.Ltmp868 # Offset: 463
.Ltmp862:
    000001d5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001dc: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001e3: 	subq	$0x20, %rax
    000001e7: 	cmpq	%rax, %rbx
    000001ea: 	je	.Ltmp869 # Offset: 490
    000001f0: 	movq	0x8(%rsp), %rax
    000001f5: 	leaq	0x10(%rbx), %rdi
    000001f9: 	movq	%rdi, (%rbx)
    000001fc: 	movq	(%rax), %rbp
    000001ff: 	movq	0x8(%rax), %r12
    00000203: 	movq	%rbp, %rax
    00000206: 	addq	%r12, %rax
    00000209: 	je	.Ltmp870 # Offset: 521
    0000020b: 	testq	%rbp, %rbp
    0000020e: 	je	.Ltmp871 # Offset: 526
.Ltmp870:
    00000214: 	movq	%r12, 0x10(%rsp)
    00000219: 	cmpq	$0xf, %r12
    0000021d: 	ja	.Ltmp872 # Offset: 541
    00000223: 	cmpq	$0x1, %r12
    00000227: 	jne	.Ltmp873 # Offset: 551
    0000022d: 	movzbl	(%rbp), %eax
    00000231: 	movb	%al, 0x10(%rbx)
.Ltmp877:
    00000234: 	movq	%r12, 0x8(%rbx)
    00000238: 	movb	$0x0, (%rdi,%r12)
    0000023d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000244: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000024b: 	addq	$0x20, %rax
    0000024f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000256: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000025d: 	je	.Ltmp874 # Offset: 605
.Ltmp878:
    00000263: 	movq	-0x20(%rax), %rbp
    00000267: 	callq	clock@PLT # Offset: 615
    0000026c: 	movq	%rax, end_time(%rip)
    00000273: 	movq	0x18(%rsp), %rdx
    00000278: 	subq	%fs:0x28, %rdx
    00000281: 	jne	.Ltmp875 # Offset: 641
    00000287: 	subq	start_time(%rip), %rax
    0000028e: 	pxor	%xmm0, %xmm0
    00000292: 	movq	%rbp, %rdi
    00000295: 	cvtsi2sd	%rax, %xmm0
    0000029a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002a2: 	addq	$0x28, %rsp
    000002a6: 	popq	%rbx
    000002a7: 	popq	%rbp
    000002a8: 	popq	%r12
    000002aa: 	popq	%r13
    000002ac: 	popq	%r14
    000002ae: 	popq	%r15
    000002b0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 688
.Ltmp864:
    000002b5: 	xorl	%eax, %eax
    000002b7: 	xorl	%ecx, %ecx
    000002b9: 	xorl	%edx, %edx
    000002bb: 	jmp	.Ltmp876 # Offset: 699
.Ltmp872:
    000002c0: 	movq	%rbx, %rdi
    000002c3: 	leaq	0x10(%rsp), %rsi
    000002c8: 	xorl	%edx, %edx
    000002ca: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 714
    000002cf: 	movq	%rax, (%rbx)
    000002d2: 	movq	%rax, %rdi
    000002d5: 	movq	0x10(%rsp), %rax
    000002da: 	movq	%rax, 0x10(%rbx)
.Ltmp879:
    000002de: 	movq	%r12, %rdx
    000002e1: 	movq	%rbp, %rsi
    000002e4: 	callq	memcpy@PLT # Offset: 740
    000002e9: 	movq	0x10(%rsp), %r12
    000002ee: 	movq	(%rbx), %rdi
    000002f1: 	jmp	.Ltmp877 # Offset: 753
.Ltmp869:
    000002f6: 	movq	0x8(%rsp), %rsi
    000002fb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000302: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 770
    00000307: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000030e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000315: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000031c: 	jne	.Ltmp878 # Offset: 796
.Ltmp874:
    00000322: 	movq	-0x8(%rdx), %rax
    00000326: 	addq	$0x200, %rax
    0000032c: 	jmp	.Ltmp878 # Offset: 812
.Ltmp873:
    00000331: 	testq	%r12, %r12
    00000334: 	je	.Ltmp877 # Offset: 820
    0000033a: 	jmp	.Ltmp879 # Offset: 826
.Ltmp875:
    0000033c: 	callq	__stack_chk_fail@PLT # Offset: 828
.Ltmp871:
    00000341: 	leaq	DATAat0x57008(%rip), %rdi
    00000348: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 840
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIt14and_remainder2ItLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIm13and_remainderImLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 93
  State       : disassembled
  Address     : 0xacb0
  Size        : 0x2e5
  MaxSize     : 0x2f0
  Offset      : 0xacb0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIm13and_remainderImLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB092:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp880 # Offset: 65
    00000047: 	movl	%r15d, %eax
    0000004a: 	movl	%r15d, %ebx
    0000004d: 	movsd	DATAat0x57bd8(%rip), %xmm4
    00000055: 	movsd	init_value(%rip), %xmm3
    0000005d: 	shrl	%eax
    0000005f: 	movdqa	DATAat0x57c60(%rip), %xmm2
    00000067: 	andl	$-0x2, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	subl	$0x1, %eax
    00000070: 	leaq	DATAat0x571d0(%rip), %rbp
    00000077: 	shlq	$0x4, %rax
    0000007b: 	leaq	0x10(%r13,%rax), %r14
.Ltmp886:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp881 # Offset: 133
    00000087: 	cmpl	$0x1, %r15d
    0000008b: 	je	.Ltmp882 # Offset: 139
    00000091: 	movq	%r13, %rax
    00000094: 	pxor	%xmm1, %xmm1
    00000098: 	nopl	(%rax,%rax) # Size: 8
.Ltmp883:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	pand	%xmm2, %xmm0
    000000ac: 	paddq	%xmm0, %xmm1
    000000b0: 	cmpq	%rax, %r14
    000000b3: 	jne	.Ltmp883 # Offset: 179
    000000b5: 	movdqa	%xmm1, %xmm0
    000000b9: 	movslq	%ebx, %rdx
    000000bc: 	psrldq	$0x8, %xmm0
    000000c1: 	paddq	%xmm0, %xmm1
    000000c5: 	movq	%xmm1, %rax
    000000ca: 	cmpl	%r15d, %ebx
    000000cd: 	je	.Ltmp881 # Offset: 205
.Ltmp895:
    000000cf: 	movq	(%r13,%rdx,8), %rdx
    000000d4: 	andl	$0x1f, %edx
    000000d7: 	addq	%rdx, %rax
.Ltmp881:
    000000da: 	comisd	%xmm4, %xmm3
    000000de: 	jae	.Ltmp884 # Offset: 222
    000000e4: 	cvttsd2si	%xmm3, %rdx
.Ltmp894:
    000000e9: 	andl	$0x1f, %edx
    000000ec: 	imulq	$0x1f40, %rdx, %rdx
    000000f3: 	cmpq	%rax, %rdx
    000000f6: 	je	.Ltmp885 # Offset: 246
    000000f8: 	movl	current_test(%rip), %edx
    000000fe: 	movq	%rbp, %rsi
    00000101: 	movl	$0x1, %edi
    00000106: 	xorl	%eax, %eax
    00000108: 	addl	$0x1, %r12d
    0000010c: 	callq	__printf_chk@PLT # Offset: 268
    00000111: 	movl	iterations(%rip), %esi
    00000117: 	cmpl	%esi, %r12d
    0000011a: 	jge	.Ltmp880 # Offset: 282
    0000011c: 	movq	DATAat0x57bd8(%rip), %rax
    00000123: 	movsd	init_value(%rip), %xmm3
    0000012b: 	movdqa	DATAat0x57c60(%rip), %xmm2
    00000133: 	movq	%rax, %xmm4
    00000138: 	jmp	.Ltmp886 # Offset: 312
    0000013d: 	nopl	(%rax) # Size: 3
.Ltmp885:
    00000140: 	addl	$0x1, %r12d
    00000144: 	cmpl	%esi, %r12d
    00000147: 	jl	.Ltmp886 # Offset: 327
.Ltmp880:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp887 # Offset: 354
    00000168: 	movq	0x8(%rsp), %rax
    0000016d: 	leaq	0x10(%rbx), %rdi
    00000171: 	movq	%rdi, (%rbx)
    00000174: 	movq	(%rax), %rbp
    00000177: 	movq	0x8(%rax), %r12
    0000017b: 	movq	%rbp, %rax
    0000017e: 	addq	%r12, %rax
    00000181: 	je	.Ltmp888 # Offset: 385
    00000183: 	testq	%rbp, %rbp
    00000186: 	je	.Ltmp889 # Offset: 390
.Ltmp888:
    0000018c: 	movq	%r12, 0x10(%rsp)
    00000191: 	cmpq	$0xf, %r12
    00000195: 	ja	.Ltmp890 # Offset: 405
    0000019b: 	cmpq	$0x1, %r12
    0000019f: 	jne	.Ltmp891 # Offset: 415
    000001a5: 	movzbl	(%rbp), %eax
    000001a9: 	movb	%al, 0x10(%rbx)
.Ltmp896:
    000001ac: 	movq	%r12, 0x8(%rbx)
    000001b0: 	movb	$0x0, (%rdi,%r12)
    000001b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001bc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001c3: 	addq	$0x20, %rax
    000001c7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ce: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d5: 	je	.Ltmp892 # Offset: 469
.Ltmp897:
    000001db: 	movq	-0x20(%rax), %rbp
    000001df: 	callq	clock@PLT # Offset: 479
    000001e4: 	movq	%rax, end_time(%rip)
    000001eb: 	movq	0x18(%rsp), %rdx
    000001f0: 	subq	%fs:0x28, %rdx
    000001f9: 	jne	.Ltmp893 # Offset: 505
    000001ff: 	subq	start_time(%rip), %rax
    00000206: 	pxor	%xmm0, %xmm0
    0000020a: 	movq	%rbp, %rdi
    0000020d: 	cvtsi2sd	%rax, %xmm0
    00000212: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000021a: 	addq	$0x28, %rsp
    0000021e: 	popq	%rbx
    0000021f: 	popq	%rbp
    00000220: 	popq	%r12
    00000222: 	popq	%r13
    00000224: 	popq	%r14
    00000226: 	popq	%r15
    00000228: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 552
    0000022d: 	nopl	(%rax) # Size: 3
.Ltmp884:
    00000230: 	movabsq	$-0x8000000000000000, %rcx
    0000023a: 	movapd	%xmm3, %xmm0
    0000023e: 	subsd	%xmm4, %xmm0
    00000242: 	cvttsd2si	%xmm0, %rdx
    00000247: 	xorq	%rcx, %rdx
    0000024a: 	jmp	.Ltmp894 # Offset: 586
.Ltmp882:
    0000024f: 	xorl	%edx, %edx
    00000251: 	xorl	%eax, %eax
    00000253: 	jmp	.Ltmp895 # Offset: 595
.Ltmp890:
    00000258: 	movq	%rbx, %rdi
    0000025b: 	leaq	0x10(%rsp), %rsi
    00000260: 	xorl	%edx, %edx
    00000262: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 610
    00000267: 	movq	%rax, (%rbx)
    0000026a: 	movq	%rax, %rdi
    0000026d: 	movq	0x10(%rsp), %rax
    00000272: 	movq	%rax, 0x10(%rbx)
.Ltmp898:
    00000276: 	movq	%r12, %rdx
    00000279: 	movq	%rbp, %rsi
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x10(%rsp), %r12
    00000286: 	movq	(%rbx), %rdi
    00000289: 	jmp	.Ltmp896 # Offset: 649
.Ltmp887:
    0000028e: 	movq	0x8(%rsp), %rsi
    00000293: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000029a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 666
    0000029f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b4: 	jne	.Ltmp897 # Offset: 692
.Ltmp892:
    000002ba: 	movq	-0x8(%rdx), %rax
    000002be: 	addq	$0x200, %rax
    000002c4: 	jmp	.Ltmp897 # Offset: 708
.Ltmp891:
    000002c9: 	testq	%r12, %r12
    000002cc: 	je	.Ltmp896 # Offset: 716
    000002d2: 	jmp	.Ltmp898 # Offset: 722
.Ltmp893:
    000002d4: 	callq	__stack_chk_fail@PLT # Offset: 724
.Ltmp889:
    000002d9: 	leaq	DATAat0x57008(%rip), %rdi
    000002e0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 736
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIm13and_remainderImLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIj16custom_remainderIjLi4EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 94
  State       : disassembled
  Address     : 0xafa0
  Size        : 0x2eb
  MaxSize     : 0x2f0
  Offset      : 0xafa0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIj16custom_remainderIjLi4EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB093:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp899 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	xorl	%r12d, %r12d
    00000051: 	movsd	init_value(%rip), %xmm3
    00000059: 	movl	%eax, 0x4(%rsp)
    0000005d: 	movl	%r14d, %eax
    00000060: 	movdqa	DATAat0x57cd0(%rip), %xmm2
    00000068: 	andl	$-0x4, %ebx
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000075: 	subl	$0x1, %eax
    00000078: 	shlq	$0x4, %rax
    0000007c: 	leaq	0x10(%r15,%rax), %r13
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp904:
    00000088: 	xorl	%eax, %eax
    0000008a: 	testl	%r14d, %r14d
    0000008d: 	jle	.Ltmp900 # Offset: 141
    00000093: 	cmpl	$0x2, 0x4(%rsp)
    00000098: 	jbe	.Ltmp901 # Offset: 152
    0000009e: 	movq	%r15, %rax
    000000a1: 	pxor	%xmm1, %xmm1
    000000a5: 	nopl	(%rax) # Size: 3
.Ltmp902:
    000000a8: 	movdqu	(%rax), %xmm0
    000000ac: 	addq	$0x10, %rax
    000000b0: 	pand	%xmm2, %xmm0
    000000b4: 	paddd	%xmm0, %xmm1
    000000b8: 	cmpq	%r13, %rax
    000000bb: 	jne	.Ltmp902 # Offset: 187
    000000bd: 	movdqa	%xmm1, %xmm0
    000000c1: 	movl	%ebx, %edx
    000000c3: 	psrldq	$0x8, %xmm0
    000000c8: 	paddd	%xmm0, %xmm1
    000000cc: 	movdqa	%xmm1, %xmm0
    000000d0: 	psrldq	$0x4, %xmm0
    000000d5: 	paddd	%xmm0, %xmm1
    000000d9: 	movd	%xmm1, %eax
    000000dd: 	cmpl	%r14d, %ebx
    000000e0: 	je	.Ltmp900 # Offset: 224
.Ltmp912:
    000000e2: 	movslq	%edx, %rdi
    000000e5: 	leaq	(,%rdi,4), %r9
    000000ed: 	movl	(%r15,%rdi,4), %edi
    000000f1: 	andl	$0x3, %edi
    000000f4: 	addl	%edi, %eax
    000000f6: 	leal	0x1(%rdx), %edi
    000000f9: 	cmpl	%edi, %r14d
    000000fc: 	jle	.Ltmp900 # Offset: 252
    000000fe: 	movl	0x4(%r15,%r9), %edi
    00000103: 	addl	$0x2, %edx
    00000106: 	andl	$0x3, %edi
    00000109: 	addl	%edi, %eax
    0000010b: 	cmpl	%edx, %r14d
    0000010e: 	jle	.Ltmp900 # Offset: 270
    00000110: 	movl	0x8(%r15,%r9), %edx
    00000115: 	andl	$0x3, %edx
    00000118: 	addl	%edx, %eax
.Ltmp900:
    0000011a: 	cvttsd2si	%xmm3, %rdx
    0000011f: 	andl	$0x3, %edx
    00000122: 	imull	$0x1f40, %edx, %edx
    00000128: 	cmpl	%eax, %edx
    0000012a: 	je	.Ltmp903 # Offset: 298
    0000012c: 	movl	current_test(%rip), %edx
    00000132: 	movq	%rbp, %rsi
    00000135: 	movl	$0x1, %edi
    0000013a: 	xorl	%eax, %eax
    0000013c: 	addl	$0x1, %r12d
    00000140: 	callq	__printf_chk@PLT # Offset: 320
    00000145: 	movl	iterations(%rip), %esi
    0000014b: 	cmpl	%esi, %r12d
    0000014e: 	jge	.Ltmp899 # Offset: 334
    00000150: 	movsd	init_value(%rip), %xmm3
    00000158: 	movdqa	DATAat0x57cd0(%rip), %xmm2
    00000160: 	jmp	.Ltmp904 # Offset: 352
    00000165: 	nopl	(%rax) # Size: 3
.Ltmp903:
    00000168: 	addl	$0x1, %r12d
    0000016c: 	cmpl	%esi, %r12d
    0000016f: 	jl	.Ltmp904 # Offset: 367
.Ltmp899:
    00000175: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000017c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000183: 	subq	$0x20, %rax
    00000187: 	cmpq	%rax, %rbx
    0000018a: 	je	.Ltmp905 # Offset: 394
    00000190: 	movq	0x8(%rsp), %rax
    00000195: 	leaq	0x10(%rbx), %rdi
    00000199: 	movq	%rdi, (%rbx)
    0000019c: 	movq	(%rax), %rbp
    0000019f: 	movq	0x8(%rax), %r12
    000001a3: 	movq	%rbp, %rax
    000001a6: 	addq	%r12, %rax
    000001a9: 	je	.Ltmp906 # Offset: 425
    000001ab: 	testq	%rbp, %rbp
    000001ae: 	je	.Ltmp907 # Offset: 430
.Ltmp906:
    000001b4: 	movq	%r12, 0x10(%rsp)
    000001b9: 	cmpq	$0xf, %r12
    000001bd: 	ja	.Ltmp908 # Offset: 445
    000001c3: 	cmpq	$0x1, %r12
    000001c7: 	jne	.Ltmp909 # Offset: 455
    000001cd: 	movzbl	(%rbp), %eax
    000001d1: 	movb	%al, 0x10(%rbx)
.Ltmp913:
    000001d4: 	movq	%r12, 0x8(%rbx)
    000001d8: 	movb	$0x0, (%rdi,%r12)
    000001dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001e4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001eb: 	addq	$0x20, %rax
    000001ef: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001fd: 	je	.Ltmp910 # Offset: 509
.Ltmp914:
    00000203: 	movq	-0x20(%rax), %rbp
    00000207: 	callq	clock@PLT # Offset: 519
    0000020c: 	movq	%rax, end_time(%rip)
    00000213: 	movq	0x18(%rsp), %rdx
    00000218: 	subq	%fs:0x28, %rdx
    00000221: 	jne	.Ltmp911 # Offset: 545
    00000227: 	subq	start_time(%rip), %rax
    0000022e: 	pxor	%xmm0, %xmm0
    00000232: 	movq	%rbp, %rdi
    00000235: 	cvtsi2sd	%rax, %xmm0
    0000023a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000242: 	addq	$0x28, %rsp
    00000246: 	popq	%rbx
    00000247: 	popq	%rbp
    00000248: 	popq	%r12
    0000024a: 	popq	%r13
    0000024c: 	popq	%r14
    0000024e: 	popq	%r15
    00000250: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 592
.Ltmp901:
    00000255: 	xorl	%edx, %edx
    00000257: 	xorl	%eax, %eax
    00000259: 	jmp	.Ltmp912 # Offset: 601
.Ltmp908:
    0000025e: 	movq	%rbx, %rdi
    00000261: 	leaq	0x10(%rsp), %rsi
    00000266: 	xorl	%edx, %edx
    00000268: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 616
    0000026d: 	movq	%rax, (%rbx)
    00000270: 	movq	%rax, %rdi
    00000273: 	movq	0x10(%rsp), %rax
    00000278: 	movq	%rax, 0x10(%rbx)
.Ltmp915:
    0000027c: 	movq	%r12, %rdx
    0000027f: 	movq	%rbp, %rsi
    00000282: 	callq	memcpy@PLT # Offset: 642
    00000287: 	movq	0x10(%rsp), %r12
    0000028c: 	movq	(%rbx), %rdi
    0000028f: 	jmp	.Ltmp913 # Offset: 655
.Ltmp905:
    00000294: 	movq	0x8(%rsp), %rsi
    00000299: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002a0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 672
    000002a5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002ac: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002b3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002ba: 	jne	.Ltmp914 # Offset: 698
.Ltmp910:
    000002c0: 	movq	-0x8(%rdx), %rax
    000002c4: 	addq	$0x200, %rax
    000002ca: 	jmp	.Ltmp914 # Offset: 714
.Ltmp909:
    000002cf: 	testq	%r12, %r12
    000002d2: 	je	.Ltmp913 # Offset: 722
    000002d8: 	jmp	.Ltmp915 # Offset: 728
.Ltmp911:
    000002da: 	callq	__stack_chk_fail@PLT # Offset: 730
.Ltmp907:
    000002df: 	leaq	DATAat0x57008(%rip), %rdi
    000002e6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 742
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIj16custom_remainderIjLi4EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIj12and_constantIjLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 95
  State       : disassembled
  Address     : 0xb290
  Size        : 0x2e3
  MaxSize     : 0x2f0
  Offset      : 0xb290
  Section     : .text
  Orc Section : .local.text._Z13test_constantIj12and_constantIjLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB094:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp916 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	xorl	%r12d, %r12d
    00000051: 	movsd	init_value(%rip), %xmm3
    00000059: 	movl	%eax, 0x4(%rsp)
    0000005d: 	movl	%r14d, %eax
    00000060: 	movdqa	DATAat0x57ce0(%rip), %xmm2
    00000068: 	andl	$-0x4, %ebx
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000075: 	subl	$0x1, %eax
    00000078: 	shlq	$0x4, %rax
    0000007c: 	leaq	0x10(%r15,%rax), %r13
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp921:
    00000088: 	xorl	%eax, %eax
    0000008a: 	testl	%r14d, %r14d
    0000008d: 	jle	.Ltmp917 # Offset: 141
    00000093: 	cmpl	$0x2, 0x4(%rsp)
    00000098: 	jbe	.Ltmp918 # Offset: 152
    0000009e: 	movq	%r15, %rax
    000000a1: 	pxor	%xmm1, %xmm1
    000000a5: 	nopl	(%rax) # Size: 3
.Ltmp919:
    000000a8: 	movdqu	(%rax), %xmm0
    000000ac: 	addq	$0x10, %rax
    000000b0: 	pand	%xmm2, %xmm0
    000000b4: 	paddd	%xmm0, %xmm1
    000000b8: 	cmpq	%r13, %rax
    000000bb: 	jne	.Ltmp919 # Offset: 187
    000000bd: 	movdqa	%xmm1, %xmm0
    000000c1: 	movl	%ebx, %edx
    000000c3: 	psrldq	$0x8, %xmm0
    000000c8: 	paddd	%xmm0, %xmm1
    000000cc: 	movdqa	%xmm1, %xmm0
    000000d0: 	psrldq	$0x4, %xmm0
    000000d5: 	paddd	%xmm0, %xmm1
    000000d9: 	movd	%xmm1, %eax
    000000dd: 	cmpl	%r14d, %ebx
    000000e0: 	je	.Ltmp917 # Offset: 224
.Ltmp929:
    000000e2: 	movslq	%edx, %rdi
    000000e5: 	leaq	(,%rdi,4), %r9
    000000ed: 	movzbl	(%r15,%rdi,4), %edi
    000000f2: 	addl	%edi, %eax
    000000f4: 	leal	0x1(%rdx), %edi
    000000f7: 	cmpl	%edi, %r14d
    000000fa: 	jle	.Ltmp917 # Offset: 250
    000000fc: 	movzbl	0x4(%r15,%r9), %edi
    00000102: 	addl	$0x2, %edx
    00000105: 	addl	%edi, %eax
    00000107: 	cmpl	%edx, %r14d
    0000010a: 	jle	.Ltmp917 # Offset: 266
    0000010c: 	movzbl	0x8(%r15,%r9), %edx
    00000112: 	addl	%edx, %eax
.Ltmp917:
    00000114: 	cvttsd2si	%xmm3, %rdx
    00000119: 	movzbl	%dl, %edx
    0000011c: 	imull	$0x1f40, %edx, %edx
    00000122: 	cmpl	%eax, %edx
    00000124: 	je	.Ltmp920 # Offset: 292
    00000126: 	movl	current_test(%rip), %edx
    0000012c: 	movq	%rbp, %rsi
    0000012f: 	movl	$0x1, %edi
    00000134: 	xorl	%eax, %eax
    00000136: 	addl	$0x1, %r12d
    0000013a: 	callq	__printf_chk@PLT # Offset: 314
    0000013f: 	movl	iterations(%rip), %esi
    00000145: 	cmpl	%esi, %r12d
    00000148: 	jge	.Ltmp916 # Offset: 328
    0000014a: 	movsd	init_value(%rip), %xmm3
    00000152: 	movdqa	DATAat0x57ce0(%rip), %xmm2
    0000015a: 	jmp	.Ltmp921 # Offset: 346
    0000015f: 	nop # Size: 1
.Ltmp920:
    00000160: 	addl	$0x1, %r12d
    00000164: 	cmpl	%esi, %r12d
    00000167: 	jl	.Ltmp921 # Offset: 359
.Ltmp916:
    0000016d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000174: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000017b: 	subq	$0x20, %rax
    0000017f: 	cmpq	%rax, %rbx
    00000182: 	je	.Ltmp922 # Offset: 386
    00000188: 	movq	0x8(%rsp), %rax
    0000018d: 	leaq	0x10(%rbx), %rdi
    00000191: 	movq	%rdi, (%rbx)
    00000194: 	movq	(%rax), %rbp
    00000197: 	movq	0x8(%rax), %r12
    0000019b: 	movq	%rbp, %rax
    0000019e: 	addq	%r12, %rax
    000001a1: 	je	.Ltmp923 # Offset: 417
    000001a3: 	testq	%rbp, %rbp
    000001a6: 	je	.Ltmp924 # Offset: 422
.Ltmp923:
    000001ac: 	movq	%r12, 0x10(%rsp)
    000001b1: 	cmpq	$0xf, %r12
    000001b5: 	ja	.Ltmp925 # Offset: 437
    000001bb: 	cmpq	$0x1, %r12
    000001bf: 	jne	.Ltmp926 # Offset: 447
    000001c5: 	movzbl	(%rbp), %eax
    000001c9: 	movb	%al, 0x10(%rbx)
.Ltmp930:
    000001cc: 	movq	%r12, 0x8(%rbx)
    000001d0: 	movb	$0x0, (%rdi,%r12)
    000001d5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001dc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001e3: 	addq	$0x20, %rax
    000001e7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ee: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001f5: 	je	.Ltmp927 # Offset: 501
.Ltmp931:
    000001fb: 	movq	-0x20(%rax), %rbp
    000001ff: 	callq	clock@PLT # Offset: 511
    00000204: 	movq	%rax, end_time(%rip)
    0000020b: 	movq	0x18(%rsp), %rdx
    00000210: 	subq	%fs:0x28, %rdx
    00000219: 	jne	.Ltmp928 # Offset: 537
    0000021f: 	subq	start_time(%rip), %rax
    00000226: 	pxor	%xmm0, %xmm0
    0000022a: 	movq	%rbp, %rdi
    0000022d: 	cvtsi2sd	%rax, %xmm0
    00000232: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000023a: 	addq	$0x28, %rsp
    0000023e: 	popq	%rbx
    0000023f: 	popq	%rbp
    00000240: 	popq	%r12
    00000242: 	popq	%r13
    00000244: 	popq	%r14
    00000246: 	popq	%r15
    00000248: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 584
.Ltmp918:
    0000024d: 	xorl	%edx, %edx
    0000024f: 	xorl	%eax, %eax
    00000251: 	jmp	.Ltmp929 # Offset: 593
.Ltmp925:
    00000256: 	movq	%rbx, %rdi
    00000259: 	leaq	0x10(%rsp), %rsi
    0000025e: 	xorl	%edx, %edx
    00000260: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 608
    00000265: 	movq	%rax, (%rbx)
    00000268: 	movq	%rax, %rdi
    0000026b: 	movq	0x10(%rsp), %rax
    00000270: 	movq	%rax, 0x10(%rbx)
.Ltmp932:
    00000274: 	movq	%r12, %rdx
    00000277: 	movq	%rbp, %rsi
    0000027a: 	callq	memcpy@PLT # Offset: 634
    0000027f: 	movq	0x10(%rsp), %r12
    00000284: 	movq	(%rbx), %rdi
    00000287: 	jmp	.Ltmp930 # Offset: 647
.Ltmp922:
    0000028c: 	movq	0x8(%rsp), %rsi
    00000291: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000298: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 664
    0000029d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ab: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b2: 	jne	.Ltmp931 # Offset: 690
.Ltmp927:
    000002b8: 	movq	-0x8(%rdx), %rax
    000002bc: 	addq	$0x200, %rax
    000002c2: 	jmp	.Ltmp931 # Offset: 706
.Ltmp926:
    000002c7: 	testq	%r12, %r12
    000002ca: 	je	.Ltmp930 # Offset: 714
    000002d0: 	jmp	.Ltmp932 # Offset: 720
.Ltmp928:
    000002d2: 	callq	__stack_chk_fail@PLT # Offset: 722
.Ltmp924:
    000002d7: 	leaq	DATAat0x57008(%rip), %rdi
    000002de: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 734
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIj12and_constantIjLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1Ij22custom_divide_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 96
  State       : disassembled
  Address     : 0xb580
  Size        : 0x246
  MaxSize     : 0x250
  Offset      : 0xb580
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Ij22custom_divide_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB095:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movl	%edx, %ebx
    00000016: 	subq	$0x28, %rsp
    0000001a: 	movq	%rcx, 0x8(%rsp)
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x18(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	callq	clock@PLT # Offset: 47
    00000034: 	movl	iterations(%rip), %edi
    0000003a: 	movq	%rax, start_time(%rip)
    00000041: 	testl	%edi, %edi
    00000043: 	jle	.Ltmp933 # Offset: 67
    00000049: 	leal	-0x1(%r15), %eax
    0000004d: 	movsd	init_value(%rip), %xmm0
    00000055: 	xorl	%r13d, %r13d
    00000058: 	leaq	DATAat0x571d0(%rip), %r12
    0000005f: 	leaq	0x4(%rbp,%rax,4), %r14
    00000064: 	nopl	(%rax) # Size: 4
.Ltmp937:
    00000068: 	movq	%rbp, %rcx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp934 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp935:
    00000078: 	movl	(%rcx), %eax
    0000007a: 	xorl	%edx, %edx
    0000007c: 	addq	$0x4, %rcx
    00000080: 	divl	%ebx
    00000082: 	addl	%eax, %esi
    00000084: 	cmpq	%rcx, %r14
    00000087: 	jne	.Ltmp935 # Offset: 135
.Ltmp934:
    00000089: 	cvttsd2si	%xmm0, %rax
    0000008e: 	xorl	%edx, %edx
    00000090: 	divl	%ebx
    00000092: 	imull	$0x1f40, %eax, %eax
    00000098: 	cmpl	%esi, %eax
    0000009a: 	je	.Ltmp936 # Offset: 154
    0000009c: 	movl	current_test(%rip), %edx
    000000a2: 	movl	$0x1, %edi
    000000a7: 	movq	%r12, %rsi
    000000aa: 	xorl	%eax, %eax
    000000ac: 	addl	$0x1, %r13d
    000000b0: 	callq	__printf_chk@PLT # Offset: 176
    000000b5: 	movl	iterations(%rip), %edi
    000000bb: 	cmpl	%edi, %r13d
    000000be: 	jge	.Ltmp933 # Offset: 190
    000000c0: 	movsd	init_value(%rip), %xmm0
    000000c8: 	jmp	.Ltmp937 # Offset: 200
    000000ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp936:
    000000d0: 	addl	$0x1, %r13d
    000000d4: 	cmpl	%edi, %r13d
    000000d7: 	jl	.Ltmp937 # Offset: 215
.Ltmp933:
    000000d9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000e0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000e7: 	subq	$0x20, %rax
    000000eb: 	cmpq	%rax, %rbx
    000000ee: 	je	.Ltmp938 # Offset: 238
    000000f4: 	movq	0x8(%rsp), %rax
    000000f9: 	leaq	0x10(%rbx), %rdi
    000000fd: 	movq	%rdi, (%rbx)
    00000100: 	movq	(%rax), %rbp
    00000103: 	movq	0x8(%rax), %r12
    00000107: 	movq	%rbp, %rax
    0000010a: 	addq	%r12, %rax
    0000010d: 	je	.Ltmp939 # Offset: 269
    0000010f: 	testq	%rbp, %rbp
    00000112: 	je	.Ltmp940 # Offset: 274
.Ltmp939:
    00000118: 	movq	%r12, 0x10(%rsp)
    0000011d: 	cmpq	$0xf, %r12
    00000121: 	ja	.Ltmp941 # Offset: 289
    00000127: 	cmpq	$0x1, %r12
    0000012b: 	jne	.Ltmp942 # Offset: 299
    00000131: 	movzbl	(%rbp), %eax
    00000135: 	movb	%al, 0x10(%rbx)
.Ltmp945:
    00000138: 	movq	%r12, 0x8(%rbx)
    0000013c: 	movb	$0x0, (%rdi,%r12)
    00000141: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000148: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000014f: 	addq	$0x20, %rax
    00000153: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000015a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000161: 	je	.Ltmp943 # Offset: 353
.Ltmp946:
    00000167: 	movq	-0x20(%rax), %rbp
    0000016b: 	callq	clock@PLT # Offset: 363
    00000170: 	movq	%rax, end_time(%rip)
    00000177: 	movq	0x18(%rsp), %rdx
    0000017c: 	subq	%fs:0x28, %rdx
    00000185: 	jne	.Ltmp944 # Offset: 389
    0000018b: 	subq	start_time(%rip), %rax
    00000192: 	pxor	%xmm0, %xmm0
    00000196: 	movq	%rbp, %rdi
    00000199: 	cvtsi2sd	%rax, %xmm0
    0000019e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001a6: 	addq	$0x28, %rsp
    000001aa: 	popq	%rbx
    000001ab: 	popq	%rbp
    000001ac: 	popq	%r12
    000001ae: 	popq	%r13
    000001b0: 	popq	%r14
    000001b2: 	popq	%r15
    000001b4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 436
.Ltmp941:
    000001b9: 	movq	%rbx, %rdi
    000001bc: 	leaq	0x10(%rsp), %rsi
    000001c1: 	xorl	%edx, %edx
    000001c3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 451
    000001c8: 	movq	%rax, (%rbx)
    000001cb: 	movq	%rax, %rdi
    000001ce: 	movq	0x10(%rsp), %rax
    000001d3: 	movq	%rax, 0x10(%rbx)
.Ltmp947:
    000001d7: 	movq	%r12, %rdx
    000001da: 	movq	%rbp, %rsi
    000001dd: 	callq	memcpy@PLT # Offset: 477
    000001e2: 	movq	0x10(%rsp), %r12
    000001e7: 	movq	(%rbx), %rdi
    000001ea: 	jmp	.Ltmp945 # Offset: 490
.Ltmp938:
    000001ef: 	movq	0x8(%rsp), %rsi
    000001f4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001fb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 507
    00000200: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000207: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000020e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000215: 	jne	.Ltmp946 # Offset: 533
.Ltmp943:
    0000021b: 	movq	-0x8(%rdx), %rax
    0000021f: 	addq	$0x200, %rax
    00000225: 	jmp	.Ltmp946 # Offset: 549
.Ltmp942:
    0000022a: 	testq	%r12, %r12
    0000022d: 	je	.Ltmp945 # Offset: 557
    00000233: 	jmp	.Ltmp947 # Offset: 563
.Ltmp944:
    00000235: 	callq	__stack_chk_fail@PLT # Offset: 565
.Ltmp940:
    0000023a: 	leaq	DATAat0x57008(%rip), %rdi
    00000241: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 577
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Ij22custom_divide_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1Is22custom_divide_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 97
  State       : disassembled
  Address     : 0xb7d0
  Size        : 0x24e
  MaxSize     : 0x250
  Offset      : 0xb7d0
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Is22custom_divide_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB096:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%edx, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x28, %rsp
    0000001b: 	movq	%rcx, 0x8(%rsp)
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x18(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movl	iterations(%rip), %edi
    0000003b: 	movq	%rax, start_time(%rip)
    00000042: 	testl	%edi, %edi
    00000044: 	jle	.Ltmp948 # Offset: 68
    0000004a: 	leal	-0x1(%r15), %eax
    0000004e: 	movsd	init_value(%rip), %xmm0
    00000056: 	movswl	%r13w, %r13d
    0000005a: 	xorl	%r12d, %r12d
    0000005d: 	leaq	0x2(%rbx,%rax,2), %r14
    00000062: 	leaq	DATAat0x571d0(%rip), %rbp
    00000069: 	nopl	(%rax) # Size: 7
.Ltmp952:
    00000070: 	movq	%rbx, %rcx
    00000073: 	xorl	%esi, %esi
    00000075: 	testl	%r15d, %r15d
    00000078: 	jle	.Ltmp949 # Offset: 120
    0000007a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp950:
    00000080: 	movswl	(%rcx), %eax
    00000083: 	addq	$0x2, %rcx
    00000087: 	cltd
    00000088: 	idivl	%r13d
    0000008b: 	addl	%eax, %esi
    0000008d: 	cmpq	%rcx, %r14
    00000090: 	jne	.Ltmp950 # Offset: 144
.Ltmp949:
    00000092: 	cvttsd2si	%xmm0, %eax
    00000096: 	cwtl
    00000097: 	cltd
    00000098: 	idivl	%r13d
    0000009b: 	imulw	$0x1f40, %ax, %ax
    000000a0: 	cmpw	%si, %ax
    000000a3: 	je	.Ltmp951 # Offset: 163
    000000a5: 	movl	current_test(%rip), %edx
    000000ab: 	movl	$0x1, %edi
    000000b0: 	movq	%rbp, %rsi
    000000b3: 	xorl	%eax, %eax
    000000b5: 	addl	$0x1, %r12d
    000000b9: 	callq	__printf_chk@PLT # Offset: 185
    000000be: 	movl	iterations(%rip), %edi
    000000c4: 	cmpl	%edi, %r12d
    000000c7: 	jge	.Ltmp948 # Offset: 199
    000000c9: 	movsd	init_value(%rip), %xmm0
    000000d1: 	jmp	.Ltmp952 # Offset: 209
    000000d3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp951:
    000000d8: 	addl	$0x1, %r12d
    000000dc: 	cmpl	%edi, %r12d
    000000df: 	jl	.Ltmp952 # Offset: 223
.Ltmp948:
    000000e1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000e8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000ef: 	subq	$0x20, %rax
    000000f3: 	cmpq	%rax, %rbx
    000000f6: 	je	.Ltmp953 # Offset: 246
    000000fc: 	movq	0x8(%rsp), %rax
    00000101: 	leaq	0x10(%rbx), %rdi
    00000105: 	movq	%rdi, (%rbx)
    00000108: 	movq	(%rax), %rbp
    0000010b: 	movq	0x8(%rax), %r12
    0000010f: 	movq	%rbp, %rax
    00000112: 	addq	%r12, %rax
    00000115: 	je	.Ltmp954 # Offset: 277
    00000117: 	testq	%rbp, %rbp
    0000011a: 	je	.Ltmp955 # Offset: 282
.Ltmp954:
    00000120: 	movq	%r12, 0x10(%rsp)
    00000125: 	cmpq	$0xf, %r12
    00000129: 	ja	.Ltmp956 # Offset: 297
    0000012f: 	cmpq	$0x1, %r12
    00000133: 	jne	.Ltmp957 # Offset: 307
    00000139: 	movzbl	(%rbp), %eax
    0000013d: 	movb	%al, 0x10(%rbx)
.Ltmp960:
    00000140: 	movq	%r12, 0x8(%rbx)
    00000144: 	movb	$0x0, (%rdi,%r12)
    00000149: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000150: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000157: 	addq	$0x20, %rax
    0000015b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000162: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000169: 	je	.Ltmp958 # Offset: 361
.Ltmp961:
    0000016f: 	movq	-0x20(%rax), %rbp
    00000173: 	callq	clock@PLT # Offset: 371
    00000178: 	movq	%rax, end_time(%rip)
    0000017f: 	movq	0x18(%rsp), %rdx
    00000184: 	subq	%fs:0x28, %rdx
    0000018d: 	jne	.Ltmp959 # Offset: 397
    00000193: 	subq	start_time(%rip), %rax
    0000019a: 	pxor	%xmm0, %xmm0
    0000019e: 	movq	%rbp, %rdi
    000001a1: 	cvtsi2sd	%rax, %xmm0
    000001a6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001ae: 	addq	$0x28, %rsp
    000001b2: 	popq	%rbx
    000001b3: 	popq	%rbp
    000001b4: 	popq	%r12
    000001b6: 	popq	%r13
    000001b8: 	popq	%r14
    000001ba: 	popq	%r15
    000001bc: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 444
.Ltmp956:
    000001c1: 	movq	%rbx, %rdi
    000001c4: 	leaq	0x10(%rsp), %rsi
    000001c9: 	xorl	%edx, %edx
    000001cb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 459
    000001d0: 	movq	%rax, (%rbx)
    000001d3: 	movq	%rax, %rdi
    000001d6: 	movq	0x10(%rsp), %rax
    000001db: 	movq	%rax, 0x10(%rbx)
.Ltmp962:
    000001df: 	movq	%r12, %rdx
    000001e2: 	movq	%rbp, %rsi
    000001e5: 	callq	memcpy@PLT # Offset: 485
    000001ea: 	movq	0x10(%rsp), %r12
    000001ef: 	movq	(%rbx), %rdi
    000001f2: 	jmp	.Ltmp960 # Offset: 498
.Ltmp953:
    000001f7: 	movq	0x8(%rsp), %rsi
    000001fc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000203: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 515
    00000208: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000020f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000216: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000021d: 	jne	.Ltmp961 # Offset: 541
.Ltmp958:
    00000223: 	movq	-0x8(%rdx), %rax
    00000227: 	addq	$0x200, %rax
    0000022d: 	jmp	.Ltmp961 # Offset: 557
.Ltmp957:
    00000232: 	testq	%r12, %r12
    00000235: 	je	.Ltmp960 # Offset: 565
    0000023b: 	jmp	.Ltmp962 # Offset: 571
.Ltmp959:
    0000023d: 	callq	__stack_chk_fail@PLT # Offset: 573
.Ltmp955:
    00000242: 	leaq	DATAat0x57008(%rip), %rdi
    00000249: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 585
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Is22custom_divide_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1Il25custom_remainder_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 98
  State       : disassembled
  Address     : 0xba20
  Size        : 0x256
  MaxSize     : 0x260
  Offset      : 0xba20
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Il25custom_remainder_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB097:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdx, %rbx
    00000017: 	subq	$0x28, %rsp
    0000001b: 	movq	%rcx, 0x8(%rsp)
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x18(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movl	iterations(%rip), %edi
    0000003b: 	movq	%rax, start_time(%rip)
    00000042: 	testl	%edi, %edi
    00000044: 	jle	.Ltmp963 # Offset: 68
    0000004a: 	leal	-0x1(%r15), %eax
    0000004e: 	movslq	%ebx, %rbx
    00000051: 	leaq	DATAat0x571d0(%rip), %r12
    00000058: 	xorl	%r13d, %r13d
    0000005b: 	movsd	init_value(%rip), %xmm0
    00000063: 	leaq	0x8(%rbp,%rax,8), %r14
    00000068: 	nopl	(%rax,%rax) # Size: 8
.Ltmp967:
    00000070: 	movq	%rbp, %rcx
    00000073: 	xorl	%esi, %esi
    00000075: 	testl	%r15d, %r15d
    00000078: 	jle	.Ltmp964 # Offset: 120
    0000007a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp965:
    00000080: 	movq	(%rcx), %rax
    00000083: 	addq	$0x8, %rcx
    00000087: 	cqto
    00000089: 	idivq	%rbx
    0000008c: 	addq	%rdx, %rsi
    0000008f: 	cmpq	%rcx, %r14
    00000092: 	jne	.Ltmp965 # Offset: 146
.Ltmp964:
    00000094: 	cvttsd2si	%xmm0, %rax
    00000099: 	cqto
    0000009b: 	idivq	%rbx
    0000009e: 	imulq	$0x1f40, %rdx, %rdx
    000000a5: 	cmpq	%rsi, %rdx
    000000a8: 	je	.Ltmp966 # Offset: 168
    000000aa: 	movl	current_test(%rip), %edx
    000000b0: 	movl	$0x1, %edi
    000000b5: 	movq	%r12, %rsi
    000000b8: 	xorl	%eax, %eax
    000000ba: 	addl	$0x1, %r13d
    000000be: 	callq	__printf_chk@PLT # Offset: 190
    000000c3: 	movl	iterations(%rip), %edi
    000000c9: 	cmpl	%edi, %r13d
    000000cc: 	jge	.Ltmp963 # Offset: 204
    000000ce: 	movsd	init_value(%rip), %xmm0
    000000d6: 	jmp	.Ltmp967 # Offset: 214
    000000d8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp966:
    000000e0: 	addl	$0x1, %r13d
    000000e4: 	cmpl	%edi, %r13d
    000000e7: 	jl	.Ltmp967 # Offset: 231
.Ltmp963:
    000000e9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000f0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000f7: 	subq	$0x20, %rax
    000000fb: 	cmpq	%rax, %rbx
    000000fe: 	je	.Ltmp968 # Offset: 254
    00000104: 	movq	0x8(%rsp), %rax
    00000109: 	leaq	0x10(%rbx), %rdi
    0000010d: 	movq	%rdi, (%rbx)
    00000110: 	movq	(%rax), %rbp
    00000113: 	movq	0x8(%rax), %r12
    00000117: 	movq	%rbp, %rax
    0000011a: 	addq	%r12, %rax
    0000011d: 	je	.Ltmp969 # Offset: 285
    0000011f: 	testq	%rbp, %rbp
    00000122: 	je	.Ltmp970 # Offset: 290
.Ltmp969:
    00000128: 	movq	%r12, 0x10(%rsp)
    0000012d: 	cmpq	$0xf, %r12
    00000131: 	ja	.Ltmp971 # Offset: 305
    00000137: 	cmpq	$0x1, %r12
    0000013b: 	jne	.Ltmp972 # Offset: 315
    00000141: 	movzbl	(%rbp), %eax
    00000145: 	movb	%al, 0x10(%rbx)
.Ltmp975:
    00000148: 	movq	%r12, 0x8(%rbx)
    0000014c: 	movb	$0x0, (%rdi,%r12)
    00000151: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000158: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000015f: 	addq	$0x20, %rax
    00000163: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000016a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000171: 	je	.Ltmp973 # Offset: 369
.Ltmp976:
    00000177: 	movq	-0x20(%rax), %rbp
    0000017b: 	callq	clock@PLT # Offset: 379
    00000180: 	movq	%rax, end_time(%rip)
    00000187: 	movq	0x18(%rsp), %rdx
    0000018c: 	subq	%fs:0x28, %rdx
    00000195: 	jne	.Ltmp974 # Offset: 405
    0000019b: 	subq	start_time(%rip), %rax
    000001a2: 	pxor	%xmm0, %xmm0
    000001a6: 	movq	%rbp, %rdi
    000001a9: 	cvtsi2sd	%rax, %xmm0
    000001ae: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001b6: 	addq	$0x28, %rsp
    000001ba: 	popq	%rbx
    000001bb: 	popq	%rbp
    000001bc: 	popq	%r12
    000001be: 	popq	%r13
    000001c0: 	popq	%r14
    000001c2: 	popq	%r15
    000001c4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 452
.Ltmp971:
    000001c9: 	movq	%rbx, %rdi
    000001cc: 	leaq	0x10(%rsp), %rsi
    000001d1: 	xorl	%edx, %edx
    000001d3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 467
    000001d8: 	movq	%rax, (%rbx)
    000001db: 	movq	%rax, %rdi
    000001de: 	movq	0x10(%rsp), %rax
    000001e3: 	movq	%rax, 0x10(%rbx)
.Ltmp977:
    000001e7: 	movq	%r12, %rdx
    000001ea: 	movq	%rbp, %rsi
    000001ed: 	callq	memcpy@PLT # Offset: 493
    000001f2: 	movq	0x10(%rsp), %r12
    000001f7: 	movq	(%rbx), %rdi
    000001fa: 	jmp	.Ltmp975 # Offset: 506
.Ltmp968:
    000001ff: 	movq	0x8(%rsp), %rsi
    00000204: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000020b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 523
    00000210: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000217: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000021e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000225: 	jne	.Ltmp976 # Offset: 549
.Ltmp973:
    0000022b: 	movq	-0x8(%rdx), %rax
    0000022f: 	addq	$0x200, %rax
    00000235: 	jmp	.Ltmp976 # Offset: 565
.Ltmp972:
    0000023a: 	testq	%r12, %r12
    0000023d: 	je	.Ltmp975 # Offset: 573
    00000243: 	jmp	.Ltmp977 # Offset: 579
.Ltmp974:
    00000245: 	callq	__stack_chk_fail@PLT # Offset: 581
.Ltmp970:
    0000024a: 	leaq	DATAat0x57008(%rip), %rdi
    00000251: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 593
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Il25custom_remainder_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIj24shift_divide_toward_zeroIjLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 99
  State       : disassembled
  Address     : 0xbc80
  Size        : 0x2e3
  MaxSize     : 0x2f0
  Offset      : 0xbc80
  Section     : .text
  Orc Section : .local.text._Z13test_constantIj24shift_divide_toward_zeroIjLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB098:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp978 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r14d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm2
    00000067: 	andl	$-0x4, %ebx
    0000006a: 	shrl	$0x2, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r15,%rax), %r13
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp983:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r14d, %r14d
    00000085: 	jle	.Ltmp979 # Offset: 133
    0000008b: 	cmpl	$0x2, 0x4(%rsp)
    00000090: 	jbe	.Ltmp980 # Offset: 144
    00000096: 	movq	%r15, %rax
    00000099: 	pxor	%xmm1, %xmm1
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp981:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	psrld	$0x3, %xmm0
    000000ad: 	paddd	%xmm0, %xmm1
    000000b1: 	cmpq	%r13, %rax
    000000b4: 	jne	.Ltmp981 # Offset: 180
    000000b6: 	movdqa	%xmm1, %xmm0
    000000ba: 	movl	%ebx, %edx
    000000bc: 	psrldq	$0x8, %xmm0
    000000c1: 	paddd	%xmm0, %xmm1
    000000c5: 	movdqa	%xmm1, %xmm0
    000000c9: 	psrldq	$0x4, %xmm0
    000000ce: 	paddd	%xmm0, %xmm1
    000000d2: 	movd	%xmm1, %eax
    000000d6: 	cmpl	%r14d, %ebx
    000000d9: 	je	.Ltmp979 # Offset: 217
.Ltmp991:
    000000db: 	movslq	%edx, %rdi
    000000de: 	leaq	(,%rdi,4), %r9
    000000e6: 	movl	(%r15,%rdi,4), %edi
    000000ea: 	shrl	$0x3, %edi
    000000ed: 	addl	%edi, %eax
    000000ef: 	leal	0x1(%rdx), %edi
    000000f2: 	cmpl	%edi, %r14d
    000000f5: 	jle	.Ltmp979 # Offset: 245
    000000f7: 	movl	0x4(%r15,%r9), %edi
    000000fc: 	addl	$0x2, %edx
    000000ff: 	shrl	$0x3, %edi
    00000102: 	addl	%edi, %eax
    00000104: 	cmpl	%edx, %r14d
    00000107: 	jle	.Ltmp979 # Offset: 263
    00000109: 	movl	0x8(%r15,%r9), %edx
    0000010e: 	shrl	$0x3, %edx
    00000111: 	addl	%edx, %eax
.Ltmp979:
    00000113: 	cvttsd2si	%xmm2, %rdx
    00000118: 	shrl	$0x3, %edx
    0000011b: 	imull	$0x1f40, %edx, %edx
    00000121: 	cmpl	%eax, %edx
    00000123: 	je	.Ltmp982 # Offset: 291
    00000125: 	movl	current_test(%rip), %edx
    0000012b: 	movq	%rbp, %rsi
    0000012e: 	movl	$0x1, %edi
    00000133: 	xorl	%eax, %eax
    00000135: 	addl	$0x1, %r12d
    00000139: 	callq	__printf_chk@PLT # Offset: 313
    0000013e: 	movl	iterations(%rip), %esi
    00000144: 	cmpl	%esi, %r12d
    00000147: 	jge	.Ltmp978 # Offset: 327
    00000149: 	movsd	init_value(%rip), %xmm2
    00000151: 	jmp	.Ltmp983 # Offset: 337
    00000156: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp982:
    00000160: 	addl	$0x1, %r12d
    00000164: 	cmpl	%esi, %r12d
    00000167: 	jl	.Ltmp983 # Offset: 359
.Ltmp978:
    0000016d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000174: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000017b: 	subq	$0x20, %rax
    0000017f: 	cmpq	%rax, %rbx
    00000182: 	je	.Ltmp984 # Offset: 386
    00000188: 	movq	0x8(%rsp), %rax
    0000018d: 	leaq	0x10(%rbx), %rdi
    00000191: 	movq	%rdi, (%rbx)
    00000194: 	movq	(%rax), %rbp
    00000197: 	movq	0x8(%rax), %r12
    0000019b: 	movq	%rbp, %rax
    0000019e: 	addq	%r12, %rax
    000001a1: 	je	.Ltmp985 # Offset: 417
    000001a3: 	testq	%rbp, %rbp
    000001a6: 	je	.Ltmp986 # Offset: 422
.Ltmp985:
    000001ac: 	movq	%r12, 0x10(%rsp)
    000001b1: 	cmpq	$0xf, %r12
    000001b5: 	ja	.Ltmp987 # Offset: 437
    000001bb: 	cmpq	$0x1, %r12
    000001bf: 	jne	.Ltmp988 # Offset: 447
    000001c5: 	movzbl	(%rbp), %eax
    000001c9: 	movb	%al, 0x10(%rbx)
.Ltmp992:
    000001cc: 	movq	%r12, 0x8(%rbx)
    000001d0: 	movb	$0x0, (%rdi,%r12)
    000001d5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001dc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001e3: 	addq	$0x20, %rax
    000001e7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ee: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001f5: 	je	.Ltmp989 # Offset: 501
.Ltmp993:
    000001fb: 	movq	-0x20(%rax), %rbp
    000001ff: 	callq	clock@PLT # Offset: 511
    00000204: 	movq	%rax, end_time(%rip)
    0000020b: 	movq	0x18(%rsp), %rdx
    00000210: 	subq	%fs:0x28, %rdx
    00000219: 	jne	.Ltmp990 # Offset: 537
    0000021f: 	subq	start_time(%rip), %rax
    00000226: 	pxor	%xmm0, %xmm0
    0000022a: 	movq	%rbp, %rdi
    0000022d: 	cvtsi2sd	%rax, %xmm0
    00000232: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000023a: 	addq	$0x28, %rsp
    0000023e: 	popq	%rbx
    0000023f: 	popq	%rbp
    00000240: 	popq	%r12
    00000242: 	popq	%r13
    00000244: 	popq	%r14
    00000246: 	popq	%r15
    00000248: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 584
.Ltmp980:
    0000024d: 	xorl	%edx, %edx
    0000024f: 	xorl	%eax, %eax
    00000251: 	jmp	.Ltmp991 # Offset: 593
.Ltmp987:
    00000256: 	movq	%rbx, %rdi
    00000259: 	leaq	0x10(%rsp), %rsi
    0000025e: 	xorl	%edx, %edx
    00000260: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 608
    00000265: 	movq	%rax, (%rbx)
    00000268: 	movq	%rax, %rdi
    0000026b: 	movq	0x10(%rsp), %rax
    00000270: 	movq	%rax, 0x10(%rbx)
.Ltmp994:
    00000274: 	movq	%r12, %rdx
    00000277: 	movq	%rbp, %rsi
    0000027a: 	callq	memcpy@PLT # Offset: 634
    0000027f: 	movq	0x10(%rsp), %r12
    00000284: 	movq	(%rbx), %rdi
    00000287: 	jmp	.Ltmp992 # Offset: 647
.Ltmp984:
    0000028c: 	movq	0x8(%rsp), %rsi
    00000291: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000298: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 664
    0000029d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ab: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b2: 	jne	.Ltmp993 # Offset: 690
.Ltmp989:
    000002b8: 	movq	-0x8(%rdx), %rax
    000002bc: 	addq	$0x200, %rax
    000002c2: 	jmp	.Ltmp993 # Offset: 706
.Ltmp988:
    000002c7: 	testq	%r12, %r12
    000002ca: 	je	.Ltmp992 # Offset: 714
    000002d0: 	jmp	.Ltmp994 # Offset: 720
.Ltmp990:
    000002d2: 	callq	__stack_chk_fail@PLT # Offset: 722
.Ltmp986:
    000002d7: 	leaq	DATAat0x57008(%rip), %rdi
    000002de: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 734
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIj24shift_divide_toward_zeroIjLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIj11shift_rightIjLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 100
  State       : disassembled
  Address     : 0xbf70
  Size        : 0x2e3
  MaxSize     : 0x2f0
  Offset      : 0xbf70
  Section     : .text
  Orc Section : .local.text._Z13test_constantIj11shift_rightIjLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB099:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp995 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r14d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm2
    00000067: 	andl	$-0x4, %ebx
    0000006a: 	shrl	$0x2, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r15,%rax), %r13
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp1000:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r14d, %r14d
    00000085: 	jle	.Ltmp996 # Offset: 133
    0000008b: 	cmpl	$0x2, 0x4(%rsp)
    00000090: 	jbe	.Ltmp997 # Offset: 144
    00000096: 	movq	%r15, %rax
    00000099: 	pxor	%xmm1, %xmm1
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp998:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	psrld	$0x6, %xmm0
    000000ad: 	paddd	%xmm0, %xmm1
    000000b1: 	cmpq	%r13, %rax
    000000b4: 	jne	.Ltmp998 # Offset: 180
    000000b6: 	movdqa	%xmm1, %xmm0
    000000ba: 	movl	%ebx, %edx
    000000bc: 	psrldq	$0x8, %xmm0
    000000c1: 	paddd	%xmm0, %xmm1
    000000c5: 	movdqa	%xmm1, %xmm0
    000000c9: 	psrldq	$0x4, %xmm0
    000000ce: 	paddd	%xmm0, %xmm1
    000000d2: 	movd	%xmm1, %eax
    000000d6: 	cmpl	%r14d, %ebx
    000000d9: 	je	.Ltmp996 # Offset: 217
.Ltmp1008:
    000000db: 	movslq	%edx, %rdi
    000000de: 	leaq	(,%rdi,4), %r9
    000000e6: 	movl	(%r15,%rdi,4), %edi
    000000ea: 	shrl	$0x6, %edi
    000000ed: 	addl	%edi, %eax
    000000ef: 	leal	0x1(%rdx), %edi
    000000f2: 	cmpl	%edi, %r14d
    000000f5: 	jle	.Ltmp996 # Offset: 245
    000000f7: 	movl	0x4(%r15,%r9), %edi
    000000fc: 	addl	$0x2, %edx
    000000ff: 	shrl	$0x6, %edi
    00000102: 	addl	%edi, %eax
    00000104: 	cmpl	%edx, %r14d
    00000107: 	jle	.Ltmp996 # Offset: 263
    00000109: 	movl	0x8(%r15,%r9), %edx
    0000010e: 	shrl	$0x6, %edx
    00000111: 	addl	%edx, %eax
.Ltmp996:
    00000113: 	cvttsd2si	%xmm2, %rdx
    00000118: 	shrl	$0x6, %edx
    0000011b: 	imull	$0x1f40, %edx, %edx
    00000121: 	cmpl	%eax, %edx
    00000123: 	je	.Ltmp999 # Offset: 291
    00000125: 	movl	current_test(%rip), %edx
    0000012b: 	movq	%rbp, %rsi
    0000012e: 	movl	$0x1, %edi
    00000133: 	xorl	%eax, %eax
    00000135: 	addl	$0x1, %r12d
    00000139: 	callq	__printf_chk@PLT # Offset: 313
    0000013e: 	movl	iterations(%rip), %esi
    00000144: 	cmpl	%esi, %r12d
    00000147: 	jge	.Ltmp995 # Offset: 327
    00000149: 	movsd	init_value(%rip), %xmm2
    00000151: 	jmp	.Ltmp1000 # Offset: 337
    00000156: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp999:
    00000160: 	addl	$0x1, %r12d
    00000164: 	cmpl	%esi, %r12d
    00000167: 	jl	.Ltmp1000 # Offset: 359
.Ltmp995:
    0000016d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000174: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000017b: 	subq	$0x20, %rax
    0000017f: 	cmpq	%rax, %rbx
    00000182: 	je	.Ltmp1001 # Offset: 386
    00000188: 	movq	0x8(%rsp), %rax
    0000018d: 	leaq	0x10(%rbx), %rdi
    00000191: 	movq	%rdi, (%rbx)
    00000194: 	movq	(%rax), %rbp
    00000197: 	movq	0x8(%rax), %r12
    0000019b: 	movq	%rbp, %rax
    0000019e: 	addq	%r12, %rax
    000001a1: 	je	.Ltmp1002 # Offset: 417
    000001a3: 	testq	%rbp, %rbp
    000001a6: 	je	.Ltmp1003 # Offset: 422
.Ltmp1002:
    000001ac: 	movq	%r12, 0x10(%rsp)
    000001b1: 	cmpq	$0xf, %r12
    000001b5: 	ja	.Ltmp1004 # Offset: 437
    000001bb: 	cmpq	$0x1, %r12
    000001bf: 	jne	.Ltmp1005 # Offset: 447
    000001c5: 	movzbl	(%rbp), %eax
    000001c9: 	movb	%al, 0x10(%rbx)
.Ltmp1009:
    000001cc: 	movq	%r12, 0x8(%rbx)
    000001d0: 	movb	$0x0, (%rdi,%r12)
    000001d5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001dc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001e3: 	addq	$0x20, %rax
    000001e7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ee: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001f5: 	je	.Ltmp1006 # Offset: 501
.Ltmp1010:
    000001fb: 	movq	-0x20(%rax), %rbp
    000001ff: 	callq	clock@PLT # Offset: 511
    00000204: 	movq	%rax, end_time(%rip)
    0000020b: 	movq	0x18(%rsp), %rdx
    00000210: 	subq	%fs:0x28, %rdx
    00000219: 	jne	.Ltmp1007 # Offset: 537
    0000021f: 	subq	start_time(%rip), %rax
    00000226: 	pxor	%xmm0, %xmm0
    0000022a: 	movq	%rbp, %rdi
    0000022d: 	cvtsi2sd	%rax, %xmm0
    00000232: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000023a: 	addq	$0x28, %rsp
    0000023e: 	popq	%rbx
    0000023f: 	popq	%rbp
    00000240: 	popq	%r12
    00000242: 	popq	%r13
    00000244: 	popq	%r14
    00000246: 	popq	%r15
    00000248: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 584
.Ltmp997:
    0000024d: 	xorl	%edx, %edx
    0000024f: 	xorl	%eax, %eax
    00000251: 	jmp	.Ltmp1008 # Offset: 593
.Ltmp1004:
    00000256: 	movq	%rbx, %rdi
    00000259: 	leaq	0x10(%rsp), %rsi
    0000025e: 	xorl	%edx, %edx
    00000260: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 608
    00000265: 	movq	%rax, (%rbx)
    00000268: 	movq	%rax, %rdi
    0000026b: 	movq	0x10(%rsp), %rax
    00000270: 	movq	%rax, 0x10(%rbx)
.Ltmp1011:
    00000274: 	movq	%r12, %rdx
    00000277: 	movq	%rbp, %rsi
    0000027a: 	callq	memcpy@PLT # Offset: 634
    0000027f: 	movq	0x10(%rsp), %r12
    00000284: 	movq	(%rbx), %rdi
    00000287: 	jmp	.Ltmp1009 # Offset: 647
.Ltmp1001:
    0000028c: 	movq	0x8(%rsp), %rsi
    00000291: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000298: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 664
    0000029d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ab: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b2: 	jne	.Ltmp1010 # Offset: 690
.Ltmp1006:
    000002b8: 	movq	-0x8(%rdx), %rax
    000002bc: 	addq	$0x200, %rax
    000002c2: 	jmp	.Ltmp1010 # Offset: 706
.Ltmp1005:
    000002c7: 	testq	%r12, %r12
    000002ca: 	je	.Ltmp1009 # Offset: 714
    000002d0: 	jmp	.Ltmp1011 # Offset: 720
.Ltmp1007:
    000002d2: 	callq	__stack_chk_fail@PLT # Offset: 722
.Ltmp1003:
    000002d7: 	leaq	DATAat0x57008(%rip), %rdi
    000002de: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 734
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIj11shift_rightIjLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIj13and_remainderIjLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 101
  State       : disassembled
  Address     : 0xc260
  Size        : 0x2eb
  MaxSize     : 0x2f0
  Offset      : 0xc260
  Section     : .text
  Orc Section : .local.text._Z13test_constantIj13and_remainderIjLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0100:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1012 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	xorl	%r12d, %r12d
    00000051: 	movsd	init_value(%rip), %xmm3
    00000059: 	movl	%eax, 0x4(%rsp)
    0000005d: 	movl	%r14d, %eax
    00000060: 	movdqa	DATAat0x57cf0(%rip), %xmm2
    00000068: 	andl	$-0x4, %ebx
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000075: 	subl	$0x1, %eax
    00000078: 	shlq	$0x4, %rax
    0000007c: 	leaq	0x10(%r15,%rax), %r13
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp1017:
    00000088: 	xorl	%eax, %eax
    0000008a: 	testl	%r14d, %r14d
    0000008d: 	jle	.Ltmp1013 # Offset: 141
    00000093: 	cmpl	$0x2, 0x4(%rsp)
    00000098: 	jbe	.Ltmp1014 # Offset: 152
    0000009e: 	movq	%r15, %rax
    000000a1: 	pxor	%xmm1, %xmm1
    000000a5: 	nopl	(%rax) # Size: 3
.Ltmp1015:
    000000a8: 	movdqu	(%rax), %xmm0
    000000ac: 	addq	$0x10, %rax
    000000b0: 	pand	%xmm2, %xmm0
    000000b4: 	paddd	%xmm0, %xmm1
    000000b8: 	cmpq	%r13, %rax
    000000bb: 	jne	.Ltmp1015 # Offset: 187
    000000bd: 	movdqa	%xmm1, %xmm0
    000000c1: 	movl	%ebx, %edx
    000000c3: 	psrldq	$0x8, %xmm0
    000000c8: 	paddd	%xmm0, %xmm1
    000000cc: 	movdqa	%xmm1, %xmm0
    000000d0: 	psrldq	$0x4, %xmm0
    000000d5: 	paddd	%xmm0, %xmm1
    000000d9: 	movd	%xmm1, %eax
    000000dd: 	cmpl	%r14d, %ebx
    000000e0: 	je	.Ltmp1013 # Offset: 224
.Ltmp1025:
    000000e2: 	movslq	%edx, %rdi
    000000e5: 	leaq	(,%rdi,4), %r9
    000000ed: 	movl	(%r15,%rdi,4), %edi
    000000f1: 	andl	$0x7f, %edi
    000000f4: 	addl	%edi, %eax
    000000f6: 	leal	0x1(%rdx), %edi
    000000f9: 	cmpl	%edi, %r14d
    000000fc: 	jle	.Ltmp1013 # Offset: 252
    000000fe: 	movl	0x4(%r15,%r9), %edi
    00000103: 	addl	$0x2, %edx
    00000106: 	andl	$0x7f, %edi
    00000109: 	addl	%edi, %eax
    0000010b: 	cmpl	%edx, %r14d
    0000010e: 	jle	.Ltmp1013 # Offset: 270
    00000110: 	movl	0x8(%r15,%r9), %edx
    00000115: 	andl	$0x7f, %edx
    00000118: 	addl	%edx, %eax
.Ltmp1013:
    0000011a: 	cvttsd2si	%xmm3, %rdx
    0000011f: 	andl	$0x7f, %edx
    00000122: 	imull	$0x1f40, %edx, %edx
    00000128: 	cmpl	%eax, %edx
    0000012a: 	je	.Ltmp1016 # Offset: 298
    0000012c: 	movl	current_test(%rip), %edx
    00000132: 	movq	%rbp, %rsi
    00000135: 	movl	$0x1, %edi
    0000013a: 	xorl	%eax, %eax
    0000013c: 	addl	$0x1, %r12d
    00000140: 	callq	__printf_chk@PLT # Offset: 320
    00000145: 	movl	iterations(%rip), %esi
    0000014b: 	cmpl	%esi, %r12d
    0000014e: 	jge	.Ltmp1012 # Offset: 334
    00000150: 	movsd	init_value(%rip), %xmm3
    00000158: 	movdqa	DATAat0x57cf0(%rip), %xmm2
    00000160: 	jmp	.Ltmp1017 # Offset: 352
    00000165: 	nopl	(%rax) # Size: 3
.Ltmp1016:
    00000168: 	addl	$0x1, %r12d
    0000016c: 	cmpl	%esi, %r12d
    0000016f: 	jl	.Ltmp1017 # Offset: 367
.Ltmp1012:
    00000175: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000017c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000183: 	subq	$0x20, %rax
    00000187: 	cmpq	%rax, %rbx
    0000018a: 	je	.Ltmp1018 # Offset: 394
    00000190: 	movq	0x8(%rsp), %rax
    00000195: 	leaq	0x10(%rbx), %rdi
    00000199: 	movq	%rdi, (%rbx)
    0000019c: 	movq	(%rax), %rbp
    0000019f: 	movq	0x8(%rax), %r12
    000001a3: 	movq	%rbp, %rax
    000001a6: 	addq	%r12, %rax
    000001a9: 	je	.Ltmp1019 # Offset: 425
    000001ab: 	testq	%rbp, %rbp
    000001ae: 	je	.Ltmp1020 # Offset: 430
.Ltmp1019:
    000001b4: 	movq	%r12, 0x10(%rsp)
    000001b9: 	cmpq	$0xf, %r12
    000001bd: 	ja	.Ltmp1021 # Offset: 445
    000001c3: 	cmpq	$0x1, %r12
    000001c7: 	jne	.Ltmp1022 # Offset: 455
    000001cd: 	movzbl	(%rbp), %eax
    000001d1: 	movb	%al, 0x10(%rbx)
.Ltmp1026:
    000001d4: 	movq	%r12, 0x8(%rbx)
    000001d8: 	movb	$0x0, (%rdi,%r12)
    000001dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001e4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001eb: 	addq	$0x20, %rax
    000001ef: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001fd: 	je	.Ltmp1023 # Offset: 509
.Ltmp1027:
    00000203: 	movq	-0x20(%rax), %rbp
    00000207: 	callq	clock@PLT # Offset: 519
    0000020c: 	movq	%rax, end_time(%rip)
    00000213: 	movq	0x18(%rsp), %rdx
    00000218: 	subq	%fs:0x28, %rdx
    00000221: 	jne	.Ltmp1024 # Offset: 545
    00000227: 	subq	start_time(%rip), %rax
    0000022e: 	pxor	%xmm0, %xmm0
    00000232: 	movq	%rbp, %rdi
    00000235: 	cvtsi2sd	%rax, %xmm0
    0000023a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000242: 	addq	$0x28, %rsp
    00000246: 	popq	%rbx
    00000247: 	popq	%rbp
    00000248: 	popq	%r12
    0000024a: 	popq	%r13
    0000024c: 	popq	%r14
    0000024e: 	popq	%r15
    00000250: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 592
.Ltmp1014:
    00000255: 	xorl	%edx, %edx
    00000257: 	xorl	%eax, %eax
    00000259: 	jmp	.Ltmp1025 # Offset: 601
.Ltmp1021:
    0000025e: 	movq	%rbx, %rdi
    00000261: 	leaq	0x10(%rsp), %rsi
    00000266: 	xorl	%edx, %edx
    00000268: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 616
    0000026d: 	movq	%rax, (%rbx)
    00000270: 	movq	%rax, %rdi
    00000273: 	movq	0x10(%rsp), %rax
    00000278: 	movq	%rax, 0x10(%rbx)
.Ltmp1028:
    0000027c: 	movq	%r12, %rdx
    0000027f: 	movq	%rbp, %rsi
    00000282: 	callq	memcpy@PLT # Offset: 642
    00000287: 	movq	0x10(%rsp), %r12
    0000028c: 	movq	(%rbx), %rdi
    0000028f: 	jmp	.Ltmp1026 # Offset: 655
.Ltmp1018:
    00000294: 	movq	0x8(%rsp), %rsi
    00000299: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002a0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 672
    000002a5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002ac: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002b3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002ba: 	jne	.Ltmp1027 # Offset: 698
.Ltmp1023:
    000002c0: 	movq	-0x8(%rdx), %rax
    000002c4: 	addq	$0x200, %rax
    000002ca: 	jmp	.Ltmp1027 # Offset: 714
.Ltmp1022:
    000002cf: 	testq	%r12, %r12
    000002d2: 	je	.Ltmp1026 # Offset: 722
    000002d8: 	jmp	.Ltmp1028 # Offset: 728
.Ltmp1024:
    000002da: 	callq	__stack_chk_fail@PLT # Offset: 730
.Ltmp1020:
    000002df: 	leaq	DATAat0x57008(%rip), %rdi
    000002e6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 742
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIj13and_remainderIjLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1It24custom_multiply_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 102
  State       : disassembled
  Address     : 0xc550
  Size        : 0x365
  MaxSize     : 0x370
  Offset      : 0xc550
  Section     : .text
  Orc Section : .local.text._Z14test_variable1It24custom_multiply_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0101:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	movl	%edx, %r13d
    00000013: 	pushq	%r12
    00000015: 	pushq	%rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x38, %rsp
    0000001b: 	movq	%rcx, 0x18(%rsp)
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x28(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movl	iterations(%rip), %esi
    0000003b: 	movq	%rax, start_time(%rip)
    00000042: 	testl	%esi, %esi
    00000044: 	jle	.Ltmp1029 # Offset: 68
    0000004a: 	leal	-0x1(%r14), %eax
    0000004e: 	movd	%r13d, %xmm0
    00000053: 	movl	%r14d, %ebp
    00000056: 	xorl	%r12d, %r12d
    00000059: 	movl	%eax, 0x14(%rsp)
    0000005d: 	movl	%r14d, %eax
    00000060: 	punpcklwd	%xmm0, %xmm0
    00000064: 	andl	$-0x8, %ebp
    00000067: 	shrl	$0x3, %eax
    0000006a: 	cvttsd2si	init_value(%rip), %edi
    00000072: 	pshufd	$0x0, %xmm0, %xmm4
    00000077: 	subl	$0x1, %eax
    0000007a: 	movaps	%xmm4, (%rsp)
    0000007e: 	shlq	$0x4, %rax
    00000082: 	leaq	0x10(%r15,%rax), %rbx
    00000087: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1035:
    00000090: 	xorl	%edx, %edx
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp1030 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x14(%rsp)
    000000a0: 	jbe	.Ltmp1031 # Offset: 160
    000000a6: 	movdqa	(%rsp), %xmm2
    000000ab: 	movq	%r15, %rax
    000000ae: 	pxor	%xmm1, %xmm1
    000000b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1032:
    000000b8: 	movdqu	(%rax), %xmm0
    000000bc: 	addq	$0x10, %rax
    000000c0: 	pmullw	%xmm2, %xmm0
    000000c4: 	paddw	%xmm0, %xmm1
    000000c8: 	cmpq	%rbx, %rax
    000000cb: 	jne	.Ltmp1032 # Offset: 203
    000000cd: 	movdqa	%xmm1, %xmm0
    000000d1: 	psrldq	$0x8, %xmm0
    000000d6: 	paddw	%xmm0, %xmm1
    000000da: 	movdqa	%xmm1, %xmm0
    000000de: 	psrldq	$0x4, %xmm0
    000000e3: 	paddw	%xmm0, %xmm1
    000000e7: 	movdqa	%xmm1, %xmm0
    000000eb: 	psrldq	$0x2, %xmm0
    000000f0: 	paddw	%xmm0, %xmm1
    000000f4: 	pextrw	$0x0, %xmm1, %edx
    000000f9: 	cmpl	%r14d, %ebp
    000000fc: 	je	.Ltmp1030 # Offset: 252
    00000102: 	movl	%ebp, %eax
    00000104: 	movl	%ebp, %ecx
.Ltmp1043:
    00000106: 	movl	%r14d, %r8d
    00000109: 	subl	%eax, %r8d
    0000010c: 	leal	-0x1(%r8), %r9d
    00000110: 	cmpl	$0x2, %r9d
    00000114: 	jbe	.Ltmp1033 # Offset: 276
    00000116: 	movq	(%r15,%rax,2), %xmm0
    0000011c: 	movd	%r13d, %xmm3
    00000121: 	pshuflw	$0x0, %xmm3, %xmm1
    00000126: 	pmullw	%xmm1, %xmm0
    0000012a: 	pextrw	$0x0, %xmm0, %eax
    0000012f: 	pextrw	$0x1, %xmm0, %r9d
    00000135: 	addl	%r9d, %eax
    00000138: 	addl	%edx, %eax
    0000013a: 	pextrw	$0x2, %xmm0, %edx
    0000013f: 	addl	%edx, %eax
    00000141: 	pextrw	$0x3, %xmm0, %edx
    00000146: 	addl	%eax, %edx
    00000148: 	movl	%r8d, %eax
    0000014b: 	andl	$-0x4, %eax
    0000014e: 	addl	%eax, %ecx
    00000150: 	cmpl	%eax, %r8d
    00000153: 	je	.Ltmp1030 # Offset: 339
.Ltmp1033:
    00000155: 	movslq	%ecx, %rax
    00000158: 	movzwl	(%r15,%rax,2), %r10d
    0000015d: 	leaq	(%rax,%rax), %r8
    00000161: 	imull	%r13d, %r10d
    00000165: 	movl	%r10d, %eax
    00000168: 	addl	%eax, %edx
    0000016a: 	leal	0x1(%rcx), %eax
    0000016d: 	cmpl	%eax, %r14d
    00000170: 	jle	.Ltmp1030 # Offset: 368
    00000172: 	movzwl	0x2(%r15,%r8), %eax
    00000178: 	addl	$0x2, %ecx
    0000017b: 	imull	%r13d, %eax
    0000017f: 	addl	%eax, %edx
    00000181: 	cmpl	%ecx, %r14d
    00000184: 	jle	.Ltmp1030 # Offset: 388
    00000186: 	movzwl	0x4(%r15,%r8), %eax
    0000018c: 	imull	%r13d, %eax
    00000190: 	addl	%eax, %edx
.Ltmp1030:
    00000192: 	movl	%r13d, %eax
    00000195: 	imull	%edi, %eax
    00000198: 	imulw	$0x1f40, %ax, %ax
    0000019d: 	cmpw	%dx, %ax
    000001a0: 	je	.Ltmp1034 # Offset: 416
    000001a2: 	movl	current_test(%rip), %edx
    000001a8: 	leaq	DATAat0x571d0(%rip), %rsi
    000001af: 	movl	$0x1, %edi
    000001b4: 	xorl	%eax, %eax
    000001b6: 	addl	$0x1, %r12d
    000001ba: 	callq	__printf_chk@PLT # Offset: 442
    000001bf: 	movl	iterations(%rip), %esi
    000001c5: 	cmpl	%r12d, %esi
    000001c8: 	jle	.Ltmp1029 # Offset: 456
    000001ca: 	cvttsd2si	init_value(%rip), %edi
    000001d2: 	jmp	.Ltmp1035 # Offset: 466
    000001d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1034:
    000001e0: 	addl	$0x1, %r12d
    000001e4: 	cmpl	%esi, %r12d
    000001e7: 	jl	.Ltmp1035 # Offset: 487
.Ltmp1029:
    000001ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001fb: 	subq	$0x20, %rax
    000001ff: 	cmpq	%rax, %rbx
    00000202: 	je	.Ltmp1036 # Offset: 514
    00000208: 	movq	0x18(%rsp), %rax
    0000020d: 	leaq	0x10(%rbx), %rdi
    00000211: 	movq	%rdi, (%rbx)
    00000214: 	movq	(%rax), %rbp
    00000217: 	movq	0x8(%rax), %r12
    0000021b: 	movq	%rbp, %rax
    0000021e: 	addq	%r12, %rax
    00000221: 	je	.Ltmp1037 # Offset: 545
    00000223: 	testq	%rbp, %rbp
    00000226: 	je	.Ltmp1038 # Offset: 550
.Ltmp1037:
    0000022c: 	movq	%r12, 0x20(%rsp)
    00000231: 	cmpq	$0xf, %r12
    00000235: 	ja	.Ltmp1039 # Offset: 565
    0000023b: 	cmpq	$0x1, %r12
    0000023f: 	jne	.Ltmp1040 # Offset: 575
    00000245: 	movzbl	(%rbp), %eax
    00000249: 	movb	%al, 0x10(%rbx)
.Ltmp1044:
    0000024c: 	movq	%r12, 0x8(%rbx)
    00000250: 	movb	$0x0, (%rdi,%r12)
    00000255: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000025c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000263: 	addq	$0x20, %rax
    00000267: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000026e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000275: 	je	.Ltmp1041 # Offset: 629
.Ltmp1045:
    0000027b: 	movq	-0x20(%rax), %rbp
    0000027f: 	callq	clock@PLT # Offset: 639
    00000284: 	movq	%rax, end_time(%rip)
    0000028b: 	movq	0x28(%rsp), %rdx
    00000290: 	subq	%fs:0x28, %rdx
    00000299: 	jne	.Ltmp1042 # Offset: 665
    0000029f: 	subq	start_time(%rip), %rax
    000002a6: 	pxor	%xmm0, %xmm0
    000002aa: 	movq	%rbp, %rdi
    000002ad: 	cvtsi2sd	%rax, %xmm0
    000002b2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002ba: 	addq	$0x38, %rsp
    000002be: 	popq	%rbx
    000002bf: 	popq	%rbp
    000002c0: 	popq	%r12
    000002c2: 	popq	%r13
    000002c4: 	popq	%r14
    000002c6: 	popq	%r15
    000002c8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 712
.Ltmp1031:
    000002cd: 	xorl	%eax, %eax
    000002cf: 	xorl	%ecx, %ecx
    000002d1: 	xorl	%edx, %edx
    000002d3: 	jmp	.Ltmp1043 # Offset: 723
.Ltmp1039:
    000002d8: 	movq	%rbx, %rdi
    000002db: 	leaq	0x20(%rsp), %rsi
    000002e0: 	xorl	%edx, %edx
    000002e2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 738
    000002e7: 	movq	%rax, (%rbx)
    000002ea: 	movq	%rax, %rdi
    000002ed: 	movq	0x20(%rsp), %rax
    000002f2: 	movq	%rax, 0x10(%rbx)
.Ltmp1046:
    000002f6: 	movq	%r12, %rdx
    000002f9: 	movq	%rbp, %rsi
    000002fc: 	callq	memcpy@PLT # Offset: 764
    00000301: 	movq	0x20(%rsp), %r12
    00000306: 	movq	(%rbx), %rdi
    00000309: 	jmp	.Ltmp1044 # Offset: 777
.Ltmp1036:
    0000030e: 	movq	0x18(%rsp), %rsi
    00000313: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000031a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 794
    0000031f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000326: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000032d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000334: 	jne	.Ltmp1045 # Offset: 820
.Ltmp1041:
    0000033a: 	movq	-0x8(%rdx), %rax
    0000033e: 	addq	$0x200, %rax
    00000344: 	jmp	.Ltmp1045 # Offset: 836
.Ltmp1040:
    00000349: 	testq	%r12, %r12
    0000034c: 	je	.Ltmp1044 # Offset: 844
    00000352: 	jmp	.Ltmp1046 # Offset: 850
.Ltmp1042:
    00000354: 	callq	__stack_chk_fail@PLT # Offset: 852
.Ltmp1038:
    00000359: 	leaq	DATAat0x57008(%rip), %rdi
    00000360: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 864
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1It24custom_multiply_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1Il22custom_divide_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 103
  State       : disassembled
  Address     : 0xc8c0
  Size        : 0x246
  MaxSize     : 0x250
  Offset      : 0xc8c0
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Il22custom_divide_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0102:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdx, %rbx
    00000017: 	subq	$0x28, %rsp
    0000001b: 	movq	%rcx, 0x8(%rsp)
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x18(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movl	iterations(%rip), %edi
    0000003b: 	movq	%rax, start_time(%rip)
    00000042: 	testl	%edi, %edi
    00000044: 	jle	.Ltmp1047 # Offset: 68
    0000004a: 	leal	-0x1(%r15), %eax
    0000004e: 	movsd	init_value(%rip), %xmm0
    00000056: 	xorl	%r13d, %r13d
    00000059: 	leaq	DATAat0x571d0(%rip), %r12
    00000060: 	leaq	0x8(%rbp,%rax,8), %r14
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp1051:
    00000068: 	movq	%rbp, %rcx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp1048 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1049:
    00000078: 	movq	(%rcx), %rax
    0000007b: 	addq	$0x8, %rcx
    0000007f: 	cqto
    00000081: 	idivq	%rbx
    00000084: 	addq	%rax, %rsi
    00000087: 	cmpq	%rcx, %r14
    0000008a: 	jne	.Ltmp1049 # Offset: 138
.Ltmp1048:
    0000008c: 	cvttsd2si	%xmm0, %rax
    00000091: 	cqto
    00000093: 	idivq	%rbx
    00000096: 	imulq	$0x1f40, %rax, %rax
    0000009d: 	cmpq	%rsi, %rax
    000000a0: 	je	.Ltmp1050 # Offset: 160
    000000a2: 	movl	current_test(%rip), %edx
    000000a8: 	movl	$0x1, %edi
    000000ad: 	movq	%r12, %rsi
    000000b0: 	xorl	%eax, %eax
    000000b2: 	addl	$0x1, %r13d
    000000b6: 	callq	__printf_chk@PLT # Offset: 182
    000000bb: 	movl	iterations(%rip), %edi
    000000c1: 	cmpl	%edi, %r13d
    000000c4: 	jge	.Ltmp1047 # Offset: 196
    000000c6: 	movsd	init_value(%rip), %xmm0
    000000ce: 	jmp	.Ltmp1051 # Offset: 206
.Ltmp1050:
    000000d0: 	addl	$0x1, %r13d
    000000d4: 	cmpl	%edi, %r13d
    000000d7: 	jl	.Ltmp1051 # Offset: 215
.Ltmp1047:
    000000d9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000e0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000e7: 	subq	$0x20, %rax
    000000eb: 	cmpq	%rax, %rbx
    000000ee: 	je	.Ltmp1052 # Offset: 238
    000000f4: 	movq	0x8(%rsp), %rax
    000000f9: 	leaq	0x10(%rbx), %rdi
    000000fd: 	movq	%rdi, (%rbx)
    00000100: 	movq	(%rax), %rbp
    00000103: 	movq	0x8(%rax), %r12
    00000107: 	movq	%rbp, %rax
    0000010a: 	addq	%r12, %rax
    0000010d: 	je	.Ltmp1053 # Offset: 269
    0000010f: 	testq	%rbp, %rbp
    00000112: 	je	.Ltmp1054 # Offset: 274
.Ltmp1053:
    00000118: 	movq	%r12, 0x10(%rsp)
    0000011d: 	cmpq	$0xf, %r12
    00000121: 	ja	.Ltmp1055 # Offset: 289
    00000127: 	cmpq	$0x1, %r12
    0000012b: 	jne	.Ltmp1056 # Offset: 299
    00000131: 	movzbl	(%rbp), %eax
    00000135: 	movb	%al, 0x10(%rbx)
.Ltmp1059:
    00000138: 	movq	%r12, 0x8(%rbx)
    0000013c: 	movb	$0x0, (%rdi,%r12)
    00000141: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000148: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000014f: 	addq	$0x20, %rax
    00000153: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000015a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000161: 	je	.Ltmp1057 # Offset: 353
.Ltmp1060:
    00000167: 	movq	-0x20(%rax), %rbp
    0000016b: 	callq	clock@PLT # Offset: 363
    00000170: 	movq	%rax, end_time(%rip)
    00000177: 	movq	0x18(%rsp), %rdx
    0000017c: 	subq	%fs:0x28, %rdx
    00000185: 	jne	.Ltmp1058 # Offset: 389
    0000018b: 	subq	start_time(%rip), %rax
    00000192: 	pxor	%xmm0, %xmm0
    00000196: 	movq	%rbp, %rdi
    00000199: 	cvtsi2sd	%rax, %xmm0
    0000019e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001a6: 	addq	$0x28, %rsp
    000001aa: 	popq	%rbx
    000001ab: 	popq	%rbp
    000001ac: 	popq	%r12
    000001ae: 	popq	%r13
    000001b0: 	popq	%r14
    000001b2: 	popq	%r15
    000001b4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 436
.Ltmp1055:
    000001b9: 	movq	%rbx, %rdi
    000001bc: 	leaq	0x10(%rsp), %rsi
    000001c1: 	xorl	%edx, %edx
    000001c3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 451
    000001c8: 	movq	%rax, (%rbx)
    000001cb: 	movq	%rax, %rdi
    000001ce: 	movq	0x10(%rsp), %rax
    000001d3: 	movq	%rax, 0x10(%rbx)
.Ltmp1061:
    000001d7: 	movq	%r12, %rdx
    000001da: 	movq	%rbp, %rsi
    000001dd: 	callq	memcpy@PLT # Offset: 477
    000001e2: 	movq	0x10(%rsp), %r12
    000001e7: 	movq	(%rbx), %rdi
    000001ea: 	jmp	.Ltmp1059 # Offset: 490
.Ltmp1052:
    000001ef: 	movq	0x8(%rsp), %rsi
    000001f4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001fb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 507
    00000200: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000207: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000020e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000215: 	jne	.Ltmp1060 # Offset: 533
.Ltmp1057:
    0000021b: 	movq	-0x8(%rdx), %rax
    0000021f: 	addq	$0x200, %rax
    00000225: 	jmp	.Ltmp1060 # Offset: 549
.Ltmp1056:
    0000022a: 	testq	%r12, %r12
    0000022d: 	je	.Ltmp1059 # Offset: 557
    00000233: 	jmp	.Ltmp1061 # Offset: 563
.Ltmp1058:
    00000235: 	callq	__stack_chk_fail@PLT # Offset: 565
.Ltmp1054:
    0000023a: 	leaq	DATAat0x57008(%rip), %rdi
    00000241: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 577
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Il22custom_divide_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1It22custom_divide_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 104
  State       : disassembled
  Address     : 0xcb10
  Size        : 0x24e
  MaxSize     : 0x250
  Offset      : 0xcb10
  Section     : .text
  Orc Section : .local.text._Z14test_variable1It22custom_divide_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0103:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movl	%edx, %ebx
    00000016: 	subq	$0x28, %rsp
    0000001a: 	movq	%rcx, 0x8(%rsp)
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x18(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	callq	clock@PLT # Offset: 47
    00000034: 	movl	iterations(%rip), %r9d
    0000003b: 	movq	%rax, start_time(%rip)
    00000042: 	testl	%r9d, %r9d
    00000045: 	jle	.Ltmp1062 # Offset: 69
    0000004b: 	cvttsd2si	init_value(%rip), %edi
    00000053: 	leal	-0x1(%r15), %eax
    00000057: 	xorl	%r13d, %r13d
    0000005a: 	leaq	0x2(%rbp,%rax,2), %r14
    0000005f: 	leaq	DATAat0x571d0(%rip), %r12
    00000066: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1066:
    00000070: 	movq	%rbp, %rcx
    00000073: 	xorl	%esi, %esi
    00000075: 	testl	%r15d, %r15d
    00000078: 	jle	.Ltmp1063 # Offset: 120
    0000007a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1064:
    00000080: 	movzwl	(%rcx), %eax
    00000083: 	xorl	%edx, %edx
    00000085: 	addq	$0x2, %rcx
    00000089: 	divw	%bx
    0000008c: 	addl	%eax, %esi
    0000008e: 	cmpq	%rcx, %r14
    00000091: 	jne	.Ltmp1064 # Offset: 145
.Ltmp1063:
    00000093: 	movl	%edi, %eax
    00000095: 	xorl	%edx, %edx
    00000097: 	divw	%bx
    0000009a: 	imulw	$0x1f40, %ax, %ax
    0000009f: 	cmpw	%si, %ax
    000000a2: 	je	.Ltmp1065 # Offset: 162
    000000a4: 	movl	current_test(%rip), %edx
    000000aa: 	movq	%r12, %rsi
    000000ad: 	movl	$0x1, %edi
    000000b2: 	xorl	%eax, %eax
    000000b4: 	addl	$0x1, %r13d
    000000b8: 	callq	__printf_chk@PLT # Offset: 184
    000000bd: 	movl	iterations(%rip), %r9d
    000000c4: 	cmpl	%r9d, %r13d
    000000c7: 	jge	.Ltmp1062 # Offset: 199
    000000c9: 	cvttsd2si	init_value(%rip), %edi
    000000d1: 	jmp	.Ltmp1066 # Offset: 209
    000000d3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1065:
    000000d8: 	addl	$0x1, %r13d
    000000dc: 	cmpl	%r9d, %r13d
    000000df: 	jl	.Ltmp1066 # Offset: 223
.Ltmp1062:
    000000e1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000e8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000ef: 	subq	$0x20, %rax
    000000f3: 	cmpq	%rax, %rbx
    000000f6: 	je	.Ltmp1067 # Offset: 246
    000000fc: 	movq	0x8(%rsp), %rax
    00000101: 	leaq	0x10(%rbx), %rdi
    00000105: 	movq	%rdi, (%rbx)
    00000108: 	movq	(%rax), %rbp
    0000010b: 	movq	0x8(%rax), %r12
    0000010f: 	movq	%rbp, %rax
    00000112: 	addq	%r12, %rax
    00000115: 	je	.Ltmp1068 # Offset: 277
    00000117: 	testq	%rbp, %rbp
    0000011a: 	je	.Ltmp1069 # Offset: 282
.Ltmp1068:
    00000120: 	movq	%r12, 0x10(%rsp)
    00000125: 	cmpq	$0xf, %r12
    00000129: 	ja	.Ltmp1070 # Offset: 297
    0000012f: 	cmpq	$0x1, %r12
    00000133: 	jne	.Ltmp1071 # Offset: 307
    00000139: 	movzbl	(%rbp), %eax
    0000013d: 	movb	%al, 0x10(%rbx)
.Ltmp1074:
    00000140: 	movq	%r12, 0x8(%rbx)
    00000144: 	movb	$0x0, (%rdi,%r12)
    00000149: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000150: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000157: 	addq	$0x20, %rax
    0000015b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000162: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000169: 	je	.Ltmp1072 # Offset: 361
.Ltmp1075:
    0000016f: 	movq	-0x20(%rax), %rbp
    00000173: 	callq	clock@PLT # Offset: 371
    00000178: 	movq	%rax, end_time(%rip)
    0000017f: 	movq	0x18(%rsp), %rdx
    00000184: 	subq	%fs:0x28, %rdx
    0000018d: 	jne	.Ltmp1073 # Offset: 397
    00000193: 	subq	start_time(%rip), %rax
    0000019a: 	pxor	%xmm0, %xmm0
    0000019e: 	movq	%rbp, %rdi
    000001a1: 	cvtsi2sd	%rax, %xmm0
    000001a6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001ae: 	addq	$0x28, %rsp
    000001b2: 	popq	%rbx
    000001b3: 	popq	%rbp
    000001b4: 	popq	%r12
    000001b6: 	popq	%r13
    000001b8: 	popq	%r14
    000001ba: 	popq	%r15
    000001bc: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 444
.Ltmp1070:
    000001c1: 	movq	%rbx, %rdi
    000001c4: 	leaq	0x10(%rsp), %rsi
    000001c9: 	xorl	%edx, %edx
    000001cb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 459
    000001d0: 	movq	%rax, (%rbx)
    000001d3: 	movq	%rax, %rdi
    000001d6: 	movq	0x10(%rsp), %rax
    000001db: 	movq	%rax, 0x10(%rbx)
.Ltmp1076:
    000001df: 	movq	%r12, %rdx
    000001e2: 	movq	%rbp, %rsi
    000001e5: 	callq	memcpy@PLT # Offset: 485
    000001ea: 	movq	0x10(%rsp), %r12
    000001ef: 	movq	(%rbx), %rdi
    000001f2: 	jmp	.Ltmp1074 # Offset: 498
.Ltmp1067:
    000001f7: 	movq	0x8(%rsp), %rsi
    000001fc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000203: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 515
    00000208: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000020f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000216: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000021d: 	jne	.Ltmp1075 # Offset: 541
.Ltmp1072:
    00000223: 	movq	-0x8(%rdx), %rax
    00000227: 	addq	$0x200, %rax
    0000022d: 	jmp	.Ltmp1075 # Offset: 557
.Ltmp1071:
    00000232: 	testq	%r12, %r12
    00000235: 	je	.Ltmp1074 # Offset: 565
    0000023b: 	jmp	.Ltmp1076 # Offset: 571
.Ltmp1073:
    0000023d: 	callq	__stack_chk_fail@PLT # Offset: 573
.Ltmp1069:
    00000242: 	leaq	DATAat0x57008(%rip), %rdi
    00000249: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 585
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1It22custom_divide_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1Ii25custom_remainder_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 105
  State       : disassembled
  Address     : 0xcd60
  Size        : 0x246
  MaxSize     : 0x250
  Offset      : 0xcd60
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Ii25custom_remainder_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0104:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movl	%edx, %ebx
    00000016: 	subq	$0x28, %rsp
    0000001a: 	movq	%rcx, 0x8(%rsp)
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x18(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	callq	clock@PLT # Offset: 47
    00000034: 	movl	iterations(%rip), %edi
    0000003a: 	movq	%rax, start_time(%rip)
    00000041: 	testl	%edi, %edi
    00000043: 	jle	.Ltmp1077 # Offset: 67
    00000049: 	leal	-0x1(%r15), %eax
    0000004d: 	movsd	init_value(%rip), %xmm0
    00000055: 	xorl	%r13d, %r13d
    00000058: 	leaq	DATAat0x571d0(%rip), %r12
    0000005f: 	leaq	0x4(%rbp,%rax,4), %r14
    00000064: 	nopl	(%rax) # Size: 4
.Ltmp1081:
    00000068: 	movq	%rbp, %rcx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp1078 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1079:
    00000078: 	movl	(%rcx), %eax
    0000007a: 	addq	$0x4, %rcx
    0000007e: 	cltd
    0000007f: 	idivl	%ebx
    00000081: 	addl	%edx, %esi
    00000083: 	cmpq	%rcx, %r14
    00000086: 	jne	.Ltmp1079 # Offset: 134
.Ltmp1078:
    00000088: 	cvttsd2si	%xmm0, %eax
    0000008c: 	cltd
    0000008d: 	idivl	%ebx
    0000008f: 	imull	$0x1f40, %edx, %edx
    00000095: 	cmpl	%esi, %edx
    00000097: 	je	.Ltmp1080 # Offset: 151
    00000099: 	movl	current_test(%rip), %edx
    0000009f: 	movl	$0x1, %edi
    000000a4: 	movq	%r12, %rsi
    000000a7: 	xorl	%eax, %eax
    000000a9: 	addl	$0x1, %r13d
    000000ad: 	callq	__printf_chk@PLT # Offset: 173
    000000b2: 	movl	iterations(%rip), %edi
    000000b8: 	cmpl	%edi, %r13d
    000000bb: 	jge	.Ltmp1077 # Offset: 187
    000000bd: 	movsd	init_value(%rip), %xmm0
    000000c5: 	jmp	.Ltmp1081 # Offset: 197
    000000c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1080:
    000000d0: 	addl	$0x1, %r13d
    000000d4: 	cmpl	%edi, %r13d
    000000d7: 	jl	.Ltmp1081 # Offset: 215
.Ltmp1077:
    000000d9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000e0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000e7: 	subq	$0x20, %rax
    000000eb: 	cmpq	%rax, %rbx
    000000ee: 	je	.Ltmp1082 # Offset: 238
    000000f4: 	movq	0x8(%rsp), %rax
    000000f9: 	leaq	0x10(%rbx), %rdi
    000000fd: 	movq	%rdi, (%rbx)
    00000100: 	movq	(%rax), %rbp
    00000103: 	movq	0x8(%rax), %r12
    00000107: 	movq	%rbp, %rax
    0000010a: 	addq	%r12, %rax
    0000010d: 	je	.Ltmp1083 # Offset: 269
    0000010f: 	testq	%rbp, %rbp
    00000112: 	je	.Ltmp1084 # Offset: 274
.Ltmp1083:
    00000118: 	movq	%r12, 0x10(%rsp)
    0000011d: 	cmpq	$0xf, %r12
    00000121: 	ja	.Ltmp1085 # Offset: 289
    00000127: 	cmpq	$0x1, %r12
    0000012b: 	jne	.Ltmp1086 # Offset: 299
    00000131: 	movzbl	(%rbp), %eax
    00000135: 	movb	%al, 0x10(%rbx)
.Ltmp1089:
    00000138: 	movq	%r12, 0x8(%rbx)
    0000013c: 	movb	$0x0, (%rdi,%r12)
    00000141: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000148: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000014f: 	addq	$0x20, %rax
    00000153: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000015a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000161: 	je	.Ltmp1087 # Offset: 353
.Ltmp1090:
    00000167: 	movq	-0x20(%rax), %rbp
    0000016b: 	callq	clock@PLT # Offset: 363
    00000170: 	movq	%rax, end_time(%rip)
    00000177: 	movq	0x18(%rsp), %rdx
    0000017c: 	subq	%fs:0x28, %rdx
    00000185: 	jne	.Ltmp1088 # Offset: 389
    0000018b: 	subq	start_time(%rip), %rax
    00000192: 	pxor	%xmm0, %xmm0
    00000196: 	movq	%rbp, %rdi
    00000199: 	cvtsi2sd	%rax, %xmm0
    0000019e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001a6: 	addq	$0x28, %rsp
    000001aa: 	popq	%rbx
    000001ab: 	popq	%rbp
    000001ac: 	popq	%r12
    000001ae: 	popq	%r13
    000001b0: 	popq	%r14
    000001b2: 	popq	%r15
    000001b4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 436
.Ltmp1085:
    000001b9: 	movq	%rbx, %rdi
    000001bc: 	leaq	0x10(%rsp), %rsi
    000001c1: 	xorl	%edx, %edx
    000001c3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 451
    000001c8: 	movq	%rax, (%rbx)
    000001cb: 	movq	%rax, %rdi
    000001ce: 	movq	0x10(%rsp), %rax
    000001d3: 	movq	%rax, 0x10(%rbx)
.Ltmp1091:
    000001d7: 	movq	%r12, %rdx
    000001da: 	movq	%rbp, %rsi
    000001dd: 	callq	memcpy@PLT # Offset: 477
    000001e2: 	movq	0x10(%rsp), %r12
    000001e7: 	movq	(%rbx), %rdi
    000001ea: 	jmp	.Ltmp1089 # Offset: 490
.Ltmp1082:
    000001ef: 	movq	0x8(%rsp), %rsi
    000001f4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001fb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 507
    00000200: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000207: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000020e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000215: 	jne	.Ltmp1090 # Offset: 533
.Ltmp1087:
    0000021b: 	movq	-0x8(%rdx), %rax
    0000021f: 	addq	$0x200, %rax
    00000225: 	jmp	.Ltmp1090 # Offset: 549
.Ltmp1086:
    0000022a: 	testq	%r12, %r12
    0000022d: 	je	.Ltmp1089 # Offset: 557
    00000233: 	jmp	.Ltmp1091 # Offset: 563
.Ltmp1088:
    00000235: 	callq	__stack_chk_fail@PLT # Offset: 565
.Ltmp1084:
    0000023a: 	leaq	DATAat0x57008(%rip), %rdi
    00000241: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 577
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Ii25custom_remainder_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14test_variable1Ij24custom_multiply_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 106
  State       : disassembled
  Address     : 0xcfb0
  Size        : 0x323
  MaxSize     : 0x330
  Offset      : 0xcfb0
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Ij24custom_multiply_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0105:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%edx, %r15d
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	movq	%rdi, %r12
    00000015: 	pushq	%rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x48, %rsp
    0000001b: 	movq	%rcx, 0x28(%rsp)
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x38(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movl	iterations(%rip), %esi
    0000003b: 	movq	%rax, start_time(%rip)
    00000042: 	testl	%esi, %esi
    00000044: 	jle	.Ltmp1092 # Offset: 68
    0000004a: 	leal	-0x1(%r14), %eax
    0000004e: 	movd	%r15d, %xmm6
    00000053: 	movl	%r14d, %ebp
    00000056: 	xorl	%r13d, %r13d
    00000059: 	movl	%eax, 0x24(%rsp)
    0000005d: 	movl	%r14d, %eax
    00000060: 	pshufd	$0x0, %xmm6, %xmm3
    00000065: 	andl	$-0x4, %ebp
    00000068: 	shrl	$0x2, %eax
    0000006b: 	movdqa	%xmm3, %xmm4
    0000006f: 	movsd	init_value(%rip), %xmm5
    00000077: 	subl	$0x1, %eax
    0000007a: 	psrlq	$0x20, %xmm4
    0000007f: 	shlq	$0x4, %rax
    00000083: 	leaq	0x10(%r12,%rax), %rbx
    00000088: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1097:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp1093 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x24(%rsp)
    000000a0: 	jbe	.Ltmp1094 # Offset: 160
    000000a6: 	movq	%r12, %rax
    000000a9: 	pxor	%xmm2, %xmm2
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp1095:
    000000b0: 	movdqu	(%rax), %xmm0
    000000b4: 	movdqu	(%rax), %xmm1
    000000b8: 	addq	$0x10, %rax
    000000bc: 	psrlq	$0x20, %xmm0
    000000c1: 	pmuludq	%xmm3, %xmm1
    000000c5: 	pmuludq	%xmm4, %xmm0
    000000c9: 	pshufd	$0x8, %xmm1, %xmm1
    000000ce: 	pshufd	$0x8, %xmm0, %xmm0
    000000d3: 	punpckldq	%xmm0, %xmm1
    000000d7: 	paddd	%xmm1, %xmm2
    000000db: 	cmpq	%rbx, %rax
    000000de: 	jne	.Ltmp1095 # Offset: 222
    000000e0: 	movdqa	%xmm2, %xmm0
    000000e4: 	movl	%ebp, %edx
    000000e6: 	psrldq	$0x8, %xmm0
    000000eb: 	paddd	%xmm0, %xmm2
    000000ef: 	movdqa	%xmm2, %xmm0
    000000f3: 	psrldq	$0x4, %xmm0
    000000f8: 	paddd	%xmm0, %xmm2
    000000fc: 	movd	%xmm2, %eax
    00000100: 	cmpl	%r14d, %ebp
    00000103: 	je	.Ltmp1093 # Offset: 259
.Ltmp1105:
    00000105: 	movslq	%edx, %rdi
    00000108: 	movl	(%r12,%rdi,4), %ecx
    0000010c: 	leaq	(,%rdi,4), %r10
    00000114: 	leal	0x1(%rdx), %edi
    00000117: 	imull	%r15d, %ecx
    0000011b: 	addl	%ecx, %eax
    0000011d: 	cmpl	%edi, %r14d
    00000120: 	jle	.Ltmp1093 # Offset: 288
    00000122: 	movl	0x4(%r12,%r10), %edi
    00000127: 	addl	$0x2, %edx
    0000012a: 	imull	%r15d, %edi
    0000012e: 	addl	%edi, %eax
    00000130: 	cmpl	%edx, %r14d
    00000133: 	jle	.Ltmp1093 # Offset: 307
    00000135: 	movl	0x8(%r12,%r10), %edx
    0000013a: 	imull	%r15d, %edx
    0000013e: 	addl	%edx, %eax
.Ltmp1093:
    00000140: 	cvttsd2si	%xmm5, %rdx
    00000145: 	imull	%r15d, %edx
    00000149: 	imull	$0x1f40, %edx, %edx
    0000014f: 	cmpl	%eax, %edx
    00000151: 	je	.Ltmp1096 # Offset: 337
    00000153: 	movl	current_test(%rip), %edx
    00000159: 	xorl	%eax, %eax
    0000015b: 	movaps	%xmm3, (%rsp)
    0000015f: 	addl	$0x1, %r13d
    00000163: 	leaq	DATAat0x571d0(%rip), %rsi
    0000016a: 	movl	$0x1, %edi
    0000016f: 	movaps	%xmm4, 0x10(%rsp)
    00000174: 	callq	__printf_chk@PLT # Offset: 372
    00000179: 	movl	iterations(%rip), %esi
    0000017f: 	cmpl	%esi, %r13d
    00000182: 	jge	.Ltmp1092 # Offset: 386
    00000184: 	movsd	init_value(%rip), %xmm5
    0000018c: 	movdqa	(%rsp), %xmm3
    00000191: 	movdqa	0x10(%rsp), %xmm4
    00000197: 	jmp	.Ltmp1097 # Offset: 407
    0000019c: 	nopl	(%rax) # Size: 4
.Ltmp1096:
    000001a0: 	addl	$0x1, %r13d
    000001a4: 	cmpl	%esi, %r13d
    000001a7: 	jl	.Ltmp1097 # Offset: 423
.Ltmp1092:
    000001ad: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001b4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001bb: 	subq	$0x20, %rax
    000001bf: 	cmpq	%rax, %rbx
    000001c2: 	je	.Ltmp1098 # Offset: 450
    000001c8: 	movq	0x28(%rsp), %rax
    000001cd: 	leaq	0x10(%rbx), %rdi
    000001d1: 	movq	%rdi, (%rbx)
    000001d4: 	movq	(%rax), %rbp
    000001d7: 	movq	0x8(%rax), %r12
    000001db: 	movq	%rbp, %rax
    000001de: 	addq	%r12, %rax
    000001e1: 	je	.Ltmp1099 # Offset: 481
    000001e3: 	testq	%rbp, %rbp
    000001e6: 	je	.Ltmp1100 # Offset: 486
.Ltmp1099:
    000001ec: 	movq	%r12, 0x30(%rsp)
    000001f1: 	cmpq	$0xf, %r12
    000001f5: 	ja	.Ltmp1101 # Offset: 501
    000001fb: 	cmpq	$0x1, %r12
    000001ff: 	jne	.Ltmp1102 # Offset: 511
    00000205: 	movzbl	(%rbp), %eax
    00000209: 	movb	%al, 0x10(%rbx)
.Ltmp1106:
    0000020c: 	movq	%r12, 0x8(%rbx)
    00000210: 	movb	$0x0, (%rdi,%r12)
    00000215: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000021c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000223: 	addq	$0x20, %rax
    00000227: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000022e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000235: 	je	.Ltmp1103 # Offset: 565
.Ltmp1107:
    0000023b: 	movq	-0x20(%rax), %rbp
    0000023f: 	callq	clock@PLT # Offset: 575
    00000244: 	movq	%rax, end_time(%rip)
    0000024b: 	movq	0x38(%rsp), %rdx
    00000250: 	subq	%fs:0x28, %rdx
    00000259: 	jne	.Ltmp1104 # Offset: 601
    0000025f: 	subq	start_time(%rip), %rax
    00000266: 	pxor	%xmm0, %xmm0
    0000026a: 	movq	%rbp, %rdi
    0000026d: 	cvtsi2sd	%rax, %xmm0
    00000272: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000027a: 	addq	$0x48, %rsp
    0000027e: 	popq	%rbx
    0000027f: 	popq	%rbp
    00000280: 	popq	%r12
    00000282: 	popq	%r13
    00000284: 	popq	%r14
    00000286: 	popq	%r15
    00000288: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 648
.Ltmp1094:
    0000028d: 	xorl	%edx, %edx
    0000028f: 	xorl	%eax, %eax
    00000291: 	jmp	.Ltmp1105 # Offset: 657
.Ltmp1101:
    00000296: 	movq	%rbx, %rdi
    00000299: 	leaq	0x30(%rsp), %rsi
    0000029e: 	xorl	%edx, %edx
    000002a0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 672
    000002a5: 	movq	%rax, (%rbx)
    000002a8: 	movq	%rax, %rdi
    000002ab: 	movq	0x30(%rsp), %rax
    000002b0: 	movq	%rax, 0x10(%rbx)
.Ltmp1108:
    000002b4: 	movq	%r12, %rdx
    000002b7: 	movq	%rbp, %rsi
    000002ba: 	callq	memcpy@PLT # Offset: 698
    000002bf: 	movq	0x30(%rsp), %r12
    000002c4: 	movq	(%rbx), %rdi
    000002c7: 	jmp	.Ltmp1106 # Offset: 711
.Ltmp1098:
    000002cc: 	movq	0x28(%rsp), %rsi
    000002d1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002d8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 728
    000002dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002e4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002eb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002f2: 	jne	.Ltmp1107 # Offset: 754
.Ltmp1103:
    000002f8: 	movq	-0x8(%rdx), %rax
    000002fc: 	addq	$0x200, %rax
    00000302: 	jmp	.Ltmp1107 # Offset: 770
.Ltmp1102:
    00000307: 	testq	%r12, %r12
    0000030a: 	je	.Ltmp1106 # Offset: 778
    00000310: 	jmp	.Ltmp1108 # Offset: 784
.Ltmp1104:
    00000312: 	callq	__stack_chk_fail@PLT # Offset: 786
.Ltmp1100:
    00000317: 	leaq	DATAat0x57008(%rip), %rdi
    0000031e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 798
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Ij24custom_multiply_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIh27custom_multiply_shiftadd_63IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIh27custom_multiply_shiftadd_63IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIh27custom_multiply_shiftadd_63IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 107
  State       : disassembled
  Address     : 0xd2e0
  Size        : 0x256
  MaxSize     : 0x260
  Offset      : 0xd2e0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIh27custom_multiply_shiftadd_63IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0106:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	%rdi, %rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp1109 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbx), %r13
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp1112:
    00000058: 	movq	%rbx, %rax
    0000005b: 	pxor	%xmm2, %xmm2
    0000005f: 	nop # Size: 1
.Ltmp1110:
    00000060: 	movdqu	(%rax), %xmm1
    00000064: 	addq	$0x10, %rax
    00000068: 	movdqa	%xmm1, %xmm0
    0000006c: 	paddb	%xmm1, %xmm0
    00000070: 	paddb	%xmm0, %xmm0
    00000074: 	paddb	%xmm0, %xmm0
    00000078: 	paddb	%xmm0, %xmm0
    0000007c: 	paddb	%xmm0, %xmm0
    00000080: 	paddb	%xmm0, %xmm0
    00000084: 	psubb	%xmm1, %xmm0
    00000088: 	paddb	%xmm0, %xmm2
    0000008c: 	cmpq	%rax, %r13
    0000008f: 	jne	.Ltmp1110 # Offset: 143
    00000091: 	movdqa	%xmm2, %xmm0
    00000095: 	movl	%esi, %edx
    00000097: 	psrldq	$0x8, %xmm0
    0000009c: 	shll	$0x6, %edx
    0000009f: 	paddb	%xmm0, %xmm2
    000000a3: 	pxor	%xmm0, %xmm0
    000000a7: 	psadbw	%xmm0, %xmm2
    000000ab: 	movd	%xmm2, %eax
    000000af: 	addb	%dl, %al
    000000b1: 	je	.Ltmp1111 # Offset: 177
    000000b3: 	movl	current_test(%rip), %edx
    000000b9: 	movq	%rbp, %rsi
    000000bc: 	movl	$0x1, %edi
    000000c1: 	xorl	%eax, %eax
    000000c3: 	addl	$0x1, %r14d
    000000c7: 	callq	__printf_chk@PLT # Offset: 199
    000000cc: 	movl	iterations(%rip), %ecx
    000000d2: 	cmpl	%r14d, %ecx
    000000d5: 	jle	.Ltmp1109 # Offset: 213
    000000d7: 	cvttsd2si	init_value(%rip), %esi
    000000df: 	jmp	.Ltmp1112 # Offset: 223
    000000e4: 	nopl	(%rax) # Size: 4
.Ltmp1111:
    000000e8: 	addl	$0x1, %r14d
    000000ec: 	cmpl	%ecx, %r14d
    000000ef: 	jl	.Ltmp1112 # Offset: 239
.Ltmp1109:
    000000f5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000fc: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000103: 	subq	$0x20, %rax
    00000107: 	cmpq	%rax, %rbx
    0000010a: 	je	.Ltmp1113 # Offset: 266
    00000110: 	leaq	0x10(%rbx), %rdi
    00000114: 	movq	%rdi, (%rbx)
    00000117: 	movq	(%r12), %rbp
    0000011b: 	movq	0x8(%r12), %r12
    00000120: 	movq	%rbp, %rax
    00000123: 	addq	%r12, %rax
    00000126: 	je	.Ltmp1114 # Offset: 294
    00000128: 	testq	%rbp, %rbp
    0000012b: 	je	.Ltmp1115 # Offset: 299
.Ltmp1114:
    00000131: 	movq	%r12, (%rsp)
    00000135: 	cmpq	$0xf, %r12
    00000139: 	ja	.Ltmp1116 # Offset: 313
    0000013f: 	cmpq	$0x1, %r12
    00000143: 	jne	.Ltmp1117 # Offset: 323
    00000149: 	movzbl	(%rbp), %eax
    0000014d: 	movb	%al, 0x10(%rbx)
.Ltmp1120:
    00000150: 	movq	%r12, 0x8(%rbx)
    00000154: 	movb	$0x0, (%rdi,%r12)
    00000159: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000160: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000167: 	addq	$0x20, %rax
    0000016b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000172: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000179: 	je	.Ltmp1118 # Offset: 377
.Ltmp1121:
    0000017f: 	movq	-0x20(%rax), %rbp
    00000183: 	callq	clock@PLT # Offset: 387
    00000188: 	movq	%rax, end_time(%rip)
    0000018f: 	movq	0x8(%rsp), %rdx
    00000194: 	subq	%fs:0x28, %rdx
    0000019d: 	jne	.Ltmp1119 # Offset: 413
    000001a3: 	subq	start_time(%rip), %rax
    000001aa: 	pxor	%xmm0, %xmm0
    000001ae: 	movq	%rbp, %rdi
    000001b1: 	cvtsi2sd	%rax, %xmm0
    000001b6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001be: 	addq	$0x10, %rsp
    000001c2: 	popq	%rbx
    000001c3: 	popq	%rbp
    000001c4: 	popq	%r12
    000001c6: 	popq	%r13
    000001c8: 	popq	%r14
    000001ca: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 458
.Ltmp1116:
    000001cf: 	movq	%rbx, %rdi
    000001d2: 	movq	%rsp, %rsi
    000001d5: 	xorl	%edx, %edx
    000001d7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 471
    000001dc: 	movq	%rax, (%rbx)
    000001df: 	movq	%rax, %rdi
    000001e2: 	movq	(%rsp), %rax
    000001e6: 	movq	%rax, 0x10(%rbx)
.Ltmp1122:
    000001ea: 	movq	%r12, %rdx
    000001ed: 	movq	%rbp, %rsi
    000001f0: 	callq	memcpy@PLT # Offset: 496
    000001f5: 	movq	(%rsp), %r12
    000001f9: 	movq	(%rbx), %rdi
    000001fc: 	jmp	.Ltmp1120 # Offset: 508
.Ltmp1113:
    00000201: 	movq	%r12, %rsi
    00000204: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000020b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 523
    00000210: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000217: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000021e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000225: 	jne	.Ltmp1121 # Offset: 549
.Ltmp1118:
    0000022b: 	movq	-0x8(%rdx), %rax
    0000022f: 	addq	$0x200, %rax
    00000235: 	jmp	.Ltmp1121 # Offset: 565
.Ltmp1117:
    0000023a: 	testq	%r12, %r12
    0000023d: 	je	.Ltmp1120 # Offset: 573
    00000243: 	jmp	.Ltmp1122 # Offset: 579
.Ltmp1119:
    00000245: 	callq	__stack_chk_fail@PLT # Offset: 581
.Ltmp1115:
    0000024a: 	leaq	DATAat0x57008(%rip), %rdi
    00000251: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 593
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIh27custom_multiply_shiftadd_63IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIm27custom_multiply_shiftadd_63ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 108
  State       : disassembled
  Address     : 0xd540
  Size        : 0x2f5
  MaxSize     : 0x300
  Offset      : 0xd540
  Section     : .text
  Orc Section : .local.text._Z13test_constantIm27custom_multiply_shiftadd_63ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0107:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1123 # Offset: 65
    00000047: 	movl	%r15d, %eax
    0000004a: 	movl	%r15d, %ebx
    0000004d: 	leaq	DATAat0x571d0(%rip), %rbp
    00000054: 	xorl	%r12d, %r12d
    00000057: 	shrl	%eax
    00000059: 	movsd	DATAat0x57bd8(%rip), %xmm3
    00000061: 	movsd	init_value(%rip), %xmm2
    00000069: 	andl	$-0x2, %ebx
    0000006c: 	subl	$0x1, %eax
    0000006f: 	shlq	$0x4, %rax
    00000073: 	leaq	0x10(%r13,%rax), %r14
    00000078: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1129:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp1124 # Offset: 133
    00000087: 	cmpl	$0x1, %r15d
    0000008b: 	je	.Ltmp1125 # Offset: 139
    00000091: 	movq	%r13, %rax
    00000094: 	pxor	%xmm1, %xmm1
    00000098: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1126:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	movdqu	(%rax), %xmm4
    000000a8: 	addq	$0x10, %rax
    000000ac: 	psllq	$0x6, %xmm0
    000000b1: 	psubq	%xmm4, %xmm0
    000000b5: 	paddq	%xmm0, %xmm1
    000000b9: 	cmpq	%rax, %r14
    000000bc: 	jne	.Ltmp1126 # Offset: 188
    000000be: 	movdqa	%xmm1, %xmm0
    000000c2: 	movslq	%ebx, %rdx
    000000c5: 	psrldq	$0x8, %xmm0
    000000ca: 	paddq	%xmm0, %xmm1
    000000ce: 	movq	%xmm1, %rax
    000000d3: 	cmpl	%r15d, %ebx
    000000d6: 	je	.Ltmp1124 # Offset: 214
.Ltmp1138:
    000000d8: 	movq	(%r13,%rdx,8), %rdi
    000000dd: 	movq	%rdi, %rdx
    000000e0: 	shlq	$0x6, %rdx
    000000e4: 	subq	%rdi, %rdx
    000000e7: 	addq	%rdx, %rax
.Ltmp1124:
    000000ea: 	comisd	%xmm3, %xmm2
    000000ee: 	jae	.Ltmp1127 # Offset: 238
    000000f4: 	cvttsd2si	%xmm2, %rdi
.Ltmp1137:
    000000f9: 	movq	%rdi, %rdx
    000000fc: 	shlq	$0x6, %rdx
    00000100: 	subq	%rdi, %rdx
    00000103: 	imulq	$0x1f40, %rdx, %rdx
    0000010a: 	cmpq	%rax, %rdx
    0000010d: 	je	.Ltmp1128 # Offset: 269
    0000010f: 	movl	current_test(%rip), %edx
    00000115: 	movq	%rbp, %rsi
    00000118: 	movl	$0x1, %edi
    0000011d: 	xorl	%eax, %eax
    0000011f: 	addl	$0x1, %r12d
    00000123: 	callq	__printf_chk@PLT # Offset: 291
    00000128: 	movl	iterations(%rip), %esi
    0000012e: 	cmpl	%esi, %r12d
    00000131: 	jge	.Ltmp1123 # Offset: 305
    00000133: 	movq	DATAat0x57bd8(%rip), %rax
    0000013a: 	movsd	init_value(%rip), %xmm2
    00000142: 	movq	%rax, %xmm3
    00000147: 	jmp	.Ltmp1129 # Offset: 327
    0000014c: 	nopl	(%rax) # Size: 4
.Ltmp1128:
    00000150: 	addl	$0x1, %r12d
    00000154: 	cmpl	%esi, %r12d
    00000157: 	jl	.Ltmp1129 # Offset: 343
.Ltmp1123:
    0000015d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000164: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000016b: 	subq	$0x20, %rax
    0000016f: 	cmpq	%rax, %rbx
    00000172: 	je	.Ltmp1130 # Offset: 370
    00000178: 	movq	0x8(%rsp), %rax
    0000017d: 	leaq	0x10(%rbx), %rdi
    00000181: 	movq	%rdi, (%rbx)
    00000184: 	movq	(%rax), %rbp
    00000187: 	movq	0x8(%rax), %r12
    0000018b: 	movq	%rbp, %rax
    0000018e: 	addq	%r12, %rax
    00000191: 	je	.Ltmp1131 # Offset: 401
    00000193: 	testq	%rbp, %rbp
    00000196: 	je	.Ltmp1132 # Offset: 406
.Ltmp1131:
    0000019c: 	movq	%r12, 0x10(%rsp)
    000001a1: 	cmpq	$0xf, %r12
    000001a5: 	ja	.Ltmp1133 # Offset: 421
    000001ab: 	cmpq	$0x1, %r12
    000001af: 	jne	.Ltmp1134 # Offset: 431
    000001b5: 	movzbl	(%rbp), %eax
    000001b9: 	movb	%al, 0x10(%rbx)
.Ltmp1139:
    000001bc: 	movq	%r12, 0x8(%rbx)
    000001c0: 	movb	$0x0, (%rdi,%r12)
    000001c5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001cc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001d3: 	addq	$0x20, %rax
    000001d7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001de: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001e5: 	je	.Ltmp1135 # Offset: 485
.Ltmp1140:
    000001eb: 	movq	-0x20(%rax), %rbp
    000001ef: 	callq	clock@PLT # Offset: 495
    000001f4: 	movq	%rax, end_time(%rip)
    000001fb: 	movq	0x18(%rsp), %rdx
    00000200: 	subq	%fs:0x28, %rdx
    00000209: 	jne	.Ltmp1136 # Offset: 521
    0000020f: 	subq	start_time(%rip), %rax
    00000216: 	pxor	%xmm0, %xmm0
    0000021a: 	movq	%rbp, %rdi
    0000021d: 	cvtsi2sd	%rax, %xmm0
    00000222: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000022a: 	addq	$0x28, %rsp
    0000022e: 	popq	%rbx
    0000022f: 	popq	%rbp
    00000230: 	popq	%r12
    00000232: 	popq	%r13
    00000234: 	popq	%r14
    00000236: 	popq	%r15
    00000238: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 568
    0000023d: 	nopl	(%rax) # Size: 3
.Ltmp1127:
    00000240: 	movabsq	$-0x8000000000000000, %rcx
    0000024a: 	movapd	%xmm2, %xmm0
    0000024e: 	subsd	%xmm3, %xmm0
    00000252: 	cvttsd2si	%xmm0, %rdi
    00000257: 	xorq	%rcx, %rdi
    0000025a: 	jmp	.Ltmp1137 # Offset: 602
.Ltmp1125:
    0000025f: 	xorl	%edx, %edx
    00000261: 	xorl	%eax, %eax
    00000263: 	jmp	.Ltmp1138 # Offset: 611
.Ltmp1133:
    00000268: 	movq	%rbx, %rdi
    0000026b: 	leaq	0x10(%rsp), %rsi
    00000270: 	xorl	%edx, %edx
    00000272: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 626
    00000277: 	movq	%rax, (%rbx)
    0000027a: 	movq	%rax, %rdi
    0000027d: 	movq	0x10(%rsp), %rax
    00000282: 	movq	%rax, 0x10(%rbx)
.Ltmp1141:
    00000286: 	movq	%r12, %rdx
    00000289: 	movq	%rbp, %rsi
    0000028c: 	callq	memcpy@PLT # Offset: 652
    00000291: 	movq	0x10(%rsp), %r12
    00000296: 	movq	(%rbx), %rdi
    00000299: 	jmp	.Ltmp1139 # Offset: 665
.Ltmp1130:
    0000029e: 	movq	0x8(%rsp), %rsi
    000002a3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002aa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 682
    000002af: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002b6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002bd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002c4: 	jne	.Ltmp1140 # Offset: 708
.Ltmp1135:
    000002ca: 	movq	-0x8(%rdx), %rax
    000002ce: 	addq	$0x200, %rax
    000002d4: 	jmp	.Ltmp1140 # Offset: 724
.Ltmp1134:
    000002d9: 	testq	%r12, %r12
    000002dc: 	je	.Ltmp1139 # Offset: 732
    000002e2: 	jmp	.Ltmp1141 # Offset: 738
.Ltmp1136:
    000002e4: 	callq	__stack_chk_fail@PLT # Offset: 740
.Ltmp1132:
    000002e9: 	leaq	DATAat0x57008(%rip), %rdi
    000002f0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 752
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIm27custom_multiply_shiftadd_63ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIj27custom_multiply_shiftadd_63IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 109
  State       : disassembled
  Address     : 0xd840
  Size        : 0x2f3
  MaxSize     : 0x300
  Offset      : 0xd840
  Section     : .text
  Orc Section : .local.text._Z13test_constantIj27custom_multiply_shiftadd_63IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0108:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1142 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebp
    0000004e: 	leaq	DATAat0x571d0(%rip), %r12
    00000055: 	xorl	%r13d, %r13d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r14d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm2
    00000067: 	andl	$-0x4, %ebp
    0000006a: 	shrl	$0x2, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r15,%rax), %rbx
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp1147:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r14d, %r14d
    00000085: 	jle	.Ltmp1143 # Offset: 133
    0000008b: 	cmpl	$0x2, 0x4(%rsp)
    00000090: 	jbe	.Ltmp1144 # Offset: 144
    00000096: 	movq	%r15, %rax
    00000099: 	pxor	%xmm1, %xmm1
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp1145:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	movdqu	(%rax), %xmm3
    000000a8: 	addq	$0x10, %rax
    000000ac: 	pslld	$0x6, %xmm0
    000000b1: 	psubd	%xmm3, %xmm0
    000000b5: 	paddd	%xmm0, %xmm1
    000000b9: 	cmpq	%rax, %rbx
    000000bc: 	jne	.Ltmp1145 # Offset: 188
    000000be: 	movdqa	%xmm1, %xmm0
    000000c2: 	movl	%ebp, %edx
    000000c4: 	psrldq	$0x8, %xmm0
    000000c9: 	paddd	%xmm0, %xmm1
    000000cd: 	movdqa	%xmm1, %xmm0
    000000d1: 	psrldq	$0x4, %xmm0
    000000d6: 	paddd	%xmm0, %xmm1
    000000da: 	movd	%xmm1, %eax
    000000de: 	cmpl	%r14d, %ebp
    000000e1: 	je	.Ltmp1143 # Offset: 225
.Ltmp1155:
    000000e3: 	movslq	%edx, %rdi
    000000e6: 	movl	(%r15,%rdi,4), %r10d
    000000ea: 	leaq	(,%rdi,4), %r9
    000000f2: 	movl	%r10d, %edi
    000000f5: 	shll	$0x6, %edi
    000000f8: 	subl	%r10d, %edi
    000000fb: 	addl	%edi, %eax
    000000fd: 	leal	0x1(%rdx), %edi
    00000100: 	cmpl	%edi, %r14d
    00000103: 	jle	.Ltmp1143 # Offset: 259
    00000105: 	movl	0x4(%r15,%r9), %r10d
    0000010a: 	addl	$0x2, %edx
    0000010d: 	movl	%r10d, %edi
    00000110: 	shll	$0x6, %edi
    00000113: 	subl	%r10d, %edi
    00000116: 	addl	%edi, %eax
    00000118: 	cmpl	%r14d, %edx
    0000011b: 	jge	.Ltmp1143 # Offset: 283
    0000011d: 	movl	0x8(%r15,%r9), %edi
    00000122: 	movl	%edi, %edx
    00000124: 	shll	$0x6, %edx
    00000127: 	subl	%edi, %edx
    00000129: 	addl	%edx, %eax
.Ltmp1143:
    0000012b: 	cvttsd2si	%xmm2, %rdx
    00000130: 	imull	$0x7b0c0, %edx, %edx
    00000136: 	cmpl	%eax, %edx
    00000138: 	je	.Ltmp1146 # Offset: 312
    0000013a: 	movl	current_test(%rip), %edx
    00000140: 	movq	%r12, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	xorl	%eax, %eax
    0000014a: 	addl	$0x1, %r13d
    0000014e: 	callq	__printf_chk@PLT # Offset: 334
    00000153: 	movl	iterations(%rip), %esi
    00000159: 	cmpl	%r13d, %esi
    0000015c: 	jle	.Ltmp1142 # Offset: 348
    0000015e: 	movsd	init_value(%rip), %xmm2
    00000166: 	jmp	.Ltmp1147 # Offset: 358
    0000016b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1146:
    00000170: 	addl	$0x1, %r13d
    00000174: 	cmpl	%esi, %r13d
    00000177: 	jl	.Ltmp1147 # Offset: 375
.Ltmp1142:
    0000017d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000184: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000018b: 	subq	$0x20, %rax
    0000018f: 	cmpq	%rax, %rbx
    00000192: 	je	.Ltmp1148 # Offset: 402
    00000198: 	movq	0x8(%rsp), %rax
    0000019d: 	leaq	0x10(%rbx), %rdi
    000001a1: 	movq	%rdi, (%rbx)
    000001a4: 	movq	(%rax), %rbp
    000001a7: 	movq	0x8(%rax), %r12
    000001ab: 	movq	%rbp, %rax
    000001ae: 	addq	%r12, %rax
    000001b1: 	je	.Ltmp1149 # Offset: 433
    000001b3: 	testq	%rbp, %rbp
    000001b6: 	je	.Ltmp1150 # Offset: 438
.Ltmp1149:
    000001bc: 	movq	%r12, 0x10(%rsp)
    000001c1: 	cmpq	$0xf, %r12
    000001c5: 	ja	.Ltmp1151 # Offset: 453
    000001cb: 	cmpq	$0x1, %r12
    000001cf: 	jne	.Ltmp1152 # Offset: 463
    000001d5: 	movzbl	(%rbp), %eax
    000001d9: 	movb	%al, 0x10(%rbx)
.Ltmp1156:
    000001dc: 	movq	%r12, 0x8(%rbx)
    000001e0: 	movb	$0x0, (%rdi,%r12)
    000001e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001f3: 	addq	$0x20, %rax
    000001f7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001fe: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000205: 	je	.Ltmp1153 # Offset: 517
.Ltmp1157:
    0000020b: 	movq	-0x20(%rax), %rbp
    0000020f: 	callq	clock@PLT # Offset: 527
    00000214: 	movq	%rax, end_time(%rip)
    0000021b: 	movq	0x18(%rsp), %rdx
    00000220: 	subq	%fs:0x28, %rdx
    00000229: 	jne	.Ltmp1154 # Offset: 553
    0000022f: 	subq	start_time(%rip), %rax
    00000236: 	pxor	%xmm0, %xmm0
    0000023a: 	movq	%rbp, %rdi
    0000023d: 	cvtsi2sd	%rax, %xmm0
    00000242: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000024a: 	addq	$0x28, %rsp
    0000024e: 	popq	%rbx
    0000024f: 	popq	%rbp
    00000250: 	popq	%r12
    00000252: 	popq	%r13
    00000254: 	popq	%r14
    00000256: 	popq	%r15
    00000258: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 600
.Ltmp1144:
    0000025d: 	xorl	%edx, %edx
    0000025f: 	xorl	%eax, %eax
    00000261: 	jmp	.Ltmp1155 # Offset: 609
.Ltmp1151:
    00000266: 	movq	%rbx, %rdi
    00000269: 	leaq	0x10(%rsp), %rsi
    0000026e: 	xorl	%edx, %edx
    00000270: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 624
    00000275: 	movq	%rax, (%rbx)
    00000278: 	movq	%rax, %rdi
    0000027b: 	movq	0x10(%rsp), %rax
    00000280: 	movq	%rax, 0x10(%rbx)
.Ltmp1158:
    00000284: 	movq	%r12, %rdx
    00000287: 	movq	%rbp, %rsi
    0000028a: 	callq	memcpy@PLT # Offset: 650
    0000028f: 	movq	0x10(%rsp), %r12
    00000294: 	movq	(%rbx), %rdi
    00000297: 	jmp	.Ltmp1156 # Offset: 663
.Ltmp1148:
    0000029c: 	movq	0x8(%rsp), %rsi
    000002a1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002a8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 680
    000002ad: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002b4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002bb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002c2: 	jne	.Ltmp1157 # Offset: 706
.Ltmp1153:
    000002c8: 	movq	-0x8(%rdx), %rax
    000002cc: 	addq	$0x200, %rax
    000002d2: 	jmp	.Ltmp1157 # Offset: 722
.Ltmp1152:
    000002d7: 	testq	%r12, %r12
    000002da: 	je	.Ltmp1156 # Offset: 730
    000002e0: 	jmp	.Ltmp1158 # Offset: 736
.Ltmp1154:
    000002e2: 	callq	__stack_chk_fail@PLT # Offset: 738
.Ltmp1150:
    000002e7: 	leaq	DATAat0x57008(%rip), %rdi
    000002ee: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 750
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIj27custom_multiply_shiftadd_63IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIt27custom_multiply_shiftadd_63ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 110
  State       : disassembled
  Address     : 0xdb40
  Size        : 0x355
  MaxSize     : 0x360
  Offset      : 0xdb40
  Section     : .text
  Orc Section : .local.text._Z13test_constantIt27custom_multiply_shiftadd_63ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0109:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %edi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%edi, %edi
    00000041: 	jle	.Ltmp1159 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r14d, %eax
    0000005f: 	cvttsd2si	init_value(%rip), %esi
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	shrl	$0x3, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r15,%rax), %r13
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp1165:
    00000080: 	xorl	%edx, %edx
    00000082: 	testl	%r14d, %r14d
    00000085: 	jle	.Ltmp1160 # Offset: 133
    0000008b: 	cmpl	$0x6, 0x4(%rsp)
    00000090: 	jbe	.Ltmp1161 # Offset: 144
    00000096: 	movq	%r15, %rax
    00000099: 	pxor	%xmm1, %xmm1
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp1162:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	movdqu	(%rax), %xmm2
    000000a8: 	addq	$0x10, %rax
    000000ac: 	psllw	$0x6, %xmm0
    000000b1: 	psubw	%xmm2, %xmm0
    000000b5: 	paddw	%xmm0, %xmm1
    000000b9: 	cmpq	%r13, %rax
    000000bc: 	jne	.Ltmp1162 # Offset: 188
    000000be: 	movdqa	%xmm1, %xmm0
    000000c2: 	psrldq	$0x8, %xmm0
    000000c7: 	paddw	%xmm0, %xmm1
    000000cb: 	movdqa	%xmm1, %xmm0
    000000cf: 	psrldq	$0x4, %xmm0
    000000d4: 	paddw	%xmm0, %xmm1
    000000d8: 	movdqa	%xmm1, %xmm0
    000000dc: 	psrldq	$0x2, %xmm0
    000000e1: 	paddw	%xmm0, %xmm1
    000000e5: 	pextrw	$0x0, %xmm1, %edx
    000000ea: 	cmpl	%r14d, %ebx
    000000ed: 	je	.Ltmp1160 # Offset: 237
    000000f3: 	movl	%ebx, %eax
    000000f5: 	movl	%ebx, %ecx
.Ltmp1173:
    000000f7: 	movl	%r14d, %r8d
    000000fa: 	subl	%eax, %r8d
    000000fd: 	leal	-0x1(%r8), %r9d
    00000101: 	cmpl	$0x2, %r9d
    00000105: 	jbe	.Ltmp1163 # Offset: 261
    00000107: 	movq	(%r15,%rax,2), %xmm1
    0000010d: 	movdqa	%xmm1, %xmm0
    00000111: 	psllw	$0x6, %xmm0
    00000116: 	psubw	%xmm1, %xmm0
    0000011a: 	pextrw	$0x0, %xmm0, %eax
    0000011f: 	pextrw	$0x1, %xmm0, %r9d
    00000125: 	addl	%r9d, %eax
    00000128: 	addl	%edx, %eax
    0000012a: 	pextrw	$0x2, %xmm0, %edx
    0000012f: 	addl	%edx, %eax
    00000131: 	pextrw	$0x3, %xmm0, %edx
    00000136: 	addl	%eax, %edx
    00000138: 	movl	%r8d, %eax
    0000013b: 	andl	$-0x4, %eax
    0000013e: 	addl	%eax, %ecx
    00000140: 	cmpl	%eax, %r8d
    00000143: 	je	.Ltmp1160 # Offset: 323
.Ltmp1163:
    00000145: 	movslq	%ecx, %rax
    00000148: 	movzwl	(%r15,%rax,2), %r9d
    0000014d: 	leaq	(%rax,%rax), %r8
    00000151: 	movl	%r9d, %eax
    00000154: 	shll	$0x6, %eax
    00000157: 	subl	%r9d, %eax
    0000015a: 	addl	%eax, %edx
    0000015c: 	leal	0x1(%rcx), %eax
    0000015f: 	cmpl	%eax, %r14d
    00000162: 	jle	.Ltmp1160 # Offset: 354
    00000164: 	movzwl	0x2(%r15,%r8), %r9d
    0000016a: 	addl	$0x2, %ecx
    0000016d: 	movl	%r9d, %eax
    00000170: 	shll	$0x6, %eax
    00000173: 	subl	%r9d, %eax
    00000176: 	addl	%eax, %edx
    00000178: 	cmpl	%ecx, %r14d
    0000017b: 	jle	.Ltmp1160 # Offset: 379
    0000017d: 	movzwl	0x4(%r15,%r8), %ecx
    00000183: 	movl	%ecx, %eax
    00000185: 	shll	$0x6, %eax
    00000188: 	subl	%ecx, %eax
    0000018a: 	addl	%eax, %edx
.Ltmp1160:
    0000018c: 	movl	%esi, %eax
    0000018e: 	shll	$0x6, %eax
    00000191: 	subl	%esi, %eax
    00000193: 	imulw	$0x1f40, %ax, %ax
    00000198: 	cmpw	%dx, %ax
    0000019b: 	je	.Ltmp1164 # Offset: 411
    0000019d: 	movl	current_test(%rip), %edx
    000001a3: 	movl	$0x1, %edi
    000001a8: 	movq	%rbp, %rsi
    000001ab: 	xorl	%eax, %eax
    000001ad: 	addl	$0x1, %r12d
    000001b1: 	callq	__printf_chk@PLT # Offset: 433
    000001b6: 	movl	iterations(%rip), %edi
    000001bc: 	cmpl	%r12d, %edi
    000001bf: 	jle	.Ltmp1159 # Offset: 447
    000001c1: 	cvttsd2si	init_value(%rip), %esi
    000001c9: 	jmp	.Ltmp1165 # Offset: 457
    000001ce: 	nop # Size: 2
.Ltmp1164:
    000001d0: 	addl	$0x1, %r12d
    000001d4: 	cmpl	%edi, %r12d
    000001d7: 	jl	.Ltmp1165 # Offset: 471
.Ltmp1159:
    000001dd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001eb: 	subq	$0x20, %rax
    000001ef: 	cmpq	%rax, %rbx
    000001f2: 	je	.Ltmp1166 # Offset: 498
    000001f8: 	movq	0x8(%rsp), %rax
    000001fd: 	leaq	0x10(%rbx), %rdi
    00000201: 	movq	%rdi, (%rbx)
    00000204: 	movq	(%rax), %rbp
    00000207: 	movq	0x8(%rax), %r12
    0000020b: 	movq	%rbp, %rax
    0000020e: 	addq	%r12, %rax
    00000211: 	je	.Ltmp1167 # Offset: 529
    00000213: 	testq	%rbp, %rbp
    00000216: 	je	.Ltmp1168 # Offset: 534
.Ltmp1167:
    0000021c: 	movq	%r12, 0x10(%rsp)
    00000221: 	cmpq	$0xf, %r12
    00000225: 	ja	.Ltmp1169 # Offset: 549
    0000022b: 	cmpq	$0x1, %r12
    0000022f: 	jne	.Ltmp1170 # Offset: 559
    00000235: 	movzbl	(%rbp), %eax
    00000239: 	movb	%al, 0x10(%rbx)
.Ltmp1174:
    0000023c: 	movq	%r12, 0x8(%rbx)
    00000240: 	movb	$0x0, (%rdi,%r12)
    00000245: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000024c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000253: 	addq	$0x20, %rax
    00000257: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000025e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000265: 	je	.Ltmp1171 # Offset: 613
.Ltmp1175:
    0000026b: 	movq	-0x20(%rax), %rbp
    0000026f: 	callq	clock@PLT # Offset: 623
    00000274: 	movq	%rax, end_time(%rip)
    0000027b: 	movq	0x18(%rsp), %rdx
    00000280: 	subq	%fs:0x28, %rdx
    00000289: 	jne	.Ltmp1172 # Offset: 649
    0000028f: 	subq	start_time(%rip), %rax
    00000296: 	pxor	%xmm0, %xmm0
    0000029a: 	movq	%rbp, %rdi
    0000029d: 	cvtsi2sd	%rax, %xmm0
    000002a2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002aa: 	addq	$0x28, %rsp
    000002ae: 	popq	%rbx
    000002af: 	popq	%rbp
    000002b0: 	popq	%r12
    000002b2: 	popq	%r13
    000002b4: 	popq	%r14
    000002b6: 	popq	%r15
    000002b8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 696
.Ltmp1161:
    000002bd: 	xorl	%eax, %eax
    000002bf: 	xorl	%ecx, %ecx
    000002c1: 	xorl	%edx, %edx
    000002c3: 	jmp	.Ltmp1173 # Offset: 707
.Ltmp1169:
    000002c8: 	movq	%rbx, %rdi
    000002cb: 	leaq	0x10(%rsp), %rsi
    000002d0: 	xorl	%edx, %edx
    000002d2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 722
    000002d7: 	movq	%rax, (%rbx)
    000002da: 	movq	%rax, %rdi
    000002dd: 	movq	0x10(%rsp), %rax
    000002e2: 	movq	%rax, 0x10(%rbx)
.Ltmp1176:
    000002e6: 	movq	%r12, %rdx
    000002e9: 	movq	%rbp, %rsi
    000002ec: 	callq	memcpy@PLT # Offset: 748
    000002f1: 	movq	0x10(%rsp), %r12
    000002f6: 	movq	(%rbx), %rdi
    000002f9: 	jmp	.Ltmp1174 # Offset: 761
.Ltmp1166:
    000002fe: 	movq	0x8(%rsp), %rsi
    00000303: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000030a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 778
    0000030f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000316: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000031d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000324: 	jne	.Ltmp1175 # Offset: 804
.Ltmp1171:
    0000032a: 	movq	-0x8(%rdx), %rax
    0000032e: 	addq	$0x200, %rax
    00000334: 	jmp	.Ltmp1175 # Offset: 820
.Ltmp1170:
    00000339: 	testq	%r12, %r12
    0000033c: 	je	.Ltmp1174 # Offset: 828
    00000342: 	jmp	.Ltmp1176 # Offset: 834
.Ltmp1172:
    00000344: 	callq	__stack_chk_fail@PLT # Offset: 836
.Ltmp1168:
    00000349: 	leaq	DATAat0x57008(%rip), %rdi
    00000350: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 848
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIt27custom_multiply_shiftadd_63ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIh27custom_multiply_shiftadd_83IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIh27custom_multiply_shiftadd_83IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIh27custom_multiply_shiftadd_83IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 111
  State       : disassembled
  Address     : 0xdea0
  Size        : 0x25e
  MaxSize     : 0x260
  Offset      : 0xdea0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIh27custom_multiply_shiftadd_83IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0110:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	%rdi, %rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp1177 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbx), %r13
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp1180:
    00000058: 	movq	%rbx, %rax
    0000005b: 	pxor	%xmm2, %xmm2
    0000005f: 	nop # Size: 1
.Ltmp1178:
    00000060: 	movdqu	(%rax), %xmm3
    00000064: 	addq	$0x10, %rax
    00000068: 	movdqa	%xmm3, %xmm1
    0000006c: 	psubb	%xmm3, %xmm2
    00000070: 	paddb	%xmm3, %xmm1
    00000074: 	paddb	%xmm1, %xmm1
    00000078: 	movdqa	%xmm1, %xmm0
    0000007c: 	paddb	%xmm3, %xmm0
    00000080: 	paddb	%xmm0, %xmm0
    00000084: 	paddb	%xmm0, %xmm0
    00000088: 	paddb	%xmm0, %xmm0
    0000008c: 	paddb	%xmm0, %xmm0
    00000090: 	paddb	%xmm0, %xmm1
    00000094: 	paddb	%xmm1, %xmm2
    00000098: 	cmpq	%rax, %r13
    0000009b: 	jne	.Ltmp1178 # Offset: 155
    0000009d: 	movdqa	%xmm2, %xmm0
    000000a1: 	pxor	%xmm4, %xmm4
    000000a5: 	movl	%esi, %edx
    000000a7: 	psrldq	$0x8, %xmm0
    000000ac: 	shll	$0x6, %edx
    000000af: 	paddb	%xmm0, %xmm2
    000000b3: 	psadbw	%xmm4, %xmm2
    000000b7: 	movd	%xmm2, %eax
    000000bb: 	addb	%dl, %al
    000000bd: 	je	.Ltmp1179 # Offset: 189
    000000bf: 	movl	current_test(%rip), %edx
    000000c5: 	movq	%rbp, %rsi
    000000c8: 	movl	$0x1, %edi
    000000cd: 	xorl	%eax, %eax
    000000cf: 	addl	$0x1, %r14d
    000000d3: 	callq	__printf_chk@PLT # Offset: 211
    000000d8: 	movl	iterations(%rip), %ecx
    000000de: 	cmpl	%r14d, %ecx
    000000e1: 	jle	.Ltmp1177 # Offset: 225
    000000e3: 	cvttsd2si	init_value(%rip), %esi
    000000eb: 	jmp	.Ltmp1180 # Offset: 235
.Ltmp1179:
    000000f0: 	addl	$0x1, %r14d
    000000f4: 	cmpl	%ecx, %r14d
    000000f7: 	jl	.Ltmp1180 # Offset: 247
.Ltmp1177:
    000000fd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000104: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000010b: 	subq	$0x20, %rax
    0000010f: 	cmpq	%rax, %rbx
    00000112: 	je	.Ltmp1181 # Offset: 274
    00000118: 	leaq	0x10(%rbx), %rdi
    0000011c: 	movq	%rdi, (%rbx)
    0000011f: 	movq	(%r12), %rbp
    00000123: 	movq	0x8(%r12), %r12
    00000128: 	movq	%rbp, %rax
    0000012b: 	addq	%r12, %rax
    0000012e: 	je	.Ltmp1182 # Offset: 302
    00000130: 	testq	%rbp, %rbp
    00000133: 	je	.Ltmp1183 # Offset: 307
.Ltmp1182:
    00000139: 	movq	%r12, (%rsp)
    0000013d: 	cmpq	$0xf, %r12
    00000141: 	ja	.Ltmp1184 # Offset: 321
    00000147: 	cmpq	$0x1, %r12
    0000014b: 	jne	.Ltmp1185 # Offset: 331
    00000151: 	movzbl	(%rbp), %eax
    00000155: 	movb	%al, 0x10(%rbx)
.Ltmp1188:
    00000158: 	movq	%r12, 0x8(%rbx)
    0000015c: 	movb	$0x0, (%rdi,%r12)
    00000161: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000168: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000016f: 	addq	$0x20, %rax
    00000173: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000017a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000181: 	je	.Ltmp1186 # Offset: 385
.Ltmp1189:
    00000187: 	movq	-0x20(%rax), %rbp
    0000018b: 	callq	clock@PLT # Offset: 395
    00000190: 	movq	%rax, end_time(%rip)
    00000197: 	movq	0x8(%rsp), %rdx
    0000019c: 	subq	%fs:0x28, %rdx
    000001a5: 	jne	.Ltmp1187 # Offset: 421
    000001ab: 	subq	start_time(%rip), %rax
    000001b2: 	pxor	%xmm0, %xmm0
    000001b6: 	movq	%rbp, %rdi
    000001b9: 	cvtsi2sd	%rax, %xmm0
    000001be: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001c6: 	addq	$0x10, %rsp
    000001ca: 	popq	%rbx
    000001cb: 	popq	%rbp
    000001cc: 	popq	%r12
    000001ce: 	popq	%r13
    000001d0: 	popq	%r14
    000001d2: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 466
.Ltmp1184:
    000001d7: 	movq	%rbx, %rdi
    000001da: 	movq	%rsp, %rsi
    000001dd: 	xorl	%edx, %edx
    000001df: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 479
    000001e4: 	movq	%rax, (%rbx)
    000001e7: 	movq	%rax, %rdi
    000001ea: 	movq	(%rsp), %rax
    000001ee: 	movq	%rax, 0x10(%rbx)
.Ltmp1190:
    000001f2: 	movq	%r12, %rdx
    000001f5: 	movq	%rbp, %rsi
    000001f8: 	callq	memcpy@PLT # Offset: 504
    000001fd: 	movq	(%rsp), %r12
    00000201: 	movq	(%rbx), %rdi
    00000204: 	jmp	.Ltmp1188 # Offset: 516
.Ltmp1181:
    00000209: 	movq	%r12, %rsi
    0000020c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000213: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 531
    00000218: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000021f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000226: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000022d: 	jne	.Ltmp1189 # Offset: 557
.Ltmp1186:
    00000233: 	movq	-0x8(%rdx), %rax
    00000237: 	addq	$0x200, %rax
    0000023d: 	jmp	.Ltmp1189 # Offset: 573
.Ltmp1185:
    00000242: 	testq	%r12, %r12
    00000245: 	je	.Ltmp1188 # Offset: 581
    0000024b: 	jmp	.Ltmp1190 # Offset: 587
.Ltmp1187:
    0000024d: 	callq	__stack_chk_fail@PLT # Offset: 589
.Ltmp1183:
    00000252: 	leaq	DATAat0x57008(%rip), %rdi
    00000259: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 601
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIh27custom_multiply_shiftadd_83IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIm27custom_multiply_shiftadd_83ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 112
  State       : disassembled
  Address     : 0xe100
  Size        : 0x2ba
  MaxSize     : 0x2c0
  Offset      : 0xe100
  Section     : .text
  Orc Section : .local.text._Z13test_constantIm27custom_multiply_shiftadd_83ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0111:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r8d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r8d, %r8d
    00000043: 	jle	.Ltmp1191 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movsd	DATAat0x57bd8(%rip), %xmm1
    00000055: 	xorl	%r15d, %r15d
    00000058: 	movsd	init_value(%rip), %xmm0
    00000060: 	leaq	0x8(%rbx,%rax,8), %r14
    00000065: 	leaq	DATAat0x571d0(%rip), %r12
    0000006c: 	movabsq	$-0x8000000000000000, %rbp
    00000076: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1196:
    00000080: 	movq	%rbx, %rdx
    00000083: 	xorl	%edi, %edi
    00000085: 	testl	%r13d, %r13d
    00000088: 	jle	.Ltmp1192 # Offset: 136
    0000008a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1193:
    00000090: 	movq	(%rdx), %rsi
    00000093: 	addq	$0x8, %rdx
    00000097: 	leaq	(,%rsi,4), %r9
    0000009f: 	leaq	(%r9,%rsi), %rax
    000000a3: 	shlq	$0x4, %rax
    000000a7: 	addq	%r9, %rax
    000000aa: 	subq	%rsi, %rax
    000000ad: 	addq	%rax, %rdi
    000000b0: 	cmpq	%rdx, %r14
    000000b3: 	jne	.Ltmp1193 # Offset: 179
.Ltmp1192:
    000000b5: 	comisd	%xmm1, %xmm0
    000000b9: 	jae	.Ltmp1194 # Offset: 185
    000000bf: 	cvttsd2si	%xmm0, %rdx
.Ltmp1204:
    000000c4: 	leaq	(,%rdx,4), %rsi
    000000cc: 	leaq	(%rsi,%rdx), %rax
    000000d0: 	shlq	$0x4, %rax
    000000d4: 	addq	%rsi, %rax
    000000d7: 	subq	%rdx, %rax
    000000da: 	imulq	$0x1f40, %rax, %rax
    000000e1: 	cmpq	%rdi, %rax
    000000e4: 	je	.Ltmp1195 # Offset: 228
    000000e6: 	movl	current_test(%rip), %edx
    000000ec: 	movq	%r12, %rsi
    000000ef: 	movl	$0x1, %edi
    000000f4: 	xorl	%eax, %eax
    000000f6: 	addl	$0x1, %r15d
    000000fa: 	callq	__printf_chk@PLT # Offset: 250
    000000ff: 	movl	iterations(%rip), %r8d
    00000106: 	cmpl	%r8d, %r15d
    00000109: 	jge	.Ltmp1191 # Offset: 265
    0000010b: 	movq	DATAat0x57bd8(%rip), %rax
    00000112: 	movsd	init_value(%rip), %xmm0
    0000011a: 	movq	%rax, %xmm1
    0000011f: 	jmp	.Ltmp1196 # Offset: 287
    00000124: 	nopl	(%rax) # Size: 4
.Ltmp1195:
    00000128: 	addl	$0x1, %r15d
    0000012c: 	cmpl	%r8d, %r15d
    0000012f: 	jl	.Ltmp1196 # Offset: 303
.Ltmp1191:
    00000135: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000013c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000143: 	subq	$0x20, %rax
    00000147: 	cmpq	%rax, %rbx
    0000014a: 	je	.Ltmp1197 # Offset: 330
    00000150: 	movq	0x8(%rsp), %rax
    00000155: 	leaq	0x10(%rbx), %rdi
    00000159: 	movq	%rdi, (%rbx)
    0000015c: 	movq	(%rax), %rbp
    0000015f: 	movq	0x8(%rax), %r12
    00000163: 	movq	%rbp, %rax
    00000166: 	addq	%r12, %rax
    00000169: 	je	.Ltmp1198 # Offset: 361
    0000016b: 	testq	%rbp, %rbp
    0000016e: 	je	.Ltmp1199 # Offset: 366
.Ltmp1198:
    00000174: 	movq	%r12, 0x10(%rsp)
    00000179: 	cmpq	$0xf, %r12
    0000017d: 	ja	.Ltmp1200 # Offset: 381
    00000183: 	cmpq	$0x1, %r12
    00000187: 	jne	.Ltmp1201 # Offset: 391
    0000018d: 	movzbl	(%rbp), %eax
    00000191: 	movb	%al, 0x10(%rbx)
.Ltmp1205:
    00000194: 	movq	%r12, 0x8(%rbx)
    00000198: 	movb	$0x0, (%rdi,%r12)
    0000019d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001a4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001ab: 	addq	$0x20, %rax
    000001af: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001b6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001bd: 	je	.Ltmp1202 # Offset: 445
.Ltmp1206:
    000001c3: 	movq	-0x20(%rax), %rbp
    000001c7: 	callq	clock@PLT # Offset: 455
    000001cc: 	movq	%rax, end_time(%rip)
    000001d3: 	movq	0x18(%rsp), %rdx
    000001d8: 	subq	%fs:0x28, %rdx
    000001e1: 	jne	.Ltmp1203 # Offset: 481
    000001e7: 	subq	start_time(%rip), %rax
    000001ee: 	pxor	%xmm0, %xmm0
    000001f2: 	movq	%rbp, %rdi
    000001f5: 	cvtsi2sd	%rax, %xmm0
    000001fa: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000202: 	addq	$0x28, %rsp
    00000206: 	popq	%rbx
    00000207: 	popq	%rbp
    00000208: 	popq	%r12
    0000020a: 	popq	%r13
    0000020c: 	popq	%r14
    0000020e: 	popq	%r15
    00000210: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 528
    00000215: 	nopl	(%rax) # Size: 3
.Ltmp1194:
    00000218: 	movapd	%xmm0, %xmm2
    0000021c: 	subsd	%xmm1, %xmm2
    00000220: 	cvttsd2si	%xmm2, %rdx
    00000225: 	xorq	%rbp, %rdx
    00000228: 	jmp	.Ltmp1204 # Offset: 552
.Ltmp1200:
    0000022d: 	movq	%rbx, %rdi
    00000230: 	leaq	0x10(%rsp), %rsi
    00000235: 	xorl	%edx, %edx
    00000237: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 567
    0000023c: 	movq	%rax, (%rbx)
    0000023f: 	movq	%rax, %rdi
    00000242: 	movq	0x10(%rsp), %rax
    00000247: 	movq	%rax, 0x10(%rbx)
.Ltmp1207:
    0000024b: 	movq	%r12, %rdx
    0000024e: 	movq	%rbp, %rsi
    00000251: 	callq	memcpy@PLT # Offset: 593
    00000256: 	movq	0x10(%rsp), %r12
    0000025b: 	movq	(%rbx), %rdi
    0000025e: 	jmp	.Ltmp1205 # Offset: 606
.Ltmp1197:
    00000263: 	movq	0x8(%rsp), %rsi
    00000268: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000026f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 623
    00000274: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000027b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000282: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000289: 	jne	.Ltmp1206 # Offset: 649
.Ltmp1202:
    0000028f: 	movq	-0x8(%rdx), %rax
    00000293: 	addq	$0x200, %rax
    00000299: 	jmp	.Ltmp1206 # Offset: 665
.Ltmp1201:
    0000029e: 	testq	%r12, %r12
    000002a1: 	je	.Ltmp1205 # Offset: 673
    000002a7: 	jmp	.Ltmp1207 # Offset: 679
.Ltmp1203:
    000002a9: 	callq	__stack_chk_fail@PLT # Offset: 681
.Ltmp1199:
    000002ae: 	leaq	DATAat0x57008(%rip), %rdi
    000002b5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 693
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIm27custom_multiply_shiftadd_83ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIt27custom_multiply_shiftadd_83ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 113
  State       : disassembled
  Address     : 0xe3c0
  Size        : 0x3a5
  MaxSize     : 0x3b0
  Offset      : 0xe3c0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIt27custom_multiply_shiftadd_83ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0112:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r10d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r10d, %r10d
    00000043: 	jle	.Ltmp1208 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebp
    00000050: 	leaq	DATAat0x571d0(%rip), %r12
    00000057: 	xorl	%r15d, %r15d
    0000005a: 	movl	%eax, 0x4(%rsp)
    0000005e: 	movl	%r13d, %eax
    00000061: 	cvttsd2si	init_value(%rip), %esi
    00000069: 	andl	$-0x8, %ebp
    0000006c: 	shrl	$0x3, %eax
    0000006f: 	subl	$0x1, %eax
    00000072: 	shlq	$0x4, %rax
    00000076: 	leaq	0x10(%r14,%rax), %rbx
    0000007b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1214:
    00000080: 	xorl	%edi, %edi
    00000082: 	testl	%r13d, %r13d
    00000085: 	jle	.Ltmp1209 # Offset: 133
    0000008b: 	cmpl	$0x6, 0x4(%rsp)
    00000090: 	jbe	.Ltmp1210 # Offset: 144
    00000096: 	movq	%r14, %rax
    00000099: 	pxor	%xmm0, %xmm0
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp1211:
    000000a0: 	movdqu	(%rax), %xmm2
    000000a4: 	addq	$0x10, %rax
    000000a8: 	movdqa	%xmm2, %xmm1
    000000ac: 	psubw	%xmm2, %xmm0
    000000b0: 	psllw	$0x2, %xmm1
    000000b5: 	movdqa	%xmm1, %xmm3
    000000b9: 	paddw	%xmm2, %xmm3
    000000bd: 	psllw	$0x4, %xmm3
    000000c2: 	paddw	%xmm3, %xmm1
    000000c6: 	paddw	%xmm1, %xmm0
    000000ca: 	cmpq	%rbx, %rax
    000000cd: 	jne	.Ltmp1211 # Offset: 205
    000000cf: 	movdqa	%xmm0, %xmm1
    000000d3: 	psrldq	$0x8, %xmm1
    000000d8: 	paddw	%xmm1, %xmm0
    000000dc: 	movdqa	%xmm0, %xmm1
    000000e0: 	psrldq	$0x4, %xmm1
    000000e5: 	paddw	%xmm1, %xmm0
    000000e9: 	movdqa	%xmm0, %xmm1
    000000ed: 	psrldq	$0x2, %xmm1
    000000f2: 	paddw	%xmm1, %xmm0
    000000f6: 	pextrw	$0x0, %xmm0, %edi
    000000fb: 	cmpl	%r13d, %ebp
    000000fe: 	je	.Ltmp1209 # Offset: 254
    00000104: 	movl	%ebp, %eax
    00000106: 	movl	%ebp, %edx
.Ltmp1222:
    00000108: 	movl	%r13d, %ecx
    0000010b: 	subl	%eax, %ecx
    0000010d: 	leal	-0x1(%rcx), %r8d
    00000111: 	cmpl	$0x2, %r8d
    00000115: 	jbe	.Ltmp1212 # Offset: 277
    00000117: 	movq	(%r14,%rax,2), %xmm1
    0000011d: 	movdqa	%xmm1, %xmm2
    00000121: 	psllw	$0x2, %xmm2
    00000126: 	movdqa	%xmm2, %xmm0
    0000012a: 	paddw	%xmm1, %xmm0
    0000012e: 	psllw	$0x4, %xmm0
    00000133: 	paddw	%xmm2, %xmm0
    00000137: 	psubw	%xmm1, %xmm0
    0000013b: 	pextrw	$0x0, %xmm0, %eax
    00000140: 	pextrw	$0x1, %xmm0, %r8d
    00000146: 	addl	%r8d, %eax
    00000149: 	addl	%edi, %eax
    0000014b: 	pextrw	$0x2, %xmm0, %edi
    00000150: 	addl	%edi, %eax
    00000152: 	pextrw	$0x3, %xmm0, %edi
    00000157: 	addl	%eax, %edi
    00000159: 	movl	%ecx, %eax
    0000015b: 	andl	$-0x4, %eax
    0000015e: 	addl	%eax, %edx
    00000160: 	cmpl	%eax, %ecx
    00000162: 	je	.Ltmp1209 # Offset: 354
.Ltmp1212:
    00000164: 	movslq	%edx, %rax
    00000167: 	movzwl	(%r14,%rax,2), %r8d
    0000016c: 	leaq	(%rax,%rax), %rcx
    00000170: 	leal	(,%r8,4), %r9d
    00000178: 	leal	(%r9,%r8), %eax
    0000017c: 	shll	$0x4, %eax
    0000017f: 	addl	%r9d, %eax
    00000182: 	addl	%edi, %eax
    00000184: 	subl	%r8d, %eax
    00000187: 	movl	%eax, %edi
    00000189: 	leal	0x1(%rdx), %eax
    0000018c: 	cmpl	%eax, %r13d
    0000018f: 	jle	.Ltmp1209 # Offset: 399
    00000191: 	movzwl	0x2(%r14,%rcx), %r8d
    00000197: 	addl	$0x2, %edx
    0000019a: 	leal	(,%r8,4), %eax
    000001a2: 	leal	(%rax,%r8), %r9d
    000001a6: 	shll	$0x4, %r9d
    000001aa: 	addl	%r9d, %eax
    000001ad: 	subl	%r8d, %eax
    000001b0: 	addl	%eax, %edi
    000001b2: 	cmpl	%edx, %r13d
    000001b5: 	jle	.Ltmp1209 # Offset: 437
    000001b7: 	movzwl	0x4(%r14,%rcx), %edx
    000001bd: 	leal	(,%rdx,4), %eax
    000001c4: 	leal	(%rax,%rdx), %ecx
    000001c7: 	shll	$0x4, %ecx
    000001ca: 	addl	%ecx, %eax
    000001cc: 	subl	%edx, %eax
    000001ce: 	addl	%eax, %edi
.Ltmp1209:
    000001d0: 	leal	(,%rsi,4), %edx
    000001d7: 	leal	(%rdx,%rsi), %eax
    000001da: 	shll	$0x4, %eax
    000001dd: 	addl	%edx, %eax
    000001df: 	subl	%esi, %eax
    000001e1: 	imulw	$0x1f40, %ax, %ax
    000001e6: 	cmpw	%di, %ax
    000001e9: 	je	.Ltmp1213 # Offset: 489
    000001eb: 	movl	current_test(%rip), %edx
    000001f1: 	movq	%r12, %rsi
    000001f4: 	movl	$0x1, %edi
    000001f9: 	xorl	%eax, %eax
    000001fb: 	addl	$0x1, %r15d
    000001ff: 	callq	__printf_chk@PLT # Offset: 511
    00000204: 	movl	iterations(%rip), %r10d
    0000020b: 	cmpl	%r15d, %r10d
    0000020e: 	jle	.Ltmp1208 # Offset: 526
    00000210: 	cvttsd2si	init_value(%rip), %esi
    00000218: 	jmp	.Ltmp1214 # Offset: 536
    0000021d: 	nopl	(%rax) # Size: 3
.Ltmp1213:
    00000220: 	addl	$0x1, %r15d
    00000224: 	cmpl	%r10d, %r15d
    00000227: 	jl	.Ltmp1214 # Offset: 551
.Ltmp1208:
    0000022d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000234: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000023b: 	subq	$0x20, %rax
    0000023f: 	cmpq	%rax, %rbx
    00000242: 	je	.Ltmp1215 # Offset: 578
    00000248: 	movq	0x8(%rsp), %rax
    0000024d: 	leaq	0x10(%rbx), %rdi
    00000251: 	movq	%rdi, (%rbx)
    00000254: 	movq	(%rax), %rbp
    00000257: 	movq	0x8(%rax), %r12
    0000025b: 	movq	%rbp, %rax
    0000025e: 	addq	%r12, %rax
    00000261: 	je	.Ltmp1216 # Offset: 609
    00000263: 	testq	%rbp, %rbp
    00000266: 	je	.Ltmp1217 # Offset: 614
.Ltmp1216:
    0000026c: 	movq	%r12, 0x10(%rsp)
    00000271: 	cmpq	$0xf, %r12
    00000275: 	ja	.Ltmp1218 # Offset: 629
    0000027b: 	cmpq	$0x1, %r12
    0000027f: 	jne	.Ltmp1219 # Offset: 639
    00000285: 	movzbl	(%rbp), %eax
    00000289: 	movb	%al, 0x10(%rbx)
.Ltmp1223:
    0000028c: 	movq	%r12, 0x8(%rbx)
    00000290: 	movb	$0x0, (%rdi,%r12)
    00000295: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000029c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002a3: 	addq	$0x20, %rax
    000002a7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ae: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002b5: 	je	.Ltmp1220 # Offset: 693
.Ltmp1224:
    000002bb: 	movq	-0x20(%rax), %rbp
    000002bf: 	callq	clock@PLT # Offset: 703
    000002c4: 	movq	%rax, end_time(%rip)
    000002cb: 	movq	0x18(%rsp), %rdx
    000002d0: 	subq	%fs:0x28, %rdx
    000002d9: 	jne	.Ltmp1221 # Offset: 729
    000002df: 	subq	start_time(%rip), %rax
    000002e6: 	pxor	%xmm0, %xmm0
    000002ea: 	movq	%rbp, %rdi
    000002ed: 	cvtsi2sd	%rax, %xmm0
    000002f2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002fa: 	addq	$0x28, %rsp
    000002fe: 	popq	%rbx
    000002ff: 	popq	%rbp
    00000300: 	popq	%r12
    00000302: 	popq	%r13
    00000304: 	popq	%r14
    00000306: 	popq	%r15
    00000308: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 776
.Ltmp1210:
    0000030d: 	xorl	%eax, %eax
    0000030f: 	xorl	%edx, %edx
    00000311: 	xorl	%edi, %edi
    00000313: 	jmp	.Ltmp1222 # Offset: 787
.Ltmp1218:
    00000318: 	movq	%rbx, %rdi
    0000031b: 	leaq	0x10(%rsp), %rsi
    00000320: 	xorl	%edx, %edx
    00000322: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 802
    00000327: 	movq	%rax, (%rbx)
    0000032a: 	movq	%rax, %rdi
    0000032d: 	movq	0x10(%rsp), %rax
    00000332: 	movq	%rax, 0x10(%rbx)
.Ltmp1225:
    00000336: 	movq	%r12, %rdx
    00000339: 	movq	%rbp, %rsi
    0000033c: 	callq	memcpy@PLT # Offset: 828
    00000341: 	movq	0x10(%rsp), %r12
    00000346: 	movq	(%rbx), %rdi
    00000349: 	jmp	.Ltmp1223 # Offset: 841
.Ltmp1215:
    0000034e: 	movq	0x8(%rsp), %rsi
    00000353: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000035a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 858
    0000035f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000366: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000036d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000374: 	jne	.Ltmp1224 # Offset: 884
.Ltmp1220:
    0000037a: 	movq	-0x8(%rdx), %rax
    0000037e: 	addq	$0x200, %rax
    00000384: 	jmp	.Ltmp1224 # Offset: 900
.Ltmp1219:
    00000389: 	testq	%r12, %r12
    0000038c: 	je	.Ltmp1223 # Offset: 908
    00000392: 	jmp	.Ltmp1225 # Offset: 914
.Ltmp1221:
    00000394: 	callq	__stack_chk_fail@PLT # Offset: 916
.Ltmp1217:
    00000399: 	leaq	DATAat0x57008(%rip), %rdi
    000003a0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 928
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIt27custom_multiply_shiftadd_83ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIj27custom_multiply_shiftadd_83IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 114
  State       : disassembled
  Address     : 0xe770
  Size        : 0x33b
  MaxSize     : 0x340
  Offset      : 0xe770
  Section     : .text
  Orc Section : .local.text._Z13test_constantIj27custom_multiply_shiftadd_83IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0113:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1226 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r14d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm4
    00000067: 	andl	$-0x4, %ebx
    0000006a: 	shrl	$0x2, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r15,%rax), %r13
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp1231:
    00000080: 	xorl	%edx, %edx
    00000082: 	testl	%r14d, %r14d
    00000085: 	jle	.Ltmp1227 # Offset: 133
    0000008b: 	cmpl	$0x2, 0x4(%rsp)
    00000090: 	jbe	.Ltmp1228 # Offset: 144
    00000096: 	movq	%r15, %rax
    00000099: 	pxor	%xmm0, %xmm0
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp1229:
    000000a0: 	movdqu	(%rax), %xmm2
    000000a4: 	addq	$0x10, %rax
    000000a8: 	movdqa	%xmm2, %xmm1
    000000ac: 	psubd	%xmm2, %xmm0
    000000b0: 	pslld	$0x2, %xmm1
    000000b5: 	movdqa	%xmm1, %xmm3
    000000b9: 	paddd	%xmm2, %xmm3
    000000bd: 	pslld	$0x4, %xmm3
    000000c2: 	paddd	%xmm3, %xmm1
    000000c6: 	paddd	%xmm1, %xmm0
    000000ca: 	cmpq	%rax, %r13
    000000cd: 	jne	.Ltmp1229 # Offset: 205
    000000cf: 	movdqa	%xmm0, %xmm1
    000000d3: 	movl	%ebx, %ecx
    000000d5: 	psrldq	$0x8, %xmm1
    000000da: 	paddd	%xmm1, %xmm0
    000000de: 	movdqa	%xmm0, %xmm1
    000000e2: 	psrldq	$0x4, %xmm1
    000000e7: 	paddd	%xmm1, %xmm0
    000000eb: 	movd	%xmm0, %edx
    000000ef: 	cmpl	%r14d, %ebx
    000000f2: 	je	.Ltmp1227 # Offset: 242
.Ltmp1239:
    000000f4: 	movslq	%ecx, %rax
    000000f7: 	movl	(%r15,%rax,4), %r8d
    000000fb: 	leaq	(,%rax,4), %rdi
    00000103: 	leal	(,%r8,4), %r9d
    0000010b: 	leal	(%r9,%r8), %eax
    0000010f: 	shll	$0x4, %eax
    00000112: 	addl	%r9d, %eax
    00000115: 	addl	%edx, %eax
    00000117: 	subl	%r8d, %eax
    0000011a: 	movl	%eax, %edx
    0000011c: 	leal	0x1(%rcx), %eax
    0000011f: 	cmpl	%eax, %r14d
    00000122: 	jle	.Ltmp1227 # Offset: 290
    00000124: 	movl	0x4(%r15,%rdi), %r8d
    00000129: 	addl	$0x2, %ecx
    0000012c: 	leal	(,%r8,4), %eax
    00000134: 	leal	(%rax,%r8), %r9d
    00000138: 	shll	$0x4, %r9d
    0000013c: 	addl	%r9d, %eax
    0000013f: 	subl	%r8d, %eax
    00000142: 	addl	%eax, %edx
    00000144: 	cmpl	%ecx, %r14d
    00000147: 	jle	.Ltmp1227 # Offset: 327
    00000149: 	movl	0x8(%r15,%rdi), %ecx
    0000014e: 	leal	(,%rcx,4), %eax
    00000155: 	leal	(%rax,%rcx), %edi
    00000158: 	shll	$0x4, %edi
    0000015b: 	addl	%edi, %eax
    0000015d: 	subl	%ecx, %eax
    0000015f: 	addl	%eax, %edx
.Ltmp1227:
    00000161: 	cvttsd2si	%xmm4, %rcx
    00000166: 	leal	(,%rcx,4), %edi
    0000016d: 	leal	(%rdi,%rcx), %eax
    00000170: 	shll	$0x4, %eax
    00000173: 	addl	%edi, %eax
    00000175: 	subl	%ecx, %eax
    00000177: 	imull	$0x1f40, %eax, %eax
    0000017d: 	cmpl	%edx, %eax
    0000017f: 	je	.Ltmp1230 # Offset: 383
    00000181: 	movl	current_test(%rip), %edx
    00000187: 	movq	%rbp, %rsi
    0000018a: 	movl	$0x1, %edi
    0000018f: 	xorl	%eax, %eax
    00000191: 	addl	$0x1, %r12d
    00000195: 	callq	__printf_chk@PLT # Offset: 405
    0000019a: 	movl	iterations(%rip), %esi
    000001a0: 	cmpl	%esi, %r12d
    000001a3: 	jge	.Ltmp1226 # Offset: 419
    000001a5: 	movsd	init_value(%rip), %xmm4
    000001ad: 	jmp	.Ltmp1231 # Offset: 429
    000001b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1230:
    000001b8: 	addl	$0x1, %r12d
    000001bc: 	cmpl	%esi, %r12d
    000001bf: 	jl	.Ltmp1231 # Offset: 447
.Ltmp1226:
    000001c5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001cc: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001d3: 	subq	$0x20, %rax
    000001d7: 	cmpq	%rax, %rbx
    000001da: 	je	.Ltmp1232 # Offset: 474
    000001e0: 	movq	0x8(%rsp), %rax
    000001e5: 	leaq	0x10(%rbx), %rdi
    000001e9: 	movq	%rdi, (%rbx)
    000001ec: 	movq	(%rax), %rbp
    000001ef: 	movq	0x8(%rax), %r12
    000001f3: 	movq	%rbp, %rax
    000001f6: 	addq	%r12, %rax
    000001f9: 	je	.Ltmp1233 # Offset: 505
    000001fb: 	testq	%rbp, %rbp
    000001fe: 	je	.Ltmp1234 # Offset: 510
.Ltmp1233:
    00000204: 	movq	%r12, 0x10(%rsp)
    00000209: 	cmpq	$0xf, %r12
    0000020d: 	ja	.Ltmp1235 # Offset: 525
    00000213: 	cmpq	$0x1, %r12
    00000217: 	jne	.Ltmp1236 # Offset: 535
    0000021d: 	movzbl	(%rbp), %eax
    00000221: 	movb	%al, 0x10(%rbx)
.Ltmp1240:
    00000224: 	movq	%r12, 0x8(%rbx)
    00000228: 	movb	$0x0, (%rdi,%r12)
    0000022d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000234: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023b: 	addq	$0x20, %rax
    0000023f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000246: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000024d: 	je	.Ltmp1237 # Offset: 589
.Ltmp1241:
    00000253: 	movq	-0x20(%rax), %rbp
    00000257: 	callq	clock@PLT # Offset: 599
    0000025c: 	movq	%rax, end_time(%rip)
    00000263: 	movq	0x18(%rsp), %rdx
    00000268: 	subq	%fs:0x28, %rdx
    00000271: 	jne	.Ltmp1238 # Offset: 625
    00000277: 	subq	start_time(%rip), %rax
    0000027e: 	pxor	%xmm0, %xmm0
    00000282: 	movq	%rbp, %rdi
    00000285: 	cvtsi2sd	%rax, %xmm0
    0000028a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000292: 	addq	$0x28, %rsp
    00000296: 	popq	%rbx
    00000297: 	popq	%rbp
    00000298: 	popq	%r12
    0000029a: 	popq	%r13
    0000029c: 	popq	%r14
    0000029e: 	popq	%r15
    000002a0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 672
.Ltmp1228:
    000002a5: 	xorl	%ecx, %ecx
    000002a7: 	xorl	%edx, %edx
    000002a9: 	jmp	.Ltmp1239 # Offset: 681
.Ltmp1235:
    000002ae: 	movq	%rbx, %rdi
    000002b1: 	leaq	0x10(%rsp), %rsi
    000002b6: 	xorl	%edx, %edx
    000002b8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 696
    000002bd: 	movq	%rax, (%rbx)
    000002c0: 	movq	%rax, %rdi
    000002c3: 	movq	0x10(%rsp), %rax
    000002c8: 	movq	%rax, 0x10(%rbx)
.Ltmp1242:
    000002cc: 	movq	%r12, %rdx
    000002cf: 	movq	%rbp, %rsi
    000002d2: 	callq	memcpy@PLT # Offset: 722
    000002d7: 	movq	0x10(%rsp), %r12
    000002dc: 	movq	(%rbx), %rdi
    000002df: 	jmp	.Ltmp1240 # Offset: 735
.Ltmp1232:
    000002e4: 	movq	0x8(%rsp), %rsi
    000002e9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002f0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 752
    000002f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002fc: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000303: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000030a: 	jne	.Ltmp1241 # Offset: 778
.Ltmp1237:
    00000310: 	movq	-0x8(%rdx), %rax
    00000314: 	addq	$0x200, %rax
    0000031a: 	jmp	.Ltmp1241 # Offset: 794
.Ltmp1236:
    0000031f: 	testq	%r12, %r12
    00000322: 	je	.Ltmp1240 # Offset: 802
    00000328: 	jmp	.Ltmp1242 # Offset: 808
.Ltmp1238:
    0000032a: 	callq	__stack_chk_fail@PLT # Offset: 810
.Ltmp1234:
    0000032f: 	leaq	DATAat0x57008(%rip), %rdi
    00000336: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 822
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIj27custom_multiply_shiftadd_83IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIa24shift_divide_toward_zeroIaLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIa24shift_divide_toward_zeroIaLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIa24shift_divide_toward_zeroIaLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 115
  State       : disassembled
  Address     : 0xeab0
  Size        : 0x38e
  MaxSize     : 0x390
  Offset      : 0xeab0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIa24shift_divide_toward_zeroIaLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0114:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	%rdi, %rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %esi
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%esi, %esi
    00000036: 	jle	.Ltmp1243 # Offset: 54
    0000003c: 	movdqa	DATAat0x57be0(%rip), %xmm8
    00000045: 	xorl	%r14d, %r14d
    00000048: 	movdqa	DATAat0x57c10(%rip), %xmm9
    00000051: 	leaq	0x1f40(%rbx), %r13
    00000058: 	movdqa	DATAat0x57d00(%rip), %xmm7
    00000060: 	leaq	DATAat0x571d0(%rip), %rbp
    00000067: 	movsd	init_value(%rip), %xmm14
.Ltmp1247:
    00000070: 	pxor	%xmm4, %xmm4
    00000074: 	pxor	%xmm6, %xmm6
    00000078: 	pxor	%xmm3, %xmm3
    0000007c: 	movq	%rbx, %rax
    0000007f: 	movdqa	%xmm4, %xmm5
    00000083: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1244:
    00000088: 	movdqu	(%rax), %xmm10
    0000008d: 	movdqa	%xmm5, %xmm2
    00000091: 	movdqa	%xmm3, %xmm1
    00000095: 	addq	$0x10, %rax
    00000099: 	movdqa	%xmm6, %xmm12
    0000009e: 	pcmpgtb	%xmm10, %xmm2
    000000a3: 	movdqa	%xmm10, %xmm0
    000000a8: 	movdqa	%xmm10, %xmm11
    000000ad: 	punpcklbw	%xmm2, %xmm0
    000000b1: 	punpckhbw	%xmm2, %xmm11
    000000b6: 	pcmpgtw	%xmm0, %xmm12
    000000bb: 	movdqa	%xmm0, %xmm13
    000000c0: 	punpcklwd	%xmm12, %xmm13
    000000c5: 	punpckhwd	%xmm12, %xmm0
    000000ca: 	movdqa	%xmm3, %xmm12
    000000cf: 	psubd	%xmm0, %xmm12
    000000d4: 	psubd	%xmm13, %xmm1
    000000d9: 	movdqa	%xmm11, %xmm13
    000000de: 	movdqa	%xmm1, %xmm0
    000000e2: 	punpcklwd	%xmm12, %xmm1
    000000e7: 	punpckhwd	%xmm12, %xmm0
    000000ec: 	movdqa	%xmm1, %xmm12
    000000f1: 	punpckhwd	%xmm0, %xmm12
    000000f6: 	punpcklwd	%xmm0, %xmm1
    000000fa: 	movdqa	%xmm3, %xmm0
    000000fe: 	punpcklwd	%xmm12, %xmm1
    00000103: 	movdqa	%xmm6, %xmm12
    00000108: 	pcmpgtw	%xmm11, %xmm12
    0000010d: 	psraw	$0x6, %xmm1
    00000112: 	pand	%xmm8, %xmm1
    00000117: 	punpckhwd	%xmm12, %xmm11
    0000011c: 	punpcklwd	%xmm12, %xmm13
    00000121: 	movdqa	%xmm3, %xmm12
    00000126: 	psubd	%xmm11, %xmm12
    0000012b: 	psubd	%xmm13, %xmm0
    00000130: 	movdqa	%xmm0, %xmm11
    00000135: 	punpcklwd	%xmm12, %xmm0
    0000013a: 	punpckhwd	%xmm12, %xmm11
    0000013f: 	movdqa	%xmm0, %xmm12
    00000144: 	punpckhwd	%xmm11, %xmm12
    00000149: 	punpcklwd	%xmm11, %xmm0
    0000014e: 	movdqa	%xmm5, %xmm11
    00000153: 	punpcklwd	%xmm12, %xmm0
    00000158: 	psraw	$0x6, %xmm0
    0000015d: 	pand	%xmm8, %xmm0
    00000162: 	packuswb	%xmm0, %xmm1
    00000166: 	movdqa	%xmm10, %xmm0
    0000016b: 	psraw	$0x6, %xmm0
    00000170: 	psubb	%xmm1, %xmm11
    00000175: 	pand	%xmm9, %xmm0
    0000017a: 	movdqa	%xmm11, %xmm1
    0000017f: 	pxor	%xmm7, %xmm0
    00000183: 	pand	%xmm2, %xmm1
    00000187: 	psubb	%xmm7, %xmm0
    0000018b: 	pandn	%xmm0, %xmm2
    0000018f: 	por	%xmm1, %xmm2
    00000193: 	paddb	%xmm2, %xmm4
    00000197: 	cmpq	%rax, %r13
    0000019a: 	jne	.Ltmp1244 # Offset: 410
    000001a0: 	cvttsd2si	%xmm14, %ecx
    000001a5: 	movdqa	%xmm4, %xmm0
    000001a9: 	psrldq	$0x8, %xmm0
    000001ae: 	paddb	%xmm0, %xmm4
    000001b2: 	psadbw	%xmm5, %xmm4
    000001b6: 	movl	%ecx, %edx
    000001b8: 	movd	%xmm4, %eax
    000001bc: 	sarb	$0x6, %dl
    000001bf: 	testb	%cl, %cl
    000001c1: 	jns	.Ltmp1245 # Offset: 449
    000001c3: 	movsbl	%cl, %edx
    000001c6: 	negl	%edx
    000001c8: 	sarl	$0x6, %edx
    000001cb: 	negl	%edx
.Ltmp1245:
    000001cd: 	shll	$0x6, %edx
    000001d0: 	cmpb	%al, %dl
    000001d2: 	je	.Ltmp1246 # Offset: 466
    000001d4: 	movl	current_test(%rip), %edx
    000001da: 	movq	%rbp, %rsi
    000001dd: 	movl	$0x1, %edi
    000001e2: 	xorl	%eax, %eax
    000001e4: 	addl	$0x1, %r14d
    000001e8: 	callq	__printf_chk@PLT # Offset: 488
    000001ed: 	movl	iterations(%rip), %esi
    000001f3: 	cmpl	%esi, %r14d
    000001f6: 	jge	.Ltmp1243 # Offset: 502
    000001f8: 	movsd	init_value(%rip), %xmm14
    00000201: 	movdqa	DATAat0x57d00(%rip), %xmm7
    00000209: 	movdqa	DATAat0x57be0(%rip), %xmm8
    00000212: 	movdqa	DATAat0x57c10(%rip), %xmm9
    0000021b: 	jmp	.Ltmp1247 # Offset: 539
.Ltmp1246:
    00000220: 	addl	$0x1, %r14d
    00000224: 	cmpl	%esi, %r14d
    00000227: 	jl	.Ltmp1247 # Offset: 551
.Ltmp1243:
    0000022d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000234: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000023b: 	subq	$0x20, %rax
    0000023f: 	cmpq	%rax, %rbx
    00000242: 	je	.Ltmp1248 # Offset: 578
    00000248: 	leaq	0x10(%rbx), %rdi
    0000024c: 	movq	%rdi, (%rbx)
    0000024f: 	movq	(%r12), %rbp
    00000253: 	movq	0x8(%r12), %r12
    00000258: 	movq	%rbp, %rax
    0000025b: 	addq	%r12, %rax
    0000025e: 	je	.Ltmp1249 # Offset: 606
    00000260: 	testq	%rbp, %rbp
    00000263: 	je	.Ltmp1250 # Offset: 611
.Ltmp1249:
    00000269: 	movq	%r12, (%rsp)
    0000026d: 	cmpq	$0xf, %r12
    00000271: 	ja	.Ltmp1251 # Offset: 625
    00000277: 	cmpq	$0x1, %r12
    0000027b: 	jne	.Ltmp1252 # Offset: 635
    00000281: 	movzbl	(%rbp), %eax
    00000285: 	movb	%al, 0x10(%rbx)
.Ltmp1255:
    00000288: 	movq	%r12, 0x8(%rbx)
    0000028c: 	movb	$0x0, (%rdi,%r12)
    00000291: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000298: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000029f: 	addq	$0x20, %rax
    000002a3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002aa: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002b1: 	je	.Ltmp1253 # Offset: 689
.Ltmp1256:
    000002b7: 	movq	-0x20(%rax), %rbp
    000002bb: 	callq	clock@PLT # Offset: 699
    000002c0: 	movq	%rax, end_time(%rip)
    000002c7: 	movq	0x8(%rsp), %rdx
    000002cc: 	subq	%fs:0x28, %rdx
    000002d5: 	jne	.Ltmp1254 # Offset: 725
    000002db: 	subq	start_time(%rip), %rax
    000002e2: 	pxor	%xmm0, %xmm0
    000002e6: 	movq	%rbp, %rdi
    000002e9: 	cvtsi2sd	%rax, %xmm0
    000002ee: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002f6: 	addq	$0x10, %rsp
    000002fa: 	popq	%rbx
    000002fb: 	popq	%rbp
    000002fc: 	popq	%r12
    000002fe: 	popq	%r13
    00000300: 	popq	%r14
    00000302: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 770
.Ltmp1251:
    00000307: 	movq	%rbx, %rdi
    0000030a: 	movq	%rsp, %rsi
    0000030d: 	xorl	%edx, %edx
    0000030f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 783
    00000314: 	movq	%rax, (%rbx)
    00000317: 	movq	%rax, %rdi
    0000031a: 	movq	(%rsp), %rax
    0000031e: 	movq	%rax, 0x10(%rbx)
.Ltmp1257:
    00000322: 	movq	%r12, %rdx
    00000325: 	movq	%rbp, %rsi
    00000328: 	callq	memcpy@PLT # Offset: 808
    0000032d: 	movq	(%rsp), %r12
    00000331: 	movq	(%rbx), %rdi
    00000334: 	jmp	.Ltmp1255 # Offset: 820
.Ltmp1248:
    00000339: 	movq	%r12, %rsi
    0000033c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000343: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 835
    00000348: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000034f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000356: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000035d: 	jne	.Ltmp1256 # Offset: 861
.Ltmp1253:
    00000363: 	movq	-0x8(%rdx), %rax
    00000367: 	addq	$0x200, %rax
    0000036d: 	jmp	.Ltmp1256 # Offset: 877
.Ltmp1252:
    00000372: 	testq	%r12, %r12
    00000375: 	je	.Ltmp1255 # Offset: 885
    0000037b: 	jmp	.Ltmp1257 # Offset: 891
.Ltmp1254:
    0000037d: 	callq	__stack_chk_fail@PLT # Offset: 893
.Ltmp1250:
    00000382: 	leaq	DATAat0x57008(%rip), %rdi
    00000389: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 905
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIa24shift_divide_toward_zeroIaLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIs24shift_divide_toward_zeroIsLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 116
  State       : disassembled
  Address     : 0xee40
  Size        : 0x472
  MaxSize     : 0x480
  Offset      : 0xee40
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs24shift_divide_toward_zeroIsLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0115:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1258 # Offset: 65
    00000047: 	leal	-0x1(%r13), %eax
    0000004b: 	movl	%r13d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movsd	init_value(%rip), %xmm8
    00000061: 	movl	%eax, 0x4(%rsp)
    00000065: 	movl	%r13d, %eax
    00000068: 	andl	$-0x8, %ebx
    0000006b: 	shrl	$0x3, %eax
    0000006e: 	subl	$0x1, %eax
    00000071: 	shlq	$0x4, %rax
    00000075: 	leaq	0x10(%r14,%rax), %r15
    0000007a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1271:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r13d, %r13d
    00000085: 	jle	.Ltmp1259 # Offset: 133
    0000008b: 	cmpl	$0x6, 0x4(%rsp)
    00000090: 	jbe	.Ltmp1260 # Offset: 144
    00000096: 	pxor	%xmm4, %xmm4
    0000009a: 	movq	%r14, %rax
    0000009d: 	pxor	%xmm6, %xmm6
    000000a1: 	movdqa	%xmm4, %xmm7
    000000a5: 	nopl	(%rax) # Size: 3
.Ltmp1261:
    000000a8: 	movdqu	(%rax), %xmm2
    000000ac: 	movdqa	%xmm7, %xmm1
    000000b0: 	movdqa	%xmm6, %xmm0
    000000b4: 	addq	$0x10, %rax
    000000b8: 	pcmpgtw	%xmm2, %xmm1
    000000bc: 	movdqa	%xmm2, %xmm3
    000000c0: 	movdqa	%xmm2, %xmm5
    000000c4: 	psraw	$0x3, %xmm2
    000000c9: 	punpcklwd	%xmm1, %xmm3
    000000cd: 	punpckhwd	%xmm1, %xmm5
    000000d1: 	psubd	%xmm3, %xmm0
    000000d5: 	movdqa	%xmm6, %xmm3
    000000d9: 	psubd	%xmm5, %xmm3
    000000dd: 	psrad	$0x3, %xmm0
    000000e2: 	psrad	$0x3, %xmm3
    000000e7: 	movdqa	%xmm0, %xmm5
    000000eb: 	punpcklwd	%xmm3, %xmm0
    000000ef: 	punpckhwd	%xmm3, %xmm5
    000000f3: 	movdqa	%xmm0, %xmm3
    000000f7: 	punpcklwd	%xmm5, %xmm0
    000000fb: 	punpckhwd	%xmm5, %xmm3
    000000ff: 	punpcklwd	%xmm3, %xmm0
    00000103: 	movdqa	%xmm7, %xmm3
    00000107: 	psubw	%xmm0, %xmm3
    0000010b: 	movdqa	%xmm3, %xmm0
    0000010f: 	pand	%xmm1, %xmm0
    00000113: 	pandn	%xmm2, %xmm1
    00000117: 	por	%xmm0, %xmm1
    0000011b: 	paddw	%xmm1, %xmm4
    0000011f: 	cmpq	%r15, %rax
    00000122: 	jne	.Ltmp1261 # Offset: 290
    00000124: 	movdqa	%xmm4, %xmm0
    00000128: 	psrldq	$0x8, %xmm0
    0000012d: 	paddw	%xmm0, %xmm4
    00000131: 	movdqa	%xmm4, %xmm0
    00000135: 	psrldq	$0x4, %xmm0
    0000013a: 	paddw	%xmm0, %xmm4
    0000013e: 	movdqa	%xmm4, %xmm0
    00000142: 	psrldq	$0x2, %xmm0
    00000147: 	paddw	%xmm0, %xmm4
    0000014b: 	pextrw	$0x0, %xmm4, %eax
    00000150: 	cmpl	%r13d, %ebx
    00000153: 	je	.Ltmp1259 # Offset: 339
    00000159: 	movl	%ebx, %edx
.Ltmp1280:
    0000015b: 	movslq	%edx, %rdi
    0000015e: 	movzwl	(%r14,%rdi,2), %r10d
    00000163: 	leaq	(%rdi,%rdi), %r9
    00000167: 	movl	%r10d, %edi
    0000016a: 	sarw	$0x3, %di
    0000016e: 	testw	%r10w, %r10w
    00000172: 	jns	.Ltmp1262 # Offset: 370
    00000174: 	movswl	%r10w, %edi
    00000178: 	negl	%edi
    0000017a: 	sarl	$0x3, %edi
    0000017d: 	negl	%edi
.Ltmp1262:
    0000017f: 	addl	%eax, %edi
    00000181: 	leal	0x1(%rdx), %r10d
    00000185: 	movl	%edi, %eax
    00000187: 	cmpl	%r10d, %r13d
    0000018a: 	jle	.Ltmp1259 # Offset: 394
    00000190: 	movzwl	0x2(%r14,%r9), %r10d
    00000196: 	movl	%r10d, %eax
    00000199: 	sarw	$0x3, %ax
    0000019d: 	testw	%r10w, %r10w
    000001a1: 	jns	.Ltmp1263 # Offset: 417
    000001a3: 	movswl	%r10w, %eax
    000001a7: 	negl	%eax
    000001a9: 	sarl	$0x3, %eax
    000001ac: 	negl	%eax
.Ltmp1263:
    000001ae: 	addl	%eax, %edi
    000001b0: 	leal	0x2(%rdx), %r10d
    000001b4: 	movl	%edi, %eax
    000001b6: 	cmpl	%r10d, %r13d
    000001b9: 	jle	.Ltmp1259 # Offset: 441
    000001bf: 	movzwl	0x4(%r14,%r9), %r10d
    000001c5: 	movl	%r10d, %eax
    000001c8: 	sarw	$0x3, %ax
    000001cc: 	testw	%r10w, %r10w
    000001d0: 	jns	.Ltmp1264 # Offset: 464
    000001d2: 	movswl	%r10w, %eax
    000001d6: 	negl	%eax
    000001d8: 	sarl	$0x3, %eax
    000001db: 	negl	%eax
.Ltmp1264:
    000001dd: 	addl	%eax, %edi
    000001df: 	leal	0x3(%rdx), %r10d
    000001e3: 	movl	%edi, %eax
    000001e5: 	cmpl	%r10d, %r13d
    000001e8: 	jle	.Ltmp1259 # Offset: 488
    000001ee: 	movzwl	0x6(%r14,%r9), %r10d
    000001f4: 	movl	%r10d, %eax
    000001f7: 	sarw	$0x3, %ax
    000001fb: 	testw	%r10w, %r10w
    000001ff: 	jns	.Ltmp1265 # Offset: 511
    00000201: 	movswl	%r10w, %eax
    00000205: 	negl	%eax
    00000207: 	sarl	$0x3, %eax
    0000020a: 	negl	%eax
.Ltmp1265:
    0000020c: 	addl	%eax, %edi
    0000020e: 	leal	0x4(%rdx), %r10d
    00000212: 	movl	%edi, %eax
    00000214: 	cmpl	%r10d, %r13d
    00000217: 	jle	.Ltmp1259 # Offset: 535
    00000219: 	movzwl	0x8(%r14,%r9), %r10d
    0000021f: 	movl	%r10d, %eax
    00000222: 	sarw	$0x3, %ax
    00000226: 	testw	%r10w, %r10w
    0000022a: 	jns	.Ltmp1266 # Offset: 554
    0000022c: 	movswl	%r10w, %eax
    00000230: 	negl	%eax
    00000232: 	sarl	$0x3, %eax
    00000235: 	negl	%eax
.Ltmp1266:
    00000237: 	addl	%eax, %edi
    00000239: 	leal	0x5(%rdx), %r10d
    0000023d: 	movl	%edi, %eax
    0000023f: 	cmpl	%r10d, %r13d
    00000242: 	jle	.Ltmp1259 # Offset: 578
    00000244: 	movzwl	0xa(%r14,%r9), %r10d
    0000024a: 	movl	%r10d, %eax
    0000024d: 	sarw	$0x3, %ax
    00000251: 	testw	%r10w, %r10w
    00000255: 	jns	.Ltmp1267 # Offset: 597
    00000257: 	movswl	%r10w, %eax
    0000025b: 	negl	%eax
    0000025d: 	sarl	$0x3, %eax
    00000260: 	negl	%eax
.Ltmp1267:
    00000262: 	addl	%eax, %edi
    00000264: 	addl	$0x6, %edx
    00000267: 	movl	%edi, %eax
    00000269: 	cmpl	%edx, %r13d
    0000026c: 	jle	.Ltmp1259 # Offset: 620
    0000026e: 	movswl	0xc(%r14,%r9), %eax
    00000274: 	testw	%ax, %ax
    00000277: 	js	.Ltmp1268 # Offset: 631
    0000027d: 	sarw	$0x3, %ax
.Ltmp1279:
    00000281: 	addl	%edi, %eax
.Ltmp1259:
    00000283: 	cvttsd2si	%xmm8, %edi
    00000288: 	movl	%edi, %edx
    0000028a: 	sarw	$0x3, %dx
    0000028e: 	testw	%di, %di
    00000291: 	jns	.Ltmp1269 # Offset: 657
    00000293: 	movswl	%di, %edx
    00000296: 	negl	%edx
    00000298: 	sarl	$0x3, %edx
    0000029b: 	negl	%edx
.Ltmp1269:
    0000029d: 	imulw	$0x1f40, %dx, %dx
    000002a2: 	cmpw	%ax, %dx
    000002a5: 	je	.Ltmp1270 # Offset: 677
    000002a7: 	movl	current_test(%rip), %edx
    000002ad: 	movq	%rbp, %rsi
    000002b0: 	movl	$0x1, %edi
    000002b5: 	xorl	%eax, %eax
    000002b7: 	addl	$0x1, %r12d
    000002bb: 	callq	__printf_chk@PLT # Offset: 699
    000002c0: 	movl	iterations(%rip), %esi
    000002c6: 	cmpl	%r12d, %esi
    000002c9: 	jle	.Ltmp1258 # Offset: 713
    000002cb: 	movsd	init_value(%rip), %xmm8
    000002d4: 	jmp	.Ltmp1271 # Offset: 724
    000002d9: 	nopl	(%rax) # Size: 7
.Ltmp1270:
    000002e0: 	addl	$0x1, %r12d
    000002e4: 	cmpl	%esi, %r12d
    000002e7: 	jl	.Ltmp1271 # Offset: 743
.Ltmp1258:
    000002ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002fb: 	subq	$0x20, %rax
    000002ff: 	cmpq	%rax, %rbx
    00000302: 	je	.Ltmp1272 # Offset: 770
    00000308: 	movq	0x8(%rsp), %rax
    0000030d: 	leaq	0x10(%rbx), %rdi
    00000311: 	movq	%rdi, (%rbx)
    00000314: 	movq	(%rax), %rbp
    00000317: 	movq	0x8(%rax), %r12
    0000031b: 	movq	%rbp, %rax
    0000031e: 	addq	%r12, %rax
    00000321: 	je	.Ltmp1273 # Offset: 801
    00000323: 	testq	%rbp, %rbp
    00000326: 	je	.Ltmp1274 # Offset: 806
.Ltmp1273:
    0000032c: 	movq	%r12, 0x10(%rsp)
    00000331: 	cmpq	$0xf, %r12
    00000335: 	ja	.Ltmp1275 # Offset: 821
    0000033b: 	cmpq	$0x1, %r12
    0000033f: 	jne	.Ltmp1276 # Offset: 831
    00000345: 	movzbl	(%rbp), %eax
    00000349: 	movb	%al, 0x10(%rbx)
.Ltmp1281:
    0000034c: 	movq	%r12, 0x8(%rbx)
    00000350: 	movb	$0x0, (%rdi,%r12)
    00000355: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000035c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000363: 	addq	$0x20, %rax
    00000367: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000036e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000375: 	je	.Ltmp1277 # Offset: 885
.Ltmp1282:
    0000037b: 	movq	-0x20(%rax), %rbp
    0000037f: 	callq	clock@PLT # Offset: 895
    00000384: 	movq	%rax, end_time(%rip)
    0000038b: 	movq	0x18(%rsp), %rdx
    00000390: 	subq	%fs:0x28, %rdx
    00000399: 	jne	.Ltmp1278 # Offset: 921
    0000039f: 	subq	start_time(%rip), %rax
    000003a6: 	pxor	%xmm0, %xmm0
    000003aa: 	movq	%rbp, %rdi
    000003ad: 	cvtsi2sd	%rax, %xmm0
    000003b2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003ba: 	addq	$0x28, %rsp
    000003be: 	popq	%rbx
    000003bf: 	popq	%rbp
    000003c0: 	popq	%r12
    000003c2: 	popq	%r13
    000003c4: 	popq	%r14
    000003c6: 	popq	%r15
    000003c8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 968
    000003cd: 	nopl	(%rax) # Size: 3
.Ltmp1268:
    000003d0: 	negl	%eax
    000003d2: 	sarl	$0x3, %eax
    000003d5: 	negl	%eax
    000003d7: 	jmp	.Ltmp1279 # Offset: 983
.Ltmp1260:
    000003dc: 	xorl	%edx, %edx
    000003de: 	xorl	%eax, %eax
    000003e0: 	jmp	.Ltmp1280 # Offset: 992
.Ltmp1275:
    000003e5: 	movq	%rbx, %rdi
    000003e8: 	leaq	0x10(%rsp), %rsi
    000003ed: 	xorl	%edx, %edx
    000003ef: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1007
    000003f4: 	movq	%rax, (%rbx)
    000003f7: 	movq	%rax, %rdi
    000003fa: 	movq	0x10(%rsp), %rax
    000003ff: 	movq	%rax, 0x10(%rbx)
.Ltmp1283:
    00000403: 	movq	%r12, %rdx
    00000406: 	movq	%rbp, %rsi
    00000409: 	callq	memcpy@PLT # Offset: 1033
    0000040e: 	movq	0x10(%rsp), %r12
    00000413: 	movq	(%rbx), %rdi
    00000416: 	jmp	.Ltmp1281 # Offset: 1046
.Ltmp1272:
    0000041b: 	movq	0x8(%rsp), %rsi
    00000420: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000427: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1063
    0000042c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000433: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000043a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000441: 	jne	.Ltmp1282 # Offset: 1089
.Ltmp1277:
    00000447: 	movq	-0x8(%rdx), %rax
    0000044b: 	addq	$0x200, %rax
    00000451: 	jmp	.Ltmp1282 # Offset: 1105
.Ltmp1276:
    00000456: 	testq	%r12, %r12
    00000459: 	je	.Ltmp1281 # Offset: 1113
    0000045f: 	jmp	.Ltmp1283 # Offset: 1119
.Ltmp1278:
    00000461: 	callq	__stack_chk_fail@PLT # Offset: 1121
.Ltmp1274:
    00000466: 	leaq	DATAat0x57008(%rip), %rdi
    0000046d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1133
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs24shift_divide_toward_zeroIsLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs24shift_divide_toward_zeroIsLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 117
  State       : disassembled
  Address     : 0xf2c0
  Size        : 0x472
  MaxSize     : 0x480
  Offset      : 0xf2c0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs24shift_divide_toward_zeroIsLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0116:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1284 # Offset: 65
    00000047: 	leal	-0x1(%r13), %eax
    0000004b: 	movl	%r13d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movsd	init_value(%rip), %xmm8
    00000061: 	movl	%eax, 0x4(%rsp)
    00000065: 	movl	%r13d, %eax
    00000068: 	andl	$-0x8, %ebx
    0000006b: 	shrl	$0x3, %eax
    0000006e: 	subl	$0x1, %eax
    00000071: 	shlq	$0x4, %rax
    00000075: 	leaq	0x10(%r14,%rax), %r15
    0000007a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1297:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r13d, %r13d
    00000085: 	jle	.Ltmp1285 # Offset: 133
    0000008b: 	cmpl	$0x6, 0x4(%rsp)
    00000090: 	jbe	.Ltmp1286 # Offset: 144
    00000096: 	pxor	%xmm4, %xmm4
    0000009a: 	movq	%r14, %rax
    0000009d: 	pxor	%xmm6, %xmm6
    000000a1: 	movdqa	%xmm4, %xmm7
    000000a5: 	nopl	(%rax) # Size: 3
.Ltmp1287:
    000000a8: 	movdqu	(%rax), %xmm2
    000000ac: 	movdqa	%xmm7, %xmm1
    000000b0: 	movdqa	%xmm6, %xmm0
    000000b4: 	addq	$0x10, %rax
    000000b8: 	pcmpgtw	%xmm2, %xmm1
    000000bc: 	movdqa	%xmm2, %xmm3
    000000c0: 	movdqa	%xmm2, %xmm5
    000000c4: 	psraw	$0x6, %xmm2
    000000c9: 	punpcklwd	%xmm1, %xmm3
    000000cd: 	punpckhwd	%xmm1, %xmm5
    000000d1: 	psubd	%xmm3, %xmm0
    000000d5: 	movdqa	%xmm6, %xmm3
    000000d9: 	psubd	%xmm5, %xmm3
    000000dd: 	psrad	$0x6, %xmm0
    000000e2: 	psrad	$0x6, %xmm3
    000000e7: 	movdqa	%xmm0, %xmm5
    000000eb: 	punpcklwd	%xmm3, %xmm0
    000000ef: 	punpckhwd	%xmm3, %xmm5
    000000f3: 	movdqa	%xmm0, %xmm3
    000000f7: 	punpcklwd	%xmm5, %xmm0
    000000fb: 	punpckhwd	%xmm5, %xmm3
    000000ff: 	punpcklwd	%xmm3, %xmm0
    00000103: 	movdqa	%xmm7, %xmm3
    00000107: 	psubw	%xmm0, %xmm3
    0000010b: 	movdqa	%xmm3, %xmm0
    0000010f: 	pand	%xmm1, %xmm0
    00000113: 	pandn	%xmm2, %xmm1
    00000117: 	por	%xmm0, %xmm1
    0000011b: 	paddw	%xmm1, %xmm4
    0000011f: 	cmpq	%r15, %rax
    00000122: 	jne	.Ltmp1287 # Offset: 290
    00000124: 	movdqa	%xmm4, %xmm0
    00000128: 	psrldq	$0x8, %xmm0
    0000012d: 	paddw	%xmm0, %xmm4
    00000131: 	movdqa	%xmm4, %xmm0
    00000135: 	psrldq	$0x4, %xmm0
    0000013a: 	paddw	%xmm0, %xmm4
    0000013e: 	movdqa	%xmm4, %xmm0
    00000142: 	psrldq	$0x2, %xmm0
    00000147: 	paddw	%xmm0, %xmm4
    0000014b: 	pextrw	$0x0, %xmm4, %eax
    00000150: 	cmpl	%r13d, %ebx
    00000153: 	je	.Ltmp1285 # Offset: 339
    00000159: 	movl	%ebx, %edx
.Ltmp1306:
    0000015b: 	movslq	%edx, %rdi
    0000015e: 	movzwl	(%r14,%rdi,2), %r10d
    00000163: 	leaq	(%rdi,%rdi), %r9
    00000167: 	movl	%r10d, %edi
    0000016a: 	sarw	$0x6, %di
    0000016e: 	testw	%r10w, %r10w
    00000172: 	jns	.Ltmp1288 # Offset: 370
    00000174: 	movswl	%r10w, %edi
    00000178: 	negl	%edi
    0000017a: 	sarl	$0x6, %edi
    0000017d: 	negl	%edi
.Ltmp1288:
    0000017f: 	addl	%eax, %edi
    00000181: 	leal	0x1(%rdx), %r10d
    00000185: 	movl	%edi, %eax
    00000187: 	cmpl	%r10d, %r13d
    0000018a: 	jle	.Ltmp1285 # Offset: 394
    00000190: 	movzwl	0x2(%r14,%r9), %r10d
    00000196: 	movl	%r10d, %eax
    00000199: 	sarw	$0x6, %ax
    0000019d: 	testw	%r10w, %r10w
    000001a1: 	jns	.Ltmp1289 # Offset: 417
    000001a3: 	movswl	%r10w, %eax
    000001a7: 	negl	%eax
    000001a9: 	sarl	$0x6, %eax
    000001ac: 	negl	%eax
.Ltmp1289:
    000001ae: 	addl	%eax, %edi
    000001b0: 	leal	0x2(%rdx), %r10d
    000001b4: 	movl	%edi, %eax
    000001b6: 	cmpl	%r10d, %r13d
    000001b9: 	jle	.Ltmp1285 # Offset: 441
    000001bf: 	movzwl	0x4(%r14,%r9), %r10d
    000001c5: 	movl	%r10d, %eax
    000001c8: 	sarw	$0x6, %ax
    000001cc: 	testw	%r10w, %r10w
    000001d0: 	jns	.Ltmp1290 # Offset: 464
    000001d2: 	movswl	%r10w, %eax
    000001d6: 	negl	%eax
    000001d8: 	sarl	$0x6, %eax
    000001db: 	negl	%eax
.Ltmp1290:
    000001dd: 	addl	%eax, %edi
    000001df: 	leal	0x3(%rdx), %r10d
    000001e3: 	movl	%edi, %eax
    000001e5: 	cmpl	%r10d, %r13d
    000001e8: 	jle	.Ltmp1285 # Offset: 488
    000001ee: 	movzwl	0x6(%r14,%r9), %r10d
    000001f4: 	movl	%r10d, %eax
    000001f7: 	sarw	$0x6, %ax
    000001fb: 	testw	%r10w, %r10w
    000001ff: 	jns	.Ltmp1291 # Offset: 511
    00000201: 	movswl	%r10w, %eax
    00000205: 	negl	%eax
    00000207: 	sarl	$0x6, %eax
    0000020a: 	negl	%eax
.Ltmp1291:
    0000020c: 	addl	%eax, %edi
    0000020e: 	leal	0x4(%rdx), %r10d
    00000212: 	movl	%edi, %eax
    00000214: 	cmpl	%r10d, %r13d
    00000217: 	jle	.Ltmp1285 # Offset: 535
    00000219: 	movzwl	0x8(%r14,%r9), %r10d
    0000021f: 	movl	%r10d, %eax
    00000222: 	sarw	$0x6, %ax
    00000226: 	testw	%r10w, %r10w
    0000022a: 	jns	.Ltmp1292 # Offset: 554
    0000022c: 	movswl	%r10w, %eax
    00000230: 	negl	%eax
    00000232: 	sarl	$0x6, %eax
    00000235: 	negl	%eax
.Ltmp1292:
    00000237: 	addl	%eax, %edi
    00000239: 	leal	0x5(%rdx), %r10d
    0000023d: 	movl	%edi, %eax
    0000023f: 	cmpl	%r10d, %r13d
    00000242: 	jle	.Ltmp1285 # Offset: 578
    00000244: 	movzwl	0xa(%r14,%r9), %r10d
    0000024a: 	movl	%r10d, %eax
    0000024d: 	sarw	$0x6, %ax
    00000251: 	testw	%r10w, %r10w
    00000255: 	jns	.Ltmp1293 # Offset: 597
    00000257: 	movswl	%r10w, %eax
    0000025b: 	negl	%eax
    0000025d: 	sarl	$0x6, %eax
    00000260: 	negl	%eax
.Ltmp1293:
    00000262: 	addl	%eax, %edi
    00000264: 	addl	$0x6, %edx
    00000267: 	movl	%edi, %eax
    00000269: 	cmpl	%edx, %r13d
    0000026c: 	jle	.Ltmp1285 # Offset: 620
    0000026e: 	movswl	0xc(%r14,%r9), %eax
    00000274: 	testw	%ax, %ax
    00000277: 	js	.Ltmp1294 # Offset: 631
    0000027d: 	sarw	$0x6, %ax
.Ltmp1305:
    00000281: 	addl	%edi, %eax
.Ltmp1285:
    00000283: 	cvttsd2si	%xmm8, %edi
    00000288: 	movl	%edi, %edx
    0000028a: 	sarw	$0x6, %dx
    0000028e: 	testw	%di, %di
    00000291: 	jns	.Ltmp1295 # Offset: 657
    00000293: 	movswl	%di, %edx
    00000296: 	negl	%edx
    00000298: 	sarl	$0x6, %edx
    0000029b: 	negl	%edx
.Ltmp1295:
    0000029d: 	imulw	$0x1f40, %dx, %dx
    000002a2: 	cmpw	%ax, %dx
    000002a5: 	je	.Ltmp1296 # Offset: 677
    000002a7: 	movl	current_test(%rip), %edx
    000002ad: 	movq	%rbp, %rsi
    000002b0: 	movl	$0x1, %edi
    000002b5: 	xorl	%eax, %eax
    000002b7: 	addl	$0x1, %r12d
    000002bb: 	callq	__printf_chk@PLT # Offset: 699
    000002c0: 	movl	iterations(%rip), %esi
    000002c6: 	cmpl	%r12d, %esi
    000002c9: 	jle	.Ltmp1284 # Offset: 713
    000002cb: 	movsd	init_value(%rip), %xmm8
    000002d4: 	jmp	.Ltmp1297 # Offset: 724
    000002d9: 	nopl	(%rax) # Size: 7
.Ltmp1296:
    000002e0: 	addl	$0x1, %r12d
    000002e4: 	cmpl	%esi, %r12d
    000002e7: 	jl	.Ltmp1297 # Offset: 743
.Ltmp1284:
    000002ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002fb: 	subq	$0x20, %rax
    000002ff: 	cmpq	%rax, %rbx
    00000302: 	je	.Ltmp1298 # Offset: 770
    00000308: 	movq	0x8(%rsp), %rax
    0000030d: 	leaq	0x10(%rbx), %rdi
    00000311: 	movq	%rdi, (%rbx)
    00000314: 	movq	(%rax), %rbp
    00000317: 	movq	0x8(%rax), %r12
    0000031b: 	movq	%rbp, %rax
    0000031e: 	addq	%r12, %rax
    00000321: 	je	.Ltmp1299 # Offset: 801
    00000323: 	testq	%rbp, %rbp
    00000326: 	je	.Ltmp1300 # Offset: 806
.Ltmp1299:
    0000032c: 	movq	%r12, 0x10(%rsp)
    00000331: 	cmpq	$0xf, %r12
    00000335: 	ja	.Ltmp1301 # Offset: 821
    0000033b: 	cmpq	$0x1, %r12
    0000033f: 	jne	.Ltmp1302 # Offset: 831
    00000345: 	movzbl	(%rbp), %eax
    00000349: 	movb	%al, 0x10(%rbx)
.Ltmp1307:
    0000034c: 	movq	%r12, 0x8(%rbx)
    00000350: 	movb	$0x0, (%rdi,%r12)
    00000355: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000035c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000363: 	addq	$0x20, %rax
    00000367: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000036e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000375: 	je	.Ltmp1303 # Offset: 885
.Ltmp1308:
    0000037b: 	movq	-0x20(%rax), %rbp
    0000037f: 	callq	clock@PLT # Offset: 895
    00000384: 	movq	%rax, end_time(%rip)
    0000038b: 	movq	0x18(%rsp), %rdx
    00000390: 	subq	%fs:0x28, %rdx
    00000399: 	jne	.Ltmp1304 # Offset: 921
    0000039f: 	subq	start_time(%rip), %rax
    000003a6: 	pxor	%xmm0, %xmm0
    000003aa: 	movq	%rbp, %rdi
    000003ad: 	cvtsi2sd	%rax, %xmm0
    000003b2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003ba: 	addq	$0x28, %rsp
    000003be: 	popq	%rbx
    000003bf: 	popq	%rbp
    000003c0: 	popq	%r12
    000003c2: 	popq	%r13
    000003c4: 	popq	%r14
    000003c6: 	popq	%r15
    000003c8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 968
    000003cd: 	nopl	(%rax) # Size: 3
.Ltmp1294:
    000003d0: 	negl	%eax
    000003d2: 	sarl	$0x6, %eax
    000003d5: 	negl	%eax
    000003d7: 	jmp	.Ltmp1305 # Offset: 983
.Ltmp1286:
    000003dc: 	xorl	%edx, %edx
    000003de: 	xorl	%eax, %eax
    000003e0: 	jmp	.Ltmp1306 # Offset: 992
.Ltmp1301:
    000003e5: 	movq	%rbx, %rdi
    000003e8: 	leaq	0x10(%rsp), %rsi
    000003ed: 	xorl	%edx, %edx
    000003ef: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1007
    000003f4: 	movq	%rax, (%rbx)
    000003f7: 	movq	%rax, %rdi
    000003fa: 	movq	0x10(%rsp), %rax
    000003ff: 	movq	%rax, 0x10(%rbx)
.Ltmp1309:
    00000403: 	movq	%r12, %rdx
    00000406: 	movq	%rbp, %rsi
    00000409: 	callq	memcpy@PLT # Offset: 1033
    0000040e: 	movq	0x10(%rsp), %r12
    00000413: 	movq	(%rbx), %rdi
    00000416: 	jmp	.Ltmp1307 # Offset: 1046
.Ltmp1298:
    0000041b: 	movq	0x8(%rsp), %rsi
    00000420: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000427: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1063
    0000042c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000433: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000043a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000441: 	jne	.Ltmp1308 # Offset: 1089
.Ltmp1303:
    00000447: 	movq	-0x8(%rdx), %rax
    0000044b: 	addq	$0x200, %rax
    00000451: 	jmp	.Ltmp1308 # Offset: 1105
.Ltmp1302:
    00000456: 	testq	%r12, %r12
    00000459: 	je	.Ltmp1307 # Offset: 1113
    0000045f: 	jmp	.Ltmp1309 # Offset: 1119
.Ltmp1304:
    00000461: 	callq	__stack_chk_fail@PLT # Offset: 1121
.Ltmp1300:
    00000466: 	leaq	DATAat0x57008(%rip), %rdi
    0000046d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1133
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs24shift_divide_toward_zeroIsLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIa13and_remainderIaLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIa13and_remainderIaLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIa13and_remainderIaLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 118
  State       : disassembled
  Address     : 0xf740
  Size        : 0x2ae
  MaxSize     : 0x2b0
  Offset      : 0xf740
  Section     : .text
  Orc Section : .local.text._Z13test_constantIa13and_remainderIaLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0117:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	%rdi, %rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %esi
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%esi, %esi
    00000036: 	jle	.Ltmp1310 # Offset: 54
    0000003c: 	movdqa	DATAat0x57d10(%rip), %xmm6
    00000044: 	movdqa	DATAat0x57d20(%rip), %xmm5
    0000004c: 	xorl	%r14d, %r14d
    0000004f: 	leaq	0x1f40(%rbx), %r13
    00000056: 	movsd	init_value(%rip), %xmm7
    0000005e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp1314:
    00000068: 	pxor	%xmm3, %xmm3
    0000006c: 	movq	%rbx, %rax
    0000006f: 	movdqa	%xmm3, %xmm4
    00000073: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1311:
    00000078: 	movdqu	(%rax), %xmm2
    0000007c: 	movdqu	(%rax), %xmm8
    00000081: 	movdqa	%xmm4, %xmm1
    00000085: 	addq	$0x10, %rax
    00000089: 	pand	%xmm6, %xmm2
    0000008d: 	pcmpgtb	%xmm8, %xmm1
    00000092: 	movdqa	%xmm2, %xmm0
    00000096: 	pcmpeqb	%xmm4, %xmm0
    0000009a: 	pcmpeqb	%xmm4, %xmm0
    0000009e: 	pand	%xmm1, %xmm0
    000000a2: 	movdqa	%xmm2, %xmm1
    000000a6: 	paddb	%xmm5, %xmm1
    000000aa: 	pand	%xmm0, %xmm1
    000000ae: 	pandn	%xmm2, %xmm0
    000000b2: 	por	%xmm1, %xmm0
    000000b6: 	paddb	%xmm0, %xmm3
    000000ba: 	cmpq	%rax, %r13
    000000bd: 	jne	.Ltmp1311 # Offset: 189
    000000bf: 	cvttsd2si	%xmm7, %ecx
    000000c3: 	movdqa	%xmm3, %xmm0
    000000c7: 	psrldq	$0x8, %xmm0
    000000cc: 	paddb	%xmm0, %xmm3
    000000d0: 	psadbw	%xmm4, %xmm3
    000000d4: 	movl	%ecx, %edx
    000000d6: 	movd	%xmm3, %eax
    000000da: 	andl	$0x3f, %edx
    000000dd: 	testb	%cl, %cl
    000000df: 	jns	.Ltmp1312 # Offset: 223
    000000e1: 	testb	%dl, %dl
    000000e3: 	leal	-0x40(%rdx), %ecx
    000000e6: 	setne	%dil
    000000ea: 	testb	%dil, %dil
    000000ed: 	cmovnel	%ecx, %edx
.Ltmp1312:
    000000f0: 	shll	$0x6, %edx
    000000f3: 	cmpb	%al, %dl
    000000f5: 	je	.Ltmp1313 # Offset: 245
    000000f7: 	movl	current_test(%rip), %edx
    000000fd: 	movq	%rbp, %rsi
    00000100: 	movl	$0x1, %edi
    00000105: 	xorl	%eax, %eax
    00000107: 	addl	$0x1, %r14d
    0000010b: 	callq	__printf_chk@PLT # Offset: 267
    00000110: 	movl	iterations(%rip), %esi
    00000116: 	cmpl	%esi, %r14d
    00000119: 	jge	.Ltmp1310 # Offset: 281
    0000011b: 	movsd	init_value(%rip), %xmm7
    00000123: 	movdqa	DATAat0x57d10(%rip), %xmm6
    0000012b: 	movdqa	DATAat0x57d20(%rip), %xmm5
    00000133: 	jmp	.Ltmp1314 # Offset: 307
    00000138: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1313:
    00000140: 	addl	$0x1, %r14d
    00000144: 	cmpl	%esi, %r14d
    00000147: 	jl	.Ltmp1314 # Offset: 327
.Ltmp1310:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp1315 # Offset: 354
    00000168: 	leaq	0x10(%rbx), %rdi
    0000016c: 	movq	%rdi, (%rbx)
    0000016f: 	movq	(%r12), %rbp
    00000173: 	movq	0x8(%r12), %r12
    00000178: 	movq	%rbp, %rax
    0000017b: 	addq	%r12, %rax
    0000017e: 	je	.Ltmp1316 # Offset: 382
    00000180: 	testq	%rbp, %rbp
    00000183: 	je	.Ltmp1317 # Offset: 387
.Ltmp1316:
    00000189: 	movq	%r12, (%rsp)
    0000018d: 	cmpq	$0xf, %r12
    00000191: 	ja	.Ltmp1318 # Offset: 401
    00000197: 	cmpq	$0x1, %r12
    0000019b: 	jne	.Ltmp1319 # Offset: 411
    000001a1: 	movzbl	(%rbp), %eax
    000001a5: 	movb	%al, 0x10(%rbx)
.Ltmp1322:
    000001a8: 	movq	%r12, 0x8(%rbx)
    000001ac: 	movb	$0x0, (%rdi,%r12)
    000001b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001b8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001bf: 	addq	$0x20, %rax
    000001c3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ca: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d1: 	je	.Ltmp1320 # Offset: 465
.Ltmp1323:
    000001d7: 	movq	-0x20(%rax), %rbp
    000001db: 	callq	clock@PLT # Offset: 475
    000001e0: 	movq	%rax, end_time(%rip)
    000001e7: 	movq	0x8(%rsp), %rdx
    000001ec: 	subq	%fs:0x28, %rdx
    000001f5: 	jne	.Ltmp1321 # Offset: 501
    000001fb: 	subq	start_time(%rip), %rax
    00000202: 	pxor	%xmm0, %xmm0
    00000206: 	movq	%rbp, %rdi
    00000209: 	cvtsi2sd	%rax, %xmm0
    0000020e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000216: 	addq	$0x10, %rsp
    0000021a: 	popq	%rbx
    0000021b: 	popq	%rbp
    0000021c: 	popq	%r12
    0000021e: 	popq	%r13
    00000220: 	popq	%r14
    00000222: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 546
.Ltmp1318:
    00000227: 	movq	%rbx, %rdi
    0000022a: 	movq	%rsp, %rsi
    0000022d: 	xorl	%edx, %edx
    0000022f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 559
    00000234: 	movq	%rax, (%rbx)
    00000237: 	movq	%rax, %rdi
    0000023a: 	movq	(%rsp), %rax
    0000023e: 	movq	%rax, 0x10(%rbx)
.Ltmp1324:
    00000242: 	movq	%r12, %rdx
    00000245: 	movq	%rbp, %rsi
    00000248: 	callq	memcpy@PLT # Offset: 584
    0000024d: 	movq	(%rsp), %r12
    00000251: 	movq	(%rbx), %rdi
    00000254: 	jmp	.Ltmp1322 # Offset: 596
.Ltmp1315:
    00000259: 	movq	%r12, %rsi
    0000025c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000263: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 611
    00000268: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000026f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000276: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000027d: 	jne	.Ltmp1323 # Offset: 637
.Ltmp1320:
    00000283: 	movq	-0x8(%rdx), %rax
    00000287: 	addq	$0x200, %rax
    0000028d: 	jmp	.Ltmp1323 # Offset: 653
.Ltmp1319:
    00000292: 	testq	%r12, %r12
    00000295: 	je	.Ltmp1322 # Offset: 661
    0000029b: 	jmp	.Ltmp1324 # Offset: 667
.Ltmp1321:
    0000029d: 	callq	__stack_chk_fail@PLT # Offset: 669
.Ltmp1317:
    000002a2: 	leaq	DATAat0x57008(%rip), %rdi
    000002a9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 681
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIa13and_remainderIaLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIa14and_remainder2IaLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIa14and_remainder2IaLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIa14and_remainder2IaLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 119
  State       : disassembled
  Address     : 0xf9f0
  Size        : 0x486
  MaxSize     : 0x490
  Offset      : 0xf9f0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIa14and_remainder2IaLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0118:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	%rdi, %rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %esi
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%esi, %esi
    00000036: 	jle	.Ltmp1325 # Offset: 54
    0000003c: 	movdqa	DATAat0x57d10(%rip), %xmm11
    00000045: 	movdqa	DATAat0x57be0(%rip), %xmm6
    0000004d: 	xorl	%r14d, %r14d
    00000050: 	leaq	0x1f40(%rbx), %r13
    00000057: 	movdqa	DATAat0x57d30(%rip), %xmm5
    0000005f: 	movq	init_value(%rip), %rdi
    00000066: 	leaq	DATAat0x571d0(%rip), %rbp
    0000006d: 	nopl	(%rax) # Size: 3
.Ltmp1329:
    00000070: 	pxor	%xmm9, %xmm9
    00000075: 	pxor	%xmm4, %xmm4
    00000079: 	pxor	%xmm2, %xmm2
    0000007d: 	movq	%rbx, %rax
    00000080: 	movdqa	%xmm9, %xmm10
    00000085: 	nopl	(%rax) # Size: 3
.Ltmp1326:
    00000088: 	movdqu	(%rax), %xmm1
    0000008c: 	movdqa	%xmm10, %xmm0
    00000091: 	movdqu	(%rax), %xmm15
    00000096: 	addq	$0x10, %rax
    0000009a: 	pand	%xmm11, %xmm1
    0000009f: 	pcmpgtb	%xmm1, %xmm0
    000000a3: 	movdqa	%xmm1, %xmm3
    000000a7: 	punpcklbw	%xmm0, %xmm3
    000000ab: 	punpckhbw	%xmm0, %xmm1
    000000af: 	movdqa	%xmm4, %xmm0
    000000b3: 	pcmpgtw	%xmm3, %xmm0
    000000b7: 	movdqa	%xmm3, %xmm8
    000000bc: 	movdqa	%xmm1, %xmm7
    000000c0: 	punpcklwd	%xmm0, %xmm8
    000000c5: 	punpckhwd	%xmm0, %xmm3
    000000c9: 	movdqa	%xmm4, %xmm0
    000000cd: 	pcmpgtw	%xmm1, %xmm0
    000000d1: 	movdqa	%xmm3, %xmm12
    000000d6: 	pcmpeqd	%xmm2, %xmm12
    000000db: 	punpcklwd	%xmm0, %xmm7
    000000df: 	punpckhwd	%xmm0, %xmm1
    000000e3: 	movdqa	%xmm8, %xmm0
    000000e8: 	pcmpeqd	%xmm2, %xmm0
    000000ec: 	pcmpeqd	%xmm2, %xmm12
    000000f1: 	pcmpeqd	%xmm2, %xmm0
    000000f5: 	movdqa	%xmm0, %xmm13
    000000fa: 	punpcklwd	%xmm12, %xmm0
    000000ff: 	punpckhwd	%xmm12, %xmm13
    00000104: 	movdqa	%xmm0, %xmm12
    00000109: 	punpckhwd	%xmm13, %xmm12
    0000010e: 	punpcklwd	%xmm13, %xmm0
    00000113: 	movdqa	%xmm1, %xmm13
    00000118: 	punpcklwd	%xmm12, %xmm0
    0000011d: 	pcmpeqd	%xmm2, %xmm13
    00000122: 	movdqa	%xmm7, %xmm12
    00000127: 	pcmpeqd	%xmm2, %xmm12
    0000012c: 	pand	%xmm6, %xmm0
    00000130: 	pcmpeqd	%xmm2, %xmm13
    00000135: 	pcmpeqd	%xmm2, %xmm12
    0000013a: 	movdqa	%xmm12, %xmm14
    0000013f: 	punpcklwd	%xmm13, %xmm12
    00000144: 	punpckhwd	%xmm13, %xmm14
    00000149: 	movdqa	%xmm12, %xmm13
    0000014e: 	punpckhwd	%xmm14, %xmm13
    00000153: 	punpcklwd	%xmm14, %xmm12
    00000158: 	punpcklwd	%xmm13, %xmm12
    0000015d: 	movdqa	%xmm10, %xmm13
    00000162: 	pand	%xmm6, %xmm12
    00000167: 	packuswb	%xmm12, %xmm0
    0000016c: 	movdqa	%xmm10, %xmm12
    00000171: 	pcmpgtb	%xmm15, %xmm12
    00000176: 	movdqa	%xmm5, %xmm15
    0000017b: 	paddd	%xmm8, %xmm15
    00000180: 	pand	%xmm12, %xmm0
    00000185: 	pcmpgtb	%xmm0, %xmm13
    0000018a: 	movdqa	%xmm0, %xmm12
    0000018f: 	punpcklbw	%xmm13, %xmm12
    00000194: 	punpckhbw	%xmm13, %xmm0
    00000199: 	movdqa	%xmm4, %xmm13
    0000019e: 	pcmpgtw	%xmm12, %xmm13
    000001a3: 	movdqa	%xmm12, %xmm14
    000001a8: 	punpcklwd	%xmm13, %xmm14
    000001ad: 	punpckhwd	%xmm13, %xmm12
    000001b2: 	movdqa	%xmm5, %xmm13
    000001b7: 	paddd	%xmm3, %xmm13
    000001bc: 	pand	%xmm14, %xmm15
    000001c1: 	pandn	%xmm8, %xmm14
    000001c6: 	pand	%xmm12, %xmm13
    000001cb: 	pandn	%xmm3, %xmm12
    000001d0: 	movdqa	%xmm14, %xmm8
    000001d5: 	por	%xmm13, %xmm12
    000001da: 	movdqa	%xmm4, %xmm13
    000001df: 	movdqa	%xmm0, %xmm3
    000001e3: 	pcmpgtw	%xmm0, %xmm13
    000001e8: 	movdqa	%xmm5, %xmm14
    000001ed: 	por	%xmm15, %xmm8
    000001f2: 	paddd	%xmm7, %xmm14
    000001f7: 	punpcklwd	%xmm13, %xmm3
    000001fc: 	punpckhwd	%xmm13, %xmm0
    00000201: 	pand	%xmm3, %xmm14
    00000206: 	pandn	%xmm7, %xmm3
    0000020a: 	movdqa	%xmm5, %xmm7
    0000020e: 	paddd	%xmm1, %xmm7
    00000212: 	por	%xmm14, %xmm3
    00000217: 	pand	%xmm0, %xmm7
    0000021b: 	pandn	%xmm1, %xmm0
    0000021f: 	movdqa	%xmm8, %xmm1
    00000224: 	por	%xmm7, %xmm0
    00000228: 	movdqa	%xmm8, %xmm7
    0000022d: 	punpckhwd	%xmm12, %xmm1
    00000232: 	punpcklwd	%xmm12, %xmm7
    00000237: 	movdqa	%xmm7, %xmm8
    0000023c: 	punpcklwd	%xmm1, %xmm7
    00000240: 	punpckhwd	%xmm1, %xmm8
    00000245: 	movdqa	%xmm3, %xmm1
    00000249: 	punpcklwd	%xmm8, %xmm7
    0000024e: 	punpcklwd	%xmm0, %xmm1
    00000252: 	movdqa	%xmm3, %xmm8
    00000257: 	punpckhwd	%xmm0, %xmm8
    0000025c: 	movdqa	%xmm1, %xmm0
    00000260: 	pand	%xmm6, %xmm7
    00000264: 	punpckhwd	%xmm8, %xmm0
    00000269: 	punpcklwd	%xmm8, %xmm1
    0000026e: 	punpcklwd	%xmm0, %xmm1
    00000272: 	pand	%xmm6, %xmm1
    00000276: 	packuswb	%xmm1, %xmm7
    0000027a: 	paddb	%xmm7, %xmm9
    0000027f: 	cmpq	%rax, %r13
    00000282: 	jne	.Ltmp1326 # Offset: 642
    00000288: 	movq	%rdi, %xmm4
    0000028d: 	movdqa	%xmm9, %xmm0
    00000292: 	cvttsd2si	%xmm4, %ecx
    00000296: 	psrldq	$0x8, %xmm0
    0000029b: 	paddb	%xmm0, %xmm9
    000002a0: 	psadbw	%xmm10, %xmm9
    000002a5: 	movd	%xmm9, %eax
    000002aa: 	movl	%ecx, %edx
    000002ac: 	andl	$0x3f, %edx
    000002af: 	testb	%cl, %cl
    000002b1: 	jns	.Ltmp1327 # Offset: 689
    000002b3: 	testl	%edx, %edx
    000002b5: 	leal	-0x40(%rdx), %ecx
    000002b8: 	setne	%r8b
    000002bc: 	testb	%r8b, %r8b
    000002bf: 	cmovnel	%ecx, %edx
.Ltmp1327:
    000002c2: 	shll	$0x6, %edx
    000002c5: 	cmpb	%dl, %al
    000002c7: 	je	.Ltmp1328 # Offset: 711
    000002c9: 	movl	current_test(%rip), %edx
    000002cf: 	movq	%rbp, %rsi
    000002d2: 	movl	$0x1, %edi
    000002d7: 	xorl	%eax, %eax
    000002d9: 	addl	$0x1, %r14d
    000002dd: 	callq	__printf_chk@PLT # Offset: 733
    000002e2: 	movl	iterations(%rip), %esi
    000002e8: 	cmpl	%esi, %r14d
    000002eb: 	jge	.Ltmp1325 # Offset: 747
    000002ed: 	movq	init_value(%rip), %rdi
    000002f4: 	movdqa	DATAat0x57d30(%rip), %xmm5
    000002fc: 	movdqa	DATAat0x57d10(%rip), %xmm11
    00000305: 	movdqa	DATAat0x57be0(%rip), %xmm6
    0000030d: 	jmp	.Ltmp1329 # Offset: 781
    00000312: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1328:
    00000318: 	addl	$0x1, %r14d
    0000031c: 	cmpl	%esi, %r14d
    0000031f: 	jl	.Ltmp1329 # Offset: 799
.Ltmp1325:
    00000325: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000032c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000333: 	subq	$0x20, %rax
    00000337: 	cmpq	%rax, %rbx
    0000033a: 	je	.Ltmp1330 # Offset: 826
    00000340: 	leaq	0x10(%rbx), %rdi
    00000344: 	movq	%rdi, (%rbx)
    00000347: 	movq	(%r12), %rbp
    0000034b: 	movq	0x8(%r12), %r12
    00000350: 	movq	%rbp, %rax
    00000353: 	addq	%r12, %rax
    00000356: 	je	.Ltmp1331 # Offset: 854
    00000358: 	testq	%rbp, %rbp
    0000035b: 	je	.Ltmp1332 # Offset: 859
.Ltmp1331:
    00000361: 	movq	%r12, (%rsp)
    00000365: 	cmpq	$0xf, %r12
    00000369: 	ja	.Ltmp1333 # Offset: 873
    0000036f: 	cmpq	$0x1, %r12
    00000373: 	jne	.Ltmp1334 # Offset: 883
    00000379: 	movzbl	(%rbp), %eax
    0000037d: 	movb	%al, 0x10(%rbx)
.Ltmp1337:
    00000380: 	movq	%r12, 0x8(%rbx)
    00000384: 	movb	$0x0, (%rdi,%r12)
    00000389: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000390: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000397: 	addq	$0x20, %rax
    0000039b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003a2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000003a9: 	je	.Ltmp1335 # Offset: 937
.Ltmp1338:
    000003af: 	movq	-0x20(%rax), %rbp
    000003b3: 	callq	clock@PLT # Offset: 947
    000003b8: 	movq	%rax, end_time(%rip)
    000003bf: 	movq	0x8(%rsp), %rdx
    000003c4: 	subq	%fs:0x28, %rdx
    000003cd: 	jne	.Ltmp1336 # Offset: 973
    000003d3: 	subq	start_time(%rip), %rax
    000003da: 	pxor	%xmm0, %xmm0
    000003de: 	movq	%rbp, %rdi
    000003e1: 	cvtsi2sd	%rax, %xmm0
    000003e6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003ee: 	addq	$0x10, %rsp
    000003f2: 	popq	%rbx
    000003f3: 	popq	%rbp
    000003f4: 	popq	%r12
    000003f6: 	popq	%r13
    000003f8: 	popq	%r14
    000003fa: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1018
.Ltmp1333:
    000003ff: 	movq	%rbx, %rdi
    00000402: 	movq	%rsp, %rsi
    00000405: 	xorl	%edx, %edx
    00000407: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1031
    0000040c: 	movq	%rax, (%rbx)
    0000040f: 	movq	%rax, %rdi
    00000412: 	movq	(%rsp), %rax
    00000416: 	movq	%rax, 0x10(%rbx)
.Ltmp1339:
    0000041a: 	movq	%r12, %rdx
    0000041d: 	movq	%rbp, %rsi
    00000420: 	callq	memcpy@PLT # Offset: 1056
    00000425: 	movq	(%rsp), %r12
    00000429: 	movq	(%rbx), %rdi
    0000042c: 	jmp	.Ltmp1337 # Offset: 1068
.Ltmp1330:
    00000431: 	movq	%r12, %rsi
    00000434: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000043b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1083
    00000440: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000447: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000044e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000455: 	jne	.Ltmp1338 # Offset: 1109
.Ltmp1335:
    0000045b: 	movq	-0x8(%rdx), %rax
    0000045f: 	addq	$0x200, %rax
    00000465: 	jmp	.Ltmp1338 # Offset: 1125
.Ltmp1334:
    0000046a: 	testq	%r12, %r12
    0000046d: 	je	.Ltmp1337 # Offset: 1133
    00000473: 	jmp	.Ltmp1339 # Offset: 1139
.Ltmp1336:
    00000475: 	callq	__stack_chk_fail@PLT # Offset: 1141
.Ltmp1332:
    0000047a: 	leaq	DATAat0x57008(%rip), %rdi
    00000481: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1153
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIa14and_remainder2IaLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIa14and_remainder2IaLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIa14and_remainder2IaLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIa14and_remainder2IaLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 120
  State       : disassembled
  Address     : 0xfe80
  Size        : 0x486
  MaxSize     : 0x490
  Offset      : 0xfe80
  Section     : .text
  Orc Section : .local.text._Z13test_constantIa14and_remainder2IaLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0119:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	%rdi, %rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %esi
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%esi, %esi
    00000036: 	jle	.Ltmp1340 # Offset: 54
    0000003c: 	movdqa	DATAat0x57d40(%rip), %xmm11
    00000045: 	movdqa	DATAat0x57be0(%rip), %xmm6
    0000004d: 	xorl	%r14d, %r14d
    00000050: 	leaq	0x1f40(%rbx), %r13
    00000057: 	movdqa	DATAat0x57d50(%rip), %xmm5
    0000005f: 	movq	init_value(%rip), %rdi
    00000066: 	leaq	DATAat0x571d0(%rip), %rbp
    0000006d: 	nopl	(%rax) # Size: 3
.Ltmp1344:
    00000070: 	pxor	%xmm9, %xmm9
    00000075: 	pxor	%xmm4, %xmm4
    00000079: 	pxor	%xmm2, %xmm2
    0000007d: 	movq	%rbx, %rax
    00000080: 	movdqa	%xmm9, %xmm10
    00000085: 	nopl	(%rax) # Size: 3
.Ltmp1341:
    00000088: 	movdqu	(%rax), %xmm1
    0000008c: 	movdqa	%xmm10, %xmm0
    00000091: 	movdqu	(%rax), %xmm15
    00000096: 	addq	$0x10, %rax
    0000009a: 	pand	%xmm11, %xmm1
    0000009f: 	pcmpgtb	%xmm1, %xmm0
    000000a3: 	movdqa	%xmm1, %xmm3
    000000a7: 	punpcklbw	%xmm0, %xmm3
    000000ab: 	punpckhbw	%xmm0, %xmm1
    000000af: 	movdqa	%xmm4, %xmm0
    000000b3: 	pcmpgtw	%xmm3, %xmm0
    000000b7: 	movdqa	%xmm3, %xmm8
    000000bc: 	movdqa	%xmm1, %xmm7
    000000c0: 	punpcklwd	%xmm0, %xmm8
    000000c5: 	punpckhwd	%xmm0, %xmm3
    000000c9: 	movdqa	%xmm4, %xmm0
    000000cd: 	pcmpgtw	%xmm1, %xmm0
    000000d1: 	movdqa	%xmm3, %xmm12
    000000d6: 	pcmpeqd	%xmm2, %xmm12
    000000db: 	punpcklwd	%xmm0, %xmm7
    000000df: 	punpckhwd	%xmm0, %xmm1
    000000e3: 	movdqa	%xmm8, %xmm0
    000000e8: 	pcmpeqd	%xmm2, %xmm0
    000000ec: 	pcmpeqd	%xmm2, %xmm12
    000000f1: 	pcmpeqd	%xmm2, %xmm0
    000000f5: 	movdqa	%xmm0, %xmm13
    000000fa: 	punpcklwd	%xmm12, %xmm0
    000000ff: 	punpckhwd	%xmm12, %xmm13
    00000104: 	movdqa	%xmm0, %xmm12
    00000109: 	punpckhwd	%xmm13, %xmm12
    0000010e: 	punpcklwd	%xmm13, %xmm0
    00000113: 	movdqa	%xmm1, %xmm13
    00000118: 	punpcklwd	%xmm12, %xmm0
    0000011d: 	pcmpeqd	%xmm2, %xmm13
    00000122: 	movdqa	%xmm7, %xmm12
    00000127: 	pcmpeqd	%xmm2, %xmm12
    0000012c: 	pand	%xmm6, %xmm0
    00000130: 	pcmpeqd	%xmm2, %xmm13
    00000135: 	pcmpeqd	%xmm2, %xmm12
    0000013a: 	movdqa	%xmm12, %xmm14
    0000013f: 	punpcklwd	%xmm13, %xmm12
    00000144: 	punpckhwd	%xmm13, %xmm14
    00000149: 	movdqa	%xmm12, %xmm13
    0000014e: 	punpckhwd	%xmm14, %xmm13
    00000153: 	punpcklwd	%xmm14, %xmm12
    00000158: 	punpcklwd	%xmm13, %xmm12
    0000015d: 	movdqa	%xmm10, %xmm13
    00000162: 	pand	%xmm6, %xmm12
    00000167: 	packuswb	%xmm12, %xmm0
    0000016c: 	movdqa	%xmm10, %xmm12
    00000171: 	pcmpgtb	%xmm15, %xmm12
    00000176: 	movdqa	%xmm5, %xmm15
    0000017b: 	paddd	%xmm8, %xmm15
    00000180: 	pand	%xmm12, %xmm0
    00000185: 	pcmpgtb	%xmm0, %xmm13
    0000018a: 	movdqa	%xmm0, %xmm12
    0000018f: 	punpcklbw	%xmm13, %xmm12
    00000194: 	punpckhbw	%xmm13, %xmm0
    00000199: 	movdqa	%xmm4, %xmm13
    0000019e: 	pcmpgtw	%xmm12, %xmm13
    000001a3: 	movdqa	%xmm12, %xmm14
    000001a8: 	punpcklwd	%xmm13, %xmm14
    000001ad: 	punpckhwd	%xmm13, %xmm12
    000001b2: 	movdqa	%xmm5, %xmm13
    000001b7: 	paddd	%xmm3, %xmm13
    000001bc: 	pand	%xmm14, %xmm15
    000001c1: 	pandn	%xmm8, %xmm14
    000001c6: 	pand	%xmm12, %xmm13
    000001cb: 	pandn	%xmm3, %xmm12
    000001d0: 	movdqa	%xmm14, %xmm8
    000001d5: 	por	%xmm13, %xmm12
    000001da: 	movdqa	%xmm4, %xmm13
    000001df: 	movdqa	%xmm0, %xmm3
    000001e3: 	pcmpgtw	%xmm0, %xmm13
    000001e8: 	movdqa	%xmm5, %xmm14
    000001ed: 	por	%xmm15, %xmm8
    000001f2: 	paddd	%xmm7, %xmm14
    000001f7: 	punpcklwd	%xmm13, %xmm3
    000001fc: 	punpckhwd	%xmm13, %xmm0
    00000201: 	pand	%xmm3, %xmm14
    00000206: 	pandn	%xmm7, %xmm3
    0000020a: 	movdqa	%xmm5, %xmm7
    0000020e: 	paddd	%xmm1, %xmm7
    00000212: 	por	%xmm14, %xmm3
    00000217: 	pand	%xmm0, %xmm7
    0000021b: 	pandn	%xmm1, %xmm0
    0000021f: 	movdqa	%xmm8, %xmm1
    00000224: 	por	%xmm7, %xmm0
    00000228: 	movdqa	%xmm8, %xmm7
    0000022d: 	punpckhwd	%xmm12, %xmm1
    00000232: 	punpcklwd	%xmm12, %xmm7
    00000237: 	movdqa	%xmm7, %xmm8
    0000023c: 	punpcklwd	%xmm1, %xmm7
    00000240: 	punpckhwd	%xmm1, %xmm8
    00000245: 	movdqa	%xmm3, %xmm1
    00000249: 	punpcklwd	%xmm8, %xmm7
    0000024e: 	punpcklwd	%xmm0, %xmm1
    00000252: 	movdqa	%xmm3, %xmm8
    00000257: 	punpckhwd	%xmm0, %xmm8
    0000025c: 	movdqa	%xmm1, %xmm0
    00000260: 	pand	%xmm6, %xmm7
    00000264: 	punpckhwd	%xmm8, %xmm0
    00000269: 	punpcklwd	%xmm8, %xmm1
    0000026e: 	punpcklwd	%xmm0, %xmm1
    00000272: 	pand	%xmm6, %xmm1
    00000276: 	packuswb	%xmm1, %xmm7
    0000027a: 	paddb	%xmm7, %xmm9
    0000027f: 	cmpq	%rax, %r13
    00000282: 	jne	.Ltmp1341 # Offset: 642
    00000288: 	movq	%rdi, %xmm4
    0000028d: 	movdqa	%xmm9, %xmm0
    00000292: 	cvttsd2si	%xmm4, %ecx
    00000296: 	psrldq	$0x8, %xmm0
    0000029b: 	paddb	%xmm0, %xmm9
    000002a0: 	psadbw	%xmm10, %xmm9
    000002a5: 	movd	%xmm9, %eax
    000002aa: 	movl	%ecx, %edx
    000002ac: 	andl	$0x1f, %edx
    000002af: 	testb	%cl, %cl
    000002b1: 	jns	.Ltmp1342 # Offset: 689
    000002b3: 	testl	%edx, %edx
    000002b5: 	leal	-0x20(%rdx), %ecx
    000002b8: 	setne	%r8b
    000002bc: 	testb	%r8b, %r8b
    000002bf: 	cmovnel	%ecx, %edx
.Ltmp1342:
    000002c2: 	shll	$0x6, %edx
    000002c5: 	cmpb	%dl, %al
    000002c7: 	je	.Ltmp1343 # Offset: 711
    000002c9: 	movl	current_test(%rip), %edx
    000002cf: 	movq	%rbp, %rsi
    000002d2: 	movl	$0x1, %edi
    000002d7: 	xorl	%eax, %eax
    000002d9: 	addl	$0x1, %r14d
    000002dd: 	callq	__printf_chk@PLT # Offset: 733
    000002e2: 	movl	iterations(%rip), %esi
    000002e8: 	cmpl	%esi, %r14d
    000002eb: 	jge	.Ltmp1340 # Offset: 747
    000002ed: 	movq	init_value(%rip), %rdi
    000002f4: 	movdqa	DATAat0x57d50(%rip), %xmm5
    000002fc: 	movdqa	DATAat0x57d40(%rip), %xmm11
    00000305: 	movdqa	DATAat0x57be0(%rip), %xmm6
    0000030d: 	jmp	.Ltmp1344 # Offset: 781
    00000312: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1343:
    00000318: 	addl	$0x1, %r14d
    0000031c: 	cmpl	%esi, %r14d
    0000031f: 	jl	.Ltmp1344 # Offset: 799
.Ltmp1340:
    00000325: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000032c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000333: 	subq	$0x20, %rax
    00000337: 	cmpq	%rax, %rbx
    0000033a: 	je	.Ltmp1345 # Offset: 826
    00000340: 	leaq	0x10(%rbx), %rdi
    00000344: 	movq	%rdi, (%rbx)
    00000347: 	movq	(%r12), %rbp
    0000034b: 	movq	0x8(%r12), %r12
    00000350: 	movq	%rbp, %rax
    00000353: 	addq	%r12, %rax
    00000356: 	je	.Ltmp1346 # Offset: 854
    00000358: 	testq	%rbp, %rbp
    0000035b: 	je	.Ltmp1347 # Offset: 859
.Ltmp1346:
    00000361: 	movq	%r12, (%rsp)
    00000365: 	cmpq	$0xf, %r12
    00000369: 	ja	.Ltmp1348 # Offset: 873
    0000036f: 	cmpq	$0x1, %r12
    00000373: 	jne	.Ltmp1349 # Offset: 883
    00000379: 	movzbl	(%rbp), %eax
    0000037d: 	movb	%al, 0x10(%rbx)
.Ltmp1352:
    00000380: 	movq	%r12, 0x8(%rbx)
    00000384: 	movb	$0x0, (%rdi,%r12)
    00000389: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000390: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000397: 	addq	$0x20, %rax
    0000039b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003a2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000003a9: 	je	.Ltmp1350 # Offset: 937
.Ltmp1353:
    000003af: 	movq	-0x20(%rax), %rbp
    000003b3: 	callq	clock@PLT # Offset: 947
    000003b8: 	movq	%rax, end_time(%rip)
    000003bf: 	movq	0x8(%rsp), %rdx
    000003c4: 	subq	%fs:0x28, %rdx
    000003cd: 	jne	.Ltmp1351 # Offset: 973
    000003d3: 	subq	start_time(%rip), %rax
    000003da: 	pxor	%xmm0, %xmm0
    000003de: 	movq	%rbp, %rdi
    000003e1: 	cvtsi2sd	%rax, %xmm0
    000003e6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003ee: 	addq	$0x10, %rsp
    000003f2: 	popq	%rbx
    000003f3: 	popq	%rbp
    000003f4: 	popq	%r12
    000003f6: 	popq	%r13
    000003f8: 	popq	%r14
    000003fa: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1018
.Ltmp1348:
    000003ff: 	movq	%rbx, %rdi
    00000402: 	movq	%rsp, %rsi
    00000405: 	xorl	%edx, %edx
    00000407: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1031
    0000040c: 	movq	%rax, (%rbx)
    0000040f: 	movq	%rax, %rdi
    00000412: 	movq	(%rsp), %rax
    00000416: 	movq	%rax, 0x10(%rbx)
.Ltmp1354:
    0000041a: 	movq	%r12, %rdx
    0000041d: 	movq	%rbp, %rsi
    00000420: 	callq	memcpy@PLT # Offset: 1056
    00000425: 	movq	(%rsp), %r12
    00000429: 	movq	(%rbx), %rdi
    0000042c: 	jmp	.Ltmp1352 # Offset: 1068
.Ltmp1345:
    00000431: 	movq	%r12, %rsi
    00000434: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000043b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1083
    00000440: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000447: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000044e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000455: 	jne	.Ltmp1353 # Offset: 1109
.Ltmp1350:
    0000045b: 	movq	-0x8(%rdx), %rax
    0000045f: 	addq	$0x200, %rax
    00000465: 	jmp	.Ltmp1353 # Offset: 1125
.Ltmp1349:
    0000046a: 	testq	%r12, %r12
    0000046d: 	je	.Ltmp1352 # Offset: 1133
    00000473: 	jmp	.Ltmp1354 # Offset: 1139
.Ltmp1351:
    00000475: 	callq	__stack_chk_fail@PLT # Offset: 1141
.Ltmp1347:
    0000047a: 	leaq	DATAat0x57008(%rip), %rdi
    00000481: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1153
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIa14and_remainder2IaLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIa13and_remainderIaLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIa13and_remainderIaLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIa13and_remainderIaLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 121
  State       : disassembled
  Address     : 0x10310
  Size        : 0x2ae
  MaxSize     : 0x2b0
  Offset      : 0x10310
  Section     : .text
  Orc Section : .local.text._Z13test_constantIa13and_remainderIaLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0120:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	%rdi, %rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %esi
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%esi, %esi
    00000036: 	jle	.Ltmp1355 # Offset: 54
    0000003c: 	movdqa	DATAat0x57d40(%rip), %xmm6
    00000044: 	movdqa	DATAat0x57d60(%rip), %xmm5
    0000004c: 	xorl	%r14d, %r14d
    0000004f: 	leaq	0x1f40(%rbx), %r13
    00000056: 	movsd	init_value(%rip), %xmm7
    0000005e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp1359:
    00000068: 	pxor	%xmm3, %xmm3
    0000006c: 	movq	%rbx, %rax
    0000006f: 	movdqa	%xmm3, %xmm4
    00000073: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1356:
    00000078: 	movdqu	(%rax), %xmm2
    0000007c: 	movdqu	(%rax), %xmm8
    00000081: 	movdqa	%xmm4, %xmm1
    00000085: 	addq	$0x10, %rax
    00000089: 	pand	%xmm6, %xmm2
    0000008d: 	pcmpgtb	%xmm8, %xmm1
    00000092: 	movdqa	%xmm2, %xmm0
    00000096: 	pcmpeqb	%xmm4, %xmm0
    0000009a: 	pcmpeqb	%xmm4, %xmm0
    0000009e: 	pand	%xmm1, %xmm0
    000000a2: 	movdqa	%xmm2, %xmm1
    000000a6: 	paddb	%xmm5, %xmm1
    000000aa: 	pand	%xmm0, %xmm1
    000000ae: 	pandn	%xmm2, %xmm0
    000000b2: 	por	%xmm1, %xmm0
    000000b6: 	paddb	%xmm0, %xmm3
    000000ba: 	cmpq	%rax, %r13
    000000bd: 	jne	.Ltmp1356 # Offset: 189
    000000bf: 	cvttsd2si	%xmm7, %ecx
    000000c3: 	movdqa	%xmm3, %xmm0
    000000c7: 	psrldq	$0x8, %xmm0
    000000cc: 	paddb	%xmm0, %xmm3
    000000d0: 	psadbw	%xmm4, %xmm3
    000000d4: 	movl	%ecx, %edx
    000000d6: 	movd	%xmm3, %eax
    000000da: 	andl	$0x1f, %edx
    000000dd: 	testb	%cl, %cl
    000000df: 	jns	.Ltmp1357 # Offset: 223
    000000e1: 	testb	%dl, %dl
    000000e3: 	leal	-0x20(%rdx), %ecx
    000000e6: 	setne	%dil
    000000ea: 	testb	%dil, %dil
    000000ed: 	cmovnel	%ecx, %edx
.Ltmp1357:
    000000f0: 	shll	$0x6, %edx
    000000f3: 	cmpb	%al, %dl
    000000f5: 	je	.Ltmp1358 # Offset: 245
    000000f7: 	movl	current_test(%rip), %edx
    000000fd: 	movq	%rbp, %rsi
    00000100: 	movl	$0x1, %edi
    00000105: 	xorl	%eax, %eax
    00000107: 	addl	$0x1, %r14d
    0000010b: 	callq	__printf_chk@PLT # Offset: 267
    00000110: 	movl	iterations(%rip), %esi
    00000116: 	cmpl	%esi, %r14d
    00000119: 	jge	.Ltmp1355 # Offset: 281
    0000011b: 	movsd	init_value(%rip), %xmm7
    00000123: 	movdqa	DATAat0x57d60(%rip), %xmm5
    0000012b: 	movdqa	DATAat0x57d40(%rip), %xmm6
    00000133: 	jmp	.Ltmp1359 # Offset: 307
    00000138: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1358:
    00000140: 	addl	$0x1, %r14d
    00000144: 	cmpl	%esi, %r14d
    00000147: 	jl	.Ltmp1359 # Offset: 327
.Ltmp1355:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp1360 # Offset: 354
    00000168: 	leaq	0x10(%rbx), %rdi
    0000016c: 	movq	%rdi, (%rbx)
    0000016f: 	movq	(%r12), %rbp
    00000173: 	movq	0x8(%r12), %r12
    00000178: 	movq	%rbp, %rax
    0000017b: 	addq	%r12, %rax
    0000017e: 	je	.Ltmp1361 # Offset: 382
    00000180: 	testq	%rbp, %rbp
    00000183: 	je	.Ltmp1362 # Offset: 387
.Ltmp1361:
    00000189: 	movq	%r12, (%rsp)
    0000018d: 	cmpq	$0xf, %r12
    00000191: 	ja	.Ltmp1363 # Offset: 401
    00000197: 	cmpq	$0x1, %r12
    0000019b: 	jne	.Ltmp1364 # Offset: 411
    000001a1: 	movzbl	(%rbp), %eax
    000001a5: 	movb	%al, 0x10(%rbx)
.Ltmp1367:
    000001a8: 	movq	%r12, 0x8(%rbx)
    000001ac: 	movb	$0x0, (%rdi,%r12)
    000001b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001b8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001bf: 	addq	$0x20, %rax
    000001c3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ca: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d1: 	je	.Ltmp1365 # Offset: 465
.Ltmp1368:
    000001d7: 	movq	-0x20(%rax), %rbp
    000001db: 	callq	clock@PLT # Offset: 475
    000001e0: 	movq	%rax, end_time(%rip)
    000001e7: 	movq	0x8(%rsp), %rdx
    000001ec: 	subq	%fs:0x28, %rdx
    000001f5: 	jne	.Ltmp1366 # Offset: 501
    000001fb: 	subq	start_time(%rip), %rax
    00000202: 	pxor	%xmm0, %xmm0
    00000206: 	movq	%rbp, %rdi
    00000209: 	cvtsi2sd	%rax, %xmm0
    0000020e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000216: 	addq	$0x10, %rsp
    0000021a: 	popq	%rbx
    0000021b: 	popq	%rbp
    0000021c: 	popq	%r12
    0000021e: 	popq	%r13
    00000220: 	popq	%r14
    00000222: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 546
.Ltmp1363:
    00000227: 	movq	%rbx, %rdi
    0000022a: 	movq	%rsp, %rsi
    0000022d: 	xorl	%edx, %edx
    0000022f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 559
    00000234: 	movq	%rax, (%rbx)
    00000237: 	movq	%rax, %rdi
    0000023a: 	movq	(%rsp), %rax
    0000023e: 	movq	%rax, 0x10(%rbx)
.Ltmp1369:
    00000242: 	movq	%r12, %rdx
    00000245: 	movq	%rbp, %rsi
    00000248: 	callq	memcpy@PLT # Offset: 584
    0000024d: 	movq	(%rsp), %r12
    00000251: 	movq	(%rbx), %rdi
    00000254: 	jmp	.Ltmp1367 # Offset: 596
.Ltmp1360:
    00000259: 	movq	%r12, %rsi
    0000025c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000263: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 611
    00000268: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000026f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000276: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000027d: 	jne	.Ltmp1368 # Offset: 637
.Ltmp1365:
    00000283: 	movq	-0x8(%rdx), %rax
    00000287: 	addq	$0x200, %rax
    0000028d: 	jmp	.Ltmp1368 # Offset: 653
.Ltmp1364:
    00000292: 	testq	%r12, %r12
    00000295: 	je	.Ltmp1367 # Offset: 661
    0000029b: 	jmp	.Ltmp1369 # Offset: 667
.Ltmp1366:
    0000029d: 	callq	__stack_chk_fail@PLT # Offset: 669
.Ltmp1362:
    000002a2: 	leaq	DATAat0x57008(%rip), %rdi
    000002a9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 681
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIa13and_remainderIaLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIa14and_remainder2IaLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIa14and_remainder2IaLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIa14and_remainder2IaLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 122
  State       : disassembled
  Address     : 0x105c0
  Size        : 0x486
  MaxSize     : 0x490
  Offset      : 0x105c0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIa14and_remainder2IaLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0121:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	%rdi, %rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %esi
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%esi, %esi
    00000036: 	jle	.Ltmp1370 # Offset: 54
    0000003c: 	movdqa	DATAat0x57c10(%rip), %xmm11
    00000045: 	movdqa	DATAat0x57be0(%rip), %xmm6
    0000004d: 	xorl	%r14d, %r14d
    00000050: 	leaq	0x1f40(%rbx), %r13
    00000057: 	movdqa	DATAat0x57d70(%rip), %xmm5
    0000005f: 	movq	init_value(%rip), %rdi
    00000066: 	leaq	DATAat0x571d0(%rip), %rbp
    0000006d: 	nopl	(%rax) # Size: 3
.Ltmp1374:
    00000070: 	pxor	%xmm9, %xmm9
    00000075: 	pxor	%xmm4, %xmm4
    00000079: 	pxor	%xmm2, %xmm2
    0000007d: 	movq	%rbx, %rax
    00000080: 	movdqa	%xmm9, %xmm10
    00000085: 	nopl	(%rax) # Size: 3
.Ltmp1371:
    00000088: 	movdqu	(%rax), %xmm1
    0000008c: 	movdqa	%xmm10, %xmm0
    00000091: 	movdqu	(%rax), %xmm15
    00000096: 	addq	$0x10, %rax
    0000009a: 	pand	%xmm11, %xmm1
    0000009f: 	pcmpgtb	%xmm1, %xmm0
    000000a3: 	movdqa	%xmm1, %xmm3
    000000a7: 	punpcklbw	%xmm0, %xmm3
    000000ab: 	punpckhbw	%xmm0, %xmm1
    000000af: 	movdqa	%xmm4, %xmm0
    000000b3: 	pcmpgtw	%xmm3, %xmm0
    000000b7: 	movdqa	%xmm3, %xmm8
    000000bc: 	movdqa	%xmm1, %xmm7
    000000c0: 	punpcklwd	%xmm0, %xmm8
    000000c5: 	punpckhwd	%xmm0, %xmm3
    000000c9: 	movdqa	%xmm4, %xmm0
    000000cd: 	pcmpgtw	%xmm1, %xmm0
    000000d1: 	movdqa	%xmm3, %xmm12
    000000d6: 	pcmpeqd	%xmm2, %xmm12
    000000db: 	punpcklwd	%xmm0, %xmm7
    000000df: 	punpckhwd	%xmm0, %xmm1
    000000e3: 	movdqa	%xmm8, %xmm0
    000000e8: 	pcmpeqd	%xmm2, %xmm0
    000000ec: 	pcmpeqd	%xmm2, %xmm12
    000000f1: 	pcmpeqd	%xmm2, %xmm0
    000000f5: 	movdqa	%xmm0, %xmm13
    000000fa: 	punpcklwd	%xmm12, %xmm0
    000000ff: 	punpckhwd	%xmm12, %xmm13
    00000104: 	movdqa	%xmm0, %xmm12
    00000109: 	punpckhwd	%xmm13, %xmm12
    0000010e: 	punpcklwd	%xmm13, %xmm0
    00000113: 	movdqa	%xmm1, %xmm13
    00000118: 	punpcklwd	%xmm12, %xmm0
    0000011d: 	pcmpeqd	%xmm2, %xmm13
    00000122: 	movdqa	%xmm7, %xmm12
    00000127: 	pcmpeqd	%xmm2, %xmm12
    0000012c: 	pand	%xmm6, %xmm0
    00000130: 	pcmpeqd	%xmm2, %xmm13
    00000135: 	pcmpeqd	%xmm2, %xmm12
    0000013a: 	movdqa	%xmm12, %xmm14
    0000013f: 	punpcklwd	%xmm13, %xmm12
    00000144: 	punpckhwd	%xmm13, %xmm14
    00000149: 	movdqa	%xmm12, %xmm13
    0000014e: 	punpckhwd	%xmm14, %xmm13
    00000153: 	punpcklwd	%xmm14, %xmm12
    00000158: 	punpcklwd	%xmm13, %xmm12
    0000015d: 	movdqa	%xmm10, %xmm13
    00000162: 	pand	%xmm6, %xmm12
    00000167: 	packuswb	%xmm12, %xmm0
    0000016c: 	movdqa	%xmm10, %xmm12
    00000171: 	pcmpgtb	%xmm15, %xmm12
    00000176: 	movdqa	%xmm5, %xmm15
    0000017b: 	paddd	%xmm8, %xmm15
    00000180: 	pand	%xmm12, %xmm0
    00000185: 	pcmpgtb	%xmm0, %xmm13
    0000018a: 	movdqa	%xmm0, %xmm12
    0000018f: 	punpcklbw	%xmm13, %xmm12
    00000194: 	punpckhbw	%xmm13, %xmm0
    00000199: 	movdqa	%xmm4, %xmm13
    0000019e: 	pcmpgtw	%xmm12, %xmm13
    000001a3: 	movdqa	%xmm12, %xmm14
    000001a8: 	punpcklwd	%xmm13, %xmm14
    000001ad: 	punpckhwd	%xmm13, %xmm12
    000001b2: 	movdqa	%xmm5, %xmm13
    000001b7: 	paddd	%xmm3, %xmm13
    000001bc: 	pand	%xmm14, %xmm15
    000001c1: 	pandn	%xmm8, %xmm14
    000001c6: 	pand	%xmm12, %xmm13
    000001cb: 	pandn	%xmm3, %xmm12
    000001d0: 	movdqa	%xmm14, %xmm8
    000001d5: 	por	%xmm13, %xmm12
    000001da: 	movdqa	%xmm4, %xmm13
    000001df: 	movdqa	%xmm0, %xmm3
    000001e3: 	pcmpgtw	%xmm0, %xmm13
    000001e8: 	movdqa	%xmm5, %xmm14
    000001ed: 	por	%xmm15, %xmm8
    000001f2: 	paddd	%xmm7, %xmm14
    000001f7: 	punpcklwd	%xmm13, %xmm3
    000001fc: 	punpckhwd	%xmm13, %xmm0
    00000201: 	pand	%xmm3, %xmm14
    00000206: 	pandn	%xmm7, %xmm3
    0000020a: 	movdqa	%xmm5, %xmm7
    0000020e: 	paddd	%xmm1, %xmm7
    00000212: 	por	%xmm14, %xmm3
    00000217: 	pand	%xmm0, %xmm7
    0000021b: 	pandn	%xmm1, %xmm0
    0000021f: 	movdqa	%xmm8, %xmm1
    00000224: 	por	%xmm7, %xmm0
    00000228: 	movdqa	%xmm8, %xmm7
    0000022d: 	punpckhwd	%xmm12, %xmm1
    00000232: 	punpcklwd	%xmm12, %xmm7
    00000237: 	movdqa	%xmm7, %xmm8
    0000023c: 	punpcklwd	%xmm1, %xmm7
    00000240: 	punpckhwd	%xmm1, %xmm8
    00000245: 	movdqa	%xmm3, %xmm1
    00000249: 	punpcklwd	%xmm8, %xmm7
    0000024e: 	punpcklwd	%xmm0, %xmm1
    00000252: 	movdqa	%xmm3, %xmm8
    00000257: 	punpckhwd	%xmm0, %xmm8
    0000025c: 	movdqa	%xmm1, %xmm0
    00000260: 	pand	%xmm6, %xmm7
    00000264: 	punpckhwd	%xmm8, %xmm0
    00000269: 	punpcklwd	%xmm8, %xmm1
    0000026e: 	punpcklwd	%xmm0, %xmm1
    00000272: 	pand	%xmm6, %xmm1
    00000276: 	packuswb	%xmm1, %xmm7
    0000027a: 	paddb	%xmm7, %xmm9
    0000027f: 	cmpq	%rax, %r13
    00000282: 	jne	.Ltmp1371 # Offset: 642
    00000288: 	movq	%rdi, %xmm4
    0000028d: 	movdqa	%xmm9, %xmm0
    00000292: 	cvttsd2si	%xmm4, %ecx
    00000296: 	psrldq	$0x8, %xmm0
    0000029b: 	paddb	%xmm0, %xmm9
    000002a0: 	psadbw	%xmm10, %xmm9
    000002a5: 	movd	%xmm9, %eax
    000002aa: 	movl	%ecx, %edx
    000002ac: 	andl	$0x3, %edx
    000002af: 	testb	%cl, %cl
    000002b1: 	jns	.Ltmp1372 # Offset: 689
    000002b3: 	testl	%edx, %edx
    000002b5: 	leal	-0x4(%rdx), %ecx
    000002b8: 	setne	%r8b
    000002bc: 	testb	%r8b, %r8b
    000002bf: 	cmovnel	%ecx, %edx
.Ltmp1372:
    000002c2: 	shll	$0x6, %edx
    000002c5: 	cmpb	%dl, %al
    000002c7: 	je	.Ltmp1373 # Offset: 711
    000002c9: 	movl	current_test(%rip), %edx
    000002cf: 	movq	%rbp, %rsi
    000002d2: 	movl	$0x1, %edi
    000002d7: 	xorl	%eax, %eax
    000002d9: 	addl	$0x1, %r14d
    000002dd: 	callq	__printf_chk@PLT # Offset: 733
    000002e2: 	movl	iterations(%rip), %esi
    000002e8: 	cmpl	%esi, %r14d
    000002eb: 	jge	.Ltmp1370 # Offset: 747
    000002ed: 	movq	init_value(%rip), %rdi
    000002f4: 	movdqa	DATAat0x57be0(%rip), %xmm6
    000002fc: 	movdqa	DATAat0x57c10(%rip), %xmm11
    00000305: 	movdqa	DATAat0x57d70(%rip), %xmm5
    0000030d: 	jmp	.Ltmp1374 # Offset: 781
    00000312: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1373:
    00000318: 	addl	$0x1, %r14d
    0000031c: 	cmpl	%esi, %r14d
    0000031f: 	jl	.Ltmp1374 # Offset: 799
.Ltmp1370:
    00000325: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000032c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000333: 	subq	$0x20, %rax
    00000337: 	cmpq	%rax, %rbx
    0000033a: 	je	.Ltmp1375 # Offset: 826
    00000340: 	leaq	0x10(%rbx), %rdi
    00000344: 	movq	%rdi, (%rbx)
    00000347: 	movq	(%r12), %rbp
    0000034b: 	movq	0x8(%r12), %r12
    00000350: 	movq	%rbp, %rax
    00000353: 	addq	%r12, %rax
    00000356: 	je	.Ltmp1376 # Offset: 854
    00000358: 	testq	%rbp, %rbp
    0000035b: 	je	.Ltmp1377 # Offset: 859
.Ltmp1376:
    00000361: 	movq	%r12, (%rsp)
    00000365: 	cmpq	$0xf, %r12
    00000369: 	ja	.Ltmp1378 # Offset: 873
    0000036f: 	cmpq	$0x1, %r12
    00000373: 	jne	.Ltmp1379 # Offset: 883
    00000379: 	movzbl	(%rbp), %eax
    0000037d: 	movb	%al, 0x10(%rbx)
.Ltmp1382:
    00000380: 	movq	%r12, 0x8(%rbx)
    00000384: 	movb	$0x0, (%rdi,%r12)
    00000389: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000390: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000397: 	addq	$0x20, %rax
    0000039b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003a2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000003a9: 	je	.Ltmp1380 # Offset: 937
.Ltmp1383:
    000003af: 	movq	-0x20(%rax), %rbp
    000003b3: 	callq	clock@PLT # Offset: 947
    000003b8: 	movq	%rax, end_time(%rip)
    000003bf: 	movq	0x8(%rsp), %rdx
    000003c4: 	subq	%fs:0x28, %rdx
    000003cd: 	jne	.Ltmp1381 # Offset: 973
    000003d3: 	subq	start_time(%rip), %rax
    000003da: 	pxor	%xmm0, %xmm0
    000003de: 	movq	%rbp, %rdi
    000003e1: 	cvtsi2sd	%rax, %xmm0
    000003e6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003ee: 	addq	$0x10, %rsp
    000003f2: 	popq	%rbx
    000003f3: 	popq	%rbp
    000003f4: 	popq	%r12
    000003f6: 	popq	%r13
    000003f8: 	popq	%r14
    000003fa: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1018
.Ltmp1378:
    000003ff: 	movq	%rbx, %rdi
    00000402: 	movq	%rsp, %rsi
    00000405: 	xorl	%edx, %edx
    00000407: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1031
    0000040c: 	movq	%rax, (%rbx)
    0000040f: 	movq	%rax, %rdi
    00000412: 	movq	(%rsp), %rax
    00000416: 	movq	%rax, 0x10(%rbx)
.Ltmp1384:
    0000041a: 	movq	%r12, %rdx
    0000041d: 	movq	%rbp, %rsi
    00000420: 	callq	memcpy@PLT # Offset: 1056
    00000425: 	movq	(%rsp), %r12
    00000429: 	movq	(%rbx), %rdi
    0000042c: 	jmp	.Ltmp1382 # Offset: 1068
.Ltmp1375:
    00000431: 	movq	%r12, %rsi
    00000434: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000043b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1083
    00000440: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000447: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000044e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000455: 	jne	.Ltmp1383 # Offset: 1109
.Ltmp1380:
    0000045b: 	movq	-0x8(%rdx), %rax
    0000045f: 	addq	$0x200, %rax
    00000465: 	jmp	.Ltmp1383 # Offset: 1125
.Ltmp1379:
    0000046a: 	testq	%r12, %r12
    0000046d: 	je	.Ltmp1382 # Offset: 1133
    00000473: 	jmp	.Ltmp1384 # Offset: 1139
.Ltmp1381:
    00000475: 	callq	__stack_chk_fail@PLT # Offset: 1141
.Ltmp1377:
    0000047a: 	leaq	DATAat0x57008(%rip), %rdi
    00000481: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1153
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIa14and_remainder2IaLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIa13and_remainderIaLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIa13and_remainderIaLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIa13and_remainderIaLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 123
  State       : disassembled
  Address     : 0x10a50
  Size        : 0x2ae
  MaxSize     : 0x2b0
  Offset      : 0x10a50
  Section     : .text
  Orc Section : .local.text._Z13test_constantIa13and_remainderIaLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0122:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	%rdi, %rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %esi
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%esi, %esi
    00000036: 	jle	.Ltmp1385 # Offset: 54
    0000003c: 	movdqa	DATAat0x57c10(%rip), %xmm6
    00000044: 	movdqa	DATAat0x57d80(%rip), %xmm5
    0000004c: 	xorl	%r14d, %r14d
    0000004f: 	leaq	0x1f40(%rbx), %r13
    00000056: 	movsd	init_value(%rip), %xmm7
    0000005e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp1389:
    00000068: 	pxor	%xmm3, %xmm3
    0000006c: 	movq	%rbx, %rax
    0000006f: 	movdqa	%xmm3, %xmm4
    00000073: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1386:
    00000078: 	movdqu	(%rax), %xmm2
    0000007c: 	movdqu	(%rax), %xmm8
    00000081: 	movdqa	%xmm4, %xmm1
    00000085: 	addq	$0x10, %rax
    00000089: 	pand	%xmm6, %xmm2
    0000008d: 	pcmpgtb	%xmm8, %xmm1
    00000092: 	movdqa	%xmm2, %xmm0
    00000096: 	pcmpeqb	%xmm4, %xmm0
    0000009a: 	pcmpeqb	%xmm4, %xmm0
    0000009e: 	pand	%xmm1, %xmm0
    000000a2: 	movdqa	%xmm2, %xmm1
    000000a6: 	paddb	%xmm5, %xmm1
    000000aa: 	pand	%xmm0, %xmm1
    000000ae: 	pandn	%xmm2, %xmm0
    000000b2: 	por	%xmm1, %xmm0
    000000b6: 	paddb	%xmm0, %xmm3
    000000ba: 	cmpq	%rax, %r13
    000000bd: 	jne	.Ltmp1386 # Offset: 189
    000000bf: 	cvttsd2si	%xmm7, %ecx
    000000c3: 	movdqa	%xmm3, %xmm0
    000000c7: 	psrldq	$0x8, %xmm0
    000000cc: 	paddb	%xmm0, %xmm3
    000000d0: 	psadbw	%xmm4, %xmm3
    000000d4: 	movl	%ecx, %edx
    000000d6: 	movd	%xmm3, %eax
    000000da: 	andl	$0x3, %edx
    000000dd: 	testb	%cl, %cl
    000000df: 	jns	.Ltmp1387 # Offset: 223
    000000e1: 	testb	%dl, %dl
    000000e3: 	leal	-0x4(%rdx), %ecx
    000000e6: 	setne	%dil
    000000ea: 	testb	%dil, %dil
    000000ed: 	cmovnel	%ecx, %edx
.Ltmp1387:
    000000f0: 	shll	$0x6, %edx
    000000f3: 	cmpb	%al, %dl
    000000f5: 	je	.Ltmp1388 # Offset: 245
    000000f7: 	movl	current_test(%rip), %edx
    000000fd: 	movq	%rbp, %rsi
    00000100: 	movl	$0x1, %edi
    00000105: 	xorl	%eax, %eax
    00000107: 	addl	$0x1, %r14d
    0000010b: 	callq	__printf_chk@PLT # Offset: 267
    00000110: 	movl	iterations(%rip), %esi
    00000116: 	cmpl	%esi, %r14d
    00000119: 	jge	.Ltmp1385 # Offset: 281
    0000011b: 	movsd	init_value(%rip), %xmm7
    00000123: 	movdqa	DATAat0x57c10(%rip), %xmm6
    0000012b: 	movdqa	DATAat0x57d80(%rip), %xmm5
    00000133: 	jmp	.Ltmp1389 # Offset: 307
    00000138: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1388:
    00000140: 	addl	$0x1, %r14d
    00000144: 	cmpl	%esi, %r14d
    00000147: 	jl	.Ltmp1389 # Offset: 327
.Ltmp1385:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp1390 # Offset: 354
    00000168: 	leaq	0x10(%rbx), %rdi
    0000016c: 	movq	%rdi, (%rbx)
    0000016f: 	movq	(%r12), %rbp
    00000173: 	movq	0x8(%r12), %r12
    00000178: 	movq	%rbp, %rax
    0000017b: 	addq	%r12, %rax
    0000017e: 	je	.Ltmp1391 # Offset: 382
    00000180: 	testq	%rbp, %rbp
    00000183: 	je	.Ltmp1392 # Offset: 387
.Ltmp1391:
    00000189: 	movq	%r12, (%rsp)
    0000018d: 	cmpq	$0xf, %r12
    00000191: 	ja	.Ltmp1393 # Offset: 401
    00000197: 	cmpq	$0x1, %r12
    0000019b: 	jne	.Ltmp1394 # Offset: 411
    000001a1: 	movzbl	(%rbp), %eax
    000001a5: 	movb	%al, 0x10(%rbx)
.Ltmp1397:
    000001a8: 	movq	%r12, 0x8(%rbx)
    000001ac: 	movb	$0x0, (%rdi,%r12)
    000001b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001b8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001bf: 	addq	$0x20, %rax
    000001c3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ca: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d1: 	je	.Ltmp1395 # Offset: 465
.Ltmp1398:
    000001d7: 	movq	-0x20(%rax), %rbp
    000001db: 	callq	clock@PLT # Offset: 475
    000001e0: 	movq	%rax, end_time(%rip)
    000001e7: 	movq	0x8(%rsp), %rdx
    000001ec: 	subq	%fs:0x28, %rdx
    000001f5: 	jne	.Ltmp1396 # Offset: 501
    000001fb: 	subq	start_time(%rip), %rax
    00000202: 	pxor	%xmm0, %xmm0
    00000206: 	movq	%rbp, %rdi
    00000209: 	cvtsi2sd	%rax, %xmm0
    0000020e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000216: 	addq	$0x10, %rsp
    0000021a: 	popq	%rbx
    0000021b: 	popq	%rbp
    0000021c: 	popq	%r12
    0000021e: 	popq	%r13
    00000220: 	popq	%r14
    00000222: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 546
.Ltmp1393:
    00000227: 	movq	%rbx, %rdi
    0000022a: 	movq	%rsp, %rsi
    0000022d: 	xorl	%edx, %edx
    0000022f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 559
    00000234: 	movq	%rax, (%rbx)
    00000237: 	movq	%rax, %rdi
    0000023a: 	movq	(%rsp), %rax
    0000023e: 	movq	%rax, 0x10(%rbx)
.Ltmp1399:
    00000242: 	movq	%r12, %rdx
    00000245: 	movq	%rbp, %rsi
    00000248: 	callq	memcpy@PLT # Offset: 584
    0000024d: 	movq	(%rsp), %r12
    00000251: 	movq	(%rbx), %rdi
    00000254: 	jmp	.Ltmp1397 # Offset: 596
.Ltmp1390:
    00000259: 	movq	%r12, %rsi
    0000025c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000263: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 611
    00000268: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000026f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000276: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000027d: 	jne	.Ltmp1398 # Offset: 637
.Ltmp1395:
    00000283: 	movq	-0x8(%rdx), %rax
    00000287: 	addq	$0x200, %rax
    0000028d: 	jmp	.Ltmp1398 # Offset: 653
.Ltmp1394:
    00000292: 	testq	%r12, %r12
    00000295: 	je	.Ltmp1397 # Offset: 661
    0000029b: 	jmp	.Ltmp1399 # Offset: 667
.Ltmp1396:
    0000029d: 	callq	__stack_chk_fail@PLT # Offset: 669
.Ltmp1392:
    000002a2: 	leaq	DATAat0x57008(%rip), %rdi
    000002a9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 681
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIa13and_remainderIaLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIa13and_remainderIaLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIa13and_remainderIaLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIa13and_remainderIaLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 124
  State       : disassembled
  Address     : 0x10d00
  Size        : 0x2ae
  MaxSize     : 0x2b0
  Offset      : 0x10d00
  Section     : .text
  Orc Section : .local.text._Z13test_constantIa13and_remainderIaLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0123:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	%rdi, %rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %esi
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%esi, %esi
    00000036: 	jle	.Ltmp1400 # Offset: 54
    0000003c: 	movdqa	DATAat0x57bf0(%rip), %xmm6
    00000044: 	movdqa	DATAat0x57d90(%rip), %xmm5
    0000004c: 	xorl	%r14d, %r14d
    0000004f: 	leaq	0x1f40(%rbx), %r13
    00000056: 	movsd	init_value(%rip), %xmm7
    0000005e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp1404:
    00000068: 	pxor	%xmm3, %xmm3
    0000006c: 	movq	%rbx, %rax
    0000006f: 	movdqa	%xmm3, %xmm4
    00000073: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1401:
    00000078: 	movdqu	(%rax), %xmm2
    0000007c: 	movdqu	(%rax), %xmm8
    00000081: 	movdqa	%xmm4, %xmm1
    00000085: 	addq	$0x10, %rax
    00000089: 	pand	%xmm6, %xmm2
    0000008d: 	pcmpgtb	%xmm8, %xmm1
    00000092: 	movdqa	%xmm2, %xmm0
    00000096: 	pcmpeqb	%xmm4, %xmm0
    0000009a: 	pcmpeqb	%xmm4, %xmm0
    0000009e: 	pand	%xmm1, %xmm0
    000000a2: 	movdqa	%xmm2, %xmm1
    000000a6: 	paddb	%xmm5, %xmm1
    000000aa: 	pand	%xmm0, %xmm1
    000000ae: 	pandn	%xmm2, %xmm0
    000000b2: 	por	%xmm1, %xmm0
    000000b6: 	paddb	%xmm0, %xmm3
    000000ba: 	cmpq	%rax, %r13
    000000bd: 	jne	.Ltmp1401 # Offset: 189
    000000bf: 	cvttsd2si	%xmm7, %ecx
    000000c3: 	movdqa	%xmm3, %xmm0
    000000c7: 	psrldq	$0x8, %xmm0
    000000cc: 	paddb	%xmm0, %xmm3
    000000d0: 	psadbw	%xmm4, %xmm3
    000000d4: 	movl	%ecx, %edx
    000000d6: 	movd	%xmm3, %eax
    000000da: 	andl	$0x7, %edx
    000000dd: 	testb	%cl, %cl
    000000df: 	jns	.Ltmp1402 # Offset: 223
    000000e1: 	testb	%dl, %dl
    000000e3: 	leal	-0x8(%rdx), %ecx
    000000e6: 	setne	%dil
    000000ea: 	testb	%dil, %dil
    000000ed: 	cmovnel	%ecx, %edx
.Ltmp1402:
    000000f0: 	shll	$0x6, %edx
    000000f3: 	cmpb	%al, %dl
    000000f5: 	je	.Ltmp1403 # Offset: 245
    000000f7: 	movl	current_test(%rip), %edx
    000000fd: 	movq	%rbp, %rsi
    00000100: 	movl	$0x1, %edi
    00000105: 	xorl	%eax, %eax
    00000107: 	addl	$0x1, %r14d
    0000010b: 	callq	__printf_chk@PLT # Offset: 267
    00000110: 	movl	iterations(%rip), %esi
    00000116: 	cmpl	%esi, %r14d
    00000119: 	jge	.Ltmp1400 # Offset: 281
    0000011b: 	movsd	init_value(%rip), %xmm7
    00000123: 	movdqa	DATAat0x57bf0(%rip), %xmm6
    0000012b: 	movdqa	DATAat0x57d90(%rip), %xmm5
    00000133: 	jmp	.Ltmp1404 # Offset: 307
    00000138: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1403:
    00000140: 	addl	$0x1, %r14d
    00000144: 	cmpl	%esi, %r14d
    00000147: 	jl	.Ltmp1404 # Offset: 327
.Ltmp1400:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp1405 # Offset: 354
    00000168: 	leaq	0x10(%rbx), %rdi
    0000016c: 	movq	%rdi, (%rbx)
    0000016f: 	movq	(%r12), %rbp
    00000173: 	movq	0x8(%r12), %r12
    00000178: 	movq	%rbp, %rax
    0000017b: 	addq	%r12, %rax
    0000017e: 	je	.Ltmp1406 # Offset: 382
    00000180: 	testq	%rbp, %rbp
    00000183: 	je	.Ltmp1407 # Offset: 387
.Ltmp1406:
    00000189: 	movq	%r12, (%rsp)
    0000018d: 	cmpq	$0xf, %r12
    00000191: 	ja	.Ltmp1408 # Offset: 401
    00000197: 	cmpq	$0x1, %r12
    0000019b: 	jne	.Ltmp1409 # Offset: 411
    000001a1: 	movzbl	(%rbp), %eax
    000001a5: 	movb	%al, 0x10(%rbx)
.Ltmp1412:
    000001a8: 	movq	%r12, 0x8(%rbx)
    000001ac: 	movb	$0x0, (%rdi,%r12)
    000001b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001b8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001bf: 	addq	$0x20, %rax
    000001c3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ca: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d1: 	je	.Ltmp1410 # Offset: 465
.Ltmp1413:
    000001d7: 	movq	-0x20(%rax), %rbp
    000001db: 	callq	clock@PLT # Offset: 475
    000001e0: 	movq	%rax, end_time(%rip)
    000001e7: 	movq	0x8(%rsp), %rdx
    000001ec: 	subq	%fs:0x28, %rdx
    000001f5: 	jne	.Ltmp1411 # Offset: 501
    000001fb: 	subq	start_time(%rip), %rax
    00000202: 	pxor	%xmm0, %xmm0
    00000206: 	movq	%rbp, %rdi
    00000209: 	cvtsi2sd	%rax, %xmm0
    0000020e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000216: 	addq	$0x10, %rsp
    0000021a: 	popq	%rbx
    0000021b: 	popq	%rbp
    0000021c: 	popq	%r12
    0000021e: 	popq	%r13
    00000220: 	popq	%r14
    00000222: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 546
.Ltmp1408:
    00000227: 	movq	%rbx, %rdi
    0000022a: 	movq	%rsp, %rsi
    0000022d: 	xorl	%edx, %edx
    0000022f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 559
    00000234: 	movq	%rax, (%rbx)
    00000237: 	movq	%rax, %rdi
    0000023a: 	movq	(%rsp), %rax
    0000023e: 	movq	%rax, 0x10(%rbx)
.Ltmp1414:
    00000242: 	movq	%r12, %rdx
    00000245: 	movq	%rbp, %rsi
    00000248: 	callq	memcpy@PLT # Offset: 584
    0000024d: 	movq	(%rsp), %r12
    00000251: 	movq	(%rbx), %rdi
    00000254: 	jmp	.Ltmp1412 # Offset: 596
.Ltmp1405:
    00000259: 	movq	%r12, %rsi
    0000025c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000263: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 611
    00000268: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000026f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000276: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000027d: 	jne	.Ltmp1413 # Offset: 637
.Ltmp1410:
    00000283: 	movq	-0x8(%rdx), %rax
    00000287: 	addq	$0x200, %rax
    0000028d: 	jmp	.Ltmp1413 # Offset: 653
.Ltmp1409:
    00000292: 	testq	%r12, %r12
    00000295: 	je	.Ltmp1412 # Offset: 661
    0000029b: 	jmp	.Ltmp1414 # Offset: 667
.Ltmp1411:
    0000029d: 	callq	__stack_chk_fail@PLT # Offset: 669
.Ltmp1407:
    000002a2: 	leaq	DATAat0x57008(%rip), %rdi
    000002a9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 681
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIa13and_remainderIaLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIa14and_remainder2IaLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIa14and_remainder2IaLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIa14and_remainder2IaLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 125
  State       : disassembled
  Address     : 0x10fb0
  Size        : 0x486
  MaxSize     : 0x490
  Offset      : 0x10fb0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIa14and_remainder2IaLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0124:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	%rdi, %rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %esi
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%esi, %esi
    00000036: 	jle	.Ltmp1415 # Offset: 54
    0000003c: 	movdqa	DATAat0x57bf0(%rip), %xmm11
    00000045: 	movdqa	DATAat0x57be0(%rip), %xmm6
    0000004d: 	xorl	%r14d, %r14d
    00000050: 	leaq	0x1f40(%rbx), %r13
    00000057: 	movdqa	DATAat0x57da0(%rip), %xmm5
    0000005f: 	movq	init_value(%rip), %rdi
    00000066: 	leaq	DATAat0x571d0(%rip), %rbp
    0000006d: 	nopl	(%rax) # Size: 3
.Ltmp1419:
    00000070: 	pxor	%xmm9, %xmm9
    00000075: 	pxor	%xmm4, %xmm4
    00000079: 	pxor	%xmm2, %xmm2
    0000007d: 	movq	%rbx, %rax
    00000080: 	movdqa	%xmm9, %xmm10
    00000085: 	nopl	(%rax) # Size: 3
.Ltmp1416:
    00000088: 	movdqu	(%rax), %xmm1
    0000008c: 	movdqa	%xmm10, %xmm0
    00000091: 	movdqu	(%rax), %xmm15
    00000096: 	addq	$0x10, %rax
    0000009a: 	pand	%xmm11, %xmm1
    0000009f: 	pcmpgtb	%xmm1, %xmm0
    000000a3: 	movdqa	%xmm1, %xmm3
    000000a7: 	punpcklbw	%xmm0, %xmm3
    000000ab: 	punpckhbw	%xmm0, %xmm1
    000000af: 	movdqa	%xmm4, %xmm0
    000000b3: 	pcmpgtw	%xmm3, %xmm0
    000000b7: 	movdqa	%xmm3, %xmm8
    000000bc: 	movdqa	%xmm1, %xmm7
    000000c0: 	punpcklwd	%xmm0, %xmm8
    000000c5: 	punpckhwd	%xmm0, %xmm3
    000000c9: 	movdqa	%xmm4, %xmm0
    000000cd: 	pcmpgtw	%xmm1, %xmm0
    000000d1: 	movdqa	%xmm3, %xmm12
    000000d6: 	pcmpeqd	%xmm2, %xmm12
    000000db: 	punpcklwd	%xmm0, %xmm7
    000000df: 	punpckhwd	%xmm0, %xmm1
    000000e3: 	movdqa	%xmm8, %xmm0
    000000e8: 	pcmpeqd	%xmm2, %xmm0
    000000ec: 	pcmpeqd	%xmm2, %xmm12
    000000f1: 	pcmpeqd	%xmm2, %xmm0
    000000f5: 	movdqa	%xmm0, %xmm13
    000000fa: 	punpcklwd	%xmm12, %xmm0
    000000ff: 	punpckhwd	%xmm12, %xmm13
    00000104: 	movdqa	%xmm0, %xmm12
    00000109: 	punpckhwd	%xmm13, %xmm12
    0000010e: 	punpcklwd	%xmm13, %xmm0
    00000113: 	movdqa	%xmm1, %xmm13
    00000118: 	punpcklwd	%xmm12, %xmm0
    0000011d: 	pcmpeqd	%xmm2, %xmm13
    00000122: 	movdqa	%xmm7, %xmm12
    00000127: 	pcmpeqd	%xmm2, %xmm12
    0000012c: 	pand	%xmm6, %xmm0
    00000130: 	pcmpeqd	%xmm2, %xmm13
    00000135: 	pcmpeqd	%xmm2, %xmm12
    0000013a: 	movdqa	%xmm12, %xmm14
    0000013f: 	punpcklwd	%xmm13, %xmm12
    00000144: 	punpckhwd	%xmm13, %xmm14
    00000149: 	movdqa	%xmm12, %xmm13
    0000014e: 	punpckhwd	%xmm14, %xmm13
    00000153: 	punpcklwd	%xmm14, %xmm12
    00000158: 	punpcklwd	%xmm13, %xmm12
    0000015d: 	movdqa	%xmm10, %xmm13
    00000162: 	pand	%xmm6, %xmm12
    00000167: 	packuswb	%xmm12, %xmm0
    0000016c: 	movdqa	%xmm10, %xmm12
    00000171: 	pcmpgtb	%xmm15, %xmm12
    00000176: 	movdqa	%xmm5, %xmm15
    0000017b: 	paddd	%xmm8, %xmm15
    00000180: 	pand	%xmm12, %xmm0
    00000185: 	pcmpgtb	%xmm0, %xmm13
    0000018a: 	movdqa	%xmm0, %xmm12
    0000018f: 	punpcklbw	%xmm13, %xmm12
    00000194: 	punpckhbw	%xmm13, %xmm0
    00000199: 	movdqa	%xmm4, %xmm13
    0000019e: 	pcmpgtw	%xmm12, %xmm13
    000001a3: 	movdqa	%xmm12, %xmm14
    000001a8: 	punpcklwd	%xmm13, %xmm14
    000001ad: 	punpckhwd	%xmm13, %xmm12
    000001b2: 	movdqa	%xmm5, %xmm13
    000001b7: 	paddd	%xmm3, %xmm13
    000001bc: 	pand	%xmm14, %xmm15
    000001c1: 	pandn	%xmm8, %xmm14
    000001c6: 	pand	%xmm12, %xmm13
    000001cb: 	pandn	%xmm3, %xmm12
    000001d0: 	movdqa	%xmm14, %xmm8
    000001d5: 	por	%xmm13, %xmm12
    000001da: 	movdqa	%xmm4, %xmm13
    000001df: 	movdqa	%xmm0, %xmm3
    000001e3: 	pcmpgtw	%xmm0, %xmm13
    000001e8: 	movdqa	%xmm5, %xmm14
    000001ed: 	por	%xmm15, %xmm8
    000001f2: 	paddd	%xmm7, %xmm14
    000001f7: 	punpcklwd	%xmm13, %xmm3
    000001fc: 	punpckhwd	%xmm13, %xmm0
    00000201: 	pand	%xmm3, %xmm14
    00000206: 	pandn	%xmm7, %xmm3
    0000020a: 	movdqa	%xmm5, %xmm7
    0000020e: 	paddd	%xmm1, %xmm7
    00000212: 	por	%xmm14, %xmm3
    00000217: 	pand	%xmm0, %xmm7
    0000021b: 	pandn	%xmm1, %xmm0
    0000021f: 	movdqa	%xmm8, %xmm1
    00000224: 	por	%xmm7, %xmm0
    00000228: 	movdqa	%xmm8, %xmm7
    0000022d: 	punpckhwd	%xmm12, %xmm1
    00000232: 	punpcklwd	%xmm12, %xmm7
    00000237: 	movdqa	%xmm7, %xmm8
    0000023c: 	punpcklwd	%xmm1, %xmm7
    00000240: 	punpckhwd	%xmm1, %xmm8
    00000245: 	movdqa	%xmm3, %xmm1
    00000249: 	punpcklwd	%xmm8, %xmm7
    0000024e: 	punpcklwd	%xmm0, %xmm1
    00000252: 	movdqa	%xmm3, %xmm8
    00000257: 	punpckhwd	%xmm0, %xmm8
    0000025c: 	movdqa	%xmm1, %xmm0
    00000260: 	pand	%xmm6, %xmm7
    00000264: 	punpckhwd	%xmm8, %xmm0
    00000269: 	punpcklwd	%xmm8, %xmm1
    0000026e: 	punpcklwd	%xmm0, %xmm1
    00000272: 	pand	%xmm6, %xmm1
    00000276: 	packuswb	%xmm1, %xmm7
    0000027a: 	paddb	%xmm7, %xmm9
    0000027f: 	cmpq	%rax, %r13
    00000282: 	jne	.Ltmp1416 # Offset: 642
    00000288: 	movq	%rdi, %xmm4
    0000028d: 	movdqa	%xmm9, %xmm0
    00000292: 	cvttsd2si	%xmm4, %ecx
    00000296: 	psrldq	$0x8, %xmm0
    0000029b: 	paddb	%xmm0, %xmm9
    000002a0: 	psadbw	%xmm10, %xmm9
    000002a5: 	movd	%xmm9, %eax
    000002aa: 	movl	%ecx, %edx
    000002ac: 	andl	$0x7, %edx
    000002af: 	testb	%cl, %cl
    000002b1: 	jns	.Ltmp1417 # Offset: 689
    000002b3: 	testl	%edx, %edx
    000002b5: 	leal	-0x8(%rdx), %ecx
    000002b8: 	setne	%r8b
    000002bc: 	testb	%r8b, %r8b
    000002bf: 	cmovnel	%ecx, %edx
.Ltmp1417:
    000002c2: 	shll	$0x6, %edx
    000002c5: 	cmpb	%dl, %al
    000002c7: 	je	.Ltmp1418 # Offset: 711
    000002c9: 	movl	current_test(%rip), %edx
    000002cf: 	movq	%rbp, %rsi
    000002d2: 	movl	$0x1, %edi
    000002d7: 	xorl	%eax, %eax
    000002d9: 	addl	$0x1, %r14d
    000002dd: 	callq	__printf_chk@PLT # Offset: 733
    000002e2: 	movl	iterations(%rip), %esi
    000002e8: 	cmpl	%esi, %r14d
    000002eb: 	jge	.Ltmp1415 # Offset: 747
    000002ed: 	movq	init_value(%rip), %rdi
    000002f4: 	movdqa	DATAat0x57be0(%rip), %xmm6
    000002fc: 	movdqa	DATAat0x57bf0(%rip), %xmm11
    00000305: 	movdqa	DATAat0x57da0(%rip), %xmm5
    0000030d: 	jmp	.Ltmp1419 # Offset: 781
    00000312: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1418:
    00000318: 	addl	$0x1, %r14d
    0000031c: 	cmpl	%esi, %r14d
    0000031f: 	jl	.Ltmp1419 # Offset: 799
.Ltmp1415:
    00000325: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000032c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000333: 	subq	$0x20, %rax
    00000337: 	cmpq	%rax, %rbx
    0000033a: 	je	.Ltmp1420 # Offset: 826
    00000340: 	leaq	0x10(%rbx), %rdi
    00000344: 	movq	%rdi, (%rbx)
    00000347: 	movq	(%r12), %rbp
    0000034b: 	movq	0x8(%r12), %r12
    00000350: 	movq	%rbp, %rax
    00000353: 	addq	%r12, %rax
    00000356: 	je	.Ltmp1421 # Offset: 854
    00000358: 	testq	%rbp, %rbp
    0000035b: 	je	.Ltmp1422 # Offset: 859
.Ltmp1421:
    00000361: 	movq	%r12, (%rsp)
    00000365: 	cmpq	$0xf, %r12
    00000369: 	ja	.Ltmp1423 # Offset: 873
    0000036f: 	cmpq	$0x1, %r12
    00000373: 	jne	.Ltmp1424 # Offset: 883
    00000379: 	movzbl	(%rbp), %eax
    0000037d: 	movb	%al, 0x10(%rbx)
.Ltmp1427:
    00000380: 	movq	%r12, 0x8(%rbx)
    00000384: 	movb	$0x0, (%rdi,%r12)
    00000389: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000390: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000397: 	addq	$0x20, %rax
    0000039b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003a2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000003a9: 	je	.Ltmp1425 # Offset: 937
.Ltmp1428:
    000003af: 	movq	-0x20(%rax), %rbp
    000003b3: 	callq	clock@PLT # Offset: 947
    000003b8: 	movq	%rax, end_time(%rip)
    000003bf: 	movq	0x8(%rsp), %rdx
    000003c4: 	subq	%fs:0x28, %rdx
    000003cd: 	jne	.Ltmp1426 # Offset: 973
    000003d3: 	subq	start_time(%rip), %rax
    000003da: 	pxor	%xmm0, %xmm0
    000003de: 	movq	%rbp, %rdi
    000003e1: 	cvtsi2sd	%rax, %xmm0
    000003e6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003ee: 	addq	$0x10, %rsp
    000003f2: 	popq	%rbx
    000003f3: 	popq	%rbp
    000003f4: 	popq	%r12
    000003f6: 	popq	%r13
    000003f8: 	popq	%r14
    000003fa: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1018
.Ltmp1423:
    000003ff: 	movq	%rbx, %rdi
    00000402: 	movq	%rsp, %rsi
    00000405: 	xorl	%edx, %edx
    00000407: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1031
    0000040c: 	movq	%rax, (%rbx)
    0000040f: 	movq	%rax, %rdi
    00000412: 	movq	(%rsp), %rax
    00000416: 	movq	%rax, 0x10(%rbx)
.Ltmp1429:
    0000041a: 	movq	%r12, %rdx
    0000041d: 	movq	%rbp, %rsi
    00000420: 	callq	memcpy@PLT # Offset: 1056
    00000425: 	movq	(%rsp), %r12
    00000429: 	movq	(%rbx), %rdi
    0000042c: 	jmp	.Ltmp1427 # Offset: 1068
.Ltmp1420:
    00000431: 	movq	%r12, %rsi
    00000434: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000043b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1083
    00000440: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000447: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000044e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000455: 	jne	.Ltmp1428 # Offset: 1109
.Ltmp1425:
    0000045b: 	movq	-0x8(%rdx), %rax
    0000045f: 	addq	$0x200, %rax
    00000465: 	jmp	.Ltmp1428 # Offset: 1125
.Ltmp1424:
    0000046a: 	testq	%r12, %r12
    0000046d: 	je	.Ltmp1427 # Offset: 1133
    00000473: 	jmp	.Ltmp1429 # Offset: 1139
.Ltmp1426:
    00000475: 	callq	__stack_chk_fail@PLT # Offset: 1141
.Ltmp1422:
    0000047a: 	leaq	DATAat0x57008(%rip), %rdi
    00000481: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1153
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIa14and_remainder2IaLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIa13and_remainderIaLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIa13and_remainderIaLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIa13and_remainderIaLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 126
  State       : disassembled
  Address     : 0x11440
  Size        : 0x2ae
  MaxSize     : 0x2b0
  Offset      : 0x11440
  Section     : .text
  Orc Section : .local.text._Z13test_constantIa13and_remainderIaLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0125:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	%rdi, %rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %esi
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%esi, %esi
    00000036: 	jle	.Ltmp1430 # Offset: 54
    0000003c: 	movdqa	DATAat0x57db0(%rip), %xmm6
    00000044: 	movdqa	DATAat0x57dc0(%rip), %xmm5
    0000004c: 	xorl	%r14d, %r14d
    0000004f: 	leaq	0x1f40(%rbx), %r13
    00000056: 	movsd	init_value(%rip), %xmm7
    0000005e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp1434:
    00000068: 	pxor	%xmm3, %xmm3
    0000006c: 	movq	%rbx, %rax
    0000006f: 	movdqa	%xmm3, %xmm4
    00000073: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1431:
    00000078: 	movdqu	(%rax), %xmm2
    0000007c: 	movdqu	(%rax), %xmm8
    00000081: 	movdqa	%xmm4, %xmm1
    00000085: 	addq	$0x10, %rax
    00000089: 	pand	%xmm6, %xmm2
    0000008d: 	pcmpgtb	%xmm8, %xmm1
    00000092: 	movdqa	%xmm2, %xmm0
    00000096: 	pcmpeqb	%xmm4, %xmm0
    0000009a: 	pcmpeqb	%xmm4, %xmm0
    0000009e: 	pand	%xmm1, %xmm0
    000000a2: 	movdqa	%xmm2, %xmm1
    000000a6: 	paddb	%xmm5, %xmm1
    000000aa: 	pand	%xmm0, %xmm1
    000000ae: 	pandn	%xmm2, %xmm0
    000000b2: 	por	%xmm1, %xmm0
    000000b6: 	paddb	%xmm0, %xmm3
    000000ba: 	cmpq	%rax, %r13
    000000bd: 	jne	.Ltmp1431 # Offset: 189
    000000bf: 	cvttsd2si	%xmm7, %ecx
    000000c3: 	movdqa	%xmm3, %xmm0
    000000c7: 	psrldq	$0x8, %xmm0
    000000cc: 	paddb	%xmm0, %xmm3
    000000d0: 	psadbw	%xmm4, %xmm3
    000000d4: 	movl	%ecx, %edx
    000000d6: 	movd	%xmm3, %eax
    000000da: 	andl	$0xf, %edx
    000000dd: 	testb	%cl, %cl
    000000df: 	jns	.Ltmp1432 # Offset: 223
    000000e1: 	testb	%dl, %dl
    000000e3: 	leal	-0x10(%rdx), %ecx
    000000e6: 	setne	%dil
    000000ea: 	testb	%dil, %dil
    000000ed: 	cmovnel	%ecx, %edx
.Ltmp1432:
    000000f0: 	shll	$0x6, %edx
    000000f3: 	cmpb	%al, %dl
    000000f5: 	je	.Ltmp1433 # Offset: 245
    000000f7: 	movl	current_test(%rip), %edx
    000000fd: 	movq	%rbp, %rsi
    00000100: 	movl	$0x1, %edi
    00000105: 	xorl	%eax, %eax
    00000107: 	addl	$0x1, %r14d
    0000010b: 	callq	__printf_chk@PLT # Offset: 267
    00000110: 	movl	iterations(%rip), %esi
    00000116: 	cmpl	%esi, %r14d
    00000119: 	jge	.Ltmp1430 # Offset: 281
    0000011b: 	movsd	init_value(%rip), %xmm7
    00000123: 	movdqa	DATAat0x57db0(%rip), %xmm6
    0000012b: 	movdqa	DATAat0x57dc0(%rip), %xmm5
    00000133: 	jmp	.Ltmp1434 # Offset: 307
    00000138: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1433:
    00000140: 	addl	$0x1, %r14d
    00000144: 	cmpl	%esi, %r14d
    00000147: 	jl	.Ltmp1434 # Offset: 327
.Ltmp1430:
    0000014d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000154: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000015b: 	subq	$0x20, %rax
    0000015f: 	cmpq	%rax, %rbx
    00000162: 	je	.Ltmp1435 # Offset: 354
    00000168: 	leaq	0x10(%rbx), %rdi
    0000016c: 	movq	%rdi, (%rbx)
    0000016f: 	movq	(%r12), %rbp
    00000173: 	movq	0x8(%r12), %r12
    00000178: 	movq	%rbp, %rax
    0000017b: 	addq	%r12, %rax
    0000017e: 	je	.Ltmp1436 # Offset: 382
    00000180: 	testq	%rbp, %rbp
    00000183: 	je	.Ltmp1437 # Offset: 387
.Ltmp1436:
    00000189: 	movq	%r12, (%rsp)
    0000018d: 	cmpq	$0xf, %r12
    00000191: 	ja	.Ltmp1438 # Offset: 401
    00000197: 	cmpq	$0x1, %r12
    0000019b: 	jne	.Ltmp1439 # Offset: 411
    000001a1: 	movzbl	(%rbp), %eax
    000001a5: 	movb	%al, 0x10(%rbx)
.Ltmp1442:
    000001a8: 	movq	%r12, 0x8(%rbx)
    000001ac: 	movb	$0x0, (%rdi,%r12)
    000001b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001b8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001bf: 	addq	$0x20, %rax
    000001c3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ca: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001d1: 	je	.Ltmp1440 # Offset: 465
.Ltmp1443:
    000001d7: 	movq	-0x20(%rax), %rbp
    000001db: 	callq	clock@PLT # Offset: 475
    000001e0: 	movq	%rax, end_time(%rip)
    000001e7: 	movq	0x8(%rsp), %rdx
    000001ec: 	subq	%fs:0x28, %rdx
    000001f5: 	jne	.Ltmp1441 # Offset: 501
    000001fb: 	subq	start_time(%rip), %rax
    00000202: 	pxor	%xmm0, %xmm0
    00000206: 	movq	%rbp, %rdi
    00000209: 	cvtsi2sd	%rax, %xmm0
    0000020e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000216: 	addq	$0x10, %rsp
    0000021a: 	popq	%rbx
    0000021b: 	popq	%rbp
    0000021c: 	popq	%r12
    0000021e: 	popq	%r13
    00000220: 	popq	%r14
    00000222: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 546
.Ltmp1438:
    00000227: 	movq	%rbx, %rdi
    0000022a: 	movq	%rsp, %rsi
    0000022d: 	xorl	%edx, %edx
    0000022f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 559
    00000234: 	movq	%rax, (%rbx)
    00000237: 	movq	%rax, %rdi
    0000023a: 	movq	(%rsp), %rax
    0000023e: 	movq	%rax, 0x10(%rbx)
.Ltmp1444:
    00000242: 	movq	%r12, %rdx
    00000245: 	movq	%rbp, %rsi
    00000248: 	callq	memcpy@PLT # Offset: 584
    0000024d: 	movq	(%rsp), %r12
    00000251: 	movq	(%rbx), %rdi
    00000254: 	jmp	.Ltmp1442 # Offset: 596
.Ltmp1435:
    00000259: 	movq	%r12, %rsi
    0000025c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000263: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 611
    00000268: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000026f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000276: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000027d: 	jne	.Ltmp1443 # Offset: 637
.Ltmp1440:
    00000283: 	movq	-0x8(%rdx), %rax
    00000287: 	addq	$0x200, %rax
    0000028d: 	jmp	.Ltmp1443 # Offset: 653
.Ltmp1439:
    00000292: 	testq	%r12, %r12
    00000295: 	je	.Ltmp1442 # Offset: 661
    0000029b: 	jmp	.Ltmp1444 # Offset: 667
.Ltmp1441:
    0000029d: 	callq	__stack_chk_fail@PLT # Offset: 669
.Ltmp1437:
    000002a2: 	leaq	DATAat0x57008(%rip), %rdi
    000002a9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 681
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIa13and_remainderIaLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIa14and_remainder2IaLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIa14and_remainder2IaLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIa14and_remainder2IaLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 127
  State       : disassembled
  Address     : 0x116f0
  Size        : 0x486
  MaxSize     : 0x490
  Offset      : 0x116f0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIa14and_remainder2IaLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0126:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	%rdi, %rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %esi
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%esi, %esi
    00000036: 	jle	.Ltmp1445 # Offset: 54
    0000003c: 	movdqa	DATAat0x57db0(%rip), %xmm11
    00000045: 	movdqa	DATAat0x57be0(%rip), %xmm6
    0000004d: 	xorl	%r14d, %r14d
    00000050: 	leaq	0x1f40(%rbx), %r13
    00000057: 	movdqa	DATAat0x57dd0(%rip), %xmm5
    0000005f: 	movq	init_value(%rip), %rdi
    00000066: 	leaq	DATAat0x571d0(%rip), %rbp
    0000006d: 	nopl	(%rax) # Size: 3
.Ltmp1449:
    00000070: 	pxor	%xmm9, %xmm9
    00000075: 	pxor	%xmm4, %xmm4
    00000079: 	pxor	%xmm2, %xmm2
    0000007d: 	movq	%rbx, %rax
    00000080: 	movdqa	%xmm9, %xmm10
    00000085: 	nopl	(%rax) # Size: 3
.Ltmp1446:
    00000088: 	movdqu	(%rax), %xmm1
    0000008c: 	movdqa	%xmm10, %xmm0
    00000091: 	movdqu	(%rax), %xmm15
    00000096: 	addq	$0x10, %rax
    0000009a: 	pand	%xmm11, %xmm1
    0000009f: 	pcmpgtb	%xmm1, %xmm0
    000000a3: 	movdqa	%xmm1, %xmm3
    000000a7: 	punpcklbw	%xmm0, %xmm3
    000000ab: 	punpckhbw	%xmm0, %xmm1
    000000af: 	movdqa	%xmm4, %xmm0
    000000b3: 	pcmpgtw	%xmm3, %xmm0
    000000b7: 	movdqa	%xmm3, %xmm8
    000000bc: 	movdqa	%xmm1, %xmm7
    000000c0: 	punpcklwd	%xmm0, %xmm8
    000000c5: 	punpckhwd	%xmm0, %xmm3
    000000c9: 	movdqa	%xmm4, %xmm0
    000000cd: 	pcmpgtw	%xmm1, %xmm0
    000000d1: 	movdqa	%xmm3, %xmm12
    000000d6: 	pcmpeqd	%xmm2, %xmm12
    000000db: 	punpcklwd	%xmm0, %xmm7
    000000df: 	punpckhwd	%xmm0, %xmm1
    000000e3: 	movdqa	%xmm8, %xmm0
    000000e8: 	pcmpeqd	%xmm2, %xmm0
    000000ec: 	pcmpeqd	%xmm2, %xmm12
    000000f1: 	pcmpeqd	%xmm2, %xmm0
    000000f5: 	movdqa	%xmm0, %xmm13
    000000fa: 	punpcklwd	%xmm12, %xmm0
    000000ff: 	punpckhwd	%xmm12, %xmm13
    00000104: 	movdqa	%xmm0, %xmm12
    00000109: 	punpckhwd	%xmm13, %xmm12
    0000010e: 	punpcklwd	%xmm13, %xmm0
    00000113: 	movdqa	%xmm1, %xmm13
    00000118: 	punpcklwd	%xmm12, %xmm0
    0000011d: 	pcmpeqd	%xmm2, %xmm13
    00000122: 	movdqa	%xmm7, %xmm12
    00000127: 	pcmpeqd	%xmm2, %xmm12
    0000012c: 	pand	%xmm6, %xmm0
    00000130: 	pcmpeqd	%xmm2, %xmm13
    00000135: 	pcmpeqd	%xmm2, %xmm12
    0000013a: 	movdqa	%xmm12, %xmm14
    0000013f: 	punpcklwd	%xmm13, %xmm12
    00000144: 	punpckhwd	%xmm13, %xmm14
    00000149: 	movdqa	%xmm12, %xmm13
    0000014e: 	punpckhwd	%xmm14, %xmm13
    00000153: 	punpcklwd	%xmm14, %xmm12
    00000158: 	punpcklwd	%xmm13, %xmm12
    0000015d: 	movdqa	%xmm10, %xmm13
    00000162: 	pand	%xmm6, %xmm12
    00000167: 	packuswb	%xmm12, %xmm0
    0000016c: 	movdqa	%xmm10, %xmm12
    00000171: 	pcmpgtb	%xmm15, %xmm12
    00000176: 	movdqa	%xmm5, %xmm15
    0000017b: 	paddd	%xmm8, %xmm15
    00000180: 	pand	%xmm12, %xmm0
    00000185: 	pcmpgtb	%xmm0, %xmm13
    0000018a: 	movdqa	%xmm0, %xmm12
    0000018f: 	punpcklbw	%xmm13, %xmm12
    00000194: 	punpckhbw	%xmm13, %xmm0
    00000199: 	movdqa	%xmm4, %xmm13
    0000019e: 	pcmpgtw	%xmm12, %xmm13
    000001a3: 	movdqa	%xmm12, %xmm14
    000001a8: 	punpcklwd	%xmm13, %xmm14
    000001ad: 	punpckhwd	%xmm13, %xmm12
    000001b2: 	movdqa	%xmm5, %xmm13
    000001b7: 	paddd	%xmm3, %xmm13
    000001bc: 	pand	%xmm14, %xmm15
    000001c1: 	pandn	%xmm8, %xmm14
    000001c6: 	pand	%xmm12, %xmm13
    000001cb: 	pandn	%xmm3, %xmm12
    000001d0: 	movdqa	%xmm14, %xmm8
    000001d5: 	por	%xmm13, %xmm12
    000001da: 	movdqa	%xmm4, %xmm13
    000001df: 	movdqa	%xmm0, %xmm3
    000001e3: 	pcmpgtw	%xmm0, %xmm13
    000001e8: 	movdqa	%xmm5, %xmm14
    000001ed: 	por	%xmm15, %xmm8
    000001f2: 	paddd	%xmm7, %xmm14
    000001f7: 	punpcklwd	%xmm13, %xmm3
    000001fc: 	punpckhwd	%xmm13, %xmm0
    00000201: 	pand	%xmm3, %xmm14
    00000206: 	pandn	%xmm7, %xmm3
    0000020a: 	movdqa	%xmm5, %xmm7
    0000020e: 	paddd	%xmm1, %xmm7
    00000212: 	por	%xmm14, %xmm3
    00000217: 	pand	%xmm0, %xmm7
    0000021b: 	pandn	%xmm1, %xmm0
    0000021f: 	movdqa	%xmm8, %xmm1
    00000224: 	por	%xmm7, %xmm0
    00000228: 	movdqa	%xmm8, %xmm7
    0000022d: 	punpckhwd	%xmm12, %xmm1
    00000232: 	punpcklwd	%xmm12, %xmm7
    00000237: 	movdqa	%xmm7, %xmm8
    0000023c: 	punpcklwd	%xmm1, %xmm7
    00000240: 	punpckhwd	%xmm1, %xmm8
    00000245: 	movdqa	%xmm3, %xmm1
    00000249: 	punpcklwd	%xmm8, %xmm7
    0000024e: 	punpcklwd	%xmm0, %xmm1
    00000252: 	movdqa	%xmm3, %xmm8
    00000257: 	punpckhwd	%xmm0, %xmm8
    0000025c: 	movdqa	%xmm1, %xmm0
    00000260: 	pand	%xmm6, %xmm7
    00000264: 	punpckhwd	%xmm8, %xmm0
    00000269: 	punpcklwd	%xmm8, %xmm1
    0000026e: 	punpcklwd	%xmm0, %xmm1
    00000272: 	pand	%xmm6, %xmm1
    00000276: 	packuswb	%xmm1, %xmm7
    0000027a: 	paddb	%xmm7, %xmm9
    0000027f: 	cmpq	%rax, %r13
    00000282: 	jne	.Ltmp1446 # Offset: 642
    00000288: 	movq	%rdi, %xmm4
    0000028d: 	movdqa	%xmm9, %xmm0
    00000292: 	cvttsd2si	%xmm4, %ecx
    00000296: 	psrldq	$0x8, %xmm0
    0000029b: 	paddb	%xmm0, %xmm9
    000002a0: 	psadbw	%xmm10, %xmm9
    000002a5: 	movd	%xmm9, %eax
    000002aa: 	movl	%ecx, %edx
    000002ac: 	andl	$0xf, %edx
    000002af: 	testb	%cl, %cl
    000002b1: 	jns	.Ltmp1447 # Offset: 689
    000002b3: 	testl	%edx, %edx
    000002b5: 	leal	-0x10(%rdx), %ecx
    000002b8: 	setne	%r8b
    000002bc: 	testb	%r8b, %r8b
    000002bf: 	cmovnel	%ecx, %edx
.Ltmp1447:
    000002c2: 	shll	$0x6, %edx
    000002c5: 	cmpb	%dl, %al
    000002c7: 	je	.Ltmp1448 # Offset: 711
    000002c9: 	movl	current_test(%rip), %edx
    000002cf: 	movq	%rbp, %rsi
    000002d2: 	movl	$0x1, %edi
    000002d7: 	xorl	%eax, %eax
    000002d9: 	addl	$0x1, %r14d
    000002dd: 	callq	__printf_chk@PLT # Offset: 733
    000002e2: 	movl	iterations(%rip), %esi
    000002e8: 	cmpl	%esi, %r14d
    000002eb: 	jge	.Ltmp1445 # Offset: 747
    000002ed: 	movq	init_value(%rip), %rdi
    000002f4: 	movdqa	DATAat0x57be0(%rip), %xmm6
    000002fc: 	movdqa	DATAat0x57db0(%rip), %xmm11
    00000305: 	movdqa	DATAat0x57dd0(%rip), %xmm5
    0000030d: 	jmp	.Ltmp1449 # Offset: 781
    00000312: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1448:
    00000318: 	addl	$0x1, %r14d
    0000031c: 	cmpl	%esi, %r14d
    0000031f: 	jl	.Ltmp1449 # Offset: 799
.Ltmp1445:
    00000325: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000032c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000333: 	subq	$0x20, %rax
    00000337: 	cmpq	%rax, %rbx
    0000033a: 	je	.Ltmp1450 # Offset: 826
    00000340: 	leaq	0x10(%rbx), %rdi
    00000344: 	movq	%rdi, (%rbx)
    00000347: 	movq	(%r12), %rbp
    0000034b: 	movq	0x8(%r12), %r12
    00000350: 	movq	%rbp, %rax
    00000353: 	addq	%r12, %rax
    00000356: 	je	.Ltmp1451 # Offset: 854
    00000358: 	testq	%rbp, %rbp
    0000035b: 	je	.Ltmp1452 # Offset: 859
.Ltmp1451:
    00000361: 	movq	%r12, (%rsp)
    00000365: 	cmpq	$0xf, %r12
    00000369: 	ja	.Ltmp1453 # Offset: 873
    0000036f: 	cmpq	$0x1, %r12
    00000373: 	jne	.Ltmp1454 # Offset: 883
    00000379: 	movzbl	(%rbp), %eax
    0000037d: 	movb	%al, 0x10(%rbx)
.Ltmp1457:
    00000380: 	movq	%r12, 0x8(%rbx)
    00000384: 	movb	$0x0, (%rdi,%r12)
    00000389: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000390: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000397: 	addq	$0x20, %rax
    0000039b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003a2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000003a9: 	je	.Ltmp1455 # Offset: 937
.Ltmp1458:
    000003af: 	movq	-0x20(%rax), %rbp
    000003b3: 	callq	clock@PLT # Offset: 947
    000003b8: 	movq	%rax, end_time(%rip)
    000003bf: 	movq	0x8(%rsp), %rdx
    000003c4: 	subq	%fs:0x28, %rdx
    000003cd: 	jne	.Ltmp1456 # Offset: 973
    000003d3: 	subq	start_time(%rip), %rax
    000003da: 	pxor	%xmm0, %xmm0
    000003de: 	movq	%rbp, %rdi
    000003e1: 	cvtsi2sd	%rax, %xmm0
    000003e6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003ee: 	addq	$0x10, %rsp
    000003f2: 	popq	%rbx
    000003f3: 	popq	%rbp
    000003f4: 	popq	%r12
    000003f6: 	popq	%r13
    000003f8: 	popq	%r14
    000003fa: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1018
.Ltmp1453:
    000003ff: 	movq	%rbx, %rdi
    00000402: 	movq	%rsp, %rsi
    00000405: 	xorl	%edx, %edx
    00000407: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1031
    0000040c: 	movq	%rax, (%rbx)
    0000040f: 	movq	%rax, %rdi
    00000412: 	movq	(%rsp), %rax
    00000416: 	movq	%rax, 0x10(%rbx)
.Ltmp1459:
    0000041a: 	movq	%r12, %rdx
    0000041d: 	movq	%rbp, %rsi
    00000420: 	callq	memcpy@PLT # Offset: 1056
    00000425: 	movq	(%rsp), %r12
    00000429: 	movq	(%rbx), %rdi
    0000042c: 	jmp	.Ltmp1457 # Offset: 1068
.Ltmp1450:
    00000431: 	movq	%r12, %rsi
    00000434: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000043b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1083
    00000440: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000447: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000044e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000455: 	jne	.Ltmp1458 # Offset: 1109
.Ltmp1455:
    0000045b: 	movq	-0x8(%rdx), %rax
    0000045f: 	addq	$0x200, %rax
    00000465: 	jmp	.Ltmp1458 # Offset: 1125
.Ltmp1454:
    0000046a: 	testq	%r12, %r12
    0000046d: 	je	.Ltmp1457 # Offset: 1133
    00000473: 	jmp	.Ltmp1459 # Offset: 1139
.Ltmp1456:
    00000475: 	callq	__stack_chk_fail@PLT # Offset: 1141
.Ltmp1452:
    0000047a: 	leaq	DATAat0x57008(%rip), %rdi
    00000481: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1153
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIa14and_remainder2IaLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIs13and_remainderIsLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 128
  State       : disassembled
  Address     : 0x11b80
  Size        : 0x463
  MaxSize     : 0x470
  Offset      : 0x11b80
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs13and_remainderIsLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0127:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp1460 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57be0(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57de0(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1473:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp1461 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1462 # Offset: 160
    000000a6: 	pxor	%xmm1, %xmm1
    000000aa: 	movq	%r14, %rax
    000000ad: 	movdqa	%xmm1, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp1463:
    000000b8: 	movdqu	(%rax), %xmm3
    000000bc: 	movdqu	(%rax), %xmm8
    000000c1: 	movdqa	%xmm4, %xmm2
    000000c5: 	addq	$0x10, %rax
    000000c9: 	pand	%xmm6, %xmm3
    000000cd: 	pcmpgtw	%xmm8, %xmm2
    000000d2: 	movdqa	%xmm3, %xmm0
    000000d6: 	pcmpeqw	%xmm4, %xmm0
    000000da: 	pcmpeqw	%xmm4, %xmm0
    000000de: 	pand	%xmm2, %xmm0
    000000e2: 	movdqa	%xmm3, %xmm2
    000000e6: 	paddw	%xmm5, %xmm2
    000000ea: 	pand	%xmm0, %xmm2
    000000ee: 	pandn	%xmm3, %xmm0
    000000f2: 	por	%xmm2, %xmm0
    000000f6: 	paddw	%xmm0, %xmm1
    000000fa: 	cmpq	%r15, %rax
    000000fd: 	jne	.Ltmp1463 # Offset: 253
    000000ff: 	movdqa	%xmm1, %xmm0
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddw	%xmm0, %xmm1
    0000010c: 	movdqa	%xmm1, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddw	%xmm0, %xmm1
    00000119: 	movdqa	%xmm1, %xmm0
    0000011d: 	psrldq	$0x2, %xmm0
    00000122: 	paddw	%xmm0, %xmm1
    00000126: 	pextrw	$0x0, %xmm1, %eax
    0000012b: 	cmpl	%r13d, %ebx
    0000012e: 	je	.Ltmp1461 # Offset: 302
    00000134: 	movl	%ebx, %edx
.Ltmp1481:
    00000136: 	movslq	%edx, %rcx
    00000139: 	movzwl	(%r14,%rcx,2), %edi
    0000013e: 	leaq	(%rcx,%rcx), %rsi
    00000142: 	movzbl	%dil, %ecx
    00000146: 	testw	%di, %di
    00000149: 	jns	.Ltmp1464 # Offset: 329
    0000014b: 	testw	%cx, %cx
    0000014e: 	leal	-0x100(%rcx), %edi
    00000154: 	setne	%r8b
    00000158: 	testb	%r8b, %r8b
    0000015b: 	cmovnel	%edi, %ecx
.Ltmp1464:
    0000015e: 	addl	%eax, %ecx
    00000160: 	leal	0x1(%rdx), %edi
    00000163: 	movl	%ecx, %eax
    00000165: 	cmpl	%edi, %r13d
    00000168: 	jle	.Ltmp1461 # Offset: 360
    0000016e: 	movzwl	0x2(%r14,%rsi), %edi
    00000174: 	movl	%edi, %eax
    00000176: 	andw	$0xff, %ax
    0000017a: 	je	.Ltmp1465 # Offset: 378
    0000017c: 	leal	-0x100(%rax), %r8d
    00000183: 	testw	%di, %di
    00000186: 	cmovsl	%r8d, %eax
.Ltmp1465:
    0000018a: 	addl	%eax, %ecx
    0000018c: 	leal	0x2(%rdx), %edi
    0000018f: 	movl	%ecx, %eax
    00000191: 	cmpl	%edi, %r13d
    00000194: 	jle	.Ltmp1461 # Offset: 404
    0000019a: 	movzwl	0x4(%r14,%rsi), %edi
    000001a0: 	movzbl	%dil, %eax
    000001a4: 	testw	%di, %di
    000001a7: 	jns	.Ltmp1466 # Offset: 423
    000001a9: 	testw	%ax, %ax
    000001ac: 	leal	-0x100(%rax), %edi
    000001b2: 	setne	%r8b
    000001b6: 	testb	%r8b, %r8b
    000001b9: 	cmovnel	%edi, %eax
.Ltmp1466:
    000001bc: 	addl	%eax, %ecx
    000001be: 	leal	0x3(%rdx), %edi
    000001c1: 	movl	%ecx, %eax
    000001c3: 	cmpl	%edi, %r13d
    000001c6: 	jle	.Ltmp1461 # Offset: 454
    000001cc: 	movzwl	0x6(%r14,%rsi), %edi
    000001d2: 	movzbl	%dil, %eax
    000001d6: 	testw	%di, %di
    000001d9: 	jns	.Ltmp1467 # Offset: 473
    000001db: 	testw	%ax, %ax
    000001de: 	leal	-0x100(%rax), %edi
    000001e4: 	setne	%r8b
    000001e8: 	testb	%r8b, %r8b
    000001eb: 	cmovnel	%edi, %eax
.Ltmp1467:
    000001ee: 	addl	%eax, %ecx
    000001f0: 	leal	0x4(%rdx), %edi
    000001f3: 	movl	%ecx, %eax
    000001f5: 	cmpl	%edi, %r13d
    000001f8: 	jle	.Ltmp1461 # Offset: 504
    000001fa: 	movzwl	0x8(%r14,%rsi), %edi
    00000200: 	movzbl	%dil, %eax
    00000204: 	testw	%di, %di
    00000207: 	jns	.Ltmp1468 # Offset: 519
    00000209: 	testw	%ax, %ax
    0000020c: 	leal	-0x100(%rax), %edi
    00000212: 	setne	%r8b
    00000216: 	testb	%r8b, %r8b
    00000219: 	cmovnel	%edi, %eax
.Ltmp1468:
    0000021c: 	addl	%eax, %ecx
    0000021e: 	leal	0x5(%rdx), %edi
    00000221: 	movl	%ecx, %eax
    00000223: 	cmpl	%edi, %r13d
    00000226: 	jle	.Ltmp1461 # Offset: 550
    00000228: 	movzwl	0xa(%r14,%rsi), %edi
    0000022e: 	movzbl	%dil, %eax
    00000232: 	testw	%di, %di
    00000235: 	jns	.Ltmp1469 # Offset: 565
    00000237: 	testw	%ax, %ax
    0000023a: 	leal	-0x100(%rax), %edi
    00000240: 	setne	%r8b
    00000244: 	testb	%r8b, %r8b
    00000247: 	cmovnel	%edi, %eax
.Ltmp1469:
    0000024a: 	addl	%eax, %ecx
    0000024c: 	addl	$0x6, %edx
    0000024f: 	movl	%ecx, %eax
    00000251: 	cmpl	%edx, %r13d
    00000254: 	jle	.Ltmp1461 # Offset: 596
    00000256: 	movzwl	0xc(%r14,%rsi), %edx
    0000025c: 	movl	%edx, %eax
    0000025e: 	andw	$0xff, %ax
    00000262: 	je	.Ltmp1470 # Offset: 610
    00000264: 	leal	-0x100(%rax), %esi
    0000026a: 	testw	%dx, %dx
    0000026d: 	cmovsl	%esi, %eax
.Ltmp1470:
    00000270: 	addl	%ecx, %eax
.Ltmp1461:
    00000272: 	cvttsd2si	%xmm7, %ecx
    00000276: 	movzbl	%cl, %edx
    00000279: 	testw	%cx, %cx
    0000027c: 	jns	.Ltmp1471 # Offset: 636
    0000027e: 	testw	%dx, %dx
    00000281: 	leal	-0x100(%rdx), %ecx
    00000287: 	setne	%sil
    0000028b: 	testb	%sil, %sil
    0000028e: 	cmovnel	%ecx, %edx
.Ltmp1471:
    00000291: 	imulw	$0x1f40, %dx, %dx
    00000296: 	cmpw	%ax, %dx
    00000299: 	je	.Ltmp1472 # Offset: 665
    0000029b: 	movl	current_test(%rip), %edx
    000002a1: 	movq	%rbp, %rsi
    000002a4: 	movl	$0x1, %edi
    000002a9: 	xorl	%eax, %eax
    000002ab: 	addl	$0x1, %r12d
    000002af: 	callq	__printf_chk@PLT # Offset: 687
    000002b4: 	movl	iterations(%rip), %r9d
    000002bb: 	cmpl	%r9d, %r12d
    000002be: 	jge	.Ltmp1460 # Offset: 702
    000002c0: 	movsd	init_value(%rip), %xmm7
    000002c8: 	movdqa	DATAat0x57be0(%rip), %xmm6
    000002d0: 	movdqa	DATAat0x57de0(%rip), %xmm5
    000002d8: 	jmp	.Ltmp1473 # Offset: 728
    000002dd: 	nopl	(%rax) # Size: 3
.Ltmp1472:
    000002e0: 	addl	$0x1, %r12d
    000002e4: 	cmpl	%r9d, %r12d
    000002e7: 	jl	.Ltmp1473 # Offset: 743
.Ltmp1460:
    000002ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002fb: 	subq	$0x20, %rax
    000002ff: 	cmpq	%rax, %rbx
    00000302: 	je	.Ltmp1474 # Offset: 770
    00000308: 	movq	0x8(%rsp), %rax
    0000030d: 	leaq	0x10(%rbx), %rdi
    00000311: 	movq	%rdi, (%rbx)
    00000314: 	movq	(%rax), %rbp
    00000317: 	movq	0x8(%rax), %r12
    0000031b: 	movq	%rbp, %rax
    0000031e: 	addq	%r12, %rax
    00000321: 	je	.Ltmp1475 # Offset: 801
    00000323: 	testq	%rbp, %rbp
    00000326: 	je	.Ltmp1476 # Offset: 806
.Ltmp1475:
    0000032c: 	movq	%r12, 0x10(%rsp)
    00000331: 	cmpq	$0xf, %r12
    00000335: 	ja	.Ltmp1477 # Offset: 821
    0000033b: 	cmpq	$0x1, %r12
    0000033f: 	jne	.Ltmp1478 # Offset: 831
    00000345: 	movzbl	(%rbp), %eax
    00000349: 	movb	%al, 0x10(%rbx)
.Ltmp1482:
    0000034c: 	movq	%r12, 0x8(%rbx)
    00000350: 	movb	$0x0, (%rdi,%r12)
    00000355: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000035c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000363: 	addq	$0x20, %rax
    00000367: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000036e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000375: 	je	.Ltmp1479 # Offset: 885
.Ltmp1483:
    0000037b: 	movq	-0x20(%rax), %rbp
    0000037f: 	callq	clock@PLT # Offset: 895
    00000384: 	movq	%rax, end_time(%rip)
    0000038b: 	movq	0x18(%rsp), %rdx
    00000390: 	subq	%fs:0x28, %rdx
    00000399: 	jne	.Ltmp1480 # Offset: 921
    0000039f: 	subq	start_time(%rip), %rax
    000003a6: 	pxor	%xmm0, %xmm0
    000003aa: 	movq	%rbp, %rdi
    000003ad: 	cvtsi2sd	%rax, %xmm0
    000003b2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003ba: 	addq	$0x28, %rsp
    000003be: 	popq	%rbx
    000003bf: 	popq	%rbp
    000003c0: 	popq	%r12
    000003c2: 	popq	%r13
    000003c4: 	popq	%r14
    000003c6: 	popq	%r15
    000003c8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 968
.Ltmp1462:
    000003cd: 	xorl	%edx, %edx
    000003cf: 	xorl	%eax, %eax
    000003d1: 	jmp	.Ltmp1481 # Offset: 977
.Ltmp1477:
    000003d6: 	movq	%rbx, %rdi
    000003d9: 	leaq	0x10(%rsp), %rsi
    000003de: 	xorl	%edx, %edx
    000003e0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 992
    000003e5: 	movq	%rax, (%rbx)
    000003e8: 	movq	%rax, %rdi
    000003eb: 	movq	0x10(%rsp), %rax
    000003f0: 	movq	%rax, 0x10(%rbx)
.Ltmp1484:
    000003f4: 	movq	%r12, %rdx
    000003f7: 	movq	%rbp, %rsi
    000003fa: 	callq	memcpy@PLT # Offset: 1018
    000003ff: 	movq	0x10(%rsp), %r12
    00000404: 	movq	(%rbx), %rdi
    00000407: 	jmp	.Ltmp1482 # Offset: 1031
.Ltmp1474:
    0000040c: 	movq	0x8(%rsp), %rsi
    00000411: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000418: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1048
    0000041d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000424: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000042b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000432: 	jne	.Ltmp1483 # Offset: 1074
.Ltmp1479:
    00000438: 	movq	-0x8(%rdx), %rax
    0000043c: 	addq	$0x200, %rax
    00000442: 	jmp	.Ltmp1483 # Offset: 1090
.Ltmp1478:
    00000447: 	testq	%r12, %r12
    0000044a: 	je	.Ltmp1482 # Offset: 1098
    00000450: 	jmp	.Ltmp1484 # Offset: 1104
.Ltmp1480:
    00000452: 	callq	__stack_chk_fail@PLT # Offset: 1106
.Ltmp1476:
    00000457: 	leaq	DATAat0x57008(%rip), %rdi
    0000045e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1118
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs13and_remainderIsLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi14and_remainder2IiLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 129
  State       : disassembled
  Address     : 0x11ff0
  Size        : 0x383
  MaxSize     : 0x390
  Offset      : 0x11ff0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi14and_remainder2IiLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0128:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1485 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57cf0(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57df0(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp1494:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp1486 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1487 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp1488:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp1488 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp1486 # Offset: 288
.Ltmp1502:
    00000122: 	movslq	%edx, %rcx
    00000125: 	movl	(%r15,%rcx,4), %edi
    00000129: 	leaq	(,%rcx,4), %r8
    00000131: 	movl	%edi, %ecx
    00000133: 	andl	$0x7f, %ecx
    00000136: 	testl	%edi, %edi
    00000138: 	jns	.Ltmp1489 # Offset: 312
    0000013a: 	testl	%ecx, %ecx
    0000013c: 	leal	-0x80(%rcx), %edi
    0000013f: 	setne	%r9b
    00000143: 	testb	%r9b, %r9b
    00000146: 	cmovnel	%edi, %ecx
.Ltmp1489:
    00000149: 	addl	%ecx, %eax
    0000014b: 	leal	0x1(%rdx), %ecx
    0000014e: 	cmpl	%ecx, %r14d
    00000151: 	jle	.Ltmp1486 # Offset: 337
    00000153: 	movl	0x4(%r15,%r8), %edi
    00000158: 	movl	%edi, %ecx
    0000015a: 	andl	$0x7f, %ecx
    0000015d: 	testl	%edi, %edi
    0000015f: 	jns	.Ltmp1490 # Offset: 351
    00000161: 	testl	%ecx, %ecx
    00000163: 	leal	-0x80(%rcx), %edi
    00000166: 	setne	%r9b
    0000016a: 	testb	%r9b, %r9b
    0000016d: 	cmovnel	%edi, %ecx
.Ltmp1490:
    00000170: 	addl	$0x2, %edx
    00000173: 	addl	%ecx, %eax
    00000175: 	cmpl	%edx, %r14d
    00000178: 	jle	.Ltmp1486 # Offset: 376
    0000017a: 	movl	0x8(%r15,%r8), %ecx
    0000017f: 	movl	%ecx, %edx
    00000181: 	andl	$0x7f, %edx
    00000184: 	je	.Ltmp1491 # Offset: 388
    00000186: 	leal	-0x80(%rdx), %edi
    00000189: 	testl	%ecx, %ecx
    0000018b: 	cmovsl	%edi, %edx
.Ltmp1491:
    0000018e: 	addl	%edx, %eax
.Ltmp1486:
    00000190: 	cvttsd2si	%xmm7, %ecx
    00000194: 	movl	%ecx, %edx
    00000196: 	andl	$0x7f, %edx
    00000199: 	testl	%ecx, %ecx
    0000019b: 	jns	.Ltmp1492 # Offset: 411
    0000019d: 	testl	%edx, %edx
    0000019f: 	leal	-0x80(%rdx), %ecx
    000001a2: 	setne	%dil
    000001a6: 	testb	%dil, %dil
    000001a9: 	cmovnel	%ecx, %edx
.Ltmp1492:
    000001ac: 	imull	$0x1f40, %edx, %edx
    000001b2: 	cmpl	%eax, %edx
    000001b4: 	je	.Ltmp1493 # Offset: 436
    000001b6: 	movl	current_test(%rip), %edx
    000001bc: 	movq	%rbp, %rsi
    000001bf: 	movl	$0x1, %edi
    000001c4: 	xorl	%eax, %eax
    000001c6: 	addl	$0x1, %r12d
    000001ca: 	callq	__printf_chk@PLT # Offset: 458
    000001cf: 	movl	iterations(%rip), %esi
    000001d5: 	cmpl	%esi, %r12d
    000001d8: 	jge	.Ltmp1485 # Offset: 472
    000001da: 	movsd	init_value(%rip), %xmm7
    000001e2: 	movdqa	DATAat0x57cf0(%rip), %xmm6
    000001ea: 	movdqa	DATAat0x57df0(%rip), %xmm5
    000001f2: 	jmp	.Ltmp1494 # Offset: 498
    000001f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1493:
    00000200: 	addl	$0x1, %r12d
    00000204: 	cmpl	%esi, %r12d
    00000207: 	jl	.Ltmp1494 # Offset: 519
.Ltmp1485:
    0000020d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000214: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000021b: 	subq	$0x20, %rax
    0000021f: 	cmpq	%rax, %rbx
    00000222: 	je	.Ltmp1495 # Offset: 546
    00000228: 	movq	0x8(%rsp), %rax
    0000022d: 	leaq	0x10(%rbx), %rdi
    00000231: 	movq	%rdi, (%rbx)
    00000234: 	movq	(%rax), %rbp
    00000237: 	movq	0x8(%rax), %r12
    0000023b: 	movq	%rbp, %rax
    0000023e: 	addq	%r12, %rax
    00000241: 	je	.Ltmp1496 # Offset: 577
    00000243: 	testq	%rbp, %rbp
    00000246: 	je	.Ltmp1497 # Offset: 582
.Ltmp1496:
    0000024c: 	movq	%r12, 0x10(%rsp)
    00000251: 	cmpq	$0xf, %r12
    00000255: 	ja	.Ltmp1498 # Offset: 597
    0000025b: 	cmpq	$0x1, %r12
    0000025f: 	jne	.Ltmp1499 # Offset: 607
    00000265: 	movzbl	(%rbp), %eax
    00000269: 	movb	%al, 0x10(%rbx)
.Ltmp1503:
    0000026c: 	movq	%r12, 0x8(%rbx)
    00000270: 	movb	$0x0, (%rdi,%r12)
    00000275: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000027c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000283: 	addq	$0x20, %rax
    00000287: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000295: 	je	.Ltmp1500 # Offset: 661
.Ltmp1504:
    0000029b: 	movq	-0x20(%rax), %rbp
    0000029f: 	callq	clock@PLT # Offset: 671
    000002a4: 	movq	%rax, end_time(%rip)
    000002ab: 	movq	0x18(%rsp), %rdx
    000002b0: 	subq	%fs:0x28, %rdx
    000002b9: 	jne	.Ltmp1501 # Offset: 697
    000002bf: 	subq	start_time(%rip), %rax
    000002c6: 	pxor	%xmm0, %xmm0
    000002ca: 	movq	%rbp, %rdi
    000002cd: 	cvtsi2sd	%rax, %xmm0
    000002d2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002da: 	addq	$0x28, %rsp
    000002de: 	popq	%rbx
    000002df: 	popq	%rbp
    000002e0: 	popq	%r12
    000002e2: 	popq	%r13
    000002e4: 	popq	%r14
    000002e6: 	popq	%r15
    000002e8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 744
.Ltmp1487:
    000002ed: 	xorl	%edx, %edx
    000002ef: 	xorl	%eax, %eax
    000002f1: 	jmp	.Ltmp1502 # Offset: 753
.Ltmp1498:
    000002f6: 	movq	%rbx, %rdi
    000002f9: 	leaq	0x10(%rsp), %rsi
    000002fe: 	xorl	%edx, %edx
    00000300: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 768
    00000305: 	movq	%rax, (%rbx)
    00000308: 	movq	%rax, %rdi
    0000030b: 	movq	0x10(%rsp), %rax
    00000310: 	movq	%rax, 0x10(%rbx)
.Ltmp1505:
    00000314: 	movq	%r12, %rdx
    00000317: 	movq	%rbp, %rsi
    0000031a: 	callq	memcpy@PLT # Offset: 794
    0000031f: 	movq	0x10(%rsp), %r12
    00000324: 	movq	(%rbx), %rdi
    00000327: 	jmp	.Ltmp1503 # Offset: 807
.Ltmp1495:
    0000032c: 	movq	0x8(%rsp), %rsi
    00000331: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000338: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 824
    0000033d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000344: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000352: 	jne	.Ltmp1504 # Offset: 850
.Ltmp1500:
    00000358: 	movq	-0x8(%rdx), %rax
    0000035c: 	addq	$0x200, %rax
    00000362: 	jmp	.Ltmp1504 # Offset: 866
.Ltmp1499:
    00000367: 	testq	%r12, %r12
    0000036a: 	je	.Ltmp1503 # Offset: 874
    00000370: 	jmp	.Ltmp1505 # Offset: 880
.Ltmp1501:
    00000372: 	callq	__stack_chk_fail@PLT # Offset: 882
.Ltmp1497:
    00000377: 	leaq	DATAat0x57008(%rip), %rdi
    0000037e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 894
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi14and_remainder2IiLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi13and_remainderIiLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 130
  State       : disassembled
  Address     : 0x12380
  Size        : 0x383
  MaxSize     : 0x390
  Offset      : 0x12380
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi13and_remainderIiLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0129:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1506 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57e00(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57da0(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp1515:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp1507 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1508 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp1509:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp1509 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp1507 # Offset: 288
.Ltmp1523:
    00000122: 	movslq	%edx, %rcx
    00000125: 	movl	(%r15,%rcx,4), %edi
    00000129: 	leaq	(,%rcx,4), %r8
    00000131: 	movl	%edi, %ecx
    00000133: 	andl	$0x7, %ecx
    00000136: 	testl	%edi, %edi
    00000138: 	jns	.Ltmp1510 # Offset: 312
    0000013a: 	testl	%ecx, %ecx
    0000013c: 	leal	-0x8(%rcx), %edi
    0000013f: 	setne	%r9b
    00000143: 	testb	%r9b, %r9b
    00000146: 	cmovnel	%edi, %ecx
.Ltmp1510:
    00000149: 	addl	%ecx, %eax
    0000014b: 	leal	0x1(%rdx), %ecx
    0000014e: 	cmpl	%ecx, %r14d
    00000151: 	jle	.Ltmp1507 # Offset: 337
    00000153: 	movl	0x4(%r15,%r8), %edi
    00000158: 	movl	%edi, %ecx
    0000015a: 	andl	$0x7, %ecx
    0000015d: 	testl	%edi, %edi
    0000015f: 	jns	.Ltmp1511 # Offset: 351
    00000161: 	testl	%ecx, %ecx
    00000163: 	leal	-0x8(%rcx), %edi
    00000166: 	setne	%r9b
    0000016a: 	testb	%r9b, %r9b
    0000016d: 	cmovnel	%edi, %ecx
.Ltmp1511:
    00000170: 	addl	$0x2, %edx
    00000173: 	addl	%ecx, %eax
    00000175: 	cmpl	%edx, %r14d
    00000178: 	jle	.Ltmp1507 # Offset: 376
    0000017a: 	movl	0x8(%r15,%r8), %ecx
    0000017f: 	movl	%ecx, %edx
    00000181: 	andl	$0x7, %edx
    00000184: 	je	.Ltmp1512 # Offset: 388
    00000186: 	leal	-0x8(%rdx), %edi
    00000189: 	testl	%ecx, %ecx
    0000018b: 	cmovsl	%edi, %edx
.Ltmp1512:
    0000018e: 	addl	%edx, %eax
.Ltmp1507:
    00000190: 	cvttsd2si	%xmm7, %ecx
    00000194: 	movl	%ecx, %edx
    00000196: 	andl	$0x7, %edx
    00000199: 	testl	%ecx, %ecx
    0000019b: 	jns	.Ltmp1513 # Offset: 411
    0000019d: 	testl	%edx, %edx
    0000019f: 	leal	-0x8(%rdx), %ecx
    000001a2: 	setne	%dil
    000001a6: 	testb	%dil, %dil
    000001a9: 	cmovnel	%ecx, %edx
.Ltmp1513:
    000001ac: 	imull	$0x1f40, %edx, %edx
    000001b2: 	cmpl	%eax, %edx
    000001b4: 	je	.Ltmp1514 # Offset: 436
    000001b6: 	movl	current_test(%rip), %edx
    000001bc: 	movq	%rbp, %rsi
    000001bf: 	movl	$0x1, %edi
    000001c4: 	xorl	%eax, %eax
    000001c6: 	addl	$0x1, %r12d
    000001ca: 	callq	__printf_chk@PLT # Offset: 458
    000001cf: 	movl	iterations(%rip), %esi
    000001d5: 	cmpl	%esi, %r12d
    000001d8: 	jge	.Ltmp1506 # Offset: 472
    000001da: 	movsd	init_value(%rip), %xmm7
    000001e2: 	movdqa	DATAat0x57e00(%rip), %xmm6
    000001ea: 	movdqa	DATAat0x57da0(%rip), %xmm5
    000001f2: 	jmp	.Ltmp1515 # Offset: 498
    000001f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1514:
    00000200: 	addl	$0x1, %r12d
    00000204: 	cmpl	%esi, %r12d
    00000207: 	jl	.Ltmp1515 # Offset: 519
.Ltmp1506:
    0000020d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000214: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000021b: 	subq	$0x20, %rax
    0000021f: 	cmpq	%rax, %rbx
    00000222: 	je	.Ltmp1516 # Offset: 546
    00000228: 	movq	0x8(%rsp), %rax
    0000022d: 	leaq	0x10(%rbx), %rdi
    00000231: 	movq	%rdi, (%rbx)
    00000234: 	movq	(%rax), %rbp
    00000237: 	movq	0x8(%rax), %r12
    0000023b: 	movq	%rbp, %rax
    0000023e: 	addq	%r12, %rax
    00000241: 	je	.Ltmp1517 # Offset: 577
    00000243: 	testq	%rbp, %rbp
    00000246: 	je	.Ltmp1518 # Offset: 582
.Ltmp1517:
    0000024c: 	movq	%r12, 0x10(%rsp)
    00000251: 	cmpq	$0xf, %r12
    00000255: 	ja	.Ltmp1519 # Offset: 597
    0000025b: 	cmpq	$0x1, %r12
    0000025f: 	jne	.Ltmp1520 # Offset: 607
    00000265: 	movzbl	(%rbp), %eax
    00000269: 	movb	%al, 0x10(%rbx)
.Ltmp1524:
    0000026c: 	movq	%r12, 0x8(%rbx)
    00000270: 	movb	$0x0, (%rdi,%r12)
    00000275: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000027c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000283: 	addq	$0x20, %rax
    00000287: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000295: 	je	.Ltmp1521 # Offset: 661
.Ltmp1525:
    0000029b: 	movq	-0x20(%rax), %rbp
    0000029f: 	callq	clock@PLT # Offset: 671
    000002a4: 	movq	%rax, end_time(%rip)
    000002ab: 	movq	0x18(%rsp), %rdx
    000002b0: 	subq	%fs:0x28, %rdx
    000002b9: 	jne	.Ltmp1522 # Offset: 697
    000002bf: 	subq	start_time(%rip), %rax
    000002c6: 	pxor	%xmm0, %xmm0
    000002ca: 	movq	%rbp, %rdi
    000002cd: 	cvtsi2sd	%rax, %xmm0
    000002d2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002da: 	addq	$0x28, %rsp
    000002de: 	popq	%rbx
    000002df: 	popq	%rbp
    000002e0: 	popq	%r12
    000002e2: 	popq	%r13
    000002e4: 	popq	%r14
    000002e6: 	popq	%r15
    000002e8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 744
.Ltmp1508:
    000002ed: 	xorl	%edx, %edx
    000002ef: 	xorl	%eax, %eax
    000002f1: 	jmp	.Ltmp1523 # Offset: 753
.Ltmp1519:
    000002f6: 	movq	%rbx, %rdi
    000002f9: 	leaq	0x10(%rsp), %rsi
    000002fe: 	xorl	%edx, %edx
    00000300: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 768
    00000305: 	movq	%rax, (%rbx)
    00000308: 	movq	%rax, %rdi
    0000030b: 	movq	0x10(%rsp), %rax
    00000310: 	movq	%rax, 0x10(%rbx)
.Ltmp1526:
    00000314: 	movq	%r12, %rdx
    00000317: 	movq	%rbp, %rsi
    0000031a: 	callq	memcpy@PLT # Offset: 794
    0000031f: 	movq	0x10(%rsp), %r12
    00000324: 	movq	(%rbx), %rdi
    00000327: 	jmp	.Ltmp1524 # Offset: 807
.Ltmp1516:
    0000032c: 	movq	0x8(%rsp), %rsi
    00000331: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000338: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 824
    0000033d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000344: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000352: 	jne	.Ltmp1525 # Offset: 850
.Ltmp1521:
    00000358: 	movq	-0x8(%rdx), %rax
    0000035c: 	addq	$0x200, %rax
    00000362: 	jmp	.Ltmp1525 # Offset: 866
.Ltmp1520:
    00000367: 	testq	%r12, %r12
    0000036a: 	je	.Ltmp1524 # Offset: 874
    00000370: 	jmp	.Ltmp1526 # Offset: 880
.Ltmp1522:
    00000372: 	callq	__stack_chk_fail@PLT # Offset: 882
.Ltmp1518:
    00000377: 	leaq	DATAat0x57008(%rip), %rdi
    0000037e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 894
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi13and_remainderIiLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl14and_remainder2IlLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 131
  State       : disassembled
  Address     : 0x12710
  Size        : 0x270
  MaxSize     : 0x270
  Offset      : 0x12710
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl14and_remainder2IlLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0130:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp1527 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1533:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp1528 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1530:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0x7f, %eax
    00000081: 	je	.Ltmp1529 # Offset: 129
    00000083: 	leaq	-0x80(%rax), %rdi
    00000087: 	testq	%rcx, %rcx
    0000008a: 	cmovsq	%rdi, %rax
.Ltmp1529:
    0000008e: 	addq	$0x8, %rdx
    00000092: 	addq	%rax, %rsi
    00000095: 	cmpq	%rdx, %r13
    00000098: 	jne	.Ltmp1530 # Offset: 152
.Ltmp1528:
    0000009a: 	cvttsd2si	%xmm0, %rdx
    0000009f: 	movq	%rdx, %rax
    000000a2: 	andl	$0x7f, %eax
    000000a5: 	testq	%rdx, %rdx
    000000a8: 	jns	.Ltmp1531 # Offset: 168
    000000aa: 	testq	%rax, %rax
    000000ad: 	leaq	-0x80(%rax), %rdx
    000000b1: 	setne	%cl
    000000b4: 	testb	%cl, %cl
    000000b6: 	cmovneq	%rdx, %rax
.Ltmp1531:
    000000ba: 	imulq	$0x1f40, %rax, %rax
    000000c1: 	cmpq	%rsi, %rax
    000000c4: 	je	.Ltmp1532 # Offset: 196
    000000c6: 	movl	current_test(%rip), %edx
    000000cc: 	movq	%rbp, %rsi
    000000cf: 	movl	$0x1, %edi
    000000d4: 	xorl	%eax, %eax
    000000d6: 	addl	$0x1, %r14d
    000000da: 	callq	__printf_chk@PLT # Offset: 218
    000000df: 	movl	iterations(%rip), %r8d
    000000e6: 	cmpl	%r14d, %r8d
    000000e9: 	jle	.Ltmp1527 # Offset: 233
    000000eb: 	movsd	init_value(%rip), %xmm0
    000000f3: 	jmp	.Ltmp1533 # Offset: 243
    000000f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1532:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%r8d, %r14d
    00000107: 	jl	.Ltmp1533 # Offset: 263
.Ltmp1527:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp1534 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	%rdi, (%rbx)
    0000012f: 	movq	(%r12), %rbp
    00000133: 	movq	0x8(%r12), %r12
    00000138: 	movq	%rbp, %rax
    0000013b: 	addq	%r12, %rax
    0000013e: 	je	.Ltmp1535 # Offset: 318
    00000140: 	testq	%rbp, %rbp
    00000143: 	je	.Ltmp1536 # Offset: 323
.Ltmp1535:
    00000149: 	movq	%r12, (%rsp)
    0000014d: 	cmpq	$0xf, %r12
    00000151: 	ja	.Ltmp1537 # Offset: 337
    00000157: 	cmpq	$0x1, %r12
    0000015b: 	jne	.Ltmp1538 # Offset: 347
    00000161: 	movzbl	(%rbp), %eax
    00000165: 	movb	%al, 0x10(%rbx)
.Ltmp1541:
    00000168: 	movq	%r12, 0x8(%rbx)
    0000016c: 	movb	$0x0, (%rdi,%r12)
    00000171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000178: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017f: 	addq	$0x20, %rax
    00000183: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000018a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000191: 	je	.Ltmp1539 # Offset: 401
.Ltmp1542:
    00000197: 	movq	-0x20(%rax), %rbp
    0000019b: 	callq	clock@PLT # Offset: 411
    000001a0: 	movq	%rax, end_time(%rip)
    000001a7: 	movq	0x8(%rsp), %rdx
    000001ac: 	subq	%fs:0x28, %rdx
    000001b5: 	jne	.Ltmp1540 # Offset: 437
    000001bb: 	subq	start_time(%rip), %rax
    000001c2: 	pxor	%xmm0, %xmm0
    000001c6: 	movq	%rbp, %rdi
    000001c9: 	cvtsi2sd	%rax, %xmm0
    000001ce: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d6: 	addq	$0x18, %rsp
    000001da: 	popq	%rbx
    000001db: 	popq	%rbp
    000001dc: 	popq	%r12
    000001de: 	popq	%r13
    000001e0: 	popq	%r14
    000001e2: 	popq	%r15
    000001e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 484
.Ltmp1537:
    000001e9: 	movq	%rbx, %rdi
    000001ec: 	movq	%rsp, %rsi
    000001ef: 	xorl	%edx, %edx
    000001f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 497
    000001f6: 	movq	%rax, (%rbx)
    000001f9: 	movq	%rax, %rdi
    000001fc: 	movq	(%rsp), %rax
    00000200: 	movq	%rax, 0x10(%rbx)
.Ltmp1543:
    00000204: 	movq	%r12, %rdx
    00000207: 	movq	%rbp, %rsi
    0000020a: 	callq	memcpy@PLT # Offset: 522
    0000020f: 	movq	(%rsp), %r12
    00000213: 	movq	(%rbx), %rdi
    00000216: 	jmp	.Ltmp1541 # Offset: 534
.Ltmp1534:
    0000021b: 	movq	%r12, %rsi
    0000021e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000225: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 549
    0000022a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000231: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000238: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023f: 	jne	.Ltmp1542 # Offset: 575
.Ltmp1539:
    00000245: 	movq	-0x8(%rdx), %rax
    00000249: 	addq	$0x200, %rax
    0000024f: 	jmp	.Ltmp1542 # Offset: 591
.Ltmp1538:
    00000254: 	testq	%r12, %r12
    00000257: 	je	.Ltmp1541 # Offset: 599
    0000025d: 	jmp	.Ltmp1543 # Offset: 605
.Ltmp1540:
    0000025f: 	callq	__stack_chk_fail@PLT # Offset: 607
.Ltmp1536:
    00000264: 	leaq	DATAat0x57008(%rip), %rdi
    0000026b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 619
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl14and_remainder2IlLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi14and_remainder2IiLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 132
  State       : disassembled
  Address     : 0x12980
  Size        : 0x383
  MaxSize     : 0x390
  Offset      : 0x12980
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi14and_remainder2IiLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0131:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1544 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57e10(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57dd0(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp1553:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp1545 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1546 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp1547:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp1547 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp1545 # Offset: 288
.Ltmp1561:
    00000122: 	movslq	%edx, %rcx
    00000125: 	movl	(%r15,%rcx,4), %edi
    00000129: 	leaq	(,%rcx,4), %r8
    00000131: 	movl	%edi, %ecx
    00000133: 	andl	$0xf, %ecx
    00000136: 	testl	%edi, %edi
    00000138: 	jns	.Ltmp1548 # Offset: 312
    0000013a: 	testl	%ecx, %ecx
    0000013c: 	leal	-0x10(%rcx), %edi
    0000013f: 	setne	%r9b
    00000143: 	testb	%r9b, %r9b
    00000146: 	cmovnel	%edi, %ecx
.Ltmp1548:
    00000149: 	addl	%ecx, %eax
    0000014b: 	leal	0x1(%rdx), %ecx
    0000014e: 	cmpl	%ecx, %r14d
    00000151: 	jle	.Ltmp1545 # Offset: 337
    00000153: 	movl	0x4(%r15,%r8), %edi
    00000158: 	movl	%edi, %ecx
    0000015a: 	andl	$0xf, %ecx
    0000015d: 	testl	%edi, %edi
    0000015f: 	jns	.Ltmp1549 # Offset: 351
    00000161: 	testl	%ecx, %ecx
    00000163: 	leal	-0x10(%rcx), %edi
    00000166: 	setne	%r9b
    0000016a: 	testb	%r9b, %r9b
    0000016d: 	cmovnel	%edi, %ecx
.Ltmp1549:
    00000170: 	addl	$0x2, %edx
    00000173: 	addl	%ecx, %eax
    00000175: 	cmpl	%edx, %r14d
    00000178: 	jle	.Ltmp1545 # Offset: 376
    0000017a: 	movl	0x8(%r15,%r8), %ecx
    0000017f: 	movl	%ecx, %edx
    00000181: 	andl	$0xf, %edx
    00000184: 	je	.Ltmp1550 # Offset: 388
    00000186: 	leal	-0x10(%rdx), %edi
    00000189: 	testl	%ecx, %ecx
    0000018b: 	cmovsl	%edi, %edx
.Ltmp1550:
    0000018e: 	addl	%edx, %eax
.Ltmp1545:
    00000190: 	cvttsd2si	%xmm7, %ecx
    00000194: 	movl	%ecx, %edx
    00000196: 	andl	$0xf, %edx
    00000199: 	testl	%ecx, %ecx
    0000019b: 	jns	.Ltmp1551 # Offset: 411
    0000019d: 	testl	%edx, %edx
    0000019f: 	leal	-0x10(%rdx), %ecx
    000001a2: 	setne	%dil
    000001a6: 	testb	%dil, %dil
    000001a9: 	cmovnel	%ecx, %edx
.Ltmp1551:
    000001ac: 	imull	$0x1f40, %edx, %edx
    000001b2: 	cmpl	%eax, %edx
    000001b4: 	je	.Ltmp1552 # Offset: 436
    000001b6: 	movl	current_test(%rip), %edx
    000001bc: 	movq	%rbp, %rsi
    000001bf: 	movl	$0x1, %edi
    000001c4: 	xorl	%eax, %eax
    000001c6: 	addl	$0x1, %r12d
    000001ca: 	callq	__printf_chk@PLT # Offset: 458
    000001cf: 	movl	iterations(%rip), %esi
    000001d5: 	cmpl	%esi, %r12d
    000001d8: 	jge	.Ltmp1544 # Offset: 472
    000001da: 	movsd	init_value(%rip), %xmm7
    000001e2: 	movdqa	DATAat0x57e10(%rip), %xmm6
    000001ea: 	movdqa	DATAat0x57dd0(%rip), %xmm5
    000001f2: 	jmp	.Ltmp1553 # Offset: 498
    000001f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1552:
    00000200: 	addl	$0x1, %r12d
    00000204: 	cmpl	%esi, %r12d
    00000207: 	jl	.Ltmp1553 # Offset: 519
.Ltmp1544:
    0000020d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000214: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000021b: 	subq	$0x20, %rax
    0000021f: 	cmpq	%rax, %rbx
    00000222: 	je	.Ltmp1554 # Offset: 546
    00000228: 	movq	0x8(%rsp), %rax
    0000022d: 	leaq	0x10(%rbx), %rdi
    00000231: 	movq	%rdi, (%rbx)
    00000234: 	movq	(%rax), %rbp
    00000237: 	movq	0x8(%rax), %r12
    0000023b: 	movq	%rbp, %rax
    0000023e: 	addq	%r12, %rax
    00000241: 	je	.Ltmp1555 # Offset: 577
    00000243: 	testq	%rbp, %rbp
    00000246: 	je	.Ltmp1556 # Offset: 582
.Ltmp1555:
    0000024c: 	movq	%r12, 0x10(%rsp)
    00000251: 	cmpq	$0xf, %r12
    00000255: 	ja	.Ltmp1557 # Offset: 597
    0000025b: 	cmpq	$0x1, %r12
    0000025f: 	jne	.Ltmp1558 # Offset: 607
    00000265: 	movzbl	(%rbp), %eax
    00000269: 	movb	%al, 0x10(%rbx)
.Ltmp1562:
    0000026c: 	movq	%r12, 0x8(%rbx)
    00000270: 	movb	$0x0, (%rdi,%r12)
    00000275: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000027c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000283: 	addq	$0x20, %rax
    00000287: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000295: 	je	.Ltmp1559 # Offset: 661
.Ltmp1563:
    0000029b: 	movq	-0x20(%rax), %rbp
    0000029f: 	callq	clock@PLT # Offset: 671
    000002a4: 	movq	%rax, end_time(%rip)
    000002ab: 	movq	0x18(%rsp), %rdx
    000002b0: 	subq	%fs:0x28, %rdx
    000002b9: 	jne	.Ltmp1560 # Offset: 697
    000002bf: 	subq	start_time(%rip), %rax
    000002c6: 	pxor	%xmm0, %xmm0
    000002ca: 	movq	%rbp, %rdi
    000002cd: 	cvtsi2sd	%rax, %xmm0
    000002d2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002da: 	addq	$0x28, %rsp
    000002de: 	popq	%rbx
    000002df: 	popq	%rbp
    000002e0: 	popq	%r12
    000002e2: 	popq	%r13
    000002e4: 	popq	%r14
    000002e6: 	popq	%r15
    000002e8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 744
.Ltmp1546:
    000002ed: 	xorl	%edx, %edx
    000002ef: 	xorl	%eax, %eax
    000002f1: 	jmp	.Ltmp1561 # Offset: 753
.Ltmp1557:
    000002f6: 	movq	%rbx, %rdi
    000002f9: 	leaq	0x10(%rsp), %rsi
    000002fe: 	xorl	%edx, %edx
    00000300: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 768
    00000305: 	movq	%rax, (%rbx)
    00000308: 	movq	%rax, %rdi
    0000030b: 	movq	0x10(%rsp), %rax
    00000310: 	movq	%rax, 0x10(%rbx)
.Ltmp1564:
    00000314: 	movq	%r12, %rdx
    00000317: 	movq	%rbp, %rsi
    0000031a: 	callq	memcpy@PLT # Offset: 794
    0000031f: 	movq	0x10(%rsp), %r12
    00000324: 	movq	(%rbx), %rdi
    00000327: 	jmp	.Ltmp1562 # Offset: 807
.Ltmp1554:
    0000032c: 	movq	0x8(%rsp), %rsi
    00000331: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000338: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 824
    0000033d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000344: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000352: 	jne	.Ltmp1563 # Offset: 850
.Ltmp1559:
    00000358: 	movq	-0x8(%rdx), %rax
    0000035c: 	addq	$0x200, %rax
    00000362: 	jmp	.Ltmp1563 # Offset: 866
.Ltmp1558:
    00000367: 	testq	%r12, %r12
    0000036a: 	je	.Ltmp1562 # Offset: 874
    00000370: 	jmp	.Ltmp1564 # Offset: 880
.Ltmp1560:
    00000372: 	callq	__stack_chk_fail@PLT # Offset: 882
.Ltmp1556:
    00000377: 	leaq	DATAat0x57008(%rip), %rdi
    0000037e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 894
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi14and_remainder2IiLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs13and_remainderIsLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 133
  State       : disassembled
  Address     : 0x12d10
  Size        : 0x453
  MaxSize     : 0x460
  Offset      : 0x12d10
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs13and_remainderIsLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0132:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp1565 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57e20(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57e30(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1578:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp1566 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1567 # Offset: 160
    000000a6: 	pxor	%xmm1, %xmm1
    000000aa: 	movq	%r14, %rax
    000000ad: 	movdqa	%xmm1, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp1568:
    000000b8: 	movdqu	(%rax), %xmm3
    000000bc: 	movdqu	(%rax), %xmm8
    000000c1: 	movdqa	%xmm4, %xmm2
    000000c5: 	addq	$0x10, %rax
    000000c9: 	pand	%xmm6, %xmm3
    000000cd: 	pcmpgtw	%xmm8, %xmm2
    000000d2: 	movdqa	%xmm3, %xmm0
    000000d6: 	pcmpeqw	%xmm4, %xmm0
    000000da: 	pcmpeqw	%xmm4, %xmm0
    000000de: 	pand	%xmm2, %xmm0
    000000e2: 	movdqa	%xmm3, %xmm2
    000000e6: 	paddw	%xmm5, %xmm2
    000000ea: 	pand	%xmm0, %xmm2
    000000ee: 	pandn	%xmm3, %xmm0
    000000f2: 	por	%xmm2, %xmm0
    000000f6: 	paddw	%xmm0, %xmm1
    000000fa: 	cmpq	%r15, %rax
    000000fd: 	jne	.Ltmp1568 # Offset: 253
    000000ff: 	movdqa	%xmm1, %xmm0
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddw	%xmm0, %xmm1
    0000010c: 	movdqa	%xmm1, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddw	%xmm0, %xmm1
    00000119: 	movdqa	%xmm1, %xmm0
    0000011d: 	psrldq	$0x2, %xmm0
    00000122: 	paddw	%xmm0, %xmm1
    00000126: 	pextrw	$0x0, %xmm1, %eax
    0000012b: 	cmpl	%r13d, %ebx
    0000012e: 	je	.Ltmp1566 # Offset: 302
    00000134: 	movl	%ebx, %edx
.Ltmp1586:
    00000136: 	movslq	%edx, %rcx
    00000139: 	movzwl	(%r14,%rcx,2), %edi
    0000013e: 	leaq	(%rcx,%rcx), %rsi
    00000142: 	movl	%edi, %ecx
    00000144: 	andl	$0x1f, %ecx
    00000147: 	testw	%di, %di
    0000014a: 	jns	.Ltmp1569 # Offset: 330
    0000014c: 	testw	%cx, %cx
    0000014f: 	leal	-0x20(%rcx), %edi
    00000152: 	setne	%r8b
    00000156: 	testb	%r8b, %r8b
    00000159: 	cmovnel	%edi, %ecx
.Ltmp1569:
    0000015c: 	addl	%eax, %ecx
    0000015e: 	leal	0x1(%rdx), %edi
    00000161: 	movl	%ecx, %eax
    00000163: 	cmpl	%edi, %r13d
    00000166: 	jle	.Ltmp1566 # Offset: 358
    0000016c: 	movzwl	0x2(%r14,%rsi), %edi
    00000172: 	movl	%edi, %eax
    00000174: 	andw	$0x1f, %ax
    00000178: 	je	.Ltmp1570 # Offset: 376
    0000017a: 	leal	-0x20(%rax), %r8d
    0000017e: 	testw	%di, %di
    00000181: 	cmovsl	%r8d, %eax
.Ltmp1570:
    00000185: 	addl	%eax, %ecx
    00000187: 	leal	0x2(%rdx), %edi
    0000018a: 	movl	%ecx, %eax
    0000018c: 	cmpl	%edi, %r13d
    0000018f: 	jle	.Ltmp1566 # Offset: 399
    00000195: 	movzwl	0x4(%r14,%rsi), %edi
    0000019b: 	movl	%edi, %eax
    0000019d: 	andl	$0x1f, %eax
    000001a0: 	testw	%di, %di
    000001a3: 	jns	.Ltmp1571 # Offset: 419
    000001a5: 	testw	%ax, %ax
    000001a8: 	leal	-0x20(%rax), %edi
    000001ab: 	setne	%r8b
    000001af: 	testb	%r8b, %r8b
    000001b2: 	cmovnel	%edi, %eax
.Ltmp1571:
    000001b5: 	addl	%eax, %ecx
    000001b7: 	leal	0x3(%rdx), %edi
    000001ba: 	movl	%ecx, %eax
    000001bc: 	cmpl	%edi, %r13d
    000001bf: 	jle	.Ltmp1566 # Offset: 447
    000001c5: 	movzwl	0x6(%r14,%rsi), %edi
    000001cb: 	movl	%edi, %eax
    000001cd: 	andl	$0x1f, %eax
    000001d0: 	testw	%di, %di
    000001d3: 	jns	.Ltmp1572 # Offset: 467
    000001d5: 	testw	%ax, %ax
    000001d8: 	leal	-0x20(%rax), %edi
    000001db: 	setne	%r8b
    000001df: 	testb	%r8b, %r8b
    000001e2: 	cmovnel	%edi, %eax
.Ltmp1572:
    000001e5: 	addl	%eax, %ecx
    000001e7: 	leal	0x4(%rdx), %edi
    000001ea: 	movl	%ecx, %eax
    000001ec: 	cmpl	%edi, %r13d
    000001ef: 	jle	.Ltmp1566 # Offset: 495
    000001f1: 	movzwl	0x8(%r14,%rsi), %edi
    000001f7: 	movl	%edi, %eax
    000001f9: 	andl	$0x1f, %eax
    000001fc: 	testw	%di, %di
    000001ff: 	jns	.Ltmp1573 # Offset: 511
    00000201: 	testw	%ax, %ax
    00000204: 	leal	-0x20(%rax), %edi
    00000207: 	setne	%r8b
    0000020b: 	testb	%r8b, %r8b
    0000020e: 	cmovnel	%edi, %eax
.Ltmp1573:
    00000211: 	addl	%eax, %ecx
    00000213: 	leal	0x5(%rdx), %edi
    00000216: 	movl	%ecx, %eax
    00000218: 	cmpl	%edi, %r13d
    0000021b: 	jle	.Ltmp1566 # Offset: 539
    0000021d: 	movzwl	0xa(%r14,%rsi), %edi
    00000223: 	movl	%edi, %eax
    00000225: 	andl	$0x1f, %eax
    00000228: 	testw	%di, %di
    0000022b: 	jns	.Ltmp1574 # Offset: 555
    0000022d: 	testw	%ax, %ax
    00000230: 	leal	-0x20(%rax), %edi
    00000233: 	setne	%r8b
    00000237: 	testb	%r8b, %r8b
    0000023a: 	cmovnel	%edi, %eax
.Ltmp1574:
    0000023d: 	addl	%eax, %ecx
    0000023f: 	addl	$0x6, %edx
    00000242: 	movl	%ecx, %eax
    00000244: 	cmpl	%edx, %r13d
    00000247: 	jle	.Ltmp1566 # Offset: 583
    00000249: 	movzwl	0xc(%r14,%rsi), %edx
    0000024f: 	movl	%edx, %eax
    00000251: 	andw	$0x1f, %ax
    00000255: 	je	.Ltmp1575 # Offset: 597
    00000257: 	leal	-0x20(%rax), %esi
    0000025a: 	testw	%dx, %dx
    0000025d: 	cmovsl	%esi, %eax
.Ltmp1575:
    00000260: 	addl	%ecx, %eax
.Ltmp1566:
    00000262: 	cvttsd2si	%xmm7, %ecx
    00000266: 	movl	%ecx, %edx
    00000268: 	andl	$0x1f, %edx
    0000026b: 	testw	%cx, %cx
    0000026e: 	jns	.Ltmp1576 # Offset: 622
    00000270: 	testw	%dx, %dx
    00000273: 	leal	-0x20(%rdx), %ecx
    00000276: 	setne	%sil
    0000027a: 	testb	%sil, %sil
    0000027d: 	cmovnel	%ecx, %edx
.Ltmp1576:
    00000280: 	imulw	$0x1f40, %dx, %dx
    00000285: 	cmpw	%ax, %dx
    00000288: 	je	.Ltmp1577 # Offset: 648
    0000028a: 	movl	current_test(%rip), %edx
    00000290: 	movq	%rbp, %rsi
    00000293: 	movl	$0x1, %edi
    00000298: 	xorl	%eax, %eax
    0000029a: 	addl	$0x1, %r12d
    0000029e: 	callq	__printf_chk@PLT # Offset: 670
    000002a3: 	movl	iterations(%rip), %r9d
    000002aa: 	cmpl	%r9d, %r12d
    000002ad: 	jge	.Ltmp1565 # Offset: 685
    000002af: 	movsd	init_value(%rip), %xmm7
    000002b7: 	movdqa	DATAat0x57e20(%rip), %xmm6
    000002bf: 	movdqa	DATAat0x57e30(%rip), %xmm5
    000002c7: 	jmp	.Ltmp1578 # Offset: 711
    000002cc: 	nopl	(%rax) # Size: 4
.Ltmp1577:
    000002d0: 	addl	$0x1, %r12d
    000002d4: 	cmpl	%r9d, %r12d
    000002d7: 	jl	.Ltmp1578 # Offset: 727
.Ltmp1565:
    000002dd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002eb: 	subq	$0x20, %rax
    000002ef: 	cmpq	%rax, %rbx
    000002f2: 	je	.Ltmp1579 # Offset: 754
    000002f8: 	movq	0x8(%rsp), %rax
    000002fd: 	leaq	0x10(%rbx), %rdi
    00000301: 	movq	%rdi, (%rbx)
    00000304: 	movq	(%rax), %rbp
    00000307: 	movq	0x8(%rax), %r12
    0000030b: 	movq	%rbp, %rax
    0000030e: 	addq	%r12, %rax
    00000311: 	je	.Ltmp1580 # Offset: 785
    00000313: 	testq	%rbp, %rbp
    00000316: 	je	.Ltmp1581 # Offset: 790
.Ltmp1580:
    0000031c: 	movq	%r12, 0x10(%rsp)
    00000321: 	cmpq	$0xf, %r12
    00000325: 	ja	.Ltmp1582 # Offset: 805
    0000032b: 	cmpq	$0x1, %r12
    0000032f: 	jne	.Ltmp1583 # Offset: 815
    00000335: 	movzbl	(%rbp), %eax
    00000339: 	movb	%al, 0x10(%rbx)
.Ltmp1587:
    0000033c: 	movq	%r12, 0x8(%rbx)
    00000340: 	movb	$0x0, (%rdi,%r12)
    00000345: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000034c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000353: 	addq	$0x20, %rax
    00000357: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000035e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000365: 	je	.Ltmp1584 # Offset: 869
.Ltmp1588:
    0000036b: 	movq	-0x20(%rax), %rbp
    0000036f: 	callq	clock@PLT # Offset: 879
    00000374: 	movq	%rax, end_time(%rip)
    0000037b: 	movq	0x18(%rsp), %rdx
    00000380: 	subq	%fs:0x28, %rdx
    00000389: 	jne	.Ltmp1585 # Offset: 905
    0000038f: 	subq	start_time(%rip), %rax
    00000396: 	pxor	%xmm0, %xmm0
    0000039a: 	movq	%rbp, %rdi
    0000039d: 	cvtsi2sd	%rax, %xmm0
    000003a2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003aa: 	addq	$0x28, %rsp
    000003ae: 	popq	%rbx
    000003af: 	popq	%rbp
    000003b0: 	popq	%r12
    000003b2: 	popq	%r13
    000003b4: 	popq	%r14
    000003b6: 	popq	%r15
    000003b8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 952
.Ltmp1567:
    000003bd: 	xorl	%edx, %edx
    000003bf: 	xorl	%eax, %eax
    000003c1: 	jmp	.Ltmp1586 # Offset: 961
.Ltmp1582:
    000003c6: 	movq	%rbx, %rdi
    000003c9: 	leaq	0x10(%rsp), %rsi
    000003ce: 	xorl	%edx, %edx
    000003d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 976
    000003d5: 	movq	%rax, (%rbx)
    000003d8: 	movq	%rax, %rdi
    000003db: 	movq	0x10(%rsp), %rax
    000003e0: 	movq	%rax, 0x10(%rbx)
.Ltmp1589:
    000003e4: 	movq	%r12, %rdx
    000003e7: 	movq	%rbp, %rsi
    000003ea: 	callq	memcpy@PLT # Offset: 1002
    000003ef: 	movq	0x10(%rsp), %r12
    000003f4: 	movq	(%rbx), %rdi
    000003f7: 	jmp	.Ltmp1587 # Offset: 1015
.Ltmp1579:
    000003fc: 	movq	0x8(%rsp), %rsi
    00000401: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000408: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1032
    0000040d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000414: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000041b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000422: 	jne	.Ltmp1588 # Offset: 1058
.Ltmp1584:
    00000428: 	movq	-0x8(%rdx), %rax
    0000042c: 	addq	$0x200, %rax
    00000432: 	jmp	.Ltmp1588 # Offset: 1074
.Ltmp1583:
    00000437: 	testq	%r12, %r12
    0000043a: 	je	.Ltmp1587 # Offset: 1082
    00000440: 	jmp	.Ltmp1589 # Offset: 1088
.Ltmp1585:
    00000442: 	callq	__stack_chk_fail@PLT # Offset: 1090
.Ltmp1581:
    00000447: 	leaq	DATAat0x57008(%rip), %rdi
    0000044e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1102
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs13and_remainderIsLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl14and_remainder2IlLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 134
  State       : disassembled
  Address     : 0x13170
  Size        : 0x270
  MaxSize     : 0x270
  Offset      : 0x13170
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl14and_remainder2IlLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0133:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp1590 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1596:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp1591 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1593:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0xf, %eax
    00000081: 	je	.Ltmp1592 # Offset: 129
    00000083: 	leaq	-0x10(%rax), %rdi
    00000087: 	testq	%rcx, %rcx
    0000008a: 	cmovsq	%rdi, %rax
.Ltmp1592:
    0000008e: 	addq	$0x8, %rdx
    00000092: 	addq	%rax, %rsi
    00000095: 	cmpq	%rdx, %r13
    00000098: 	jne	.Ltmp1593 # Offset: 152
.Ltmp1591:
    0000009a: 	cvttsd2si	%xmm0, %rdx
    0000009f: 	movq	%rdx, %rax
    000000a2: 	andl	$0xf, %eax
    000000a5: 	testq	%rdx, %rdx
    000000a8: 	jns	.Ltmp1594 # Offset: 168
    000000aa: 	testq	%rax, %rax
    000000ad: 	leaq	-0x10(%rax), %rdx
    000000b1: 	setne	%cl
    000000b4: 	testb	%cl, %cl
    000000b6: 	cmovneq	%rdx, %rax
.Ltmp1594:
    000000ba: 	imulq	$0x1f40, %rax, %rax
    000000c1: 	cmpq	%rsi, %rax
    000000c4: 	je	.Ltmp1595 # Offset: 196
    000000c6: 	movl	current_test(%rip), %edx
    000000cc: 	movq	%rbp, %rsi
    000000cf: 	movl	$0x1, %edi
    000000d4: 	xorl	%eax, %eax
    000000d6: 	addl	$0x1, %r14d
    000000da: 	callq	__printf_chk@PLT # Offset: 218
    000000df: 	movl	iterations(%rip), %r8d
    000000e6: 	cmpl	%r14d, %r8d
    000000e9: 	jle	.Ltmp1590 # Offset: 233
    000000eb: 	movsd	init_value(%rip), %xmm0
    000000f3: 	jmp	.Ltmp1596 # Offset: 243
    000000f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1595:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%r8d, %r14d
    00000107: 	jl	.Ltmp1596 # Offset: 263
.Ltmp1590:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp1597 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	%rdi, (%rbx)
    0000012f: 	movq	(%r12), %rbp
    00000133: 	movq	0x8(%r12), %r12
    00000138: 	movq	%rbp, %rax
    0000013b: 	addq	%r12, %rax
    0000013e: 	je	.Ltmp1598 # Offset: 318
    00000140: 	testq	%rbp, %rbp
    00000143: 	je	.Ltmp1599 # Offset: 323
.Ltmp1598:
    00000149: 	movq	%r12, (%rsp)
    0000014d: 	cmpq	$0xf, %r12
    00000151: 	ja	.Ltmp1600 # Offset: 337
    00000157: 	cmpq	$0x1, %r12
    0000015b: 	jne	.Ltmp1601 # Offset: 347
    00000161: 	movzbl	(%rbp), %eax
    00000165: 	movb	%al, 0x10(%rbx)
.Ltmp1604:
    00000168: 	movq	%r12, 0x8(%rbx)
    0000016c: 	movb	$0x0, (%rdi,%r12)
    00000171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000178: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017f: 	addq	$0x20, %rax
    00000183: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000018a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000191: 	je	.Ltmp1602 # Offset: 401
.Ltmp1605:
    00000197: 	movq	-0x20(%rax), %rbp
    0000019b: 	callq	clock@PLT # Offset: 411
    000001a0: 	movq	%rax, end_time(%rip)
    000001a7: 	movq	0x8(%rsp), %rdx
    000001ac: 	subq	%fs:0x28, %rdx
    000001b5: 	jne	.Ltmp1603 # Offset: 437
    000001bb: 	subq	start_time(%rip), %rax
    000001c2: 	pxor	%xmm0, %xmm0
    000001c6: 	movq	%rbp, %rdi
    000001c9: 	cvtsi2sd	%rax, %xmm0
    000001ce: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d6: 	addq	$0x18, %rsp
    000001da: 	popq	%rbx
    000001db: 	popq	%rbp
    000001dc: 	popq	%r12
    000001de: 	popq	%r13
    000001e0: 	popq	%r14
    000001e2: 	popq	%r15
    000001e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 484
.Ltmp1600:
    000001e9: 	movq	%rbx, %rdi
    000001ec: 	movq	%rsp, %rsi
    000001ef: 	xorl	%edx, %edx
    000001f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 497
    000001f6: 	movq	%rax, (%rbx)
    000001f9: 	movq	%rax, %rdi
    000001fc: 	movq	(%rsp), %rax
    00000200: 	movq	%rax, 0x10(%rbx)
.Ltmp1606:
    00000204: 	movq	%r12, %rdx
    00000207: 	movq	%rbp, %rsi
    0000020a: 	callq	memcpy@PLT # Offset: 522
    0000020f: 	movq	(%rsp), %r12
    00000213: 	movq	(%rbx), %rdi
    00000216: 	jmp	.Ltmp1604 # Offset: 534
.Ltmp1597:
    0000021b: 	movq	%r12, %rsi
    0000021e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000225: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 549
    0000022a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000231: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000238: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023f: 	jne	.Ltmp1605 # Offset: 575
.Ltmp1602:
    00000245: 	movq	-0x8(%rdx), %rax
    00000249: 	addq	$0x200, %rax
    0000024f: 	jmp	.Ltmp1605 # Offset: 591
.Ltmp1601:
    00000254: 	testq	%r12, %r12
    00000257: 	je	.Ltmp1604 # Offset: 599
    0000025d: 	jmp	.Ltmp1606 # Offset: 605
.Ltmp1603:
    0000025f: 	callq	__stack_chk_fail@PLT # Offset: 607
.Ltmp1599:
    00000264: 	leaq	DATAat0x57008(%rip), %rdi
    0000026b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 619
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl14and_remainder2IlLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi13and_remainderIiLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 135
  State       : disassembled
  Address     : 0x133e0
  Size        : 0x383
  MaxSize     : 0x390
  Offset      : 0x133e0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi13and_remainderIiLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0134:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1607 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57cd0(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57d70(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp1616:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp1608 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1609 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp1610:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp1610 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp1608 # Offset: 288
.Ltmp1624:
    00000122: 	movslq	%edx, %rcx
    00000125: 	movl	(%r15,%rcx,4), %edi
    00000129: 	leaq	(,%rcx,4), %r8
    00000131: 	movl	%edi, %ecx
    00000133: 	andl	$0x3, %ecx
    00000136: 	testl	%edi, %edi
    00000138: 	jns	.Ltmp1611 # Offset: 312
    0000013a: 	testl	%ecx, %ecx
    0000013c: 	leal	-0x4(%rcx), %edi
    0000013f: 	setne	%r9b
    00000143: 	testb	%r9b, %r9b
    00000146: 	cmovnel	%edi, %ecx
.Ltmp1611:
    00000149: 	addl	%ecx, %eax
    0000014b: 	leal	0x1(%rdx), %ecx
    0000014e: 	cmpl	%ecx, %r14d
    00000151: 	jle	.Ltmp1608 # Offset: 337
    00000153: 	movl	0x4(%r15,%r8), %edi
    00000158: 	movl	%edi, %ecx
    0000015a: 	andl	$0x3, %ecx
    0000015d: 	testl	%edi, %edi
    0000015f: 	jns	.Ltmp1612 # Offset: 351
    00000161: 	testl	%ecx, %ecx
    00000163: 	leal	-0x4(%rcx), %edi
    00000166: 	setne	%r9b
    0000016a: 	testb	%r9b, %r9b
    0000016d: 	cmovnel	%edi, %ecx
.Ltmp1612:
    00000170: 	addl	$0x2, %edx
    00000173: 	addl	%ecx, %eax
    00000175: 	cmpl	%edx, %r14d
    00000178: 	jle	.Ltmp1608 # Offset: 376
    0000017a: 	movl	0x8(%r15,%r8), %ecx
    0000017f: 	movl	%ecx, %edx
    00000181: 	andl	$0x3, %edx
    00000184: 	je	.Ltmp1613 # Offset: 388
    00000186: 	leal	-0x4(%rdx), %edi
    00000189: 	testl	%ecx, %ecx
    0000018b: 	cmovsl	%edi, %edx
.Ltmp1613:
    0000018e: 	addl	%edx, %eax
.Ltmp1608:
    00000190: 	cvttsd2si	%xmm7, %ecx
    00000194: 	movl	%ecx, %edx
    00000196: 	andl	$0x3, %edx
    00000199: 	testl	%ecx, %ecx
    0000019b: 	jns	.Ltmp1614 # Offset: 411
    0000019d: 	testl	%edx, %edx
    0000019f: 	leal	-0x4(%rdx), %ecx
    000001a2: 	setne	%dil
    000001a6: 	testb	%dil, %dil
    000001a9: 	cmovnel	%ecx, %edx
.Ltmp1614:
    000001ac: 	imull	$0x1f40, %edx, %edx
    000001b2: 	cmpl	%eax, %edx
    000001b4: 	je	.Ltmp1615 # Offset: 436
    000001b6: 	movl	current_test(%rip), %edx
    000001bc: 	movq	%rbp, %rsi
    000001bf: 	movl	$0x1, %edi
    000001c4: 	xorl	%eax, %eax
    000001c6: 	addl	$0x1, %r12d
    000001ca: 	callq	__printf_chk@PLT # Offset: 458
    000001cf: 	movl	iterations(%rip), %esi
    000001d5: 	cmpl	%esi, %r12d
    000001d8: 	jge	.Ltmp1607 # Offset: 472
    000001da: 	movsd	init_value(%rip), %xmm7
    000001e2: 	movdqa	DATAat0x57cd0(%rip), %xmm6
    000001ea: 	movdqa	DATAat0x57d70(%rip), %xmm5
    000001f2: 	jmp	.Ltmp1616 # Offset: 498
    000001f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1615:
    00000200: 	addl	$0x1, %r12d
    00000204: 	cmpl	%esi, %r12d
    00000207: 	jl	.Ltmp1616 # Offset: 519
.Ltmp1607:
    0000020d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000214: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000021b: 	subq	$0x20, %rax
    0000021f: 	cmpq	%rax, %rbx
    00000222: 	je	.Ltmp1617 # Offset: 546
    00000228: 	movq	0x8(%rsp), %rax
    0000022d: 	leaq	0x10(%rbx), %rdi
    00000231: 	movq	%rdi, (%rbx)
    00000234: 	movq	(%rax), %rbp
    00000237: 	movq	0x8(%rax), %r12
    0000023b: 	movq	%rbp, %rax
    0000023e: 	addq	%r12, %rax
    00000241: 	je	.Ltmp1618 # Offset: 577
    00000243: 	testq	%rbp, %rbp
    00000246: 	je	.Ltmp1619 # Offset: 582
.Ltmp1618:
    0000024c: 	movq	%r12, 0x10(%rsp)
    00000251: 	cmpq	$0xf, %r12
    00000255: 	ja	.Ltmp1620 # Offset: 597
    0000025b: 	cmpq	$0x1, %r12
    0000025f: 	jne	.Ltmp1621 # Offset: 607
    00000265: 	movzbl	(%rbp), %eax
    00000269: 	movb	%al, 0x10(%rbx)
.Ltmp1625:
    0000026c: 	movq	%r12, 0x8(%rbx)
    00000270: 	movb	$0x0, (%rdi,%r12)
    00000275: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000027c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000283: 	addq	$0x20, %rax
    00000287: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000295: 	je	.Ltmp1622 # Offset: 661
.Ltmp1626:
    0000029b: 	movq	-0x20(%rax), %rbp
    0000029f: 	callq	clock@PLT # Offset: 671
    000002a4: 	movq	%rax, end_time(%rip)
    000002ab: 	movq	0x18(%rsp), %rdx
    000002b0: 	subq	%fs:0x28, %rdx
    000002b9: 	jne	.Ltmp1623 # Offset: 697
    000002bf: 	subq	start_time(%rip), %rax
    000002c6: 	pxor	%xmm0, %xmm0
    000002ca: 	movq	%rbp, %rdi
    000002cd: 	cvtsi2sd	%rax, %xmm0
    000002d2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002da: 	addq	$0x28, %rsp
    000002de: 	popq	%rbx
    000002df: 	popq	%rbp
    000002e0: 	popq	%r12
    000002e2: 	popq	%r13
    000002e4: 	popq	%r14
    000002e6: 	popq	%r15
    000002e8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 744
.Ltmp1609:
    000002ed: 	xorl	%edx, %edx
    000002ef: 	xorl	%eax, %eax
    000002f1: 	jmp	.Ltmp1624 # Offset: 753
.Ltmp1620:
    000002f6: 	movq	%rbx, %rdi
    000002f9: 	leaq	0x10(%rsp), %rsi
    000002fe: 	xorl	%edx, %edx
    00000300: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 768
    00000305: 	movq	%rax, (%rbx)
    00000308: 	movq	%rax, %rdi
    0000030b: 	movq	0x10(%rsp), %rax
    00000310: 	movq	%rax, 0x10(%rbx)
.Ltmp1627:
    00000314: 	movq	%r12, %rdx
    00000317: 	movq	%rbp, %rsi
    0000031a: 	callq	memcpy@PLT # Offset: 794
    0000031f: 	movq	0x10(%rsp), %r12
    00000324: 	movq	(%rbx), %rdi
    00000327: 	jmp	.Ltmp1625 # Offset: 807
.Ltmp1617:
    0000032c: 	movq	0x8(%rsp), %rsi
    00000331: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000338: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 824
    0000033d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000344: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000352: 	jne	.Ltmp1626 # Offset: 850
.Ltmp1622:
    00000358: 	movq	-0x8(%rdx), %rax
    0000035c: 	addq	$0x200, %rax
    00000362: 	jmp	.Ltmp1626 # Offset: 866
.Ltmp1621:
    00000367: 	testq	%r12, %r12
    0000036a: 	je	.Ltmp1625 # Offset: 874
    00000370: 	jmp	.Ltmp1627 # Offset: 880
.Ltmp1623:
    00000372: 	callq	__stack_chk_fail@PLT # Offset: 882
.Ltmp1619:
    00000377: 	leaq	DATAat0x57008(%rip), %rdi
    0000037e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 894
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi13and_remainderIiLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi14and_remainder2IiLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 136
  State       : disassembled
  Address     : 0x13770
  Size        : 0x383
  MaxSize     : 0x390
  Offset      : 0x13770
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi14and_remainder2IiLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0135:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1628 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57e40(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57d30(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp1637:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp1629 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1630 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp1631:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp1631 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp1629 # Offset: 288
.Ltmp1645:
    00000122: 	movslq	%edx, %rcx
    00000125: 	movl	(%r15,%rcx,4), %edi
    00000129: 	leaq	(,%rcx,4), %r8
    00000131: 	movl	%edi, %ecx
    00000133: 	andl	$0x3f, %ecx
    00000136: 	testl	%edi, %edi
    00000138: 	jns	.Ltmp1632 # Offset: 312
    0000013a: 	testl	%ecx, %ecx
    0000013c: 	leal	-0x40(%rcx), %edi
    0000013f: 	setne	%r9b
    00000143: 	testb	%r9b, %r9b
    00000146: 	cmovnel	%edi, %ecx
.Ltmp1632:
    00000149: 	addl	%ecx, %eax
    0000014b: 	leal	0x1(%rdx), %ecx
    0000014e: 	cmpl	%ecx, %r14d
    00000151: 	jle	.Ltmp1629 # Offset: 337
    00000153: 	movl	0x4(%r15,%r8), %edi
    00000158: 	movl	%edi, %ecx
    0000015a: 	andl	$0x3f, %ecx
    0000015d: 	testl	%edi, %edi
    0000015f: 	jns	.Ltmp1633 # Offset: 351
    00000161: 	testl	%ecx, %ecx
    00000163: 	leal	-0x40(%rcx), %edi
    00000166: 	setne	%r9b
    0000016a: 	testb	%r9b, %r9b
    0000016d: 	cmovnel	%edi, %ecx
.Ltmp1633:
    00000170: 	addl	$0x2, %edx
    00000173: 	addl	%ecx, %eax
    00000175: 	cmpl	%edx, %r14d
    00000178: 	jle	.Ltmp1629 # Offset: 376
    0000017a: 	movl	0x8(%r15,%r8), %ecx
    0000017f: 	movl	%ecx, %edx
    00000181: 	andl	$0x3f, %edx
    00000184: 	je	.Ltmp1634 # Offset: 388
    00000186: 	leal	-0x40(%rdx), %edi
    00000189: 	testl	%ecx, %ecx
    0000018b: 	cmovsl	%edi, %edx
.Ltmp1634:
    0000018e: 	addl	%edx, %eax
.Ltmp1629:
    00000190: 	cvttsd2si	%xmm7, %ecx
    00000194: 	movl	%ecx, %edx
    00000196: 	andl	$0x3f, %edx
    00000199: 	testl	%ecx, %ecx
    0000019b: 	jns	.Ltmp1635 # Offset: 411
    0000019d: 	testl	%edx, %edx
    0000019f: 	leal	-0x40(%rdx), %ecx
    000001a2: 	setne	%dil
    000001a6: 	testb	%dil, %dil
    000001a9: 	cmovnel	%ecx, %edx
.Ltmp1635:
    000001ac: 	imull	$0x1f40, %edx, %edx
    000001b2: 	cmpl	%eax, %edx
    000001b4: 	je	.Ltmp1636 # Offset: 436
    000001b6: 	movl	current_test(%rip), %edx
    000001bc: 	movq	%rbp, %rsi
    000001bf: 	movl	$0x1, %edi
    000001c4: 	xorl	%eax, %eax
    000001c6: 	addl	$0x1, %r12d
    000001ca: 	callq	__printf_chk@PLT # Offset: 458
    000001cf: 	movl	iterations(%rip), %esi
    000001d5: 	cmpl	%esi, %r12d
    000001d8: 	jge	.Ltmp1628 # Offset: 472
    000001da: 	movsd	init_value(%rip), %xmm7
    000001e2: 	movdqa	DATAat0x57e40(%rip), %xmm6
    000001ea: 	movdqa	DATAat0x57d30(%rip), %xmm5
    000001f2: 	jmp	.Ltmp1637 # Offset: 498
    000001f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1636:
    00000200: 	addl	$0x1, %r12d
    00000204: 	cmpl	%esi, %r12d
    00000207: 	jl	.Ltmp1637 # Offset: 519
.Ltmp1628:
    0000020d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000214: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000021b: 	subq	$0x20, %rax
    0000021f: 	cmpq	%rax, %rbx
    00000222: 	je	.Ltmp1638 # Offset: 546
    00000228: 	movq	0x8(%rsp), %rax
    0000022d: 	leaq	0x10(%rbx), %rdi
    00000231: 	movq	%rdi, (%rbx)
    00000234: 	movq	(%rax), %rbp
    00000237: 	movq	0x8(%rax), %r12
    0000023b: 	movq	%rbp, %rax
    0000023e: 	addq	%r12, %rax
    00000241: 	je	.Ltmp1639 # Offset: 577
    00000243: 	testq	%rbp, %rbp
    00000246: 	je	.Ltmp1640 # Offset: 582
.Ltmp1639:
    0000024c: 	movq	%r12, 0x10(%rsp)
    00000251: 	cmpq	$0xf, %r12
    00000255: 	ja	.Ltmp1641 # Offset: 597
    0000025b: 	cmpq	$0x1, %r12
    0000025f: 	jne	.Ltmp1642 # Offset: 607
    00000265: 	movzbl	(%rbp), %eax
    00000269: 	movb	%al, 0x10(%rbx)
.Ltmp1646:
    0000026c: 	movq	%r12, 0x8(%rbx)
    00000270: 	movb	$0x0, (%rdi,%r12)
    00000275: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000027c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000283: 	addq	$0x20, %rax
    00000287: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000295: 	je	.Ltmp1643 # Offset: 661
.Ltmp1647:
    0000029b: 	movq	-0x20(%rax), %rbp
    0000029f: 	callq	clock@PLT # Offset: 671
    000002a4: 	movq	%rax, end_time(%rip)
    000002ab: 	movq	0x18(%rsp), %rdx
    000002b0: 	subq	%fs:0x28, %rdx
    000002b9: 	jne	.Ltmp1644 # Offset: 697
    000002bf: 	subq	start_time(%rip), %rax
    000002c6: 	pxor	%xmm0, %xmm0
    000002ca: 	movq	%rbp, %rdi
    000002cd: 	cvtsi2sd	%rax, %xmm0
    000002d2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002da: 	addq	$0x28, %rsp
    000002de: 	popq	%rbx
    000002df: 	popq	%rbp
    000002e0: 	popq	%r12
    000002e2: 	popq	%r13
    000002e4: 	popq	%r14
    000002e6: 	popq	%r15
    000002e8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 744
.Ltmp1630:
    000002ed: 	xorl	%edx, %edx
    000002ef: 	xorl	%eax, %eax
    000002f1: 	jmp	.Ltmp1645 # Offset: 753
.Ltmp1641:
    000002f6: 	movq	%rbx, %rdi
    000002f9: 	leaq	0x10(%rsp), %rsi
    000002fe: 	xorl	%edx, %edx
    00000300: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 768
    00000305: 	movq	%rax, (%rbx)
    00000308: 	movq	%rax, %rdi
    0000030b: 	movq	0x10(%rsp), %rax
    00000310: 	movq	%rax, 0x10(%rbx)
.Ltmp1648:
    00000314: 	movq	%r12, %rdx
    00000317: 	movq	%rbp, %rsi
    0000031a: 	callq	memcpy@PLT # Offset: 794
    0000031f: 	movq	0x10(%rsp), %r12
    00000324: 	movq	(%rbx), %rdi
    00000327: 	jmp	.Ltmp1646 # Offset: 807
.Ltmp1638:
    0000032c: 	movq	0x8(%rsp), %rsi
    00000331: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000338: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 824
    0000033d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000344: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000352: 	jne	.Ltmp1647 # Offset: 850
.Ltmp1643:
    00000358: 	movq	-0x8(%rdx), %rax
    0000035c: 	addq	$0x200, %rax
    00000362: 	jmp	.Ltmp1647 # Offset: 866
.Ltmp1642:
    00000367: 	testq	%r12, %r12
    0000036a: 	je	.Ltmp1646 # Offset: 874
    00000370: 	jmp	.Ltmp1648 # Offset: 880
.Ltmp1644:
    00000372: 	callq	__stack_chk_fail@PLT # Offset: 882
.Ltmp1640:
    00000377: 	leaq	DATAat0x57008(%rip), %rdi
    0000037e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 894
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi14and_remainder2IiLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs14and_remainder2IsLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 137
  State       : disassembled
  Address     : 0x13b00
  Size        : 0x4f3
  MaxSize     : 0x500
  Offset      : 0x13b00
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs14and_remainder2IsLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0136:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp1649 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57cc0(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57d30(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1662:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp1650 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1651 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r14, %rax
    000000ad: 	pxor	%xmm2, %xmm2
    000000b1: 	movdqa	%xmm3, %xmm4
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp1652:
    000000b8: 	movdqu	(%rax), %xmm8
    000000bd: 	movdqa	%xmm4, %xmm0
    000000c1: 	movdqu	(%rax), %xmm12
    000000c6: 	movdqa	%xmm4, %xmm11
    000000cb: 	addq	$0x10, %rax
    000000cf: 	pand	%xmm6, %xmm8
    000000d4: 	pcmpgtw	%xmm8, %xmm0
    000000d9: 	movdqa	%xmm8, %xmm9
    000000de: 	punpcklwd	%xmm0, %xmm9
    000000e3: 	punpckhwd	%xmm0, %xmm8
    000000e8: 	movdqa	%xmm8, %xmm1
    000000ed: 	movdqa	%xmm9, %xmm0
    000000f2: 	pcmpeqd	%xmm2, %xmm0
    000000f6: 	pcmpeqd	%xmm2, %xmm1
    000000fa: 	pcmpeqd	%xmm2, %xmm0
    000000fe: 	pcmpeqd	%xmm2, %xmm1
    00000102: 	movdqa	%xmm0, %xmm10
    00000107: 	punpcklwd	%xmm1, %xmm0
    0000010b: 	punpckhwd	%xmm1, %xmm10
    00000110: 	movdqa	%xmm0, %xmm1
    00000114: 	punpckhwd	%xmm10, %xmm1
    00000119: 	punpcklwd	%xmm10, %xmm0
    0000011e: 	movdqa	%xmm5, %xmm10
    00000123: 	punpcklwd	%xmm1, %xmm0
    00000127: 	movdqa	%xmm4, %xmm1
    0000012b: 	paddd	%xmm9, %xmm10
    00000130: 	pcmpgtw	%xmm12, %xmm1
    00000135: 	pand	%xmm1, %xmm0
    00000139: 	pcmpgtw	%xmm0, %xmm11
    0000013e: 	movdqa	%xmm0, %xmm1
    00000142: 	punpcklwd	%xmm11, %xmm1
    00000147: 	punpckhwd	%xmm11, %xmm0
    0000014c: 	pand	%xmm1, %xmm10
    00000151: 	pandn	%xmm9, %xmm1
    00000156: 	movdqa	%xmm5, %xmm9
    0000015b: 	paddd	%xmm8, %xmm9
    00000160: 	por	%xmm10, %xmm1
    00000165: 	pand	%xmm0, %xmm9
    0000016a: 	pandn	%xmm8, %xmm0
    0000016f: 	movdqa	%xmm1, %xmm8
    00000174: 	por	%xmm9, %xmm0
    00000179: 	punpcklwd	%xmm0, %xmm1
    0000017d: 	punpckhwd	%xmm0, %xmm8
    00000182: 	movdqa	%xmm1, %xmm0
    00000186: 	punpcklwd	%xmm8, %xmm1
    0000018b: 	punpckhwd	%xmm8, %xmm0
    00000190: 	punpcklwd	%xmm0, %xmm1
    00000194: 	paddw	%xmm1, %xmm3
    00000198: 	cmpq	%r15, %rax
    0000019b: 	jne	.Ltmp1652 # Offset: 411
    000001a1: 	movdqa	%xmm3, %xmm0
    000001a5: 	psrldq	$0x8, %xmm0
    000001aa: 	paddw	%xmm0, %xmm3
    000001ae: 	movdqa	%xmm3, %xmm0
    000001b2: 	psrldq	$0x4, %xmm0
    000001b7: 	paddw	%xmm0, %xmm3
    000001bb: 	movdqa	%xmm3, %xmm0
    000001bf: 	psrldq	$0x2, %xmm0
    000001c4: 	paddw	%xmm0, %xmm3
    000001c8: 	pextrw	$0x0, %xmm3, %eax
    000001cd: 	cmpl	%r13d, %ebx
    000001d0: 	je	.Ltmp1650 # Offset: 464
    000001d6: 	movl	%ebx, %edx
.Ltmp1670:
    000001d8: 	movslq	%edx, %rcx
    000001db: 	movzwl	(%r14,%rcx,2), %edi
    000001e0: 	leaq	(%rcx,%rcx), %rsi
    000001e4: 	movl	%edi, %ecx
    000001e6: 	andl	$0x3f, %ecx
    000001e9: 	testw	%di, %di
    000001ec: 	jns	.Ltmp1653 # Offset: 492
    000001ee: 	testl	%ecx, %ecx
    000001f0: 	leal	-0x40(%rcx), %edi
    000001f3: 	setne	%r8b
    000001f7: 	testb	%r8b, %r8b
    000001fa: 	cmovnel	%edi, %ecx
.Ltmp1653:
    000001fd: 	addl	%eax, %ecx
    000001ff: 	leal	0x1(%rdx), %edi
    00000202: 	movl	%ecx, %eax
    00000204: 	cmpl	%edi, %r13d
    00000207: 	jle	.Ltmp1650 # Offset: 519
    0000020d: 	movzwl	0x2(%r14,%rsi), %edi
    00000213: 	movl	%edi, %eax
    00000215: 	andl	$0x3f, %eax
    00000218: 	je	.Ltmp1654 # Offset: 536
    0000021a: 	leal	-0x40(%rax), %r8d
    0000021e: 	testw	%di, %di
    00000221: 	cmovsl	%r8d, %eax
.Ltmp1654:
    00000225: 	addl	%eax, %ecx
    00000227: 	leal	0x2(%rdx), %edi
    0000022a: 	movl	%ecx, %eax
    0000022c: 	cmpl	%edi, %r13d
    0000022f: 	jle	.Ltmp1650 # Offset: 559
    00000235: 	movzwl	0x4(%r14,%rsi), %edi
    0000023b: 	movl	%edi, %eax
    0000023d: 	andl	$0x3f, %eax
    00000240: 	testw	%di, %di
    00000243: 	jns	.Ltmp1655 # Offset: 579
    00000245: 	testl	%eax, %eax
    00000247: 	leal	-0x40(%rax), %edi
    0000024a: 	setne	%r8b
    0000024e: 	testb	%r8b, %r8b
    00000251: 	cmovnel	%edi, %eax
.Ltmp1655:
    00000254: 	addl	%eax, %ecx
    00000256: 	leal	0x3(%rdx), %edi
    00000259: 	movl	%ecx, %eax
    0000025b: 	cmpl	%edi, %r13d
    0000025e: 	jle	.Ltmp1650 # Offset: 606
    00000264: 	movzwl	0x6(%r14,%rsi), %edi
    0000026a: 	movl	%edi, %eax
    0000026c: 	andl	$0x3f, %eax
    0000026f: 	testw	%di, %di
    00000272: 	jns	.Ltmp1656 # Offset: 626
    00000274: 	testl	%eax, %eax
    00000276: 	leal	-0x40(%rax), %edi
    00000279: 	setne	%r8b
    0000027d: 	testb	%r8b, %r8b
    00000280: 	cmovnel	%edi, %eax
.Ltmp1656:
    00000283: 	addl	%eax, %ecx
    00000285: 	leal	0x4(%rdx), %edi
    00000288: 	movl	%ecx, %eax
    0000028a: 	cmpl	%edi, %r13d
    0000028d: 	jle	.Ltmp1650 # Offset: 653
    0000028f: 	movzwl	0x8(%r14,%rsi), %edi
    00000295: 	movl	%edi, %eax
    00000297: 	andl	$0x3f, %eax
    0000029a: 	testw	%di, %di
    0000029d: 	jns	.Ltmp1657 # Offset: 669
    0000029f: 	testl	%eax, %eax
    000002a1: 	leal	-0x40(%rax), %edi
    000002a4: 	setne	%r8b
    000002a8: 	testb	%r8b, %r8b
    000002ab: 	cmovnel	%edi, %eax
.Ltmp1657:
    000002ae: 	addl	%eax, %ecx
    000002b0: 	leal	0x5(%rdx), %edi
    000002b3: 	movl	%ecx, %eax
    000002b5: 	cmpl	%edi, %r13d
    000002b8: 	jle	.Ltmp1650 # Offset: 696
    000002ba: 	movzwl	0xa(%r14,%rsi), %edi
    000002c0: 	movl	%edi, %eax
    000002c2: 	andl	$0x3f, %eax
    000002c5: 	testw	%di, %di
    000002c8: 	jns	.Ltmp1658 # Offset: 712
    000002ca: 	testl	%eax, %eax
    000002cc: 	leal	-0x40(%rax), %edi
    000002cf: 	setne	%r8b
    000002d3: 	testb	%r8b, %r8b
    000002d6: 	cmovnel	%edi, %eax
.Ltmp1658:
    000002d9: 	addl	%eax, %ecx
    000002db: 	addl	$0x6, %edx
    000002de: 	movl	%ecx, %eax
    000002e0: 	cmpl	%edx, %r13d
    000002e3: 	jle	.Ltmp1650 # Offset: 739
    000002e5: 	movzwl	0xc(%r14,%rsi), %edx
    000002eb: 	movl	%edx, %eax
    000002ed: 	andl	$0x3f, %eax
    000002f0: 	je	.Ltmp1659 # Offset: 752
    000002f2: 	leal	-0x40(%rax), %esi
    000002f5: 	testw	%dx, %dx
    000002f8: 	cmovsl	%esi, %eax
.Ltmp1659:
    000002fb: 	addl	%ecx, %eax
.Ltmp1650:
    000002fd: 	cvttsd2si	%xmm7, %ecx
    00000301: 	movl	%ecx, %edx
    00000303: 	andl	$0x3f, %edx
    00000306: 	testw	%cx, %cx
    00000309: 	jns	.Ltmp1660 # Offset: 777
    0000030b: 	testl	%edx, %edx
    0000030d: 	leal	-0x40(%rdx), %ecx
    00000310: 	setne	%sil
    00000314: 	testb	%sil, %sil
    00000317: 	cmovnel	%ecx, %edx
.Ltmp1660:
    0000031a: 	imulw	$0x1f40, %dx, %dx
    0000031f: 	cmpw	%ax, %dx
    00000322: 	je	.Ltmp1661 # Offset: 802
    00000324: 	movl	current_test(%rip), %edx
    0000032a: 	movq	%rbp, %rsi
    0000032d: 	movl	$0x1, %edi
    00000332: 	xorl	%eax, %eax
    00000334: 	addl	$0x1, %r12d
    00000338: 	callq	__printf_chk@PLT # Offset: 824
    0000033d: 	movl	iterations(%rip), %r9d
    00000344: 	cmpl	%r9d, %r12d
    00000347: 	jge	.Ltmp1649 # Offset: 839
    00000349: 	movsd	init_value(%rip), %xmm7
    00000351: 	movdqa	DATAat0x57cc0(%rip), %xmm6
    00000359: 	movdqa	DATAat0x57d30(%rip), %xmm5
    00000361: 	jmp	.Ltmp1662 # Offset: 865
    00000366: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1661:
    00000370: 	addl	$0x1, %r12d
    00000374: 	cmpl	%r9d, %r12d
    00000377: 	jl	.Ltmp1662 # Offset: 887
.Ltmp1649:
    0000037d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000384: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000038b: 	subq	$0x20, %rax
    0000038f: 	cmpq	%rax, %rbx
    00000392: 	je	.Ltmp1663 # Offset: 914
    00000398: 	movq	0x8(%rsp), %rax
    0000039d: 	leaq	0x10(%rbx), %rdi
    000003a1: 	movq	%rdi, (%rbx)
    000003a4: 	movq	(%rax), %rbp
    000003a7: 	movq	0x8(%rax), %r12
    000003ab: 	movq	%rbp, %rax
    000003ae: 	addq	%r12, %rax
    000003b1: 	je	.Ltmp1664 # Offset: 945
    000003b3: 	testq	%rbp, %rbp
    000003b6: 	je	.Ltmp1665 # Offset: 950
.Ltmp1664:
    000003bc: 	movq	%r12, 0x10(%rsp)
    000003c1: 	cmpq	$0xf, %r12
    000003c5: 	ja	.Ltmp1666 # Offset: 965
    000003cb: 	cmpq	$0x1, %r12
    000003cf: 	jne	.Ltmp1667 # Offset: 975
    000003d5: 	movzbl	(%rbp), %eax
    000003d9: 	movb	%al, 0x10(%rbx)
.Ltmp1671:
    000003dc: 	movq	%r12, 0x8(%rbx)
    000003e0: 	movb	$0x0, (%rdi,%r12)
    000003e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003f3: 	addq	$0x20, %rax
    000003f7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003fe: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000405: 	je	.Ltmp1668 # Offset: 1029
.Ltmp1672:
    0000040b: 	movq	-0x20(%rax), %rbp
    0000040f: 	callq	clock@PLT # Offset: 1039
    00000414: 	movq	%rax, end_time(%rip)
    0000041b: 	movq	0x18(%rsp), %rdx
    00000420: 	subq	%fs:0x28, %rdx
    00000429: 	jne	.Ltmp1669 # Offset: 1065
    0000042f: 	subq	start_time(%rip), %rax
    00000436: 	pxor	%xmm0, %xmm0
    0000043a: 	movq	%rbp, %rdi
    0000043d: 	cvtsi2sd	%rax, %xmm0
    00000442: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000044a: 	addq	$0x28, %rsp
    0000044e: 	popq	%rbx
    0000044f: 	popq	%rbp
    00000450: 	popq	%r12
    00000452: 	popq	%r13
    00000454: 	popq	%r14
    00000456: 	popq	%r15
    00000458: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1112
.Ltmp1651:
    0000045d: 	xorl	%edx, %edx
    0000045f: 	xorl	%eax, %eax
    00000461: 	jmp	.Ltmp1670 # Offset: 1121
.Ltmp1666:
    00000466: 	movq	%rbx, %rdi
    00000469: 	leaq	0x10(%rsp), %rsi
    0000046e: 	xorl	%edx, %edx
    00000470: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1136
    00000475: 	movq	%rax, (%rbx)
    00000478: 	movq	%rax, %rdi
    0000047b: 	movq	0x10(%rsp), %rax
    00000480: 	movq	%rax, 0x10(%rbx)
.Ltmp1673:
    00000484: 	movq	%r12, %rdx
    00000487: 	movq	%rbp, %rsi
    0000048a: 	callq	memcpy@PLT # Offset: 1162
    0000048f: 	movq	0x10(%rsp), %r12
    00000494: 	movq	(%rbx), %rdi
    00000497: 	jmp	.Ltmp1671 # Offset: 1175
.Ltmp1663:
    0000049c: 	movq	0x8(%rsp), %rsi
    000004a1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000004a8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1192
    000004ad: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004b4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000004bb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004c2: 	jne	.Ltmp1672 # Offset: 1218
.Ltmp1668:
    000004c8: 	movq	-0x8(%rdx), %rax
    000004cc: 	addq	$0x200, %rax
    000004d2: 	jmp	.Ltmp1672 # Offset: 1234
.Ltmp1667:
    000004d7: 	testq	%r12, %r12
    000004da: 	je	.Ltmp1671 # Offset: 1242
    000004e0: 	jmp	.Ltmp1673 # Offset: 1248
.Ltmp1669:
    000004e2: 	callq	__stack_chk_fail@PLT # Offset: 1250
.Ltmp1665:
    000004e7: 	leaq	DATAat0x57008(%rip), %rdi
    000004ee: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1262
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs14and_remainder2IsLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl13and_remainderIlLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 138
  State       : disassembled
  Address     : 0x14000
  Size        : 0x270
  MaxSize     : 0x270
  Offset      : 0x14000
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl13and_remainderIlLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0137:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp1674 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1680:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp1675 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1677:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0xf, %eax
    00000081: 	je	.Ltmp1676 # Offset: 129
    00000083: 	leaq	-0x10(%rax), %rdi
    00000087: 	testq	%rcx, %rcx
    0000008a: 	cmovsq	%rdi, %rax
.Ltmp1676:
    0000008e: 	addq	$0x8, %rdx
    00000092: 	addq	%rax, %rsi
    00000095: 	cmpq	%rdx, %r13
    00000098: 	jne	.Ltmp1677 # Offset: 152
.Ltmp1675:
    0000009a: 	cvttsd2si	%xmm0, %rdx
    0000009f: 	movq	%rdx, %rax
    000000a2: 	andl	$0xf, %eax
    000000a5: 	testq	%rdx, %rdx
    000000a8: 	jns	.Ltmp1678 # Offset: 168
    000000aa: 	testq	%rax, %rax
    000000ad: 	leaq	-0x10(%rax), %rdx
    000000b1: 	setne	%cl
    000000b4: 	testb	%cl, %cl
    000000b6: 	cmovneq	%rdx, %rax
.Ltmp1678:
    000000ba: 	imulq	$0x1f40, %rax, %rax
    000000c1: 	cmpq	%rsi, %rax
    000000c4: 	je	.Ltmp1679 # Offset: 196
    000000c6: 	movl	current_test(%rip), %edx
    000000cc: 	movq	%rbp, %rsi
    000000cf: 	movl	$0x1, %edi
    000000d4: 	xorl	%eax, %eax
    000000d6: 	addl	$0x1, %r14d
    000000da: 	callq	__printf_chk@PLT # Offset: 218
    000000df: 	movl	iterations(%rip), %r8d
    000000e6: 	cmpl	%r14d, %r8d
    000000e9: 	jle	.Ltmp1674 # Offset: 233
    000000eb: 	movsd	init_value(%rip), %xmm0
    000000f3: 	jmp	.Ltmp1680 # Offset: 243
    000000f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1679:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%r8d, %r14d
    00000107: 	jl	.Ltmp1680 # Offset: 263
.Ltmp1674:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp1681 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	%rdi, (%rbx)
    0000012f: 	movq	(%r12), %rbp
    00000133: 	movq	0x8(%r12), %r12
    00000138: 	movq	%rbp, %rax
    0000013b: 	addq	%r12, %rax
    0000013e: 	je	.Ltmp1682 # Offset: 318
    00000140: 	testq	%rbp, %rbp
    00000143: 	je	.Ltmp1683 # Offset: 323
.Ltmp1682:
    00000149: 	movq	%r12, (%rsp)
    0000014d: 	cmpq	$0xf, %r12
    00000151: 	ja	.Ltmp1684 # Offset: 337
    00000157: 	cmpq	$0x1, %r12
    0000015b: 	jne	.Ltmp1685 # Offset: 347
    00000161: 	movzbl	(%rbp), %eax
    00000165: 	movb	%al, 0x10(%rbx)
.Ltmp1688:
    00000168: 	movq	%r12, 0x8(%rbx)
    0000016c: 	movb	$0x0, (%rdi,%r12)
    00000171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000178: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017f: 	addq	$0x20, %rax
    00000183: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000018a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000191: 	je	.Ltmp1686 # Offset: 401
.Ltmp1689:
    00000197: 	movq	-0x20(%rax), %rbp
    0000019b: 	callq	clock@PLT # Offset: 411
    000001a0: 	movq	%rax, end_time(%rip)
    000001a7: 	movq	0x8(%rsp), %rdx
    000001ac: 	subq	%fs:0x28, %rdx
    000001b5: 	jne	.Ltmp1687 # Offset: 437
    000001bb: 	subq	start_time(%rip), %rax
    000001c2: 	pxor	%xmm0, %xmm0
    000001c6: 	movq	%rbp, %rdi
    000001c9: 	cvtsi2sd	%rax, %xmm0
    000001ce: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d6: 	addq	$0x18, %rsp
    000001da: 	popq	%rbx
    000001db: 	popq	%rbp
    000001dc: 	popq	%r12
    000001de: 	popq	%r13
    000001e0: 	popq	%r14
    000001e2: 	popq	%r15
    000001e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 484
.Ltmp1684:
    000001e9: 	movq	%rbx, %rdi
    000001ec: 	movq	%rsp, %rsi
    000001ef: 	xorl	%edx, %edx
    000001f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 497
    000001f6: 	movq	%rax, (%rbx)
    000001f9: 	movq	%rax, %rdi
    000001fc: 	movq	(%rsp), %rax
    00000200: 	movq	%rax, 0x10(%rbx)
.Ltmp1690:
    00000204: 	movq	%r12, %rdx
    00000207: 	movq	%rbp, %rsi
    0000020a: 	callq	memcpy@PLT # Offset: 522
    0000020f: 	movq	(%rsp), %r12
    00000213: 	movq	(%rbx), %rdi
    00000216: 	jmp	.Ltmp1688 # Offset: 534
.Ltmp1681:
    0000021b: 	movq	%r12, %rsi
    0000021e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000225: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 549
    0000022a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000231: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000238: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023f: 	jne	.Ltmp1689 # Offset: 575
.Ltmp1686:
    00000245: 	movq	-0x8(%rdx), %rax
    00000249: 	addq	$0x200, %rax
    0000024f: 	jmp	.Ltmp1689 # Offset: 591
.Ltmp1685:
    00000254: 	testq	%r12, %r12
    00000257: 	je	.Ltmp1688 # Offset: 599
    0000025d: 	jmp	.Ltmp1690 # Offset: 605
.Ltmp1687:
    0000025f: 	callq	__stack_chk_fail@PLT # Offset: 607
.Ltmp1683:
    00000264: 	leaq	DATAat0x57008(%rip), %rdi
    0000026b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 619
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl13and_remainderIlLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi14and_remainder2IiLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 139
  State       : disassembled
  Address     : 0x14270
  Size        : 0x383
  MaxSize     : 0x390
  Offset      : 0x14270
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi14and_remainder2IiLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0138:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1691 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57e00(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57da0(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp1700:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp1692 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1693 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp1694:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp1694 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp1692 # Offset: 288
.Ltmp1708:
    00000122: 	movslq	%edx, %rcx
    00000125: 	movl	(%r15,%rcx,4), %edi
    00000129: 	leaq	(,%rcx,4), %r8
    00000131: 	movl	%edi, %ecx
    00000133: 	andl	$0x7, %ecx
    00000136: 	testl	%edi, %edi
    00000138: 	jns	.Ltmp1695 # Offset: 312
    0000013a: 	testl	%ecx, %ecx
    0000013c: 	leal	-0x8(%rcx), %edi
    0000013f: 	setne	%r9b
    00000143: 	testb	%r9b, %r9b
    00000146: 	cmovnel	%edi, %ecx
.Ltmp1695:
    00000149: 	addl	%ecx, %eax
    0000014b: 	leal	0x1(%rdx), %ecx
    0000014e: 	cmpl	%ecx, %r14d
    00000151: 	jle	.Ltmp1692 # Offset: 337
    00000153: 	movl	0x4(%r15,%r8), %edi
    00000158: 	movl	%edi, %ecx
    0000015a: 	andl	$0x7, %ecx
    0000015d: 	testl	%edi, %edi
    0000015f: 	jns	.Ltmp1696 # Offset: 351
    00000161: 	testl	%ecx, %ecx
    00000163: 	leal	-0x8(%rcx), %edi
    00000166: 	setne	%r9b
    0000016a: 	testb	%r9b, %r9b
    0000016d: 	cmovnel	%edi, %ecx
.Ltmp1696:
    00000170: 	addl	$0x2, %edx
    00000173: 	addl	%ecx, %eax
    00000175: 	cmpl	%edx, %r14d
    00000178: 	jle	.Ltmp1692 # Offset: 376
    0000017a: 	movl	0x8(%r15,%r8), %ecx
    0000017f: 	movl	%ecx, %edx
    00000181: 	andl	$0x7, %edx
    00000184: 	je	.Ltmp1697 # Offset: 388
    00000186: 	leal	-0x8(%rdx), %edi
    00000189: 	testl	%ecx, %ecx
    0000018b: 	cmovsl	%edi, %edx
.Ltmp1697:
    0000018e: 	addl	%edx, %eax
.Ltmp1692:
    00000190: 	cvttsd2si	%xmm7, %ecx
    00000194: 	movl	%ecx, %edx
    00000196: 	andl	$0x7, %edx
    00000199: 	testl	%ecx, %ecx
    0000019b: 	jns	.Ltmp1698 # Offset: 411
    0000019d: 	testl	%edx, %edx
    0000019f: 	leal	-0x8(%rdx), %ecx
    000001a2: 	setne	%dil
    000001a6: 	testb	%dil, %dil
    000001a9: 	cmovnel	%ecx, %edx
.Ltmp1698:
    000001ac: 	imull	$0x1f40, %edx, %edx
    000001b2: 	cmpl	%eax, %edx
    000001b4: 	je	.Ltmp1699 # Offset: 436
    000001b6: 	movl	current_test(%rip), %edx
    000001bc: 	movq	%rbp, %rsi
    000001bf: 	movl	$0x1, %edi
    000001c4: 	xorl	%eax, %eax
    000001c6: 	addl	$0x1, %r12d
    000001ca: 	callq	__printf_chk@PLT # Offset: 458
    000001cf: 	movl	iterations(%rip), %esi
    000001d5: 	cmpl	%esi, %r12d
    000001d8: 	jge	.Ltmp1691 # Offset: 472
    000001da: 	movsd	init_value(%rip), %xmm7
    000001e2: 	movdqa	DATAat0x57e00(%rip), %xmm6
    000001ea: 	movdqa	DATAat0x57da0(%rip), %xmm5
    000001f2: 	jmp	.Ltmp1700 # Offset: 498
    000001f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1699:
    00000200: 	addl	$0x1, %r12d
    00000204: 	cmpl	%esi, %r12d
    00000207: 	jl	.Ltmp1700 # Offset: 519
.Ltmp1691:
    0000020d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000214: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000021b: 	subq	$0x20, %rax
    0000021f: 	cmpq	%rax, %rbx
    00000222: 	je	.Ltmp1701 # Offset: 546
    00000228: 	movq	0x8(%rsp), %rax
    0000022d: 	leaq	0x10(%rbx), %rdi
    00000231: 	movq	%rdi, (%rbx)
    00000234: 	movq	(%rax), %rbp
    00000237: 	movq	0x8(%rax), %r12
    0000023b: 	movq	%rbp, %rax
    0000023e: 	addq	%r12, %rax
    00000241: 	je	.Ltmp1702 # Offset: 577
    00000243: 	testq	%rbp, %rbp
    00000246: 	je	.Ltmp1703 # Offset: 582
.Ltmp1702:
    0000024c: 	movq	%r12, 0x10(%rsp)
    00000251: 	cmpq	$0xf, %r12
    00000255: 	ja	.Ltmp1704 # Offset: 597
    0000025b: 	cmpq	$0x1, %r12
    0000025f: 	jne	.Ltmp1705 # Offset: 607
    00000265: 	movzbl	(%rbp), %eax
    00000269: 	movb	%al, 0x10(%rbx)
.Ltmp1709:
    0000026c: 	movq	%r12, 0x8(%rbx)
    00000270: 	movb	$0x0, (%rdi,%r12)
    00000275: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000027c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000283: 	addq	$0x20, %rax
    00000287: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000295: 	je	.Ltmp1706 # Offset: 661
.Ltmp1710:
    0000029b: 	movq	-0x20(%rax), %rbp
    0000029f: 	callq	clock@PLT # Offset: 671
    000002a4: 	movq	%rax, end_time(%rip)
    000002ab: 	movq	0x18(%rsp), %rdx
    000002b0: 	subq	%fs:0x28, %rdx
    000002b9: 	jne	.Ltmp1707 # Offset: 697
    000002bf: 	subq	start_time(%rip), %rax
    000002c6: 	pxor	%xmm0, %xmm0
    000002ca: 	movq	%rbp, %rdi
    000002cd: 	cvtsi2sd	%rax, %xmm0
    000002d2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002da: 	addq	$0x28, %rsp
    000002de: 	popq	%rbx
    000002df: 	popq	%rbp
    000002e0: 	popq	%r12
    000002e2: 	popq	%r13
    000002e4: 	popq	%r14
    000002e6: 	popq	%r15
    000002e8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 744
.Ltmp1693:
    000002ed: 	xorl	%edx, %edx
    000002ef: 	xorl	%eax, %eax
    000002f1: 	jmp	.Ltmp1708 # Offset: 753
.Ltmp1704:
    000002f6: 	movq	%rbx, %rdi
    000002f9: 	leaq	0x10(%rsp), %rsi
    000002fe: 	xorl	%edx, %edx
    00000300: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 768
    00000305: 	movq	%rax, (%rbx)
    00000308: 	movq	%rax, %rdi
    0000030b: 	movq	0x10(%rsp), %rax
    00000310: 	movq	%rax, 0x10(%rbx)
.Ltmp1711:
    00000314: 	movq	%r12, %rdx
    00000317: 	movq	%rbp, %rsi
    0000031a: 	callq	memcpy@PLT # Offset: 794
    0000031f: 	movq	0x10(%rsp), %r12
    00000324: 	movq	(%rbx), %rdi
    00000327: 	jmp	.Ltmp1709 # Offset: 807
.Ltmp1701:
    0000032c: 	movq	0x8(%rsp), %rsi
    00000331: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000338: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 824
    0000033d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000344: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000352: 	jne	.Ltmp1710 # Offset: 850
.Ltmp1706:
    00000358: 	movq	-0x8(%rdx), %rax
    0000035c: 	addq	$0x200, %rax
    00000362: 	jmp	.Ltmp1710 # Offset: 866
.Ltmp1705:
    00000367: 	testq	%r12, %r12
    0000036a: 	je	.Ltmp1709 # Offset: 874
    00000370: 	jmp	.Ltmp1711 # Offset: 880
.Ltmp1707:
    00000372: 	callq	__stack_chk_fail@PLT # Offset: 882
.Ltmp1703:
    00000377: 	leaq	DATAat0x57008(%rip), %rdi
    0000037e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 894
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi14and_remainder2IiLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi14and_remainder2IiLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 140
  State       : disassembled
  Address     : 0x14600
  Size        : 0x383
  MaxSize     : 0x390
  Offset      : 0x14600
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi14and_remainder2IiLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0139:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1712 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57cd0(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57d70(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp1721:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp1713 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1714 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp1715:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp1715 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp1713 # Offset: 288
.Ltmp1729:
    00000122: 	movslq	%edx, %rcx
    00000125: 	movl	(%r15,%rcx,4), %edi
    00000129: 	leaq	(,%rcx,4), %r8
    00000131: 	movl	%edi, %ecx
    00000133: 	andl	$0x3, %ecx
    00000136: 	testl	%edi, %edi
    00000138: 	jns	.Ltmp1716 # Offset: 312
    0000013a: 	testl	%ecx, %ecx
    0000013c: 	leal	-0x4(%rcx), %edi
    0000013f: 	setne	%r9b
    00000143: 	testb	%r9b, %r9b
    00000146: 	cmovnel	%edi, %ecx
.Ltmp1716:
    00000149: 	addl	%ecx, %eax
    0000014b: 	leal	0x1(%rdx), %ecx
    0000014e: 	cmpl	%ecx, %r14d
    00000151: 	jle	.Ltmp1713 # Offset: 337
    00000153: 	movl	0x4(%r15,%r8), %edi
    00000158: 	movl	%edi, %ecx
    0000015a: 	andl	$0x3, %ecx
    0000015d: 	testl	%edi, %edi
    0000015f: 	jns	.Ltmp1717 # Offset: 351
    00000161: 	testl	%ecx, %ecx
    00000163: 	leal	-0x4(%rcx), %edi
    00000166: 	setne	%r9b
    0000016a: 	testb	%r9b, %r9b
    0000016d: 	cmovnel	%edi, %ecx
.Ltmp1717:
    00000170: 	addl	$0x2, %edx
    00000173: 	addl	%ecx, %eax
    00000175: 	cmpl	%edx, %r14d
    00000178: 	jle	.Ltmp1713 # Offset: 376
    0000017a: 	movl	0x8(%r15,%r8), %ecx
    0000017f: 	movl	%ecx, %edx
    00000181: 	andl	$0x3, %edx
    00000184: 	je	.Ltmp1718 # Offset: 388
    00000186: 	leal	-0x4(%rdx), %edi
    00000189: 	testl	%ecx, %ecx
    0000018b: 	cmovsl	%edi, %edx
.Ltmp1718:
    0000018e: 	addl	%edx, %eax
.Ltmp1713:
    00000190: 	cvttsd2si	%xmm7, %ecx
    00000194: 	movl	%ecx, %edx
    00000196: 	andl	$0x3, %edx
    00000199: 	testl	%ecx, %ecx
    0000019b: 	jns	.Ltmp1719 # Offset: 411
    0000019d: 	testl	%edx, %edx
    0000019f: 	leal	-0x4(%rdx), %ecx
    000001a2: 	setne	%dil
    000001a6: 	testb	%dil, %dil
    000001a9: 	cmovnel	%ecx, %edx
.Ltmp1719:
    000001ac: 	imull	$0x1f40, %edx, %edx
    000001b2: 	cmpl	%eax, %edx
    000001b4: 	je	.Ltmp1720 # Offset: 436
    000001b6: 	movl	current_test(%rip), %edx
    000001bc: 	movq	%rbp, %rsi
    000001bf: 	movl	$0x1, %edi
    000001c4: 	xorl	%eax, %eax
    000001c6: 	addl	$0x1, %r12d
    000001ca: 	callq	__printf_chk@PLT # Offset: 458
    000001cf: 	movl	iterations(%rip), %esi
    000001d5: 	cmpl	%esi, %r12d
    000001d8: 	jge	.Ltmp1712 # Offset: 472
    000001da: 	movsd	init_value(%rip), %xmm7
    000001e2: 	movdqa	DATAat0x57cd0(%rip), %xmm6
    000001ea: 	movdqa	DATAat0x57d70(%rip), %xmm5
    000001f2: 	jmp	.Ltmp1721 # Offset: 498
    000001f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1720:
    00000200: 	addl	$0x1, %r12d
    00000204: 	cmpl	%esi, %r12d
    00000207: 	jl	.Ltmp1721 # Offset: 519
.Ltmp1712:
    0000020d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000214: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000021b: 	subq	$0x20, %rax
    0000021f: 	cmpq	%rax, %rbx
    00000222: 	je	.Ltmp1722 # Offset: 546
    00000228: 	movq	0x8(%rsp), %rax
    0000022d: 	leaq	0x10(%rbx), %rdi
    00000231: 	movq	%rdi, (%rbx)
    00000234: 	movq	(%rax), %rbp
    00000237: 	movq	0x8(%rax), %r12
    0000023b: 	movq	%rbp, %rax
    0000023e: 	addq	%r12, %rax
    00000241: 	je	.Ltmp1723 # Offset: 577
    00000243: 	testq	%rbp, %rbp
    00000246: 	je	.Ltmp1724 # Offset: 582
.Ltmp1723:
    0000024c: 	movq	%r12, 0x10(%rsp)
    00000251: 	cmpq	$0xf, %r12
    00000255: 	ja	.Ltmp1725 # Offset: 597
    0000025b: 	cmpq	$0x1, %r12
    0000025f: 	jne	.Ltmp1726 # Offset: 607
    00000265: 	movzbl	(%rbp), %eax
    00000269: 	movb	%al, 0x10(%rbx)
.Ltmp1730:
    0000026c: 	movq	%r12, 0x8(%rbx)
    00000270: 	movb	$0x0, (%rdi,%r12)
    00000275: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000027c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000283: 	addq	$0x20, %rax
    00000287: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000295: 	je	.Ltmp1727 # Offset: 661
.Ltmp1731:
    0000029b: 	movq	-0x20(%rax), %rbp
    0000029f: 	callq	clock@PLT # Offset: 671
    000002a4: 	movq	%rax, end_time(%rip)
    000002ab: 	movq	0x18(%rsp), %rdx
    000002b0: 	subq	%fs:0x28, %rdx
    000002b9: 	jne	.Ltmp1728 # Offset: 697
    000002bf: 	subq	start_time(%rip), %rax
    000002c6: 	pxor	%xmm0, %xmm0
    000002ca: 	movq	%rbp, %rdi
    000002cd: 	cvtsi2sd	%rax, %xmm0
    000002d2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002da: 	addq	$0x28, %rsp
    000002de: 	popq	%rbx
    000002df: 	popq	%rbp
    000002e0: 	popq	%r12
    000002e2: 	popq	%r13
    000002e4: 	popq	%r14
    000002e6: 	popq	%r15
    000002e8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 744
.Ltmp1714:
    000002ed: 	xorl	%edx, %edx
    000002ef: 	xorl	%eax, %eax
    000002f1: 	jmp	.Ltmp1729 # Offset: 753
.Ltmp1725:
    000002f6: 	movq	%rbx, %rdi
    000002f9: 	leaq	0x10(%rsp), %rsi
    000002fe: 	xorl	%edx, %edx
    00000300: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 768
    00000305: 	movq	%rax, (%rbx)
    00000308: 	movq	%rax, %rdi
    0000030b: 	movq	0x10(%rsp), %rax
    00000310: 	movq	%rax, 0x10(%rbx)
.Ltmp1732:
    00000314: 	movq	%r12, %rdx
    00000317: 	movq	%rbp, %rsi
    0000031a: 	callq	memcpy@PLT # Offset: 794
    0000031f: 	movq	0x10(%rsp), %r12
    00000324: 	movq	(%rbx), %rdi
    00000327: 	jmp	.Ltmp1730 # Offset: 807
.Ltmp1722:
    0000032c: 	movq	0x8(%rsp), %rsi
    00000331: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000338: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 824
    0000033d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000344: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000352: 	jne	.Ltmp1731 # Offset: 850
.Ltmp1727:
    00000358: 	movq	-0x8(%rdx), %rax
    0000035c: 	addq	$0x200, %rax
    00000362: 	jmp	.Ltmp1731 # Offset: 866
.Ltmp1726:
    00000367: 	testq	%r12, %r12
    0000036a: 	je	.Ltmp1730 # Offset: 874
    00000370: 	jmp	.Ltmp1732 # Offset: 880
.Ltmp1728:
    00000372: 	callq	__stack_chk_fail@PLT # Offset: 882
.Ltmp1724:
    00000377: 	leaq	DATAat0x57008(%rip), %rdi
    0000037e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 894
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi14and_remainder2IiLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl14and_remainder2IlLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 141
  State       : disassembled
  Address     : 0x14990
  Size        : 0x270
  MaxSize     : 0x270
  Offset      : 0x14990
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl14and_remainder2IlLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0140:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp1733 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1739:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp1734 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1736:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0x1f, %eax
    00000081: 	je	.Ltmp1735 # Offset: 129
    00000083: 	leaq	-0x20(%rax), %rdi
    00000087: 	testq	%rcx, %rcx
    0000008a: 	cmovsq	%rdi, %rax
.Ltmp1735:
    0000008e: 	addq	$0x8, %rdx
    00000092: 	addq	%rax, %rsi
    00000095: 	cmpq	%rdx, %r13
    00000098: 	jne	.Ltmp1736 # Offset: 152
.Ltmp1734:
    0000009a: 	cvttsd2si	%xmm0, %rdx
    0000009f: 	movq	%rdx, %rax
    000000a2: 	andl	$0x1f, %eax
    000000a5: 	testq	%rdx, %rdx
    000000a8: 	jns	.Ltmp1737 # Offset: 168
    000000aa: 	testq	%rax, %rax
    000000ad: 	leaq	-0x20(%rax), %rdx
    000000b1: 	setne	%cl
    000000b4: 	testb	%cl, %cl
    000000b6: 	cmovneq	%rdx, %rax
.Ltmp1737:
    000000ba: 	imulq	$0x1f40, %rax, %rax
    000000c1: 	cmpq	%rsi, %rax
    000000c4: 	je	.Ltmp1738 # Offset: 196
    000000c6: 	movl	current_test(%rip), %edx
    000000cc: 	movq	%rbp, %rsi
    000000cf: 	movl	$0x1, %edi
    000000d4: 	xorl	%eax, %eax
    000000d6: 	addl	$0x1, %r14d
    000000da: 	callq	__printf_chk@PLT # Offset: 218
    000000df: 	movl	iterations(%rip), %r8d
    000000e6: 	cmpl	%r14d, %r8d
    000000e9: 	jle	.Ltmp1733 # Offset: 233
    000000eb: 	movsd	init_value(%rip), %xmm0
    000000f3: 	jmp	.Ltmp1739 # Offset: 243
    000000f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1738:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%r8d, %r14d
    00000107: 	jl	.Ltmp1739 # Offset: 263
.Ltmp1733:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp1740 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	%rdi, (%rbx)
    0000012f: 	movq	(%r12), %rbp
    00000133: 	movq	0x8(%r12), %r12
    00000138: 	movq	%rbp, %rax
    0000013b: 	addq	%r12, %rax
    0000013e: 	je	.Ltmp1741 # Offset: 318
    00000140: 	testq	%rbp, %rbp
    00000143: 	je	.Ltmp1742 # Offset: 323
.Ltmp1741:
    00000149: 	movq	%r12, (%rsp)
    0000014d: 	cmpq	$0xf, %r12
    00000151: 	ja	.Ltmp1743 # Offset: 337
    00000157: 	cmpq	$0x1, %r12
    0000015b: 	jne	.Ltmp1744 # Offset: 347
    00000161: 	movzbl	(%rbp), %eax
    00000165: 	movb	%al, 0x10(%rbx)
.Ltmp1747:
    00000168: 	movq	%r12, 0x8(%rbx)
    0000016c: 	movb	$0x0, (%rdi,%r12)
    00000171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000178: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017f: 	addq	$0x20, %rax
    00000183: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000018a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000191: 	je	.Ltmp1745 # Offset: 401
.Ltmp1748:
    00000197: 	movq	-0x20(%rax), %rbp
    0000019b: 	callq	clock@PLT # Offset: 411
    000001a0: 	movq	%rax, end_time(%rip)
    000001a7: 	movq	0x8(%rsp), %rdx
    000001ac: 	subq	%fs:0x28, %rdx
    000001b5: 	jne	.Ltmp1746 # Offset: 437
    000001bb: 	subq	start_time(%rip), %rax
    000001c2: 	pxor	%xmm0, %xmm0
    000001c6: 	movq	%rbp, %rdi
    000001c9: 	cvtsi2sd	%rax, %xmm0
    000001ce: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d6: 	addq	$0x18, %rsp
    000001da: 	popq	%rbx
    000001db: 	popq	%rbp
    000001dc: 	popq	%r12
    000001de: 	popq	%r13
    000001e0: 	popq	%r14
    000001e2: 	popq	%r15
    000001e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 484
.Ltmp1743:
    000001e9: 	movq	%rbx, %rdi
    000001ec: 	movq	%rsp, %rsi
    000001ef: 	xorl	%edx, %edx
    000001f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 497
    000001f6: 	movq	%rax, (%rbx)
    000001f9: 	movq	%rax, %rdi
    000001fc: 	movq	(%rsp), %rax
    00000200: 	movq	%rax, 0x10(%rbx)
.Ltmp1749:
    00000204: 	movq	%r12, %rdx
    00000207: 	movq	%rbp, %rsi
    0000020a: 	callq	memcpy@PLT # Offset: 522
    0000020f: 	movq	(%rsp), %r12
    00000213: 	movq	(%rbx), %rdi
    00000216: 	jmp	.Ltmp1747 # Offset: 534
.Ltmp1740:
    0000021b: 	movq	%r12, %rsi
    0000021e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000225: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 549
    0000022a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000231: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000238: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023f: 	jne	.Ltmp1748 # Offset: 575
.Ltmp1745:
    00000245: 	movq	-0x8(%rdx), %rax
    00000249: 	addq	$0x200, %rax
    0000024f: 	jmp	.Ltmp1748 # Offset: 591
.Ltmp1744:
    00000254: 	testq	%r12, %r12
    00000257: 	je	.Ltmp1747 # Offset: 599
    0000025d: 	jmp	.Ltmp1749 # Offset: 605
.Ltmp1746:
    0000025f: 	callq	__stack_chk_fail@PLT # Offset: 607
.Ltmp1742:
    00000264: 	leaq	DATAat0x57008(%rip), %rdi
    0000026b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 619
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl14and_remainder2IlLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi14and_remainder2IiLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 142
  State       : disassembled
  Address     : 0x14c00
  Size        : 0x383
  MaxSize     : 0x390
  Offset      : 0x14c00
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi14and_remainder2IiLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0141:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1750 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57e50(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57d50(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp1759:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp1751 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1752 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp1753:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp1753 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp1751 # Offset: 288
.Ltmp1767:
    00000122: 	movslq	%edx, %rcx
    00000125: 	movl	(%r15,%rcx,4), %edi
    00000129: 	leaq	(,%rcx,4), %r8
    00000131: 	movl	%edi, %ecx
    00000133: 	andl	$0x1f, %ecx
    00000136: 	testl	%edi, %edi
    00000138: 	jns	.Ltmp1754 # Offset: 312
    0000013a: 	testl	%ecx, %ecx
    0000013c: 	leal	-0x20(%rcx), %edi
    0000013f: 	setne	%r9b
    00000143: 	testb	%r9b, %r9b
    00000146: 	cmovnel	%edi, %ecx
.Ltmp1754:
    00000149: 	addl	%ecx, %eax
    0000014b: 	leal	0x1(%rdx), %ecx
    0000014e: 	cmpl	%ecx, %r14d
    00000151: 	jle	.Ltmp1751 # Offset: 337
    00000153: 	movl	0x4(%r15,%r8), %edi
    00000158: 	movl	%edi, %ecx
    0000015a: 	andl	$0x1f, %ecx
    0000015d: 	testl	%edi, %edi
    0000015f: 	jns	.Ltmp1755 # Offset: 351
    00000161: 	testl	%ecx, %ecx
    00000163: 	leal	-0x20(%rcx), %edi
    00000166: 	setne	%r9b
    0000016a: 	testb	%r9b, %r9b
    0000016d: 	cmovnel	%edi, %ecx
.Ltmp1755:
    00000170: 	addl	$0x2, %edx
    00000173: 	addl	%ecx, %eax
    00000175: 	cmpl	%edx, %r14d
    00000178: 	jle	.Ltmp1751 # Offset: 376
    0000017a: 	movl	0x8(%r15,%r8), %ecx
    0000017f: 	movl	%ecx, %edx
    00000181: 	andl	$0x1f, %edx
    00000184: 	je	.Ltmp1756 # Offset: 388
    00000186: 	leal	-0x20(%rdx), %edi
    00000189: 	testl	%ecx, %ecx
    0000018b: 	cmovsl	%edi, %edx
.Ltmp1756:
    0000018e: 	addl	%edx, %eax
.Ltmp1751:
    00000190: 	cvttsd2si	%xmm7, %ecx
    00000194: 	movl	%ecx, %edx
    00000196: 	andl	$0x1f, %edx
    00000199: 	testl	%ecx, %ecx
    0000019b: 	jns	.Ltmp1757 # Offset: 411
    0000019d: 	testl	%edx, %edx
    0000019f: 	leal	-0x20(%rdx), %ecx
    000001a2: 	setne	%dil
    000001a6: 	testb	%dil, %dil
    000001a9: 	cmovnel	%ecx, %edx
.Ltmp1757:
    000001ac: 	imull	$0x1f40, %edx, %edx
    000001b2: 	cmpl	%eax, %edx
    000001b4: 	je	.Ltmp1758 # Offset: 436
    000001b6: 	movl	current_test(%rip), %edx
    000001bc: 	movq	%rbp, %rsi
    000001bf: 	movl	$0x1, %edi
    000001c4: 	xorl	%eax, %eax
    000001c6: 	addl	$0x1, %r12d
    000001ca: 	callq	__printf_chk@PLT # Offset: 458
    000001cf: 	movl	iterations(%rip), %esi
    000001d5: 	cmpl	%esi, %r12d
    000001d8: 	jge	.Ltmp1750 # Offset: 472
    000001da: 	movsd	init_value(%rip), %xmm7
    000001e2: 	movdqa	DATAat0x57e50(%rip), %xmm6
    000001ea: 	movdqa	DATAat0x57d50(%rip), %xmm5
    000001f2: 	jmp	.Ltmp1759 # Offset: 498
    000001f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1758:
    00000200: 	addl	$0x1, %r12d
    00000204: 	cmpl	%esi, %r12d
    00000207: 	jl	.Ltmp1759 # Offset: 519
.Ltmp1750:
    0000020d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000214: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000021b: 	subq	$0x20, %rax
    0000021f: 	cmpq	%rax, %rbx
    00000222: 	je	.Ltmp1760 # Offset: 546
    00000228: 	movq	0x8(%rsp), %rax
    0000022d: 	leaq	0x10(%rbx), %rdi
    00000231: 	movq	%rdi, (%rbx)
    00000234: 	movq	(%rax), %rbp
    00000237: 	movq	0x8(%rax), %r12
    0000023b: 	movq	%rbp, %rax
    0000023e: 	addq	%r12, %rax
    00000241: 	je	.Ltmp1761 # Offset: 577
    00000243: 	testq	%rbp, %rbp
    00000246: 	je	.Ltmp1762 # Offset: 582
.Ltmp1761:
    0000024c: 	movq	%r12, 0x10(%rsp)
    00000251: 	cmpq	$0xf, %r12
    00000255: 	ja	.Ltmp1763 # Offset: 597
    0000025b: 	cmpq	$0x1, %r12
    0000025f: 	jne	.Ltmp1764 # Offset: 607
    00000265: 	movzbl	(%rbp), %eax
    00000269: 	movb	%al, 0x10(%rbx)
.Ltmp1768:
    0000026c: 	movq	%r12, 0x8(%rbx)
    00000270: 	movb	$0x0, (%rdi,%r12)
    00000275: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000027c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000283: 	addq	$0x20, %rax
    00000287: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000295: 	je	.Ltmp1765 # Offset: 661
.Ltmp1769:
    0000029b: 	movq	-0x20(%rax), %rbp
    0000029f: 	callq	clock@PLT # Offset: 671
    000002a4: 	movq	%rax, end_time(%rip)
    000002ab: 	movq	0x18(%rsp), %rdx
    000002b0: 	subq	%fs:0x28, %rdx
    000002b9: 	jne	.Ltmp1766 # Offset: 697
    000002bf: 	subq	start_time(%rip), %rax
    000002c6: 	pxor	%xmm0, %xmm0
    000002ca: 	movq	%rbp, %rdi
    000002cd: 	cvtsi2sd	%rax, %xmm0
    000002d2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002da: 	addq	$0x28, %rsp
    000002de: 	popq	%rbx
    000002df: 	popq	%rbp
    000002e0: 	popq	%r12
    000002e2: 	popq	%r13
    000002e4: 	popq	%r14
    000002e6: 	popq	%r15
    000002e8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 744
.Ltmp1752:
    000002ed: 	xorl	%edx, %edx
    000002ef: 	xorl	%eax, %eax
    000002f1: 	jmp	.Ltmp1767 # Offset: 753
.Ltmp1763:
    000002f6: 	movq	%rbx, %rdi
    000002f9: 	leaq	0x10(%rsp), %rsi
    000002fe: 	xorl	%edx, %edx
    00000300: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 768
    00000305: 	movq	%rax, (%rbx)
    00000308: 	movq	%rax, %rdi
    0000030b: 	movq	0x10(%rsp), %rax
    00000310: 	movq	%rax, 0x10(%rbx)
.Ltmp1770:
    00000314: 	movq	%r12, %rdx
    00000317: 	movq	%rbp, %rsi
    0000031a: 	callq	memcpy@PLT # Offset: 794
    0000031f: 	movq	0x10(%rsp), %r12
    00000324: 	movq	(%rbx), %rdi
    00000327: 	jmp	.Ltmp1768 # Offset: 807
.Ltmp1760:
    0000032c: 	movq	0x8(%rsp), %rsi
    00000331: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000338: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 824
    0000033d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000344: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000352: 	jne	.Ltmp1769 # Offset: 850
.Ltmp1765:
    00000358: 	movq	-0x8(%rdx), %rax
    0000035c: 	addq	$0x200, %rax
    00000362: 	jmp	.Ltmp1769 # Offset: 866
.Ltmp1764:
    00000367: 	testq	%r12, %r12
    0000036a: 	je	.Ltmp1768 # Offset: 874
    00000370: 	jmp	.Ltmp1770 # Offset: 880
.Ltmp1766:
    00000372: 	callq	__stack_chk_fail@PLT # Offset: 882
.Ltmp1762:
    00000377: 	leaq	DATAat0x57008(%rip), %rdi
    0000037e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 894
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi14and_remainder2IiLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl13and_remainderIlLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 143
  State       : disassembled
  Address     : 0x14f90
  Size        : 0x270
  MaxSize     : 0x270
  Offset      : 0x14f90
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl13and_remainderIlLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0142:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp1771 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1777:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp1772 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1774:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0x3f, %eax
    00000081: 	je	.Ltmp1773 # Offset: 129
    00000083: 	leaq	-0x40(%rax), %rdi
    00000087: 	testq	%rcx, %rcx
    0000008a: 	cmovsq	%rdi, %rax
.Ltmp1773:
    0000008e: 	addq	$0x8, %rdx
    00000092: 	addq	%rax, %rsi
    00000095: 	cmpq	%rdx, %r13
    00000098: 	jne	.Ltmp1774 # Offset: 152
.Ltmp1772:
    0000009a: 	cvttsd2si	%xmm0, %rdx
    0000009f: 	movq	%rdx, %rax
    000000a2: 	andl	$0x3f, %eax
    000000a5: 	testq	%rdx, %rdx
    000000a8: 	jns	.Ltmp1775 # Offset: 168
    000000aa: 	testq	%rax, %rax
    000000ad: 	leaq	-0x40(%rax), %rdx
    000000b1: 	setne	%cl
    000000b4: 	testb	%cl, %cl
    000000b6: 	cmovneq	%rdx, %rax
.Ltmp1775:
    000000ba: 	imulq	$0x1f40, %rax, %rax
    000000c1: 	cmpq	%rsi, %rax
    000000c4: 	je	.Ltmp1776 # Offset: 196
    000000c6: 	movl	current_test(%rip), %edx
    000000cc: 	movq	%rbp, %rsi
    000000cf: 	movl	$0x1, %edi
    000000d4: 	xorl	%eax, %eax
    000000d6: 	addl	$0x1, %r14d
    000000da: 	callq	__printf_chk@PLT # Offset: 218
    000000df: 	movl	iterations(%rip), %r8d
    000000e6: 	cmpl	%r14d, %r8d
    000000e9: 	jle	.Ltmp1771 # Offset: 233
    000000eb: 	movsd	init_value(%rip), %xmm0
    000000f3: 	jmp	.Ltmp1777 # Offset: 243
    000000f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1776:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%r8d, %r14d
    00000107: 	jl	.Ltmp1777 # Offset: 263
.Ltmp1771:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp1778 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	%rdi, (%rbx)
    0000012f: 	movq	(%r12), %rbp
    00000133: 	movq	0x8(%r12), %r12
    00000138: 	movq	%rbp, %rax
    0000013b: 	addq	%r12, %rax
    0000013e: 	je	.Ltmp1779 # Offset: 318
    00000140: 	testq	%rbp, %rbp
    00000143: 	je	.Ltmp1780 # Offset: 323
.Ltmp1779:
    00000149: 	movq	%r12, (%rsp)
    0000014d: 	cmpq	$0xf, %r12
    00000151: 	ja	.Ltmp1781 # Offset: 337
    00000157: 	cmpq	$0x1, %r12
    0000015b: 	jne	.Ltmp1782 # Offset: 347
    00000161: 	movzbl	(%rbp), %eax
    00000165: 	movb	%al, 0x10(%rbx)
.Ltmp1785:
    00000168: 	movq	%r12, 0x8(%rbx)
    0000016c: 	movb	$0x0, (%rdi,%r12)
    00000171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000178: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017f: 	addq	$0x20, %rax
    00000183: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000018a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000191: 	je	.Ltmp1783 # Offset: 401
.Ltmp1786:
    00000197: 	movq	-0x20(%rax), %rbp
    0000019b: 	callq	clock@PLT # Offset: 411
    000001a0: 	movq	%rax, end_time(%rip)
    000001a7: 	movq	0x8(%rsp), %rdx
    000001ac: 	subq	%fs:0x28, %rdx
    000001b5: 	jne	.Ltmp1784 # Offset: 437
    000001bb: 	subq	start_time(%rip), %rax
    000001c2: 	pxor	%xmm0, %xmm0
    000001c6: 	movq	%rbp, %rdi
    000001c9: 	cvtsi2sd	%rax, %xmm0
    000001ce: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d6: 	addq	$0x18, %rsp
    000001da: 	popq	%rbx
    000001db: 	popq	%rbp
    000001dc: 	popq	%r12
    000001de: 	popq	%r13
    000001e0: 	popq	%r14
    000001e2: 	popq	%r15
    000001e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 484
.Ltmp1781:
    000001e9: 	movq	%rbx, %rdi
    000001ec: 	movq	%rsp, %rsi
    000001ef: 	xorl	%edx, %edx
    000001f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 497
    000001f6: 	movq	%rax, (%rbx)
    000001f9: 	movq	%rax, %rdi
    000001fc: 	movq	(%rsp), %rax
    00000200: 	movq	%rax, 0x10(%rbx)
.Ltmp1787:
    00000204: 	movq	%r12, %rdx
    00000207: 	movq	%rbp, %rsi
    0000020a: 	callq	memcpy@PLT # Offset: 522
    0000020f: 	movq	(%rsp), %r12
    00000213: 	movq	(%rbx), %rdi
    00000216: 	jmp	.Ltmp1785 # Offset: 534
.Ltmp1778:
    0000021b: 	movq	%r12, %rsi
    0000021e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000225: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 549
    0000022a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000231: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000238: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023f: 	jne	.Ltmp1786 # Offset: 575
.Ltmp1783:
    00000245: 	movq	-0x8(%rdx), %rax
    00000249: 	addq	$0x200, %rax
    0000024f: 	jmp	.Ltmp1786 # Offset: 591
.Ltmp1782:
    00000254: 	testq	%r12, %r12
    00000257: 	je	.Ltmp1785 # Offset: 599
    0000025d: 	jmp	.Ltmp1787 # Offset: 605
.Ltmp1784:
    0000025f: 	callq	__stack_chk_fail@PLT # Offset: 607
.Ltmp1780:
    00000264: 	leaq	DATAat0x57008(%rip), %rdi
    0000026b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 619
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl13and_remainderIlLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs14and_remainder2IsLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 144
  State       : disassembled
  Address     : 0x15200
  Size        : 0x503
  MaxSize     : 0x510
  Offset      : 0x15200
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs14and_remainder2IsLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0143:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp1788 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57be0(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57e60(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1801:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp1789 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1790 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r14, %rax
    000000ad: 	pxor	%xmm2, %xmm2
    000000b1: 	movdqa	%xmm3, %xmm4
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp1791:
    000000b8: 	movdqu	(%rax), %xmm8
    000000bd: 	movdqa	%xmm4, %xmm0
    000000c1: 	movdqu	(%rax), %xmm12
    000000c6: 	movdqa	%xmm4, %xmm11
    000000cb: 	addq	$0x10, %rax
    000000cf: 	pand	%xmm6, %xmm8
    000000d4: 	pcmpgtw	%xmm8, %xmm0
    000000d9: 	movdqa	%xmm8, %xmm9
    000000de: 	punpcklwd	%xmm0, %xmm9
    000000e3: 	punpckhwd	%xmm0, %xmm8
    000000e8: 	movdqa	%xmm8, %xmm1
    000000ed: 	movdqa	%xmm9, %xmm0
    000000f2: 	pcmpeqd	%xmm2, %xmm0
    000000f6: 	pcmpeqd	%xmm2, %xmm1
    000000fa: 	pcmpeqd	%xmm2, %xmm0
    000000fe: 	pcmpeqd	%xmm2, %xmm1
    00000102: 	movdqa	%xmm0, %xmm10
    00000107: 	punpcklwd	%xmm1, %xmm0
    0000010b: 	punpckhwd	%xmm1, %xmm10
    00000110: 	movdqa	%xmm0, %xmm1
    00000114: 	punpckhwd	%xmm10, %xmm1
    00000119: 	punpcklwd	%xmm10, %xmm0
    0000011e: 	movdqa	%xmm5, %xmm10
    00000123: 	punpcklwd	%xmm1, %xmm0
    00000127: 	movdqa	%xmm4, %xmm1
    0000012b: 	paddd	%xmm9, %xmm10
    00000130: 	pcmpgtw	%xmm12, %xmm1
    00000135: 	pand	%xmm1, %xmm0
    00000139: 	pcmpgtw	%xmm0, %xmm11
    0000013e: 	movdqa	%xmm0, %xmm1
    00000142: 	punpcklwd	%xmm11, %xmm1
    00000147: 	punpckhwd	%xmm11, %xmm0
    0000014c: 	pand	%xmm1, %xmm10
    00000151: 	pandn	%xmm9, %xmm1
    00000156: 	movdqa	%xmm5, %xmm9
    0000015b: 	paddd	%xmm8, %xmm9
    00000160: 	por	%xmm10, %xmm1
    00000165: 	pand	%xmm0, %xmm9
    0000016a: 	pandn	%xmm8, %xmm0
    0000016f: 	movdqa	%xmm1, %xmm8
    00000174: 	por	%xmm9, %xmm0
    00000179: 	punpcklwd	%xmm0, %xmm1
    0000017d: 	punpckhwd	%xmm0, %xmm8
    00000182: 	movdqa	%xmm1, %xmm0
    00000186: 	punpcklwd	%xmm8, %xmm1
    0000018b: 	punpckhwd	%xmm8, %xmm0
    00000190: 	punpcklwd	%xmm0, %xmm1
    00000194: 	paddw	%xmm1, %xmm3
    00000198: 	cmpq	%r15, %rax
    0000019b: 	jne	.Ltmp1791 # Offset: 411
    000001a1: 	movdqa	%xmm3, %xmm0
    000001a5: 	psrldq	$0x8, %xmm0
    000001aa: 	paddw	%xmm0, %xmm3
    000001ae: 	movdqa	%xmm3, %xmm0
    000001b2: 	psrldq	$0x4, %xmm0
    000001b7: 	paddw	%xmm0, %xmm3
    000001bb: 	movdqa	%xmm3, %xmm0
    000001bf: 	psrldq	$0x2, %xmm0
    000001c4: 	paddw	%xmm0, %xmm3
    000001c8: 	pextrw	$0x0, %xmm3, %eax
    000001cd: 	cmpl	%r13d, %ebx
    000001d0: 	je	.Ltmp1789 # Offset: 464
    000001d6: 	movl	%ebx, %edx
.Ltmp1809:
    000001d8: 	movslq	%edx, %rcx
    000001db: 	movzwl	(%r14,%rcx,2), %edi
    000001e0: 	leaq	(%rcx,%rcx), %rsi
    000001e4: 	movzbl	%dil, %ecx
    000001e8: 	testw	%di, %di
    000001eb: 	jns	.Ltmp1792 # Offset: 491
    000001ed: 	testl	%ecx, %ecx
    000001ef: 	leal	-0x100(%rcx), %edi
    000001f5: 	setne	%r8b
    000001f9: 	testb	%r8b, %r8b
    000001fc: 	cmovnel	%edi, %ecx
.Ltmp1792:
    000001ff: 	addl	%eax, %ecx
    00000201: 	leal	0x1(%rdx), %edi
    00000204: 	movl	%ecx, %eax
    00000206: 	cmpl	%edi, %r13d
    00000209: 	jle	.Ltmp1789 # Offset: 521
    0000020f: 	movzwl	0x2(%r14,%rsi), %edi
    00000215: 	movl	%edi, %eax
    00000217: 	andl	$0xff, %eax
    0000021c: 	je	.Ltmp1793 # Offset: 540
    0000021e: 	leal	-0x100(%rax), %r8d
    00000225: 	testw	%di, %di
    00000228: 	cmovsl	%r8d, %eax
.Ltmp1793:
    0000022c: 	addl	%eax, %ecx
    0000022e: 	leal	0x2(%rdx), %edi
    00000231: 	movl	%ecx, %eax
    00000233: 	cmpl	%edi, %r13d
    00000236: 	jle	.Ltmp1789 # Offset: 566
    0000023c: 	movzwl	0x4(%r14,%rsi), %edi
    00000242: 	movzbl	%dil, %eax
    00000246: 	testw	%di, %di
    00000249: 	jns	.Ltmp1794 # Offset: 585
    0000024b: 	testl	%eax, %eax
    0000024d: 	leal	-0x100(%rax), %edi
    00000253: 	setne	%r8b
    00000257: 	testb	%r8b, %r8b
    0000025a: 	cmovnel	%edi, %eax
.Ltmp1794:
    0000025d: 	addl	%eax, %ecx
    0000025f: 	leal	0x3(%rdx), %edi
    00000262: 	movl	%ecx, %eax
    00000264: 	cmpl	%edi, %r13d
    00000267: 	jle	.Ltmp1789 # Offset: 615
    0000026d: 	movzwl	0x6(%r14,%rsi), %edi
    00000273: 	movzbl	%dil, %eax
    00000277: 	testw	%di, %di
    0000027a: 	jns	.Ltmp1795 # Offset: 634
    0000027c: 	testl	%eax, %eax
    0000027e: 	leal	-0x100(%rax), %edi
    00000284: 	setne	%r8b
    00000288: 	testb	%r8b, %r8b
    0000028b: 	cmovnel	%edi, %eax
.Ltmp1795:
    0000028e: 	addl	%eax, %ecx
    00000290: 	leal	0x4(%rdx), %edi
    00000293: 	movl	%ecx, %eax
    00000295: 	cmpl	%edi, %r13d
    00000298: 	jle	.Ltmp1789 # Offset: 664
    0000029a: 	movzwl	0x8(%r14,%rsi), %edi
    000002a0: 	movzbl	%dil, %eax
    000002a4: 	testw	%di, %di
    000002a7: 	jns	.Ltmp1796 # Offset: 679
    000002a9: 	testl	%eax, %eax
    000002ab: 	leal	-0x100(%rax), %edi
    000002b1: 	setne	%r8b
    000002b5: 	testb	%r8b, %r8b
    000002b8: 	cmovnel	%edi, %eax
.Ltmp1796:
    000002bb: 	addl	%eax, %ecx
    000002bd: 	leal	0x5(%rdx), %edi
    000002c0: 	movl	%ecx, %eax
    000002c2: 	cmpl	%edi, %r13d
    000002c5: 	jle	.Ltmp1789 # Offset: 709
    000002c7: 	movzwl	0xa(%r14,%rsi), %edi
    000002cd: 	movzbl	%dil, %eax
    000002d1: 	testw	%di, %di
    000002d4: 	jns	.Ltmp1797 # Offset: 724
    000002d6: 	testl	%eax, %eax
    000002d8: 	leal	-0x100(%rax), %edi
    000002de: 	setne	%r8b
    000002e2: 	testb	%r8b, %r8b
    000002e5: 	cmovnel	%edi, %eax
.Ltmp1797:
    000002e8: 	addl	%eax, %ecx
    000002ea: 	addl	$0x6, %edx
    000002ed: 	movl	%ecx, %eax
    000002ef: 	cmpl	%edx, %r13d
    000002f2: 	jle	.Ltmp1789 # Offset: 754
    000002f4: 	movzwl	0xc(%r14,%rsi), %edx
    000002fa: 	movl	%edx, %eax
    000002fc: 	andl	$0xff, %eax
    00000301: 	je	.Ltmp1798 # Offset: 769
    00000303: 	leal	-0x100(%rax), %esi
    00000309: 	testw	%dx, %dx
    0000030c: 	cmovsl	%esi, %eax
.Ltmp1798:
    0000030f: 	addl	%ecx, %eax
.Ltmp1789:
    00000311: 	cvttsd2si	%xmm7, %ecx
    00000315: 	movzbl	%cl, %edx
    00000318: 	testw	%cx, %cx
    0000031b: 	jns	.Ltmp1799 # Offset: 795
    0000031d: 	testl	%edx, %edx
    0000031f: 	leal	-0x100(%rdx), %ecx
    00000325: 	setne	%sil
    00000329: 	testb	%sil, %sil
    0000032c: 	cmovnel	%ecx, %edx
.Ltmp1799:
    0000032f: 	imulw	$0x1f40, %dx, %dx
    00000334: 	cmpw	%ax, %dx
    00000337: 	je	.Ltmp1800 # Offset: 823
    00000339: 	movl	current_test(%rip), %edx
    0000033f: 	movq	%rbp, %rsi
    00000342: 	movl	$0x1, %edi
    00000347: 	xorl	%eax, %eax
    00000349: 	addl	$0x1, %r12d
    0000034d: 	callq	__printf_chk@PLT # Offset: 845
    00000352: 	movl	iterations(%rip), %r9d
    00000359: 	cmpl	%r9d, %r12d
    0000035c: 	jge	.Ltmp1788 # Offset: 860
    0000035e: 	movsd	init_value(%rip), %xmm7
    00000366: 	movdqa	DATAat0x57be0(%rip), %xmm6
    0000036e: 	movdqa	DATAat0x57e60(%rip), %xmm5
    00000376: 	jmp	.Ltmp1801 # Offset: 886
    0000037b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1800:
    00000380: 	addl	$0x1, %r12d
    00000384: 	cmpl	%r9d, %r12d
    00000387: 	jl	.Ltmp1801 # Offset: 903
.Ltmp1788:
    0000038d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000394: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000039b: 	subq	$0x20, %rax
    0000039f: 	cmpq	%rax, %rbx
    000003a2: 	je	.Ltmp1802 # Offset: 930
    000003a8: 	movq	0x8(%rsp), %rax
    000003ad: 	leaq	0x10(%rbx), %rdi
    000003b1: 	movq	%rdi, (%rbx)
    000003b4: 	movq	(%rax), %rbp
    000003b7: 	movq	0x8(%rax), %r12
    000003bb: 	movq	%rbp, %rax
    000003be: 	addq	%r12, %rax
    000003c1: 	je	.Ltmp1803 # Offset: 961
    000003c3: 	testq	%rbp, %rbp
    000003c6: 	je	.Ltmp1804 # Offset: 966
.Ltmp1803:
    000003cc: 	movq	%r12, 0x10(%rsp)
    000003d1: 	cmpq	$0xf, %r12
    000003d5: 	ja	.Ltmp1805 # Offset: 981
    000003db: 	cmpq	$0x1, %r12
    000003df: 	jne	.Ltmp1806 # Offset: 991
    000003e5: 	movzbl	(%rbp), %eax
    000003e9: 	movb	%al, 0x10(%rbx)
.Ltmp1810:
    000003ec: 	movq	%r12, 0x8(%rbx)
    000003f0: 	movb	$0x0, (%rdi,%r12)
    000003f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003fc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000403: 	addq	$0x20, %rax
    00000407: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000040e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000415: 	je	.Ltmp1807 # Offset: 1045
.Ltmp1811:
    0000041b: 	movq	-0x20(%rax), %rbp
    0000041f: 	callq	clock@PLT # Offset: 1055
    00000424: 	movq	%rax, end_time(%rip)
    0000042b: 	movq	0x18(%rsp), %rdx
    00000430: 	subq	%fs:0x28, %rdx
    00000439: 	jne	.Ltmp1808 # Offset: 1081
    0000043f: 	subq	start_time(%rip), %rax
    00000446: 	pxor	%xmm0, %xmm0
    0000044a: 	movq	%rbp, %rdi
    0000044d: 	cvtsi2sd	%rax, %xmm0
    00000452: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000045a: 	addq	$0x28, %rsp
    0000045e: 	popq	%rbx
    0000045f: 	popq	%rbp
    00000460: 	popq	%r12
    00000462: 	popq	%r13
    00000464: 	popq	%r14
    00000466: 	popq	%r15
    00000468: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1128
.Ltmp1790:
    0000046d: 	xorl	%edx, %edx
    0000046f: 	xorl	%eax, %eax
    00000471: 	jmp	.Ltmp1809 # Offset: 1137
.Ltmp1805:
    00000476: 	movq	%rbx, %rdi
    00000479: 	leaq	0x10(%rsp), %rsi
    0000047e: 	xorl	%edx, %edx
    00000480: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1152
    00000485: 	movq	%rax, (%rbx)
    00000488: 	movq	%rax, %rdi
    0000048b: 	movq	0x10(%rsp), %rax
    00000490: 	movq	%rax, 0x10(%rbx)
.Ltmp1812:
    00000494: 	movq	%r12, %rdx
    00000497: 	movq	%rbp, %rsi
    0000049a: 	callq	memcpy@PLT # Offset: 1178
    0000049f: 	movq	0x10(%rsp), %r12
    000004a4: 	movq	(%rbx), %rdi
    000004a7: 	jmp	.Ltmp1810 # Offset: 1191
.Ltmp1802:
    000004ac: 	movq	0x8(%rsp), %rsi
    000004b1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000004b8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1208
    000004bd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004c4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000004cb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004d2: 	jne	.Ltmp1811 # Offset: 1234
.Ltmp1807:
    000004d8: 	movq	-0x8(%rdx), %rax
    000004dc: 	addq	$0x200, %rax
    000004e2: 	jmp	.Ltmp1811 # Offset: 1250
.Ltmp1806:
    000004e7: 	testq	%r12, %r12
    000004ea: 	je	.Ltmp1810 # Offset: 1258
    000004f0: 	jmp	.Ltmp1812 # Offset: 1264
.Ltmp1808:
    000004f2: 	callq	__stack_chk_fail@PLT # Offset: 1266
.Ltmp1804:
    000004f7: 	leaq	DATAat0x57008(%rip), %rdi
    000004fe: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1278
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs14and_remainder2IsLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl13and_remainderIlLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 145
  State       : disassembled
  Address     : 0x15710
  Size        : 0x270
  MaxSize     : 0x270
  Offset      : 0x15710
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl13and_remainderIlLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0144:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp1813 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1819:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp1814 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1816:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0xff, %eax
    00000083: 	je	.Ltmp1815 # Offset: 131
    00000085: 	leaq	-0x100(%rax), %rdi
    0000008c: 	testq	%rcx, %rcx
    0000008f: 	cmovsq	%rdi, %rax
.Ltmp1815:
    00000093: 	addq	$0x8, %rdx
    00000097: 	addq	%rax, %rsi
    0000009a: 	cmpq	%rdx, %r13
    0000009d: 	jne	.Ltmp1816 # Offset: 157
.Ltmp1814:
    0000009f: 	cvttsd2si	%xmm0, %rdx
    000000a4: 	movzbl	%dl, %eax
    000000a7: 	testq	%rdx, %rdx
    000000aa: 	jns	.Ltmp1817 # Offset: 170
    000000ac: 	testq	%rax, %rax
    000000af: 	leaq	-0x100(%rax), %rdx
    000000b6: 	setne	%cl
    000000b9: 	testb	%cl, %cl
    000000bb: 	cmovneq	%rdx, %rax
.Ltmp1817:
    000000bf: 	imulq	$0x1f40, %rax, %rax
    000000c6: 	cmpq	%rsi, %rax
    000000c9: 	je	.Ltmp1818 # Offset: 201
    000000cb: 	movl	current_test(%rip), %edx
    000000d1: 	movq	%rbp, %rsi
    000000d4: 	movl	$0x1, %edi
    000000d9: 	xorl	%eax, %eax
    000000db: 	addl	$0x1, %r14d
    000000df: 	callq	__printf_chk@PLT # Offset: 223
    000000e4: 	movl	iterations(%rip), %r8d
    000000eb: 	cmpl	%r14d, %r8d
    000000ee: 	jle	.Ltmp1813 # Offset: 238
    000000f0: 	movsd	init_value(%rip), %xmm0
    000000f8: 	jmp	.Ltmp1819 # Offset: 248
    000000fd: 	nopl	(%rax) # Size: 3
.Ltmp1818:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%r8d, %r14d
    00000107: 	jl	.Ltmp1819 # Offset: 263
.Ltmp1813:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp1820 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	%rdi, (%rbx)
    0000012f: 	movq	(%r12), %rbp
    00000133: 	movq	0x8(%r12), %r12
    00000138: 	movq	%rbp, %rax
    0000013b: 	addq	%r12, %rax
    0000013e: 	je	.Ltmp1821 # Offset: 318
    00000140: 	testq	%rbp, %rbp
    00000143: 	je	.Ltmp1822 # Offset: 323
.Ltmp1821:
    00000149: 	movq	%r12, (%rsp)
    0000014d: 	cmpq	$0xf, %r12
    00000151: 	ja	.Ltmp1823 # Offset: 337
    00000157: 	cmpq	$0x1, %r12
    0000015b: 	jne	.Ltmp1824 # Offset: 347
    00000161: 	movzbl	(%rbp), %eax
    00000165: 	movb	%al, 0x10(%rbx)
.Ltmp1827:
    00000168: 	movq	%r12, 0x8(%rbx)
    0000016c: 	movb	$0x0, (%rdi,%r12)
    00000171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000178: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017f: 	addq	$0x20, %rax
    00000183: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000018a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000191: 	je	.Ltmp1825 # Offset: 401
.Ltmp1828:
    00000197: 	movq	-0x20(%rax), %rbp
    0000019b: 	callq	clock@PLT # Offset: 411
    000001a0: 	movq	%rax, end_time(%rip)
    000001a7: 	movq	0x8(%rsp), %rdx
    000001ac: 	subq	%fs:0x28, %rdx
    000001b5: 	jne	.Ltmp1826 # Offset: 437
    000001bb: 	subq	start_time(%rip), %rax
    000001c2: 	pxor	%xmm0, %xmm0
    000001c6: 	movq	%rbp, %rdi
    000001c9: 	cvtsi2sd	%rax, %xmm0
    000001ce: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d6: 	addq	$0x18, %rsp
    000001da: 	popq	%rbx
    000001db: 	popq	%rbp
    000001dc: 	popq	%r12
    000001de: 	popq	%r13
    000001e0: 	popq	%r14
    000001e2: 	popq	%r15
    000001e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 484
.Ltmp1823:
    000001e9: 	movq	%rbx, %rdi
    000001ec: 	movq	%rsp, %rsi
    000001ef: 	xorl	%edx, %edx
    000001f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 497
    000001f6: 	movq	%rax, (%rbx)
    000001f9: 	movq	%rax, %rdi
    000001fc: 	movq	(%rsp), %rax
    00000200: 	movq	%rax, 0x10(%rbx)
.Ltmp1829:
    00000204: 	movq	%r12, %rdx
    00000207: 	movq	%rbp, %rsi
    0000020a: 	callq	memcpy@PLT # Offset: 522
    0000020f: 	movq	(%rsp), %r12
    00000213: 	movq	(%rbx), %rdi
    00000216: 	jmp	.Ltmp1827 # Offset: 534
.Ltmp1820:
    0000021b: 	movq	%r12, %rsi
    0000021e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000225: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 549
    0000022a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000231: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000238: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023f: 	jne	.Ltmp1828 # Offset: 575
.Ltmp1825:
    00000245: 	movq	-0x8(%rdx), %rax
    00000249: 	addq	$0x200, %rax
    0000024f: 	jmp	.Ltmp1828 # Offset: 591
.Ltmp1824:
    00000254: 	testq	%r12, %r12
    00000257: 	je	.Ltmp1827 # Offset: 599
    0000025d: 	jmp	.Ltmp1829 # Offset: 605
.Ltmp1826:
    0000025f: 	callq	__stack_chk_fail@PLT # Offset: 607
.Ltmp1822:
    00000264: 	leaq	DATAat0x57008(%rip), %rdi
    0000026b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 619
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl13and_remainderIlLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs14and_remainder2IsLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 146
  State       : disassembled
  Address     : 0x15980
  Size        : 0x4f3
  MaxSize     : 0x500
  Offset      : 0x15980
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs14and_remainder2IsLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0145:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp1830 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57e20(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57d50(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1843:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp1831 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1832 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r14, %rax
    000000ad: 	pxor	%xmm2, %xmm2
    000000b1: 	movdqa	%xmm3, %xmm4
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp1833:
    000000b8: 	movdqu	(%rax), %xmm8
    000000bd: 	movdqa	%xmm4, %xmm0
    000000c1: 	movdqu	(%rax), %xmm12
    000000c6: 	movdqa	%xmm4, %xmm11
    000000cb: 	addq	$0x10, %rax
    000000cf: 	pand	%xmm6, %xmm8
    000000d4: 	pcmpgtw	%xmm8, %xmm0
    000000d9: 	movdqa	%xmm8, %xmm9
    000000de: 	punpcklwd	%xmm0, %xmm9
    000000e3: 	punpckhwd	%xmm0, %xmm8
    000000e8: 	movdqa	%xmm8, %xmm1
    000000ed: 	movdqa	%xmm9, %xmm0
    000000f2: 	pcmpeqd	%xmm2, %xmm0
    000000f6: 	pcmpeqd	%xmm2, %xmm1
    000000fa: 	pcmpeqd	%xmm2, %xmm0
    000000fe: 	pcmpeqd	%xmm2, %xmm1
    00000102: 	movdqa	%xmm0, %xmm10
    00000107: 	punpcklwd	%xmm1, %xmm0
    0000010b: 	punpckhwd	%xmm1, %xmm10
    00000110: 	movdqa	%xmm0, %xmm1
    00000114: 	punpckhwd	%xmm10, %xmm1
    00000119: 	punpcklwd	%xmm10, %xmm0
    0000011e: 	movdqa	%xmm5, %xmm10
    00000123: 	punpcklwd	%xmm1, %xmm0
    00000127: 	movdqa	%xmm4, %xmm1
    0000012b: 	paddd	%xmm9, %xmm10
    00000130: 	pcmpgtw	%xmm12, %xmm1
    00000135: 	pand	%xmm1, %xmm0
    00000139: 	pcmpgtw	%xmm0, %xmm11
    0000013e: 	movdqa	%xmm0, %xmm1
    00000142: 	punpcklwd	%xmm11, %xmm1
    00000147: 	punpckhwd	%xmm11, %xmm0
    0000014c: 	pand	%xmm1, %xmm10
    00000151: 	pandn	%xmm9, %xmm1
    00000156: 	movdqa	%xmm5, %xmm9
    0000015b: 	paddd	%xmm8, %xmm9
    00000160: 	por	%xmm10, %xmm1
    00000165: 	pand	%xmm0, %xmm9
    0000016a: 	pandn	%xmm8, %xmm0
    0000016f: 	movdqa	%xmm1, %xmm8
    00000174: 	por	%xmm9, %xmm0
    00000179: 	punpcklwd	%xmm0, %xmm1
    0000017d: 	punpckhwd	%xmm0, %xmm8
    00000182: 	movdqa	%xmm1, %xmm0
    00000186: 	punpcklwd	%xmm8, %xmm1
    0000018b: 	punpckhwd	%xmm8, %xmm0
    00000190: 	punpcklwd	%xmm0, %xmm1
    00000194: 	paddw	%xmm1, %xmm3
    00000198: 	cmpq	%r15, %rax
    0000019b: 	jne	.Ltmp1833 # Offset: 411
    000001a1: 	movdqa	%xmm3, %xmm0
    000001a5: 	psrldq	$0x8, %xmm0
    000001aa: 	paddw	%xmm0, %xmm3
    000001ae: 	movdqa	%xmm3, %xmm0
    000001b2: 	psrldq	$0x4, %xmm0
    000001b7: 	paddw	%xmm0, %xmm3
    000001bb: 	movdqa	%xmm3, %xmm0
    000001bf: 	psrldq	$0x2, %xmm0
    000001c4: 	paddw	%xmm0, %xmm3
    000001c8: 	pextrw	$0x0, %xmm3, %eax
    000001cd: 	cmpl	%r13d, %ebx
    000001d0: 	je	.Ltmp1831 # Offset: 464
    000001d6: 	movl	%ebx, %edx
.Ltmp1851:
    000001d8: 	movslq	%edx, %rcx
    000001db: 	movzwl	(%r14,%rcx,2), %edi
    000001e0: 	leaq	(%rcx,%rcx), %rsi
    000001e4: 	movl	%edi, %ecx
    000001e6: 	andl	$0x1f, %ecx
    000001e9: 	testw	%di, %di
    000001ec: 	jns	.Ltmp1834 # Offset: 492
    000001ee: 	testl	%ecx, %ecx
    000001f0: 	leal	-0x20(%rcx), %edi
    000001f3: 	setne	%r8b
    000001f7: 	testb	%r8b, %r8b
    000001fa: 	cmovnel	%edi, %ecx
.Ltmp1834:
    000001fd: 	addl	%eax, %ecx
    000001ff: 	leal	0x1(%rdx), %edi
    00000202: 	movl	%ecx, %eax
    00000204: 	cmpl	%edi, %r13d
    00000207: 	jle	.Ltmp1831 # Offset: 519
    0000020d: 	movzwl	0x2(%r14,%rsi), %edi
    00000213: 	movl	%edi, %eax
    00000215: 	andl	$0x1f, %eax
    00000218: 	je	.Ltmp1835 # Offset: 536
    0000021a: 	leal	-0x20(%rax), %r8d
    0000021e: 	testw	%di, %di
    00000221: 	cmovsl	%r8d, %eax
.Ltmp1835:
    00000225: 	addl	%eax, %ecx
    00000227: 	leal	0x2(%rdx), %edi
    0000022a: 	movl	%ecx, %eax
    0000022c: 	cmpl	%edi, %r13d
    0000022f: 	jle	.Ltmp1831 # Offset: 559
    00000235: 	movzwl	0x4(%r14,%rsi), %edi
    0000023b: 	movl	%edi, %eax
    0000023d: 	andl	$0x1f, %eax
    00000240: 	testw	%di, %di
    00000243: 	jns	.Ltmp1836 # Offset: 579
    00000245: 	testl	%eax, %eax
    00000247: 	leal	-0x20(%rax), %edi
    0000024a: 	setne	%r8b
    0000024e: 	testb	%r8b, %r8b
    00000251: 	cmovnel	%edi, %eax
.Ltmp1836:
    00000254: 	addl	%eax, %ecx
    00000256: 	leal	0x3(%rdx), %edi
    00000259: 	movl	%ecx, %eax
    0000025b: 	cmpl	%edi, %r13d
    0000025e: 	jle	.Ltmp1831 # Offset: 606
    00000264: 	movzwl	0x6(%r14,%rsi), %edi
    0000026a: 	movl	%edi, %eax
    0000026c: 	andl	$0x1f, %eax
    0000026f: 	testw	%di, %di
    00000272: 	jns	.Ltmp1837 # Offset: 626
    00000274: 	testl	%eax, %eax
    00000276: 	leal	-0x20(%rax), %edi
    00000279: 	setne	%r8b
    0000027d: 	testb	%r8b, %r8b
    00000280: 	cmovnel	%edi, %eax
.Ltmp1837:
    00000283: 	addl	%eax, %ecx
    00000285: 	leal	0x4(%rdx), %edi
    00000288: 	movl	%ecx, %eax
    0000028a: 	cmpl	%edi, %r13d
    0000028d: 	jle	.Ltmp1831 # Offset: 653
    0000028f: 	movzwl	0x8(%r14,%rsi), %edi
    00000295: 	movl	%edi, %eax
    00000297: 	andl	$0x1f, %eax
    0000029a: 	testw	%di, %di
    0000029d: 	jns	.Ltmp1838 # Offset: 669
    0000029f: 	testl	%eax, %eax
    000002a1: 	leal	-0x20(%rax), %edi
    000002a4: 	setne	%r8b
    000002a8: 	testb	%r8b, %r8b
    000002ab: 	cmovnel	%edi, %eax
.Ltmp1838:
    000002ae: 	addl	%eax, %ecx
    000002b0: 	leal	0x5(%rdx), %edi
    000002b3: 	movl	%ecx, %eax
    000002b5: 	cmpl	%edi, %r13d
    000002b8: 	jle	.Ltmp1831 # Offset: 696
    000002ba: 	movzwl	0xa(%r14,%rsi), %edi
    000002c0: 	movl	%edi, %eax
    000002c2: 	andl	$0x1f, %eax
    000002c5: 	testw	%di, %di
    000002c8: 	jns	.Ltmp1839 # Offset: 712
    000002ca: 	testl	%eax, %eax
    000002cc: 	leal	-0x20(%rax), %edi
    000002cf: 	setne	%r8b
    000002d3: 	testb	%r8b, %r8b
    000002d6: 	cmovnel	%edi, %eax
.Ltmp1839:
    000002d9: 	addl	%eax, %ecx
    000002db: 	addl	$0x6, %edx
    000002de: 	movl	%ecx, %eax
    000002e0: 	cmpl	%edx, %r13d
    000002e3: 	jle	.Ltmp1831 # Offset: 739
    000002e5: 	movzwl	0xc(%r14,%rsi), %edx
    000002eb: 	movl	%edx, %eax
    000002ed: 	andl	$0x1f, %eax
    000002f0: 	je	.Ltmp1840 # Offset: 752
    000002f2: 	leal	-0x20(%rax), %esi
    000002f5: 	testw	%dx, %dx
    000002f8: 	cmovsl	%esi, %eax
.Ltmp1840:
    000002fb: 	addl	%ecx, %eax
.Ltmp1831:
    000002fd: 	cvttsd2si	%xmm7, %ecx
    00000301: 	movl	%ecx, %edx
    00000303: 	andl	$0x1f, %edx
    00000306: 	testw	%cx, %cx
    00000309: 	jns	.Ltmp1841 # Offset: 777
    0000030b: 	testl	%edx, %edx
    0000030d: 	leal	-0x20(%rdx), %ecx
    00000310: 	setne	%sil
    00000314: 	testb	%sil, %sil
    00000317: 	cmovnel	%ecx, %edx
.Ltmp1841:
    0000031a: 	imulw	$0x1f40, %dx, %dx
    0000031f: 	cmpw	%ax, %dx
    00000322: 	je	.Ltmp1842 # Offset: 802
    00000324: 	movl	current_test(%rip), %edx
    0000032a: 	movq	%rbp, %rsi
    0000032d: 	movl	$0x1, %edi
    00000332: 	xorl	%eax, %eax
    00000334: 	addl	$0x1, %r12d
    00000338: 	callq	__printf_chk@PLT # Offset: 824
    0000033d: 	movl	iterations(%rip), %r9d
    00000344: 	cmpl	%r9d, %r12d
    00000347: 	jge	.Ltmp1830 # Offset: 839
    00000349: 	movsd	init_value(%rip), %xmm7
    00000351: 	movdqa	DATAat0x57e20(%rip), %xmm6
    00000359: 	movdqa	DATAat0x57d50(%rip), %xmm5
    00000361: 	jmp	.Ltmp1843 # Offset: 865
    00000366: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1842:
    00000370: 	addl	$0x1, %r12d
    00000374: 	cmpl	%r9d, %r12d
    00000377: 	jl	.Ltmp1843 # Offset: 887
.Ltmp1830:
    0000037d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000384: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000038b: 	subq	$0x20, %rax
    0000038f: 	cmpq	%rax, %rbx
    00000392: 	je	.Ltmp1844 # Offset: 914
    00000398: 	movq	0x8(%rsp), %rax
    0000039d: 	leaq	0x10(%rbx), %rdi
    000003a1: 	movq	%rdi, (%rbx)
    000003a4: 	movq	(%rax), %rbp
    000003a7: 	movq	0x8(%rax), %r12
    000003ab: 	movq	%rbp, %rax
    000003ae: 	addq	%r12, %rax
    000003b1: 	je	.Ltmp1845 # Offset: 945
    000003b3: 	testq	%rbp, %rbp
    000003b6: 	je	.Ltmp1846 # Offset: 950
.Ltmp1845:
    000003bc: 	movq	%r12, 0x10(%rsp)
    000003c1: 	cmpq	$0xf, %r12
    000003c5: 	ja	.Ltmp1847 # Offset: 965
    000003cb: 	cmpq	$0x1, %r12
    000003cf: 	jne	.Ltmp1848 # Offset: 975
    000003d5: 	movzbl	(%rbp), %eax
    000003d9: 	movb	%al, 0x10(%rbx)
.Ltmp1852:
    000003dc: 	movq	%r12, 0x8(%rbx)
    000003e0: 	movb	$0x0, (%rdi,%r12)
    000003e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003f3: 	addq	$0x20, %rax
    000003f7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003fe: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000405: 	je	.Ltmp1849 # Offset: 1029
.Ltmp1853:
    0000040b: 	movq	-0x20(%rax), %rbp
    0000040f: 	callq	clock@PLT # Offset: 1039
    00000414: 	movq	%rax, end_time(%rip)
    0000041b: 	movq	0x18(%rsp), %rdx
    00000420: 	subq	%fs:0x28, %rdx
    00000429: 	jne	.Ltmp1850 # Offset: 1065
    0000042f: 	subq	start_time(%rip), %rax
    00000436: 	pxor	%xmm0, %xmm0
    0000043a: 	movq	%rbp, %rdi
    0000043d: 	cvtsi2sd	%rax, %xmm0
    00000442: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000044a: 	addq	$0x28, %rsp
    0000044e: 	popq	%rbx
    0000044f: 	popq	%rbp
    00000450: 	popq	%r12
    00000452: 	popq	%r13
    00000454: 	popq	%r14
    00000456: 	popq	%r15
    00000458: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1112
.Ltmp1832:
    0000045d: 	xorl	%edx, %edx
    0000045f: 	xorl	%eax, %eax
    00000461: 	jmp	.Ltmp1851 # Offset: 1121
.Ltmp1847:
    00000466: 	movq	%rbx, %rdi
    00000469: 	leaq	0x10(%rsp), %rsi
    0000046e: 	xorl	%edx, %edx
    00000470: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1136
    00000475: 	movq	%rax, (%rbx)
    00000478: 	movq	%rax, %rdi
    0000047b: 	movq	0x10(%rsp), %rax
    00000480: 	movq	%rax, 0x10(%rbx)
.Ltmp1854:
    00000484: 	movq	%r12, %rdx
    00000487: 	movq	%rbp, %rsi
    0000048a: 	callq	memcpy@PLT # Offset: 1162
    0000048f: 	movq	0x10(%rsp), %r12
    00000494: 	movq	(%rbx), %rdi
    00000497: 	jmp	.Ltmp1852 # Offset: 1175
.Ltmp1844:
    0000049c: 	movq	0x8(%rsp), %rsi
    000004a1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000004a8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1192
    000004ad: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004b4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000004bb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004c2: 	jne	.Ltmp1853 # Offset: 1218
.Ltmp1849:
    000004c8: 	movq	-0x8(%rdx), %rax
    000004cc: 	addq	$0x200, %rax
    000004d2: 	jmp	.Ltmp1853 # Offset: 1234
.Ltmp1848:
    000004d7: 	testq	%r12, %r12
    000004da: 	je	.Ltmp1852 # Offset: 1242
    000004e0: 	jmp	.Ltmp1854 # Offset: 1248
.Ltmp1850:
    000004e2: 	callq	__stack_chk_fail@PLT # Offset: 1250
.Ltmp1846:
    000004e7: 	leaq	DATAat0x57008(%rip), %rdi
    000004ee: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1262
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs14and_remainder2IsLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl13and_remainderIlLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 147
  State       : disassembled
  Address     : 0x15e80
  Size        : 0x270
  MaxSize     : 0x270
  Offset      : 0x15e80
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl13and_remainderIlLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0146:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp1855 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1861:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp1856 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1858:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0x7f, %eax
    00000081: 	je	.Ltmp1857 # Offset: 129
    00000083: 	leaq	-0x80(%rax), %rdi
    00000087: 	testq	%rcx, %rcx
    0000008a: 	cmovsq	%rdi, %rax
.Ltmp1857:
    0000008e: 	addq	$0x8, %rdx
    00000092: 	addq	%rax, %rsi
    00000095: 	cmpq	%rdx, %r13
    00000098: 	jne	.Ltmp1858 # Offset: 152
.Ltmp1856:
    0000009a: 	cvttsd2si	%xmm0, %rdx
    0000009f: 	movq	%rdx, %rax
    000000a2: 	andl	$0x7f, %eax
    000000a5: 	testq	%rdx, %rdx
    000000a8: 	jns	.Ltmp1859 # Offset: 168
    000000aa: 	testq	%rax, %rax
    000000ad: 	leaq	-0x80(%rax), %rdx
    000000b1: 	setne	%cl
    000000b4: 	testb	%cl, %cl
    000000b6: 	cmovneq	%rdx, %rax
.Ltmp1859:
    000000ba: 	imulq	$0x1f40, %rax, %rax
    000000c1: 	cmpq	%rsi, %rax
    000000c4: 	je	.Ltmp1860 # Offset: 196
    000000c6: 	movl	current_test(%rip), %edx
    000000cc: 	movq	%rbp, %rsi
    000000cf: 	movl	$0x1, %edi
    000000d4: 	xorl	%eax, %eax
    000000d6: 	addl	$0x1, %r14d
    000000da: 	callq	__printf_chk@PLT # Offset: 218
    000000df: 	movl	iterations(%rip), %r8d
    000000e6: 	cmpl	%r14d, %r8d
    000000e9: 	jle	.Ltmp1855 # Offset: 233
    000000eb: 	movsd	init_value(%rip), %xmm0
    000000f3: 	jmp	.Ltmp1861 # Offset: 243
    000000f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1860:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%r8d, %r14d
    00000107: 	jl	.Ltmp1861 # Offset: 263
.Ltmp1855:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp1862 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	%rdi, (%rbx)
    0000012f: 	movq	(%r12), %rbp
    00000133: 	movq	0x8(%r12), %r12
    00000138: 	movq	%rbp, %rax
    0000013b: 	addq	%r12, %rax
    0000013e: 	je	.Ltmp1863 # Offset: 318
    00000140: 	testq	%rbp, %rbp
    00000143: 	je	.Ltmp1864 # Offset: 323
.Ltmp1863:
    00000149: 	movq	%r12, (%rsp)
    0000014d: 	cmpq	$0xf, %r12
    00000151: 	ja	.Ltmp1865 # Offset: 337
    00000157: 	cmpq	$0x1, %r12
    0000015b: 	jne	.Ltmp1866 # Offset: 347
    00000161: 	movzbl	(%rbp), %eax
    00000165: 	movb	%al, 0x10(%rbx)
.Ltmp1869:
    00000168: 	movq	%r12, 0x8(%rbx)
    0000016c: 	movb	$0x0, (%rdi,%r12)
    00000171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000178: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017f: 	addq	$0x20, %rax
    00000183: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000018a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000191: 	je	.Ltmp1867 # Offset: 401
.Ltmp1870:
    00000197: 	movq	-0x20(%rax), %rbp
    0000019b: 	callq	clock@PLT # Offset: 411
    000001a0: 	movq	%rax, end_time(%rip)
    000001a7: 	movq	0x8(%rsp), %rdx
    000001ac: 	subq	%fs:0x28, %rdx
    000001b5: 	jne	.Ltmp1868 # Offset: 437
    000001bb: 	subq	start_time(%rip), %rax
    000001c2: 	pxor	%xmm0, %xmm0
    000001c6: 	movq	%rbp, %rdi
    000001c9: 	cvtsi2sd	%rax, %xmm0
    000001ce: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d6: 	addq	$0x18, %rsp
    000001da: 	popq	%rbx
    000001db: 	popq	%rbp
    000001dc: 	popq	%r12
    000001de: 	popq	%r13
    000001e0: 	popq	%r14
    000001e2: 	popq	%r15
    000001e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 484
.Ltmp1865:
    000001e9: 	movq	%rbx, %rdi
    000001ec: 	movq	%rsp, %rsi
    000001ef: 	xorl	%edx, %edx
    000001f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 497
    000001f6: 	movq	%rax, (%rbx)
    000001f9: 	movq	%rax, %rdi
    000001fc: 	movq	(%rsp), %rax
    00000200: 	movq	%rax, 0x10(%rbx)
.Ltmp1871:
    00000204: 	movq	%r12, %rdx
    00000207: 	movq	%rbp, %rsi
    0000020a: 	callq	memcpy@PLT # Offset: 522
    0000020f: 	movq	(%rsp), %r12
    00000213: 	movq	(%rbx), %rdi
    00000216: 	jmp	.Ltmp1869 # Offset: 534
.Ltmp1862:
    0000021b: 	movq	%r12, %rsi
    0000021e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000225: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 549
    0000022a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000231: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000238: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023f: 	jne	.Ltmp1870 # Offset: 575
.Ltmp1867:
    00000245: 	movq	-0x8(%rdx), %rax
    00000249: 	addq	$0x200, %rax
    0000024f: 	jmp	.Ltmp1870 # Offset: 591
.Ltmp1866:
    00000254: 	testq	%r12, %r12
    00000257: 	je	.Ltmp1869 # Offset: 599
    0000025d: 	jmp	.Ltmp1871 # Offset: 605
.Ltmp1868:
    0000025f: 	callq	__stack_chk_fail@PLT # Offset: 607
.Ltmp1864:
    00000264: 	leaq	DATAat0x57008(%rip), %rdi
    0000026b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 619
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl13and_remainderIlLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl14and_remainder2IlLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 148
  State       : disassembled
  Address     : 0x160f0
  Size        : 0x270
  MaxSize     : 0x270
  Offset      : 0x160f0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl14and_remainder2IlLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0147:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp1872 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1878:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp1873 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1875:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0xff, %eax
    00000083: 	je	.Ltmp1874 # Offset: 131
    00000085: 	leaq	-0x100(%rax), %rdi
    0000008c: 	testq	%rcx, %rcx
    0000008f: 	cmovsq	%rdi, %rax
.Ltmp1874:
    00000093: 	addq	$0x8, %rdx
    00000097: 	addq	%rax, %rsi
    0000009a: 	cmpq	%rdx, %r13
    0000009d: 	jne	.Ltmp1875 # Offset: 157
.Ltmp1873:
    0000009f: 	cvttsd2si	%xmm0, %rdx
    000000a4: 	movzbl	%dl, %eax
    000000a7: 	testq	%rdx, %rdx
    000000aa: 	jns	.Ltmp1876 # Offset: 170
    000000ac: 	testq	%rax, %rax
    000000af: 	leaq	-0x100(%rax), %rdx
    000000b6: 	setne	%cl
    000000b9: 	testb	%cl, %cl
    000000bb: 	cmovneq	%rdx, %rax
.Ltmp1876:
    000000bf: 	imulq	$0x1f40, %rax, %rax
    000000c6: 	cmpq	%rsi, %rax
    000000c9: 	je	.Ltmp1877 # Offset: 201
    000000cb: 	movl	current_test(%rip), %edx
    000000d1: 	movq	%rbp, %rsi
    000000d4: 	movl	$0x1, %edi
    000000d9: 	xorl	%eax, %eax
    000000db: 	addl	$0x1, %r14d
    000000df: 	callq	__printf_chk@PLT # Offset: 223
    000000e4: 	movl	iterations(%rip), %r8d
    000000eb: 	cmpl	%r14d, %r8d
    000000ee: 	jle	.Ltmp1872 # Offset: 238
    000000f0: 	movsd	init_value(%rip), %xmm0
    000000f8: 	jmp	.Ltmp1878 # Offset: 248
    000000fd: 	nopl	(%rax) # Size: 3
.Ltmp1877:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%r8d, %r14d
    00000107: 	jl	.Ltmp1878 # Offset: 263
.Ltmp1872:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp1879 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	%rdi, (%rbx)
    0000012f: 	movq	(%r12), %rbp
    00000133: 	movq	0x8(%r12), %r12
    00000138: 	movq	%rbp, %rax
    0000013b: 	addq	%r12, %rax
    0000013e: 	je	.Ltmp1880 # Offset: 318
    00000140: 	testq	%rbp, %rbp
    00000143: 	je	.Ltmp1881 # Offset: 323
.Ltmp1880:
    00000149: 	movq	%r12, (%rsp)
    0000014d: 	cmpq	$0xf, %r12
    00000151: 	ja	.Ltmp1882 # Offset: 337
    00000157: 	cmpq	$0x1, %r12
    0000015b: 	jne	.Ltmp1883 # Offset: 347
    00000161: 	movzbl	(%rbp), %eax
    00000165: 	movb	%al, 0x10(%rbx)
.Ltmp1886:
    00000168: 	movq	%r12, 0x8(%rbx)
    0000016c: 	movb	$0x0, (%rdi,%r12)
    00000171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000178: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017f: 	addq	$0x20, %rax
    00000183: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000018a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000191: 	je	.Ltmp1884 # Offset: 401
.Ltmp1887:
    00000197: 	movq	-0x20(%rax), %rbp
    0000019b: 	callq	clock@PLT # Offset: 411
    000001a0: 	movq	%rax, end_time(%rip)
    000001a7: 	movq	0x8(%rsp), %rdx
    000001ac: 	subq	%fs:0x28, %rdx
    000001b5: 	jne	.Ltmp1885 # Offset: 437
    000001bb: 	subq	start_time(%rip), %rax
    000001c2: 	pxor	%xmm0, %xmm0
    000001c6: 	movq	%rbp, %rdi
    000001c9: 	cvtsi2sd	%rax, %xmm0
    000001ce: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d6: 	addq	$0x18, %rsp
    000001da: 	popq	%rbx
    000001db: 	popq	%rbp
    000001dc: 	popq	%r12
    000001de: 	popq	%r13
    000001e0: 	popq	%r14
    000001e2: 	popq	%r15
    000001e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 484
.Ltmp1882:
    000001e9: 	movq	%rbx, %rdi
    000001ec: 	movq	%rsp, %rsi
    000001ef: 	xorl	%edx, %edx
    000001f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 497
    000001f6: 	movq	%rax, (%rbx)
    000001f9: 	movq	%rax, %rdi
    000001fc: 	movq	(%rsp), %rax
    00000200: 	movq	%rax, 0x10(%rbx)
.Ltmp1888:
    00000204: 	movq	%r12, %rdx
    00000207: 	movq	%rbp, %rsi
    0000020a: 	callq	memcpy@PLT # Offset: 522
    0000020f: 	movq	(%rsp), %r12
    00000213: 	movq	(%rbx), %rdi
    00000216: 	jmp	.Ltmp1886 # Offset: 534
.Ltmp1879:
    0000021b: 	movq	%r12, %rsi
    0000021e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000225: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 549
    0000022a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000231: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000238: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023f: 	jne	.Ltmp1887 # Offset: 575
.Ltmp1884:
    00000245: 	movq	-0x8(%rdx), %rax
    00000249: 	addq	$0x200, %rax
    0000024f: 	jmp	.Ltmp1887 # Offset: 591
.Ltmp1883:
    00000254: 	testq	%r12, %r12
    00000257: 	je	.Ltmp1886 # Offset: 599
    0000025d: 	jmp	.Ltmp1888 # Offset: 605
.Ltmp1885:
    0000025f: 	callq	__stack_chk_fail@PLT # Offset: 607
.Ltmp1881:
    00000264: 	leaq	DATAat0x57008(%rip), %rdi
    0000026b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 619
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl14and_remainder2IlLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl13and_remainderIlLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 149
  State       : disassembled
  Address     : 0x16360
  Size        : 0x270
  MaxSize     : 0x270
  Offset      : 0x16360
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl13and_remainderIlLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0148:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp1889 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1895:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp1890 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1892:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0x1f, %eax
    00000081: 	je	.Ltmp1891 # Offset: 129
    00000083: 	leaq	-0x20(%rax), %rdi
    00000087: 	testq	%rcx, %rcx
    0000008a: 	cmovsq	%rdi, %rax
.Ltmp1891:
    0000008e: 	addq	$0x8, %rdx
    00000092: 	addq	%rax, %rsi
    00000095: 	cmpq	%rdx, %r13
    00000098: 	jne	.Ltmp1892 # Offset: 152
.Ltmp1890:
    0000009a: 	cvttsd2si	%xmm0, %rdx
    0000009f: 	movq	%rdx, %rax
    000000a2: 	andl	$0x1f, %eax
    000000a5: 	testq	%rdx, %rdx
    000000a8: 	jns	.Ltmp1893 # Offset: 168
    000000aa: 	testq	%rax, %rax
    000000ad: 	leaq	-0x20(%rax), %rdx
    000000b1: 	setne	%cl
    000000b4: 	testb	%cl, %cl
    000000b6: 	cmovneq	%rdx, %rax
.Ltmp1893:
    000000ba: 	imulq	$0x1f40, %rax, %rax
    000000c1: 	cmpq	%rsi, %rax
    000000c4: 	je	.Ltmp1894 # Offset: 196
    000000c6: 	movl	current_test(%rip), %edx
    000000cc: 	movq	%rbp, %rsi
    000000cf: 	movl	$0x1, %edi
    000000d4: 	xorl	%eax, %eax
    000000d6: 	addl	$0x1, %r14d
    000000da: 	callq	__printf_chk@PLT # Offset: 218
    000000df: 	movl	iterations(%rip), %r8d
    000000e6: 	cmpl	%r14d, %r8d
    000000e9: 	jle	.Ltmp1889 # Offset: 233
    000000eb: 	movsd	init_value(%rip), %xmm0
    000000f3: 	jmp	.Ltmp1895 # Offset: 243
    000000f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1894:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%r8d, %r14d
    00000107: 	jl	.Ltmp1895 # Offset: 263
.Ltmp1889:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp1896 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	%rdi, (%rbx)
    0000012f: 	movq	(%r12), %rbp
    00000133: 	movq	0x8(%r12), %r12
    00000138: 	movq	%rbp, %rax
    0000013b: 	addq	%r12, %rax
    0000013e: 	je	.Ltmp1897 # Offset: 318
    00000140: 	testq	%rbp, %rbp
    00000143: 	je	.Ltmp1898 # Offset: 323
.Ltmp1897:
    00000149: 	movq	%r12, (%rsp)
    0000014d: 	cmpq	$0xf, %r12
    00000151: 	ja	.Ltmp1899 # Offset: 337
    00000157: 	cmpq	$0x1, %r12
    0000015b: 	jne	.Ltmp1900 # Offset: 347
    00000161: 	movzbl	(%rbp), %eax
    00000165: 	movb	%al, 0x10(%rbx)
.Ltmp1903:
    00000168: 	movq	%r12, 0x8(%rbx)
    0000016c: 	movb	$0x0, (%rdi,%r12)
    00000171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000178: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017f: 	addq	$0x20, %rax
    00000183: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000018a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000191: 	je	.Ltmp1901 # Offset: 401
.Ltmp1904:
    00000197: 	movq	-0x20(%rax), %rbp
    0000019b: 	callq	clock@PLT # Offset: 411
    000001a0: 	movq	%rax, end_time(%rip)
    000001a7: 	movq	0x8(%rsp), %rdx
    000001ac: 	subq	%fs:0x28, %rdx
    000001b5: 	jne	.Ltmp1902 # Offset: 437
    000001bb: 	subq	start_time(%rip), %rax
    000001c2: 	pxor	%xmm0, %xmm0
    000001c6: 	movq	%rbp, %rdi
    000001c9: 	cvtsi2sd	%rax, %xmm0
    000001ce: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d6: 	addq	$0x18, %rsp
    000001da: 	popq	%rbx
    000001db: 	popq	%rbp
    000001dc: 	popq	%r12
    000001de: 	popq	%r13
    000001e0: 	popq	%r14
    000001e2: 	popq	%r15
    000001e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 484
.Ltmp1899:
    000001e9: 	movq	%rbx, %rdi
    000001ec: 	movq	%rsp, %rsi
    000001ef: 	xorl	%edx, %edx
    000001f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 497
    000001f6: 	movq	%rax, (%rbx)
    000001f9: 	movq	%rax, %rdi
    000001fc: 	movq	(%rsp), %rax
    00000200: 	movq	%rax, 0x10(%rbx)
.Ltmp1905:
    00000204: 	movq	%r12, %rdx
    00000207: 	movq	%rbp, %rsi
    0000020a: 	callq	memcpy@PLT # Offset: 522
    0000020f: 	movq	(%rsp), %r12
    00000213: 	movq	(%rbx), %rdi
    00000216: 	jmp	.Ltmp1903 # Offset: 534
.Ltmp1896:
    0000021b: 	movq	%r12, %rsi
    0000021e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000225: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 549
    0000022a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000231: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000238: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023f: 	jne	.Ltmp1904 # Offset: 575
.Ltmp1901:
    00000245: 	movq	-0x8(%rdx), %rax
    00000249: 	addq	$0x200, %rax
    0000024f: 	jmp	.Ltmp1904 # Offset: 591
.Ltmp1900:
    00000254: 	testq	%r12, %r12
    00000257: 	je	.Ltmp1903 # Offset: 599
    0000025d: 	jmp	.Ltmp1905 # Offset: 605
.Ltmp1902:
    0000025f: 	callq	__stack_chk_fail@PLT # Offset: 607
.Ltmp1898:
    00000264: 	leaq	DATAat0x57008(%rip), %rdi
    0000026b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 619
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl13and_remainderIlLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi13and_remainderIiLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 150
  State       : disassembled
  Address     : 0x165d0
  Size        : 0x383
  MaxSize     : 0x390
  Offset      : 0x165d0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi13and_remainderIiLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0149:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1906 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57e50(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57d50(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp1915:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp1907 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1908 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp1909:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp1909 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp1907 # Offset: 288
.Ltmp1923:
    00000122: 	movslq	%edx, %rcx
    00000125: 	movl	(%r15,%rcx,4), %edi
    00000129: 	leaq	(,%rcx,4), %r8
    00000131: 	movl	%edi, %ecx
    00000133: 	andl	$0x1f, %ecx
    00000136: 	testl	%edi, %edi
    00000138: 	jns	.Ltmp1910 # Offset: 312
    0000013a: 	testl	%ecx, %ecx
    0000013c: 	leal	-0x20(%rcx), %edi
    0000013f: 	setne	%r9b
    00000143: 	testb	%r9b, %r9b
    00000146: 	cmovnel	%edi, %ecx
.Ltmp1910:
    00000149: 	addl	%ecx, %eax
    0000014b: 	leal	0x1(%rdx), %ecx
    0000014e: 	cmpl	%ecx, %r14d
    00000151: 	jle	.Ltmp1907 # Offset: 337
    00000153: 	movl	0x4(%r15,%r8), %edi
    00000158: 	movl	%edi, %ecx
    0000015a: 	andl	$0x1f, %ecx
    0000015d: 	testl	%edi, %edi
    0000015f: 	jns	.Ltmp1911 # Offset: 351
    00000161: 	testl	%ecx, %ecx
    00000163: 	leal	-0x20(%rcx), %edi
    00000166: 	setne	%r9b
    0000016a: 	testb	%r9b, %r9b
    0000016d: 	cmovnel	%edi, %ecx
.Ltmp1911:
    00000170: 	addl	$0x2, %edx
    00000173: 	addl	%ecx, %eax
    00000175: 	cmpl	%edx, %r14d
    00000178: 	jle	.Ltmp1907 # Offset: 376
    0000017a: 	movl	0x8(%r15,%r8), %ecx
    0000017f: 	movl	%ecx, %edx
    00000181: 	andl	$0x1f, %edx
    00000184: 	je	.Ltmp1912 # Offset: 388
    00000186: 	leal	-0x20(%rdx), %edi
    00000189: 	testl	%ecx, %ecx
    0000018b: 	cmovsl	%edi, %edx
.Ltmp1912:
    0000018e: 	addl	%edx, %eax
.Ltmp1907:
    00000190: 	cvttsd2si	%xmm7, %ecx
    00000194: 	movl	%ecx, %edx
    00000196: 	andl	$0x1f, %edx
    00000199: 	testl	%ecx, %ecx
    0000019b: 	jns	.Ltmp1913 # Offset: 411
    0000019d: 	testl	%edx, %edx
    0000019f: 	leal	-0x20(%rdx), %ecx
    000001a2: 	setne	%dil
    000001a6: 	testb	%dil, %dil
    000001a9: 	cmovnel	%ecx, %edx
.Ltmp1913:
    000001ac: 	imull	$0x1f40, %edx, %edx
    000001b2: 	cmpl	%eax, %edx
    000001b4: 	je	.Ltmp1914 # Offset: 436
    000001b6: 	movl	current_test(%rip), %edx
    000001bc: 	movq	%rbp, %rsi
    000001bf: 	movl	$0x1, %edi
    000001c4: 	xorl	%eax, %eax
    000001c6: 	addl	$0x1, %r12d
    000001ca: 	callq	__printf_chk@PLT # Offset: 458
    000001cf: 	movl	iterations(%rip), %esi
    000001d5: 	cmpl	%esi, %r12d
    000001d8: 	jge	.Ltmp1906 # Offset: 472
    000001da: 	movsd	init_value(%rip), %xmm7
    000001e2: 	movdqa	DATAat0x57e50(%rip), %xmm6
    000001ea: 	movdqa	DATAat0x57d50(%rip), %xmm5
    000001f2: 	jmp	.Ltmp1915 # Offset: 498
    000001f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1914:
    00000200: 	addl	$0x1, %r12d
    00000204: 	cmpl	%esi, %r12d
    00000207: 	jl	.Ltmp1915 # Offset: 519
.Ltmp1906:
    0000020d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000214: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000021b: 	subq	$0x20, %rax
    0000021f: 	cmpq	%rax, %rbx
    00000222: 	je	.Ltmp1916 # Offset: 546
    00000228: 	movq	0x8(%rsp), %rax
    0000022d: 	leaq	0x10(%rbx), %rdi
    00000231: 	movq	%rdi, (%rbx)
    00000234: 	movq	(%rax), %rbp
    00000237: 	movq	0x8(%rax), %r12
    0000023b: 	movq	%rbp, %rax
    0000023e: 	addq	%r12, %rax
    00000241: 	je	.Ltmp1917 # Offset: 577
    00000243: 	testq	%rbp, %rbp
    00000246: 	je	.Ltmp1918 # Offset: 582
.Ltmp1917:
    0000024c: 	movq	%r12, 0x10(%rsp)
    00000251: 	cmpq	$0xf, %r12
    00000255: 	ja	.Ltmp1919 # Offset: 597
    0000025b: 	cmpq	$0x1, %r12
    0000025f: 	jne	.Ltmp1920 # Offset: 607
    00000265: 	movzbl	(%rbp), %eax
    00000269: 	movb	%al, 0x10(%rbx)
.Ltmp1924:
    0000026c: 	movq	%r12, 0x8(%rbx)
    00000270: 	movb	$0x0, (%rdi,%r12)
    00000275: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000027c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000283: 	addq	$0x20, %rax
    00000287: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000295: 	je	.Ltmp1921 # Offset: 661
.Ltmp1925:
    0000029b: 	movq	-0x20(%rax), %rbp
    0000029f: 	callq	clock@PLT # Offset: 671
    000002a4: 	movq	%rax, end_time(%rip)
    000002ab: 	movq	0x18(%rsp), %rdx
    000002b0: 	subq	%fs:0x28, %rdx
    000002b9: 	jne	.Ltmp1922 # Offset: 697
    000002bf: 	subq	start_time(%rip), %rax
    000002c6: 	pxor	%xmm0, %xmm0
    000002ca: 	movq	%rbp, %rdi
    000002cd: 	cvtsi2sd	%rax, %xmm0
    000002d2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002da: 	addq	$0x28, %rsp
    000002de: 	popq	%rbx
    000002df: 	popq	%rbp
    000002e0: 	popq	%r12
    000002e2: 	popq	%r13
    000002e4: 	popq	%r14
    000002e6: 	popq	%r15
    000002e8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 744
.Ltmp1908:
    000002ed: 	xorl	%edx, %edx
    000002ef: 	xorl	%eax, %eax
    000002f1: 	jmp	.Ltmp1923 # Offset: 753
.Ltmp1919:
    000002f6: 	movq	%rbx, %rdi
    000002f9: 	leaq	0x10(%rsp), %rsi
    000002fe: 	xorl	%edx, %edx
    00000300: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 768
    00000305: 	movq	%rax, (%rbx)
    00000308: 	movq	%rax, %rdi
    0000030b: 	movq	0x10(%rsp), %rax
    00000310: 	movq	%rax, 0x10(%rbx)
.Ltmp1926:
    00000314: 	movq	%r12, %rdx
    00000317: 	movq	%rbp, %rsi
    0000031a: 	callq	memcpy@PLT # Offset: 794
    0000031f: 	movq	0x10(%rsp), %r12
    00000324: 	movq	(%rbx), %rdi
    00000327: 	jmp	.Ltmp1924 # Offset: 807
.Ltmp1916:
    0000032c: 	movq	0x8(%rsp), %rsi
    00000331: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000338: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 824
    0000033d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000344: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000352: 	jne	.Ltmp1925 # Offset: 850
.Ltmp1921:
    00000358: 	movq	-0x8(%rdx), %rax
    0000035c: 	addq	$0x200, %rax
    00000362: 	jmp	.Ltmp1925 # Offset: 866
.Ltmp1920:
    00000367: 	testq	%r12, %r12
    0000036a: 	je	.Ltmp1924 # Offset: 874
    00000370: 	jmp	.Ltmp1926 # Offset: 880
.Ltmp1922:
    00000372: 	callq	__stack_chk_fail@PLT # Offset: 882
.Ltmp1918:
    00000377: 	leaq	DATAat0x57008(%rip), %rdi
    0000037e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 894
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi13and_remainderIiLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl13and_remainderIlLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 151
  State       : disassembled
  Address     : 0x16960
  Size        : 0x270
  MaxSize     : 0x270
  Offset      : 0x16960
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl13and_remainderIlLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0150:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp1927 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1933:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp1928 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1930:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0x7, %eax
    00000081: 	je	.Ltmp1929 # Offset: 129
    00000083: 	leaq	-0x8(%rax), %rdi
    00000087: 	testq	%rcx, %rcx
    0000008a: 	cmovsq	%rdi, %rax
.Ltmp1929:
    0000008e: 	addq	$0x8, %rdx
    00000092: 	addq	%rax, %rsi
    00000095: 	cmpq	%rdx, %r13
    00000098: 	jne	.Ltmp1930 # Offset: 152
.Ltmp1928:
    0000009a: 	cvttsd2si	%xmm0, %rdx
    0000009f: 	movq	%rdx, %rax
    000000a2: 	andl	$0x7, %eax
    000000a5: 	testq	%rdx, %rdx
    000000a8: 	jns	.Ltmp1931 # Offset: 168
    000000aa: 	testq	%rax, %rax
    000000ad: 	leaq	-0x8(%rax), %rdx
    000000b1: 	setne	%cl
    000000b4: 	testb	%cl, %cl
    000000b6: 	cmovneq	%rdx, %rax
.Ltmp1931:
    000000ba: 	imulq	$0x1f40, %rax, %rax
    000000c1: 	cmpq	%rsi, %rax
    000000c4: 	je	.Ltmp1932 # Offset: 196
    000000c6: 	movl	current_test(%rip), %edx
    000000cc: 	movq	%rbp, %rsi
    000000cf: 	movl	$0x1, %edi
    000000d4: 	xorl	%eax, %eax
    000000d6: 	addl	$0x1, %r14d
    000000da: 	callq	__printf_chk@PLT # Offset: 218
    000000df: 	movl	iterations(%rip), %r8d
    000000e6: 	cmpl	%r14d, %r8d
    000000e9: 	jle	.Ltmp1927 # Offset: 233
    000000eb: 	movsd	init_value(%rip), %xmm0
    000000f3: 	jmp	.Ltmp1933 # Offset: 243
    000000f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1932:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%r8d, %r14d
    00000107: 	jl	.Ltmp1933 # Offset: 263
.Ltmp1927:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp1934 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	%rdi, (%rbx)
    0000012f: 	movq	(%r12), %rbp
    00000133: 	movq	0x8(%r12), %r12
    00000138: 	movq	%rbp, %rax
    0000013b: 	addq	%r12, %rax
    0000013e: 	je	.Ltmp1935 # Offset: 318
    00000140: 	testq	%rbp, %rbp
    00000143: 	je	.Ltmp1936 # Offset: 323
.Ltmp1935:
    00000149: 	movq	%r12, (%rsp)
    0000014d: 	cmpq	$0xf, %r12
    00000151: 	ja	.Ltmp1937 # Offset: 337
    00000157: 	cmpq	$0x1, %r12
    0000015b: 	jne	.Ltmp1938 # Offset: 347
    00000161: 	movzbl	(%rbp), %eax
    00000165: 	movb	%al, 0x10(%rbx)
.Ltmp1941:
    00000168: 	movq	%r12, 0x8(%rbx)
    0000016c: 	movb	$0x0, (%rdi,%r12)
    00000171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000178: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017f: 	addq	$0x20, %rax
    00000183: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000018a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000191: 	je	.Ltmp1939 # Offset: 401
.Ltmp1942:
    00000197: 	movq	-0x20(%rax), %rbp
    0000019b: 	callq	clock@PLT # Offset: 411
    000001a0: 	movq	%rax, end_time(%rip)
    000001a7: 	movq	0x8(%rsp), %rdx
    000001ac: 	subq	%fs:0x28, %rdx
    000001b5: 	jne	.Ltmp1940 # Offset: 437
    000001bb: 	subq	start_time(%rip), %rax
    000001c2: 	pxor	%xmm0, %xmm0
    000001c6: 	movq	%rbp, %rdi
    000001c9: 	cvtsi2sd	%rax, %xmm0
    000001ce: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d6: 	addq	$0x18, %rsp
    000001da: 	popq	%rbx
    000001db: 	popq	%rbp
    000001dc: 	popq	%r12
    000001de: 	popq	%r13
    000001e0: 	popq	%r14
    000001e2: 	popq	%r15
    000001e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 484
.Ltmp1937:
    000001e9: 	movq	%rbx, %rdi
    000001ec: 	movq	%rsp, %rsi
    000001ef: 	xorl	%edx, %edx
    000001f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 497
    000001f6: 	movq	%rax, (%rbx)
    000001f9: 	movq	%rax, %rdi
    000001fc: 	movq	(%rsp), %rax
    00000200: 	movq	%rax, 0x10(%rbx)
.Ltmp1943:
    00000204: 	movq	%r12, %rdx
    00000207: 	movq	%rbp, %rsi
    0000020a: 	callq	memcpy@PLT # Offset: 522
    0000020f: 	movq	(%rsp), %r12
    00000213: 	movq	(%rbx), %rdi
    00000216: 	jmp	.Ltmp1941 # Offset: 534
.Ltmp1934:
    0000021b: 	movq	%r12, %rsi
    0000021e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000225: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 549
    0000022a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000231: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000238: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023f: 	jne	.Ltmp1942 # Offset: 575
.Ltmp1939:
    00000245: 	movq	-0x8(%rdx), %rax
    00000249: 	addq	$0x200, %rax
    0000024f: 	jmp	.Ltmp1942 # Offset: 591
.Ltmp1938:
    00000254: 	testq	%r12, %r12
    00000257: 	je	.Ltmp1941 # Offset: 599
    0000025d: 	jmp	.Ltmp1943 # Offset: 605
.Ltmp1940:
    0000025f: 	callq	__stack_chk_fail@PLT # Offset: 607
.Ltmp1936:
    00000264: 	leaq	DATAat0x57008(%rip), %rdi
    0000026b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 619
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl13and_remainderIlLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs13and_remainderIsLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 152
  State       : disassembled
  Address     : 0x16bd0
  Size        : 0x453
  MaxSize     : 0x460
  Offset      : 0x16bd0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs13and_remainderIsLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0151:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp1944 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57c90(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57e70(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1957:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp1945 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1946 # Offset: 160
    000000a6: 	pxor	%xmm1, %xmm1
    000000aa: 	movq	%r14, %rax
    000000ad: 	movdqa	%xmm1, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp1947:
    000000b8: 	movdqu	(%rax), %xmm3
    000000bc: 	movdqu	(%rax), %xmm8
    000000c1: 	movdqa	%xmm4, %xmm2
    000000c5: 	addq	$0x10, %rax
    000000c9: 	pand	%xmm6, %xmm3
    000000cd: 	pcmpgtw	%xmm8, %xmm2
    000000d2: 	movdqa	%xmm3, %xmm0
    000000d6: 	pcmpeqw	%xmm4, %xmm0
    000000da: 	pcmpeqw	%xmm4, %xmm0
    000000de: 	pand	%xmm2, %xmm0
    000000e2: 	movdqa	%xmm3, %xmm2
    000000e6: 	paddw	%xmm5, %xmm2
    000000ea: 	pand	%xmm0, %xmm2
    000000ee: 	pandn	%xmm3, %xmm0
    000000f2: 	por	%xmm2, %xmm0
    000000f6: 	paddw	%xmm0, %xmm1
    000000fa: 	cmpq	%r15, %rax
    000000fd: 	jne	.Ltmp1947 # Offset: 253
    000000ff: 	movdqa	%xmm1, %xmm0
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddw	%xmm0, %xmm1
    0000010c: 	movdqa	%xmm1, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddw	%xmm0, %xmm1
    00000119: 	movdqa	%xmm1, %xmm0
    0000011d: 	psrldq	$0x2, %xmm0
    00000122: 	paddw	%xmm0, %xmm1
    00000126: 	pextrw	$0x0, %xmm1, %eax
    0000012b: 	cmpl	%r13d, %ebx
    0000012e: 	je	.Ltmp1945 # Offset: 302
    00000134: 	movl	%ebx, %edx
.Ltmp1965:
    00000136: 	movslq	%edx, %rcx
    00000139: 	movzwl	(%r14,%rcx,2), %edi
    0000013e: 	leaq	(%rcx,%rcx), %rsi
    00000142: 	movl	%edi, %ecx
    00000144: 	andl	$0xf, %ecx
    00000147: 	testw	%di, %di
    0000014a: 	jns	.Ltmp1948 # Offset: 330
    0000014c: 	testw	%cx, %cx
    0000014f: 	leal	-0x10(%rcx), %edi
    00000152: 	setne	%r8b
    00000156: 	testb	%r8b, %r8b
    00000159: 	cmovnel	%edi, %ecx
.Ltmp1948:
    0000015c: 	addl	%eax, %ecx
    0000015e: 	leal	0x1(%rdx), %edi
    00000161: 	movl	%ecx, %eax
    00000163: 	cmpl	%edi, %r13d
    00000166: 	jle	.Ltmp1945 # Offset: 358
    0000016c: 	movzwl	0x2(%r14,%rsi), %edi
    00000172: 	movl	%edi, %eax
    00000174: 	andw	$0xf, %ax
    00000178: 	je	.Ltmp1949 # Offset: 376
    0000017a: 	leal	-0x10(%rax), %r8d
    0000017e: 	testw	%di, %di
    00000181: 	cmovsl	%r8d, %eax
.Ltmp1949:
    00000185: 	addl	%eax, %ecx
    00000187: 	leal	0x2(%rdx), %edi
    0000018a: 	movl	%ecx, %eax
    0000018c: 	cmpl	%edi, %r13d
    0000018f: 	jle	.Ltmp1945 # Offset: 399
    00000195: 	movzwl	0x4(%r14,%rsi), %edi
    0000019b: 	movl	%edi, %eax
    0000019d: 	andl	$0xf, %eax
    000001a0: 	testw	%di, %di
    000001a3: 	jns	.Ltmp1950 # Offset: 419
    000001a5: 	testw	%ax, %ax
    000001a8: 	leal	-0x10(%rax), %edi
    000001ab: 	setne	%r8b
    000001af: 	testb	%r8b, %r8b
    000001b2: 	cmovnel	%edi, %eax
.Ltmp1950:
    000001b5: 	addl	%eax, %ecx
    000001b7: 	leal	0x3(%rdx), %edi
    000001ba: 	movl	%ecx, %eax
    000001bc: 	cmpl	%edi, %r13d
    000001bf: 	jle	.Ltmp1945 # Offset: 447
    000001c5: 	movzwl	0x6(%r14,%rsi), %edi
    000001cb: 	movl	%edi, %eax
    000001cd: 	andl	$0xf, %eax
    000001d0: 	testw	%di, %di
    000001d3: 	jns	.Ltmp1951 # Offset: 467
    000001d5: 	testw	%ax, %ax
    000001d8: 	leal	-0x10(%rax), %edi
    000001db: 	setne	%r8b
    000001df: 	testb	%r8b, %r8b
    000001e2: 	cmovnel	%edi, %eax
.Ltmp1951:
    000001e5: 	addl	%eax, %ecx
    000001e7: 	leal	0x4(%rdx), %edi
    000001ea: 	movl	%ecx, %eax
    000001ec: 	cmpl	%edi, %r13d
    000001ef: 	jle	.Ltmp1945 # Offset: 495
    000001f1: 	movzwl	0x8(%r14,%rsi), %edi
    000001f7: 	movl	%edi, %eax
    000001f9: 	andl	$0xf, %eax
    000001fc: 	testw	%di, %di
    000001ff: 	jns	.Ltmp1952 # Offset: 511
    00000201: 	testw	%ax, %ax
    00000204: 	leal	-0x10(%rax), %edi
    00000207: 	setne	%r8b
    0000020b: 	testb	%r8b, %r8b
    0000020e: 	cmovnel	%edi, %eax
.Ltmp1952:
    00000211: 	addl	%eax, %ecx
    00000213: 	leal	0x5(%rdx), %edi
    00000216: 	movl	%ecx, %eax
    00000218: 	cmpl	%edi, %r13d
    0000021b: 	jle	.Ltmp1945 # Offset: 539
    0000021d: 	movzwl	0xa(%r14,%rsi), %edi
    00000223: 	movl	%edi, %eax
    00000225: 	andl	$0xf, %eax
    00000228: 	testw	%di, %di
    0000022b: 	jns	.Ltmp1953 # Offset: 555
    0000022d: 	testw	%ax, %ax
    00000230: 	leal	-0x10(%rax), %edi
    00000233: 	setne	%r8b
    00000237: 	testb	%r8b, %r8b
    0000023a: 	cmovnel	%edi, %eax
.Ltmp1953:
    0000023d: 	addl	%eax, %ecx
    0000023f: 	addl	$0x6, %edx
    00000242: 	movl	%ecx, %eax
    00000244: 	cmpl	%edx, %r13d
    00000247: 	jle	.Ltmp1945 # Offset: 583
    00000249: 	movzwl	0xc(%r14,%rsi), %edx
    0000024f: 	movl	%edx, %eax
    00000251: 	andw	$0xf, %ax
    00000255: 	je	.Ltmp1954 # Offset: 597
    00000257: 	leal	-0x10(%rax), %esi
    0000025a: 	testw	%dx, %dx
    0000025d: 	cmovsl	%esi, %eax
.Ltmp1954:
    00000260: 	addl	%ecx, %eax
.Ltmp1945:
    00000262: 	cvttsd2si	%xmm7, %ecx
    00000266: 	movl	%ecx, %edx
    00000268: 	andl	$0xf, %edx
    0000026b: 	testw	%cx, %cx
    0000026e: 	jns	.Ltmp1955 # Offset: 622
    00000270: 	testw	%dx, %dx
    00000273: 	leal	-0x10(%rdx), %ecx
    00000276: 	setne	%sil
    0000027a: 	testb	%sil, %sil
    0000027d: 	cmovnel	%ecx, %edx
.Ltmp1955:
    00000280: 	imulw	$0x1f40, %dx, %dx
    00000285: 	cmpw	%ax, %dx
    00000288: 	je	.Ltmp1956 # Offset: 648
    0000028a: 	movl	current_test(%rip), %edx
    00000290: 	movq	%rbp, %rsi
    00000293: 	movl	$0x1, %edi
    00000298: 	xorl	%eax, %eax
    0000029a: 	addl	$0x1, %r12d
    0000029e: 	callq	__printf_chk@PLT # Offset: 670
    000002a3: 	movl	iterations(%rip), %r9d
    000002aa: 	cmpl	%r9d, %r12d
    000002ad: 	jge	.Ltmp1944 # Offset: 685
    000002af: 	movsd	init_value(%rip), %xmm7
    000002b7: 	movdqa	DATAat0x57c90(%rip), %xmm6
    000002bf: 	movdqa	DATAat0x57e70(%rip), %xmm5
    000002c7: 	jmp	.Ltmp1957 # Offset: 711
    000002cc: 	nopl	(%rax) # Size: 4
.Ltmp1956:
    000002d0: 	addl	$0x1, %r12d
    000002d4: 	cmpl	%r9d, %r12d
    000002d7: 	jl	.Ltmp1957 # Offset: 727
.Ltmp1944:
    000002dd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002eb: 	subq	$0x20, %rax
    000002ef: 	cmpq	%rax, %rbx
    000002f2: 	je	.Ltmp1958 # Offset: 754
    000002f8: 	movq	0x8(%rsp), %rax
    000002fd: 	leaq	0x10(%rbx), %rdi
    00000301: 	movq	%rdi, (%rbx)
    00000304: 	movq	(%rax), %rbp
    00000307: 	movq	0x8(%rax), %r12
    0000030b: 	movq	%rbp, %rax
    0000030e: 	addq	%r12, %rax
    00000311: 	je	.Ltmp1959 # Offset: 785
    00000313: 	testq	%rbp, %rbp
    00000316: 	je	.Ltmp1960 # Offset: 790
.Ltmp1959:
    0000031c: 	movq	%r12, 0x10(%rsp)
    00000321: 	cmpq	$0xf, %r12
    00000325: 	ja	.Ltmp1961 # Offset: 805
    0000032b: 	cmpq	$0x1, %r12
    0000032f: 	jne	.Ltmp1962 # Offset: 815
    00000335: 	movzbl	(%rbp), %eax
    00000339: 	movb	%al, 0x10(%rbx)
.Ltmp1966:
    0000033c: 	movq	%r12, 0x8(%rbx)
    00000340: 	movb	$0x0, (%rdi,%r12)
    00000345: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000034c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000353: 	addq	$0x20, %rax
    00000357: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000035e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000365: 	je	.Ltmp1963 # Offset: 869
.Ltmp1967:
    0000036b: 	movq	-0x20(%rax), %rbp
    0000036f: 	callq	clock@PLT # Offset: 879
    00000374: 	movq	%rax, end_time(%rip)
    0000037b: 	movq	0x18(%rsp), %rdx
    00000380: 	subq	%fs:0x28, %rdx
    00000389: 	jne	.Ltmp1964 # Offset: 905
    0000038f: 	subq	start_time(%rip), %rax
    00000396: 	pxor	%xmm0, %xmm0
    0000039a: 	movq	%rbp, %rdi
    0000039d: 	cvtsi2sd	%rax, %xmm0
    000003a2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003aa: 	addq	$0x28, %rsp
    000003ae: 	popq	%rbx
    000003af: 	popq	%rbp
    000003b0: 	popq	%r12
    000003b2: 	popq	%r13
    000003b4: 	popq	%r14
    000003b6: 	popq	%r15
    000003b8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 952
.Ltmp1946:
    000003bd: 	xorl	%edx, %edx
    000003bf: 	xorl	%eax, %eax
    000003c1: 	jmp	.Ltmp1965 # Offset: 961
.Ltmp1961:
    000003c6: 	movq	%rbx, %rdi
    000003c9: 	leaq	0x10(%rsp), %rsi
    000003ce: 	xorl	%edx, %edx
    000003d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 976
    000003d5: 	movq	%rax, (%rbx)
    000003d8: 	movq	%rax, %rdi
    000003db: 	movq	0x10(%rsp), %rax
    000003e0: 	movq	%rax, 0x10(%rbx)
.Ltmp1968:
    000003e4: 	movq	%r12, %rdx
    000003e7: 	movq	%rbp, %rsi
    000003ea: 	callq	memcpy@PLT # Offset: 1002
    000003ef: 	movq	0x10(%rsp), %r12
    000003f4: 	movq	(%rbx), %rdi
    000003f7: 	jmp	.Ltmp1966 # Offset: 1015
.Ltmp1958:
    000003fc: 	movq	0x8(%rsp), %rsi
    00000401: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000408: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1032
    0000040d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000414: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000041b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000422: 	jne	.Ltmp1967 # Offset: 1058
.Ltmp1963:
    00000428: 	movq	-0x8(%rdx), %rax
    0000042c: 	addq	$0x200, %rax
    00000432: 	jmp	.Ltmp1967 # Offset: 1074
.Ltmp1962:
    00000437: 	testq	%r12, %r12
    0000043a: 	je	.Ltmp1966 # Offset: 1082
    00000440: 	jmp	.Ltmp1968 # Offset: 1088
.Ltmp1964:
    00000442: 	callq	__stack_chk_fail@PLT # Offset: 1090
.Ltmp1960:
    00000447: 	leaq	DATAat0x57008(%rip), %rdi
    0000044e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1102
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs13and_remainderIsLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi14and_remainder2IiLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 153
  State       : disassembled
  Address     : 0x17030
  Size        : 0x38b
  MaxSize     : 0x390
  Offset      : 0x17030
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi14and_remainder2IiLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0152:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp1969 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57ce0(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57e60(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp1978:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp1970 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp1971 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp1972:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp1972 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp1970 # Offset: 288
.Ltmp1986:
    00000122: 	movslq	%edx, %rcx
    00000125: 	movl	(%r15,%rcx,4), %edi
    00000129: 	leaq	(,%rcx,4), %r8
    00000131: 	movzbl	%dil, %ecx
    00000135: 	testl	%edi, %edi
    00000137: 	jns	.Ltmp1973 # Offset: 311
    00000139: 	testl	%ecx, %ecx
    0000013b: 	leal	-0x100(%rcx), %edi
    00000141: 	setne	%r9b
    00000145: 	testb	%r9b, %r9b
    00000148: 	cmovnel	%edi, %ecx
.Ltmp1973:
    0000014b: 	addl	%ecx, %eax
    0000014d: 	leal	0x1(%rdx), %ecx
    00000150: 	cmpl	%ecx, %r14d
    00000153: 	jle	.Ltmp1970 # Offset: 339
    00000155: 	movl	0x4(%r15,%r8), %edi
    0000015a: 	movzbl	%dil, %ecx
    0000015e: 	testl	%edi, %edi
    00000160: 	jns	.Ltmp1974 # Offset: 352
    00000162: 	testl	%ecx, %ecx
    00000164: 	leal	-0x100(%rcx), %edi
    0000016a: 	setne	%r9b
    0000016e: 	testb	%r9b, %r9b
    00000171: 	cmovnel	%edi, %ecx
.Ltmp1974:
    00000174: 	addl	$0x2, %edx
    00000177: 	addl	%ecx, %eax
    00000179: 	cmpl	%edx, %r14d
    0000017c: 	jle	.Ltmp1970 # Offset: 380
    0000017e: 	movl	0x8(%r15,%r8), %ecx
    00000183: 	movl	%ecx, %edx
    00000185: 	andl	$0xff, %edx
    0000018b: 	je	.Ltmp1975 # Offset: 395
    0000018d: 	leal	-0x100(%rdx), %edi
    00000193: 	testl	%ecx, %ecx
    00000195: 	cmovsl	%edi, %edx
.Ltmp1975:
    00000198: 	addl	%edx, %eax
.Ltmp1970:
    0000019a: 	cvttsd2si	%xmm7, %ecx
    0000019e: 	movzbl	%cl, %edx
    000001a1: 	testl	%ecx, %ecx
    000001a3: 	jns	.Ltmp1976 # Offset: 419
    000001a5: 	testl	%edx, %edx
    000001a7: 	leal	-0x100(%rdx), %ecx
    000001ad: 	setne	%dil
    000001b1: 	testb	%dil, %dil
    000001b4: 	cmovnel	%ecx, %edx
.Ltmp1976:
    000001b7: 	imull	$0x1f40, %edx, %edx
    000001bd: 	cmpl	%eax, %edx
    000001bf: 	je	.Ltmp1977 # Offset: 447
    000001c1: 	movl	current_test(%rip), %edx
    000001c7: 	movq	%rbp, %rsi
    000001ca: 	movl	$0x1, %edi
    000001cf: 	xorl	%eax, %eax
    000001d1: 	addl	$0x1, %r12d
    000001d5: 	callq	__printf_chk@PLT # Offset: 469
    000001da: 	movl	iterations(%rip), %esi
    000001e0: 	cmpl	%esi, %r12d
    000001e3: 	jge	.Ltmp1969 # Offset: 483
    000001e5: 	movsd	init_value(%rip), %xmm7
    000001ed: 	movdqa	DATAat0x57ce0(%rip), %xmm6
    000001f5: 	movdqa	DATAat0x57e60(%rip), %xmm5
    000001fd: 	jmp	.Ltmp1978 # Offset: 509
    00000202: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1977:
    00000208: 	addl	$0x1, %r12d
    0000020c: 	cmpl	%esi, %r12d
    0000020f: 	jl	.Ltmp1978 # Offset: 527
.Ltmp1969:
    00000215: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000021c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000223: 	subq	$0x20, %rax
    00000227: 	cmpq	%rax, %rbx
    0000022a: 	je	.Ltmp1979 # Offset: 554
    00000230: 	movq	0x8(%rsp), %rax
    00000235: 	leaq	0x10(%rbx), %rdi
    00000239: 	movq	%rdi, (%rbx)
    0000023c: 	movq	(%rax), %rbp
    0000023f: 	movq	0x8(%rax), %r12
    00000243: 	movq	%rbp, %rax
    00000246: 	addq	%r12, %rax
    00000249: 	je	.Ltmp1980 # Offset: 585
    0000024b: 	testq	%rbp, %rbp
    0000024e: 	je	.Ltmp1981 # Offset: 590
.Ltmp1980:
    00000254: 	movq	%r12, 0x10(%rsp)
    00000259: 	cmpq	$0xf, %r12
    0000025d: 	ja	.Ltmp1982 # Offset: 605
    00000263: 	cmpq	$0x1, %r12
    00000267: 	jne	.Ltmp1983 # Offset: 615
    0000026d: 	movzbl	(%rbp), %eax
    00000271: 	movb	%al, 0x10(%rbx)
.Ltmp1987:
    00000274: 	movq	%r12, 0x8(%rbx)
    00000278: 	movb	$0x0, (%rdi,%r12)
    0000027d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000284: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000028b: 	addq	$0x20, %rax
    0000028f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000296: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000029d: 	je	.Ltmp1984 # Offset: 669
.Ltmp1988:
    000002a3: 	movq	-0x20(%rax), %rbp
    000002a7: 	callq	clock@PLT # Offset: 679
    000002ac: 	movq	%rax, end_time(%rip)
    000002b3: 	movq	0x18(%rsp), %rdx
    000002b8: 	subq	%fs:0x28, %rdx
    000002c1: 	jne	.Ltmp1985 # Offset: 705
    000002c7: 	subq	start_time(%rip), %rax
    000002ce: 	pxor	%xmm0, %xmm0
    000002d2: 	movq	%rbp, %rdi
    000002d5: 	cvtsi2sd	%rax, %xmm0
    000002da: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002e2: 	addq	$0x28, %rsp
    000002e6: 	popq	%rbx
    000002e7: 	popq	%rbp
    000002e8: 	popq	%r12
    000002ea: 	popq	%r13
    000002ec: 	popq	%r14
    000002ee: 	popq	%r15
    000002f0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 752
.Ltmp1971:
    000002f5: 	xorl	%edx, %edx
    000002f7: 	xorl	%eax, %eax
    000002f9: 	jmp	.Ltmp1986 # Offset: 761
.Ltmp1982:
    000002fe: 	movq	%rbx, %rdi
    00000301: 	leaq	0x10(%rsp), %rsi
    00000306: 	xorl	%edx, %edx
    00000308: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 776
    0000030d: 	movq	%rax, (%rbx)
    00000310: 	movq	%rax, %rdi
    00000313: 	movq	0x10(%rsp), %rax
    00000318: 	movq	%rax, 0x10(%rbx)
.Ltmp1989:
    0000031c: 	movq	%r12, %rdx
    0000031f: 	movq	%rbp, %rsi
    00000322: 	callq	memcpy@PLT # Offset: 802
    00000327: 	movq	0x10(%rsp), %r12
    0000032c: 	movq	(%rbx), %rdi
    0000032f: 	jmp	.Ltmp1987 # Offset: 815
.Ltmp1979:
    00000334: 	movq	0x8(%rsp), %rsi
    00000339: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000340: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 832
    00000345: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000034c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000353: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000035a: 	jne	.Ltmp1988 # Offset: 858
.Ltmp1984:
    00000360: 	movq	-0x8(%rdx), %rax
    00000364: 	addq	$0x200, %rax
    0000036a: 	jmp	.Ltmp1988 # Offset: 874
.Ltmp1983:
    0000036f: 	testq	%r12, %r12
    00000372: 	je	.Ltmp1987 # Offset: 882
    00000378: 	jmp	.Ltmp1989 # Offset: 888
.Ltmp1985:
    0000037a: 	callq	__stack_chk_fail@PLT # Offset: 890
.Ltmp1981:
    0000037f: 	leaq	DATAat0x57008(%rip), %rdi
    00000386: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 902
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi14and_remainder2IiLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl13and_remainderIlLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 154
  State       : disassembled
  Address     : 0x173c0
  Size        : 0x270
  MaxSize     : 0x270
  Offset      : 0x173c0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl13and_remainderIlLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0153:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp1990 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1996:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp1991 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1993:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0x3, %eax
    00000081: 	je	.Ltmp1992 # Offset: 129
    00000083: 	leaq	-0x4(%rax), %rdi
    00000087: 	testq	%rcx, %rcx
    0000008a: 	cmovsq	%rdi, %rax
.Ltmp1992:
    0000008e: 	addq	$0x8, %rdx
    00000092: 	addq	%rax, %rsi
    00000095: 	cmpq	%rdx, %r13
    00000098: 	jne	.Ltmp1993 # Offset: 152
.Ltmp1991:
    0000009a: 	cvttsd2si	%xmm0, %rdx
    0000009f: 	movq	%rdx, %rax
    000000a2: 	andl	$0x3, %eax
    000000a5: 	testq	%rdx, %rdx
    000000a8: 	jns	.Ltmp1994 # Offset: 168
    000000aa: 	testq	%rax, %rax
    000000ad: 	leaq	-0x4(%rax), %rdx
    000000b1: 	setne	%cl
    000000b4: 	testb	%cl, %cl
    000000b6: 	cmovneq	%rdx, %rax
.Ltmp1994:
    000000ba: 	imulq	$0x1f40, %rax, %rax
    000000c1: 	cmpq	%rsi, %rax
    000000c4: 	je	.Ltmp1995 # Offset: 196
    000000c6: 	movl	current_test(%rip), %edx
    000000cc: 	movq	%rbp, %rsi
    000000cf: 	movl	$0x1, %edi
    000000d4: 	xorl	%eax, %eax
    000000d6: 	addl	$0x1, %r14d
    000000da: 	callq	__printf_chk@PLT # Offset: 218
    000000df: 	movl	iterations(%rip), %r8d
    000000e6: 	cmpl	%r14d, %r8d
    000000e9: 	jle	.Ltmp1990 # Offset: 233
    000000eb: 	movsd	init_value(%rip), %xmm0
    000000f3: 	jmp	.Ltmp1996 # Offset: 243
    000000f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1995:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%r8d, %r14d
    00000107: 	jl	.Ltmp1996 # Offset: 263
.Ltmp1990:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp1997 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	%rdi, (%rbx)
    0000012f: 	movq	(%r12), %rbp
    00000133: 	movq	0x8(%r12), %r12
    00000138: 	movq	%rbp, %rax
    0000013b: 	addq	%r12, %rax
    0000013e: 	je	.Ltmp1998 # Offset: 318
    00000140: 	testq	%rbp, %rbp
    00000143: 	je	.Ltmp1999 # Offset: 323
.Ltmp1998:
    00000149: 	movq	%r12, (%rsp)
    0000014d: 	cmpq	$0xf, %r12
    00000151: 	ja	.Ltmp2000 # Offset: 337
    00000157: 	cmpq	$0x1, %r12
    0000015b: 	jne	.Ltmp2001 # Offset: 347
    00000161: 	movzbl	(%rbp), %eax
    00000165: 	movb	%al, 0x10(%rbx)
.Ltmp2004:
    00000168: 	movq	%r12, 0x8(%rbx)
    0000016c: 	movb	$0x0, (%rdi,%r12)
    00000171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000178: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017f: 	addq	$0x20, %rax
    00000183: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000018a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000191: 	je	.Ltmp2002 # Offset: 401
.Ltmp2005:
    00000197: 	movq	-0x20(%rax), %rbp
    0000019b: 	callq	clock@PLT # Offset: 411
    000001a0: 	movq	%rax, end_time(%rip)
    000001a7: 	movq	0x8(%rsp), %rdx
    000001ac: 	subq	%fs:0x28, %rdx
    000001b5: 	jne	.Ltmp2003 # Offset: 437
    000001bb: 	subq	start_time(%rip), %rax
    000001c2: 	pxor	%xmm0, %xmm0
    000001c6: 	movq	%rbp, %rdi
    000001c9: 	cvtsi2sd	%rax, %xmm0
    000001ce: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d6: 	addq	$0x18, %rsp
    000001da: 	popq	%rbx
    000001db: 	popq	%rbp
    000001dc: 	popq	%r12
    000001de: 	popq	%r13
    000001e0: 	popq	%r14
    000001e2: 	popq	%r15
    000001e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 484
.Ltmp2000:
    000001e9: 	movq	%rbx, %rdi
    000001ec: 	movq	%rsp, %rsi
    000001ef: 	xorl	%edx, %edx
    000001f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 497
    000001f6: 	movq	%rax, (%rbx)
    000001f9: 	movq	%rax, %rdi
    000001fc: 	movq	(%rsp), %rax
    00000200: 	movq	%rax, 0x10(%rbx)
.Ltmp2006:
    00000204: 	movq	%r12, %rdx
    00000207: 	movq	%rbp, %rsi
    0000020a: 	callq	memcpy@PLT # Offset: 522
    0000020f: 	movq	(%rsp), %r12
    00000213: 	movq	(%rbx), %rdi
    00000216: 	jmp	.Ltmp2004 # Offset: 534
.Ltmp1997:
    0000021b: 	movq	%r12, %rsi
    0000021e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000225: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 549
    0000022a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000231: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000238: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023f: 	jne	.Ltmp2005 # Offset: 575
.Ltmp2002:
    00000245: 	movq	-0x8(%rdx), %rax
    00000249: 	addq	$0x200, %rax
    0000024f: 	jmp	.Ltmp2005 # Offset: 591
.Ltmp2001:
    00000254: 	testq	%r12, %r12
    00000257: 	je	.Ltmp2004 # Offset: 599
    0000025d: 	jmp	.Ltmp2006 # Offset: 605
.Ltmp2003:
    0000025f: 	callq	__stack_chk_fail@PLT # Offset: 607
.Ltmp1999:
    00000264: 	leaq	DATAat0x57008(%rip), %rdi
    0000026b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 619
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl13and_remainderIlLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi13and_remainderIiLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 155
  State       : disassembled
  Address     : 0x17630
  Size        : 0x383
  MaxSize     : 0x390
  Offset      : 0x17630
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi13and_remainderIiLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0154:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp2007 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57e10(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57dd0(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp2016:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp2008 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2009 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp2010:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp2010 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp2008 # Offset: 288
.Ltmp2024:
    00000122: 	movslq	%edx, %rcx
    00000125: 	movl	(%r15,%rcx,4), %edi
    00000129: 	leaq	(,%rcx,4), %r8
    00000131: 	movl	%edi, %ecx
    00000133: 	andl	$0xf, %ecx
    00000136: 	testl	%edi, %edi
    00000138: 	jns	.Ltmp2011 # Offset: 312
    0000013a: 	testl	%ecx, %ecx
    0000013c: 	leal	-0x10(%rcx), %edi
    0000013f: 	setne	%r9b
    00000143: 	testb	%r9b, %r9b
    00000146: 	cmovnel	%edi, %ecx
.Ltmp2011:
    00000149: 	addl	%ecx, %eax
    0000014b: 	leal	0x1(%rdx), %ecx
    0000014e: 	cmpl	%ecx, %r14d
    00000151: 	jle	.Ltmp2008 # Offset: 337
    00000153: 	movl	0x4(%r15,%r8), %edi
    00000158: 	movl	%edi, %ecx
    0000015a: 	andl	$0xf, %ecx
    0000015d: 	testl	%edi, %edi
    0000015f: 	jns	.Ltmp2012 # Offset: 351
    00000161: 	testl	%ecx, %ecx
    00000163: 	leal	-0x10(%rcx), %edi
    00000166: 	setne	%r9b
    0000016a: 	testb	%r9b, %r9b
    0000016d: 	cmovnel	%edi, %ecx
.Ltmp2012:
    00000170: 	addl	$0x2, %edx
    00000173: 	addl	%ecx, %eax
    00000175: 	cmpl	%edx, %r14d
    00000178: 	jle	.Ltmp2008 # Offset: 376
    0000017a: 	movl	0x8(%r15,%r8), %ecx
    0000017f: 	movl	%ecx, %edx
    00000181: 	andl	$0xf, %edx
    00000184: 	je	.Ltmp2013 # Offset: 388
    00000186: 	leal	-0x10(%rdx), %edi
    00000189: 	testl	%ecx, %ecx
    0000018b: 	cmovsl	%edi, %edx
.Ltmp2013:
    0000018e: 	addl	%edx, %eax
.Ltmp2008:
    00000190: 	cvttsd2si	%xmm7, %ecx
    00000194: 	movl	%ecx, %edx
    00000196: 	andl	$0xf, %edx
    00000199: 	testl	%ecx, %ecx
    0000019b: 	jns	.Ltmp2014 # Offset: 411
    0000019d: 	testl	%edx, %edx
    0000019f: 	leal	-0x10(%rdx), %ecx
    000001a2: 	setne	%dil
    000001a6: 	testb	%dil, %dil
    000001a9: 	cmovnel	%ecx, %edx
.Ltmp2014:
    000001ac: 	imull	$0x1f40, %edx, %edx
    000001b2: 	cmpl	%eax, %edx
    000001b4: 	je	.Ltmp2015 # Offset: 436
    000001b6: 	movl	current_test(%rip), %edx
    000001bc: 	movq	%rbp, %rsi
    000001bf: 	movl	$0x1, %edi
    000001c4: 	xorl	%eax, %eax
    000001c6: 	addl	$0x1, %r12d
    000001ca: 	callq	__printf_chk@PLT # Offset: 458
    000001cf: 	movl	iterations(%rip), %esi
    000001d5: 	cmpl	%esi, %r12d
    000001d8: 	jge	.Ltmp2007 # Offset: 472
    000001da: 	movsd	init_value(%rip), %xmm7
    000001e2: 	movdqa	DATAat0x57e10(%rip), %xmm6
    000001ea: 	movdqa	DATAat0x57dd0(%rip), %xmm5
    000001f2: 	jmp	.Ltmp2016 # Offset: 498
    000001f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2015:
    00000200: 	addl	$0x1, %r12d
    00000204: 	cmpl	%esi, %r12d
    00000207: 	jl	.Ltmp2016 # Offset: 519
.Ltmp2007:
    0000020d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000214: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000021b: 	subq	$0x20, %rax
    0000021f: 	cmpq	%rax, %rbx
    00000222: 	je	.Ltmp2017 # Offset: 546
    00000228: 	movq	0x8(%rsp), %rax
    0000022d: 	leaq	0x10(%rbx), %rdi
    00000231: 	movq	%rdi, (%rbx)
    00000234: 	movq	(%rax), %rbp
    00000237: 	movq	0x8(%rax), %r12
    0000023b: 	movq	%rbp, %rax
    0000023e: 	addq	%r12, %rax
    00000241: 	je	.Ltmp2018 # Offset: 577
    00000243: 	testq	%rbp, %rbp
    00000246: 	je	.Ltmp2019 # Offset: 582
.Ltmp2018:
    0000024c: 	movq	%r12, 0x10(%rsp)
    00000251: 	cmpq	$0xf, %r12
    00000255: 	ja	.Ltmp2020 # Offset: 597
    0000025b: 	cmpq	$0x1, %r12
    0000025f: 	jne	.Ltmp2021 # Offset: 607
    00000265: 	movzbl	(%rbp), %eax
    00000269: 	movb	%al, 0x10(%rbx)
.Ltmp2025:
    0000026c: 	movq	%r12, 0x8(%rbx)
    00000270: 	movb	$0x0, (%rdi,%r12)
    00000275: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000027c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000283: 	addq	$0x20, %rax
    00000287: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000295: 	je	.Ltmp2022 # Offset: 661
.Ltmp2026:
    0000029b: 	movq	-0x20(%rax), %rbp
    0000029f: 	callq	clock@PLT # Offset: 671
    000002a4: 	movq	%rax, end_time(%rip)
    000002ab: 	movq	0x18(%rsp), %rdx
    000002b0: 	subq	%fs:0x28, %rdx
    000002b9: 	jne	.Ltmp2023 # Offset: 697
    000002bf: 	subq	start_time(%rip), %rax
    000002c6: 	pxor	%xmm0, %xmm0
    000002ca: 	movq	%rbp, %rdi
    000002cd: 	cvtsi2sd	%rax, %xmm0
    000002d2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002da: 	addq	$0x28, %rsp
    000002de: 	popq	%rbx
    000002df: 	popq	%rbp
    000002e0: 	popq	%r12
    000002e2: 	popq	%r13
    000002e4: 	popq	%r14
    000002e6: 	popq	%r15
    000002e8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 744
.Ltmp2009:
    000002ed: 	xorl	%edx, %edx
    000002ef: 	xorl	%eax, %eax
    000002f1: 	jmp	.Ltmp2024 # Offset: 753
.Ltmp2020:
    000002f6: 	movq	%rbx, %rdi
    000002f9: 	leaq	0x10(%rsp), %rsi
    000002fe: 	xorl	%edx, %edx
    00000300: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 768
    00000305: 	movq	%rax, (%rbx)
    00000308: 	movq	%rax, %rdi
    0000030b: 	movq	0x10(%rsp), %rax
    00000310: 	movq	%rax, 0x10(%rbx)
.Ltmp2027:
    00000314: 	movq	%r12, %rdx
    00000317: 	movq	%rbp, %rsi
    0000031a: 	callq	memcpy@PLT # Offset: 794
    0000031f: 	movq	0x10(%rsp), %r12
    00000324: 	movq	(%rbx), %rdi
    00000327: 	jmp	.Ltmp2025 # Offset: 807
.Ltmp2017:
    0000032c: 	movq	0x8(%rsp), %rsi
    00000331: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000338: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 824
    0000033d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000344: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000352: 	jne	.Ltmp2026 # Offset: 850
.Ltmp2022:
    00000358: 	movq	-0x8(%rdx), %rax
    0000035c: 	addq	$0x200, %rax
    00000362: 	jmp	.Ltmp2026 # Offset: 866
.Ltmp2021:
    00000367: 	testq	%r12, %r12
    0000036a: 	je	.Ltmp2025 # Offset: 874
    00000370: 	jmp	.Ltmp2027 # Offset: 880
.Ltmp2023:
    00000372: 	callq	__stack_chk_fail@PLT # Offset: 882
.Ltmp2019:
    00000377: 	leaq	DATAat0x57008(%rip), %rdi
    0000037e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 894
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi13and_remainderIiLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl13and_remainderIlLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 156
  State       : disassembled
  Address     : 0x179c0
  Size        : 0x278
  MaxSize     : 0x280
  Offset      : 0x179c0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl13and_remainderIlLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0155:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp2028 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2034:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp2029 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2031:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0x3ff, %eax
    00000083: 	je	.Ltmp2030 # Offset: 131
    00000085: 	leaq	-0x400(%rax), %rdi
    0000008c: 	testq	%rcx, %rcx
    0000008f: 	cmovsq	%rdi, %rax
.Ltmp2030:
    00000093: 	addq	$0x8, %rdx
    00000097: 	addq	%rax, %rsi
    0000009a: 	cmpq	%rdx, %r13
    0000009d: 	jne	.Ltmp2031 # Offset: 157
.Ltmp2029:
    0000009f: 	cvttsd2si	%xmm0, %rdx
    000000a4: 	movq	%rdx, %rax
    000000a7: 	andl	$0x3ff, %eax
    000000ac: 	testq	%rdx, %rdx
    000000af: 	jns	.Ltmp2032 # Offset: 175
    000000b1: 	testq	%rax, %rax
    000000b4: 	leaq	-0x400(%rax), %rdx
    000000bb: 	setne	%cl
    000000be: 	testb	%cl, %cl
    000000c0: 	cmovneq	%rdx, %rax
.Ltmp2032:
    000000c4: 	imulq	$0x1f40, %rax, %rax
    000000cb: 	cmpq	%rsi, %rax
    000000ce: 	je	.Ltmp2033 # Offset: 206
    000000d0: 	movl	current_test(%rip), %edx
    000000d6: 	movq	%rbp, %rsi
    000000d9: 	movl	$0x1, %edi
    000000de: 	xorl	%eax, %eax
    000000e0: 	addl	$0x1, %r14d
    000000e4: 	callq	__printf_chk@PLT # Offset: 228
    000000e9: 	movl	iterations(%rip), %r8d
    000000f0: 	cmpl	%r14d, %r8d
    000000f3: 	jle	.Ltmp2028 # Offset: 243
    000000f5: 	movsd	init_value(%rip), %xmm0
    000000fd: 	jmp	.Ltmp2034 # Offset: 253
    00000102: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2033:
    00000108: 	addl	$0x1, %r14d
    0000010c: 	cmpl	%r8d, %r14d
    0000010f: 	jl	.Ltmp2034 # Offset: 271
.Ltmp2028:
    00000115: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000011c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000123: 	subq	$0x20, %rax
    00000127: 	cmpq	%rax, %rbx
    0000012a: 	je	.Ltmp2035 # Offset: 298
    00000130: 	leaq	0x10(%rbx), %rdi
    00000134: 	movq	%rdi, (%rbx)
    00000137: 	movq	(%r12), %rbp
    0000013b: 	movq	0x8(%r12), %r12
    00000140: 	movq	%rbp, %rax
    00000143: 	addq	%r12, %rax
    00000146: 	je	.Ltmp2036 # Offset: 326
    00000148: 	testq	%rbp, %rbp
    0000014b: 	je	.Ltmp2037 # Offset: 331
.Ltmp2036:
    00000151: 	movq	%r12, (%rsp)
    00000155: 	cmpq	$0xf, %r12
    00000159: 	ja	.Ltmp2038 # Offset: 345
    0000015f: 	cmpq	$0x1, %r12
    00000163: 	jne	.Ltmp2039 # Offset: 355
    00000169: 	movzbl	(%rbp), %eax
    0000016d: 	movb	%al, 0x10(%rbx)
.Ltmp2042:
    00000170: 	movq	%r12, 0x8(%rbx)
    00000174: 	movb	$0x0, (%rdi,%r12)
    00000179: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000180: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000187: 	addq	$0x20, %rax
    0000018b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000192: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000199: 	je	.Ltmp2040 # Offset: 409
.Ltmp2043:
    0000019f: 	movq	-0x20(%rax), %rbp
    000001a3: 	callq	clock@PLT # Offset: 419
    000001a8: 	movq	%rax, end_time(%rip)
    000001af: 	movq	0x8(%rsp), %rdx
    000001b4: 	subq	%fs:0x28, %rdx
    000001bd: 	jne	.Ltmp2041 # Offset: 445
    000001c3: 	subq	start_time(%rip), %rax
    000001ca: 	pxor	%xmm0, %xmm0
    000001ce: 	movq	%rbp, %rdi
    000001d1: 	cvtsi2sd	%rax, %xmm0
    000001d6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001de: 	addq	$0x18, %rsp
    000001e2: 	popq	%rbx
    000001e3: 	popq	%rbp
    000001e4: 	popq	%r12
    000001e6: 	popq	%r13
    000001e8: 	popq	%r14
    000001ea: 	popq	%r15
    000001ec: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 492
.Ltmp2038:
    000001f1: 	movq	%rbx, %rdi
    000001f4: 	movq	%rsp, %rsi
    000001f7: 	xorl	%edx, %edx
    000001f9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 505
    000001fe: 	movq	%rax, (%rbx)
    00000201: 	movq	%rax, %rdi
    00000204: 	movq	(%rsp), %rax
    00000208: 	movq	%rax, 0x10(%rbx)
.Ltmp2044:
    0000020c: 	movq	%r12, %rdx
    0000020f: 	movq	%rbp, %rsi
    00000212: 	callq	memcpy@PLT # Offset: 530
    00000217: 	movq	(%rsp), %r12
    0000021b: 	movq	(%rbx), %rdi
    0000021e: 	jmp	.Ltmp2042 # Offset: 542
.Ltmp2035:
    00000223: 	movq	%r12, %rsi
    00000226: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000022d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 557
    00000232: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000239: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000240: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000247: 	jne	.Ltmp2043 # Offset: 583
.Ltmp2040:
    0000024d: 	movq	-0x8(%rdx), %rax
    00000251: 	addq	$0x200, %rax
    00000257: 	jmp	.Ltmp2043 # Offset: 599
.Ltmp2039:
    0000025c: 	testq	%r12, %r12
    0000025f: 	je	.Ltmp2042 # Offset: 607
    00000265: 	jmp	.Ltmp2044 # Offset: 613
.Ltmp2041:
    00000267: 	callq	__stack_chk_fail@PLT # Offset: 615
.Ltmp2037:
    0000026c: 	leaq	DATAat0x57008(%rip), %rdi
    00000273: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 627
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl13and_remainderIlLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl14and_remainder2IlLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 157
  State       : disassembled
  Address     : 0x17c40
  Size        : 0x270
  MaxSize     : 0x270
  Offset      : 0x17c40
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl14and_remainder2IlLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0156:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp2045 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2051:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp2046 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2048:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0x3, %eax
    00000081: 	je	.Ltmp2047 # Offset: 129
    00000083: 	leaq	-0x4(%rax), %rdi
    00000087: 	testq	%rcx, %rcx
    0000008a: 	cmovsq	%rdi, %rax
.Ltmp2047:
    0000008e: 	addq	$0x8, %rdx
    00000092: 	addq	%rax, %rsi
    00000095: 	cmpq	%rdx, %r13
    00000098: 	jne	.Ltmp2048 # Offset: 152
.Ltmp2046:
    0000009a: 	cvttsd2si	%xmm0, %rdx
    0000009f: 	movq	%rdx, %rax
    000000a2: 	andl	$0x3, %eax
    000000a5: 	testq	%rdx, %rdx
    000000a8: 	jns	.Ltmp2049 # Offset: 168
    000000aa: 	testq	%rax, %rax
    000000ad: 	leaq	-0x4(%rax), %rdx
    000000b1: 	setne	%cl
    000000b4: 	testb	%cl, %cl
    000000b6: 	cmovneq	%rdx, %rax
.Ltmp2049:
    000000ba: 	imulq	$0x1f40, %rax, %rax
    000000c1: 	cmpq	%rsi, %rax
    000000c4: 	je	.Ltmp2050 # Offset: 196
    000000c6: 	movl	current_test(%rip), %edx
    000000cc: 	movq	%rbp, %rsi
    000000cf: 	movl	$0x1, %edi
    000000d4: 	xorl	%eax, %eax
    000000d6: 	addl	$0x1, %r14d
    000000da: 	callq	__printf_chk@PLT # Offset: 218
    000000df: 	movl	iterations(%rip), %r8d
    000000e6: 	cmpl	%r14d, %r8d
    000000e9: 	jle	.Ltmp2045 # Offset: 233
    000000eb: 	movsd	init_value(%rip), %xmm0
    000000f3: 	jmp	.Ltmp2051 # Offset: 243
    000000f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2050:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%r8d, %r14d
    00000107: 	jl	.Ltmp2051 # Offset: 263
.Ltmp2045:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp2052 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	%rdi, (%rbx)
    0000012f: 	movq	(%r12), %rbp
    00000133: 	movq	0x8(%r12), %r12
    00000138: 	movq	%rbp, %rax
    0000013b: 	addq	%r12, %rax
    0000013e: 	je	.Ltmp2053 # Offset: 318
    00000140: 	testq	%rbp, %rbp
    00000143: 	je	.Ltmp2054 # Offset: 323
.Ltmp2053:
    00000149: 	movq	%r12, (%rsp)
    0000014d: 	cmpq	$0xf, %r12
    00000151: 	ja	.Ltmp2055 # Offset: 337
    00000157: 	cmpq	$0x1, %r12
    0000015b: 	jne	.Ltmp2056 # Offset: 347
    00000161: 	movzbl	(%rbp), %eax
    00000165: 	movb	%al, 0x10(%rbx)
.Ltmp2059:
    00000168: 	movq	%r12, 0x8(%rbx)
    0000016c: 	movb	$0x0, (%rdi,%r12)
    00000171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000178: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017f: 	addq	$0x20, %rax
    00000183: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000018a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000191: 	je	.Ltmp2057 # Offset: 401
.Ltmp2060:
    00000197: 	movq	-0x20(%rax), %rbp
    0000019b: 	callq	clock@PLT # Offset: 411
    000001a0: 	movq	%rax, end_time(%rip)
    000001a7: 	movq	0x8(%rsp), %rdx
    000001ac: 	subq	%fs:0x28, %rdx
    000001b5: 	jne	.Ltmp2058 # Offset: 437
    000001bb: 	subq	start_time(%rip), %rax
    000001c2: 	pxor	%xmm0, %xmm0
    000001c6: 	movq	%rbp, %rdi
    000001c9: 	cvtsi2sd	%rax, %xmm0
    000001ce: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d6: 	addq	$0x18, %rsp
    000001da: 	popq	%rbx
    000001db: 	popq	%rbp
    000001dc: 	popq	%r12
    000001de: 	popq	%r13
    000001e0: 	popq	%r14
    000001e2: 	popq	%r15
    000001e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 484
.Ltmp2055:
    000001e9: 	movq	%rbx, %rdi
    000001ec: 	movq	%rsp, %rsi
    000001ef: 	xorl	%edx, %edx
    000001f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 497
    000001f6: 	movq	%rax, (%rbx)
    000001f9: 	movq	%rax, %rdi
    000001fc: 	movq	(%rsp), %rax
    00000200: 	movq	%rax, 0x10(%rbx)
.Ltmp2061:
    00000204: 	movq	%r12, %rdx
    00000207: 	movq	%rbp, %rsi
    0000020a: 	callq	memcpy@PLT # Offset: 522
    0000020f: 	movq	(%rsp), %r12
    00000213: 	movq	(%rbx), %rdi
    00000216: 	jmp	.Ltmp2059 # Offset: 534
.Ltmp2052:
    0000021b: 	movq	%r12, %rsi
    0000021e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000225: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 549
    0000022a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000231: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000238: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023f: 	jne	.Ltmp2060 # Offset: 575
.Ltmp2057:
    00000245: 	movq	-0x8(%rdx), %rax
    00000249: 	addq	$0x200, %rax
    0000024f: 	jmp	.Ltmp2060 # Offset: 591
.Ltmp2056:
    00000254: 	testq	%r12, %r12
    00000257: 	je	.Ltmp2059 # Offset: 599
    0000025d: 	jmp	.Ltmp2061 # Offset: 605
.Ltmp2058:
    0000025f: 	callq	__stack_chk_fail@PLT # Offset: 607
.Ltmp2054:
    00000264: 	leaq	DATAat0x57008(%rip), %rdi
    0000026b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 619
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl14and_remainder2IlLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi14and_remainder2IiLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 158
  State       : disassembled
  Address     : 0x17eb0
  Size        : 0x39b
  MaxSize     : 0x3a0
  Offset      : 0x17eb0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi14and_remainder2IiLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0157:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp2062 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57c20(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57e80(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp2071:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp2063 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2064 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp2065:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp2065 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp2063 # Offset: 288
.Ltmp2079:
    00000126: 	movslq	%edx, %rcx
    00000129: 	movl	(%r15,%rcx,4), %edi
    0000012d: 	leaq	(,%rcx,4), %r8
    00000135: 	movl	%edi, %ecx
    00000137: 	andl	$0x3ff, %ecx
    0000013d: 	testl	%edi, %edi
    0000013f: 	jns	.Ltmp2066 # Offset: 319
    00000141: 	testl	%ecx, %ecx
    00000143: 	leal	-0x400(%rcx), %edi
    00000149: 	setne	%r9b
    0000014d: 	testb	%r9b, %r9b
    00000150: 	cmovnel	%edi, %ecx
.Ltmp2066:
    00000153: 	addl	%ecx, %eax
    00000155: 	leal	0x1(%rdx), %ecx
    00000158: 	cmpl	%ecx, %r14d
    0000015b: 	jle	.Ltmp2063 # Offset: 347
    0000015d: 	movl	0x4(%r15,%r8), %edi
    00000162: 	movl	%edi, %ecx
    00000164: 	andl	$0x3ff, %ecx
    0000016a: 	testl	%edi, %edi
    0000016c: 	jns	.Ltmp2067 # Offset: 364
    0000016e: 	testl	%ecx, %ecx
    00000170: 	leal	-0x400(%rcx), %edi
    00000176: 	setne	%r9b
    0000017a: 	testb	%r9b, %r9b
    0000017d: 	cmovnel	%edi, %ecx
.Ltmp2067:
    00000180: 	addl	$0x2, %edx
    00000183: 	addl	%ecx, %eax
    00000185: 	cmpl	%edx, %r14d
    00000188: 	jle	.Ltmp2063 # Offset: 392
    0000018a: 	movl	0x8(%r15,%r8), %ecx
    0000018f: 	movl	%ecx, %edx
    00000191: 	andl	$0x3ff, %edx
    00000197: 	je	.Ltmp2068 # Offset: 407
    00000199: 	leal	-0x400(%rdx), %edi
    0000019f: 	testl	%ecx, %ecx
    000001a1: 	cmovsl	%edi, %edx
.Ltmp2068:
    000001a4: 	addl	%edx, %eax
.Ltmp2063:
    000001a6: 	cvttsd2si	%xmm7, %ecx
    000001aa: 	movl	%ecx, %edx
    000001ac: 	andl	$0x3ff, %edx
    000001b2: 	testl	%ecx, %ecx
    000001b4: 	jns	.Ltmp2069 # Offset: 436
    000001b6: 	testl	%edx, %edx
    000001b8: 	leal	-0x400(%rdx), %ecx
    000001be: 	setne	%dil
    000001c2: 	testb	%dil, %dil
    000001c5: 	cmovnel	%ecx, %edx
.Ltmp2069:
    000001c8: 	imull	$0x1f40, %edx, %edx
    000001ce: 	cmpl	%eax, %edx
    000001d0: 	je	.Ltmp2070 # Offset: 464
    000001d2: 	movl	current_test(%rip), %edx
    000001d8: 	movq	%rbp, %rsi
    000001db: 	movl	$0x1, %edi
    000001e0: 	xorl	%eax, %eax
    000001e2: 	addl	$0x1, %r12d
    000001e6: 	callq	__printf_chk@PLT # Offset: 486
    000001eb: 	movl	iterations(%rip), %esi
    000001f1: 	cmpl	%esi, %r12d
    000001f4: 	jge	.Ltmp2062 # Offset: 500
    000001f6: 	movsd	init_value(%rip), %xmm7
    000001fe: 	movdqa	DATAat0x57c20(%rip), %xmm6
    00000206: 	movdqa	DATAat0x57e80(%rip), %xmm5
    0000020e: 	jmp	.Ltmp2071 # Offset: 526
    00000213: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2070:
    00000218: 	addl	$0x1, %r12d
    0000021c: 	cmpl	%esi, %r12d
    0000021f: 	jl	.Ltmp2071 # Offset: 543
.Ltmp2062:
    00000225: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000022c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000233: 	subq	$0x20, %rax
    00000237: 	cmpq	%rax, %rbx
    0000023a: 	je	.Ltmp2072 # Offset: 570
    00000240: 	movq	0x8(%rsp), %rax
    00000245: 	leaq	0x10(%rbx), %rdi
    00000249: 	movq	%rdi, (%rbx)
    0000024c: 	movq	(%rax), %rbp
    0000024f: 	movq	0x8(%rax), %r12
    00000253: 	movq	%rbp, %rax
    00000256: 	addq	%r12, %rax
    00000259: 	je	.Ltmp2073 # Offset: 601
    0000025b: 	testq	%rbp, %rbp
    0000025e: 	je	.Ltmp2074 # Offset: 606
.Ltmp2073:
    00000264: 	movq	%r12, 0x10(%rsp)
    00000269: 	cmpq	$0xf, %r12
    0000026d: 	ja	.Ltmp2075 # Offset: 621
    00000273: 	cmpq	$0x1, %r12
    00000277: 	jne	.Ltmp2076 # Offset: 631
    0000027d: 	movzbl	(%rbp), %eax
    00000281: 	movb	%al, 0x10(%rbx)
.Ltmp2080:
    00000284: 	movq	%r12, 0x8(%rbx)
    00000288: 	movb	$0x0, (%rdi,%r12)
    0000028d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000294: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000029b: 	addq	$0x20, %rax
    0000029f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002a6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002ad: 	je	.Ltmp2077 # Offset: 685
.Ltmp2081:
    000002b3: 	movq	-0x20(%rax), %rbp
    000002b7: 	callq	clock@PLT # Offset: 695
    000002bc: 	movq	%rax, end_time(%rip)
    000002c3: 	movq	0x18(%rsp), %rdx
    000002c8: 	subq	%fs:0x28, %rdx
    000002d1: 	jne	.Ltmp2078 # Offset: 721
    000002d7: 	subq	start_time(%rip), %rax
    000002de: 	pxor	%xmm0, %xmm0
    000002e2: 	movq	%rbp, %rdi
    000002e5: 	cvtsi2sd	%rax, %xmm0
    000002ea: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002f2: 	addq	$0x28, %rsp
    000002f6: 	popq	%rbx
    000002f7: 	popq	%rbp
    000002f8: 	popq	%r12
    000002fa: 	popq	%r13
    000002fc: 	popq	%r14
    000002fe: 	popq	%r15
    00000300: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 768
.Ltmp2064:
    00000305: 	xorl	%edx, %edx
    00000307: 	xorl	%eax, %eax
    00000309: 	jmp	.Ltmp2079 # Offset: 777
.Ltmp2075:
    0000030e: 	movq	%rbx, %rdi
    00000311: 	leaq	0x10(%rsp), %rsi
    00000316: 	xorl	%edx, %edx
    00000318: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 792
    0000031d: 	movq	%rax, (%rbx)
    00000320: 	movq	%rax, %rdi
    00000323: 	movq	0x10(%rsp), %rax
    00000328: 	movq	%rax, 0x10(%rbx)
.Ltmp2082:
    0000032c: 	movq	%r12, %rdx
    0000032f: 	movq	%rbp, %rsi
    00000332: 	callq	memcpy@PLT # Offset: 818
    00000337: 	movq	0x10(%rsp), %r12
    0000033c: 	movq	(%rbx), %rdi
    0000033f: 	jmp	.Ltmp2080 # Offset: 831
.Ltmp2072:
    00000344: 	movq	0x8(%rsp), %rsi
    00000349: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000350: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 848
    00000355: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000035c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000363: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000036a: 	jne	.Ltmp2081 # Offset: 874
.Ltmp2077:
    00000370: 	movq	-0x8(%rdx), %rax
    00000374: 	addq	$0x200, %rax
    0000037a: 	jmp	.Ltmp2081 # Offset: 890
.Ltmp2076:
    0000037f: 	testq	%r12, %r12
    00000382: 	je	.Ltmp2080 # Offset: 898
    00000388: 	jmp	.Ltmp2082 # Offset: 904
.Ltmp2078:
    0000038a: 	callq	__stack_chk_fail@PLT # Offset: 906
.Ltmp2074:
    0000038f: 	leaq	DATAat0x57008(%rip), %rdi
    00000396: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 918
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi14and_remainder2IiLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs14and_remainder2IsLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 159
  State       : disassembled
  Address     : 0x18250
  Size        : 0x4f3
  MaxSize     : 0x500
  Offset      : 0x18250
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs14and_remainder2IsLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0158:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp2083 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57e90(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57d70(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2096:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp2084 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2085 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r14, %rax
    000000ad: 	pxor	%xmm2, %xmm2
    000000b1: 	movdqa	%xmm3, %xmm4
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp2086:
    000000b8: 	movdqu	(%rax), %xmm8
    000000bd: 	movdqa	%xmm4, %xmm0
    000000c1: 	movdqu	(%rax), %xmm12
    000000c6: 	movdqa	%xmm4, %xmm11
    000000cb: 	addq	$0x10, %rax
    000000cf: 	pand	%xmm6, %xmm8
    000000d4: 	pcmpgtw	%xmm8, %xmm0
    000000d9: 	movdqa	%xmm8, %xmm9
    000000de: 	punpcklwd	%xmm0, %xmm9
    000000e3: 	punpckhwd	%xmm0, %xmm8
    000000e8: 	movdqa	%xmm8, %xmm1
    000000ed: 	movdqa	%xmm9, %xmm0
    000000f2: 	pcmpeqd	%xmm2, %xmm0
    000000f6: 	pcmpeqd	%xmm2, %xmm1
    000000fa: 	pcmpeqd	%xmm2, %xmm0
    000000fe: 	pcmpeqd	%xmm2, %xmm1
    00000102: 	movdqa	%xmm0, %xmm10
    00000107: 	punpcklwd	%xmm1, %xmm0
    0000010b: 	punpckhwd	%xmm1, %xmm10
    00000110: 	movdqa	%xmm0, %xmm1
    00000114: 	punpckhwd	%xmm10, %xmm1
    00000119: 	punpcklwd	%xmm10, %xmm0
    0000011e: 	movdqa	%xmm5, %xmm10
    00000123: 	punpcklwd	%xmm1, %xmm0
    00000127: 	movdqa	%xmm4, %xmm1
    0000012b: 	paddd	%xmm9, %xmm10
    00000130: 	pcmpgtw	%xmm12, %xmm1
    00000135: 	pand	%xmm1, %xmm0
    00000139: 	pcmpgtw	%xmm0, %xmm11
    0000013e: 	movdqa	%xmm0, %xmm1
    00000142: 	punpcklwd	%xmm11, %xmm1
    00000147: 	punpckhwd	%xmm11, %xmm0
    0000014c: 	pand	%xmm1, %xmm10
    00000151: 	pandn	%xmm9, %xmm1
    00000156: 	movdqa	%xmm5, %xmm9
    0000015b: 	paddd	%xmm8, %xmm9
    00000160: 	por	%xmm10, %xmm1
    00000165: 	pand	%xmm0, %xmm9
    0000016a: 	pandn	%xmm8, %xmm0
    0000016f: 	movdqa	%xmm1, %xmm8
    00000174: 	por	%xmm9, %xmm0
    00000179: 	punpcklwd	%xmm0, %xmm1
    0000017d: 	punpckhwd	%xmm0, %xmm8
    00000182: 	movdqa	%xmm1, %xmm0
    00000186: 	punpcklwd	%xmm8, %xmm1
    0000018b: 	punpckhwd	%xmm8, %xmm0
    00000190: 	punpcklwd	%xmm0, %xmm1
    00000194: 	paddw	%xmm1, %xmm3
    00000198: 	cmpq	%r15, %rax
    0000019b: 	jne	.Ltmp2086 # Offset: 411
    000001a1: 	movdqa	%xmm3, %xmm0
    000001a5: 	psrldq	$0x8, %xmm0
    000001aa: 	paddw	%xmm0, %xmm3
    000001ae: 	movdqa	%xmm3, %xmm0
    000001b2: 	psrldq	$0x4, %xmm0
    000001b7: 	paddw	%xmm0, %xmm3
    000001bb: 	movdqa	%xmm3, %xmm0
    000001bf: 	psrldq	$0x2, %xmm0
    000001c4: 	paddw	%xmm0, %xmm3
    000001c8: 	pextrw	$0x0, %xmm3, %eax
    000001cd: 	cmpl	%r13d, %ebx
    000001d0: 	je	.Ltmp2084 # Offset: 464
    000001d6: 	movl	%ebx, %edx
.Ltmp2104:
    000001d8: 	movslq	%edx, %rcx
    000001db: 	movzwl	(%r14,%rcx,2), %edi
    000001e0: 	leaq	(%rcx,%rcx), %rsi
    000001e4: 	movl	%edi, %ecx
    000001e6: 	andl	$0x3, %ecx
    000001e9: 	testw	%di, %di
    000001ec: 	jns	.Ltmp2087 # Offset: 492
    000001ee: 	testl	%ecx, %ecx
    000001f0: 	leal	-0x4(%rcx), %edi
    000001f3: 	setne	%r8b
    000001f7: 	testb	%r8b, %r8b
    000001fa: 	cmovnel	%edi, %ecx
.Ltmp2087:
    000001fd: 	addl	%eax, %ecx
    000001ff: 	leal	0x1(%rdx), %edi
    00000202: 	movl	%ecx, %eax
    00000204: 	cmpl	%edi, %r13d
    00000207: 	jle	.Ltmp2084 # Offset: 519
    0000020d: 	movzwl	0x2(%r14,%rsi), %edi
    00000213: 	movl	%edi, %eax
    00000215: 	andl	$0x3, %eax
    00000218: 	je	.Ltmp2088 # Offset: 536
    0000021a: 	leal	-0x4(%rax), %r8d
    0000021e: 	testw	%di, %di
    00000221: 	cmovsl	%r8d, %eax
.Ltmp2088:
    00000225: 	addl	%eax, %ecx
    00000227: 	leal	0x2(%rdx), %edi
    0000022a: 	movl	%ecx, %eax
    0000022c: 	cmpl	%edi, %r13d
    0000022f: 	jle	.Ltmp2084 # Offset: 559
    00000235: 	movzwl	0x4(%r14,%rsi), %edi
    0000023b: 	movl	%edi, %eax
    0000023d: 	andl	$0x3, %eax
    00000240: 	testw	%di, %di
    00000243: 	jns	.Ltmp2089 # Offset: 579
    00000245: 	testl	%eax, %eax
    00000247: 	leal	-0x4(%rax), %edi
    0000024a: 	setne	%r8b
    0000024e: 	testb	%r8b, %r8b
    00000251: 	cmovnel	%edi, %eax
.Ltmp2089:
    00000254: 	addl	%eax, %ecx
    00000256: 	leal	0x3(%rdx), %edi
    00000259: 	movl	%ecx, %eax
    0000025b: 	cmpl	%edi, %r13d
    0000025e: 	jle	.Ltmp2084 # Offset: 606
    00000264: 	movzwl	0x6(%r14,%rsi), %edi
    0000026a: 	movl	%edi, %eax
    0000026c: 	andl	$0x3, %eax
    0000026f: 	testw	%di, %di
    00000272: 	jns	.Ltmp2090 # Offset: 626
    00000274: 	testl	%eax, %eax
    00000276: 	leal	-0x4(%rax), %edi
    00000279: 	setne	%r8b
    0000027d: 	testb	%r8b, %r8b
    00000280: 	cmovnel	%edi, %eax
.Ltmp2090:
    00000283: 	addl	%eax, %ecx
    00000285: 	leal	0x4(%rdx), %edi
    00000288: 	movl	%ecx, %eax
    0000028a: 	cmpl	%edi, %r13d
    0000028d: 	jle	.Ltmp2084 # Offset: 653
    0000028f: 	movzwl	0x8(%r14,%rsi), %edi
    00000295: 	movl	%edi, %eax
    00000297: 	andl	$0x3, %eax
    0000029a: 	testw	%di, %di
    0000029d: 	jns	.Ltmp2091 # Offset: 669
    0000029f: 	testl	%eax, %eax
    000002a1: 	leal	-0x4(%rax), %edi
    000002a4: 	setne	%r8b
    000002a8: 	testb	%r8b, %r8b
    000002ab: 	cmovnel	%edi, %eax
.Ltmp2091:
    000002ae: 	addl	%eax, %ecx
    000002b0: 	leal	0x5(%rdx), %edi
    000002b3: 	movl	%ecx, %eax
    000002b5: 	cmpl	%edi, %r13d
    000002b8: 	jle	.Ltmp2084 # Offset: 696
    000002ba: 	movzwl	0xa(%r14,%rsi), %edi
    000002c0: 	movl	%edi, %eax
    000002c2: 	andl	$0x3, %eax
    000002c5: 	testw	%di, %di
    000002c8: 	jns	.Ltmp2092 # Offset: 712
    000002ca: 	testl	%eax, %eax
    000002cc: 	leal	-0x4(%rax), %edi
    000002cf: 	setne	%r8b
    000002d3: 	testb	%r8b, %r8b
    000002d6: 	cmovnel	%edi, %eax
.Ltmp2092:
    000002d9: 	addl	%eax, %ecx
    000002db: 	addl	$0x6, %edx
    000002de: 	movl	%ecx, %eax
    000002e0: 	cmpl	%edx, %r13d
    000002e3: 	jle	.Ltmp2084 # Offset: 739
    000002e5: 	movzwl	0xc(%r14,%rsi), %edx
    000002eb: 	movl	%edx, %eax
    000002ed: 	andl	$0x3, %eax
    000002f0: 	je	.Ltmp2093 # Offset: 752
    000002f2: 	leal	-0x4(%rax), %esi
    000002f5: 	testw	%dx, %dx
    000002f8: 	cmovsl	%esi, %eax
.Ltmp2093:
    000002fb: 	addl	%ecx, %eax
.Ltmp2084:
    000002fd: 	cvttsd2si	%xmm7, %ecx
    00000301: 	movl	%ecx, %edx
    00000303: 	andl	$0x3, %edx
    00000306: 	testw	%cx, %cx
    00000309: 	jns	.Ltmp2094 # Offset: 777
    0000030b: 	testl	%edx, %edx
    0000030d: 	leal	-0x4(%rdx), %ecx
    00000310: 	setne	%sil
    00000314: 	testb	%sil, %sil
    00000317: 	cmovnel	%ecx, %edx
.Ltmp2094:
    0000031a: 	imulw	$0x1f40, %dx, %dx
    0000031f: 	cmpw	%ax, %dx
    00000322: 	je	.Ltmp2095 # Offset: 802
    00000324: 	movl	current_test(%rip), %edx
    0000032a: 	movq	%rbp, %rsi
    0000032d: 	movl	$0x1, %edi
    00000332: 	xorl	%eax, %eax
    00000334: 	addl	$0x1, %r12d
    00000338: 	callq	__printf_chk@PLT # Offset: 824
    0000033d: 	movl	iterations(%rip), %r9d
    00000344: 	cmpl	%r9d, %r12d
    00000347: 	jge	.Ltmp2083 # Offset: 839
    00000349: 	movsd	init_value(%rip), %xmm7
    00000351: 	movdqa	DATAat0x57e90(%rip), %xmm6
    00000359: 	movdqa	DATAat0x57d70(%rip), %xmm5
    00000361: 	jmp	.Ltmp2096 # Offset: 865
    00000366: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2095:
    00000370: 	addl	$0x1, %r12d
    00000374: 	cmpl	%r9d, %r12d
    00000377: 	jl	.Ltmp2096 # Offset: 887
.Ltmp2083:
    0000037d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000384: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000038b: 	subq	$0x20, %rax
    0000038f: 	cmpq	%rax, %rbx
    00000392: 	je	.Ltmp2097 # Offset: 914
    00000398: 	movq	0x8(%rsp), %rax
    0000039d: 	leaq	0x10(%rbx), %rdi
    000003a1: 	movq	%rdi, (%rbx)
    000003a4: 	movq	(%rax), %rbp
    000003a7: 	movq	0x8(%rax), %r12
    000003ab: 	movq	%rbp, %rax
    000003ae: 	addq	%r12, %rax
    000003b1: 	je	.Ltmp2098 # Offset: 945
    000003b3: 	testq	%rbp, %rbp
    000003b6: 	je	.Ltmp2099 # Offset: 950
.Ltmp2098:
    000003bc: 	movq	%r12, 0x10(%rsp)
    000003c1: 	cmpq	$0xf, %r12
    000003c5: 	ja	.Ltmp2100 # Offset: 965
    000003cb: 	cmpq	$0x1, %r12
    000003cf: 	jne	.Ltmp2101 # Offset: 975
    000003d5: 	movzbl	(%rbp), %eax
    000003d9: 	movb	%al, 0x10(%rbx)
.Ltmp2105:
    000003dc: 	movq	%r12, 0x8(%rbx)
    000003e0: 	movb	$0x0, (%rdi,%r12)
    000003e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003f3: 	addq	$0x20, %rax
    000003f7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003fe: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000405: 	je	.Ltmp2102 # Offset: 1029
.Ltmp2106:
    0000040b: 	movq	-0x20(%rax), %rbp
    0000040f: 	callq	clock@PLT # Offset: 1039
    00000414: 	movq	%rax, end_time(%rip)
    0000041b: 	movq	0x18(%rsp), %rdx
    00000420: 	subq	%fs:0x28, %rdx
    00000429: 	jne	.Ltmp2103 # Offset: 1065
    0000042f: 	subq	start_time(%rip), %rax
    00000436: 	pxor	%xmm0, %xmm0
    0000043a: 	movq	%rbp, %rdi
    0000043d: 	cvtsi2sd	%rax, %xmm0
    00000442: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000044a: 	addq	$0x28, %rsp
    0000044e: 	popq	%rbx
    0000044f: 	popq	%rbp
    00000450: 	popq	%r12
    00000452: 	popq	%r13
    00000454: 	popq	%r14
    00000456: 	popq	%r15
    00000458: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1112
.Ltmp2085:
    0000045d: 	xorl	%edx, %edx
    0000045f: 	xorl	%eax, %eax
    00000461: 	jmp	.Ltmp2104 # Offset: 1121
.Ltmp2100:
    00000466: 	movq	%rbx, %rdi
    00000469: 	leaq	0x10(%rsp), %rsi
    0000046e: 	xorl	%edx, %edx
    00000470: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1136
    00000475: 	movq	%rax, (%rbx)
    00000478: 	movq	%rax, %rdi
    0000047b: 	movq	0x10(%rsp), %rax
    00000480: 	movq	%rax, 0x10(%rbx)
.Ltmp2107:
    00000484: 	movq	%r12, %rdx
    00000487: 	movq	%rbp, %rsi
    0000048a: 	callq	memcpy@PLT # Offset: 1162
    0000048f: 	movq	0x10(%rsp), %r12
    00000494: 	movq	(%rbx), %rdi
    00000497: 	jmp	.Ltmp2105 # Offset: 1175
.Ltmp2097:
    0000049c: 	movq	0x8(%rsp), %rsi
    000004a1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000004a8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1192
    000004ad: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004b4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000004bb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004c2: 	jne	.Ltmp2106 # Offset: 1218
.Ltmp2102:
    000004c8: 	movq	-0x8(%rdx), %rax
    000004cc: 	addq	$0x200, %rax
    000004d2: 	jmp	.Ltmp2106 # Offset: 1234
.Ltmp2101:
    000004d7: 	testq	%r12, %r12
    000004da: 	je	.Ltmp2105 # Offset: 1242
    000004e0: 	jmp	.Ltmp2107 # Offset: 1248
.Ltmp2103:
    000004e2: 	callq	__stack_chk_fail@PLT # Offset: 1250
.Ltmp2099:
    000004e7: 	leaq	DATAat0x57008(%rip), %rdi
    000004ee: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1262
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs14and_remainder2IsLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs13and_remainderIsLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 160
  State       : disassembled
  Address     : 0x18750
  Size        : 0x453
  MaxSize     : 0x460
  Offset      : 0x18750
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs13and_remainderIsLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0159:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp2108 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57cb0(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57ea0(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2121:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp2109 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2110 # Offset: 160
    000000a6: 	pxor	%xmm1, %xmm1
    000000aa: 	movq	%r14, %rax
    000000ad: 	movdqa	%xmm1, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp2111:
    000000b8: 	movdqu	(%rax), %xmm3
    000000bc: 	movdqu	(%rax), %xmm8
    000000c1: 	movdqa	%xmm4, %xmm2
    000000c5: 	addq	$0x10, %rax
    000000c9: 	pand	%xmm6, %xmm3
    000000cd: 	pcmpgtw	%xmm8, %xmm2
    000000d2: 	movdqa	%xmm3, %xmm0
    000000d6: 	pcmpeqw	%xmm4, %xmm0
    000000da: 	pcmpeqw	%xmm4, %xmm0
    000000de: 	pand	%xmm2, %xmm0
    000000e2: 	movdqa	%xmm3, %xmm2
    000000e6: 	paddw	%xmm5, %xmm2
    000000ea: 	pand	%xmm0, %xmm2
    000000ee: 	pandn	%xmm3, %xmm0
    000000f2: 	por	%xmm2, %xmm0
    000000f6: 	paddw	%xmm0, %xmm1
    000000fa: 	cmpq	%r15, %rax
    000000fd: 	jne	.Ltmp2111 # Offset: 253
    000000ff: 	movdqa	%xmm1, %xmm0
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddw	%xmm0, %xmm1
    0000010c: 	movdqa	%xmm1, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddw	%xmm0, %xmm1
    00000119: 	movdqa	%xmm1, %xmm0
    0000011d: 	psrldq	$0x2, %xmm0
    00000122: 	paddw	%xmm0, %xmm1
    00000126: 	pextrw	$0x0, %xmm1, %eax
    0000012b: 	cmpl	%r13d, %ebx
    0000012e: 	je	.Ltmp2109 # Offset: 302
    00000134: 	movl	%ebx, %edx
.Ltmp2129:
    00000136: 	movslq	%edx, %rcx
    00000139: 	movzwl	(%r14,%rcx,2), %edi
    0000013e: 	leaq	(%rcx,%rcx), %rsi
    00000142: 	movl	%edi, %ecx
    00000144: 	andl	$0x7, %ecx
    00000147: 	testw	%di, %di
    0000014a: 	jns	.Ltmp2112 # Offset: 330
    0000014c: 	testw	%cx, %cx
    0000014f: 	leal	-0x8(%rcx), %edi
    00000152: 	setne	%r8b
    00000156: 	testb	%r8b, %r8b
    00000159: 	cmovnel	%edi, %ecx
.Ltmp2112:
    0000015c: 	addl	%eax, %ecx
    0000015e: 	leal	0x1(%rdx), %edi
    00000161: 	movl	%ecx, %eax
    00000163: 	cmpl	%edi, %r13d
    00000166: 	jle	.Ltmp2109 # Offset: 358
    0000016c: 	movzwl	0x2(%r14,%rsi), %edi
    00000172: 	movl	%edi, %eax
    00000174: 	andw	$0x7, %ax
    00000178: 	je	.Ltmp2113 # Offset: 376
    0000017a: 	leal	-0x8(%rax), %r8d
    0000017e: 	testw	%di, %di
    00000181: 	cmovsl	%r8d, %eax
.Ltmp2113:
    00000185: 	addl	%eax, %ecx
    00000187: 	leal	0x2(%rdx), %edi
    0000018a: 	movl	%ecx, %eax
    0000018c: 	cmpl	%edi, %r13d
    0000018f: 	jle	.Ltmp2109 # Offset: 399
    00000195: 	movzwl	0x4(%r14,%rsi), %edi
    0000019b: 	movl	%edi, %eax
    0000019d: 	andl	$0x7, %eax
    000001a0: 	testw	%di, %di
    000001a3: 	jns	.Ltmp2114 # Offset: 419
    000001a5: 	testw	%ax, %ax
    000001a8: 	leal	-0x8(%rax), %edi
    000001ab: 	setne	%r8b
    000001af: 	testb	%r8b, %r8b
    000001b2: 	cmovnel	%edi, %eax
.Ltmp2114:
    000001b5: 	addl	%eax, %ecx
    000001b7: 	leal	0x3(%rdx), %edi
    000001ba: 	movl	%ecx, %eax
    000001bc: 	cmpl	%edi, %r13d
    000001bf: 	jle	.Ltmp2109 # Offset: 447
    000001c5: 	movzwl	0x6(%r14,%rsi), %edi
    000001cb: 	movl	%edi, %eax
    000001cd: 	andl	$0x7, %eax
    000001d0: 	testw	%di, %di
    000001d3: 	jns	.Ltmp2115 # Offset: 467
    000001d5: 	testw	%ax, %ax
    000001d8: 	leal	-0x8(%rax), %edi
    000001db: 	setne	%r8b
    000001df: 	testb	%r8b, %r8b
    000001e2: 	cmovnel	%edi, %eax
.Ltmp2115:
    000001e5: 	addl	%eax, %ecx
    000001e7: 	leal	0x4(%rdx), %edi
    000001ea: 	movl	%ecx, %eax
    000001ec: 	cmpl	%edi, %r13d
    000001ef: 	jle	.Ltmp2109 # Offset: 495
    000001f1: 	movzwl	0x8(%r14,%rsi), %edi
    000001f7: 	movl	%edi, %eax
    000001f9: 	andl	$0x7, %eax
    000001fc: 	testw	%di, %di
    000001ff: 	jns	.Ltmp2116 # Offset: 511
    00000201: 	testw	%ax, %ax
    00000204: 	leal	-0x8(%rax), %edi
    00000207: 	setne	%r8b
    0000020b: 	testb	%r8b, %r8b
    0000020e: 	cmovnel	%edi, %eax
.Ltmp2116:
    00000211: 	addl	%eax, %ecx
    00000213: 	leal	0x5(%rdx), %edi
    00000216: 	movl	%ecx, %eax
    00000218: 	cmpl	%edi, %r13d
    0000021b: 	jle	.Ltmp2109 # Offset: 539
    0000021d: 	movzwl	0xa(%r14,%rsi), %edi
    00000223: 	movl	%edi, %eax
    00000225: 	andl	$0x7, %eax
    00000228: 	testw	%di, %di
    0000022b: 	jns	.Ltmp2117 # Offset: 555
    0000022d: 	testw	%ax, %ax
    00000230: 	leal	-0x8(%rax), %edi
    00000233: 	setne	%r8b
    00000237: 	testb	%r8b, %r8b
    0000023a: 	cmovnel	%edi, %eax
.Ltmp2117:
    0000023d: 	addl	%eax, %ecx
    0000023f: 	addl	$0x6, %edx
    00000242: 	movl	%ecx, %eax
    00000244: 	cmpl	%edx, %r13d
    00000247: 	jle	.Ltmp2109 # Offset: 583
    00000249: 	movzwl	0xc(%r14,%rsi), %edx
    0000024f: 	movl	%edx, %eax
    00000251: 	andw	$0x7, %ax
    00000255: 	je	.Ltmp2118 # Offset: 597
    00000257: 	leal	-0x8(%rax), %esi
    0000025a: 	testw	%dx, %dx
    0000025d: 	cmovsl	%esi, %eax
.Ltmp2118:
    00000260: 	addl	%ecx, %eax
.Ltmp2109:
    00000262: 	cvttsd2si	%xmm7, %ecx
    00000266: 	movl	%ecx, %edx
    00000268: 	andl	$0x7, %edx
    0000026b: 	testw	%cx, %cx
    0000026e: 	jns	.Ltmp2119 # Offset: 622
    00000270: 	testw	%dx, %dx
    00000273: 	leal	-0x8(%rdx), %ecx
    00000276: 	setne	%sil
    0000027a: 	testb	%sil, %sil
    0000027d: 	cmovnel	%ecx, %edx
.Ltmp2119:
    00000280: 	imulw	$0x1f40, %dx, %dx
    00000285: 	cmpw	%ax, %dx
    00000288: 	je	.Ltmp2120 # Offset: 648
    0000028a: 	movl	current_test(%rip), %edx
    00000290: 	movq	%rbp, %rsi
    00000293: 	movl	$0x1, %edi
    00000298: 	xorl	%eax, %eax
    0000029a: 	addl	$0x1, %r12d
    0000029e: 	callq	__printf_chk@PLT # Offset: 670
    000002a3: 	movl	iterations(%rip), %r9d
    000002aa: 	cmpl	%r9d, %r12d
    000002ad: 	jge	.Ltmp2108 # Offset: 685
    000002af: 	movsd	init_value(%rip), %xmm7
    000002b7: 	movdqa	DATAat0x57cb0(%rip), %xmm6
    000002bf: 	movdqa	DATAat0x57ea0(%rip), %xmm5
    000002c7: 	jmp	.Ltmp2121 # Offset: 711
    000002cc: 	nopl	(%rax) # Size: 4
.Ltmp2120:
    000002d0: 	addl	$0x1, %r12d
    000002d4: 	cmpl	%r9d, %r12d
    000002d7: 	jl	.Ltmp2121 # Offset: 727
.Ltmp2108:
    000002dd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002eb: 	subq	$0x20, %rax
    000002ef: 	cmpq	%rax, %rbx
    000002f2: 	je	.Ltmp2122 # Offset: 754
    000002f8: 	movq	0x8(%rsp), %rax
    000002fd: 	leaq	0x10(%rbx), %rdi
    00000301: 	movq	%rdi, (%rbx)
    00000304: 	movq	(%rax), %rbp
    00000307: 	movq	0x8(%rax), %r12
    0000030b: 	movq	%rbp, %rax
    0000030e: 	addq	%r12, %rax
    00000311: 	je	.Ltmp2123 # Offset: 785
    00000313: 	testq	%rbp, %rbp
    00000316: 	je	.Ltmp2124 # Offset: 790
.Ltmp2123:
    0000031c: 	movq	%r12, 0x10(%rsp)
    00000321: 	cmpq	$0xf, %r12
    00000325: 	ja	.Ltmp2125 # Offset: 805
    0000032b: 	cmpq	$0x1, %r12
    0000032f: 	jne	.Ltmp2126 # Offset: 815
    00000335: 	movzbl	(%rbp), %eax
    00000339: 	movb	%al, 0x10(%rbx)
.Ltmp2130:
    0000033c: 	movq	%r12, 0x8(%rbx)
    00000340: 	movb	$0x0, (%rdi,%r12)
    00000345: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000034c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000353: 	addq	$0x20, %rax
    00000357: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000035e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000365: 	je	.Ltmp2127 # Offset: 869
.Ltmp2131:
    0000036b: 	movq	-0x20(%rax), %rbp
    0000036f: 	callq	clock@PLT # Offset: 879
    00000374: 	movq	%rax, end_time(%rip)
    0000037b: 	movq	0x18(%rsp), %rdx
    00000380: 	subq	%fs:0x28, %rdx
    00000389: 	jne	.Ltmp2128 # Offset: 905
    0000038f: 	subq	start_time(%rip), %rax
    00000396: 	pxor	%xmm0, %xmm0
    0000039a: 	movq	%rbp, %rdi
    0000039d: 	cvtsi2sd	%rax, %xmm0
    000003a2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003aa: 	addq	$0x28, %rsp
    000003ae: 	popq	%rbx
    000003af: 	popq	%rbp
    000003b0: 	popq	%r12
    000003b2: 	popq	%r13
    000003b4: 	popq	%r14
    000003b6: 	popq	%r15
    000003b8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 952
.Ltmp2110:
    000003bd: 	xorl	%edx, %edx
    000003bf: 	xorl	%eax, %eax
    000003c1: 	jmp	.Ltmp2129 # Offset: 961
.Ltmp2125:
    000003c6: 	movq	%rbx, %rdi
    000003c9: 	leaq	0x10(%rsp), %rsi
    000003ce: 	xorl	%edx, %edx
    000003d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 976
    000003d5: 	movq	%rax, (%rbx)
    000003d8: 	movq	%rax, %rdi
    000003db: 	movq	0x10(%rsp), %rax
    000003e0: 	movq	%rax, 0x10(%rbx)
.Ltmp2132:
    000003e4: 	movq	%r12, %rdx
    000003e7: 	movq	%rbp, %rsi
    000003ea: 	callq	memcpy@PLT # Offset: 1002
    000003ef: 	movq	0x10(%rsp), %r12
    000003f4: 	movq	(%rbx), %rdi
    000003f7: 	jmp	.Ltmp2130 # Offset: 1015
.Ltmp2122:
    000003fc: 	movq	0x8(%rsp), %rsi
    00000401: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000408: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1032
    0000040d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000414: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000041b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000422: 	jne	.Ltmp2131 # Offset: 1058
.Ltmp2127:
    00000428: 	movq	-0x8(%rdx), %rax
    0000042c: 	addq	$0x200, %rax
    00000432: 	jmp	.Ltmp2131 # Offset: 1074
.Ltmp2126:
    00000437: 	testq	%r12, %r12
    0000043a: 	je	.Ltmp2130 # Offset: 1082
    00000440: 	jmp	.Ltmp2132 # Offset: 1088
.Ltmp2128:
    00000442: 	callq	__stack_chk_fail@PLT # Offset: 1090
.Ltmp2124:
    00000447: 	leaq	DATAat0x57008(%rip), %rdi
    0000044e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1102
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs13and_remainderIsLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs14and_remainder2IsLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 161
  State       : disassembled
  Address     : 0x18bb0
  Size        : 0x513
  MaxSize     : 0x520
  Offset      : 0x18bb0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs14and_remainder2IsLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0160:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp2133 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57eb0(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57e80(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2146:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp2134 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2135 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r14, %rax
    000000ad: 	pxor	%xmm2, %xmm2
    000000b1: 	movdqa	%xmm3, %xmm4
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp2136:
    000000b8: 	movdqu	(%rax), %xmm8
    000000bd: 	movdqa	%xmm4, %xmm0
    000000c1: 	movdqu	(%rax), %xmm12
    000000c6: 	movdqa	%xmm4, %xmm11
    000000cb: 	addq	$0x10, %rax
    000000cf: 	pand	%xmm6, %xmm8
    000000d4: 	pcmpgtw	%xmm8, %xmm0
    000000d9: 	movdqa	%xmm8, %xmm9
    000000de: 	punpcklwd	%xmm0, %xmm9
    000000e3: 	punpckhwd	%xmm0, %xmm8
    000000e8: 	movdqa	%xmm8, %xmm1
    000000ed: 	movdqa	%xmm9, %xmm0
    000000f2: 	pcmpeqd	%xmm2, %xmm0
    000000f6: 	pcmpeqd	%xmm2, %xmm1
    000000fa: 	pcmpeqd	%xmm2, %xmm0
    000000fe: 	pcmpeqd	%xmm2, %xmm1
    00000102: 	movdqa	%xmm0, %xmm10
    00000107: 	punpcklwd	%xmm1, %xmm0
    0000010b: 	punpckhwd	%xmm1, %xmm10
    00000110: 	movdqa	%xmm0, %xmm1
    00000114: 	punpckhwd	%xmm10, %xmm1
    00000119: 	punpcklwd	%xmm10, %xmm0
    0000011e: 	movdqa	%xmm5, %xmm10
    00000123: 	punpcklwd	%xmm1, %xmm0
    00000127: 	movdqa	%xmm4, %xmm1
    0000012b: 	paddd	%xmm9, %xmm10
    00000130: 	pcmpgtw	%xmm12, %xmm1
    00000135: 	pand	%xmm1, %xmm0
    00000139: 	pcmpgtw	%xmm0, %xmm11
    0000013e: 	movdqa	%xmm0, %xmm1
    00000142: 	punpcklwd	%xmm11, %xmm1
    00000147: 	punpckhwd	%xmm11, %xmm0
    0000014c: 	pand	%xmm1, %xmm10
    00000151: 	pandn	%xmm9, %xmm1
    00000156: 	movdqa	%xmm5, %xmm9
    0000015b: 	paddd	%xmm8, %xmm9
    00000160: 	por	%xmm10, %xmm1
    00000165: 	pand	%xmm0, %xmm9
    0000016a: 	pandn	%xmm8, %xmm0
    0000016f: 	movdqa	%xmm1, %xmm8
    00000174: 	por	%xmm9, %xmm0
    00000179: 	punpcklwd	%xmm0, %xmm1
    0000017d: 	punpckhwd	%xmm0, %xmm8
    00000182: 	movdqa	%xmm1, %xmm0
    00000186: 	punpcklwd	%xmm8, %xmm1
    0000018b: 	punpckhwd	%xmm8, %xmm0
    00000190: 	punpcklwd	%xmm0, %xmm1
    00000194: 	paddw	%xmm1, %xmm3
    00000198: 	cmpq	%r15, %rax
    0000019b: 	jne	.Ltmp2136 # Offset: 411
    000001a1: 	movdqa	%xmm3, %xmm0
    000001a5: 	psrldq	$0x8, %xmm0
    000001aa: 	paddw	%xmm0, %xmm3
    000001ae: 	movdqa	%xmm3, %xmm0
    000001b2: 	psrldq	$0x4, %xmm0
    000001b7: 	paddw	%xmm0, %xmm3
    000001bb: 	movdqa	%xmm3, %xmm0
    000001bf: 	psrldq	$0x2, %xmm0
    000001c4: 	paddw	%xmm0, %xmm3
    000001c8: 	pextrw	$0x0, %xmm3, %eax
    000001cd: 	cmpl	%r13d, %ebx
    000001d0: 	je	.Ltmp2134 # Offset: 464
    000001d6: 	movl	%ebx, %edx
.Ltmp2154:
    000001d8: 	movslq	%edx, %rcx
    000001db: 	movzwl	(%r14,%rcx,2), %edi
    000001e0: 	leaq	(%rcx,%rcx), %rsi
    000001e4: 	movl	%edi, %ecx
    000001e6: 	andl	$0x3ff, %ecx
    000001ec: 	testw	%di, %di
    000001ef: 	jns	.Ltmp2137 # Offset: 495
    000001f1: 	testl	%ecx, %ecx
    000001f3: 	leal	-0x400(%rcx), %edi
    000001f9: 	setne	%r8b
    000001fd: 	testb	%r8b, %r8b
    00000200: 	cmovnel	%edi, %ecx
.Ltmp2137:
    00000203: 	addl	%eax, %ecx
    00000205: 	leal	0x1(%rdx), %edi
    00000208: 	movl	%ecx, %eax
    0000020a: 	cmpl	%edi, %r13d
    0000020d: 	jle	.Ltmp2134 # Offset: 525
    00000213: 	movzwl	0x2(%r14,%rsi), %edi
    00000219: 	movl	%edi, %eax
    0000021b: 	andl	$0x3ff, %eax
    00000220: 	je	.Ltmp2138 # Offset: 544
    00000222: 	leal	-0x400(%rax), %r8d
    00000229: 	testw	%di, %di
    0000022c: 	cmovsl	%r8d, %eax
.Ltmp2138:
    00000230: 	addl	%eax, %ecx
    00000232: 	leal	0x2(%rdx), %edi
    00000235: 	movl	%ecx, %eax
    00000237: 	cmpl	%edi, %r13d
    0000023a: 	jle	.Ltmp2134 # Offset: 570
    00000240: 	movzwl	0x4(%r14,%rsi), %edi
    00000246: 	movl	%edi, %eax
    00000248: 	andl	$0x3ff, %eax
    0000024d: 	testw	%di, %di
    00000250: 	jns	.Ltmp2139 # Offset: 592
    00000252: 	testl	%eax, %eax
    00000254: 	leal	-0x400(%rax), %edi
    0000025a: 	setne	%r8b
    0000025e: 	testb	%r8b, %r8b
    00000261: 	cmovnel	%edi, %eax
.Ltmp2139:
    00000264: 	addl	%eax, %ecx
    00000266: 	leal	0x3(%rdx), %edi
    00000269: 	movl	%ecx, %eax
    0000026b: 	cmpl	%edi, %r13d
    0000026e: 	jle	.Ltmp2134 # Offset: 622
    00000274: 	movzwl	0x6(%r14,%rsi), %edi
    0000027a: 	movl	%edi, %eax
    0000027c: 	andl	$0x3ff, %eax
    00000281: 	testw	%di, %di
    00000284: 	jns	.Ltmp2140 # Offset: 644
    00000286: 	testl	%eax, %eax
    00000288: 	leal	-0x400(%rax), %edi
    0000028e: 	setne	%r8b
    00000292: 	testb	%r8b, %r8b
    00000295: 	cmovnel	%edi, %eax
.Ltmp2140:
    00000298: 	addl	%eax, %ecx
    0000029a: 	leal	0x4(%rdx), %edi
    0000029d: 	movl	%ecx, %eax
    0000029f: 	cmpl	%edi, %r13d
    000002a2: 	jle	.Ltmp2134 # Offset: 674
    000002a4: 	movzwl	0x8(%r14,%rsi), %edi
    000002aa: 	movl	%edi, %eax
    000002ac: 	andl	$0x3ff, %eax
    000002b1: 	testw	%di, %di
    000002b4: 	jns	.Ltmp2141 # Offset: 692
    000002b6: 	testl	%eax, %eax
    000002b8: 	leal	-0x400(%rax), %edi
    000002be: 	setne	%r8b
    000002c2: 	testb	%r8b, %r8b
    000002c5: 	cmovnel	%edi, %eax
.Ltmp2141:
    000002c8: 	addl	%eax, %ecx
    000002ca: 	leal	0x5(%rdx), %edi
    000002cd: 	movl	%ecx, %eax
    000002cf: 	cmpl	%edi, %r13d
    000002d2: 	jle	.Ltmp2134 # Offset: 722
    000002d4: 	movzwl	0xa(%r14,%rsi), %edi
    000002da: 	movl	%edi, %eax
    000002dc: 	andl	$0x3ff, %eax
    000002e1: 	testw	%di, %di
    000002e4: 	jns	.Ltmp2142 # Offset: 740
    000002e6: 	testl	%eax, %eax
    000002e8: 	leal	-0x400(%rax), %edi
    000002ee: 	setne	%r8b
    000002f2: 	testb	%r8b, %r8b
    000002f5: 	cmovnel	%edi, %eax
.Ltmp2142:
    000002f8: 	addl	%eax, %ecx
    000002fa: 	addl	$0x6, %edx
    000002fd: 	movl	%ecx, %eax
    000002ff: 	cmpl	%edx, %r13d
    00000302: 	jle	.Ltmp2134 # Offset: 770
    00000304: 	movzwl	0xc(%r14,%rsi), %edx
    0000030a: 	movl	%edx, %eax
    0000030c: 	andl	$0x3ff, %eax
    00000311: 	je	.Ltmp2143 # Offset: 785
    00000313: 	leal	-0x400(%rax), %esi
    00000319: 	testw	%dx, %dx
    0000031c: 	cmovsl	%esi, %eax
.Ltmp2143:
    0000031f: 	addl	%ecx, %eax
.Ltmp2134:
    00000321: 	cvttsd2si	%xmm7, %ecx
    00000325: 	movl	%ecx, %edx
    00000327: 	andl	$0x3ff, %edx
    0000032d: 	testw	%cx, %cx
    00000330: 	jns	.Ltmp2144 # Offset: 816
    00000332: 	testl	%edx, %edx
    00000334: 	leal	-0x400(%rdx), %ecx
    0000033a: 	setne	%sil
    0000033e: 	testb	%sil, %sil
    00000341: 	cmovnel	%ecx, %edx
.Ltmp2144:
    00000344: 	imulw	$0x1f40, %dx, %dx
    00000349: 	cmpw	%ax, %dx
    0000034c: 	je	.Ltmp2145 # Offset: 844
    0000034e: 	movl	current_test(%rip), %edx
    00000354: 	movq	%rbp, %rsi
    00000357: 	movl	$0x1, %edi
    0000035c: 	xorl	%eax, %eax
    0000035e: 	addl	$0x1, %r12d
    00000362: 	callq	__printf_chk@PLT # Offset: 866
    00000367: 	movl	iterations(%rip), %r9d
    0000036e: 	cmpl	%r9d, %r12d
    00000371: 	jge	.Ltmp2133 # Offset: 881
    00000373: 	movsd	init_value(%rip), %xmm7
    0000037b: 	movdqa	DATAat0x57eb0(%rip), %xmm6
    00000383: 	movdqa	DATAat0x57e80(%rip), %xmm5
    0000038b: 	jmp	.Ltmp2146 # Offset: 907
.Ltmp2145:
    00000390: 	addl	$0x1, %r12d
    00000394: 	cmpl	%r9d, %r12d
    00000397: 	jl	.Ltmp2146 # Offset: 919
.Ltmp2133:
    0000039d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000003a4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000003ab: 	subq	$0x20, %rax
    000003af: 	cmpq	%rax, %rbx
    000003b2: 	je	.Ltmp2147 # Offset: 946
    000003b8: 	movq	0x8(%rsp), %rax
    000003bd: 	leaq	0x10(%rbx), %rdi
    000003c1: 	movq	%rdi, (%rbx)
    000003c4: 	movq	(%rax), %rbp
    000003c7: 	movq	0x8(%rax), %r12
    000003cb: 	movq	%rbp, %rax
    000003ce: 	addq	%r12, %rax
    000003d1: 	je	.Ltmp2148 # Offset: 977
    000003d3: 	testq	%rbp, %rbp
    000003d6: 	je	.Ltmp2149 # Offset: 982
.Ltmp2148:
    000003dc: 	movq	%r12, 0x10(%rsp)
    000003e1: 	cmpq	$0xf, %r12
    000003e5: 	ja	.Ltmp2150 # Offset: 997
    000003eb: 	cmpq	$0x1, %r12
    000003ef: 	jne	.Ltmp2151 # Offset: 1007
    000003f5: 	movzbl	(%rbp), %eax
    000003f9: 	movb	%al, 0x10(%rbx)
.Ltmp2155:
    000003fc: 	movq	%r12, 0x8(%rbx)
    00000400: 	movb	$0x0, (%rdi,%r12)
    00000405: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000040c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000413: 	addq	$0x20, %rax
    00000417: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000041e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000425: 	je	.Ltmp2152 # Offset: 1061
.Ltmp2156:
    0000042b: 	movq	-0x20(%rax), %rbp
    0000042f: 	callq	clock@PLT # Offset: 1071
    00000434: 	movq	%rax, end_time(%rip)
    0000043b: 	movq	0x18(%rsp), %rdx
    00000440: 	subq	%fs:0x28, %rdx
    00000449: 	jne	.Ltmp2153 # Offset: 1097
    0000044f: 	subq	start_time(%rip), %rax
    00000456: 	pxor	%xmm0, %xmm0
    0000045a: 	movq	%rbp, %rdi
    0000045d: 	cvtsi2sd	%rax, %xmm0
    00000462: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000046a: 	addq	$0x28, %rsp
    0000046e: 	popq	%rbx
    0000046f: 	popq	%rbp
    00000470: 	popq	%r12
    00000472: 	popq	%r13
    00000474: 	popq	%r14
    00000476: 	popq	%r15
    00000478: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1144
.Ltmp2135:
    0000047d: 	xorl	%edx, %edx
    0000047f: 	xorl	%eax, %eax
    00000481: 	jmp	.Ltmp2154 # Offset: 1153
.Ltmp2150:
    00000486: 	movq	%rbx, %rdi
    00000489: 	leaq	0x10(%rsp), %rsi
    0000048e: 	xorl	%edx, %edx
    00000490: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1168
    00000495: 	movq	%rax, (%rbx)
    00000498: 	movq	%rax, %rdi
    0000049b: 	movq	0x10(%rsp), %rax
    000004a0: 	movq	%rax, 0x10(%rbx)
.Ltmp2157:
    000004a4: 	movq	%r12, %rdx
    000004a7: 	movq	%rbp, %rsi
    000004aa: 	callq	memcpy@PLT # Offset: 1194
    000004af: 	movq	0x10(%rsp), %r12
    000004b4: 	movq	(%rbx), %rdi
    000004b7: 	jmp	.Ltmp2155 # Offset: 1207
.Ltmp2147:
    000004bc: 	movq	0x8(%rsp), %rsi
    000004c1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000004c8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1224
    000004cd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004d4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000004db: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004e2: 	jne	.Ltmp2156 # Offset: 1250
.Ltmp2152:
    000004e8: 	movq	-0x8(%rdx), %rax
    000004ec: 	addq	$0x200, %rax
    000004f2: 	jmp	.Ltmp2156 # Offset: 1266
.Ltmp2151:
    000004f7: 	testq	%r12, %r12
    000004fa: 	je	.Ltmp2155 # Offset: 1274
    00000500: 	jmp	.Ltmp2157 # Offset: 1280
.Ltmp2153:
    00000502: 	callq	__stack_chk_fail@PLT # Offset: 1282
.Ltmp2149:
    00000507: 	leaq	DATAat0x57008(%rip), %rdi
    0000050e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1294
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs14and_remainder2IsLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs13and_remainderIsLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 162
  State       : disassembled
  Address     : 0x190d0
  Size        : 0x473
  MaxSize     : 0x480
  Offset      : 0x190d0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs13and_remainderIsLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0161:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp2158 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57eb0(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57ec0(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2171:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp2159 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2160 # Offset: 160
    000000a6: 	pxor	%xmm1, %xmm1
    000000aa: 	movq	%r14, %rax
    000000ad: 	movdqa	%xmm1, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp2161:
    000000b8: 	movdqu	(%rax), %xmm3
    000000bc: 	movdqu	(%rax), %xmm8
    000000c1: 	movdqa	%xmm4, %xmm2
    000000c5: 	addq	$0x10, %rax
    000000c9: 	pand	%xmm6, %xmm3
    000000cd: 	pcmpgtw	%xmm8, %xmm2
    000000d2: 	movdqa	%xmm3, %xmm0
    000000d6: 	pcmpeqw	%xmm4, %xmm0
    000000da: 	pcmpeqw	%xmm4, %xmm0
    000000de: 	pand	%xmm2, %xmm0
    000000e2: 	movdqa	%xmm3, %xmm2
    000000e6: 	paddw	%xmm5, %xmm2
    000000ea: 	pand	%xmm0, %xmm2
    000000ee: 	pandn	%xmm3, %xmm0
    000000f2: 	por	%xmm2, %xmm0
    000000f6: 	paddw	%xmm0, %xmm1
    000000fa: 	cmpq	%r15, %rax
    000000fd: 	jne	.Ltmp2161 # Offset: 253
    000000ff: 	movdqa	%xmm1, %xmm0
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddw	%xmm0, %xmm1
    0000010c: 	movdqa	%xmm1, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddw	%xmm0, %xmm1
    00000119: 	movdqa	%xmm1, %xmm0
    0000011d: 	psrldq	$0x2, %xmm0
    00000122: 	paddw	%xmm0, %xmm1
    00000126: 	pextrw	$0x0, %xmm1, %eax
    0000012b: 	cmpl	%r13d, %ebx
    0000012e: 	je	.Ltmp2159 # Offset: 302
    00000134: 	movl	%ebx, %edx
.Ltmp2179:
    00000136: 	movslq	%edx, %rcx
    00000139: 	movzwl	(%r14,%rcx,2), %edi
    0000013e: 	leaq	(%rcx,%rcx), %rsi
    00000142: 	movl	%edi, %ecx
    00000144: 	andw	$0x3ff, %cx
    00000149: 	testw	%di, %di
    0000014c: 	jns	.Ltmp2162 # Offset: 332
    0000014e: 	testw	%cx, %cx
    00000151: 	leal	-0x400(%rcx), %edi
    00000157: 	setne	%r8b
    0000015b: 	testb	%r8b, %r8b
    0000015e: 	cmovnel	%edi, %ecx
.Ltmp2162:
    00000161: 	addl	%eax, %ecx
    00000163: 	leal	0x1(%rdx), %edi
    00000166: 	movl	%ecx, %eax
    00000168: 	cmpl	%edi, %r13d
    0000016b: 	jle	.Ltmp2159 # Offset: 363
    00000171: 	movzwl	0x2(%r14,%rsi), %edi
    00000177: 	movl	%edi, %eax
    00000179: 	andw	$0x3ff, %ax
    0000017d: 	je	.Ltmp2163 # Offset: 381
    0000017f: 	leal	-0x400(%rax), %r8d
    00000186: 	testw	%di, %di
    00000189: 	cmovsl	%r8d, %eax
.Ltmp2163:
    0000018d: 	addl	%eax, %ecx
    0000018f: 	leal	0x2(%rdx), %edi
    00000192: 	movl	%ecx, %eax
    00000194: 	cmpl	%edi, %r13d
    00000197: 	jle	.Ltmp2159 # Offset: 407
    0000019d: 	movzwl	0x4(%r14,%rsi), %edi
    000001a3: 	movl	%edi, %eax
    000001a5: 	andw	$0x3ff, %ax
    000001a9: 	testw	%di, %di
    000001ac: 	jns	.Ltmp2164 # Offset: 428
    000001ae: 	testw	%ax, %ax
    000001b1: 	leal	-0x400(%rax), %edi
    000001b7: 	setne	%r8b
    000001bb: 	testb	%r8b, %r8b
    000001be: 	cmovnel	%edi, %eax
.Ltmp2164:
    000001c1: 	addl	%eax, %ecx
    000001c3: 	leal	0x3(%rdx), %edi
    000001c6: 	movl	%ecx, %eax
    000001c8: 	cmpl	%edi, %r13d
    000001cb: 	jle	.Ltmp2159 # Offset: 459
    000001d1: 	movzwl	0x6(%r14,%rsi), %edi
    000001d7: 	movl	%edi, %eax
    000001d9: 	andw	$0x3ff, %ax
    000001dd: 	testw	%di, %di
    000001e0: 	jns	.Ltmp2165 # Offset: 480
    000001e2: 	testw	%ax, %ax
    000001e5: 	leal	-0x400(%rax), %edi
    000001eb: 	setne	%r8b
    000001ef: 	testb	%r8b, %r8b
    000001f2: 	cmovnel	%edi, %eax
.Ltmp2165:
    000001f5: 	addl	%eax, %ecx
    000001f7: 	leal	0x4(%rdx), %edi
    000001fa: 	movl	%ecx, %eax
    000001fc: 	cmpl	%edi, %r13d
    000001ff: 	jle	.Ltmp2159 # Offset: 511
    00000201: 	movzwl	0x8(%r14,%rsi), %edi
    00000207: 	movl	%edi, %eax
    00000209: 	andw	$0x3ff, %ax
    0000020d: 	testw	%di, %di
    00000210: 	jns	.Ltmp2166 # Offset: 528
    00000212: 	testw	%ax, %ax
    00000215: 	leal	-0x400(%rax), %edi
    0000021b: 	setne	%r8b
    0000021f: 	testb	%r8b, %r8b
    00000222: 	cmovnel	%edi, %eax
.Ltmp2166:
    00000225: 	addl	%eax, %ecx
    00000227: 	leal	0x5(%rdx), %edi
    0000022a: 	movl	%ecx, %eax
    0000022c: 	cmpl	%edi, %r13d
    0000022f: 	jle	.Ltmp2159 # Offset: 559
    00000231: 	movzwl	0xa(%r14,%rsi), %edi
    00000237: 	movl	%edi, %eax
    00000239: 	andw	$0x3ff, %ax
    0000023d: 	testw	%di, %di
    00000240: 	jns	.Ltmp2167 # Offset: 576
    00000242: 	testw	%ax, %ax
    00000245: 	leal	-0x400(%rax), %edi
    0000024b: 	setne	%r8b
    0000024f: 	testb	%r8b, %r8b
    00000252: 	cmovnel	%edi, %eax
.Ltmp2167:
    00000255: 	addl	%eax, %ecx
    00000257: 	addl	$0x6, %edx
    0000025a: 	movl	%ecx, %eax
    0000025c: 	cmpl	%edx, %r13d
    0000025f: 	jle	.Ltmp2159 # Offset: 607
    00000261: 	movzwl	0xc(%r14,%rsi), %edx
    00000267: 	movl	%edx, %eax
    00000269: 	andw	$0x3ff, %ax
    0000026d: 	je	.Ltmp2168 # Offset: 621
    0000026f: 	leal	-0x400(%rax), %esi
    00000275: 	testw	%dx, %dx
    00000278: 	cmovsl	%esi, %eax
.Ltmp2168:
    0000027b: 	addl	%ecx, %eax
.Ltmp2159:
    0000027d: 	cvttsd2si	%xmm7, %ecx
    00000281: 	movl	%ecx, %edx
    00000283: 	andw	$0x3ff, %dx
    00000288: 	testw	%cx, %cx
    0000028b: 	jns	.Ltmp2169 # Offset: 651
    0000028d: 	testw	%dx, %dx
    00000290: 	leal	-0x400(%rdx), %ecx
    00000296: 	setne	%sil
    0000029a: 	testb	%sil, %sil
    0000029d: 	cmovnel	%ecx, %edx
.Ltmp2169:
    000002a0: 	imulw	$0x1f40, %dx, %dx
    000002a5: 	cmpw	%ax, %dx
    000002a8: 	je	.Ltmp2170 # Offset: 680
    000002aa: 	movl	current_test(%rip), %edx
    000002b0: 	movq	%rbp, %rsi
    000002b3: 	movl	$0x1, %edi
    000002b8: 	xorl	%eax, %eax
    000002ba: 	addl	$0x1, %r12d
    000002be: 	callq	__printf_chk@PLT # Offset: 702
    000002c3: 	movl	iterations(%rip), %r9d
    000002ca: 	cmpl	%r9d, %r12d
    000002cd: 	jge	.Ltmp2158 # Offset: 717
    000002cf: 	movsd	init_value(%rip), %xmm7
    000002d7: 	movdqa	DATAat0x57eb0(%rip), %xmm6
    000002df: 	movdqa	DATAat0x57ec0(%rip), %xmm5
    000002e7: 	jmp	.Ltmp2171 # Offset: 743
    000002ec: 	nopl	(%rax) # Size: 4
.Ltmp2170:
    000002f0: 	addl	$0x1, %r12d
    000002f4: 	cmpl	%r9d, %r12d
    000002f7: 	jl	.Ltmp2171 # Offset: 759
.Ltmp2158:
    000002fd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000304: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000030b: 	subq	$0x20, %rax
    0000030f: 	cmpq	%rax, %rbx
    00000312: 	je	.Ltmp2172 # Offset: 786
    00000318: 	movq	0x8(%rsp), %rax
    0000031d: 	leaq	0x10(%rbx), %rdi
    00000321: 	movq	%rdi, (%rbx)
    00000324: 	movq	(%rax), %rbp
    00000327: 	movq	0x8(%rax), %r12
    0000032b: 	movq	%rbp, %rax
    0000032e: 	addq	%r12, %rax
    00000331: 	je	.Ltmp2173 # Offset: 817
    00000333: 	testq	%rbp, %rbp
    00000336: 	je	.Ltmp2174 # Offset: 822
.Ltmp2173:
    0000033c: 	movq	%r12, 0x10(%rsp)
    00000341: 	cmpq	$0xf, %r12
    00000345: 	ja	.Ltmp2175 # Offset: 837
    0000034b: 	cmpq	$0x1, %r12
    0000034f: 	jne	.Ltmp2176 # Offset: 847
    00000355: 	movzbl	(%rbp), %eax
    00000359: 	movb	%al, 0x10(%rbx)
.Ltmp2180:
    0000035c: 	movq	%r12, 0x8(%rbx)
    00000360: 	movb	$0x0, (%rdi,%r12)
    00000365: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000036c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000373: 	addq	$0x20, %rax
    00000377: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000037e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000385: 	je	.Ltmp2177 # Offset: 901
.Ltmp2181:
    0000038b: 	movq	-0x20(%rax), %rbp
    0000038f: 	callq	clock@PLT # Offset: 911
    00000394: 	movq	%rax, end_time(%rip)
    0000039b: 	movq	0x18(%rsp), %rdx
    000003a0: 	subq	%fs:0x28, %rdx
    000003a9: 	jne	.Ltmp2178 # Offset: 937
    000003af: 	subq	start_time(%rip), %rax
    000003b6: 	pxor	%xmm0, %xmm0
    000003ba: 	movq	%rbp, %rdi
    000003bd: 	cvtsi2sd	%rax, %xmm0
    000003c2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003ca: 	addq	$0x28, %rsp
    000003ce: 	popq	%rbx
    000003cf: 	popq	%rbp
    000003d0: 	popq	%r12
    000003d2: 	popq	%r13
    000003d4: 	popq	%r14
    000003d6: 	popq	%r15
    000003d8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 984
.Ltmp2160:
    000003dd: 	xorl	%edx, %edx
    000003df: 	xorl	%eax, %eax
    000003e1: 	jmp	.Ltmp2179 # Offset: 993
.Ltmp2175:
    000003e6: 	movq	%rbx, %rdi
    000003e9: 	leaq	0x10(%rsp), %rsi
    000003ee: 	xorl	%edx, %edx
    000003f0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1008
    000003f5: 	movq	%rax, (%rbx)
    000003f8: 	movq	%rax, %rdi
    000003fb: 	movq	0x10(%rsp), %rax
    00000400: 	movq	%rax, 0x10(%rbx)
.Ltmp2182:
    00000404: 	movq	%r12, %rdx
    00000407: 	movq	%rbp, %rsi
    0000040a: 	callq	memcpy@PLT # Offset: 1034
    0000040f: 	movq	0x10(%rsp), %r12
    00000414: 	movq	(%rbx), %rdi
    00000417: 	jmp	.Ltmp2180 # Offset: 1047
.Ltmp2172:
    0000041c: 	movq	0x8(%rsp), %rsi
    00000421: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000428: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1064
    0000042d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000434: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000043b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000442: 	jne	.Ltmp2181 # Offset: 1090
.Ltmp2177:
    00000448: 	movq	-0x8(%rdx), %rax
    0000044c: 	addq	$0x200, %rax
    00000452: 	jmp	.Ltmp2181 # Offset: 1106
.Ltmp2176:
    00000457: 	testq	%r12, %r12
    0000045a: 	je	.Ltmp2180 # Offset: 1114
    00000460: 	jmp	.Ltmp2182 # Offset: 1120
.Ltmp2178:
    00000462: 	callq	__stack_chk_fail@PLT # Offset: 1122
.Ltmp2174:
    00000467: 	leaq	DATAat0x57008(%rip), %rdi
    0000046e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1134
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs13and_remainderIsLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi13and_remainderIiLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 163
  State       : disassembled
  Address     : 0x19550
  Size        : 0x39b
  MaxSize     : 0x3a0
  Offset      : 0x19550
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi13and_remainderIiLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0162:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp2183 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57c20(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57e80(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp2192:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp2184 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2185 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp2186:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp2186 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp2184 # Offset: 288
.Ltmp2200:
    00000126: 	movslq	%edx, %rcx
    00000129: 	movl	(%r15,%rcx,4), %edi
    0000012d: 	leaq	(,%rcx,4), %r8
    00000135: 	movl	%edi, %ecx
    00000137: 	andl	$0x3ff, %ecx
    0000013d: 	testl	%edi, %edi
    0000013f: 	jns	.Ltmp2187 # Offset: 319
    00000141: 	testl	%ecx, %ecx
    00000143: 	leal	-0x400(%rcx), %edi
    00000149: 	setne	%r9b
    0000014d: 	testb	%r9b, %r9b
    00000150: 	cmovnel	%edi, %ecx
.Ltmp2187:
    00000153: 	addl	%ecx, %eax
    00000155: 	leal	0x1(%rdx), %ecx
    00000158: 	cmpl	%ecx, %r14d
    0000015b: 	jle	.Ltmp2184 # Offset: 347
    0000015d: 	movl	0x4(%r15,%r8), %edi
    00000162: 	movl	%edi, %ecx
    00000164: 	andl	$0x3ff, %ecx
    0000016a: 	testl	%edi, %edi
    0000016c: 	jns	.Ltmp2188 # Offset: 364
    0000016e: 	testl	%ecx, %ecx
    00000170: 	leal	-0x400(%rcx), %edi
    00000176: 	setne	%r9b
    0000017a: 	testb	%r9b, %r9b
    0000017d: 	cmovnel	%edi, %ecx
.Ltmp2188:
    00000180: 	addl	$0x2, %edx
    00000183: 	addl	%ecx, %eax
    00000185: 	cmpl	%edx, %r14d
    00000188: 	jle	.Ltmp2184 # Offset: 392
    0000018a: 	movl	0x8(%r15,%r8), %ecx
    0000018f: 	movl	%ecx, %edx
    00000191: 	andl	$0x3ff, %edx
    00000197: 	je	.Ltmp2189 # Offset: 407
    00000199: 	leal	-0x400(%rdx), %edi
    0000019f: 	testl	%ecx, %ecx
    000001a1: 	cmovsl	%edi, %edx
.Ltmp2189:
    000001a4: 	addl	%edx, %eax
.Ltmp2184:
    000001a6: 	cvttsd2si	%xmm7, %ecx
    000001aa: 	movl	%ecx, %edx
    000001ac: 	andl	$0x3ff, %edx
    000001b2: 	testl	%ecx, %ecx
    000001b4: 	jns	.Ltmp2190 # Offset: 436
    000001b6: 	testl	%edx, %edx
    000001b8: 	leal	-0x400(%rdx), %ecx
    000001be: 	setne	%dil
    000001c2: 	testb	%dil, %dil
    000001c5: 	cmovnel	%ecx, %edx
.Ltmp2190:
    000001c8: 	imull	$0x1f40, %edx, %edx
    000001ce: 	cmpl	%eax, %edx
    000001d0: 	je	.Ltmp2191 # Offset: 464
    000001d2: 	movl	current_test(%rip), %edx
    000001d8: 	movq	%rbp, %rsi
    000001db: 	movl	$0x1, %edi
    000001e0: 	xorl	%eax, %eax
    000001e2: 	addl	$0x1, %r12d
    000001e6: 	callq	__printf_chk@PLT # Offset: 486
    000001eb: 	movl	iterations(%rip), %esi
    000001f1: 	cmpl	%esi, %r12d
    000001f4: 	jge	.Ltmp2183 # Offset: 500
    000001f6: 	movsd	init_value(%rip), %xmm7
    000001fe: 	movdqa	DATAat0x57c20(%rip), %xmm6
    00000206: 	movdqa	DATAat0x57e80(%rip), %xmm5
    0000020e: 	jmp	.Ltmp2192 # Offset: 526
    00000213: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2191:
    00000218: 	addl	$0x1, %r12d
    0000021c: 	cmpl	%esi, %r12d
    0000021f: 	jl	.Ltmp2192 # Offset: 543
.Ltmp2183:
    00000225: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000022c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000233: 	subq	$0x20, %rax
    00000237: 	cmpq	%rax, %rbx
    0000023a: 	je	.Ltmp2193 # Offset: 570
    00000240: 	movq	0x8(%rsp), %rax
    00000245: 	leaq	0x10(%rbx), %rdi
    00000249: 	movq	%rdi, (%rbx)
    0000024c: 	movq	(%rax), %rbp
    0000024f: 	movq	0x8(%rax), %r12
    00000253: 	movq	%rbp, %rax
    00000256: 	addq	%r12, %rax
    00000259: 	je	.Ltmp2194 # Offset: 601
    0000025b: 	testq	%rbp, %rbp
    0000025e: 	je	.Ltmp2195 # Offset: 606
.Ltmp2194:
    00000264: 	movq	%r12, 0x10(%rsp)
    00000269: 	cmpq	$0xf, %r12
    0000026d: 	ja	.Ltmp2196 # Offset: 621
    00000273: 	cmpq	$0x1, %r12
    00000277: 	jne	.Ltmp2197 # Offset: 631
    0000027d: 	movzbl	(%rbp), %eax
    00000281: 	movb	%al, 0x10(%rbx)
.Ltmp2201:
    00000284: 	movq	%r12, 0x8(%rbx)
    00000288: 	movb	$0x0, (%rdi,%r12)
    0000028d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000294: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000029b: 	addq	$0x20, %rax
    0000029f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002a6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002ad: 	je	.Ltmp2198 # Offset: 685
.Ltmp2202:
    000002b3: 	movq	-0x20(%rax), %rbp
    000002b7: 	callq	clock@PLT # Offset: 695
    000002bc: 	movq	%rax, end_time(%rip)
    000002c3: 	movq	0x18(%rsp), %rdx
    000002c8: 	subq	%fs:0x28, %rdx
    000002d1: 	jne	.Ltmp2199 # Offset: 721
    000002d7: 	subq	start_time(%rip), %rax
    000002de: 	pxor	%xmm0, %xmm0
    000002e2: 	movq	%rbp, %rdi
    000002e5: 	cvtsi2sd	%rax, %xmm0
    000002ea: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002f2: 	addq	$0x28, %rsp
    000002f6: 	popq	%rbx
    000002f7: 	popq	%rbp
    000002f8: 	popq	%r12
    000002fa: 	popq	%r13
    000002fc: 	popq	%r14
    000002fe: 	popq	%r15
    00000300: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 768
.Ltmp2185:
    00000305: 	xorl	%edx, %edx
    00000307: 	xorl	%eax, %eax
    00000309: 	jmp	.Ltmp2200 # Offset: 777
.Ltmp2196:
    0000030e: 	movq	%rbx, %rdi
    00000311: 	leaq	0x10(%rsp), %rsi
    00000316: 	xorl	%edx, %edx
    00000318: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 792
    0000031d: 	movq	%rax, (%rbx)
    00000320: 	movq	%rax, %rdi
    00000323: 	movq	0x10(%rsp), %rax
    00000328: 	movq	%rax, 0x10(%rbx)
.Ltmp2203:
    0000032c: 	movq	%r12, %rdx
    0000032f: 	movq	%rbp, %rsi
    00000332: 	callq	memcpy@PLT # Offset: 818
    00000337: 	movq	0x10(%rsp), %r12
    0000033c: 	movq	(%rbx), %rdi
    0000033f: 	jmp	.Ltmp2201 # Offset: 831
.Ltmp2193:
    00000344: 	movq	0x8(%rsp), %rsi
    00000349: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000350: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 848
    00000355: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000035c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000363: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000036a: 	jne	.Ltmp2202 # Offset: 874
.Ltmp2198:
    00000370: 	movq	-0x8(%rdx), %rax
    00000374: 	addq	$0x200, %rax
    0000037a: 	jmp	.Ltmp2202 # Offset: 890
.Ltmp2197:
    0000037f: 	testq	%r12, %r12
    00000382: 	je	.Ltmp2201 # Offset: 898
    00000388: 	jmp	.Ltmp2203 # Offset: 904
.Ltmp2199:
    0000038a: 	callq	__stack_chk_fail@PLT # Offset: 906
.Ltmp2195:
    0000038f: 	leaq	DATAat0x57008(%rip), %rdi
    00000396: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 918
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi13and_remainderIiLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi13and_remainderIiLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 164
  State       : disassembled
  Address     : 0x198f0
  Size        : 0x383
  MaxSize     : 0x390
  Offset      : 0x198f0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi13and_remainderIiLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0163:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp2204 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57cf0(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57df0(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp2213:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp2205 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2206 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp2207:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp2207 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp2205 # Offset: 288
.Ltmp2221:
    00000122: 	movslq	%edx, %rcx
    00000125: 	movl	(%r15,%rcx,4), %edi
    00000129: 	leaq	(,%rcx,4), %r8
    00000131: 	movl	%edi, %ecx
    00000133: 	andl	$0x7f, %ecx
    00000136: 	testl	%edi, %edi
    00000138: 	jns	.Ltmp2208 # Offset: 312
    0000013a: 	testl	%ecx, %ecx
    0000013c: 	leal	-0x80(%rcx), %edi
    0000013f: 	setne	%r9b
    00000143: 	testb	%r9b, %r9b
    00000146: 	cmovnel	%edi, %ecx
.Ltmp2208:
    00000149: 	addl	%ecx, %eax
    0000014b: 	leal	0x1(%rdx), %ecx
    0000014e: 	cmpl	%ecx, %r14d
    00000151: 	jle	.Ltmp2205 # Offset: 337
    00000153: 	movl	0x4(%r15,%r8), %edi
    00000158: 	movl	%edi, %ecx
    0000015a: 	andl	$0x7f, %ecx
    0000015d: 	testl	%edi, %edi
    0000015f: 	jns	.Ltmp2209 # Offset: 351
    00000161: 	testl	%ecx, %ecx
    00000163: 	leal	-0x80(%rcx), %edi
    00000166: 	setne	%r9b
    0000016a: 	testb	%r9b, %r9b
    0000016d: 	cmovnel	%edi, %ecx
.Ltmp2209:
    00000170: 	addl	$0x2, %edx
    00000173: 	addl	%ecx, %eax
    00000175: 	cmpl	%edx, %r14d
    00000178: 	jle	.Ltmp2205 # Offset: 376
    0000017a: 	movl	0x8(%r15,%r8), %ecx
    0000017f: 	movl	%ecx, %edx
    00000181: 	andl	$0x7f, %edx
    00000184: 	je	.Ltmp2210 # Offset: 388
    00000186: 	leal	-0x80(%rdx), %edi
    00000189: 	testl	%ecx, %ecx
    0000018b: 	cmovsl	%edi, %edx
.Ltmp2210:
    0000018e: 	addl	%edx, %eax
.Ltmp2205:
    00000190: 	cvttsd2si	%xmm7, %ecx
    00000194: 	movl	%ecx, %edx
    00000196: 	andl	$0x7f, %edx
    00000199: 	testl	%ecx, %ecx
    0000019b: 	jns	.Ltmp2211 # Offset: 411
    0000019d: 	testl	%edx, %edx
    0000019f: 	leal	-0x80(%rdx), %ecx
    000001a2: 	setne	%dil
    000001a6: 	testb	%dil, %dil
    000001a9: 	cmovnel	%ecx, %edx
.Ltmp2211:
    000001ac: 	imull	$0x1f40, %edx, %edx
    000001b2: 	cmpl	%eax, %edx
    000001b4: 	je	.Ltmp2212 # Offset: 436
    000001b6: 	movl	current_test(%rip), %edx
    000001bc: 	movq	%rbp, %rsi
    000001bf: 	movl	$0x1, %edi
    000001c4: 	xorl	%eax, %eax
    000001c6: 	addl	$0x1, %r12d
    000001ca: 	callq	__printf_chk@PLT # Offset: 458
    000001cf: 	movl	iterations(%rip), %esi
    000001d5: 	cmpl	%esi, %r12d
    000001d8: 	jge	.Ltmp2204 # Offset: 472
    000001da: 	movsd	init_value(%rip), %xmm7
    000001e2: 	movdqa	DATAat0x57cf0(%rip), %xmm6
    000001ea: 	movdqa	DATAat0x57df0(%rip), %xmm5
    000001f2: 	jmp	.Ltmp2213 # Offset: 498
    000001f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2212:
    00000200: 	addl	$0x1, %r12d
    00000204: 	cmpl	%esi, %r12d
    00000207: 	jl	.Ltmp2213 # Offset: 519
.Ltmp2204:
    0000020d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000214: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000021b: 	subq	$0x20, %rax
    0000021f: 	cmpq	%rax, %rbx
    00000222: 	je	.Ltmp2214 # Offset: 546
    00000228: 	movq	0x8(%rsp), %rax
    0000022d: 	leaq	0x10(%rbx), %rdi
    00000231: 	movq	%rdi, (%rbx)
    00000234: 	movq	(%rax), %rbp
    00000237: 	movq	0x8(%rax), %r12
    0000023b: 	movq	%rbp, %rax
    0000023e: 	addq	%r12, %rax
    00000241: 	je	.Ltmp2215 # Offset: 577
    00000243: 	testq	%rbp, %rbp
    00000246: 	je	.Ltmp2216 # Offset: 582
.Ltmp2215:
    0000024c: 	movq	%r12, 0x10(%rsp)
    00000251: 	cmpq	$0xf, %r12
    00000255: 	ja	.Ltmp2217 # Offset: 597
    0000025b: 	cmpq	$0x1, %r12
    0000025f: 	jne	.Ltmp2218 # Offset: 607
    00000265: 	movzbl	(%rbp), %eax
    00000269: 	movb	%al, 0x10(%rbx)
.Ltmp2222:
    0000026c: 	movq	%r12, 0x8(%rbx)
    00000270: 	movb	$0x0, (%rdi,%r12)
    00000275: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000027c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000283: 	addq	$0x20, %rax
    00000287: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000295: 	je	.Ltmp2219 # Offset: 661
.Ltmp2223:
    0000029b: 	movq	-0x20(%rax), %rbp
    0000029f: 	callq	clock@PLT # Offset: 671
    000002a4: 	movq	%rax, end_time(%rip)
    000002ab: 	movq	0x18(%rsp), %rdx
    000002b0: 	subq	%fs:0x28, %rdx
    000002b9: 	jne	.Ltmp2220 # Offset: 697
    000002bf: 	subq	start_time(%rip), %rax
    000002c6: 	pxor	%xmm0, %xmm0
    000002ca: 	movq	%rbp, %rdi
    000002cd: 	cvtsi2sd	%rax, %xmm0
    000002d2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002da: 	addq	$0x28, %rsp
    000002de: 	popq	%rbx
    000002df: 	popq	%rbp
    000002e0: 	popq	%r12
    000002e2: 	popq	%r13
    000002e4: 	popq	%r14
    000002e6: 	popq	%r15
    000002e8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 744
.Ltmp2206:
    000002ed: 	xorl	%edx, %edx
    000002ef: 	xorl	%eax, %eax
    000002f1: 	jmp	.Ltmp2221 # Offset: 753
.Ltmp2217:
    000002f6: 	movq	%rbx, %rdi
    000002f9: 	leaq	0x10(%rsp), %rsi
    000002fe: 	xorl	%edx, %edx
    00000300: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 768
    00000305: 	movq	%rax, (%rbx)
    00000308: 	movq	%rax, %rdi
    0000030b: 	movq	0x10(%rsp), %rax
    00000310: 	movq	%rax, 0x10(%rbx)
.Ltmp2224:
    00000314: 	movq	%r12, %rdx
    00000317: 	movq	%rbp, %rsi
    0000031a: 	callq	memcpy@PLT # Offset: 794
    0000031f: 	movq	0x10(%rsp), %r12
    00000324: 	movq	(%rbx), %rdi
    00000327: 	jmp	.Ltmp2222 # Offset: 807
.Ltmp2214:
    0000032c: 	movq	0x8(%rsp), %rsi
    00000331: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000338: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 824
    0000033d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000344: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000352: 	jne	.Ltmp2223 # Offset: 850
.Ltmp2219:
    00000358: 	movq	-0x8(%rdx), %rax
    0000035c: 	addq	$0x200, %rax
    00000362: 	jmp	.Ltmp2223 # Offset: 866
.Ltmp2218:
    00000367: 	testq	%r12, %r12
    0000036a: 	je	.Ltmp2222 # Offset: 874
    00000370: 	jmp	.Ltmp2224 # Offset: 880
.Ltmp2220:
    00000372: 	callq	__stack_chk_fail@PLT # Offset: 882
.Ltmp2216:
    00000377: 	leaq	DATAat0x57008(%rip), %rdi
    0000037e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 894
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi13and_remainderIiLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs14and_remainder2IsLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 165
  State       : disassembled
  Address     : 0x19c80
  Size        : 0x4f3
  MaxSize     : 0x500
  Offset      : 0x19c80
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs14and_remainder2IsLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0164:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp2225 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57c90(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57dd0(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2238:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp2226 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2227 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r14, %rax
    000000ad: 	pxor	%xmm2, %xmm2
    000000b1: 	movdqa	%xmm3, %xmm4
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp2228:
    000000b8: 	movdqu	(%rax), %xmm8
    000000bd: 	movdqa	%xmm4, %xmm0
    000000c1: 	movdqu	(%rax), %xmm12
    000000c6: 	movdqa	%xmm4, %xmm11
    000000cb: 	addq	$0x10, %rax
    000000cf: 	pand	%xmm6, %xmm8
    000000d4: 	pcmpgtw	%xmm8, %xmm0
    000000d9: 	movdqa	%xmm8, %xmm9
    000000de: 	punpcklwd	%xmm0, %xmm9
    000000e3: 	punpckhwd	%xmm0, %xmm8
    000000e8: 	movdqa	%xmm8, %xmm1
    000000ed: 	movdqa	%xmm9, %xmm0
    000000f2: 	pcmpeqd	%xmm2, %xmm0
    000000f6: 	pcmpeqd	%xmm2, %xmm1
    000000fa: 	pcmpeqd	%xmm2, %xmm0
    000000fe: 	pcmpeqd	%xmm2, %xmm1
    00000102: 	movdqa	%xmm0, %xmm10
    00000107: 	punpcklwd	%xmm1, %xmm0
    0000010b: 	punpckhwd	%xmm1, %xmm10
    00000110: 	movdqa	%xmm0, %xmm1
    00000114: 	punpckhwd	%xmm10, %xmm1
    00000119: 	punpcklwd	%xmm10, %xmm0
    0000011e: 	movdqa	%xmm5, %xmm10
    00000123: 	punpcklwd	%xmm1, %xmm0
    00000127: 	movdqa	%xmm4, %xmm1
    0000012b: 	paddd	%xmm9, %xmm10
    00000130: 	pcmpgtw	%xmm12, %xmm1
    00000135: 	pand	%xmm1, %xmm0
    00000139: 	pcmpgtw	%xmm0, %xmm11
    0000013e: 	movdqa	%xmm0, %xmm1
    00000142: 	punpcklwd	%xmm11, %xmm1
    00000147: 	punpckhwd	%xmm11, %xmm0
    0000014c: 	pand	%xmm1, %xmm10
    00000151: 	pandn	%xmm9, %xmm1
    00000156: 	movdqa	%xmm5, %xmm9
    0000015b: 	paddd	%xmm8, %xmm9
    00000160: 	por	%xmm10, %xmm1
    00000165: 	pand	%xmm0, %xmm9
    0000016a: 	pandn	%xmm8, %xmm0
    0000016f: 	movdqa	%xmm1, %xmm8
    00000174: 	por	%xmm9, %xmm0
    00000179: 	punpcklwd	%xmm0, %xmm1
    0000017d: 	punpckhwd	%xmm0, %xmm8
    00000182: 	movdqa	%xmm1, %xmm0
    00000186: 	punpcklwd	%xmm8, %xmm1
    0000018b: 	punpckhwd	%xmm8, %xmm0
    00000190: 	punpcklwd	%xmm0, %xmm1
    00000194: 	paddw	%xmm1, %xmm3
    00000198: 	cmpq	%r15, %rax
    0000019b: 	jne	.Ltmp2228 # Offset: 411
    000001a1: 	movdqa	%xmm3, %xmm0
    000001a5: 	psrldq	$0x8, %xmm0
    000001aa: 	paddw	%xmm0, %xmm3
    000001ae: 	movdqa	%xmm3, %xmm0
    000001b2: 	psrldq	$0x4, %xmm0
    000001b7: 	paddw	%xmm0, %xmm3
    000001bb: 	movdqa	%xmm3, %xmm0
    000001bf: 	psrldq	$0x2, %xmm0
    000001c4: 	paddw	%xmm0, %xmm3
    000001c8: 	pextrw	$0x0, %xmm3, %eax
    000001cd: 	cmpl	%r13d, %ebx
    000001d0: 	je	.Ltmp2226 # Offset: 464
    000001d6: 	movl	%ebx, %edx
.Ltmp2246:
    000001d8: 	movslq	%edx, %rcx
    000001db: 	movzwl	(%r14,%rcx,2), %edi
    000001e0: 	leaq	(%rcx,%rcx), %rsi
    000001e4: 	movl	%edi, %ecx
    000001e6: 	andl	$0xf, %ecx
    000001e9: 	testw	%di, %di
    000001ec: 	jns	.Ltmp2229 # Offset: 492
    000001ee: 	testl	%ecx, %ecx
    000001f0: 	leal	-0x10(%rcx), %edi
    000001f3: 	setne	%r8b
    000001f7: 	testb	%r8b, %r8b
    000001fa: 	cmovnel	%edi, %ecx
.Ltmp2229:
    000001fd: 	addl	%eax, %ecx
    000001ff: 	leal	0x1(%rdx), %edi
    00000202: 	movl	%ecx, %eax
    00000204: 	cmpl	%edi, %r13d
    00000207: 	jle	.Ltmp2226 # Offset: 519
    0000020d: 	movzwl	0x2(%r14,%rsi), %edi
    00000213: 	movl	%edi, %eax
    00000215: 	andl	$0xf, %eax
    00000218: 	je	.Ltmp2230 # Offset: 536
    0000021a: 	leal	-0x10(%rax), %r8d
    0000021e: 	testw	%di, %di
    00000221: 	cmovsl	%r8d, %eax
.Ltmp2230:
    00000225: 	addl	%eax, %ecx
    00000227: 	leal	0x2(%rdx), %edi
    0000022a: 	movl	%ecx, %eax
    0000022c: 	cmpl	%edi, %r13d
    0000022f: 	jle	.Ltmp2226 # Offset: 559
    00000235: 	movzwl	0x4(%r14,%rsi), %edi
    0000023b: 	movl	%edi, %eax
    0000023d: 	andl	$0xf, %eax
    00000240: 	testw	%di, %di
    00000243: 	jns	.Ltmp2231 # Offset: 579
    00000245: 	testl	%eax, %eax
    00000247: 	leal	-0x10(%rax), %edi
    0000024a: 	setne	%r8b
    0000024e: 	testb	%r8b, %r8b
    00000251: 	cmovnel	%edi, %eax
.Ltmp2231:
    00000254: 	addl	%eax, %ecx
    00000256: 	leal	0x3(%rdx), %edi
    00000259: 	movl	%ecx, %eax
    0000025b: 	cmpl	%edi, %r13d
    0000025e: 	jle	.Ltmp2226 # Offset: 606
    00000264: 	movzwl	0x6(%r14,%rsi), %edi
    0000026a: 	movl	%edi, %eax
    0000026c: 	andl	$0xf, %eax
    0000026f: 	testw	%di, %di
    00000272: 	jns	.Ltmp2232 # Offset: 626
    00000274: 	testl	%eax, %eax
    00000276: 	leal	-0x10(%rax), %edi
    00000279: 	setne	%r8b
    0000027d: 	testb	%r8b, %r8b
    00000280: 	cmovnel	%edi, %eax
.Ltmp2232:
    00000283: 	addl	%eax, %ecx
    00000285: 	leal	0x4(%rdx), %edi
    00000288: 	movl	%ecx, %eax
    0000028a: 	cmpl	%edi, %r13d
    0000028d: 	jle	.Ltmp2226 # Offset: 653
    0000028f: 	movzwl	0x8(%r14,%rsi), %edi
    00000295: 	movl	%edi, %eax
    00000297: 	andl	$0xf, %eax
    0000029a: 	testw	%di, %di
    0000029d: 	jns	.Ltmp2233 # Offset: 669
    0000029f: 	testl	%eax, %eax
    000002a1: 	leal	-0x10(%rax), %edi
    000002a4: 	setne	%r8b
    000002a8: 	testb	%r8b, %r8b
    000002ab: 	cmovnel	%edi, %eax
.Ltmp2233:
    000002ae: 	addl	%eax, %ecx
    000002b0: 	leal	0x5(%rdx), %edi
    000002b3: 	movl	%ecx, %eax
    000002b5: 	cmpl	%edi, %r13d
    000002b8: 	jle	.Ltmp2226 # Offset: 696
    000002ba: 	movzwl	0xa(%r14,%rsi), %edi
    000002c0: 	movl	%edi, %eax
    000002c2: 	andl	$0xf, %eax
    000002c5: 	testw	%di, %di
    000002c8: 	jns	.Ltmp2234 # Offset: 712
    000002ca: 	testl	%eax, %eax
    000002cc: 	leal	-0x10(%rax), %edi
    000002cf: 	setne	%r8b
    000002d3: 	testb	%r8b, %r8b
    000002d6: 	cmovnel	%edi, %eax
.Ltmp2234:
    000002d9: 	addl	%eax, %ecx
    000002db: 	addl	$0x6, %edx
    000002de: 	movl	%ecx, %eax
    000002e0: 	cmpl	%edx, %r13d
    000002e3: 	jle	.Ltmp2226 # Offset: 739
    000002e5: 	movzwl	0xc(%r14,%rsi), %edx
    000002eb: 	movl	%edx, %eax
    000002ed: 	andl	$0xf, %eax
    000002f0: 	je	.Ltmp2235 # Offset: 752
    000002f2: 	leal	-0x10(%rax), %esi
    000002f5: 	testw	%dx, %dx
    000002f8: 	cmovsl	%esi, %eax
.Ltmp2235:
    000002fb: 	addl	%ecx, %eax
.Ltmp2226:
    000002fd: 	cvttsd2si	%xmm7, %ecx
    00000301: 	movl	%ecx, %edx
    00000303: 	andl	$0xf, %edx
    00000306: 	testw	%cx, %cx
    00000309: 	jns	.Ltmp2236 # Offset: 777
    0000030b: 	testl	%edx, %edx
    0000030d: 	leal	-0x10(%rdx), %ecx
    00000310: 	setne	%sil
    00000314: 	testb	%sil, %sil
    00000317: 	cmovnel	%ecx, %edx
.Ltmp2236:
    0000031a: 	imulw	$0x1f40, %dx, %dx
    0000031f: 	cmpw	%ax, %dx
    00000322: 	je	.Ltmp2237 # Offset: 802
    00000324: 	movl	current_test(%rip), %edx
    0000032a: 	movq	%rbp, %rsi
    0000032d: 	movl	$0x1, %edi
    00000332: 	xorl	%eax, %eax
    00000334: 	addl	$0x1, %r12d
    00000338: 	callq	__printf_chk@PLT # Offset: 824
    0000033d: 	movl	iterations(%rip), %r9d
    00000344: 	cmpl	%r9d, %r12d
    00000347: 	jge	.Ltmp2225 # Offset: 839
    00000349: 	movsd	init_value(%rip), %xmm7
    00000351: 	movdqa	DATAat0x57c90(%rip), %xmm6
    00000359: 	movdqa	DATAat0x57dd0(%rip), %xmm5
    00000361: 	jmp	.Ltmp2238 # Offset: 865
    00000366: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2237:
    00000370: 	addl	$0x1, %r12d
    00000374: 	cmpl	%r9d, %r12d
    00000377: 	jl	.Ltmp2238 # Offset: 887
.Ltmp2225:
    0000037d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000384: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000038b: 	subq	$0x20, %rax
    0000038f: 	cmpq	%rax, %rbx
    00000392: 	je	.Ltmp2239 # Offset: 914
    00000398: 	movq	0x8(%rsp), %rax
    0000039d: 	leaq	0x10(%rbx), %rdi
    000003a1: 	movq	%rdi, (%rbx)
    000003a4: 	movq	(%rax), %rbp
    000003a7: 	movq	0x8(%rax), %r12
    000003ab: 	movq	%rbp, %rax
    000003ae: 	addq	%r12, %rax
    000003b1: 	je	.Ltmp2240 # Offset: 945
    000003b3: 	testq	%rbp, %rbp
    000003b6: 	je	.Ltmp2241 # Offset: 950
.Ltmp2240:
    000003bc: 	movq	%r12, 0x10(%rsp)
    000003c1: 	cmpq	$0xf, %r12
    000003c5: 	ja	.Ltmp2242 # Offset: 965
    000003cb: 	cmpq	$0x1, %r12
    000003cf: 	jne	.Ltmp2243 # Offset: 975
    000003d5: 	movzbl	(%rbp), %eax
    000003d9: 	movb	%al, 0x10(%rbx)
.Ltmp2247:
    000003dc: 	movq	%r12, 0x8(%rbx)
    000003e0: 	movb	$0x0, (%rdi,%r12)
    000003e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003f3: 	addq	$0x20, %rax
    000003f7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003fe: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000405: 	je	.Ltmp2244 # Offset: 1029
.Ltmp2248:
    0000040b: 	movq	-0x20(%rax), %rbp
    0000040f: 	callq	clock@PLT # Offset: 1039
    00000414: 	movq	%rax, end_time(%rip)
    0000041b: 	movq	0x18(%rsp), %rdx
    00000420: 	subq	%fs:0x28, %rdx
    00000429: 	jne	.Ltmp2245 # Offset: 1065
    0000042f: 	subq	start_time(%rip), %rax
    00000436: 	pxor	%xmm0, %xmm0
    0000043a: 	movq	%rbp, %rdi
    0000043d: 	cvtsi2sd	%rax, %xmm0
    00000442: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000044a: 	addq	$0x28, %rsp
    0000044e: 	popq	%rbx
    0000044f: 	popq	%rbp
    00000450: 	popq	%r12
    00000452: 	popq	%r13
    00000454: 	popq	%r14
    00000456: 	popq	%r15
    00000458: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1112
.Ltmp2227:
    0000045d: 	xorl	%edx, %edx
    0000045f: 	xorl	%eax, %eax
    00000461: 	jmp	.Ltmp2246 # Offset: 1121
.Ltmp2242:
    00000466: 	movq	%rbx, %rdi
    00000469: 	leaq	0x10(%rsp), %rsi
    0000046e: 	xorl	%edx, %edx
    00000470: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1136
    00000475: 	movq	%rax, (%rbx)
    00000478: 	movq	%rax, %rdi
    0000047b: 	movq	0x10(%rsp), %rax
    00000480: 	movq	%rax, 0x10(%rbx)
.Ltmp2249:
    00000484: 	movq	%r12, %rdx
    00000487: 	movq	%rbp, %rsi
    0000048a: 	callq	memcpy@PLT # Offset: 1162
    0000048f: 	movq	0x10(%rsp), %r12
    00000494: 	movq	(%rbx), %rdi
    00000497: 	jmp	.Ltmp2247 # Offset: 1175
.Ltmp2239:
    0000049c: 	movq	0x8(%rsp), %rsi
    000004a1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000004a8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1192
    000004ad: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004b4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000004bb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004c2: 	jne	.Ltmp2248 # Offset: 1218
.Ltmp2244:
    000004c8: 	movq	-0x8(%rdx), %rax
    000004cc: 	addq	$0x200, %rax
    000004d2: 	jmp	.Ltmp2248 # Offset: 1234
.Ltmp2243:
    000004d7: 	testq	%r12, %r12
    000004da: 	je	.Ltmp2247 # Offset: 1242
    000004e0: 	jmp	.Ltmp2249 # Offset: 1248
.Ltmp2245:
    000004e2: 	callq	__stack_chk_fail@PLT # Offset: 1250
.Ltmp2241:
    000004e7: 	leaq	DATAat0x57008(%rip), %rdi
    000004ee: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1262
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs14and_remainder2IsLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl14and_remainder2IlLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 166
  State       : disassembled
  Address     : 0x1a180
  Size        : 0x270
  MaxSize     : 0x270
  Offset      : 0x1a180
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl14and_remainder2IlLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0165:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp2250 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2256:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp2251 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2253:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0x3f, %eax
    00000081: 	je	.Ltmp2252 # Offset: 129
    00000083: 	leaq	-0x40(%rax), %rdi
    00000087: 	testq	%rcx, %rcx
    0000008a: 	cmovsq	%rdi, %rax
.Ltmp2252:
    0000008e: 	addq	$0x8, %rdx
    00000092: 	addq	%rax, %rsi
    00000095: 	cmpq	%rdx, %r13
    00000098: 	jne	.Ltmp2253 # Offset: 152
.Ltmp2251:
    0000009a: 	cvttsd2si	%xmm0, %rdx
    0000009f: 	movq	%rdx, %rax
    000000a2: 	andl	$0x3f, %eax
    000000a5: 	testq	%rdx, %rdx
    000000a8: 	jns	.Ltmp2254 # Offset: 168
    000000aa: 	testq	%rax, %rax
    000000ad: 	leaq	-0x40(%rax), %rdx
    000000b1: 	setne	%cl
    000000b4: 	testb	%cl, %cl
    000000b6: 	cmovneq	%rdx, %rax
.Ltmp2254:
    000000ba: 	imulq	$0x1f40, %rax, %rax
    000000c1: 	cmpq	%rsi, %rax
    000000c4: 	je	.Ltmp2255 # Offset: 196
    000000c6: 	movl	current_test(%rip), %edx
    000000cc: 	movq	%rbp, %rsi
    000000cf: 	movl	$0x1, %edi
    000000d4: 	xorl	%eax, %eax
    000000d6: 	addl	$0x1, %r14d
    000000da: 	callq	__printf_chk@PLT # Offset: 218
    000000df: 	movl	iterations(%rip), %r8d
    000000e6: 	cmpl	%r14d, %r8d
    000000e9: 	jle	.Ltmp2250 # Offset: 233
    000000eb: 	movsd	init_value(%rip), %xmm0
    000000f3: 	jmp	.Ltmp2256 # Offset: 243
    000000f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2255:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%r8d, %r14d
    00000107: 	jl	.Ltmp2256 # Offset: 263
.Ltmp2250:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp2257 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	%rdi, (%rbx)
    0000012f: 	movq	(%r12), %rbp
    00000133: 	movq	0x8(%r12), %r12
    00000138: 	movq	%rbp, %rax
    0000013b: 	addq	%r12, %rax
    0000013e: 	je	.Ltmp2258 # Offset: 318
    00000140: 	testq	%rbp, %rbp
    00000143: 	je	.Ltmp2259 # Offset: 323
.Ltmp2258:
    00000149: 	movq	%r12, (%rsp)
    0000014d: 	cmpq	$0xf, %r12
    00000151: 	ja	.Ltmp2260 # Offset: 337
    00000157: 	cmpq	$0x1, %r12
    0000015b: 	jne	.Ltmp2261 # Offset: 347
    00000161: 	movzbl	(%rbp), %eax
    00000165: 	movb	%al, 0x10(%rbx)
.Ltmp2264:
    00000168: 	movq	%r12, 0x8(%rbx)
    0000016c: 	movb	$0x0, (%rdi,%r12)
    00000171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000178: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017f: 	addq	$0x20, %rax
    00000183: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000018a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000191: 	je	.Ltmp2262 # Offset: 401
.Ltmp2265:
    00000197: 	movq	-0x20(%rax), %rbp
    0000019b: 	callq	clock@PLT # Offset: 411
    000001a0: 	movq	%rax, end_time(%rip)
    000001a7: 	movq	0x8(%rsp), %rdx
    000001ac: 	subq	%fs:0x28, %rdx
    000001b5: 	jne	.Ltmp2263 # Offset: 437
    000001bb: 	subq	start_time(%rip), %rax
    000001c2: 	pxor	%xmm0, %xmm0
    000001c6: 	movq	%rbp, %rdi
    000001c9: 	cvtsi2sd	%rax, %xmm0
    000001ce: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d6: 	addq	$0x18, %rsp
    000001da: 	popq	%rbx
    000001db: 	popq	%rbp
    000001dc: 	popq	%r12
    000001de: 	popq	%r13
    000001e0: 	popq	%r14
    000001e2: 	popq	%r15
    000001e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 484
.Ltmp2260:
    000001e9: 	movq	%rbx, %rdi
    000001ec: 	movq	%rsp, %rsi
    000001ef: 	xorl	%edx, %edx
    000001f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 497
    000001f6: 	movq	%rax, (%rbx)
    000001f9: 	movq	%rax, %rdi
    000001fc: 	movq	(%rsp), %rax
    00000200: 	movq	%rax, 0x10(%rbx)
.Ltmp2266:
    00000204: 	movq	%r12, %rdx
    00000207: 	movq	%rbp, %rsi
    0000020a: 	callq	memcpy@PLT # Offset: 522
    0000020f: 	movq	(%rsp), %r12
    00000213: 	movq	(%rbx), %rdi
    00000216: 	jmp	.Ltmp2264 # Offset: 534
.Ltmp2257:
    0000021b: 	movq	%r12, %rsi
    0000021e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000225: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 549
    0000022a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000231: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000238: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023f: 	jne	.Ltmp2265 # Offset: 575
.Ltmp2262:
    00000245: 	movq	-0x8(%rdx), %rax
    00000249: 	addq	$0x200, %rax
    0000024f: 	jmp	.Ltmp2265 # Offset: 591
.Ltmp2261:
    00000254: 	testq	%r12, %r12
    00000257: 	je	.Ltmp2264 # Offset: 599
    0000025d: 	jmp	.Ltmp2266 # Offset: 605
.Ltmp2263:
    0000025f: 	callq	__stack_chk_fail@PLT # Offset: 607
.Ltmp2259:
    00000264: 	leaq	DATAat0x57008(%rip), %rdi
    0000026b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 619
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl14and_remainder2IlLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi13and_remainderIiLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 167
  State       : disassembled
  Address     : 0x1a3f0
  Size        : 0x38b
  MaxSize     : 0x390
  Offset      : 0x1a3f0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi13and_remainderIiLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0166:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp2267 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57ce0(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57e60(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp2276:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp2268 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2269 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp2270:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp2270 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp2268 # Offset: 288
.Ltmp2284:
    00000122: 	movslq	%edx, %rcx
    00000125: 	movl	(%r15,%rcx,4), %edi
    00000129: 	leaq	(,%rcx,4), %r8
    00000131: 	movzbl	%dil, %ecx
    00000135: 	testl	%edi, %edi
    00000137: 	jns	.Ltmp2271 # Offset: 311
    00000139: 	testl	%ecx, %ecx
    0000013b: 	leal	-0x100(%rcx), %edi
    00000141: 	setne	%r9b
    00000145: 	testb	%r9b, %r9b
    00000148: 	cmovnel	%edi, %ecx
.Ltmp2271:
    0000014b: 	addl	%ecx, %eax
    0000014d: 	leal	0x1(%rdx), %ecx
    00000150: 	cmpl	%ecx, %r14d
    00000153: 	jle	.Ltmp2268 # Offset: 339
    00000155: 	movl	0x4(%r15,%r8), %edi
    0000015a: 	movzbl	%dil, %ecx
    0000015e: 	testl	%edi, %edi
    00000160: 	jns	.Ltmp2272 # Offset: 352
    00000162: 	testl	%ecx, %ecx
    00000164: 	leal	-0x100(%rcx), %edi
    0000016a: 	setne	%r9b
    0000016e: 	testb	%r9b, %r9b
    00000171: 	cmovnel	%edi, %ecx
.Ltmp2272:
    00000174: 	addl	$0x2, %edx
    00000177: 	addl	%ecx, %eax
    00000179: 	cmpl	%edx, %r14d
    0000017c: 	jle	.Ltmp2268 # Offset: 380
    0000017e: 	movl	0x8(%r15,%r8), %ecx
    00000183: 	movl	%ecx, %edx
    00000185: 	andl	$0xff, %edx
    0000018b: 	je	.Ltmp2273 # Offset: 395
    0000018d: 	leal	-0x100(%rdx), %edi
    00000193: 	testl	%ecx, %ecx
    00000195: 	cmovsl	%edi, %edx
.Ltmp2273:
    00000198: 	addl	%edx, %eax
.Ltmp2268:
    0000019a: 	cvttsd2si	%xmm7, %ecx
    0000019e: 	movzbl	%cl, %edx
    000001a1: 	testl	%ecx, %ecx
    000001a3: 	jns	.Ltmp2274 # Offset: 419
    000001a5: 	testl	%edx, %edx
    000001a7: 	leal	-0x100(%rdx), %ecx
    000001ad: 	setne	%dil
    000001b1: 	testb	%dil, %dil
    000001b4: 	cmovnel	%ecx, %edx
.Ltmp2274:
    000001b7: 	imull	$0x1f40, %edx, %edx
    000001bd: 	cmpl	%eax, %edx
    000001bf: 	je	.Ltmp2275 # Offset: 447
    000001c1: 	movl	current_test(%rip), %edx
    000001c7: 	movq	%rbp, %rsi
    000001ca: 	movl	$0x1, %edi
    000001cf: 	xorl	%eax, %eax
    000001d1: 	addl	$0x1, %r12d
    000001d5: 	callq	__printf_chk@PLT # Offset: 469
    000001da: 	movl	iterations(%rip), %esi
    000001e0: 	cmpl	%esi, %r12d
    000001e3: 	jge	.Ltmp2267 # Offset: 483
    000001e5: 	movsd	init_value(%rip), %xmm7
    000001ed: 	movdqa	DATAat0x57ce0(%rip), %xmm6
    000001f5: 	movdqa	DATAat0x57e60(%rip), %xmm5
    000001fd: 	jmp	.Ltmp2276 # Offset: 509
    00000202: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2275:
    00000208: 	addl	$0x1, %r12d
    0000020c: 	cmpl	%esi, %r12d
    0000020f: 	jl	.Ltmp2276 # Offset: 527
.Ltmp2267:
    00000215: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000021c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000223: 	subq	$0x20, %rax
    00000227: 	cmpq	%rax, %rbx
    0000022a: 	je	.Ltmp2277 # Offset: 554
    00000230: 	movq	0x8(%rsp), %rax
    00000235: 	leaq	0x10(%rbx), %rdi
    00000239: 	movq	%rdi, (%rbx)
    0000023c: 	movq	(%rax), %rbp
    0000023f: 	movq	0x8(%rax), %r12
    00000243: 	movq	%rbp, %rax
    00000246: 	addq	%r12, %rax
    00000249: 	je	.Ltmp2278 # Offset: 585
    0000024b: 	testq	%rbp, %rbp
    0000024e: 	je	.Ltmp2279 # Offset: 590
.Ltmp2278:
    00000254: 	movq	%r12, 0x10(%rsp)
    00000259: 	cmpq	$0xf, %r12
    0000025d: 	ja	.Ltmp2280 # Offset: 605
    00000263: 	cmpq	$0x1, %r12
    00000267: 	jne	.Ltmp2281 # Offset: 615
    0000026d: 	movzbl	(%rbp), %eax
    00000271: 	movb	%al, 0x10(%rbx)
.Ltmp2285:
    00000274: 	movq	%r12, 0x8(%rbx)
    00000278: 	movb	$0x0, (%rdi,%r12)
    0000027d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000284: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000028b: 	addq	$0x20, %rax
    0000028f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000296: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000029d: 	je	.Ltmp2282 # Offset: 669
.Ltmp2286:
    000002a3: 	movq	-0x20(%rax), %rbp
    000002a7: 	callq	clock@PLT # Offset: 679
    000002ac: 	movq	%rax, end_time(%rip)
    000002b3: 	movq	0x18(%rsp), %rdx
    000002b8: 	subq	%fs:0x28, %rdx
    000002c1: 	jne	.Ltmp2283 # Offset: 705
    000002c7: 	subq	start_time(%rip), %rax
    000002ce: 	pxor	%xmm0, %xmm0
    000002d2: 	movq	%rbp, %rdi
    000002d5: 	cvtsi2sd	%rax, %xmm0
    000002da: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002e2: 	addq	$0x28, %rsp
    000002e6: 	popq	%rbx
    000002e7: 	popq	%rbp
    000002e8: 	popq	%r12
    000002ea: 	popq	%r13
    000002ec: 	popq	%r14
    000002ee: 	popq	%r15
    000002f0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 752
.Ltmp2269:
    000002f5: 	xorl	%edx, %edx
    000002f7: 	xorl	%eax, %eax
    000002f9: 	jmp	.Ltmp2284 # Offset: 761
.Ltmp2280:
    000002fe: 	movq	%rbx, %rdi
    00000301: 	leaq	0x10(%rsp), %rsi
    00000306: 	xorl	%edx, %edx
    00000308: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 776
    0000030d: 	movq	%rax, (%rbx)
    00000310: 	movq	%rax, %rdi
    00000313: 	movq	0x10(%rsp), %rax
    00000318: 	movq	%rax, 0x10(%rbx)
.Ltmp2287:
    0000031c: 	movq	%r12, %rdx
    0000031f: 	movq	%rbp, %rsi
    00000322: 	callq	memcpy@PLT # Offset: 802
    00000327: 	movq	0x10(%rsp), %r12
    0000032c: 	movq	(%rbx), %rdi
    0000032f: 	jmp	.Ltmp2285 # Offset: 815
.Ltmp2277:
    00000334: 	movq	0x8(%rsp), %rsi
    00000339: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000340: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 832
    00000345: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000034c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000353: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000035a: 	jne	.Ltmp2286 # Offset: 858
.Ltmp2282:
    00000360: 	movq	-0x8(%rdx), %rax
    00000364: 	addq	$0x200, %rax
    0000036a: 	jmp	.Ltmp2286 # Offset: 874
.Ltmp2281:
    0000036f: 	testq	%r12, %r12
    00000372: 	je	.Ltmp2285 # Offset: 882
    00000378: 	jmp	.Ltmp2287 # Offset: 888
.Ltmp2283:
    0000037a: 	callq	__stack_chk_fail@PLT # Offset: 890
.Ltmp2279:
    0000037f: 	leaq	DATAat0x57008(%rip), %rdi
    00000386: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 902
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi13and_remainderIiLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs13and_remainderIsLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 168
  State       : disassembled
  Address     : 0x1a780
  Size        : 0x453
  MaxSize     : 0x460
  Offset      : 0x1a780
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs13and_remainderIsLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0167:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp2288 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57e90(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57ed0(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2301:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp2289 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2290 # Offset: 160
    000000a6: 	pxor	%xmm1, %xmm1
    000000aa: 	movq	%r14, %rax
    000000ad: 	movdqa	%xmm1, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp2291:
    000000b8: 	movdqu	(%rax), %xmm3
    000000bc: 	movdqu	(%rax), %xmm8
    000000c1: 	movdqa	%xmm4, %xmm2
    000000c5: 	addq	$0x10, %rax
    000000c9: 	pand	%xmm6, %xmm3
    000000cd: 	pcmpgtw	%xmm8, %xmm2
    000000d2: 	movdqa	%xmm3, %xmm0
    000000d6: 	pcmpeqw	%xmm4, %xmm0
    000000da: 	pcmpeqw	%xmm4, %xmm0
    000000de: 	pand	%xmm2, %xmm0
    000000e2: 	movdqa	%xmm3, %xmm2
    000000e6: 	paddw	%xmm5, %xmm2
    000000ea: 	pand	%xmm0, %xmm2
    000000ee: 	pandn	%xmm3, %xmm0
    000000f2: 	por	%xmm2, %xmm0
    000000f6: 	paddw	%xmm0, %xmm1
    000000fa: 	cmpq	%r15, %rax
    000000fd: 	jne	.Ltmp2291 # Offset: 253
    000000ff: 	movdqa	%xmm1, %xmm0
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddw	%xmm0, %xmm1
    0000010c: 	movdqa	%xmm1, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddw	%xmm0, %xmm1
    00000119: 	movdqa	%xmm1, %xmm0
    0000011d: 	psrldq	$0x2, %xmm0
    00000122: 	paddw	%xmm0, %xmm1
    00000126: 	pextrw	$0x0, %xmm1, %eax
    0000012b: 	cmpl	%r13d, %ebx
    0000012e: 	je	.Ltmp2289 # Offset: 302
    00000134: 	movl	%ebx, %edx
.Ltmp2309:
    00000136: 	movslq	%edx, %rcx
    00000139: 	movzwl	(%r14,%rcx,2), %edi
    0000013e: 	leaq	(%rcx,%rcx), %rsi
    00000142: 	movl	%edi, %ecx
    00000144: 	andl	$0x3, %ecx
    00000147: 	testw	%di, %di
    0000014a: 	jns	.Ltmp2292 # Offset: 330
    0000014c: 	testw	%cx, %cx
    0000014f: 	leal	-0x4(%rcx), %edi
    00000152: 	setne	%r8b
    00000156: 	testb	%r8b, %r8b
    00000159: 	cmovnel	%edi, %ecx
.Ltmp2292:
    0000015c: 	addl	%eax, %ecx
    0000015e: 	leal	0x1(%rdx), %edi
    00000161: 	movl	%ecx, %eax
    00000163: 	cmpl	%edi, %r13d
    00000166: 	jle	.Ltmp2289 # Offset: 358
    0000016c: 	movzwl	0x2(%r14,%rsi), %edi
    00000172: 	movl	%edi, %eax
    00000174: 	andw	$0x3, %ax
    00000178: 	je	.Ltmp2293 # Offset: 376
    0000017a: 	leal	-0x4(%rax), %r8d
    0000017e: 	testw	%di, %di
    00000181: 	cmovsl	%r8d, %eax
.Ltmp2293:
    00000185: 	addl	%eax, %ecx
    00000187: 	leal	0x2(%rdx), %edi
    0000018a: 	movl	%ecx, %eax
    0000018c: 	cmpl	%edi, %r13d
    0000018f: 	jle	.Ltmp2289 # Offset: 399
    00000195: 	movzwl	0x4(%r14,%rsi), %edi
    0000019b: 	movl	%edi, %eax
    0000019d: 	andl	$0x3, %eax
    000001a0: 	testw	%di, %di
    000001a3: 	jns	.Ltmp2294 # Offset: 419
    000001a5: 	testw	%ax, %ax
    000001a8: 	leal	-0x4(%rax), %edi
    000001ab: 	setne	%r8b
    000001af: 	testb	%r8b, %r8b
    000001b2: 	cmovnel	%edi, %eax
.Ltmp2294:
    000001b5: 	addl	%eax, %ecx
    000001b7: 	leal	0x3(%rdx), %edi
    000001ba: 	movl	%ecx, %eax
    000001bc: 	cmpl	%edi, %r13d
    000001bf: 	jle	.Ltmp2289 # Offset: 447
    000001c5: 	movzwl	0x6(%r14,%rsi), %edi
    000001cb: 	movl	%edi, %eax
    000001cd: 	andl	$0x3, %eax
    000001d0: 	testw	%di, %di
    000001d3: 	jns	.Ltmp2295 # Offset: 467
    000001d5: 	testw	%ax, %ax
    000001d8: 	leal	-0x4(%rax), %edi
    000001db: 	setne	%r8b
    000001df: 	testb	%r8b, %r8b
    000001e2: 	cmovnel	%edi, %eax
.Ltmp2295:
    000001e5: 	addl	%eax, %ecx
    000001e7: 	leal	0x4(%rdx), %edi
    000001ea: 	movl	%ecx, %eax
    000001ec: 	cmpl	%edi, %r13d
    000001ef: 	jle	.Ltmp2289 # Offset: 495
    000001f1: 	movzwl	0x8(%r14,%rsi), %edi
    000001f7: 	movl	%edi, %eax
    000001f9: 	andl	$0x3, %eax
    000001fc: 	testw	%di, %di
    000001ff: 	jns	.Ltmp2296 # Offset: 511
    00000201: 	testw	%ax, %ax
    00000204: 	leal	-0x4(%rax), %edi
    00000207: 	setne	%r8b
    0000020b: 	testb	%r8b, %r8b
    0000020e: 	cmovnel	%edi, %eax
.Ltmp2296:
    00000211: 	addl	%eax, %ecx
    00000213: 	leal	0x5(%rdx), %edi
    00000216: 	movl	%ecx, %eax
    00000218: 	cmpl	%edi, %r13d
    0000021b: 	jle	.Ltmp2289 # Offset: 539
    0000021d: 	movzwl	0xa(%r14,%rsi), %edi
    00000223: 	movl	%edi, %eax
    00000225: 	andl	$0x3, %eax
    00000228: 	testw	%di, %di
    0000022b: 	jns	.Ltmp2297 # Offset: 555
    0000022d: 	testw	%ax, %ax
    00000230: 	leal	-0x4(%rax), %edi
    00000233: 	setne	%r8b
    00000237: 	testb	%r8b, %r8b
    0000023a: 	cmovnel	%edi, %eax
.Ltmp2297:
    0000023d: 	addl	%eax, %ecx
    0000023f: 	addl	$0x6, %edx
    00000242: 	movl	%ecx, %eax
    00000244: 	cmpl	%edx, %r13d
    00000247: 	jle	.Ltmp2289 # Offset: 583
    00000249: 	movzwl	0xc(%r14,%rsi), %edx
    0000024f: 	movl	%edx, %eax
    00000251: 	andw	$0x3, %ax
    00000255: 	je	.Ltmp2298 # Offset: 597
    00000257: 	leal	-0x4(%rax), %esi
    0000025a: 	testw	%dx, %dx
    0000025d: 	cmovsl	%esi, %eax
.Ltmp2298:
    00000260: 	addl	%ecx, %eax
.Ltmp2289:
    00000262: 	cvttsd2si	%xmm7, %ecx
    00000266: 	movl	%ecx, %edx
    00000268: 	andl	$0x3, %edx
    0000026b: 	testw	%cx, %cx
    0000026e: 	jns	.Ltmp2299 # Offset: 622
    00000270: 	testw	%dx, %dx
    00000273: 	leal	-0x4(%rdx), %ecx
    00000276: 	setne	%sil
    0000027a: 	testb	%sil, %sil
    0000027d: 	cmovnel	%ecx, %edx
.Ltmp2299:
    00000280: 	imulw	$0x1f40, %dx, %dx
    00000285: 	cmpw	%ax, %dx
    00000288: 	je	.Ltmp2300 # Offset: 648
    0000028a: 	movl	current_test(%rip), %edx
    00000290: 	movq	%rbp, %rsi
    00000293: 	movl	$0x1, %edi
    00000298: 	xorl	%eax, %eax
    0000029a: 	addl	$0x1, %r12d
    0000029e: 	callq	__printf_chk@PLT # Offset: 670
    000002a3: 	movl	iterations(%rip), %r9d
    000002aa: 	cmpl	%r9d, %r12d
    000002ad: 	jge	.Ltmp2288 # Offset: 685
    000002af: 	movsd	init_value(%rip), %xmm7
    000002b7: 	movdqa	DATAat0x57e90(%rip), %xmm6
    000002bf: 	movdqa	DATAat0x57ed0(%rip), %xmm5
    000002c7: 	jmp	.Ltmp2301 # Offset: 711
    000002cc: 	nopl	(%rax) # Size: 4
.Ltmp2300:
    000002d0: 	addl	$0x1, %r12d
    000002d4: 	cmpl	%r9d, %r12d
    000002d7: 	jl	.Ltmp2301 # Offset: 727
.Ltmp2288:
    000002dd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002eb: 	subq	$0x20, %rax
    000002ef: 	cmpq	%rax, %rbx
    000002f2: 	je	.Ltmp2302 # Offset: 754
    000002f8: 	movq	0x8(%rsp), %rax
    000002fd: 	leaq	0x10(%rbx), %rdi
    00000301: 	movq	%rdi, (%rbx)
    00000304: 	movq	(%rax), %rbp
    00000307: 	movq	0x8(%rax), %r12
    0000030b: 	movq	%rbp, %rax
    0000030e: 	addq	%r12, %rax
    00000311: 	je	.Ltmp2303 # Offset: 785
    00000313: 	testq	%rbp, %rbp
    00000316: 	je	.Ltmp2304 # Offset: 790
.Ltmp2303:
    0000031c: 	movq	%r12, 0x10(%rsp)
    00000321: 	cmpq	$0xf, %r12
    00000325: 	ja	.Ltmp2305 # Offset: 805
    0000032b: 	cmpq	$0x1, %r12
    0000032f: 	jne	.Ltmp2306 # Offset: 815
    00000335: 	movzbl	(%rbp), %eax
    00000339: 	movb	%al, 0x10(%rbx)
.Ltmp2310:
    0000033c: 	movq	%r12, 0x8(%rbx)
    00000340: 	movb	$0x0, (%rdi,%r12)
    00000345: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000034c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000353: 	addq	$0x20, %rax
    00000357: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000035e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000365: 	je	.Ltmp2307 # Offset: 869
.Ltmp2311:
    0000036b: 	movq	-0x20(%rax), %rbp
    0000036f: 	callq	clock@PLT # Offset: 879
    00000374: 	movq	%rax, end_time(%rip)
    0000037b: 	movq	0x18(%rsp), %rdx
    00000380: 	subq	%fs:0x28, %rdx
    00000389: 	jne	.Ltmp2308 # Offset: 905
    0000038f: 	subq	start_time(%rip), %rax
    00000396: 	pxor	%xmm0, %xmm0
    0000039a: 	movq	%rbp, %rdi
    0000039d: 	cvtsi2sd	%rax, %xmm0
    000003a2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003aa: 	addq	$0x28, %rsp
    000003ae: 	popq	%rbx
    000003af: 	popq	%rbp
    000003b0: 	popq	%r12
    000003b2: 	popq	%r13
    000003b4: 	popq	%r14
    000003b6: 	popq	%r15
    000003b8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 952
.Ltmp2290:
    000003bd: 	xorl	%edx, %edx
    000003bf: 	xorl	%eax, %eax
    000003c1: 	jmp	.Ltmp2309 # Offset: 961
.Ltmp2305:
    000003c6: 	movq	%rbx, %rdi
    000003c9: 	leaq	0x10(%rsp), %rsi
    000003ce: 	xorl	%edx, %edx
    000003d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 976
    000003d5: 	movq	%rax, (%rbx)
    000003d8: 	movq	%rax, %rdi
    000003db: 	movq	0x10(%rsp), %rax
    000003e0: 	movq	%rax, 0x10(%rbx)
.Ltmp2312:
    000003e4: 	movq	%r12, %rdx
    000003e7: 	movq	%rbp, %rsi
    000003ea: 	callq	memcpy@PLT # Offset: 1002
    000003ef: 	movq	0x10(%rsp), %r12
    000003f4: 	movq	(%rbx), %rdi
    000003f7: 	jmp	.Ltmp2310 # Offset: 1015
.Ltmp2302:
    000003fc: 	movq	0x8(%rsp), %rsi
    00000401: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000408: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1032
    0000040d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000414: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000041b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000422: 	jne	.Ltmp2311 # Offset: 1058
.Ltmp2307:
    00000428: 	movq	-0x8(%rdx), %rax
    0000042c: 	addq	$0x200, %rax
    00000432: 	jmp	.Ltmp2311 # Offset: 1074
.Ltmp2306:
    00000437: 	testq	%r12, %r12
    0000043a: 	je	.Ltmp2310 # Offset: 1082
    00000440: 	jmp	.Ltmp2312 # Offset: 1088
.Ltmp2308:
    00000442: 	callq	__stack_chk_fail@PLT # Offset: 1090
.Ltmp2304:
    00000447: 	leaq	DATAat0x57008(%rip), %rdi
    0000044e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1102
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs13and_remainderIsLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs14and_remainder2IsLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 169
  State       : disassembled
  Address     : 0x1abe0
  Size        : 0x4f3
  MaxSize     : 0x500
  Offset      : 0x1abe0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs14and_remainder2IsLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0168:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp2313 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57c30(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57df0(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2326:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp2314 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2315 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r14, %rax
    000000ad: 	pxor	%xmm2, %xmm2
    000000b1: 	movdqa	%xmm3, %xmm4
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp2316:
    000000b8: 	movdqu	(%rax), %xmm8
    000000bd: 	movdqa	%xmm4, %xmm0
    000000c1: 	movdqu	(%rax), %xmm12
    000000c6: 	movdqa	%xmm4, %xmm11
    000000cb: 	addq	$0x10, %rax
    000000cf: 	pand	%xmm6, %xmm8
    000000d4: 	pcmpgtw	%xmm8, %xmm0
    000000d9: 	movdqa	%xmm8, %xmm9
    000000de: 	punpcklwd	%xmm0, %xmm9
    000000e3: 	punpckhwd	%xmm0, %xmm8
    000000e8: 	movdqa	%xmm8, %xmm1
    000000ed: 	movdqa	%xmm9, %xmm0
    000000f2: 	pcmpeqd	%xmm2, %xmm0
    000000f6: 	pcmpeqd	%xmm2, %xmm1
    000000fa: 	pcmpeqd	%xmm2, %xmm0
    000000fe: 	pcmpeqd	%xmm2, %xmm1
    00000102: 	movdqa	%xmm0, %xmm10
    00000107: 	punpcklwd	%xmm1, %xmm0
    0000010b: 	punpckhwd	%xmm1, %xmm10
    00000110: 	movdqa	%xmm0, %xmm1
    00000114: 	punpckhwd	%xmm10, %xmm1
    00000119: 	punpcklwd	%xmm10, %xmm0
    0000011e: 	movdqa	%xmm5, %xmm10
    00000123: 	punpcklwd	%xmm1, %xmm0
    00000127: 	movdqa	%xmm4, %xmm1
    0000012b: 	paddd	%xmm9, %xmm10
    00000130: 	pcmpgtw	%xmm12, %xmm1
    00000135: 	pand	%xmm1, %xmm0
    00000139: 	pcmpgtw	%xmm0, %xmm11
    0000013e: 	movdqa	%xmm0, %xmm1
    00000142: 	punpcklwd	%xmm11, %xmm1
    00000147: 	punpckhwd	%xmm11, %xmm0
    0000014c: 	pand	%xmm1, %xmm10
    00000151: 	pandn	%xmm9, %xmm1
    00000156: 	movdqa	%xmm5, %xmm9
    0000015b: 	paddd	%xmm8, %xmm9
    00000160: 	por	%xmm10, %xmm1
    00000165: 	pand	%xmm0, %xmm9
    0000016a: 	pandn	%xmm8, %xmm0
    0000016f: 	movdqa	%xmm1, %xmm8
    00000174: 	por	%xmm9, %xmm0
    00000179: 	punpcklwd	%xmm0, %xmm1
    0000017d: 	punpckhwd	%xmm0, %xmm8
    00000182: 	movdqa	%xmm1, %xmm0
    00000186: 	punpcklwd	%xmm8, %xmm1
    0000018b: 	punpckhwd	%xmm8, %xmm0
    00000190: 	punpcklwd	%xmm0, %xmm1
    00000194: 	paddw	%xmm1, %xmm3
    00000198: 	cmpq	%r15, %rax
    0000019b: 	jne	.Ltmp2316 # Offset: 411
    000001a1: 	movdqa	%xmm3, %xmm0
    000001a5: 	psrldq	$0x8, %xmm0
    000001aa: 	paddw	%xmm0, %xmm3
    000001ae: 	movdqa	%xmm3, %xmm0
    000001b2: 	psrldq	$0x4, %xmm0
    000001b7: 	paddw	%xmm0, %xmm3
    000001bb: 	movdqa	%xmm3, %xmm0
    000001bf: 	psrldq	$0x2, %xmm0
    000001c4: 	paddw	%xmm0, %xmm3
    000001c8: 	pextrw	$0x0, %xmm3, %eax
    000001cd: 	cmpl	%r13d, %ebx
    000001d0: 	je	.Ltmp2314 # Offset: 464
    000001d6: 	movl	%ebx, %edx
.Ltmp2334:
    000001d8: 	movslq	%edx, %rcx
    000001db: 	movzwl	(%r14,%rcx,2), %edi
    000001e0: 	leaq	(%rcx,%rcx), %rsi
    000001e4: 	movl	%edi, %ecx
    000001e6: 	andl	$0x7f, %ecx
    000001e9: 	testw	%di, %di
    000001ec: 	jns	.Ltmp2317 # Offset: 492
    000001ee: 	testl	%ecx, %ecx
    000001f0: 	leal	-0x80(%rcx), %edi
    000001f3: 	setne	%r8b
    000001f7: 	testb	%r8b, %r8b
    000001fa: 	cmovnel	%edi, %ecx
.Ltmp2317:
    000001fd: 	addl	%eax, %ecx
    000001ff: 	leal	0x1(%rdx), %edi
    00000202: 	movl	%ecx, %eax
    00000204: 	cmpl	%edi, %r13d
    00000207: 	jle	.Ltmp2314 # Offset: 519
    0000020d: 	movzwl	0x2(%r14,%rsi), %edi
    00000213: 	movl	%edi, %eax
    00000215: 	andl	$0x7f, %eax
    00000218: 	je	.Ltmp2318 # Offset: 536
    0000021a: 	leal	-0x80(%rax), %r8d
    0000021e: 	testw	%di, %di
    00000221: 	cmovsl	%r8d, %eax
.Ltmp2318:
    00000225: 	addl	%eax, %ecx
    00000227: 	leal	0x2(%rdx), %edi
    0000022a: 	movl	%ecx, %eax
    0000022c: 	cmpl	%edi, %r13d
    0000022f: 	jle	.Ltmp2314 # Offset: 559
    00000235: 	movzwl	0x4(%r14,%rsi), %edi
    0000023b: 	movl	%edi, %eax
    0000023d: 	andl	$0x7f, %eax
    00000240: 	testw	%di, %di
    00000243: 	jns	.Ltmp2319 # Offset: 579
    00000245: 	testl	%eax, %eax
    00000247: 	leal	-0x80(%rax), %edi
    0000024a: 	setne	%r8b
    0000024e: 	testb	%r8b, %r8b
    00000251: 	cmovnel	%edi, %eax
.Ltmp2319:
    00000254: 	addl	%eax, %ecx
    00000256: 	leal	0x3(%rdx), %edi
    00000259: 	movl	%ecx, %eax
    0000025b: 	cmpl	%edi, %r13d
    0000025e: 	jle	.Ltmp2314 # Offset: 606
    00000264: 	movzwl	0x6(%r14,%rsi), %edi
    0000026a: 	movl	%edi, %eax
    0000026c: 	andl	$0x7f, %eax
    0000026f: 	testw	%di, %di
    00000272: 	jns	.Ltmp2320 # Offset: 626
    00000274: 	testl	%eax, %eax
    00000276: 	leal	-0x80(%rax), %edi
    00000279: 	setne	%r8b
    0000027d: 	testb	%r8b, %r8b
    00000280: 	cmovnel	%edi, %eax
.Ltmp2320:
    00000283: 	addl	%eax, %ecx
    00000285: 	leal	0x4(%rdx), %edi
    00000288: 	movl	%ecx, %eax
    0000028a: 	cmpl	%edi, %r13d
    0000028d: 	jle	.Ltmp2314 # Offset: 653
    0000028f: 	movzwl	0x8(%r14,%rsi), %edi
    00000295: 	movl	%edi, %eax
    00000297: 	andl	$0x7f, %eax
    0000029a: 	testw	%di, %di
    0000029d: 	jns	.Ltmp2321 # Offset: 669
    0000029f: 	testl	%eax, %eax
    000002a1: 	leal	-0x80(%rax), %edi
    000002a4: 	setne	%r8b
    000002a8: 	testb	%r8b, %r8b
    000002ab: 	cmovnel	%edi, %eax
.Ltmp2321:
    000002ae: 	addl	%eax, %ecx
    000002b0: 	leal	0x5(%rdx), %edi
    000002b3: 	movl	%ecx, %eax
    000002b5: 	cmpl	%edi, %r13d
    000002b8: 	jle	.Ltmp2314 # Offset: 696
    000002ba: 	movzwl	0xa(%r14,%rsi), %edi
    000002c0: 	movl	%edi, %eax
    000002c2: 	andl	$0x7f, %eax
    000002c5: 	testw	%di, %di
    000002c8: 	jns	.Ltmp2322 # Offset: 712
    000002ca: 	testl	%eax, %eax
    000002cc: 	leal	-0x80(%rax), %edi
    000002cf: 	setne	%r8b
    000002d3: 	testb	%r8b, %r8b
    000002d6: 	cmovnel	%edi, %eax
.Ltmp2322:
    000002d9: 	addl	%eax, %ecx
    000002db: 	addl	$0x6, %edx
    000002de: 	movl	%ecx, %eax
    000002e0: 	cmpl	%edx, %r13d
    000002e3: 	jle	.Ltmp2314 # Offset: 739
    000002e5: 	movzwl	0xc(%r14,%rsi), %edx
    000002eb: 	movl	%edx, %eax
    000002ed: 	andl	$0x7f, %eax
    000002f0: 	je	.Ltmp2323 # Offset: 752
    000002f2: 	leal	-0x80(%rax), %esi
    000002f5: 	testw	%dx, %dx
    000002f8: 	cmovsl	%esi, %eax
.Ltmp2323:
    000002fb: 	addl	%ecx, %eax
.Ltmp2314:
    000002fd: 	cvttsd2si	%xmm7, %ecx
    00000301: 	movl	%ecx, %edx
    00000303: 	andl	$0x7f, %edx
    00000306: 	testw	%cx, %cx
    00000309: 	jns	.Ltmp2324 # Offset: 777
    0000030b: 	testl	%edx, %edx
    0000030d: 	leal	-0x80(%rdx), %ecx
    00000310: 	setne	%sil
    00000314: 	testb	%sil, %sil
    00000317: 	cmovnel	%ecx, %edx
.Ltmp2324:
    0000031a: 	imulw	$0x1f40, %dx, %dx
    0000031f: 	cmpw	%ax, %dx
    00000322: 	je	.Ltmp2325 # Offset: 802
    00000324: 	movl	current_test(%rip), %edx
    0000032a: 	movq	%rbp, %rsi
    0000032d: 	movl	$0x1, %edi
    00000332: 	xorl	%eax, %eax
    00000334: 	addl	$0x1, %r12d
    00000338: 	callq	__printf_chk@PLT # Offset: 824
    0000033d: 	movl	iterations(%rip), %r9d
    00000344: 	cmpl	%r9d, %r12d
    00000347: 	jge	.Ltmp2313 # Offset: 839
    00000349: 	movsd	init_value(%rip), %xmm7
    00000351: 	movdqa	DATAat0x57c30(%rip), %xmm6
    00000359: 	movdqa	DATAat0x57df0(%rip), %xmm5
    00000361: 	jmp	.Ltmp2326 # Offset: 865
    00000366: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2325:
    00000370: 	addl	$0x1, %r12d
    00000374: 	cmpl	%r9d, %r12d
    00000377: 	jl	.Ltmp2326 # Offset: 887
.Ltmp2313:
    0000037d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000384: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000038b: 	subq	$0x20, %rax
    0000038f: 	cmpq	%rax, %rbx
    00000392: 	je	.Ltmp2327 # Offset: 914
    00000398: 	movq	0x8(%rsp), %rax
    0000039d: 	leaq	0x10(%rbx), %rdi
    000003a1: 	movq	%rdi, (%rbx)
    000003a4: 	movq	(%rax), %rbp
    000003a7: 	movq	0x8(%rax), %r12
    000003ab: 	movq	%rbp, %rax
    000003ae: 	addq	%r12, %rax
    000003b1: 	je	.Ltmp2328 # Offset: 945
    000003b3: 	testq	%rbp, %rbp
    000003b6: 	je	.Ltmp2329 # Offset: 950
.Ltmp2328:
    000003bc: 	movq	%r12, 0x10(%rsp)
    000003c1: 	cmpq	$0xf, %r12
    000003c5: 	ja	.Ltmp2330 # Offset: 965
    000003cb: 	cmpq	$0x1, %r12
    000003cf: 	jne	.Ltmp2331 # Offset: 975
    000003d5: 	movzbl	(%rbp), %eax
    000003d9: 	movb	%al, 0x10(%rbx)
.Ltmp2335:
    000003dc: 	movq	%r12, 0x8(%rbx)
    000003e0: 	movb	$0x0, (%rdi,%r12)
    000003e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003f3: 	addq	$0x20, %rax
    000003f7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003fe: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000405: 	je	.Ltmp2332 # Offset: 1029
.Ltmp2336:
    0000040b: 	movq	-0x20(%rax), %rbp
    0000040f: 	callq	clock@PLT # Offset: 1039
    00000414: 	movq	%rax, end_time(%rip)
    0000041b: 	movq	0x18(%rsp), %rdx
    00000420: 	subq	%fs:0x28, %rdx
    00000429: 	jne	.Ltmp2333 # Offset: 1065
    0000042f: 	subq	start_time(%rip), %rax
    00000436: 	pxor	%xmm0, %xmm0
    0000043a: 	movq	%rbp, %rdi
    0000043d: 	cvtsi2sd	%rax, %xmm0
    00000442: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000044a: 	addq	$0x28, %rsp
    0000044e: 	popq	%rbx
    0000044f: 	popq	%rbp
    00000450: 	popq	%r12
    00000452: 	popq	%r13
    00000454: 	popq	%r14
    00000456: 	popq	%r15
    00000458: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1112
.Ltmp2315:
    0000045d: 	xorl	%edx, %edx
    0000045f: 	xorl	%eax, %eax
    00000461: 	jmp	.Ltmp2334 # Offset: 1121
.Ltmp2330:
    00000466: 	movq	%rbx, %rdi
    00000469: 	leaq	0x10(%rsp), %rsi
    0000046e: 	xorl	%edx, %edx
    00000470: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1136
    00000475: 	movq	%rax, (%rbx)
    00000478: 	movq	%rax, %rdi
    0000047b: 	movq	0x10(%rsp), %rax
    00000480: 	movq	%rax, 0x10(%rbx)
.Ltmp2337:
    00000484: 	movq	%r12, %rdx
    00000487: 	movq	%rbp, %rsi
    0000048a: 	callq	memcpy@PLT # Offset: 1162
    0000048f: 	movq	0x10(%rsp), %r12
    00000494: 	movq	(%rbx), %rdi
    00000497: 	jmp	.Ltmp2335 # Offset: 1175
.Ltmp2327:
    0000049c: 	movq	0x8(%rsp), %rsi
    000004a1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000004a8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1192
    000004ad: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004b4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000004bb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004c2: 	jne	.Ltmp2336 # Offset: 1218
.Ltmp2332:
    000004c8: 	movq	-0x8(%rdx), %rax
    000004cc: 	addq	$0x200, %rax
    000004d2: 	jmp	.Ltmp2336 # Offset: 1234
.Ltmp2331:
    000004d7: 	testq	%r12, %r12
    000004da: 	je	.Ltmp2335 # Offset: 1242
    000004e0: 	jmp	.Ltmp2337 # Offset: 1248
.Ltmp2333:
    000004e2: 	callq	__stack_chk_fail@PLT # Offset: 1250
.Ltmp2329:
    000004e7: 	leaq	DATAat0x57008(%rip), %rdi
    000004ee: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1262
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs14and_remainder2IsLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs13and_remainderIsLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 170
  State       : disassembled
  Address     : 0x1b0e0
  Size        : 0x453
  MaxSize     : 0x460
  Offset      : 0x1b0e0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs13and_remainderIsLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0169:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp2338 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57c30(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57ee0(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2351:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp2339 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2340 # Offset: 160
    000000a6: 	pxor	%xmm1, %xmm1
    000000aa: 	movq	%r14, %rax
    000000ad: 	movdqa	%xmm1, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp2341:
    000000b8: 	movdqu	(%rax), %xmm3
    000000bc: 	movdqu	(%rax), %xmm8
    000000c1: 	movdqa	%xmm4, %xmm2
    000000c5: 	addq	$0x10, %rax
    000000c9: 	pand	%xmm6, %xmm3
    000000cd: 	pcmpgtw	%xmm8, %xmm2
    000000d2: 	movdqa	%xmm3, %xmm0
    000000d6: 	pcmpeqw	%xmm4, %xmm0
    000000da: 	pcmpeqw	%xmm4, %xmm0
    000000de: 	pand	%xmm2, %xmm0
    000000e2: 	movdqa	%xmm3, %xmm2
    000000e6: 	paddw	%xmm5, %xmm2
    000000ea: 	pand	%xmm0, %xmm2
    000000ee: 	pandn	%xmm3, %xmm0
    000000f2: 	por	%xmm2, %xmm0
    000000f6: 	paddw	%xmm0, %xmm1
    000000fa: 	cmpq	%r15, %rax
    000000fd: 	jne	.Ltmp2341 # Offset: 253
    000000ff: 	movdqa	%xmm1, %xmm0
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddw	%xmm0, %xmm1
    0000010c: 	movdqa	%xmm1, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddw	%xmm0, %xmm1
    00000119: 	movdqa	%xmm1, %xmm0
    0000011d: 	psrldq	$0x2, %xmm0
    00000122: 	paddw	%xmm0, %xmm1
    00000126: 	pextrw	$0x0, %xmm1, %eax
    0000012b: 	cmpl	%r13d, %ebx
    0000012e: 	je	.Ltmp2339 # Offset: 302
    00000134: 	movl	%ebx, %edx
.Ltmp2359:
    00000136: 	movslq	%edx, %rcx
    00000139: 	movzwl	(%r14,%rcx,2), %edi
    0000013e: 	leaq	(%rcx,%rcx), %rsi
    00000142: 	movl	%edi, %ecx
    00000144: 	andl	$0x7f, %ecx
    00000147: 	testw	%di, %di
    0000014a: 	jns	.Ltmp2342 # Offset: 330
    0000014c: 	testw	%cx, %cx
    0000014f: 	leal	-0x80(%rcx), %edi
    00000152: 	setne	%r8b
    00000156: 	testb	%r8b, %r8b
    00000159: 	cmovnel	%edi, %ecx
.Ltmp2342:
    0000015c: 	addl	%eax, %ecx
    0000015e: 	leal	0x1(%rdx), %edi
    00000161: 	movl	%ecx, %eax
    00000163: 	cmpl	%edi, %r13d
    00000166: 	jle	.Ltmp2339 # Offset: 358
    0000016c: 	movzwl	0x2(%r14,%rsi), %edi
    00000172: 	movl	%edi, %eax
    00000174: 	andw	$0x7f, %ax
    00000178: 	je	.Ltmp2343 # Offset: 376
    0000017a: 	leal	-0x80(%rax), %r8d
    0000017e: 	testw	%di, %di
    00000181: 	cmovsl	%r8d, %eax
.Ltmp2343:
    00000185: 	addl	%eax, %ecx
    00000187: 	leal	0x2(%rdx), %edi
    0000018a: 	movl	%ecx, %eax
    0000018c: 	cmpl	%edi, %r13d
    0000018f: 	jle	.Ltmp2339 # Offset: 399
    00000195: 	movzwl	0x4(%r14,%rsi), %edi
    0000019b: 	movl	%edi, %eax
    0000019d: 	andl	$0x7f, %eax
    000001a0: 	testw	%di, %di
    000001a3: 	jns	.Ltmp2344 # Offset: 419
    000001a5: 	testw	%ax, %ax
    000001a8: 	leal	-0x80(%rax), %edi
    000001ab: 	setne	%r8b
    000001af: 	testb	%r8b, %r8b
    000001b2: 	cmovnel	%edi, %eax
.Ltmp2344:
    000001b5: 	addl	%eax, %ecx
    000001b7: 	leal	0x3(%rdx), %edi
    000001ba: 	movl	%ecx, %eax
    000001bc: 	cmpl	%edi, %r13d
    000001bf: 	jle	.Ltmp2339 # Offset: 447
    000001c5: 	movzwl	0x6(%r14,%rsi), %edi
    000001cb: 	movl	%edi, %eax
    000001cd: 	andl	$0x7f, %eax
    000001d0: 	testw	%di, %di
    000001d3: 	jns	.Ltmp2345 # Offset: 467
    000001d5: 	testw	%ax, %ax
    000001d8: 	leal	-0x80(%rax), %edi
    000001db: 	setne	%r8b
    000001df: 	testb	%r8b, %r8b
    000001e2: 	cmovnel	%edi, %eax
.Ltmp2345:
    000001e5: 	addl	%eax, %ecx
    000001e7: 	leal	0x4(%rdx), %edi
    000001ea: 	movl	%ecx, %eax
    000001ec: 	cmpl	%edi, %r13d
    000001ef: 	jle	.Ltmp2339 # Offset: 495
    000001f1: 	movzwl	0x8(%r14,%rsi), %edi
    000001f7: 	movl	%edi, %eax
    000001f9: 	andl	$0x7f, %eax
    000001fc: 	testw	%di, %di
    000001ff: 	jns	.Ltmp2346 # Offset: 511
    00000201: 	testw	%ax, %ax
    00000204: 	leal	-0x80(%rax), %edi
    00000207: 	setne	%r8b
    0000020b: 	testb	%r8b, %r8b
    0000020e: 	cmovnel	%edi, %eax
.Ltmp2346:
    00000211: 	addl	%eax, %ecx
    00000213: 	leal	0x5(%rdx), %edi
    00000216: 	movl	%ecx, %eax
    00000218: 	cmpl	%edi, %r13d
    0000021b: 	jle	.Ltmp2339 # Offset: 539
    0000021d: 	movzwl	0xa(%r14,%rsi), %edi
    00000223: 	movl	%edi, %eax
    00000225: 	andl	$0x7f, %eax
    00000228: 	testw	%di, %di
    0000022b: 	jns	.Ltmp2347 # Offset: 555
    0000022d: 	testw	%ax, %ax
    00000230: 	leal	-0x80(%rax), %edi
    00000233: 	setne	%r8b
    00000237: 	testb	%r8b, %r8b
    0000023a: 	cmovnel	%edi, %eax
.Ltmp2347:
    0000023d: 	addl	%eax, %ecx
    0000023f: 	addl	$0x6, %edx
    00000242: 	movl	%ecx, %eax
    00000244: 	cmpl	%edx, %r13d
    00000247: 	jle	.Ltmp2339 # Offset: 583
    00000249: 	movzwl	0xc(%r14,%rsi), %edx
    0000024f: 	movl	%edx, %eax
    00000251: 	andw	$0x7f, %ax
    00000255: 	je	.Ltmp2348 # Offset: 597
    00000257: 	leal	-0x80(%rax), %esi
    0000025a: 	testw	%dx, %dx
    0000025d: 	cmovsl	%esi, %eax
.Ltmp2348:
    00000260: 	addl	%ecx, %eax
.Ltmp2339:
    00000262: 	cvttsd2si	%xmm7, %ecx
    00000266: 	movl	%ecx, %edx
    00000268: 	andl	$0x7f, %edx
    0000026b: 	testw	%cx, %cx
    0000026e: 	jns	.Ltmp2349 # Offset: 622
    00000270: 	testw	%dx, %dx
    00000273: 	leal	-0x80(%rdx), %ecx
    00000276: 	setne	%sil
    0000027a: 	testb	%sil, %sil
    0000027d: 	cmovnel	%ecx, %edx
.Ltmp2349:
    00000280: 	imulw	$0x1f40, %dx, %dx
    00000285: 	cmpw	%ax, %dx
    00000288: 	je	.Ltmp2350 # Offset: 648
    0000028a: 	movl	current_test(%rip), %edx
    00000290: 	movq	%rbp, %rsi
    00000293: 	movl	$0x1, %edi
    00000298: 	xorl	%eax, %eax
    0000029a: 	addl	$0x1, %r12d
    0000029e: 	callq	__printf_chk@PLT # Offset: 670
    000002a3: 	movl	iterations(%rip), %r9d
    000002aa: 	cmpl	%r9d, %r12d
    000002ad: 	jge	.Ltmp2338 # Offset: 685
    000002af: 	movsd	init_value(%rip), %xmm7
    000002b7: 	movdqa	DATAat0x57c30(%rip), %xmm6
    000002bf: 	movdqa	DATAat0x57ee0(%rip), %xmm5
    000002c7: 	jmp	.Ltmp2351 # Offset: 711
    000002cc: 	nopl	(%rax) # Size: 4
.Ltmp2350:
    000002d0: 	addl	$0x1, %r12d
    000002d4: 	cmpl	%r9d, %r12d
    000002d7: 	jl	.Ltmp2351 # Offset: 727
.Ltmp2338:
    000002dd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002eb: 	subq	$0x20, %rax
    000002ef: 	cmpq	%rax, %rbx
    000002f2: 	je	.Ltmp2352 # Offset: 754
    000002f8: 	movq	0x8(%rsp), %rax
    000002fd: 	leaq	0x10(%rbx), %rdi
    00000301: 	movq	%rdi, (%rbx)
    00000304: 	movq	(%rax), %rbp
    00000307: 	movq	0x8(%rax), %r12
    0000030b: 	movq	%rbp, %rax
    0000030e: 	addq	%r12, %rax
    00000311: 	je	.Ltmp2353 # Offset: 785
    00000313: 	testq	%rbp, %rbp
    00000316: 	je	.Ltmp2354 # Offset: 790
.Ltmp2353:
    0000031c: 	movq	%r12, 0x10(%rsp)
    00000321: 	cmpq	$0xf, %r12
    00000325: 	ja	.Ltmp2355 # Offset: 805
    0000032b: 	cmpq	$0x1, %r12
    0000032f: 	jne	.Ltmp2356 # Offset: 815
    00000335: 	movzbl	(%rbp), %eax
    00000339: 	movb	%al, 0x10(%rbx)
.Ltmp2360:
    0000033c: 	movq	%r12, 0x8(%rbx)
    00000340: 	movb	$0x0, (%rdi,%r12)
    00000345: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000034c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000353: 	addq	$0x20, %rax
    00000357: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000035e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000365: 	je	.Ltmp2357 # Offset: 869
.Ltmp2361:
    0000036b: 	movq	-0x20(%rax), %rbp
    0000036f: 	callq	clock@PLT # Offset: 879
    00000374: 	movq	%rax, end_time(%rip)
    0000037b: 	movq	0x18(%rsp), %rdx
    00000380: 	subq	%fs:0x28, %rdx
    00000389: 	jne	.Ltmp2358 # Offset: 905
    0000038f: 	subq	start_time(%rip), %rax
    00000396: 	pxor	%xmm0, %xmm0
    0000039a: 	movq	%rbp, %rdi
    0000039d: 	cvtsi2sd	%rax, %xmm0
    000003a2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003aa: 	addq	$0x28, %rsp
    000003ae: 	popq	%rbx
    000003af: 	popq	%rbp
    000003b0: 	popq	%r12
    000003b2: 	popq	%r13
    000003b4: 	popq	%r14
    000003b6: 	popq	%r15
    000003b8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 952
.Ltmp2340:
    000003bd: 	xorl	%edx, %edx
    000003bf: 	xorl	%eax, %eax
    000003c1: 	jmp	.Ltmp2359 # Offset: 961
.Ltmp2355:
    000003c6: 	movq	%rbx, %rdi
    000003c9: 	leaq	0x10(%rsp), %rsi
    000003ce: 	xorl	%edx, %edx
    000003d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 976
    000003d5: 	movq	%rax, (%rbx)
    000003d8: 	movq	%rax, %rdi
    000003db: 	movq	0x10(%rsp), %rax
    000003e0: 	movq	%rax, 0x10(%rbx)
.Ltmp2362:
    000003e4: 	movq	%r12, %rdx
    000003e7: 	movq	%rbp, %rsi
    000003ea: 	callq	memcpy@PLT # Offset: 1002
    000003ef: 	movq	0x10(%rsp), %r12
    000003f4: 	movq	(%rbx), %rdi
    000003f7: 	jmp	.Ltmp2360 # Offset: 1015
.Ltmp2352:
    000003fc: 	movq	0x8(%rsp), %rsi
    00000401: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000408: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1032
    0000040d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000414: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000041b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000422: 	jne	.Ltmp2361 # Offset: 1058
.Ltmp2357:
    00000428: 	movq	-0x8(%rdx), %rax
    0000042c: 	addq	$0x200, %rax
    00000432: 	jmp	.Ltmp2361 # Offset: 1074
.Ltmp2356:
    00000437: 	testq	%r12, %r12
    0000043a: 	je	.Ltmp2360 # Offset: 1082
    00000440: 	jmp	.Ltmp2362 # Offset: 1088
.Ltmp2358:
    00000442: 	callq	__stack_chk_fail@PLT # Offset: 1090
.Ltmp2354:
    00000447: 	leaq	DATAat0x57008(%rip), %rdi
    0000044e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1102
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs13and_remainderIsLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIi13and_remainderIiLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 171
  State       : disassembled
  Address     : 0x1b540
  Size        : 0x383
  MaxSize     : 0x390
  Offset      : 0x1b540
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi13and_remainderIiLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0170:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp2363 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movl	%r14d, %ebx
    0000004e: 	movsd	init_value(%rip), %xmm7
    00000056: 	movdqa	DATAat0x57e40(%rip), %xmm6
    0000005e: 	movl	%eax, 0x4(%rsp)
    00000062: 	movl	%r14d, %eax
    00000065: 	andl	$-0x4, %ebx
    00000068: 	xorl	%r12d, %r12d
    0000006b: 	shrl	$0x2, %eax
    0000006e: 	movdqa	DATAat0x57d30(%rip), %xmm5
    00000076: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007d: 	subl	$0x1, %eax
    00000080: 	shlq	$0x4, %rax
    00000084: 	leaq	0x10(%r15,%rax), %r13
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp2372:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp2364 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2365 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r15, %rax
    000000ad: 	movdqa	%xmm3, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp2366:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	movdqu	(%rax), %xmm1
    000000c0: 	movdqa	%xmm4, %xmm0
    000000c4: 	addq	$0x10, %rax
    000000c8: 	pand	%xmm6, %xmm2
    000000cc: 	pcmpgtd	%xmm1, %xmm0
    000000d0: 	movdqa	%xmm2, %xmm1
    000000d4: 	pcmpeqd	%xmm4, %xmm1
    000000d8: 	pcmpeqd	%xmm4, %xmm1
    000000dc: 	pand	%xmm1, %xmm0
    000000e0: 	movdqa	%xmm2, %xmm1
    000000e4: 	paddd	%xmm5, %xmm1
    000000e8: 	pand	%xmm0, %xmm1
    000000ec: 	pandn	%xmm2, %xmm0
    000000f0: 	por	%xmm1, %xmm0
    000000f4: 	paddd	%xmm0, %xmm3
    000000f8: 	cmpq	%r13, %rax
    000000fb: 	jne	.Ltmp2366 # Offset: 251
    000000fd: 	movdqa	%xmm3, %xmm0
    00000101: 	movl	%ebx, %edx
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddd	%xmm0, %xmm3
    0000010c: 	movdqa	%xmm3, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddd	%xmm0, %xmm3
    00000119: 	movd	%xmm3, %eax
    0000011d: 	cmpl	%r14d, %ebx
    00000120: 	je	.Ltmp2364 # Offset: 288
.Ltmp2380:
    00000122: 	movslq	%edx, %rcx
    00000125: 	movl	(%r15,%rcx,4), %edi
    00000129: 	leaq	(,%rcx,4), %r8
    00000131: 	movl	%edi, %ecx
    00000133: 	andl	$0x3f, %ecx
    00000136: 	testl	%edi, %edi
    00000138: 	jns	.Ltmp2367 # Offset: 312
    0000013a: 	testl	%ecx, %ecx
    0000013c: 	leal	-0x40(%rcx), %edi
    0000013f: 	setne	%r9b
    00000143: 	testb	%r9b, %r9b
    00000146: 	cmovnel	%edi, %ecx
.Ltmp2367:
    00000149: 	addl	%ecx, %eax
    0000014b: 	leal	0x1(%rdx), %ecx
    0000014e: 	cmpl	%ecx, %r14d
    00000151: 	jle	.Ltmp2364 # Offset: 337
    00000153: 	movl	0x4(%r15,%r8), %edi
    00000158: 	movl	%edi, %ecx
    0000015a: 	andl	$0x3f, %ecx
    0000015d: 	testl	%edi, %edi
    0000015f: 	jns	.Ltmp2368 # Offset: 351
    00000161: 	testl	%ecx, %ecx
    00000163: 	leal	-0x40(%rcx), %edi
    00000166: 	setne	%r9b
    0000016a: 	testb	%r9b, %r9b
    0000016d: 	cmovnel	%edi, %ecx
.Ltmp2368:
    00000170: 	addl	$0x2, %edx
    00000173: 	addl	%ecx, %eax
    00000175: 	cmpl	%edx, %r14d
    00000178: 	jle	.Ltmp2364 # Offset: 376
    0000017a: 	movl	0x8(%r15,%r8), %ecx
    0000017f: 	movl	%ecx, %edx
    00000181: 	andl	$0x3f, %edx
    00000184: 	je	.Ltmp2369 # Offset: 388
    00000186: 	leal	-0x40(%rdx), %edi
    00000189: 	testl	%ecx, %ecx
    0000018b: 	cmovsl	%edi, %edx
.Ltmp2369:
    0000018e: 	addl	%edx, %eax
.Ltmp2364:
    00000190: 	cvttsd2si	%xmm7, %ecx
    00000194: 	movl	%ecx, %edx
    00000196: 	andl	$0x3f, %edx
    00000199: 	testl	%ecx, %ecx
    0000019b: 	jns	.Ltmp2370 # Offset: 411
    0000019d: 	testl	%edx, %edx
    0000019f: 	leal	-0x40(%rdx), %ecx
    000001a2: 	setne	%dil
    000001a6: 	testb	%dil, %dil
    000001a9: 	cmovnel	%ecx, %edx
.Ltmp2370:
    000001ac: 	imull	$0x1f40, %edx, %edx
    000001b2: 	cmpl	%eax, %edx
    000001b4: 	je	.Ltmp2371 # Offset: 436
    000001b6: 	movl	current_test(%rip), %edx
    000001bc: 	movq	%rbp, %rsi
    000001bf: 	movl	$0x1, %edi
    000001c4: 	xorl	%eax, %eax
    000001c6: 	addl	$0x1, %r12d
    000001ca: 	callq	__printf_chk@PLT # Offset: 458
    000001cf: 	movl	iterations(%rip), %esi
    000001d5: 	cmpl	%esi, %r12d
    000001d8: 	jge	.Ltmp2363 # Offset: 472
    000001da: 	movsd	init_value(%rip), %xmm7
    000001e2: 	movdqa	DATAat0x57e40(%rip), %xmm6
    000001ea: 	movdqa	DATAat0x57d30(%rip), %xmm5
    000001f2: 	jmp	.Ltmp2372 # Offset: 498
    000001f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2371:
    00000200: 	addl	$0x1, %r12d
    00000204: 	cmpl	%esi, %r12d
    00000207: 	jl	.Ltmp2372 # Offset: 519
.Ltmp2363:
    0000020d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000214: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000021b: 	subq	$0x20, %rax
    0000021f: 	cmpq	%rax, %rbx
    00000222: 	je	.Ltmp2373 # Offset: 546
    00000228: 	movq	0x8(%rsp), %rax
    0000022d: 	leaq	0x10(%rbx), %rdi
    00000231: 	movq	%rdi, (%rbx)
    00000234: 	movq	(%rax), %rbp
    00000237: 	movq	0x8(%rax), %r12
    0000023b: 	movq	%rbp, %rax
    0000023e: 	addq	%r12, %rax
    00000241: 	je	.Ltmp2374 # Offset: 577
    00000243: 	testq	%rbp, %rbp
    00000246: 	je	.Ltmp2375 # Offset: 582
.Ltmp2374:
    0000024c: 	movq	%r12, 0x10(%rsp)
    00000251: 	cmpq	$0xf, %r12
    00000255: 	ja	.Ltmp2376 # Offset: 597
    0000025b: 	cmpq	$0x1, %r12
    0000025f: 	jne	.Ltmp2377 # Offset: 607
    00000265: 	movzbl	(%rbp), %eax
    00000269: 	movb	%al, 0x10(%rbx)
.Ltmp2381:
    0000026c: 	movq	%r12, 0x8(%rbx)
    00000270: 	movb	$0x0, (%rdi,%r12)
    00000275: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000027c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000283: 	addq	$0x20, %rax
    00000287: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000295: 	je	.Ltmp2378 # Offset: 661
.Ltmp2382:
    0000029b: 	movq	-0x20(%rax), %rbp
    0000029f: 	callq	clock@PLT # Offset: 671
    000002a4: 	movq	%rax, end_time(%rip)
    000002ab: 	movq	0x18(%rsp), %rdx
    000002b0: 	subq	%fs:0x28, %rdx
    000002b9: 	jne	.Ltmp2379 # Offset: 697
    000002bf: 	subq	start_time(%rip), %rax
    000002c6: 	pxor	%xmm0, %xmm0
    000002ca: 	movq	%rbp, %rdi
    000002cd: 	cvtsi2sd	%rax, %xmm0
    000002d2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002da: 	addq	$0x28, %rsp
    000002de: 	popq	%rbx
    000002df: 	popq	%rbp
    000002e0: 	popq	%r12
    000002e2: 	popq	%r13
    000002e4: 	popq	%r14
    000002e6: 	popq	%r15
    000002e8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 744
.Ltmp2365:
    000002ed: 	xorl	%edx, %edx
    000002ef: 	xorl	%eax, %eax
    000002f1: 	jmp	.Ltmp2380 # Offset: 753
.Ltmp2376:
    000002f6: 	movq	%rbx, %rdi
    000002f9: 	leaq	0x10(%rsp), %rsi
    000002fe: 	xorl	%edx, %edx
    00000300: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 768
    00000305: 	movq	%rax, (%rbx)
    00000308: 	movq	%rax, %rdi
    0000030b: 	movq	0x10(%rsp), %rax
    00000310: 	movq	%rax, 0x10(%rbx)
.Ltmp2383:
    00000314: 	movq	%r12, %rdx
    00000317: 	movq	%rbp, %rsi
    0000031a: 	callq	memcpy@PLT # Offset: 794
    0000031f: 	movq	0x10(%rsp), %r12
    00000324: 	movq	(%rbx), %rdi
    00000327: 	jmp	.Ltmp2381 # Offset: 807
.Ltmp2373:
    0000032c: 	movq	0x8(%rsp), %rsi
    00000331: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000338: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 824
    0000033d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000344: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000352: 	jne	.Ltmp2382 # Offset: 850
.Ltmp2378:
    00000358: 	movq	-0x8(%rdx), %rax
    0000035c: 	addq	$0x200, %rax
    00000362: 	jmp	.Ltmp2382 # Offset: 866
.Ltmp2377:
    00000367: 	testq	%r12, %r12
    0000036a: 	je	.Ltmp2381 # Offset: 874
    00000370: 	jmp	.Ltmp2383 # Offset: 880
.Ltmp2379:
    00000372: 	callq	__stack_chk_fail@PLT # Offset: 882
.Ltmp2375:
    00000377: 	leaq	DATAat0x57008(%rip), %rdi
    0000037e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 894
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi13and_remainderIiLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs13and_remainderIsLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 172
  State       : disassembled
  Address     : 0x1b8d0
  Size        : 0x453
  MaxSize     : 0x460
  Offset      : 0x1b8d0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs13and_remainderIsLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0171:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp2384 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57cc0(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57ef0(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2397:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp2385 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2386 # Offset: 160
    000000a6: 	pxor	%xmm1, %xmm1
    000000aa: 	movq	%r14, %rax
    000000ad: 	movdqa	%xmm1, %xmm4
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp2387:
    000000b8: 	movdqu	(%rax), %xmm3
    000000bc: 	movdqu	(%rax), %xmm8
    000000c1: 	movdqa	%xmm4, %xmm2
    000000c5: 	addq	$0x10, %rax
    000000c9: 	pand	%xmm6, %xmm3
    000000cd: 	pcmpgtw	%xmm8, %xmm2
    000000d2: 	movdqa	%xmm3, %xmm0
    000000d6: 	pcmpeqw	%xmm4, %xmm0
    000000da: 	pcmpeqw	%xmm4, %xmm0
    000000de: 	pand	%xmm2, %xmm0
    000000e2: 	movdqa	%xmm3, %xmm2
    000000e6: 	paddw	%xmm5, %xmm2
    000000ea: 	pand	%xmm0, %xmm2
    000000ee: 	pandn	%xmm3, %xmm0
    000000f2: 	por	%xmm2, %xmm0
    000000f6: 	paddw	%xmm0, %xmm1
    000000fa: 	cmpq	%r15, %rax
    000000fd: 	jne	.Ltmp2387 # Offset: 253
    000000ff: 	movdqa	%xmm1, %xmm0
    00000103: 	psrldq	$0x8, %xmm0
    00000108: 	paddw	%xmm0, %xmm1
    0000010c: 	movdqa	%xmm1, %xmm0
    00000110: 	psrldq	$0x4, %xmm0
    00000115: 	paddw	%xmm0, %xmm1
    00000119: 	movdqa	%xmm1, %xmm0
    0000011d: 	psrldq	$0x2, %xmm0
    00000122: 	paddw	%xmm0, %xmm1
    00000126: 	pextrw	$0x0, %xmm1, %eax
    0000012b: 	cmpl	%r13d, %ebx
    0000012e: 	je	.Ltmp2385 # Offset: 302
    00000134: 	movl	%ebx, %edx
.Ltmp2405:
    00000136: 	movslq	%edx, %rcx
    00000139: 	movzwl	(%r14,%rcx,2), %edi
    0000013e: 	leaq	(%rcx,%rcx), %rsi
    00000142: 	movl	%edi, %ecx
    00000144: 	andl	$0x3f, %ecx
    00000147: 	testw	%di, %di
    0000014a: 	jns	.Ltmp2388 # Offset: 330
    0000014c: 	testw	%cx, %cx
    0000014f: 	leal	-0x40(%rcx), %edi
    00000152: 	setne	%r8b
    00000156: 	testb	%r8b, %r8b
    00000159: 	cmovnel	%edi, %ecx
.Ltmp2388:
    0000015c: 	addl	%eax, %ecx
    0000015e: 	leal	0x1(%rdx), %edi
    00000161: 	movl	%ecx, %eax
    00000163: 	cmpl	%edi, %r13d
    00000166: 	jle	.Ltmp2385 # Offset: 358
    0000016c: 	movzwl	0x2(%r14,%rsi), %edi
    00000172: 	movl	%edi, %eax
    00000174: 	andw	$0x3f, %ax
    00000178: 	je	.Ltmp2389 # Offset: 376
    0000017a: 	leal	-0x40(%rax), %r8d
    0000017e: 	testw	%di, %di
    00000181: 	cmovsl	%r8d, %eax
.Ltmp2389:
    00000185: 	addl	%eax, %ecx
    00000187: 	leal	0x2(%rdx), %edi
    0000018a: 	movl	%ecx, %eax
    0000018c: 	cmpl	%edi, %r13d
    0000018f: 	jle	.Ltmp2385 # Offset: 399
    00000195: 	movzwl	0x4(%r14,%rsi), %edi
    0000019b: 	movl	%edi, %eax
    0000019d: 	andl	$0x3f, %eax
    000001a0: 	testw	%di, %di
    000001a3: 	jns	.Ltmp2390 # Offset: 419
    000001a5: 	testw	%ax, %ax
    000001a8: 	leal	-0x40(%rax), %edi
    000001ab: 	setne	%r8b
    000001af: 	testb	%r8b, %r8b
    000001b2: 	cmovnel	%edi, %eax
.Ltmp2390:
    000001b5: 	addl	%eax, %ecx
    000001b7: 	leal	0x3(%rdx), %edi
    000001ba: 	movl	%ecx, %eax
    000001bc: 	cmpl	%edi, %r13d
    000001bf: 	jle	.Ltmp2385 # Offset: 447
    000001c5: 	movzwl	0x6(%r14,%rsi), %edi
    000001cb: 	movl	%edi, %eax
    000001cd: 	andl	$0x3f, %eax
    000001d0: 	testw	%di, %di
    000001d3: 	jns	.Ltmp2391 # Offset: 467
    000001d5: 	testw	%ax, %ax
    000001d8: 	leal	-0x40(%rax), %edi
    000001db: 	setne	%r8b
    000001df: 	testb	%r8b, %r8b
    000001e2: 	cmovnel	%edi, %eax
.Ltmp2391:
    000001e5: 	addl	%eax, %ecx
    000001e7: 	leal	0x4(%rdx), %edi
    000001ea: 	movl	%ecx, %eax
    000001ec: 	cmpl	%edi, %r13d
    000001ef: 	jle	.Ltmp2385 # Offset: 495
    000001f1: 	movzwl	0x8(%r14,%rsi), %edi
    000001f7: 	movl	%edi, %eax
    000001f9: 	andl	$0x3f, %eax
    000001fc: 	testw	%di, %di
    000001ff: 	jns	.Ltmp2392 # Offset: 511
    00000201: 	testw	%ax, %ax
    00000204: 	leal	-0x40(%rax), %edi
    00000207: 	setne	%r8b
    0000020b: 	testb	%r8b, %r8b
    0000020e: 	cmovnel	%edi, %eax
.Ltmp2392:
    00000211: 	addl	%eax, %ecx
    00000213: 	leal	0x5(%rdx), %edi
    00000216: 	movl	%ecx, %eax
    00000218: 	cmpl	%edi, %r13d
    0000021b: 	jle	.Ltmp2385 # Offset: 539
    0000021d: 	movzwl	0xa(%r14,%rsi), %edi
    00000223: 	movl	%edi, %eax
    00000225: 	andl	$0x3f, %eax
    00000228: 	testw	%di, %di
    0000022b: 	jns	.Ltmp2393 # Offset: 555
    0000022d: 	testw	%ax, %ax
    00000230: 	leal	-0x40(%rax), %edi
    00000233: 	setne	%r8b
    00000237: 	testb	%r8b, %r8b
    0000023a: 	cmovnel	%edi, %eax
.Ltmp2393:
    0000023d: 	addl	%eax, %ecx
    0000023f: 	addl	$0x6, %edx
    00000242: 	movl	%ecx, %eax
    00000244: 	cmpl	%edx, %r13d
    00000247: 	jle	.Ltmp2385 # Offset: 583
    00000249: 	movzwl	0xc(%r14,%rsi), %edx
    0000024f: 	movl	%edx, %eax
    00000251: 	andw	$0x3f, %ax
    00000255: 	je	.Ltmp2394 # Offset: 597
    00000257: 	leal	-0x40(%rax), %esi
    0000025a: 	testw	%dx, %dx
    0000025d: 	cmovsl	%esi, %eax
.Ltmp2394:
    00000260: 	addl	%ecx, %eax
.Ltmp2385:
    00000262: 	cvttsd2si	%xmm7, %ecx
    00000266: 	movl	%ecx, %edx
    00000268: 	andl	$0x3f, %edx
    0000026b: 	testw	%cx, %cx
    0000026e: 	jns	.Ltmp2395 # Offset: 622
    00000270: 	testw	%dx, %dx
    00000273: 	leal	-0x40(%rdx), %ecx
    00000276: 	setne	%sil
    0000027a: 	testb	%sil, %sil
    0000027d: 	cmovnel	%ecx, %edx
.Ltmp2395:
    00000280: 	imulw	$0x1f40, %dx, %dx
    00000285: 	cmpw	%ax, %dx
    00000288: 	je	.Ltmp2396 # Offset: 648
    0000028a: 	movl	current_test(%rip), %edx
    00000290: 	movq	%rbp, %rsi
    00000293: 	movl	$0x1, %edi
    00000298: 	xorl	%eax, %eax
    0000029a: 	addl	$0x1, %r12d
    0000029e: 	callq	__printf_chk@PLT # Offset: 670
    000002a3: 	movl	iterations(%rip), %r9d
    000002aa: 	cmpl	%r9d, %r12d
    000002ad: 	jge	.Ltmp2384 # Offset: 685
    000002af: 	movsd	init_value(%rip), %xmm7
    000002b7: 	movdqa	DATAat0x57cc0(%rip), %xmm6
    000002bf: 	movdqa	DATAat0x57ef0(%rip), %xmm5
    000002c7: 	jmp	.Ltmp2397 # Offset: 711
    000002cc: 	nopl	(%rax) # Size: 4
.Ltmp2396:
    000002d0: 	addl	$0x1, %r12d
    000002d4: 	cmpl	%r9d, %r12d
    000002d7: 	jl	.Ltmp2397 # Offset: 727
.Ltmp2384:
    000002dd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002eb: 	subq	$0x20, %rax
    000002ef: 	cmpq	%rax, %rbx
    000002f2: 	je	.Ltmp2398 # Offset: 754
    000002f8: 	movq	0x8(%rsp), %rax
    000002fd: 	leaq	0x10(%rbx), %rdi
    00000301: 	movq	%rdi, (%rbx)
    00000304: 	movq	(%rax), %rbp
    00000307: 	movq	0x8(%rax), %r12
    0000030b: 	movq	%rbp, %rax
    0000030e: 	addq	%r12, %rax
    00000311: 	je	.Ltmp2399 # Offset: 785
    00000313: 	testq	%rbp, %rbp
    00000316: 	je	.Ltmp2400 # Offset: 790
.Ltmp2399:
    0000031c: 	movq	%r12, 0x10(%rsp)
    00000321: 	cmpq	$0xf, %r12
    00000325: 	ja	.Ltmp2401 # Offset: 805
    0000032b: 	cmpq	$0x1, %r12
    0000032f: 	jne	.Ltmp2402 # Offset: 815
    00000335: 	movzbl	(%rbp), %eax
    00000339: 	movb	%al, 0x10(%rbx)
.Ltmp2406:
    0000033c: 	movq	%r12, 0x8(%rbx)
    00000340: 	movb	$0x0, (%rdi,%r12)
    00000345: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000034c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000353: 	addq	$0x20, %rax
    00000357: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000035e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000365: 	je	.Ltmp2403 # Offset: 869
.Ltmp2407:
    0000036b: 	movq	-0x20(%rax), %rbp
    0000036f: 	callq	clock@PLT # Offset: 879
    00000374: 	movq	%rax, end_time(%rip)
    0000037b: 	movq	0x18(%rsp), %rdx
    00000380: 	subq	%fs:0x28, %rdx
    00000389: 	jne	.Ltmp2404 # Offset: 905
    0000038f: 	subq	start_time(%rip), %rax
    00000396: 	pxor	%xmm0, %xmm0
    0000039a: 	movq	%rbp, %rdi
    0000039d: 	cvtsi2sd	%rax, %xmm0
    000003a2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003aa: 	addq	$0x28, %rsp
    000003ae: 	popq	%rbx
    000003af: 	popq	%rbp
    000003b0: 	popq	%r12
    000003b2: 	popq	%r13
    000003b4: 	popq	%r14
    000003b6: 	popq	%r15
    000003b8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 952
.Ltmp2386:
    000003bd: 	xorl	%edx, %edx
    000003bf: 	xorl	%eax, %eax
    000003c1: 	jmp	.Ltmp2405 # Offset: 961
.Ltmp2401:
    000003c6: 	movq	%rbx, %rdi
    000003c9: 	leaq	0x10(%rsp), %rsi
    000003ce: 	xorl	%edx, %edx
    000003d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 976
    000003d5: 	movq	%rax, (%rbx)
    000003d8: 	movq	%rax, %rdi
    000003db: 	movq	0x10(%rsp), %rax
    000003e0: 	movq	%rax, 0x10(%rbx)
.Ltmp2408:
    000003e4: 	movq	%r12, %rdx
    000003e7: 	movq	%rbp, %rsi
    000003ea: 	callq	memcpy@PLT # Offset: 1002
    000003ef: 	movq	0x10(%rsp), %r12
    000003f4: 	movq	(%rbx), %rdi
    000003f7: 	jmp	.Ltmp2406 # Offset: 1015
.Ltmp2398:
    000003fc: 	movq	0x8(%rsp), %rsi
    00000401: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000408: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1032
    0000040d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000414: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000041b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000422: 	jne	.Ltmp2407 # Offset: 1058
.Ltmp2403:
    00000428: 	movq	-0x8(%rdx), %rax
    0000042c: 	addq	$0x200, %rax
    00000432: 	jmp	.Ltmp2407 # Offset: 1074
.Ltmp2402:
    00000437: 	testq	%r12, %r12
    0000043a: 	je	.Ltmp2406 # Offset: 1082
    00000440: 	jmp	.Ltmp2408 # Offset: 1088
.Ltmp2404:
    00000442: 	callq	__stack_chk_fail@PLT # Offset: 1090
.Ltmp2400:
    00000447: 	leaq	DATAat0x57008(%rip), %rdi
    0000044e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1102
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs13and_remainderIsLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl14and_remainder2IlLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 173
  State       : disassembled
  Address     : 0x1bd30
  Size        : 0x278
  MaxSize     : 0x280
  Offset      : 0x1bd30
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl14and_remainder2IlLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0172:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp2409 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2415:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp2410 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2412:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0x3ff, %eax
    00000083: 	je	.Ltmp2411 # Offset: 131
    00000085: 	leaq	-0x400(%rax), %rdi
    0000008c: 	testq	%rcx, %rcx
    0000008f: 	cmovsq	%rdi, %rax
.Ltmp2411:
    00000093: 	addq	$0x8, %rdx
    00000097: 	addq	%rax, %rsi
    0000009a: 	cmpq	%rdx, %r13
    0000009d: 	jne	.Ltmp2412 # Offset: 157
.Ltmp2410:
    0000009f: 	cvttsd2si	%xmm0, %rdx
    000000a4: 	movq	%rdx, %rax
    000000a7: 	andl	$0x3ff, %eax
    000000ac: 	testq	%rdx, %rdx
    000000af: 	jns	.Ltmp2413 # Offset: 175
    000000b1: 	testq	%rax, %rax
    000000b4: 	leaq	-0x400(%rax), %rdx
    000000bb: 	setne	%cl
    000000be: 	testb	%cl, %cl
    000000c0: 	cmovneq	%rdx, %rax
.Ltmp2413:
    000000c4: 	imulq	$0x1f40, %rax, %rax
    000000cb: 	cmpq	%rsi, %rax
    000000ce: 	je	.Ltmp2414 # Offset: 206
    000000d0: 	movl	current_test(%rip), %edx
    000000d6: 	movq	%rbp, %rsi
    000000d9: 	movl	$0x1, %edi
    000000de: 	xorl	%eax, %eax
    000000e0: 	addl	$0x1, %r14d
    000000e4: 	callq	__printf_chk@PLT # Offset: 228
    000000e9: 	movl	iterations(%rip), %r8d
    000000f0: 	cmpl	%r14d, %r8d
    000000f3: 	jle	.Ltmp2409 # Offset: 243
    000000f5: 	movsd	init_value(%rip), %xmm0
    000000fd: 	jmp	.Ltmp2415 # Offset: 253
    00000102: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2414:
    00000108: 	addl	$0x1, %r14d
    0000010c: 	cmpl	%r8d, %r14d
    0000010f: 	jl	.Ltmp2415 # Offset: 271
.Ltmp2409:
    00000115: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000011c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000123: 	subq	$0x20, %rax
    00000127: 	cmpq	%rax, %rbx
    0000012a: 	je	.Ltmp2416 # Offset: 298
    00000130: 	leaq	0x10(%rbx), %rdi
    00000134: 	movq	%rdi, (%rbx)
    00000137: 	movq	(%r12), %rbp
    0000013b: 	movq	0x8(%r12), %r12
    00000140: 	movq	%rbp, %rax
    00000143: 	addq	%r12, %rax
    00000146: 	je	.Ltmp2417 # Offset: 326
    00000148: 	testq	%rbp, %rbp
    0000014b: 	je	.Ltmp2418 # Offset: 331
.Ltmp2417:
    00000151: 	movq	%r12, (%rsp)
    00000155: 	cmpq	$0xf, %r12
    00000159: 	ja	.Ltmp2419 # Offset: 345
    0000015f: 	cmpq	$0x1, %r12
    00000163: 	jne	.Ltmp2420 # Offset: 355
    00000169: 	movzbl	(%rbp), %eax
    0000016d: 	movb	%al, 0x10(%rbx)
.Ltmp2423:
    00000170: 	movq	%r12, 0x8(%rbx)
    00000174: 	movb	$0x0, (%rdi,%r12)
    00000179: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000180: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000187: 	addq	$0x20, %rax
    0000018b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000192: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000199: 	je	.Ltmp2421 # Offset: 409
.Ltmp2424:
    0000019f: 	movq	-0x20(%rax), %rbp
    000001a3: 	callq	clock@PLT # Offset: 419
    000001a8: 	movq	%rax, end_time(%rip)
    000001af: 	movq	0x8(%rsp), %rdx
    000001b4: 	subq	%fs:0x28, %rdx
    000001bd: 	jne	.Ltmp2422 # Offset: 445
    000001c3: 	subq	start_time(%rip), %rax
    000001ca: 	pxor	%xmm0, %xmm0
    000001ce: 	movq	%rbp, %rdi
    000001d1: 	cvtsi2sd	%rax, %xmm0
    000001d6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001de: 	addq	$0x18, %rsp
    000001e2: 	popq	%rbx
    000001e3: 	popq	%rbp
    000001e4: 	popq	%r12
    000001e6: 	popq	%r13
    000001e8: 	popq	%r14
    000001ea: 	popq	%r15
    000001ec: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 492
.Ltmp2419:
    000001f1: 	movq	%rbx, %rdi
    000001f4: 	movq	%rsp, %rsi
    000001f7: 	xorl	%edx, %edx
    000001f9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 505
    000001fe: 	movq	%rax, (%rbx)
    00000201: 	movq	%rax, %rdi
    00000204: 	movq	(%rsp), %rax
    00000208: 	movq	%rax, 0x10(%rbx)
.Ltmp2425:
    0000020c: 	movq	%r12, %rdx
    0000020f: 	movq	%rbp, %rsi
    00000212: 	callq	memcpy@PLT # Offset: 530
    00000217: 	movq	(%rsp), %r12
    0000021b: 	movq	(%rbx), %rdi
    0000021e: 	jmp	.Ltmp2423 # Offset: 542
.Ltmp2416:
    00000223: 	movq	%r12, %rsi
    00000226: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000022d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 557
    00000232: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000239: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000240: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000247: 	jne	.Ltmp2424 # Offset: 583
.Ltmp2421:
    0000024d: 	movq	-0x8(%rdx), %rax
    00000251: 	addq	$0x200, %rax
    00000257: 	jmp	.Ltmp2424 # Offset: 599
.Ltmp2420:
    0000025c: 	testq	%r12, %r12
    0000025f: 	je	.Ltmp2423 # Offset: 607
    00000265: 	jmp	.Ltmp2425 # Offset: 613
.Ltmp2422:
    00000267: 	callq	__stack_chk_fail@PLT # Offset: 615
.Ltmp2418:
    0000026c: 	leaq	DATAat0x57008(%rip), %rdi
    00000273: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 627
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl14and_remainder2IlLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl14and_remainder2IlLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 174
  State       : disassembled
  Address     : 0x1bfb0
  Size        : 0x270
  MaxSize     : 0x270
  Offset      : 0x1bfb0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl14and_remainder2IlLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0173:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp2426 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movsd	init_value(%rip), %xmm0
    00000053: 	xorl	%r14d, %r14d
    00000056: 	leaq	DATAat0x571d0(%rip), %rbp
    0000005d: 	leaq	0x8(%rbx,%rax,8), %r13
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2432:
    00000068: 	movq	%rbx, %rdx
    0000006b: 	xorl	%esi, %esi
    0000006d: 	testl	%r15d, %r15d
    00000070: 	jle	.Ltmp2427 # Offset: 112
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2429:
    00000078: 	movq	(%rdx), %rcx
    0000007b: 	movq	%rcx, %rax
    0000007e: 	andl	$0x7, %eax
    00000081: 	je	.Ltmp2428 # Offset: 129
    00000083: 	leaq	-0x8(%rax), %rdi
    00000087: 	testq	%rcx, %rcx
    0000008a: 	cmovsq	%rdi, %rax
.Ltmp2428:
    0000008e: 	addq	$0x8, %rdx
    00000092: 	addq	%rax, %rsi
    00000095: 	cmpq	%rdx, %r13
    00000098: 	jne	.Ltmp2429 # Offset: 152
.Ltmp2427:
    0000009a: 	cvttsd2si	%xmm0, %rdx
    0000009f: 	movq	%rdx, %rax
    000000a2: 	andl	$0x7, %eax
    000000a5: 	testq	%rdx, %rdx
    000000a8: 	jns	.Ltmp2430 # Offset: 168
    000000aa: 	testq	%rax, %rax
    000000ad: 	leaq	-0x8(%rax), %rdx
    000000b1: 	setne	%cl
    000000b4: 	testb	%cl, %cl
    000000b6: 	cmovneq	%rdx, %rax
.Ltmp2430:
    000000ba: 	imulq	$0x1f40, %rax, %rax
    000000c1: 	cmpq	%rsi, %rax
    000000c4: 	je	.Ltmp2431 # Offset: 196
    000000c6: 	movl	current_test(%rip), %edx
    000000cc: 	movq	%rbp, %rsi
    000000cf: 	movl	$0x1, %edi
    000000d4: 	xorl	%eax, %eax
    000000d6: 	addl	$0x1, %r14d
    000000da: 	callq	__printf_chk@PLT # Offset: 218
    000000df: 	movl	iterations(%rip), %r8d
    000000e6: 	cmpl	%r14d, %r8d
    000000e9: 	jle	.Ltmp2426 # Offset: 233
    000000eb: 	movsd	init_value(%rip), %xmm0
    000000f3: 	jmp	.Ltmp2432 # Offset: 243
    000000f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2431:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%r8d, %r14d
    00000107: 	jl	.Ltmp2432 # Offset: 263
.Ltmp2426:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp2433 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	%rdi, (%rbx)
    0000012f: 	movq	(%r12), %rbp
    00000133: 	movq	0x8(%r12), %r12
    00000138: 	movq	%rbp, %rax
    0000013b: 	addq	%r12, %rax
    0000013e: 	je	.Ltmp2434 # Offset: 318
    00000140: 	testq	%rbp, %rbp
    00000143: 	je	.Ltmp2435 # Offset: 323
.Ltmp2434:
    00000149: 	movq	%r12, (%rsp)
    0000014d: 	cmpq	$0xf, %r12
    00000151: 	ja	.Ltmp2436 # Offset: 337
    00000157: 	cmpq	$0x1, %r12
    0000015b: 	jne	.Ltmp2437 # Offset: 347
    00000161: 	movzbl	(%rbp), %eax
    00000165: 	movb	%al, 0x10(%rbx)
.Ltmp2440:
    00000168: 	movq	%r12, 0x8(%rbx)
    0000016c: 	movb	$0x0, (%rdi,%r12)
    00000171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000178: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017f: 	addq	$0x20, %rax
    00000183: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000018a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000191: 	je	.Ltmp2438 # Offset: 401
.Ltmp2441:
    00000197: 	movq	-0x20(%rax), %rbp
    0000019b: 	callq	clock@PLT # Offset: 411
    000001a0: 	movq	%rax, end_time(%rip)
    000001a7: 	movq	0x8(%rsp), %rdx
    000001ac: 	subq	%fs:0x28, %rdx
    000001b5: 	jne	.Ltmp2439 # Offset: 437
    000001bb: 	subq	start_time(%rip), %rax
    000001c2: 	pxor	%xmm0, %xmm0
    000001c6: 	movq	%rbp, %rdi
    000001c9: 	cvtsi2sd	%rax, %xmm0
    000001ce: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d6: 	addq	$0x18, %rsp
    000001da: 	popq	%rbx
    000001db: 	popq	%rbp
    000001dc: 	popq	%r12
    000001de: 	popq	%r13
    000001e0: 	popq	%r14
    000001e2: 	popq	%r15
    000001e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 484
.Ltmp2436:
    000001e9: 	movq	%rbx, %rdi
    000001ec: 	movq	%rsp, %rsi
    000001ef: 	xorl	%edx, %edx
    000001f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 497
    000001f6: 	movq	%rax, (%rbx)
    000001f9: 	movq	%rax, %rdi
    000001fc: 	movq	(%rsp), %rax
    00000200: 	movq	%rax, 0x10(%rbx)
.Ltmp2442:
    00000204: 	movq	%r12, %rdx
    00000207: 	movq	%rbp, %rsi
    0000020a: 	callq	memcpy@PLT # Offset: 522
    0000020f: 	movq	(%rsp), %r12
    00000213: 	movq	(%rbx), %rdi
    00000216: 	jmp	.Ltmp2440 # Offset: 534
.Ltmp2433:
    0000021b: 	movq	%r12, %rsi
    0000021e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000225: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 549
    0000022a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000231: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000238: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023f: 	jne	.Ltmp2441 # Offset: 575
.Ltmp2438:
    00000245: 	movq	-0x8(%rdx), %rax
    00000249: 	addq	$0x200, %rax
    0000024f: 	jmp	.Ltmp2441 # Offset: 591
.Ltmp2437:
    00000254: 	testq	%r12, %r12
    00000257: 	je	.Ltmp2440 # Offset: 599
    0000025d: 	jmp	.Ltmp2442 # Offset: 605
.Ltmp2439:
    0000025f: 	callq	__stack_chk_fail@PLT # Offset: 607
.Ltmp2435:
    00000264: 	leaq	DATAat0x57008(%rip), %rdi
    0000026b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 619
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl14and_remainder2IlLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs14and_remainder2IsLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 175
  State       : disassembled
  Address     : 0x1c220
  Size        : 0x4f3
  MaxSize     : 0x500
  Offset      : 0x1c220
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs14and_remainder2IsLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0174:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp2443 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebx
    00000050: 	movsd	init_value(%rip), %xmm7
    00000058: 	movdqa	DATAat0x57cb0(%rip), %xmm6
    00000060: 	movl	%eax, 0x4(%rsp)
    00000064: 	movl	%r13d, %eax
    00000067: 	andl	$-0x8, %ebx
    0000006a: 	xorl	%r12d, %r12d
    0000006d: 	shrl	$0x3, %eax
    00000070: 	movdqa	DATAat0x57da0(%rip), %xmm5
    00000078: 	leaq	DATAat0x571d0(%rip), %rbp
    0000007f: 	subl	$0x1, %eax
    00000082: 	shlq	$0x4, %rax
    00000086: 	leaq	0x10(%r14,%rax), %r15
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2456:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp2444 # Offset: 149
    0000009b: 	cmpl	$0x6, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp2445 # Offset: 160
    000000a6: 	pxor	%xmm3, %xmm3
    000000aa: 	movq	%r14, %rax
    000000ad: 	pxor	%xmm2, %xmm2
    000000b1: 	movdqa	%xmm3, %xmm4
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp2446:
    000000b8: 	movdqu	(%rax), %xmm8
    000000bd: 	movdqa	%xmm4, %xmm0
    000000c1: 	movdqu	(%rax), %xmm12
    000000c6: 	movdqa	%xmm4, %xmm11
    000000cb: 	addq	$0x10, %rax
    000000cf: 	pand	%xmm6, %xmm8
    000000d4: 	pcmpgtw	%xmm8, %xmm0
    000000d9: 	movdqa	%xmm8, %xmm9
    000000de: 	punpcklwd	%xmm0, %xmm9
    000000e3: 	punpckhwd	%xmm0, %xmm8
    000000e8: 	movdqa	%xmm8, %xmm1
    000000ed: 	movdqa	%xmm9, %xmm0
    000000f2: 	pcmpeqd	%xmm2, %xmm0
    000000f6: 	pcmpeqd	%xmm2, %xmm1
    000000fa: 	pcmpeqd	%xmm2, %xmm0
    000000fe: 	pcmpeqd	%xmm2, %xmm1
    00000102: 	movdqa	%xmm0, %xmm10
    00000107: 	punpcklwd	%xmm1, %xmm0
    0000010b: 	punpckhwd	%xmm1, %xmm10
    00000110: 	movdqa	%xmm0, %xmm1
    00000114: 	punpckhwd	%xmm10, %xmm1
    00000119: 	punpcklwd	%xmm10, %xmm0
    0000011e: 	movdqa	%xmm5, %xmm10
    00000123: 	punpcklwd	%xmm1, %xmm0
    00000127: 	movdqa	%xmm4, %xmm1
    0000012b: 	paddd	%xmm9, %xmm10
    00000130: 	pcmpgtw	%xmm12, %xmm1
    00000135: 	pand	%xmm1, %xmm0
    00000139: 	pcmpgtw	%xmm0, %xmm11
    0000013e: 	movdqa	%xmm0, %xmm1
    00000142: 	punpcklwd	%xmm11, %xmm1
    00000147: 	punpckhwd	%xmm11, %xmm0
    0000014c: 	pand	%xmm1, %xmm10
    00000151: 	pandn	%xmm9, %xmm1
    00000156: 	movdqa	%xmm5, %xmm9
    0000015b: 	paddd	%xmm8, %xmm9
    00000160: 	por	%xmm10, %xmm1
    00000165: 	pand	%xmm0, %xmm9
    0000016a: 	pandn	%xmm8, %xmm0
    0000016f: 	movdqa	%xmm1, %xmm8
    00000174: 	por	%xmm9, %xmm0
    00000179: 	punpcklwd	%xmm0, %xmm1
    0000017d: 	punpckhwd	%xmm0, %xmm8
    00000182: 	movdqa	%xmm1, %xmm0
    00000186: 	punpcklwd	%xmm8, %xmm1
    0000018b: 	punpckhwd	%xmm8, %xmm0
    00000190: 	punpcklwd	%xmm0, %xmm1
    00000194: 	paddw	%xmm1, %xmm3
    00000198: 	cmpq	%r15, %rax
    0000019b: 	jne	.Ltmp2446 # Offset: 411
    000001a1: 	movdqa	%xmm3, %xmm0
    000001a5: 	psrldq	$0x8, %xmm0
    000001aa: 	paddw	%xmm0, %xmm3
    000001ae: 	movdqa	%xmm3, %xmm0
    000001b2: 	psrldq	$0x4, %xmm0
    000001b7: 	paddw	%xmm0, %xmm3
    000001bb: 	movdqa	%xmm3, %xmm0
    000001bf: 	psrldq	$0x2, %xmm0
    000001c4: 	paddw	%xmm0, %xmm3
    000001c8: 	pextrw	$0x0, %xmm3, %eax
    000001cd: 	cmpl	%r13d, %ebx
    000001d0: 	je	.Ltmp2444 # Offset: 464
    000001d6: 	movl	%ebx, %edx
.Ltmp2464:
    000001d8: 	movslq	%edx, %rcx
    000001db: 	movzwl	(%r14,%rcx,2), %edi
    000001e0: 	leaq	(%rcx,%rcx), %rsi
    000001e4: 	movl	%edi, %ecx
    000001e6: 	andl	$0x7, %ecx
    000001e9: 	testw	%di, %di
    000001ec: 	jns	.Ltmp2447 # Offset: 492
    000001ee: 	testl	%ecx, %ecx
    000001f0: 	leal	-0x8(%rcx), %edi
    000001f3: 	setne	%r8b
    000001f7: 	testb	%r8b, %r8b
    000001fa: 	cmovnel	%edi, %ecx
.Ltmp2447:
    000001fd: 	addl	%eax, %ecx
    000001ff: 	leal	0x1(%rdx), %edi
    00000202: 	movl	%ecx, %eax
    00000204: 	cmpl	%edi, %r13d
    00000207: 	jle	.Ltmp2444 # Offset: 519
    0000020d: 	movzwl	0x2(%r14,%rsi), %edi
    00000213: 	movl	%edi, %eax
    00000215: 	andl	$0x7, %eax
    00000218: 	je	.Ltmp2448 # Offset: 536
    0000021a: 	leal	-0x8(%rax), %r8d
    0000021e: 	testw	%di, %di
    00000221: 	cmovsl	%r8d, %eax
.Ltmp2448:
    00000225: 	addl	%eax, %ecx
    00000227: 	leal	0x2(%rdx), %edi
    0000022a: 	movl	%ecx, %eax
    0000022c: 	cmpl	%edi, %r13d
    0000022f: 	jle	.Ltmp2444 # Offset: 559
    00000235: 	movzwl	0x4(%r14,%rsi), %edi
    0000023b: 	movl	%edi, %eax
    0000023d: 	andl	$0x7, %eax
    00000240: 	testw	%di, %di
    00000243: 	jns	.Ltmp2449 # Offset: 579
    00000245: 	testl	%eax, %eax
    00000247: 	leal	-0x8(%rax), %edi
    0000024a: 	setne	%r8b
    0000024e: 	testb	%r8b, %r8b
    00000251: 	cmovnel	%edi, %eax
.Ltmp2449:
    00000254: 	addl	%eax, %ecx
    00000256: 	leal	0x3(%rdx), %edi
    00000259: 	movl	%ecx, %eax
    0000025b: 	cmpl	%edi, %r13d
    0000025e: 	jle	.Ltmp2444 # Offset: 606
    00000264: 	movzwl	0x6(%r14,%rsi), %edi
    0000026a: 	movl	%edi, %eax
    0000026c: 	andl	$0x7, %eax
    0000026f: 	testw	%di, %di
    00000272: 	jns	.Ltmp2450 # Offset: 626
    00000274: 	testl	%eax, %eax
    00000276: 	leal	-0x8(%rax), %edi
    00000279: 	setne	%r8b
    0000027d: 	testb	%r8b, %r8b
    00000280: 	cmovnel	%edi, %eax
.Ltmp2450:
    00000283: 	addl	%eax, %ecx
    00000285: 	leal	0x4(%rdx), %edi
    00000288: 	movl	%ecx, %eax
    0000028a: 	cmpl	%edi, %r13d
    0000028d: 	jle	.Ltmp2444 # Offset: 653
    0000028f: 	movzwl	0x8(%r14,%rsi), %edi
    00000295: 	movl	%edi, %eax
    00000297: 	andl	$0x7, %eax
    0000029a: 	testw	%di, %di
    0000029d: 	jns	.Ltmp2451 # Offset: 669
    0000029f: 	testl	%eax, %eax
    000002a1: 	leal	-0x8(%rax), %edi
    000002a4: 	setne	%r8b
    000002a8: 	testb	%r8b, %r8b
    000002ab: 	cmovnel	%edi, %eax
.Ltmp2451:
    000002ae: 	addl	%eax, %ecx
    000002b0: 	leal	0x5(%rdx), %edi
    000002b3: 	movl	%ecx, %eax
    000002b5: 	cmpl	%edi, %r13d
    000002b8: 	jle	.Ltmp2444 # Offset: 696
    000002ba: 	movzwl	0xa(%r14,%rsi), %edi
    000002c0: 	movl	%edi, %eax
    000002c2: 	andl	$0x7, %eax
    000002c5: 	testw	%di, %di
    000002c8: 	jns	.Ltmp2452 # Offset: 712
    000002ca: 	testl	%eax, %eax
    000002cc: 	leal	-0x8(%rax), %edi
    000002cf: 	setne	%r8b
    000002d3: 	testb	%r8b, %r8b
    000002d6: 	cmovnel	%edi, %eax
.Ltmp2452:
    000002d9: 	addl	%eax, %ecx
    000002db: 	addl	$0x6, %edx
    000002de: 	movl	%ecx, %eax
    000002e0: 	cmpl	%edx, %r13d
    000002e3: 	jle	.Ltmp2444 # Offset: 739
    000002e5: 	movzwl	0xc(%r14,%rsi), %edx
    000002eb: 	movl	%edx, %eax
    000002ed: 	andl	$0x7, %eax
    000002f0: 	je	.Ltmp2453 # Offset: 752
    000002f2: 	leal	-0x8(%rax), %esi
    000002f5: 	testw	%dx, %dx
    000002f8: 	cmovsl	%esi, %eax
.Ltmp2453:
    000002fb: 	addl	%ecx, %eax
.Ltmp2444:
    000002fd: 	cvttsd2si	%xmm7, %ecx
    00000301: 	movl	%ecx, %edx
    00000303: 	andl	$0x7, %edx
    00000306: 	testw	%cx, %cx
    00000309: 	jns	.Ltmp2454 # Offset: 777
    0000030b: 	testl	%edx, %edx
    0000030d: 	leal	-0x8(%rdx), %ecx
    00000310: 	setne	%sil
    00000314: 	testb	%sil, %sil
    00000317: 	cmovnel	%ecx, %edx
.Ltmp2454:
    0000031a: 	imulw	$0x1f40, %dx, %dx
    0000031f: 	cmpw	%ax, %dx
    00000322: 	je	.Ltmp2455 # Offset: 802
    00000324: 	movl	current_test(%rip), %edx
    0000032a: 	movq	%rbp, %rsi
    0000032d: 	movl	$0x1, %edi
    00000332: 	xorl	%eax, %eax
    00000334: 	addl	$0x1, %r12d
    00000338: 	callq	__printf_chk@PLT # Offset: 824
    0000033d: 	movl	iterations(%rip), %r9d
    00000344: 	cmpl	%r9d, %r12d
    00000347: 	jge	.Ltmp2443 # Offset: 839
    00000349: 	movsd	init_value(%rip), %xmm7
    00000351: 	movdqa	DATAat0x57cb0(%rip), %xmm6
    00000359: 	movdqa	DATAat0x57da0(%rip), %xmm5
    00000361: 	jmp	.Ltmp2456 # Offset: 865
    00000366: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2455:
    00000370: 	addl	$0x1, %r12d
    00000374: 	cmpl	%r9d, %r12d
    00000377: 	jl	.Ltmp2456 # Offset: 887
.Ltmp2443:
    0000037d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000384: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000038b: 	subq	$0x20, %rax
    0000038f: 	cmpq	%rax, %rbx
    00000392: 	je	.Ltmp2457 # Offset: 914
    00000398: 	movq	0x8(%rsp), %rax
    0000039d: 	leaq	0x10(%rbx), %rdi
    000003a1: 	movq	%rdi, (%rbx)
    000003a4: 	movq	(%rax), %rbp
    000003a7: 	movq	0x8(%rax), %r12
    000003ab: 	movq	%rbp, %rax
    000003ae: 	addq	%r12, %rax
    000003b1: 	je	.Ltmp2458 # Offset: 945
    000003b3: 	testq	%rbp, %rbp
    000003b6: 	je	.Ltmp2459 # Offset: 950
.Ltmp2458:
    000003bc: 	movq	%r12, 0x10(%rsp)
    000003c1: 	cmpq	$0xf, %r12
    000003c5: 	ja	.Ltmp2460 # Offset: 965
    000003cb: 	cmpq	$0x1, %r12
    000003cf: 	jne	.Ltmp2461 # Offset: 975
    000003d5: 	movzbl	(%rbp), %eax
    000003d9: 	movb	%al, 0x10(%rbx)
.Ltmp2465:
    000003dc: 	movq	%r12, 0x8(%rbx)
    000003e0: 	movb	$0x0, (%rdi,%r12)
    000003e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003f3: 	addq	$0x20, %rax
    000003f7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003fe: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000405: 	je	.Ltmp2462 # Offset: 1029
.Ltmp2466:
    0000040b: 	movq	-0x20(%rax), %rbp
    0000040f: 	callq	clock@PLT # Offset: 1039
    00000414: 	movq	%rax, end_time(%rip)
    0000041b: 	movq	0x18(%rsp), %rdx
    00000420: 	subq	%fs:0x28, %rdx
    00000429: 	jne	.Ltmp2463 # Offset: 1065
    0000042f: 	subq	start_time(%rip), %rax
    00000436: 	pxor	%xmm0, %xmm0
    0000043a: 	movq	%rbp, %rdi
    0000043d: 	cvtsi2sd	%rax, %xmm0
    00000442: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000044a: 	addq	$0x28, %rsp
    0000044e: 	popq	%rbx
    0000044f: 	popq	%rbp
    00000450: 	popq	%r12
    00000452: 	popq	%r13
    00000454: 	popq	%r14
    00000456: 	popq	%r15
    00000458: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1112
.Ltmp2445:
    0000045d: 	xorl	%edx, %edx
    0000045f: 	xorl	%eax, %eax
    00000461: 	jmp	.Ltmp2464 # Offset: 1121
.Ltmp2460:
    00000466: 	movq	%rbx, %rdi
    00000469: 	leaq	0x10(%rsp), %rsi
    0000046e: 	xorl	%edx, %edx
    00000470: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1136
    00000475: 	movq	%rax, (%rbx)
    00000478: 	movq	%rax, %rdi
    0000047b: 	movq	0x10(%rsp), %rax
    00000480: 	movq	%rax, 0x10(%rbx)
.Ltmp2467:
    00000484: 	movq	%r12, %rdx
    00000487: 	movq	%rbp, %rsi
    0000048a: 	callq	memcpy@PLT # Offset: 1162
    0000048f: 	movq	0x10(%rsp), %r12
    00000494: 	movq	(%rbx), %rdi
    00000497: 	jmp	.Ltmp2465 # Offset: 1175
.Ltmp2457:
    0000049c: 	movq	0x8(%rsp), %rsi
    000004a1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000004a8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1192
    000004ad: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004b4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000004bb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004c2: 	jne	.Ltmp2466 # Offset: 1218
.Ltmp2462:
    000004c8: 	movq	-0x8(%rdx), %rax
    000004cc: 	addq	$0x200, %rax
    000004d2: 	jmp	.Ltmp2466 # Offset: 1234
.Ltmp2461:
    000004d7: 	testq	%r12, %r12
    000004da: 	je	.Ltmp2465 # Offset: 1242
    000004e0: 	jmp	.Ltmp2467 # Offset: 1248
.Ltmp2463:
    000004e2: 	callq	__stack_chk_fail@PLT # Offset: 1250
.Ltmp2459:
    000004e7: 	leaq	DATAat0x57008(%rip), %rdi
    000004ee: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1262
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs14and_remainder2IsLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIa28custom_multiply_shiftadd_126IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIa28custom_multiply_shiftadd_126IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIa28custom_multiply_shiftadd_126IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 176
  State       : disassembled
  Address     : 0x1c720
  Size        : 0x26d
  MaxSize     : 0x270
  Offset      : 0x1c720
  Section     : .text
  Orc Section : .local.text._Z13test_constantIa28custom_multiply_shiftadd_126IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0175:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp2468 # Offset: 54
    0000003c: 	movsd	init_value(%rip), %xmm4
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x571d0(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp2471:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm2, %xmm2
    0000005f: 	nop # Size: 1
.Ltmp2469:
    00000060: 	movdqu	(%rax), %xmm0
    00000064: 	addq	$0x10, %rax
    00000068: 	movdqa	%xmm0, %xmm3
    0000006c: 	movdqa	%xmm0, %xmm1
    00000070: 	paddb	%xmm0, %xmm3
    00000074: 	paddb	%xmm3, %xmm1
    00000078: 	movdqa	%xmm3, %xmm0
    0000007c: 	paddb	%xmm3, %xmm2
    00000080: 	paddb	%xmm1, %xmm1
    00000084: 	paddb	%xmm1, %xmm1
    00000088: 	paddb	%xmm1, %xmm0
    0000008c: 	paddb	%xmm0, %xmm0
    00000090: 	paddb	%xmm0, %xmm0
    00000094: 	paddb	%xmm0, %xmm0
    00000098: 	paddb	%xmm1, %xmm0
    0000009c: 	paddb	%xmm0, %xmm2
    000000a0: 	cmpq	%rax, %rbx
    000000a3: 	jne	.Ltmp2469 # Offset: 163
    000000a5: 	movdqa	%xmm2, %xmm0
    000000a9: 	cvttsd2si	%xmm4, %edx
    000000ad: 	pxor	%xmm5, %xmm5
    000000b1: 	psrldq	$0x8, %xmm0
    000000b6: 	paddb	%xmm0, %xmm2
    000000ba: 	psadbw	%xmm5, %xmm2
    000000be: 	movd	%xmm2, %eax
    000000c2: 	shll	$0x7, %edx
    000000c5: 	cmpb	%al, %dl
    000000c7: 	je	.Ltmp2470 # Offset: 199
    000000c9: 	movl	current_test(%rip), %edx
    000000cf: 	movq	%r12, %rsi
    000000d2: 	movl	$0x1, %edi
    000000d7: 	xorl	%eax, %eax
    000000d9: 	addl	$0x1, %r14d
    000000dd: 	callq	__printf_chk@PLT # Offset: 221
    000000e2: 	movl	iterations(%rip), %ecx
    000000e8: 	cmpl	%ecx, %r14d
    000000eb: 	jge	.Ltmp2468 # Offset: 235
    000000ed: 	movsd	init_value(%rip), %xmm4
    000000f5: 	jmp	.Ltmp2471 # Offset: 245
    000000fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2470:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%ecx, %r14d
    00000107: 	jl	.Ltmp2471 # Offset: 263
.Ltmp2468:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp2472 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	0x8(%r13), %r12
    00000130: 	movq	%rdi, (%rbx)
    00000133: 	movq	(%r13), %rbp
    00000137: 	movq	%rbp, %rax
    0000013a: 	addq	%r12, %rax
    0000013d: 	je	.Ltmp2473 # Offset: 317
    0000013f: 	testq	%rbp, %rbp
    00000142: 	je	.Ltmp2474 # Offset: 322
.Ltmp2473:
    00000148: 	movq	%r12, (%rsp)
    0000014c: 	cmpq	$0xf, %r12
    00000150: 	ja	.Ltmp2475 # Offset: 336
    00000156: 	cmpq	$0x1, %r12
    0000015a: 	jne	.Ltmp2476 # Offset: 346
    00000160: 	movzbl	(%rbp), %eax
    00000164: 	movb	%al, 0x10(%rbx)
.Ltmp2479:
    00000167: 	movq	%r12, 0x8(%rbx)
    0000016b: 	movb	$0x0, (%rdi,%r12)
    00000170: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000177: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017e: 	addq	$0x20, %rax
    00000182: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000189: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000190: 	je	.Ltmp2477 # Offset: 400
.Ltmp2480:
    00000196: 	movq	-0x20(%rax), %rbp
    0000019a: 	callq	clock@PLT # Offset: 410
    0000019f: 	movq	%rax, end_time(%rip)
    000001a6: 	movq	0x8(%rsp), %rdx
    000001ab: 	subq	%fs:0x28, %rdx
    000001b4: 	jne	.Ltmp2478 # Offset: 436
    000001ba: 	subq	start_time(%rip), %rax
    000001c1: 	pxor	%xmm0, %xmm0
    000001c5: 	movq	%rbp, %rdi
    000001c8: 	cvtsi2sd	%rax, %xmm0
    000001cd: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d5: 	addq	$0x10, %rsp
    000001d9: 	popq	%rbx
    000001da: 	popq	%rbp
    000001db: 	popq	%r12
    000001dd: 	popq	%r13
    000001df: 	popq	%r14
    000001e1: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 481
.Ltmp2475:
    000001e6: 	movq	%rbx, %rdi
    000001e9: 	movq	%rsp, %rsi
    000001ec: 	xorl	%edx, %edx
    000001ee: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 494
    000001f3: 	movq	%rax, (%rbx)
    000001f6: 	movq	%rax, %rdi
    000001f9: 	movq	(%rsp), %rax
    000001fd: 	movq	%rax, 0x10(%rbx)
.Ltmp2481:
    00000201: 	movq	%r12, %rdx
    00000204: 	movq	%rbp, %rsi
    00000207: 	callq	memcpy@PLT # Offset: 519
    0000020c: 	movq	(%rsp), %r12
    00000210: 	movq	(%rbx), %rdi
    00000213: 	jmp	.Ltmp2479 # Offset: 531
.Ltmp2472:
    00000218: 	movq	%r13, %rsi
    0000021b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000222: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 546
    00000227: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000022e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000235: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023c: 	jne	.Ltmp2480 # Offset: 572
.Ltmp2477:
    00000242: 	movq	-0x8(%rdx), %rax
    00000246: 	addq	$0x200, %rax
    0000024c: 	jmp	.Ltmp2480 # Offset: 588
.Ltmp2476:
    00000251: 	testq	%r12, %r12
    00000254: 	je	.Ltmp2479 # Offset: 596
    0000025a: 	jmp	.Ltmp2481 # Offset: 602
.Ltmp2478:
    0000025c: 	callq	__stack_chk_fail@PLT # Offset: 604
.Ltmp2474:
    00000261: 	leaq	DATAat0x57008(%rip), %rdi
    00000268: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 616
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIa28custom_multiply_shiftadd_126IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIh28custom_multiply_shiftadd_126IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIh28custom_multiply_shiftadd_126IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIh28custom_multiply_shiftadd_126IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 177
  State       : disassembled
  Address     : 0x1c990
  Size        : 0x26d
  MaxSize     : 0x270
  Offset      : 0x1c990
  Section     : .text
  Orc Section : .local.text._Z13test_constantIh28custom_multiply_shiftadd_126IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0176:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp2482 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x571d0(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp2485:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm2, %xmm2
    0000005f: 	nop # Size: 1
.Ltmp2483:
    00000060: 	movdqu	(%rax), %xmm0
    00000064: 	addq	$0x10, %rax
    00000068: 	movdqa	%xmm0, %xmm3
    0000006c: 	movdqa	%xmm0, %xmm1
    00000070: 	paddb	%xmm0, %xmm3
    00000074: 	paddb	%xmm3, %xmm1
    00000078: 	movdqa	%xmm3, %xmm0
    0000007c: 	paddb	%xmm3, %xmm2
    00000080: 	paddb	%xmm1, %xmm1
    00000084: 	paddb	%xmm1, %xmm1
    00000088: 	paddb	%xmm1, %xmm0
    0000008c: 	paddb	%xmm0, %xmm0
    00000090: 	paddb	%xmm0, %xmm0
    00000094: 	paddb	%xmm0, %xmm0
    00000098: 	paddb	%xmm1, %xmm0
    0000009c: 	paddb	%xmm0, %xmm2
    000000a0: 	cmpq	%rax, %rbx
    000000a3: 	jne	.Ltmp2483 # Offset: 163
    000000a5: 	movdqa	%xmm2, %xmm0
    000000a9: 	pxor	%xmm4, %xmm4
    000000ad: 	movl	%esi, %edx
    000000af: 	psrldq	$0x8, %xmm0
    000000b4: 	shll	$0x7, %edx
    000000b7: 	paddb	%xmm0, %xmm2
    000000bb: 	psadbw	%xmm4, %xmm2
    000000bf: 	movd	%xmm2, %eax
    000000c3: 	cmpb	%al, %dl
    000000c5: 	je	.Ltmp2484 # Offset: 197
    000000c7: 	movl	current_test(%rip), %edx
    000000cd: 	movq	%r12, %rsi
    000000d0: 	movl	$0x1, %edi
    000000d5: 	xorl	%eax, %eax
    000000d7: 	addl	$0x1, %r14d
    000000db: 	callq	__printf_chk@PLT # Offset: 219
    000000e0: 	movl	iterations(%rip), %ecx
    000000e6: 	cmpl	%ecx, %r14d
    000000e9: 	jge	.Ltmp2482 # Offset: 233
    000000eb: 	cvttsd2si	init_value(%rip), %esi
    000000f3: 	jmp	.Ltmp2485 # Offset: 243
    000000f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2484:
    00000100: 	addl	$0x1, %r14d
    00000104: 	cmpl	%ecx, %r14d
    00000107: 	jl	.Ltmp2485 # Offset: 263
.Ltmp2482:
    0000010d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000011b: 	subq	$0x20, %rax
    0000011f: 	cmpq	%rax, %rbx
    00000122: 	je	.Ltmp2486 # Offset: 290
    00000128: 	leaq	0x10(%rbx), %rdi
    0000012c: 	movq	0x8(%r13), %r12
    00000130: 	movq	%rdi, (%rbx)
    00000133: 	movq	(%r13), %rbp
    00000137: 	movq	%rbp, %rax
    0000013a: 	addq	%r12, %rax
    0000013d: 	je	.Ltmp2487 # Offset: 317
    0000013f: 	testq	%rbp, %rbp
    00000142: 	je	.Ltmp2488 # Offset: 322
.Ltmp2487:
    00000148: 	movq	%r12, (%rsp)
    0000014c: 	cmpq	$0xf, %r12
    00000150: 	ja	.Ltmp2489 # Offset: 336
    00000156: 	cmpq	$0x1, %r12
    0000015a: 	jne	.Ltmp2490 # Offset: 346
    00000160: 	movzbl	(%rbp), %eax
    00000164: 	movb	%al, 0x10(%rbx)
.Ltmp2493:
    00000167: 	movq	%r12, 0x8(%rbx)
    0000016b: 	movb	$0x0, (%rdi,%r12)
    00000170: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000177: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000017e: 	addq	$0x20, %rax
    00000182: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000189: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000190: 	je	.Ltmp2491 # Offset: 400
.Ltmp2494:
    00000196: 	movq	-0x20(%rax), %rbp
    0000019a: 	callq	clock@PLT # Offset: 410
    0000019f: 	movq	%rax, end_time(%rip)
    000001a6: 	movq	0x8(%rsp), %rdx
    000001ab: 	subq	%fs:0x28, %rdx
    000001b4: 	jne	.Ltmp2492 # Offset: 436
    000001ba: 	subq	start_time(%rip), %rax
    000001c1: 	pxor	%xmm0, %xmm0
    000001c5: 	movq	%rbp, %rdi
    000001c8: 	cvtsi2sd	%rax, %xmm0
    000001cd: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001d5: 	addq	$0x10, %rsp
    000001d9: 	popq	%rbx
    000001da: 	popq	%rbp
    000001db: 	popq	%r12
    000001dd: 	popq	%r13
    000001df: 	popq	%r14
    000001e1: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 481
.Ltmp2489:
    000001e6: 	movq	%rbx, %rdi
    000001e9: 	movq	%rsp, %rsi
    000001ec: 	xorl	%edx, %edx
    000001ee: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 494
    000001f3: 	movq	%rax, (%rbx)
    000001f6: 	movq	%rax, %rdi
    000001f9: 	movq	(%rsp), %rax
    000001fd: 	movq	%rax, 0x10(%rbx)
.Ltmp2495:
    00000201: 	movq	%r12, %rdx
    00000204: 	movq	%rbp, %rsi
    00000207: 	callq	memcpy@PLT # Offset: 519
    0000020c: 	movq	(%rsp), %r12
    00000210: 	movq	(%rbx), %rdi
    00000213: 	jmp	.Ltmp2493 # Offset: 531
.Ltmp2486:
    00000218: 	movq	%r13, %rsi
    0000021b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000222: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 546
    00000227: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000022e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000235: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023c: 	jne	.Ltmp2494 # Offset: 572
.Ltmp2491:
    00000242: 	movq	-0x8(%rdx), %rax
    00000246: 	addq	$0x200, %rax
    0000024c: 	jmp	.Ltmp2494 # Offset: 588
.Ltmp2490:
    00000251: 	testq	%r12, %r12
    00000254: 	je	.Ltmp2493 # Offset: 596
    0000025a: 	jmp	.Ltmp2495 # Offset: 602
.Ltmp2492:
    0000025c: 	callq	__stack_chk_fail@PLT # Offset: 604
.Ltmp2488:
    00000261: 	leaq	DATAat0x57008(%rip), %rdi
    00000268: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 616
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIh28custom_multiply_shiftadd_126IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIi28custom_multiply_shiftadd_126IiEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 178
  State       : disassembled
  Address     : 0x1cc00
  Size        : 0x38d
  MaxSize     : 0x390
  Offset      : 0x1cc00
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi28custom_multiply_shiftadd_126IiEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0177:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp2496 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movl	%r15d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r15d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm3
    00000067: 	andl	$-0x4, %ebx
    0000006a: 	shrl	$0x2, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r13,%rax), %r14
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp2502:
    00000080: 	xorl	%edi, %edi
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp2497 # Offset: 133
    0000008b: 	cmpl	$0x2, 0x4(%rsp)
    00000090: 	jbe	.Ltmp2498 # Offset: 144
    00000096: 	movq	%r13, %rax
    00000099: 	pxor	%xmm4, %xmm4
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp2499:
    000000a0: 	movdqu	(%rax), %xmm1
    000000a4: 	addq	$0x10, %rax
    000000a8: 	movdqa	%xmm1, %xmm5
    000000ac: 	movdqa	%xmm1, %xmm0
    000000b0: 	pslld	$0x1, %xmm5
    000000b5: 	pslld	$0x4, %xmm0
    000000ba: 	movdqa	%xmm5, %xmm2
    000000be: 	paddd	%xmm1, %xmm2
    000000c2: 	pslld	$0x5, %xmm2
    000000c7: 	paddd	%xmm2, %xmm0
    000000cb: 	movdqa	%xmm1, %xmm2
    000000cf: 	pslld	$0x3, %xmm2
    000000d4: 	pslld	$0x2, %xmm1
    000000d9: 	paddd	%xmm2, %xmm0
    000000dd: 	paddd	%xmm1, %xmm0
    000000e1: 	paddd	%xmm5, %xmm0
    000000e5: 	paddd	%xmm0, %xmm4
    000000e9: 	cmpq	%rax, %r14
    000000ec: 	jne	.Ltmp2499 # Offset: 236
    000000ee: 	movdqa	%xmm4, %xmm0
    000000f2: 	psrldq	$0x8, %xmm0
    000000f7: 	paddd	%xmm0, %xmm4
    000000fb: 	movdqa	%xmm4, %xmm0
    000000ff: 	psrldq	$0x4, %xmm0
    00000104: 	paddd	%xmm0, %xmm4
    00000108: 	movd	%xmm4, %edi
    0000010c: 	cmpl	%r15d, %ebx
    0000010f: 	je	.Ltmp2497 # Offset: 271
    00000115: 	movl	%ebx, %ecx
    00000117: 	movl	%ebx, %eax
.Ltmp2510:
    00000119: 	movl	%r15d, %edx
    0000011c: 	subl	%ecx, %edx
    0000011e: 	cmpl	$0x1, %edx
    00000121: 	je	.Ltmp2500 # Offset: 289
    00000123: 	movq	(%r13,%rcx,4), %xmm1
    0000012a: 	movdqa	%xmm1, %xmm2
    0000012e: 	movdqa	%xmm1, %xmm4
    00000132: 	pslld	$0x1, %xmm2
    00000137: 	pslld	$0x4, %xmm4
    0000013c: 	movdqa	%xmm2, %xmm0
    00000140: 	paddd	%xmm1, %xmm0
    00000144: 	pslld	$0x5, %xmm0
    00000149: 	paddd	%xmm4, %xmm0
    0000014d: 	movdqa	%xmm1, %xmm4
    00000151: 	pslld	$0x3, %xmm4
    00000156: 	pslld	$0x2, %xmm1
    0000015b: 	paddd	%xmm4, %xmm0
    0000015f: 	paddd	%xmm1, %xmm0
    00000163: 	paddd	%xmm2, %xmm0
    00000167: 	movd	%xmm0, %ecx
    0000016b: 	pshufd	$0xe5, %xmm0, %xmm6
    00000170: 	movd	%xmm6, %r8d
    00000175: 	addl	%r8d, %ecx
    00000178: 	addl	%ecx, %edi
    0000017a: 	movl	%edx, %ecx
    0000017c: 	andl	$-0x2, %ecx
    0000017f: 	addl	%ecx, %eax
    00000181: 	cmpl	%edx, %ecx
    00000183: 	je	.Ltmp2497 # Offset: 387
.Ltmp2500:
    00000185: 	cltq
    00000187: 	movl	(%r13,%rax,4), %eax
    0000018c: 	leal	(%rax,%rax), %r8d
    00000190: 	movl	%eax, %edx
    00000192: 	leal	(%r8,%rax), %ecx
    00000196: 	shll	$0x4, %edx
    00000199: 	shll	$0x5, %ecx
    0000019c: 	addl	%ecx, %edx
    0000019e: 	leal	(%rdx,%rax,8), %edx
    000001a1: 	leal	(%rdx,%rax,4), %eax
    000001a4: 	addl	%r8d, %eax
    000001a7: 	addl	%eax, %edi
.Ltmp2497:
    000001a9: 	cvttsd2si	%xmm3, %eax
    000001ad: 	leal	(%rax,%rax), %ecx
    000001b0: 	movl	%eax, %r8d
    000001b3: 	leal	(%rcx,%rax), %edx
    000001b6: 	shll	$0x4, %r8d
    000001ba: 	shll	$0x5, %edx
    000001bd: 	addl	%r8d, %edx
    000001c0: 	leal	(%rdx,%rax,8), %edx
    000001c3: 	leal	(%rdx,%rax,4), %eax
    000001c6: 	addl	%ecx, %eax
    000001c8: 	imull	$0x1f40, %eax, %eax
    000001ce: 	cmpl	%edi, %eax
    000001d0: 	je	.Ltmp2501 # Offset: 464
    000001d2: 	movl	current_test(%rip), %edx
    000001d8: 	movq	%rbp, %rsi
    000001db: 	movl	$0x1, %edi
    000001e0: 	xorl	%eax, %eax
    000001e2: 	addl	$0x1, %r12d
    000001e6: 	callq	__printf_chk@PLT # Offset: 486
    000001eb: 	movl	iterations(%rip), %esi
    000001f1: 	cmpl	%esi, %r12d
    000001f4: 	jge	.Ltmp2496 # Offset: 500
    000001f6: 	movsd	init_value(%rip), %xmm3
    000001fe: 	jmp	.Ltmp2502 # Offset: 510
    00000203: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2501:
    00000208: 	addl	$0x1, %r12d
    0000020c: 	cmpl	%esi, %r12d
    0000020f: 	jl	.Ltmp2502 # Offset: 527
.Ltmp2496:
    00000215: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000021c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000223: 	subq	$0x20, %rax
    00000227: 	cmpq	%rax, %rbx
    0000022a: 	je	.Ltmp2503 # Offset: 554
    00000230: 	movq	0x8(%rsp), %rax
    00000235: 	leaq	0x10(%rbx), %rdi
    00000239: 	movq	%rdi, (%rbx)
    0000023c: 	movq	(%rax), %rbp
    0000023f: 	movq	0x8(%rax), %r12
    00000243: 	movq	%rbp, %rax
    00000246: 	addq	%r12, %rax
    00000249: 	je	.Ltmp2504 # Offset: 585
    0000024b: 	testq	%rbp, %rbp
    0000024e: 	je	.Ltmp2505 # Offset: 590
.Ltmp2504:
    00000254: 	movq	%r12, 0x10(%rsp)
    00000259: 	cmpq	$0xf, %r12
    0000025d: 	ja	.Ltmp2506 # Offset: 605
    00000263: 	cmpq	$0x1, %r12
    00000267: 	jne	.Ltmp2507 # Offset: 615
    0000026d: 	movzbl	(%rbp), %eax
    00000271: 	movb	%al, 0x10(%rbx)
.Ltmp2511:
    00000274: 	movq	%r12, 0x8(%rbx)
    00000278: 	movb	$0x0, (%rdi,%r12)
    0000027d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000284: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000028b: 	addq	$0x20, %rax
    0000028f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000296: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000029d: 	je	.Ltmp2508 # Offset: 669
.Ltmp2512:
    000002a3: 	movq	-0x20(%rax), %rbp
    000002a7: 	callq	clock@PLT # Offset: 679
    000002ac: 	movq	%rax, end_time(%rip)
    000002b3: 	movq	0x18(%rsp), %rdx
    000002b8: 	subq	%fs:0x28, %rdx
    000002c1: 	jne	.Ltmp2509 # Offset: 705
    000002c7: 	subq	start_time(%rip), %rax
    000002ce: 	pxor	%xmm0, %xmm0
    000002d2: 	movq	%rbp, %rdi
    000002d5: 	cvtsi2sd	%rax, %xmm0
    000002da: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002e2: 	addq	$0x28, %rsp
    000002e6: 	popq	%rbx
    000002e7: 	popq	%rbp
    000002e8: 	popq	%r12
    000002ea: 	popq	%r13
    000002ec: 	popq	%r14
    000002ee: 	popq	%r15
    000002f0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 752
.Ltmp2498:
    000002f5: 	xorl	%ecx, %ecx
    000002f7: 	xorl	%eax, %eax
    000002f9: 	xorl	%edi, %edi
    000002fb: 	jmp	.Ltmp2510 # Offset: 763
.Ltmp2506:
    00000300: 	movq	%rbx, %rdi
    00000303: 	leaq	0x10(%rsp), %rsi
    00000308: 	xorl	%edx, %edx
    0000030a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 778
    0000030f: 	movq	%rax, (%rbx)
    00000312: 	movq	%rax, %rdi
    00000315: 	movq	0x10(%rsp), %rax
    0000031a: 	movq	%rax, 0x10(%rbx)
.Ltmp2513:
    0000031e: 	movq	%r12, %rdx
    00000321: 	movq	%rbp, %rsi
    00000324: 	callq	memcpy@PLT # Offset: 804
    00000329: 	movq	0x10(%rsp), %r12
    0000032e: 	movq	(%rbx), %rdi
    00000331: 	jmp	.Ltmp2511 # Offset: 817
.Ltmp2503:
    00000336: 	movq	0x8(%rsp), %rsi
    0000033b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000342: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 834
    00000347: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000034e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000355: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000035c: 	jne	.Ltmp2512 # Offset: 860
.Ltmp2508:
    00000362: 	movq	-0x8(%rdx), %rax
    00000366: 	addq	$0x200, %rax
    0000036c: 	jmp	.Ltmp2512 # Offset: 876
.Ltmp2507:
    00000371: 	testq	%r12, %r12
    00000374: 	je	.Ltmp2511 # Offset: 884
    0000037a: 	jmp	.Ltmp2513 # Offset: 890
.Ltmp2509:
    0000037c: 	callq	__stack_chk_fail@PLT # Offset: 892
.Ltmp2505:
    00000381: 	leaq	DATAat0x57008(%rip), %rdi
    00000388: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 904
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi28custom_multiply_shiftadd_126IiEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIj28custom_multiply_shiftadd_126IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 179
  State       : disassembled
  Address     : 0x1cf90
  Size        : 0x385
  MaxSize     : 0x390
  Offset      : 0x1cf90
  Section     : .text
  Orc Section : .local.text._Z13test_constantIj28custom_multiply_shiftadd_126IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0178:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %edi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%edi, %edi
    00000041: 	jle	.Ltmp2514 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movl	%r15d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r15d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm4
    00000067: 	andl	$-0x4, %ebx
    0000006a: 	shrl	$0x2, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r13,%rax), %r14
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp2520:
    00000080: 	xorl	%ecx, %ecx
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp2515 # Offset: 133
    0000008b: 	cmpl	$0x2, 0x4(%rsp)
    00000090: 	jbe	.Ltmp2516 # Offset: 144
    00000096: 	movq	%r13, %rax
    00000099: 	pxor	%xmm2, %xmm2
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp2517:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	movdqa	%xmm0, %xmm1
    000000ac: 	movdqa	%xmm0, %xmm3
    000000b0: 	pslld	$0x1, %xmm1
    000000b5: 	pslld	$0x4, %xmm3
    000000ba: 	paddd	%xmm1, %xmm0
    000000be: 	paddd	%xmm1, %xmm2
    000000c2: 	movdqa	%xmm0, %xmm5
    000000c6: 	pslld	$0x2, %xmm0
    000000cb: 	pslld	$0x5, %xmm5
    000000d0: 	paddd	%xmm5, %xmm3
    000000d4: 	paddd	%xmm3, %xmm0
    000000d8: 	paddd	%xmm0, %xmm2
    000000dc: 	cmpq	%rax, %r14
    000000df: 	jne	.Ltmp2517 # Offset: 223
    000000e1: 	movdqa	%xmm2, %xmm0
    000000e5: 	psrldq	$0x8, %xmm0
    000000ea: 	paddd	%xmm0, %xmm2
    000000ee: 	movdqa	%xmm2, %xmm0
    000000f2: 	psrldq	$0x4, %xmm0
    000000f7: 	paddd	%xmm0, %xmm2
    000000fb: 	movd	%xmm2, %ecx
    000000ff: 	cmpl	%r15d, %ebx
    00000102: 	je	.Ltmp2515 # Offset: 258
    00000108: 	movl	%ebx, %esi
    0000010a: 	movl	%ebx, %eax
.Ltmp2528:
    0000010c: 	movl	%r15d, %edx
    0000010f: 	subl	%esi, %edx
    00000111: 	cmpl	$0x1, %edx
    00000114: 	je	.Ltmp2518 # Offset: 276
    00000116: 	movq	(%r13,%rsi,4), %xmm2
    0000011d: 	movdqa	%xmm2, %xmm0
    00000121: 	movdqa	%xmm2, %xmm3
    00000125: 	movdqa	%xmm2, %xmm1
    00000129: 	pslld	$0x2, %xmm3
    0000012e: 	pslld	$0x3, %xmm0
    00000133: 	paddd	%xmm3, %xmm0
    00000137: 	pslld	$0x1, %xmm1
    0000013c: 	movdqa	%xmm2, %xmm3
    00000140: 	pslld	$0x4, %xmm3
    00000145: 	paddd	%xmm1, %xmm3
    00000149: 	paddd	%xmm2, %xmm1
    0000014d: 	paddd	%xmm3, %xmm0
    00000151: 	pslld	$0x5, %xmm1
    00000156: 	paddd	%xmm1, %xmm0
    0000015a: 	movd	%xmm0, %r8d
    0000015f: 	pshufd	$0xe5, %xmm0, %xmm6
    00000164: 	movd	%xmm6, %esi
    00000168: 	addl	%r8d, %esi
    0000016b: 	addl	%esi, %ecx
    0000016d: 	movl	%edx, %esi
    0000016f: 	andl	$-0x2, %esi
    00000172: 	addl	%esi, %eax
    00000174: 	cmpl	%edx, %esi
    00000176: 	je	.Ltmp2515 # Offset: 374
.Ltmp2518:
    00000178: 	cltq
    0000017a: 	movl	(%r13,%rax,4), %eax
    0000017f: 	leal	(%rax,%rax), %r8d
    00000183: 	movl	%eax, %edx
    00000185: 	leal	(%r8,%rax), %esi
    00000189: 	shll	$0x4, %edx
    0000018c: 	shll	$0x5, %esi
    0000018f: 	addl	%esi, %edx
    00000191: 	addl	%ecx, %edx
    00000193: 	leal	(%rdx,%rax,8), %edx
    00000196: 	leal	(%rdx,%rax,4), %ecx
    00000199: 	addl	%r8d, %ecx
.Ltmp2515:
    0000019c: 	cvttsd2si	%xmm4, %rax
    000001a1: 	leal	(%rax,%rax), %esi
    000001a4: 	movl	%eax, %r8d
    000001a7: 	leal	(%rsi,%rax), %edx
    000001aa: 	shll	$0x4, %r8d
    000001ae: 	shll	$0x5, %edx
    000001b1: 	addl	%r8d, %edx
    000001b4: 	leal	(%rdx,%rax,8), %edx
    000001b7: 	leal	(%rdx,%rax,4), %eax
    000001ba: 	addl	%esi, %eax
    000001bc: 	imull	$0x1f40, %eax, %eax
    000001c2: 	cmpl	%ecx, %eax
    000001c4: 	je	.Ltmp2519 # Offset: 452
    000001c6: 	movl	current_test(%rip), %edx
    000001cc: 	movl	$0x1, %edi
    000001d1: 	movq	%rbp, %rsi
    000001d4: 	xorl	%eax, %eax
    000001d6: 	addl	$0x1, %r12d
    000001da: 	callq	__printf_chk@PLT # Offset: 474
    000001df: 	movl	iterations(%rip), %edi
    000001e5: 	cmpl	%edi, %r12d
    000001e8: 	jge	.Ltmp2514 # Offset: 488
    000001ea: 	movsd	init_value(%rip), %xmm4
    000001f2: 	jmp	.Ltmp2520 # Offset: 498
    000001f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2519:
    00000200: 	addl	$0x1, %r12d
    00000204: 	cmpl	%edi, %r12d
    00000207: 	jl	.Ltmp2520 # Offset: 519
.Ltmp2514:
    0000020d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000214: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000021b: 	subq	$0x20, %rax
    0000021f: 	cmpq	%rax, %rbx
    00000222: 	je	.Ltmp2521 # Offset: 546
    00000228: 	movq	0x8(%rsp), %rax
    0000022d: 	leaq	0x10(%rbx), %rdi
    00000231: 	movq	%rdi, (%rbx)
    00000234: 	movq	(%rax), %rbp
    00000237: 	movq	0x8(%rax), %r12
    0000023b: 	movq	%rbp, %rax
    0000023e: 	addq	%r12, %rax
    00000241: 	je	.Ltmp2522 # Offset: 577
    00000243: 	testq	%rbp, %rbp
    00000246: 	je	.Ltmp2523 # Offset: 582
.Ltmp2522:
    0000024c: 	movq	%r12, 0x10(%rsp)
    00000251: 	cmpq	$0xf, %r12
    00000255: 	ja	.Ltmp2524 # Offset: 597
    0000025b: 	cmpq	$0x1, %r12
    0000025f: 	jne	.Ltmp2525 # Offset: 607
    00000265: 	movzbl	(%rbp), %eax
    00000269: 	movb	%al, 0x10(%rbx)
.Ltmp2529:
    0000026c: 	movq	%r12, 0x8(%rbx)
    00000270: 	movb	$0x0, (%rdi,%r12)
    00000275: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000027c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000283: 	addq	$0x20, %rax
    00000287: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000295: 	je	.Ltmp2526 # Offset: 661
.Ltmp2530:
    0000029b: 	movq	-0x20(%rax), %rbp
    0000029f: 	callq	clock@PLT # Offset: 671
    000002a4: 	movq	%rax, end_time(%rip)
    000002ab: 	movq	0x18(%rsp), %rdx
    000002b0: 	subq	%fs:0x28, %rdx
    000002b9: 	jne	.Ltmp2527 # Offset: 697
    000002bf: 	subq	start_time(%rip), %rax
    000002c6: 	pxor	%xmm0, %xmm0
    000002ca: 	movq	%rbp, %rdi
    000002cd: 	cvtsi2sd	%rax, %xmm0
    000002d2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002da: 	addq	$0x28, %rsp
    000002de: 	popq	%rbx
    000002df: 	popq	%rbp
    000002e0: 	popq	%r12
    000002e2: 	popq	%r13
    000002e4: 	popq	%r14
    000002e6: 	popq	%r15
    000002e8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 744
.Ltmp2516:
    000002ed: 	xorl	%esi, %esi
    000002ef: 	xorl	%eax, %eax
    000002f1: 	xorl	%ecx, %ecx
    000002f3: 	jmp	.Ltmp2528 # Offset: 755
.Ltmp2524:
    000002f8: 	movq	%rbx, %rdi
    000002fb: 	leaq	0x10(%rsp), %rsi
    00000300: 	xorl	%edx, %edx
    00000302: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 770
    00000307: 	movq	%rax, (%rbx)
    0000030a: 	movq	%rax, %rdi
    0000030d: 	movq	0x10(%rsp), %rax
    00000312: 	movq	%rax, 0x10(%rbx)
.Ltmp2531:
    00000316: 	movq	%r12, %rdx
    00000319: 	movq	%rbp, %rsi
    0000031c: 	callq	memcpy@PLT # Offset: 796
    00000321: 	movq	0x10(%rsp), %r12
    00000326: 	movq	(%rbx), %rdi
    00000329: 	jmp	.Ltmp2529 # Offset: 809
.Ltmp2521:
    0000032e: 	movq	0x8(%rsp), %rsi
    00000333: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000033a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 826
    0000033f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000346: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000354: 	jne	.Ltmp2530 # Offset: 852
.Ltmp2526:
    0000035a: 	movq	-0x8(%rdx), %rax
    0000035e: 	addq	$0x200, %rax
    00000364: 	jmp	.Ltmp2530 # Offset: 868
.Ltmp2525:
    00000369: 	testq	%r12, %r12
    0000036c: 	je	.Ltmp2529 # Offset: 876
    00000372: 	jmp	.Ltmp2531 # Offset: 882
.Ltmp2527:
    00000374: 	callq	__stack_chk_fail@PLT # Offset: 884
.Ltmp2523:
    00000379: 	leaq	DATAat0x57008(%rip), %rdi
    00000380: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 896
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIj28custom_multiply_shiftadd_126IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIs28custom_multiply_shiftadd_126IsEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 180
  State       : disassembled
  Address     : 0x1d320
  Size        : 0x3f5
  MaxSize     : 0x400
  Offset      : 0x1d320
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs28custom_multiply_shiftadd_126IsEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0179:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %edi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%edi, %edi
    00000041: 	jle	.Ltmp2532 # Offset: 65
    00000047: 	leal	-0x1(%r13), %eax
    0000004b: 	movl	%r13d, %ebp
    0000004e: 	leaq	DATAat0x571d0(%rip), %r12
    00000055: 	xorl	%r15d, %r15d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r13d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm4
    00000067: 	andl	$-0x8, %ebp
    0000006a: 	shrl	$0x3, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r14,%rax), %rbx
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp2538:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r13d, %r13d
    00000085: 	jle	.Ltmp2533 # Offset: 133
    0000008b: 	cmpl	$0x6, 0x4(%rsp)
    00000090: 	jbe	.Ltmp2534 # Offset: 144
    00000096: 	movq	%r14, %rax
    00000099: 	pxor	%xmm2, %xmm2
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp2535:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	movdqa	%xmm0, %xmm1
    000000ac: 	movdqa	%xmm0, %xmm3
    000000b0: 	psllw	$0x1, %xmm1
    000000b5: 	psllw	$0x4, %xmm3
    000000ba: 	paddw	%xmm1, %xmm0
    000000be: 	paddw	%xmm1, %xmm2
    000000c2: 	movdqa	%xmm0, %xmm5
    000000c6: 	psllw	$0x2, %xmm0
    000000cb: 	psllw	$0x5, %xmm5
    000000d0: 	paddw	%xmm5, %xmm3
    000000d4: 	paddw	%xmm3, %xmm0
    000000d8: 	paddw	%xmm0, %xmm2
    000000dc: 	cmpq	%rbx, %rax
    000000df: 	jne	.Ltmp2535 # Offset: 223
    000000e1: 	movdqa	%xmm2, %xmm0
    000000e5: 	psrldq	$0x8, %xmm0
    000000ea: 	paddw	%xmm0, %xmm2
    000000ee: 	movdqa	%xmm2, %xmm0
    000000f2: 	psrldq	$0x4, %xmm0
    000000f7: 	paddw	%xmm0, %xmm2
    000000fb: 	movdqa	%xmm2, %xmm0
    000000ff: 	psrldq	$0x2, %xmm0
    00000104: 	paddw	%xmm0, %xmm2
    00000108: 	pextrw	$0x0, %xmm2, %eax
    0000010d: 	cmpl	%r13d, %ebp
    00000110: 	je	.Ltmp2533 # Offset: 272
    00000116: 	movl	%ebp, %esi
    00000118: 	movl	%ebp, %edx
.Ltmp2546:
    0000011a: 	movl	%r13d, %ecx
    0000011d: 	subl	%esi, %ecx
    0000011f: 	leal	-0x1(%rcx), %r8d
    00000123: 	cmpl	$0x2, %r8d
    00000127: 	jbe	.Ltmp2536 # Offset: 295
    00000129: 	movq	(%r14,%rsi,2), %xmm1
    0000012f: 	movdqa	%xmm1, %xmm2
    00000133: 	movdqa	%xmm1, %xmm0
    00000137: 	psllw	$0x1, %xmm2
    0000013c: 	psllw	$0x4, %xmm0
    00000141: 	paddw	%xmm2, %xmm1
    00000145: 	movdqa	%xmm1, %xmm3
    00000149: 	psllw	$0x2, %xmm1
    0000014e: 	psllw	$0x5, %xmm3
    00000153: 	paddw	%xmm3, %xmm0
    00000157: 	paddw	%xmm1, %xmm0
    0000015b: 	paddw	%xmm2, %xmm0
    0000015f: 	pextrw	$0x0, %xmm0, %r8d
    00000165: 	pextrw	$0x1, %xmm0, %esi
    0000016a: 	addl	%r8d, %esi
    0000016d: 	pextrw	$0x2, %xmm0, %r8d
    00000173: 	addl	%r8d, %esi
    00000176: 	pextrw	$0x3, %xmm0, %r8d
    0000017c: 	addl	%r8d, %esi
    0000017f: 	addl	%esi, %eax
    00000181: 	movl	%ecx, %esi
    00000183: 	andl	$-0x4, %esi
    00000186: 	addl	%esi, %edx
    00000188: 	cmpl	%ecx, %esi
    0000018a: 	je	.Ltmp2533 # Offset: 394
.Ltmp2536:
    00000190: 	movslq	%edx, %rcx
    00000193: 	movzwl	(%r14,%rcx,2), %esi
    00000198: 	leaq	(%rcx,%rcx), %r8
    0000019c: 	leal	(%rsi,%rsi), %r9d
    000001a0: 	movl	%esi, %r10d
    000001a3: 	leal	(%r9,%rsi), %ecx
    000001a7: 	shll	$0x4, %r10d
    000001ab: 	shll	$0x5, %ecx
    000001ae: 	addl	%r10d, %ecx
    000001b1: 	addl	%ecx, %eax
    000001b3: 	leal	0x1(%rdx), %ecx
    000001b6: 	leal	(%rax,%rsi,8), %eax
    000001b9: 	leal	(%rax,%rsi,4), %esi
    000001bc: 	leal	(%rsi,%r9), %eax
    000001c0: 	cmpl	%ecx, %r13d
    000001c3: 	jle	.Ltmp2533 # Offset: 451
    000001c5: 	movzwl	0x2(%r14,%r8), %ecx
    000001cb: 	addl	$0x2, %edx
    000001ce: 	leal	(%rcx,%rcx), %r9d
    000001d2: 	movl	%ecx, %esi
    000001d4: 	leal	(%r9,%rcx), %r10d
    000001d8: 	shll	$0x4, %esi
    000001db: 	shll	$0x5, %r10d
    000001df: 	addl	%r10d, %esi
    000001e2: 	leal	(%rsi,%rcx,8), %esi
    000001e5: 	leal	(%rsi,%rcx,4), %ecx
    000001e8: 	addl	%r9d, %ecx
    000001eb: 	addl	%ecx, %eax
    000001ed: 	cmpl	%edx, %r13d
    000001f0: 	jle	.Ltmp2533 # Offset: 496
    000001f2: 	movzwl	0x4(%r14,%r8), %edx
    000001f8: 	leal	(%rdx,%rdx), %r8d
    000001fc: 	movl	%edx, %ecx
    000001fe: 	leal	(%r8,%rdx), %esi
    00000202: 	shll	$0x4, %ecx
    00000205: 	shll	$0x5, %esi
    00000208: 	addl	%esi, %ecx
    0000020a: 	leal	(%rcx,%rdx,8), %ecx
    0000020d: 	leal	(%rcx,%rdx,4), %edx
    00000210: 	addl	%r8d, %edx
    00000213: 	addl	%edx, %eax
.Ltmp2533:
    00000215: 	cvttsd2si	%xmm4, %edx
    00000219: 	leal	(%rdx,%rdx), %esi
    0000021c: 	movl	%edx, %r8d
    0000021f: 	leal	(%rsi,%rdx), %ecx
    00000222: 	shll	$0x4, %r8d
    00000226: 	shll	$0x5, %ecx
    00000229: 	addl	%r8d, %ecx
    0000022c: 	leal	(%rcx,%rdx,8), %ecx
    0000022f: 	leal	(%rcx,%rdx,4), %edx
    00000232: 	addl	%esi, %edx
    00000234: 	imulw	$0x1f40, %dx, %dx
    00000239: 	cmpw	%ax, %dx
    0000023c: 	je	.Ltmp2537 # Offset: 572
    0000023e: 	movl	current_test(%rip), %edx
    00000244: 	movl	$0x1, %edi
    00000249: 	movq	%r12, %rsi
    0000024c: 	xorl	%eax, %eax
    0000024e: 	addl	$0x1, %r15d
    00000252: 	callq	__printf_chk@PLT # Offset: 594
    00000257: 	movl	iterations(%rip), %edi
    0000025d: 	cmpl	%edi, %r15d
    00000260: 	jge	.Ltmp2532 # Offset: 608
    00000262: 	movsd	init_value(%rip), %xmm4
    0000026a: 	jmp	.Ltmp2538 # Offset: 618
    0000026f: 	nop # Size: 1
.Ltmp2537:
    00000270: 	addl	$0x1, %r15d
    00000274: 	cmpl	%edi, %r15d
    00000277: 	jl	.Ltmp2538 # Offset: 631
.Ltmp2532:
    0000027d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000284: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000028b: 	subq	$0x20, %rax
    0000028f: 	cmpq	%rax, %rbx
    00000292: 	je	.Ltmp2539 # Offset: 658
    00000298: 	movq	0x8(%rsp), %rax
    0000029d: 	leaq	0x10(%rbx), %rdi
    000002a1: 	movq	%rdi, (%rbx)
    000002a4: 	movq	(%rax), %rbp
    000002a7: 	movq	0x8(%rax), %r12
    000002ab: 	movq	%rbp, %rax
    000002ae: 	addq	%r12, %rax
    000002b1: 	je	.Ltmp2540 # Offset: 689
    000002b3: 	testq	%rbp, %rbp
    000002b6: 	je	.Ltmp2541 # Offset: 694
.Ltmp2540:
    000002bc: 	movq	%r12, 0x10(%rsp)
    000002c1: 	cmpq	$0xf, %r12
    000002c5: 	ja	.Ltmp2542 # Offset: 709
    000002cb: 	cmpq	$0x1, %r12
    000002cf: 	jne	.Ltmp2543 # Offset: 719
    000002d5: 	movzbl	(%rbp), %eax
    000002d9: 	movb	%al, 0x10(%rbx)
.Ltmp2547:
    000002dc: 	movq	%r12, 0x8(%rbx)
    000002e0: 	movb	$0x0, (%rdi,%r12)
    000002e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002f3: 	addq	$0x20, %rax
    000002f7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002fe: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000305: 	je	.Ltmp2544 # Offset: 773
.Ltmp2548:
    0000030b: 	movq	-0x20(%rax), %rbp
    0000030f: 	callq	clock@PLT # Offset: 783
    00000314: 	movq	%rax, end_time(%rip)
    0000031b: 	movq	0x18(%rsp), %rdx
    00000320: 	subq	%fs:0x28, %rdx
    00000329: 	jne	.Ltmp2545 # Offset: 809
    0000032f: 	subq	start_time(%rip), %rax
    00000336: 	pxor	%xmm0, %xmm0
    0000033a: 	movq	%rbp, %rdi
    0000033d: 	cvtsi2sd	%rax, %xmm0
    00000342: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000034a: 	addq	$0x28, %rsp
    0000034e: 	popq	%rbx
    0000034f: 	popq	%rbp
    00000350: 	popq	%r12
    00000352: 	popq	%r13
    00000354: 	popq	%r14
    00000356: 	popq	%r15
    00000358: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 856
.Ltmp2534:
    0000035d: 	xorl	%esi, %esi
    0000035f: 	xorl	%edx, %edx
    00000361: 	xorl	%eax, %eax
    00000363: 	jmp	.Ltmp2546 # Offset: 867
.Ltmp2542:
    00000368: 	movq	%rbx, %rdi
    0000036b: 	leaq	0x10(%rsp), %rsi
    00000370: 	xorl	%edx, %edx
    00000372: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 882
    00000377: 	movq	%rax, (%rbx)
    0000037a: 	movq	%rax, %rdi
    0000037d: 	movq	0x10(%rsp), %rax
    00000382: 	movq	%rax, 0x10(%rbx)
.Ltmp2549:
    00000386: 	movq	%r12, %rdx
    00000389: 	movq	%rbp, %rsi
    0000038c: 	callq	memcpy@PLT # Offset: 908
    00000391: 	movq	0x10(%rsp), %r12
    00000396: 	movq	(%rbx), %rdi
    00000399: 	jmp	.Ltmp2547 # Offset: 921
.Ltmp2539:
    0000039e: 	movq	0x8(%rsp), %rsi
    000003a3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003aa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 938
    000003af: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003b6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003bd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003c4: 	jne	.Ltmp2548 # Offset: 964
.Ltmp2544:
    000003ca: 	movq	-0x8(%rdx), %rax
    000003ce: 	addq	$0x200, %rax
    000003d4: 	jmp	.Ltmp2548 # Offset: 980
.Ltmp2543:
    000003d9: 	testq	%r12, %r12
    000003dc: 	je	.Ltmp2547 # Offset: 988
    000003e2: 	jmp	.Ltmp2549 # Offset: 994
.Ltmp2545:
    000003e4: 	callq	__stack_chk_fail@PLT # Offset: 996
.Ltmp2541:
    000003e9: 	leaq	DATAat0x57008(%rip), %rdi
    000003f0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1008
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs28custom_multiply_shiftadd_126IsEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeIsEvv" after disassembly {
  Number      : 181
  State       : disassembled
  Address     : 0x1d720
  Size        : 0x6ff8
  MaxSize     : 0x7000
  Offset      : 0x1d720
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIsEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0180:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0x1000, %rsp
    0000002d: 	orq	$0x0, (%rsp)
    00000032: 	subq	$0xf58, %rsp
    00000039: 	leaq	DATAat0x57a39(%rip), %rsi
    00000040: 	leaq	"_ZL7gLabels/1"(%rip), %r15
    00000047: 	movq	%fs:0x28, %rax
    00000050: 	movq	%rax, 0x3f48(%rsp)
    00000058: 	xorl	%eax, %eax
    0000005a: 	leaq	0x40(%rsp), %r14
    0000005f: 	leaq	0xc0(%rsp), %rbp
    00000067: 	movq	%r14, %rdi
    0000006a: 	leaq	0x3f40(%rsp), %rbx
    00000072: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 114
    00000077: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm7
    0000007f: 	leaq	0x20(%rsp), %rsi
    00000084: 	movq	%r15, %rdi
    00000087: 	movaps	%xmm7, 0x20(%rsp)
    0000008c: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm7
    00000094: 	movaps	%xmm7, 0x30(%rsp)
    00000099: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 153
    0000009e: 	cvttsd2si	init_value(%rip), %eax
    000000a6: 	movd	%eax, %xmm0
    000000aa: 	movq	%rbp, %rax
    000000ad: 	punpcklwd	%xmm0, %xmm0
    000000b1: 	pshufd	$0x0, %xmm0, %xmm0
    000000b6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2550:
    000000c0: 	movaps	%xmm0, (%rax)
    000000c3: 	addq	$0x10, %rax
    000000c7: 	cmpq	%rbx, %rax
    000000ca: 	jne	.Ltmp2550 # Offset: 202
    000000cc: 	leaq	0xa0(%rsp), %r12
    000000d4: 	leaq	DATAat0x57a39(%rip), %rsi
    000000db: 	movq	%r12, %rdi
    000000de: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 222
    000000e3: 	movq	0xa0(%rsp), %rdi
    000000eb: 	leaq	0xb0(%rsp), %r13
    000000f3: 	cmpq	%r13, %rdi
    000000f6: 	je	.Ltmp2551 # Offset: 246
    000000f8: 	movq	0xb0(%rsp), %rax
    00000100: 	leaq	0x1(%rax), %rsi
    00000104: 	callq	_ZdlPvm@PLT # Offset: 260
.Ltmp2551:
    00000109: 	leaq	DATAat0x57a39(%rip), %rsi
    00000110: 	movq	%r12, %rdi
    00000113: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 275
    00000118: 	movq	0xa0(%rsp), %rdi
    00000120: 	cmpq	%r13, %rdi
    00000123: 	je	.Ltmp2552 # Offset: 291
    00000125: 	movq	0xb0(%rsp), %rax
    0000012d: 	leaq	0x1(%rax), %rsi
    00000131: 	callq	_ZdlPvm@PLT # Offset: 305
.Ltmp2552:
    00000136: 	leaq	DATAat0x57a39(%rip), %rsi
    0000013d: 	movq	%r12, %rdi
    00000140: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 320
    00000145: 	movq	0xa0(%rsp), %rdi
    0000014d: 	cmpq	%r13, %rdi
    00000150: 	je	.Ltmp2553 # Offset: 336
    00000152: 	movq	0xb0(%rsp), %rax
    0000015a: 	leaq	0x1(%rax), %rsi
    0000015e: 	callq	_ZdlPvm@PLT # Offset: 350
.Ltmp2553:
    00000163: 	leaq	DATAat0x57a39(%rip), %rsi
    0000016a: 	movq	%r12, %rdi
    0000016d: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 365
    00000172: 	movq	0xa0(%rsp), %rdi
    0000017a: 	cmpq	%r13, %rdi
    0000017d: 	je	.Ltmp2554 # Offset: 381
    0000017f: 	movq	0xb0(%rsp), %rax
    00000187: 	leaq	0x1(%rax), %rsi
    0000018b: 	callq	_ZdlPvm@PLT # Offset: 395
.Ltmp2554:
    00000190: 	leaq	DATAat0x57a39(%rip), %rsi
    00000197: 	movq	%r12, %rdi
    0000019a: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 410
    0000019f: 	movq	0xa0(%rsp), %rdi
    000001a7: 	cmpq	%r13, %rdi
    000001aa: 	je	.Ltmp2555 # Offset: 426
    000001ac: 	movq	0xb0(%rsp), %rax
    000001b4: 	leaq	0x1(%rax), %rsi
    000001b8: 	callq	_ZdlPvm@PLT # Offset: 440
.Ltmp2555:
    000001bd: 	leaq	DATAat0x57a39(%rip), %rsi
    000001c4: 	movq	%r12, %rdi
    000001c7: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 455
    000001cc: 	movq	0xa0(%rsp), %rdi
    000001d4: 	cmpq	%r13, %rdi
    000001d7: 	je	.Ltmp2556 # Offset: 471
    000001d9: 	movq	0xb0(%rsp), %rax
    000001e1: 	leaq	0x1(%rax), %rsi
    000001e5: 	callq	_ZdlPvm@PLT # Offset: 485
.Ltmp2556:
    000001ea: 	leaq	DATAat0x57a39(%rip), %rsi
    000001f1: 	movq	%r12, %rdi
    000001f4: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 500
    000001f9: 	movq	0xa0(%rsp), %rdi
    00000201: 	cmpq	%r13, %rdi
    00000204: 	je	.Ltmp2557 # Offset: 516
    00000206: 	movq	0xb0(%rsp), %rax
    0000020e: 	leaq	0x1(%rax), %rsi
    00000212: 	callq	_ZdlPvm@PLT # Offset: 530
.Ltmp2557:
    00000217: 	leaq	DATAat0x57a39(%rip), %rsi
    0000021e: 	movq	%r12, %rdi
    00000221: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 545
    00000226: 	movq	0xa0(%rsp), %rdi
    0000022e: 	cmpq	%r13, %rdi
    00000231: 	je	.Ltmp2558 # Offset: 561
    00000233: 	movq	0xb0(%rsp), %rax
    0000023b: 	leaq	0x1(%rax), %rsi
    0000023f: 	callq	_ZdlPvm@PLT # Offset: 575
.Ltmp2558:
    00000244: 	leaq	DATAat0x57a39(%rip), %rsi
    0000024b: 	movq	%r12, %rdi
    0000024e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 590
    00000253: 	movq	0xa0(%rsp), %rdi
    0000025b: 	cmpq	%r13, %rdi
    0000025e: 	je	.Ltmp2559 # Offset: 606
    00000260: 	movq	0xb0(%rsp), %rax
    00000268: 	leaq	0x1(%rax), %rsi
    0000026c: 	callq	_ZdlPvm@PLT # Offset: 620
.Ltmp2559:
    00000271: 	leaq	DATAat0x57a39(%rip), %rsi
    00000278: 	movq	%r12, %rdi
    0000027b: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 635
    00000280: 	movq	0xa0(%rsp), %rdi
    00000288: 	cmpq	%r13, %rdi
    0000028b: 	je	.Ltmp2560 # Offset: 651
    0000028d: 	movq	0xb0(%rsp), %rax
    00000295: 	leaq	0x1(%rax), %rsi
    00000299: 	callq	_ZdlPvm@PLT # Offset: 665
.Ltmp2560:
    0000029e: 	leaq	DATAat0x57a39(%rip), %rsi
    000002a5: 	movq	%r12, %rdi
    000002a8: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 680
    000002ad: 	movq	0xa0(%rsp), %rdi
    000002b5: 	cmpq	%r13, %rdi
    000002b8: 	je	.Ltmp2561 # Offset: 696
    000002ba: 	movq	0xb0(%rsp), %rax
    000002c2: 	leaq	0x1(%rax), %rsi
    000002c6: 	callq	_ZdlPvm@PLT # Offset: 710
.Ltmp2561:
    000002cb: 	leaq	DATAat0x57a39(%rip), %rsi
    000002d2: 	movq	%r12, %rdi
    000002d5: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 725
    000002da: 	movq	0xa0(%rsp), %rdi
    000002e2: 	cmpq	%r13, %rdi
    000002e5: 	je	.Ltmp2562 # Offset: 741
    000002e7: 	movq	0xb0(%rsp), %rax
    000002ef: 	leaq	0x1(%rax), %rsi
    000002f3: 	callq	_ZdlPvm@PLT # Offset: 755
.Ltmp2562:
    000002f8: 	leaq	DATAat0x57a39(%rip), %rsi
    000002ff: 	movq	%r12, %rdi
    00000302: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 770
    00000307: 	movq	0xa0(%rsp), %rdi
    0000030f: 	cmpq	%r13, %rdi
    00000312: 	je	.Ltmp2563 # Offset: 786
    00000314: 	movq	0xb0(%rsp), %rax
    0000031c: 	leaq	0x1(%rax), %rsi
    00000320: 	callq	_ZdlPvm@PLT # Offset: 800
.Ltmp2563:
    00000325: 	leaq	DATAat0x57a39(%rip), %rsi
    0000032c: 	movq	%r12, %rdi
    0000032f: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 815
    00000334: 	movq	0xa0(%rsp), %rdi
    0000033c: 	cmpq	%r13, %rdi
    0000033f: 	je	.Ltmp2564 # Offset: 831
    00000341: 	movq	0xb0(%rsp), %rax
    00000349: 	leaq	0x1(%rax), %rsi
    0000034d: 	callq	_ZdlPvm@PLT # Offset: 845
.Ltmp2564:
    00000352: 	leaq	DATAat0x57a39(%rip), %rsi
    00000359: 	movq	%r12, %rdi
    0000035c: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 860
    00000361: 	movq	0xa0(%rsp), %rdi
    00000369: 	cmpq	%r13, %rdi
    0000036c: 	je	.Ltmp2565 # Offset: 876
    0000036e: 	movq	0xb0(%rsp), %rax
    00000376: 	leaq	0x1(%rax), %rsi
    0000037a: 	callq	_ZdlPvm@PLT # Offset: 890
.Ltmp2565:
    0000037f: 	leaq	DATAat0x57a39(%rip), %rsi
    00000386: 	movq	%r12, %rdi
    00000389: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 905
    0000038e: 	movq	0xa0(%rsp), %rdi
    00000396: 	cmpq	%r13, %rdi
    00000399: 	je	.Ltmp2566 # Offset: 921
    0000039b: 	movq	0xb0(%rsp), %rax
    000003a3: 	leaq	0x1(%rax), %rsi
    000003a7: 	callq	_ZdlPvm@PLT # Offset: 935
.Ltmp2566:
    000003ac: 	leaq	DATAat0x57a39(%rip), %rsi
    000003b3: 	movq	%r12, %rdi
    000003b6: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 950
    000003bb: 	movq	0xa0(%rsp), %rdi
    000003c3: 	cmpq	%r13, %rdi
    000003c6: 	je	.Ltmp2567 # Offset: 966
    000003c8: 	movq	0xb0(%rsp), %rax
    000003d0: 	leaq	0x1(%rax), %rsi
    000003d4: 	callq	_ZdlPvm@PLT # Offset: 980
.Ltmp2567:
    000003d9: 	leaq	DATAat0x57a39(%rip), %rsi
    000003e0: 	movq	%r12, %rdi
    000003e3: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 995
    000003e8: 	movq	0xa0(%rsp), %rdi
    000003f0: 	cmpq	%r13, %rdi
    000003f3: 	je	.Ltmp2568 # Offset: 1011
    000003f5: 	movq	0xb0(%rsp), %rax
    000003fd: 	leaq	0x1(%rax), %rsi
    00000401: 	callq	_ZdlPvm@PLT # Offset: 1025
.Ltmp2568:
    00000406: 	leaq	DATAat0x57a39(%rip), %rsi
    0000040d: 	movq	%r12, %rdi
    00000410: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 1040
    00000415: 	movq	0xa0(%rsp), %rdi
    0000041d: 	cmpq	%r13, %rdi
    00000420: 	je	.Ltmp2569 # Offset: 1056
    00000422: 	movq	0xb0(%rsp), %rax
    0000042a: 	leaq	0x1(%rax), %rsi
    0000042e: 	callq	_ZdlPvm@PLT # Offset: 1070
.Ltmp2569:
    00000433: 	leaq	DATAat0x57a39(%rip), %rsi
    0000043a: 	movq	%r12, %rdi
    0000043d: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 1085
    00000442: 	movq	0xa0(%rsp), %rdi
    0000044a: 	cmpq	%r13, %rdi
    0000044d: 	je	.Ltmp2570 # Offset: 1101
    0000044f: 	movq	0xb0(%rsp), %rax
    00000457: 	leaq	0x1(%rax), %rsi
    0000045b: 	callq	_ZdlPvm@PLT # Offset: 1115
.Ltmp2570:
    00000460: 	leaq	DATAat0x57a39(%rip), %rsi
    00000467: 	movq	%r12, %rdi
    0000046a: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 1130
    0000046f: 	movq	0xa0(%rsp), %rdi
    00000477: 	cmpq	%r13, %rdi
    0000047a: 	je	.Ltmp2571 # Offset: 1146
    0000047c: 	movq	0xb0(%rsp), %rax
    00000484: 	leaq	0x1(%rax), %rsi
    00000488: 	callq	_ZdlPvm@PLT # Offset: 1160
.Ltmp2571:
    0000048d: 	leaq	DATAat0x571e0(%rip), %rdx
    00000494: 	movq	%r14, %rsi
    00000497: 	movq	%r12, %rdi
    0000049a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1178
    0000049f: 	callq	clock@PLT # Offset: 1183
    000004a4: 	movl	iterations(%rip), %ecx
    000004aa: 	movl	$0x0, (%rsp)
    000004b1: 	movq	%rax, start_time(%rip)
    000004b8: 	testl	%ecx, %ecx
    000004ba: 	jle	.Ltmp2572 # Offset: 1210
.Ltmp2575:
    000004c0: 	movq	%rbp, %rax
    000004c3: 	pxor	%xmm1, %xmm1
    000004c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2573:
    000004d0: 	movdqa	(%rax), %xmm0
    000004d4: 	addq	$0x10, %rax
    000004d8: 	psllw	$0x1, %xmm0
    000004dd: 	paddw	%xmm0, %xmm1
    000004e1: 	cmpq	%rax, %rbx
    000004e4: 	jne	.Ltmp2573 # Offset: 1252
    000004e6: 	movdqa	%xmm1, %xmm0
    000004ea: 	cvttsd2si	init_value(%rip), %eax
    000004f2: 	psrldq	$0x8, %xmm0
    000004f7: 	paddw	%xmm0, %xmm1
    000004fb: 	movdqa	%xmm1, %xmm0
    000004ff: 	psrldq	$0x4, %xmm0
    00000504: 	addl	%eax, %eax
    00000506: 	imulw	$0x1f40, %ax, %ax
    0000050b: 	paddw	%xmm0, %xmm1
    0000050f: 	movdqa	%xmm1, %xmm0
    00000513: 	psrldq	$0x2, %xmm0
    00000518: 	paddw	%xmm0, %xmm1
    0000051c: 	pextrw	$0x0, %xmm1, %edx
    00000521: 	cmpw	%dx, %ax
    00000524: 	je	.Ltmp2574 # Offset: 1316
    00000526: 	movl	current_test(%rip), %edx
    0000052c: 	leaq	DATAat0x571d0(%rip), %rsi
    00000533: 	movl	$0x1, %edi
    00000538: 	xorl	%eax, %eax
    0000053a: 	callq	__printf_chk@PLT # Offset: 1338
    0000053f: 	movl	iterations(%rip), %ecx
.Ltmp2574:
    00000545: 	addl	$0x1, (%rsp)
    00000549: 	movl	(%rsp), %eax
    0000054c: 	cmpl	%ecx, %eax
    0000054e: 	jl	.Ltmp2575 # Offset: 1358
.Ltmp2572:
    00000554: 	movq	%r12, %rsi
    00000557: 	movq	%r15, %rdi
    0000055a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1370
    0000055f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000566: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000056d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000574: 	je	.Ltmp2576 # Offset: 1396
.Ltmp2974:
    0000057a: 	movq	-0x20(%rax), %rdi
    0000057e: 	movq	%rdi, (%rsp)
    00000582: 	callq	clock@PLT # Offset: 1410
    00000587: 	movq	(%rsp), %rdi
    0000058b: 	pxor	%xmm0, %xmm0
    0000058f: 	movq	%rax, end_time(%rip)
    00000596: 	subq	start_time(%rip), %rax
    0000059d: 	cvtsi2sd	%rax, %xmm0
    000005a2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000005aa: 	callq	_Z13record_resultdPKc # Offset: 1450
    000005af: 	movq	0xa0(%rsp), %rdi
    000005b7: 	cmpq	%r13, %rdi
    000005ba: 	je	.Ltmp2577 # Offset: 1466
    000005bc: 	movq	0xb0(%rsp), %rax
    000005c4: 	leaq	0x1(%rax), %rsi
    000005c8: 	callq	_ZdlPvm@PLT # Offset: 1480
.Ltmp2577:
    000005cd: 	leaq	DATAat0x571f1(%rip), %rdx
    000005d4: 	movq	%r14, %rsi
    000005d7: 	movq	%r12, %rdi
    000005da: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1498
    000005df: 	callq	clock@PLT # Offset: 1503
    000005e4: 	movl	iterations(%rip), %ecx
    000005ea: 	movl	$0x0, (%rsp)
    000005f1: 	movq	%rax, start_time(%rip)
    000005f8: 	testl	%ecx, %ecx
    000005fa: 	jle	.Ltmp2578 # Offset: 1530
.Ltmp2581:
    00000600: 	movq	%rbp, %rax
    00000603: 	pxor	%xmm1, %xmm1
    00000607: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2579:
    00000610: 	movdqa	(%rax), %xmm0
    00000614: 	addq	$0x10, %rax
    00000618: 	psllw	$0x1, %xmm0
    0000061d: 	paddw	%xmm0, %xmm1
    00000621: 	cmpq	%rbx, %rax
    00000624: 	jne	.Ltmp2579 # Offset: 1572
    00000626: 	movdqa	%xmm1, %xmm0
    0000062a: 	cvttsd2si	init_value(%rip), %eax
    00000632: 	psrldq	$0x8, %xmm0
    00000637: 	paddw	%xmm0, %xmm1
    0000063b: 	movdqa	%xmm1, %xmm0
    0000063f: 	psrldq	$0x4, %xmm0
    00000644: 	imulw	$0x3e80, %ax, %ax
    00000649: 	paddw	%xmm0, %xmm1
    0000064d: 	movdqa	%xmm1, %xmm0
    00000651: 	psrldq	$0x2, %xmm0
    00000656: 	paddw	%xmm0, %xmm1
    0000065a: 	pextrw	$0x0, %xmm1, %edx
    0000065f: 	cmpw	%dx, %ax
    00000662: 	je	.Ltmp2580 # Offset: 1634
    00000664: 	movl	current_test(%rip), %edx
    0000066a: 	leaq	DATAat0x571d0(%rip), %rsi
    00000671: 	movl	$0x1, %edi
    00000676: 	xorl	%eax, %eax
    00000678: 	callq	__printf_chk@PLT # Offset: 1656
    0000067d: 	movl	iterations(%rip), %ecx
.Ltmp2580:
    00000683: 	addl	$0x1, (%rsp)
    00000687: 	movl	(%rsp), %eax
    0000068a: 	cmpl	%ecx, %eax
    0000068c: 	jl	.Ltmp2581 # Offset: 1676
.Ltmp2578:
    00000692: 	movq	%r12, %rsi
    00000695: 	movq	%r15, %rdi
    00000698: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1688
    0000069d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000006a4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000006ab: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000006b2: 	je	.Ltmp2582 # Offset: 1714
.Ltmp3031:
    000006b8: 	movq	-0x20(%rax), %rdi
    000006bc: 	movq	%rdi, (%rsp)
    000006c0: 	callq	clock@PLT # Offset: 1728
    000006c5: 	movq	(%rsp), %rdi
    000006c9: 	pxor	%xmm0, %xmm0
    000006cd: 	movq	%rax, end_time(%rip)
    000006d4: 	subq	start_time(%rip), %rax
    000006db: 	cvtsi2sd	%rax, %xmm0
    000006e0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000006e8: 	callq	_Z13record_resultdPKc # Offset: 1768
    000006ed: 	movq	0xa0(%rsp), %rdi
    000006f5: 	cmpq	%r13, %rdi
    000006f8: 	je	.Ltmp2583 # Offset: 1784
    000006fa: 	movq	0xb0(%rsp), %rax
    00000702: 	leaq	0x1(%rax), %rsi
    00000706: 	callq	_ZdlPvm@PLT # Offset: 1798
.Ltmp2583:
    0000070b: 	leaq	DATAat0x571fb(%rip), %rdx
    00000712: 	movq	%r14, %rsi
    00000715: 	movq	%r12, %rdi
    00000718: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1816
    0000071d: 	callq	clock@PLT # Offset: 1821
    00000722: 	movl	iterations(%rip), %ecx
    00000728: 	movl	$0x0, (%rsp)
    0000072f: 	movq	%rax, start_time(%rip)
    00000736: 	testl	%ecx, %ecx
    00000738: 	jle	.Ltmp2584 # Offset: 1848
    0000073e: 	nop # Size: 2
.Ltmp2587:
    00000740: 	movq	%rbp, %rax
    00000743: 	pxor	%xmm1, %xmm1
    00000747: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2585:
    00000750: 	movdqa	(%rax), %xmm0
    00000754: 	addq	$0x10, %rax
    00000758: 	psllw	$0x1, %xmm0
    0000075d: 	paddw	%xmm0, %xmm1
    00000761: 	cmpq	%rbx, %rax
    00000764: 	jne	.Ltmp2585 # Offset: 1892
    00000766: 	movdqa	%xmm1, %xmm0
    0000076a: 	cvttsd2si	init_value(%rip), %eax
    00000772: 	psrldq	$0x8, %xmm0
    00000777: 	paddw	%xmm0, %xmm1
    0000077b: 	movdqa	%xmm1, %xmm0
    0000077f: 	psrldq	$0x4, %xmm0
    00000784: 	imulw	$0x3e80, %ax, %ax
    00000789: 	paddw	%xmm0, %xmm1
    0000078d: 	movdqa	%xmm1, %xmm0
    00000791: 	psrldq	$0x2, %xmm0
    00000796: 	paddw	%xmm0, %xmm1
    0000079a: 	pextrw	$0x0, %xmm1, %edx
    0000079f: 	cmpw	%dx, %ax
    000007a2: 	je	.Ltmp2586 # Offset: 1954
    000007a4: 	movl	current_test(%rip), %edx
    000007aa: 	leaq	DATAat0x571d0(%rip), %rsi
    000007b1: 	movl	$0x1, %edi
    000007b6: 	xorl	%eax, %eax
    000007b8: 	callq	__printf_chk@PLT # Offset: 1976
    000007bd: 	movl	iterations(%rip), %ecx
.Ltmp2586:
    000007c3: 	addl	$0x1, (%rsp)
    000007c7: 	movl	(%rsp), %eax
    000007ca: 	cmpl	%ecx, %eax
    000007cc: 	jl	.Ltmp2587 # Offset: 1996
.Ltmp2584:
    000007d2: 	movq	%r12, %rsi
    000007d5: 	movq	%r15, %rdi
    000007d8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2008
    000007dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007e4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007eb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007f2: 	je	.Ltmp2588 # Offset: 2034
.Ltmp3030:
    000007f8: 	movq	-0x20(%rax), %rdi
    000007fc: 	movq	%rdi, (%rsp)
    00000800: 	callq	clock@PLT # Offset: 2048
    00000805: 	movq	(%rsp), %rdi
    00000809: 	pxor	%xmm0, %xmm0
    0000080d: 	movq	%rax, end_time(%rip)
    00000814: 	subq	start_time(%rip), %rax
    0000081b: 	cvtsi2sd	%rax, %xmm0
    00000820: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000828: 	callq	_Z13record_resultdPKc # Offset: 2088
    0000082d: 	movq	0xa0(%rsp), %rdi
    00000835: 	cmpq	%r13, %rdi
    00000838: 	je	.Ltmp2589 # Offset: 2104
    0000083a: 	movq	0xb0(%rsp), %rax
    00000842: 	leaq	0x1(%rax), %rsi
    00000846: 	callq	_ZdlPvm@PLT # Offset: 2118
.Ltmp2589:
    0000084b: 	leaq	DATAat0x57211(%rip), %rdx
    00000852: 	movq	%r14, %rsi
    00000855: 	movq	%r12, %rdi
    00000858: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2136
    0000085d: 	movq	%r12, %rcx
    00000860: 	movl	$0x2, %edx
    00000865: 	movl	$0x1f40, %esi
    0000086a: 	movq	%rbp, %rdi
    0000086d: 	callq	_Z14test_variable1Is24custom_multiply_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2157
    00000872: 	movq	0xa0(%rsp), %rdi
    0000087a: 	cmpq	%r13, %rdi
    0000087d: 	je	.Ltmp2590 # Offset: 2173
    0000087f: 	movq	0xb0(%rsp), %rax
    00000887: 	leaq	0x1(%rax), %rsi
    0000088b: 	callq	_ZdlPvm@PLT # Offset: 2187
.Ltmp2590:
    00000890: 	leaq	DATAat0x57229(%rip), %rdx
    00000897: 	movq	%r14, %rsi
    0000089a: 	movq	%r12, %rdi
    0000089d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2205
    000008a2: 	callq	clock@PLT # Offset: 2210
    000008a7: 	movl	iterations(%rip), %ecx
    000008ad: 	movl	$0x0, (%rsp)
    000008b4: 	movq	%rax, start_time(%rip)
    000008bb: 	testl	%ecx, %ecx
    000008bd: 	jle	.Ltmp2591 # Offset: 2237
    000008c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2594:
    000008c8: 	movq	%rbp, %rax
    000008cb: 	pxor	%xmm1, %xmm1
    000008cf: 	nop # Size: 1
.Ltmp2592:
    000008d0: 	movdqa	(%rax), %xmm0
    000008d4: 	addq	$0x10, %rax
    000008d8: 	psllw	$0x1, %xmm0
    000008dd: 	paddw	%xmm0, %xmm1
    000008e1: 	cmpq	%rax, %rbx
    000008e4: 	jne	.Ltmp2592 # Offset: 2276
    000008e6: 	movdqa	%xmm1, %xmm0
    000008ea: 	cvttsd2si	init_value(%rip), %eax
    000008f2: 	psrldq	$0x8, %xmm0
    000008f7: 	paddw	%xmm0, %xmm1
    000008fb: 	movdqa	%xmm1, %xmm0
    000008ff: 	psrldq	$0x4, %xmm0
    00000904: 	imulw	$0x3e80, %ax, %ax
    00000909: 	paddw	%xmm0, %xmm1
    0000090d: 	movdqa	%xmm1, %xmm0
    00000911: 	psrldq	$0x2, %xmm0
    00000916: 	paddw	%xmm0, %xmm1
    0000091a: 	pextrw	$0x0, %xmm1, %edx
    0000091f: 	cmpw	%dx, %ax
    00000922: 	je	.Ltmp2593 # Offset: 2338
    00000924: 	movl	current_test(%rip), %edx
    0000092a: 	leaq	DATAat0x571d0(%rip), %rsi
    00000931: 	movl	$0x1, %edi
    00000936: 	xorl	%eax, %eax
    00000938: 	callq	__printf_chk@PLT # Offset: 2360
    0000093d: 	movl	iterations(%rip), %ecx
.Ltmp2593:
    00000943: 	addl	$0x1, (%rsp)
    00000947: 	movl	(%rsp), %eax
    0000094a: 	cmpl	%ecx, %eax
    0000094c: 	jl	.Ltmp2594 # Offset: 2380
.Ltmp2591:
    00000952: 	movq	%r12, %rsi
    00000955: 	movq	%r15, %rdi
    00000958: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2392
    0000095d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000964: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000096b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000972: 	je	.Ltmp2595 # Offset: 2418
.Ltmp3029:
    00000978: 	movq	-0x20(%rax), %rdi
    0000097c: 	movq	%rdi, (%rsp)
    00000980: 	callq	clock@PLT # Offset: 2432
    00000985: 	movq	(%rsp), %rdi
    00000989: 	pxor	%xmm0, %xmm0
    0000098d: 	movq	%rax, end_time(%rip)
    00000994: 	subq	start_time(%rip), %rax
    0000099b: 	cvtsi2sd	%rax, %xmm0
    000009a0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000009a8: 	callq	_Z13record_resultdPKc # Offset: 2472
    000009ad: 	movq	0xa0(%rsp), %rdi
    000009b5: 	cmpq	%r13, %rdi
    000009b8: 	je	.Ltmp2596 # Offset: 2488
    000009ba: 	movq	0xb0(%rsp), %rax
    000009c2: 	leaq	0x1(%rax), %rsi
    000009c6: 	callq	_ZdlPvm@PLT # Offset: 2502
.Ltmp2596:
    000009cb: 	leaq	DATAat0x57241(%rip), %rdx
    000009d2: 	movq	%r14, %rsi
    000009d5: 	movq	%r12, %rdi
    000009d8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2520
    000009dd: 	callq	clock@PLT # Offset: 2525
    000009e2: 	movl	iterations(%rip), %ecx
    000009e8: 	movl	$0x0, (%rsp)
    000009ef: 	movq	%rax, start_time(%rip)
    000009f6: 	testl	%ecx, %ecx
    000009f8: 	jle	.Ltmp2597 # Offset: 2552
    000009fe: 	nop # Size: 2
.Ltmp2600:
    00000a00: 	movq	%rbp, %rax
    00000a03: 	pxor	%xmm2, %xmm2
    00000a07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2598:
    00000a10: 	movdqa	(%rax), %xmm0
    00000a14: 	addq	$0x10, %rax
    00000a18: 	movdqa	%xmm0, %xmm1
    00000a1c: 	psllw	$0x6, %xmm1
    00000a21: 	paddw	%xmm2, %xmm1
    00000a25: 	movdqa	%xmm0, %xmm2
    00000a29: 	psllw	$0x1, %xmm2
    00000a2e: 	paddw	%xmm2, %xmm0
    00000a32: 	movdqa	%xmm0, %xmm3
    00000a36: 	psllw	$0x2, %xmm0
    00000a3b: 	psllw	$0x4, %xmm3
    00000a40: 	paddw	%xmm2, %xmm0
    00000a44: 	psubw	%xmm3, %xmm1
    00000a48: 	movdqa	%xmm1, %xmm2
    00000a4c: 	psubw	%xmm0, %xmm2
    00000a50: 	cmpq	%rbx, %rax
    00000a53: 	jne	.Ltmp2598 # Offset: 2643
    00000a55: 	cvttsd2si	init_value(%rip), %edx
    00000a5d: 	movdqa	%xmm2, %xmm0
    00000a61: 	psrldq	$0x8, %xmm0
    00000a66: 	paddw	%xmm0, %xmm2
    00000a6a: 	movdqa	%xmm2, %xmm0
    00000a6e: 	leal	(%rdx,%rdx), %edi
    00000a71: 	psrldq	$0x4, %xmm0
    00000a76: 	movl	%edx, %eax
    00000a78: 	leal	(%rdi,%rdx), %esi
    00000a7b: 	shll	$0x6, %eax
    00000a7e: 	paddw	%xmm0, %xmm2
    00000a82: 	shll	$0x4, %esi
    00000a85: 	movdqa	%xmm2, %xmm0
    00000a89: 	leal	(%rsi,%rdx,8), %esi
    00000a8c: 	psrldq	$0x2, %xmm0
    00000a91: 	shll	$0x2, %edx
    00000a94: 	subl	%esi, %eax
    00000a96: 	paddw	%xmm0, %xmm2
    00000a9a: 	subl	%edx, %eax
    00000a9c: 	pextrw	$0x0, %xmm2, %edx
    00000aa1: 	subl	%edi, %eax
    00000aa3: 	imulw	$0x1f40, %ax, %ax
    00000aa8: 	cmpw	%dx, %ax
    00000aab: 	je	.Ltmp2599 # Offset: 2731
    00000aad: 	movl	current_test(%rip), %edx
    00000ab3: 	leaq	DATAat0x571d0(%rip), %rsi
    00000aba: 	movl	$0x1, %edi
    00000abf: 	xorl	%eax, %eax
    00000ac1: 	callq	__printf_chk@PLT # Offset: 2753
    00000ac6: 	movl	iterations(%rip), %ecx
.Ltmp2599:
    00000acc: 	addl	$0x1, (%rsp)
    00000ad0: 	movl	(%rsp), %eax
    00000ad3: 	cmpl	%ecx, %eax
    00000ad5: 	jl	.Ltmp2600 # Offset: 2773
.Ltmp2597:
    00000adb: 	movq	%r12, %rsi
    00000ade: 	movq	%r15, %rdi
    00000ae1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2785
    00000ae6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000aed: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000af4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000afb: 	je	.Ltmp2601 # Offset: 2811
.Ltmp3028:
    00000b01: 	movq	-0x20(%rax), %rdi
    00000b05: 	movq	%rdi, (%rsp)
    00000b09: 	callq	clock@PLT # Offset: 2825
    00000b0e: 	movq	(%rsp), %rdi
    00000b12: 	pxor	%xmm0, %xmm0
    00000b16: 	movq	%rax, end_time(%rip)
    00000b1d: 	subq	start_time(%rip), %rax
    00000b24: 	cvtsi2sd	%rax, %xmm0
    00000b29: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000b31: 	callq	_Z13record_resultdPKc # Offset: 2865
    00000b36: 	movq	0xa0(%rsp), %rdi
    00000b3e: 	cmpq	%r13, %rdi
    00000b41: 	je	.Ltmp2602 # Offset: 2881
    00000b43: 	movq	0xb0(%rsp), %rax
    00000b4b: 	leaq	0x1(%rax), %rsi
    00000b4f: 	callq	_ZdlPvm@PLT # Offset: 2895
.Ltmp2602:
    00000b54: 	leaq	DATAat0x57251(%rip), %rdx
    00000b5b: 	movq	%r14, %rsi
    00000b5e: 	movq	%r12, %rdi
    00000b61: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2913
    00000b66: 	callq	clock@PLT # Offset: 2918
    00000b6b: 	movl	iterations(%rip), %ecx
    00000b71: 	movl	$0x0, (%rsp)
    00000b78: 	movq	%rax, start_time(%rip)
    00000b7f: 	testl	%ecx, %ecx
    00000b81: 	jle	.Ltmp2603 # Offset: 2945
    00000b87: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2606:
    00000b90: 	movq	%rbp, %rax
    00000b93: 	pxor	%xmm1, %xmm1
    00000b97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2604:
    00000ba0: 	movdqa	(%rax), %xmm0
    00000ba4: 	addq	$0x10, %rax
    00000ba8: 	psllw	$0x3, %xmm0
    00000bad: 	paddw	%xmm0, %xmm1
    00000bb1: 	cmpq	%rax, %rbx
    00000bb4: 	jne	.Ltmp2604 # Offset: 2996
    00000bb6: 	movdqa	%xmm1, %xmm0
    00000bba: 	cvttsd2si	init_value(%rip), %eax
    00000bc2: 	psrldq	$0x8, %xmm0
    00000bc7: 	paddw	%xmm0, %xmm1
    00000bcb: 	movdqa	%xmm1, %xmm0
    00000bcf: 	psrldq	$0x4, %xmm0
    00000bd4: 	shll	$0x3, %eax
    00000bd7: 	imulw	$0x1f40, %ax, %ax
    00000bdc: 	paddw	%xmm0, %xmm1
    00000be0: 	movdqa	%xmm1, %xmm0
    00000be4: 	psrldq	$0x2, %xmm0
    00000be9: 	paddw	%xmm0, %xmm1
    00000bed: 	pextrw	$0x0, %xmm1, %edx
    00000bf2: 	cmpw	%dx, %ax
    00000bf5: 	je	.Ltmp2605 # Offset: 3061
    00000bf7: 	movl	current_test(%rip), %edx
    00000bfd: 	leaq	DATAat0x571d0(%rip), %rsi
    00000c04: 	movl	$0x1, %edi
    00000c09: 	xorl	%eax, %eax
    00000c0b: 	callq	__printf_chk@PLT # Offset: 3083
    00000c10: 	movl	iterations(%rip), %ecx
.Ltmp2605:
    00000c16: 	addl	$0x1, (%rsp)
    00000c1a: 	movl	(%rsp), %eax
    00000c1d: 	cmpl	%ecx, %eax
    00000c1f: 	jl	.Ltmp2606 # Offset: 3103
.Ltmp2603:
    00000c25: 	movq	%r12, %rsi
    00000c28: 	movq	%r15, %rdi
    00000c2b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3115
    00000c30: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c37: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c3e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c45: 	je	.Ltmp2607 # Offset: 3141
.Ltmp3027:
    00000c4b: 	movq	-0x20(%rax), %rdi
    00000c4f: 	movq	%rdi, (%rsp)
    00000c53: 	callq	clock@PLT # Offset: 3155
    00000c58: 	movq	(%rsp), %rdi
    00000c5c: 	pxor	%xmm0, %xmm0
    00000c60: 	movq	%rax, end_time(%rip)
    00000c67: 	subq	start_time(%rip), %rax
    00000c6e: 	cvtsi2sd	%rax, %xmm0
    00000c73: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000c7b: 	callq	_Z13record_resultdPKc # Offset: 3195
    00000c80: 	movq	0xa0(%rsp), %rdi
    00000c88: 	cmpq	%r13, %rdi
    00000c8b: 	je	.Ltmp2608 # Offset: 3211
    00000c8d: 	movq	0xb0(%rsp), %rax
    00000c95: 	leaq	0x1(%rax), %rsi
    00000c99: 	callq	_ZdlPvm@PLT # Offset: 3225
.Ltmp2608:
    00000c9e: 	leaq	DATAat0x57262(%rip), %rdx
    00000ca5: 	movq	%r14, %rsi
    00000ca8: 	movq	%r12, %rdi
    00000cab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3243
    00000cb0: 	movq	%r12, %rcx
    00000cb3: 	movl	$0x8, %edx
    00000cb8: 	movl	$0x1f40, %esi
    00000cbd: 	movq	%rbp, %rdi
    00000cc0: 	callq	_Z14test_variable1Is24custom_multiply_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3264
    00000cc5: 	movq	0xa0(%rsp), %rdi
    00000ccd: 	cmpq	%r13, %rdi
    00000cd0: 	je	.Ltmp2609 # Offset: 3280
    00000cd2: 	movq	0xb0(%rsp), %rax
    00000cda: 	leaq	0x1(%rax), %rsi
    00000cde: 	callq	_ZdlPvm@PLT # Offset: 3294
.Ltmp2609:
    00000ce3: 	leaq	DATAat0x5727a(%rip), %rdx
    00000cea: 	movq	%r14, %rsi
    00000ced: 	movq	%r12, %rdi
    00000cf0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3312
    00000cf5: 	callq	clock@PLT # Offset: 3317
    00000cfa: 	movl	iterations(%rip), %ecx
    00000d00: 	movl	$0x0, (%rsp)
    00000d07: 	movq	%rax, start_time(%rip)
    00000d0e: 	testl	%ecx, %ecx
    00000d10: 	jle	.Ltmp2610 # Offset: 3344
    00000d16: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2613:
    00000d20: 	movq	%rbp, %rax
    00000d23: 	pxor	%xmm1, %xmm1
    00000d27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2611:
    00000d30: 	movdqa	(%rax), %xmm0
    00000d34: 	addq	$0x10, %rax
    00000d38: 	psllw	$0x3, %xmm0
    00000d3d: 	paddw	%xmm0, %xmm1
    00000d41: 	cmpq	%rbx, %rax
    00000d44: 	jne	.Ltmp2611 # Offset: 3396
    00000d46: 	movdqa	%xmm1, %xmm0
    00000d4a: 	cvttsd2si	init_value(%rip), %eax
    00000d52: 	psrldq	$0x8, %xmm0
    00000d57: 	paddw	%xmm0, %xmm1
    00000d5b: 	movdqa	%xmm1, %xmm0
    00000d5f: 	psrldq	$0x4, %xmm0
    00000d64: 	leal	(,%rax,4), %edx
    00000d6b: 	paddw	%xmm0, %xmm1
    00000d6f: 	subl	%edx, %eax
    00000d71: 	movdqa	%xmm1, %xmm0
    00000d75: 	shll	$0x9, %eax
    00000d78: 	psrldq	$0x2, %xmm0
    00000d7d: 	paddw	%xmm0, %xmm1
    00000d81: 	pextrw	$0x0, %xmm1, %edx
    00000d86: 	cmpw	%dx, %ax
    00000d89: 	je	.Ltmp2612 # Offset: 3465
    00000d8b: 	movl	current_test(%rip), %edx
    00000d91: 	leaq	DATAat0x571d0(%rip), %rsi
    00000d98: 	movl	$0x1, %edi
    00000d9d: 	xorl	%eax, %eax
    00000d9f: 	callq	__printf_chk@PLT # Offset: 3487
    00000da4: 	movl	iterations(%rip), %ecx
.Ltmp2612:
    00000daa: 	addl	$0x1, (%rsp)
    00000dae: 	movl	(%rsp), %eax
    00000db1: 	cmpl	%ecx, %eax
    00000db3: 	jl	.Ltmp2613 # Offset: 3507
.Ltmp2610:
    00000db9: 	movq	%r12, %rsi
    00000dbc: 	movq	%r15, %rdi
    00000dbf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3519
    00000dc4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000dcb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000dd2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000dd9: 	je	.Ltmp2614 # Offset: 3545
.Ltmp3026:
    00000ddf: 	movq	-0x20(%rax), %rdi
    00000de3: 	movq	%rdi, (%rsp)
    00000de7: 	callq	clock@PLT # Offset: 3559
    00000dec: 	movq	(%rsp), %rdi
    00000df0: 	pxor	%xmm0, %xmm0
    00000df4: 	movq	%rax, end_time(%rip)
    00000dfb: 	subq	start_time(%rip), %rax
    00000e02: 	cvtsi2sd	%rax, %xmm0
    00000e07: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000e0f: 	callq	_Z13record_resultdPKc # Offset: 3599
    00000e14: 	movq	0xa0(%rsp), %rdi
    00000e1c: 	cmpq	%r13, %rdi
    00000e1f: 	je	.Ltmp2615 # Offset: 3615
    00000e21: 	movq	0xb0(%rsp), %rax
    00000e29: 	leaq	0x1(%rax), %rsi
    00000e2d: 	callq	_ZdlPvm@PLT # Offset: 3629
.Ltmp2615:
    00000e32: 	leaq	DATAat0x57292(%rip), %rdx
    00000e39: 	movq	%r14, %rsi
    00000e3c: 	movq	%r12, %rdi
    00000e3f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3647
    00000e44: 	callq	clock@PLT # Offset: 3652
    00000e49: 	movl	iterations(%rip), %ecx
    00000e4f: 	movl	$0x0, (%rsp)
    00000e56: 	movq	%rax, start_time(%rip)
    00000e5d: 	testl	%ecx, %ecx
    00000e5f: 	jle	.Ltmp2616 # Offset: 3679
    00000e65: 	nopl	(%rax) # Size: 3
.Ltmp2619:
    00000e68: 	movq	%rbp, %rax
    00000e6b: 	pxor	%xmm1, %xmm1
    00000e6f: 	nop # Size: 1
.Ltmp2617:
    00000e70: 	movdqa	(%rax), %xmm0
    00000e74: 	addq	$0x10, %rax
    00000e78: 	psllw	$0x6, %xmm0
    00000e7d: 	paddw	%xmm0, %xmm1
    00000e81: 	cmpq	%rbx, %rax
    00000e84: 	jne	.Ltmp2617 # Offset: 3716
    00000e86: 	movdqa	%xmm1, %xmm0
    00000e8a: 	cvttsd2si	init_value(%rip), %eax
    00000e92: 	psrldq	$0x8, %xmm0
    00000e97: 	paddw	%xmm0, %xmm1
    00000e9b: 	movdqa	%xmm1, %xmm0
    00000e9f: 	psrldq	$0x4, %xmm0
    00000ea4: 	shll	$0x6, %eax
    00000ea7: 	imulw	$0x1f40, %ax, %ax
    00000eac: 	paddw	%xmm0, %xmm1
    00000eb0: 	movdqa	%xmm1, %xmm0
    00000eb4: 	psrldq	$0x2, %xmm0
    00000eb9: 	paddw	%xmm0, %xmm1
    00000ebd: 	pextrw	$0x0, %xmm1, %edx
    00000ec2: 	cmpw	%dx, %ax
    00000ec5: 	je	.Ltmp2618 # Offset: 3781
    00000ec7: 	movl	current_test(%rip), %edx
    00000ecd: 	leaq	DATAat0x571d0(%rip), %rsi
    00000ed4: 	movl	$0x1, %edi
    00000ed9: 	xorl	%eax, %eax
    00000edb: 	callq	__printf_chk@PLT # Offset: 3803
    00000ee0: 	movl	iterations(%rip), %ecx
.Ltmp2618:
    00000ee6: 	addl	$0x1, (%rsp)
    00000eea: 	movl	(%rsp), %eax
    00000eed: 	cmpl	%ecx, %eax
    00000eef: 	jl	.Ltmp2619 # Offset: 3823
.Ltmp2616:
    00000ef5: 	movq	%r12, %rsi
    00000ef8: 	movq	%r15, %rdi
    00000efb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3835
    00000f00: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f07: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f0e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f15: 	je	.Ltmp2620 # Offset: 3861
.Ltmp3025:
    00000f1b: 	movq	-0x20(%rax), %rdi
    00000f1f: 	movq	%rdi, (%rsp)
    00000f23: 	callq	clock@PLT # Offset: 3875
    00000f28: 	movq	(%rsp), %rdi
    00000f2c: 	pxor	%xmm0, %xmm0
    00000f30: 	movq	%rax, end_time(%rip)
    00000f37: 	subq	start_time(%rip), %rax
    00000f3e: 	cvtsi2sd	%rax, %xmm0
    00000f43: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000f4b: 	callq	_Z13record_resultdPKc # Offset: 3915
    00000f50: 	movq	0xa0(%rsp), %rdi
    00000f58: 	cmpq	%r13, %rdi
    00000f5b: 	je	.Ltmp2621 # Offset: 3931
    00000f5d: 	movq	0xb0(%rsp), %rax
    00000f65: 	leaq	0x1(%rax), %rsi
    00000f69: 	callq	_ZdlPvm@PLT # Offset: 3945
.Ltmp2621:
    00000f6e: 	leaq	DATAat0x572a3(%rip), %rdx
    00000f75: 	movq	%r14, %rsi
    00000f78: 	movq	%r12, %rdi
    00000f7b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3963
    00000f80: 	movq	%r12, %rcx
    00000f83: 	movl	$0x40, %edx
    00000f88: 	movl	$0x1f40, %esi
    00000f8d: 	movq	%rbp, %rdi
    00000f90: 	callq	_Z14test_variable1Is24custom_multiply_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3984
    00000f95: 	movq	0xa0(%rsp), %rdi
    00000f9d: 	cmpq	%r13, %rdi
    00000fa0: 	je	.Ltmp2622 # Offset: 4000
    00000fa2: 	movq	0xb0(%rsp), %rax
    00000faa: 	leaq	0x1(%rax), %rsi
    00000fae: 	callq	_ZdlPvm@PLT # Offset: 4014
.Ltmp2622:
    00000fb3: 	leaq	DATAat0x572bc(%rip), %rdx
    00000fba: 	movq	%r14, %rsi
    00000fbd: 	movq	%r12, %rdi
    00000fc0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4032
    00000fc5: 	callq	clock@PLT # Offset: 4037
    00000fca: 	movl	iterations(%rip), %ecx
    00000fd0: 	movl	$0x0, (%rsp)
    00000fd7: 	movq	%rax, start_time(%rip)
    00000fde: 	testl	%ecx, %ecx
    00000fe0: 	jle	.Ltmp2623 # Offset: 4064
    00000fe6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2626:
    00000ff0: 	movq	%rbp, %rax
    00000ff3: 	pxor	%xmm1, %xmm1
    00000ff7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2624:
    00001000: 	movdqa	(%rax), %xmm0
    00001004: 	addq	$0x10, %rax
    00001008: 	psllw	$0x6, %xmm0
    0000100d: 	paddw	%xmm0, %xmm1
    00001011: 	cmpq	%rax, %rbx
    00001014: 	jne	.Ltmp2624 # Offset: 4116
    00001016: 	movdqa	%xmm1, %xmm0
    0000101a: 	cvttsd2si	init_value(%rip), %eax
    00001022: 	psrldq	$0x8, %xmm0
    00001027: 	paddw	%xmm0, %xmm1
    0000102b: 	movdqa	%xmm1, %xmm0
    0000102f: 	psrldq	$0x4, %xmm0
    00001034: 	leal	(,%rax,4), %edx
    0000103b: 	paddw	%xmm0, %xmm1
    0000103f: 	subl	%edx, %eax
    00001041: 	movdqa	%xmm1, %xmm0
    00001045: 	shll	$0xc, %eax
    00001048: 	psrldq	$0x2, %xmm0
    0000104d: 	paddw	%xmm0, %xmm1
    00001051: 	pextrw	$0x0, %xmm1, %edx
    00001056: 	cmpw	%dx, %ax
    00001059: 	je	.Ltmp2625 # Offset: 4185
    0000105b: 	movl	current_test(%rip), %edx
    00001061: 	leaq	DATAat0x571d0(%rip), %rsi
    00001068: 	movl	$0x1, %edi
    0000106d: 	xorl	%eax, %eax
    0000106f: 	callq	__printf_chk@PLT # Offset: 4207
    00001074: 	movl	iterations(%rip), %ecx
.Ltmp2625:
    0000107a: 	addl	$0x1, (%rsp)
    0000107e: 	movl	(%rsp), %eax
    00001081: 	cmpl	%ecx, %eax
    00001083: 	jl	.Ltmp2626 # Offset: 4227
.Ltmp2623:
    00001089: 	movq	%r12, %rsi
    0000108c: 	movq	%r15, %rdi
    0000108f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4239
    00001094: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000109b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000010a2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010a9: 	je	.Ltmp2627 # Offset: 4265
.Ltmp3024:
    000010af: 	movq	-0x20(%rax), %rdi
    000010b3: 	movq	%rdi, (%rsp)
    000010b7: 	callq	clock@PLT # Offset: 4279
    000010bc: 	movq	(%rsp), %rdi
    000010c0: 	pxor	%xmm0, %xmm0
    000010c4: 	movq	%rax, end_time(%rip)
    000010cb: 	subq	start_time(%rip), %rax
    000010d2: 	cvtsi2sd	%rax, %xmm0
    000010d7: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000010df: 	callq	_Z13record_resultdPKc # Offset: 4319
    000010e4: 	movq	0xa0(%rsp), %rdi
    000010ec: 	cmpq	%r13, %rdi
    000010ef: 	je	.Ltmp2628 # Offset: 4335
    000010f1: 	movq	0xb0(%rsp), %rax
    000010f9: 	leaq	0x1(%rax), %rsi
    000010fd: 	callq	_ZdlPvm@PLT # Offset: 4349
.Ltmp2628:
    00001102: 	leaq	DATAat0x572d5(%rip), %rdx
    00001109: 	movq	%r14, %rsi
    0000110c: 	movq	%r12, %rdi
    0000110f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4367
    00001114: 	movq	%r12, %rcx
    00001117: 	movl	$0x2a, %edx
    0000111c: 	movl	$0x1f40, %esi
    00001121: 	movq	%rbp, %rdi
    00001124: 	callq	_Z14test_variable1Is24custom_multiply_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4388
    00001129: 	movq	0xa0(%rsp), %rdi
    00001131: 	cmpq	%r13, %rdi
    00001134: 	je	.Ltmp2629 # Offset: 4404
    00001136: 	movq	0xb0(%rsp), %rax
    0000113e: 	leaq	0x1(%rax), %rsi
    00001142: 	callq	_ZdlPvm@PLT # Offset: 4418
.Ltmp2629:
    00001147: 	leaq	DATAat0x572ee(%rip), %rdx
    0000114e: 	movq	%r14, %rsi
    00001151: 	movq	%r12, %rdi
    00001154: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4436
    00001159: 	callq	clock@PLT # Offset: 4441
    0000115e: 	movl	iterations(%rip), %ecx
    00001164: 	movl	$0x0, (%rsp)
    0000116b: 	movq	%rax, start_time(%rip)
    00001172: 	testl	%ecx, %ecx
    00001174: 	jle	.Ltmp2630 # Offset: 4468
    0000117a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2633:
    00001180: 	movq	%rbp, %rax
    00001183: 	pxor	%xmm2, %xmm2
    00001187: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2631:
    00001190: 	movdqa	(%rax), %xmm1
    00001194: 	addq	$0x10, %rax
    00001198: 	movdqa	%xmm1, %xmm0
    0000119c: 	psllw	$0x2, %xmm0
    000011a1: 	paddw	%xmm1, %xmm0
    000011a5: 	psllw	$0x2, %xmm0
    000011aa: 	paddw	%xmm1, %xmm0
    000011ae: 	psllw	$0x1, %xmm0
    000011b3: 	paddw	%xmm0, %xmm2
    000011b7: 	cmpq	%rbx, %rax
    000011ba: 	jne	.Ltmp2631 # Offset: 4538
    000011bc: 	movdqa	%xmm2, %xmm0
    000011c0: 	cvttsd2si	init_value(%rip), %edx
    000011c8: 	psrldq	$0x8, %xmm0
    000011cd: 	paddw	%xmm0, %xmm2
    000011d1: 	movdqa	%xmm2, %xmm0
    000011d5: 	psrldq	$0x4, %xmm0
    000011da: 	movl	%edx, %eax
    000011dc: 	paddw	%xmm0, %xmm2
    000011e0: 	shll	$0x6, %eax
    000011e3: 	movdqa	%xmm2, %xmm0
    000011e7: 	addl	%edx, %eax
    000011e9: 	psrldq	$0x2, %xmm0
    000011ee: 	shll	$0x7, %eax
    000011f1: 	paddw	%xmm0, %xmm2
    000011f5: 	pextrw	$0x0, %xmm2, %edx
    000011fa: 	cmpw	%dx, %ax
    000011fd: 	je	.Ltmp2632 # Offset: 4605
    000011ff: 	movl	current_test(%rip), %edx
    00001205: 	leaq	DATAat0x571d0(%rip), %rsi
    0000120c: 	movl	$0x1, %edi
    00001211: 	xorl	%eax, %eax
    00001213: 	callq	__printf_chk@PLT # Offset: 4627
    00001218: 	movl	iterations(%rip), %ecx
.Ltmp2632:
    0000121e: 	addl	$0x1, (%rsp)
    00001222: 	movl	(%rsp), %eax
    00001225: 	cmpl	%ecx, %eax
    00001227: 	jl	.Ltmp2633 # Offset: 4647
.Ltmp2630:
    0000122d: 	movq	%r12, %rsi
    00001230: 	movq	%r15, %rdi
    00001233: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4659
    00001238: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000123f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001246: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000124d: 	je	.Ltmp2634 # Offset: 4685
.Ltmp3023:
    00001253: 	movq	-0x20(%rax), %rdi
    00001257: 	movq	%rdi, (%rsp)
    0000125b: 	callq	clock@PLT # Offset: 4699
    00001260: 	movq	(%rsp), %rdi
    00001264: 	pxor	%xmm0, %xmm0
    00001268: 	movq	%rax, end_time(%rip)
    0000126f: 	subq	start_time(%rip), %rax
    00001276: 	cvtsi2sd	%rax, %xmm0
    0000127b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001283: 	callq	_Z13record_resultdPKc # Offset: 4739
    00001288: 	movq	0xa0(%rsp), %rdi
    00001290: 	cmpq	%r13, %rdi
    00001293: 	je	.Ltmp2635 # Offset: 4755
    00001295: 	movq	0xb0(%rsp), %rax
    0000129d: 	leaq	0x1(%rax), %rsi
    000012a1: 	callq	_ZdlPvm@PLT # Offset: 4769
.Ltmp2635:
    000012a6: 	leaq	DATAat0x57307(%rip), %rdx
    000012ad: 	movq	%r14, %rsi
    000012b0: 	movq	%r12, %rdi
    000012b3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4787
    000012b8: 	callq	clock@PLT # Offset: 4792
    000012bd: 	movl	iterations(%rip), %ecx
    000012c3: 	movl	$0x0, (%rsp)
    000012ca: 	movq	%rax, start_time(%rip)
    000012d1: 	testl	%ecx, %ecx
    000012d3: 	jle	.Ltmp2636 # Offset: 4819
    000012d9: 	nopl	(%rax) # Size: 7
.Ltmp2639:
    000012e0: 	movq	%rbp, %rax
    000012e3: 	pxor	%xmm2, %xmm2
    000012e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2637:
    000012f0: 	movdqa	(%rax), %xmm1
    000012f4: 	addq	$0x10, %rax
    000012f8: 	movdqa	%xmm1, %xmm0
    000012fc: 	psllw	$0x2, %xmm0
    00001301: 	movdqa	%xmm0, %xmm3
    00001305: 	paddw	%xmm1, %xmm3
    00001309: 	psllw	$0x1, %xmm1
    0000130e: 	movdqa	%xmm3, %xmm4
    00001312: 	psllw	$0x3, %xmm3
    00001317: 	psubw	%xmm1, %xmm2
    0000131b: 	psllw	$0x4, %xmm4
    00001320: 	paddw	%xmm4, %xmm0
    00001324: 	psubw	%xmm3, %xmm0
    00001328: 	paddw	%xmm0, %xmm2
    0000132c: 	cmpq	%rbx, %rax
    0000132f: 	jne	.Ltmp2637 # Offset: 4911
    00001331: 	cvttsd2si	init_value(%rip), %edx
    00001339: 	movdqa	%xmm2, %xmm0
    0000133d: 	psrldq	$0x8, %xmm0
    00001342: 	paddw	%xmm0, %xmm2
    00001346: 	movdqa	%xmm2, %xmm0
    0000134a: 	leal	(,%rdx,4), %eax
    00001351: 	psrldq	$0x4, %xmm0
    00001356: 	leal	(%rax,%rdx), %esi
    00001359: 	paddw	%xmm0, %xmm2
    0000135d: 	shll	$0x4, %esi
    00001360: 	movdqa	%xmm2, %xmm0
    00001364: 	addl	%esi, %eax
    00001366: 	psrldq	$0x2, %xmm0
    0000136b: 	movl	%edx, %esi
    0000136d: 	shll	$0x5, %esi
    00001370: 	paddw	%xmm0, %xmm2
    00001374: 	subl	%esi, %eax
    00001376: 	leal	(,%rdx,8), %esi
    0000137d: 	addl	%edx, %edx
    0000137f: 	subl	%esi, %eax
    00001381: 	subl	%edx, %eax
    00001383: 	pextrw	$0x0, %xmm2, %edx
    00001388: 	imulw	$0x1f40, %ax, %ax
    0000138d: 	cmpw	%dx, %ax
    00001390: 	je	.Ltmp2638 # Offset: 5008
    00001392: 	movl	current_test(%rip), %edx
    00001398: 	leaq	DATAat0x571d0(%rip), %rsi
    0000139f: 	movl	$0x1, %edi
    000013a4: 	xorl	%eax, %eax
    000013a6: 	callq	__printf_chk@PLT # Offset: 5030
    000013ab: 	movl	iterations(%rip), %ecx
.Ltmp2638:
    000013b1: 	addl	$0x1, (%rsp)
    000013b5: 	movl	(%rsp), %eax
    000013b8: 	cmpl	%ecx, %eax
    000013ba: 	jl	.Ltmp2639 # Offset: 5050
.Ltmp2636:
    000013c0: 	movq	%r12, %rsi
    000013c3: 	movq	%r15, %rdi
    000013c6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5062
    000013cb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013d2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000013d9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013e0: 	je	.Ltmp2640 # Offset: 5088
.Ltmp3022:
    000013e6: 	movq	-0x20(%rax), %rdi
    000013ea: 	movq	%rdi, (%rsp)
    000013ee: 	callq	clock@PLT # Offset: 5102
    000013f3: 	movq	(%rsp), %rdi
    000013f7: 	pxor	%xmm0, %xmm0
    000013fb: 	movq	%rax, end_time(%rip)
    00001402: 	subq	start_time(%rip), %rax
    00001409: 	cvtsi2sd	%rax, %xmm0
    0000140e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001416: 	callq	_Z13record_resultdPKc # Offset: 5142
    0000141b: 	movq	0xa0(%rsp), %rdi
    00001423: 	cmpq	%r13, %rdi
    00001426: 	je	.Ltmp2641 # Offset: 5158
    00001428: 	movq	0xb0(%rsp), %rax
    00001430: 	leaq	0x1(%rax), %rsi
    00001434: 	callq	_ZdlPvm@PLT # Offset: 5172
.Ltmp2641:
    00001439: 	leaq	DATAat0x57318(%rip), %rdx
    00001440: 	movq	%r14, %rsi
    00001443: 	movq	%r12, %rdi
    00001446: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5190
    0000144b: 	movq	%r12, %rcx
    0000144e: 	movl	$0x3f, %edx
    00001453: 	movl	$0x1f40, %esi
    00001458: 	movq	%rbp, %rdi
    0000145b: 	callq	_Z14test_variable1Is24custom_multiply_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5211
    00001460: 	movq	0xa0(%rsp), %rdi
    00001468: 	cmpq	%r13, %rdi
    0000146b: 	je	.Ltmp2642 # Offset: 5227
    0000146d: 	movq	0xb0(%rsp), %rax
    00001475: 	leaq	0x1(%rax), %rsi
    00001479: 	callq	_ZdlPvm@PLT # Offset: 5241
.Ltmp2642:
    0000147e: 	leaq	DATAat0x57331(%rip), %rdx
    00001485: 	movq	%r14, %rsi
    00001488: 	movq	%r12, %rdi
    0000148b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5259
    00001490: 	callq	clock@PLT # Offset: 5264
    00001495: 	movl	iterations(%rip), %ecx
    0000149b: 	movl	$0x0, (%rsp)
    000014a2: 	movq	%rax, start_time(%rip)
    000014a9: 	testl	%ecx, %ecx
    000014ab: 	jle	.Ltmp2643 # Offset: 5291
    000014b1: 	nopl	(%rax) # Size: 7
.Ltmp2646:
    000014b8: 	movq	%rbp, %rax
    000014bb: 	pxor	%xmm1, %xmm1
    000014bf: 	nop # Size: 1
.Ltmp2644:
    000014c0: 	movdqa	(%rax), %xmm0
    000014c4: 	addq	$0x10, %rax
    000014c8: 	psllw	$0x6, %xmm0
    000014cd: 	psubw	-0x10(%rax), %xmm0
    000014d2: 	paddw	%xmm0, %xmm1
    000014d6: 	cmpq	%rax, %rbx
    000014d9: 	jne	.Ltmp2644 # Offset: 5337
    000014db: 	movdqa	%xmm1, %xmm0
    000014df: 	cvttsd2si	init_value(%rip), %eax
    000014e7: 	psrldq	$0x8, %xmm0
    000014ec: 	paddw	%xmm0, %xmm1
    000014f0: 	movdqa	%xmm1, %xmm0
    000014f4: 	psrldq	$0x4, %xmm0
    000014f9: 	imulw	$0xb0c0, %ax, %ax
    000014fe: 	paddw	%xmm0, %xmm1
    00001502: 	movdqa	%xmm1, %xmm0
    00001506: 	psrldq	$0x2, %xmm0
    0000150b: 	paddw	%xmm0, %xmm1
    0000150f: 	pextrw	$0x0, %xmm1, %edx
    00001514: 	cmpw	%dx, %ax
    00001517: 	je	.Ltmp2645 # Offset: 5399
    00001519: 	movl	current_test(%rip), %edx
    0000151f: 	leaq	DATAat0x571d0(%rip), %rsi
    00001526: 	movl	$0x1, %edi
    0000152b: 	xorl	%eax, %eax
    0000152d: 	callq	__printf_chk@PLT # Offset: 5421
    00001532: 	movl	iterations(%rip), %ecx
.Ltmp2645:
    00001538: 	addl	$0x1, (%rsp)
    0000153c: 	movl	(%rsp), %eax
    0000153f: 	cmpl	%ecx, %eax
    00001541: 	jl	.Ltmp2646 # Offset: 5441
.Ltmp2643:
    00001547: 	movq	%r12, %rsi
    0000154a: 	movq	%r15, %rdi
    0000154d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5453
    00001552: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001559: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001560: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001567: 	je	.Ltmp2647 # Offset: 5479
.Ltmp3021:
    0000156d: 	movq	-0x20(%rax), %rdi
    00001571: 	movq	%rdi, (%rsp)
    00001575: 	callq	clock@PLT # Offset: 5493
    0000157a: 	movq	(%rsp), %rdi
    0000157e: 	pxor	%xmm0, %xmm0
    00001582: 	movq	%rax, end_time(%rip)
    00001589: 	subq	start_time(%rip), %rax
    00001590: 	cvtsi2sd	%rax, %xmm0
    00001595: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000159d: 	callq	_Z13record_resultdPKc # Offset: 5533
    000015a2: 	movq	0xa0(%rsp), %rdi
    000015aa: 	cmpq	%r13, %rdi
    000015ad: 	je	.Ltmp2648 # Offset: 5549
    000015af: 	movq	0xb0(%rsp), %rax
    000015b7: 	leaq	0x1(%rax), %rsi
    000015bb: 	callq	_ZdlPvm@PLT # Offset: 5563
.Ltmp2648:
    000015c0: 	leaq	DATAat0x5734a(%rip), %rdx
    000015c7: 	movq	%r14, %rsi
    000015ca: 	movq	%r12, %rdi
    000015cd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5581
    000015d2: 	callq	clock@PLT # Offset: 5586
    000015d7: 	movl	iterations(%rip), %ecx
    000015dd: 	movl	$0x0, (%rsp)
    000015e4: 	movq	%rax, start_time(%rip)
    000015eb: 	testl	%ecx, %ecx
    000015ed: 	jle	.Ltmp2649 # Offset: 5613
    000015f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2652:
    000015f8: 	movq	%rbp, %rax
    000015fb: 	pxor	%xmm1, %xmm1
    000015ff: 	nop # Size: 1
.Ltmp2650:
    00001600: 	movdqa	(%rax), %xmm0
    00001604: 	addq	$0x10, %rax
    00001608: 	psllw	$0x6, %xmm0
    0000160d: 	psubw	-0x10(%rax), %xmm0
    00001612: 	paddw	%xmm0, %xmm1
    00001616: 	cmpq	%rbx, %rax
    00001619: 	jne	.Ltmp2650 # Offset: 5657
    0000161b: 	movdqa	%xmm1, %xmm0
    0000161f: 	cvttsd2si	init_value(%rip), %eax
    00001627: 	psrldq	$0x8, %xmm0
    0000162c: 	paddw	%xmm0, %xmm1
    00001630: 	movdqa	%xmm1, %xmm0
    00001634: 	psrldq	$0x4, %xmm0
    00001639: 	imulw	$0xb0c0, %ax, %ax
    0000163e: 	paddw	%xmm0, %xmm1
    00001642: 	movdqa	%xmm1, %xmm0
    00001646: 	psrldq	$0x2, %xmm0
    0000164b: 	paddw	%xmm0, %xmm1
    0000164f: 	pextrw	$0x0, %xmm1, %edx
    00001654: 	cmpw	%dx, %ax
    00001657: 	je	.Ltmp2651 # Offset: 5719
    00001659: 	movl	current_test(%rip), %edx
    0000165f: 	leaq	DATAat0x571d0(%rip), %rsi
    00001666: 	movl	$0x1, %edi
    0000166b: 	xorl	%eax, %eax
    0000166d: 	callq	__printf_chk@PLT # Offset: 5741
    00001672: 	movl	iterations(%rip), %ecx
.Ltmp2651:
    00001678: 	addl	$0x1, (%rsp)
    0000167c: 	movl	(%rsp), %eax
    0000167f: 	cmpl	%ecx, %eax
    00001681: 	jl	.Ltmp2652 # Offset: 5761
.Ltmp2649:
    00001687: 	movq	%r12, %rsi
    0000168a: 	movq	%r15, %rdi
    0000168d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5773
    00001692: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001699: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000016a0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016a7: 	je	.Ltmp2653 # Offset: 5799
.Ltmp3020:
    000016ad: 	movq	-0x20(%rax), %rdi
    000016b1: 	movq	%rdi, (%rsp)
    000016b5: 	callq	clock@PLT # Offset: 5813
    000016ba: 	movq	(%rsp), %rdi
    000016be: 	pxor	%xmm0, %xmm0
    000016c2: 	movq	%rax, end_time(%rip)
    000016c9: 	subq	start_time(%rip), %rax
    000016d0: 	cvtsi2sd	%rax, %xmm0
    000016d5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000016dd: 	callq	_Z13record_resultdPKc # Offset: 5853
    000016e2: 	movq	0xa0(%rsp), %rdi
    000016ea: 	cmpq	%r13, %rdi
    000016ed: 	je	.Ltmp2654 # Offset: 5869
    000016ef: 	movq	0xb0(%rsp), %rax
    000016f7: 	leaq	0x1(%rax), %rsi
    000016fb: 	callq	_ZdlPvm@PLT # Offset: 5883
.Ltmp2654:
    00001700: 	leaq	DATAat0x5735b(%rip), %rdx
    00001707: 	movq	%r14, %rsi
    0000170a: 	movq	%r12, %rdi
    0000170d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5901
    00001712: 	movq	%r12, %rcx
    00001715: 	movl	$0x43, %edx
    0000171a: 	movl	$0x1f40, %esi
    0000171f: 	movq	%rbp, %rdi
    00001722: 	callq	_Z14test_variable1Is24custom_multiply_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5922
    00001727: 	movq	0xa0(%rsp), %rdi
    0000172f: 	cmpq	%r13, %rdi
    00001732: 	je	.Ltmp2655 # Offset: 5938
    00001734: 	movq	0xb0(%rsp), %rax
    0000173c: 	leaq	0x1(%rax), %rsi
    00001740: 	callq	_ZdlPvm@PLT # Offset: 5952
.Ltmp2655:
    00001745: 	leaq	DATAat0x57374(%rip), %rdx
    0000174c: 	movq	%r14, %rsi
    0000174f: 	movq	%r12, %rdi
    00001752: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5970
    00001757: 	callq	clock@PLT # Offset: 5975
    0000175c: 	movl	iterations(%rip), %ecx
    00001762: 	movl	$0x0, (%rsp)
    00001769: 	movq	%rax, start_time(%rip)
    00001770: 	testl	%ecx, %ecx
    00001772: 	jle	.Ltmp2656 # Offset: 6002
    00001778: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2659:
    00001780: 	movq	%rbp, %rax
    00001783: 	pxor	%xmm2, %xmm2
    00001787: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2657:
    00001790: 	movdqa	(%rax), %xmm1
    00001794: 	addq	$0x10, %rax
    00001798: 	movdqa	%xmm1, %xmm0
    0000179c: 	psllw	$0x4, %xmm0
    000017a1: 	paddw	%xmm1, %xmm0
    000017a5: 	psllw	$0x2, %xmm0
    000017aa: 	psubw	%xmm1, %xmm0
    000017ae: 	paddw	%xmm0, %xmm2
    000017b2: 	cmpq	%rax, %rbx
    000017b5: 	jne	.Ltmp2657 # Offset: 6069
    000017b7: 	movdqa	%xmm2, %xmm0
    000017bb: 	cvttsd2si	init_value(%rip), %eax
    000017c3: 	psrldq	$0x8, %xmm0
    000017c8: 	paddw	%xmm0, %xmm2
    000017cc: 	movdqa	%xmm2, %xmm0
    000017d0: 	psrldq	$0x4, %xmm0
    000017d5: 	imulw	$0x2dc0, %ax, %ax
    000017da: 	paddw	%xmm0, %xmm2
    000017de: 	movdqa	%xmm2, %xmm0
    000017e2: 	psrldq	$0x2, %xmm0
    000017e7: 	paddw	%xmm0, %xmm2
    000017eb: 	pextrw	$0x0, %xmm2, %edx
    000017f0: 	cmpw	%dx, %ax
    000017f3: 	je	.Ltmp2658 # Offset: 6131
    000017f5: 	movl	current_test(%rip), %edx
    000017fb: 	leaq	DATAat0x571d0(%rip), %rsi
    00001802: 	movl	$0x1, %edi
    00001807: 	xorl	%eax, %eax
    00001809: 	callq	__printf_chk@PLT # Offset: 6153
    0000180e: 	movl	iterations(%rip), %ecx
.Ltmp2658:
    00001814: 	addl	$0x1, (%rsp)
    00001818: 	movl	(%rsp), %eax
    0000181b: 	cmpl	%ecx, %eax
    0000181d: 	jl	.Ltmp2659 # Offset: 6173
.Ltmp2656:
    00001823: 	movq	%r12, %rsi
    00001826: 	movq	%r15, %rdi
    00001829: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6185
    0000182e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001835: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000183c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001843: 	je	.Ltmp2660 # Offset: 6211
.Ltmp3019:
    00001849: 	movq	-0x20(%rax), %rdi
    0000184d: 	movq	%rdi, (%rsp)
    00001851: 	callq	clock@PLT # Offset: 6225
    00001856: 	movq	(%rsp), %rdi
    0000185a: 	pxor	%xmm0, %xmm0
    0000185e: 	movq	%rax, end_time(%rip)
    00001865: 	subq	start_time(%rip), %rax
    0000186c: 	cvtsi2sd	%rax, %xmm0
    00001871: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001879: 	callq	_Z13record_resultdPKc # Offset: 6265
    0000187e: 	movq	0xa0(%rsp), %rdi
    00001886: 	cmpq	%r13, %rdi
    00001889: 	je	.Ltmp2661 # Offset: 6281
    0000188b: 	movq	0xb0(%rsp), %rax
    00001893: 	leaq	0x1(%rax), %rsi
    00001897: 	callq	_ZdlPvm@PLT # Offset: 6295
.Ltmp2661:
    0000189c: 	leaq	DATAat0x5738d(%rip), %rdx
    000018a3: 	movq	%r14, %rsi
    000018a6: 	movq	%r12, %rdi
    000018a9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6313
    000018ae: 	callq	clock@PLT # Offset: 6318
    000018b3: 	movl	iterations(%rip), %ecx
    000018b9: 	movl	$0x0, (%rsp)
    000018c0: 	movq	%rax, start_time(%rip)
    000018c7: 	testl	%ecx, %ecx
    000018c9: 	jle	.Ltmp2662 # Offset: 6345
    000018cf: 	nop # Size: 1
.Ltmp2665:
    000018d0: 	movq	%rbp, %rax
    000018d3: 	pxor	%xmm2, %xmm2
    000018d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2663:
    000018e0: 	movdqa	(%rax), %xmm1
    000018e4: 	addq	$0x10, %rax
    000018e8: 	movdqa	%xmm1, %xmm0
    000018ec: 	psllw	$0x4, %xmm0
    000018f1: 	paddw	%xmm1, %xmm0
    000018f5: 	psllw	$0x2, %xmm0
    000018fa: 	psubw	%xmm1, %xmm0
    000018fe: 	paddw	%xmm0, %xmm2
    00001902: 	cmpq	%rbx, %rax
    00001905: 	jne	.Ltmp2663 # Offset: 6405
    00001907: 	movdqa	%xmm2, %xmm0
    0000190b: 	cvttsd2si	init_value(%rip), %eax
    00001913: 	psrldq	$0x8, %xmm0
    00001918: 	paddw	%xmm0, %xmm2
    0000191c: 	movdqa	%xmm2, %xmm0
    00001920: 	psrldq	$0x4, %xmm0
    00001925: 	imulw	$0x2dc0, %ax, %ax
    0000192a: 	paddw	%xmm0, %xmm2
    0000192e: 	movdqa	%xmm2, %xmm0
    00001932: 	psrldq	$0x2, %xmm0
    00001937: 	paddw	%xmm0, %xmm2
    0000193b: 	pextrw	$0x0, %xmm2, %edx
    00001940: 	cmpw	%dx, %ax
    00001943: 	je	.Ltmp2664 # Offset: 6467
    00001945: 	movl	current_test(%rip), %edx
    0000194b: 	leaq	DATAat0x571d0(%rip), %rsi
    00001952: 	movl	$0x1, %edi
    00001957: 	xorl	%eax, %eax
    00001959: 	callq	__printf_chk@PLT # Offset: 6489
    0000195e: 	movl	iterations(%rip), %ecx
.Ltmp2664:
    00001964: 	addl	$0x1, (%rsp)
    00001968: 	movl	(%rsp), %eax
    0000196b: 	cmpl	%ecx, %eax
    0000196d: 	jl	.Ltmp2665 # Offset: 6509
.Ltmp2662:
    00001973: 	movq	%r12, %rsi
    00001976: 	movq	%r15, %rdi
    00001979: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6521
    0000197e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001985: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000198c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001993: 	je	.Ltmp2666 # Offset: 6547
.Ltmp3018:
    00001999: 	movq	-0x20(%rax), %rdi
    0000199d: 	movq	%rdi, (%rsp)
    000019a1: 	callq	clock@PLT # Offset: 6561
    000019a6: 	movq	(%rsp), %rdi
    000019aa: 	pxor	%xmm0, %xmm0
    000019ae: 	movq	%rax, end_time(%rip)
    000019b5: 	subq	start_time(%rip), %rax
    000019bc: 	cvtsi2sd	%rax, %xmm0
    000019c1: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000019c9: 	callq	_Z13record_resultdPKc # Offset: 6601
    000019ce: 	movq	0xa0(%rsp), %rdi
    000019d6: 	cmpq	%r13, %rdi
    000019d9: 	je	.Ltmp2667 # Offset: 6617
    000019db: 	movq	0xb0(%rsp), %rax
    000019e3: 	leaq	0x1(%rax), %rsi
    000019e7: 	callq	_ZdlPvm@PLT # Offset: 6631
.Ltmp2667:
    000019ec: 	leaq	DATAat0x5739e(%rip), %rdx
    000019f3: 	movq	%r14, %rsi
    000019f6: 	movq	%r12, %rdi
    000019f9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6649
    000019fe: 	callq	clock@PLT # Offset: 6654
    00001a03: 	movl	iterations(%rip), %ecx
    00001a09: 	movl	$0x0, (%rsp)
    00001a10: 	movq	%rax, start_time(%rip)
    00001a17: 	testl	%ecx, %ecx
    00001a19: 	jle	.Ltmp2668 # Offset: 6681
    00001a1f: 	nop # Size: 1
.Ltmp2671:
    00001a20: 	movq	%rbp, %rax
    00001a23: 	pxor	%xmm2, %xmm2
    00001a27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2669:
    00001a30: 	movdqa	(%rax), %xmm1
    00001a34: 	addq	$0x10, %rax
    00001a38: 	movdqa	%xmm1, %xmm0
    00001a3c: 	psllw	$0x4, %xmm0
    00001a41: 	paddw	%xmm1, %xmm0
    00001a45: 	psllw	$0x2, %xmm0
    00001a4a: 	psubw	%xmm1, %xmm0
    00001a4e: 	paddw	%xmm0, %xmm2
    00001a52: 	cmpq	%rbx, %rax
    00001a55: 	jne	.Ltmp2669 # Offset: 6741
    00001a57: 	movdqa	%xmm2, %xmm0
    00001a5b: 	cvttsd2si	init_value(%rip), %eax
    00001a63: 	psrldq	$0x8, %xmm0
    00001a68: 	paddw	%xmm0, %xmm2
    00001a6c: 	movdqa	%xmm2, %xmm0
    00001a70: 	psrldq	$0x4, %xmm0
    00001a75: 	imulw	$0x2dc0, %ax, %ax
    00001a7a: 	paddw	%xmm0, %xmm2
    00001a7e: 	movdqa	%xmm2, %xmm0
    00001a82: 	psrldq	$0x2, %xmm0
    00001a87: 	paddw	%xmm0, %xmm2
    00001a8b: 	pextrw	$0x0, %xmm2, %edx
    00001a90: 	cmpw	%dx, %ax
    00001a93: 	je	.Ltmp2670 # Offset: 6803
    00001a95: 	movl	current_test(%rip), %edx
    00001a9b: 	leaq	DATAat0x571d0(%rip), %rsi
    00001aa2: 	movl	$0x1, %edi
    00001aa7: 	xorl	%eax, %eax
    00001aa9: 	callq	__printf_chk@PLT # Offset: 6825
    00001aae: 	movl	iterations(%rip), %ecx
.Ltmp2670:
    00001ab4: 	addl	$0x1, (%rsp)
    00001ab8: 	movl	(%rsp), %eax
    00001abb: 	cmpl	%ecx, %eax
    00001abd: 	jl	.Ltmp2671 # Offset: 6845
.Ltmp2668:
    00001ac3: 	movq	%r12, %rsi
    00001ac6: 	movq	%r15, %rdi
    00001ac9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6857
    00001ace: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ad5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001adc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ae3: 	je	.Ltmp2672 # Offset: 6883
.Ltmp3017:
    00001ae9: 	movq	-0x20(%rax), %rdi
    00001aed: 	movq	%rdi, (%rsp)
    00001af1: 	callq	clock@PLT # Offset: 6897
    00001af6: 	movq	(%rsp), %rdi
    00001afa: 	pxor	%xmm0, %xmm0
    00001afe: 	movq	%rax, end_time(%rip)
    00001b05: 	subq	start_time(%rip), %rax
    00001b0c: 	cvtsi2sd	%rax, %xmm0
    00001b11: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001b19: 	callq	_Z13record_resultdPKc # Offset: 6937
    00001b1e: 	movq	0xa0(%rsp), %rdi
    00001b26: 	cmpq	%r13, %rdi
    00001b29: 	je	.Ltmp2673 # Offset: 6953
    00001b2b: 	movq	0xb0(%rsp), %rax
    00001b33: 	leaq	0x1(%rax), %rsi
    00001b37: 	callq	_ZdlPvm@PLT # Offset: 6967
.Ltmp2673:
    00001b3c: 	leaq	DATAat0x573ad(%rip), %rdx
    00001b43: 	movq	%r14, %rsi
    00001b46: 	movq	%r12, %rdi
    00001b49: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6985
    00001b4e: 	movq	%r12, %rcx
    00001b51: 	movl	$0x53, %edx
    00001b56: 	movl	$0x1f40, %esi
    00001b5b: 	movq	%rbp, %rdi
    00001b5e: 	callq	_Z14test_variable1Is24custom_multiply_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7006
    00001b63: 	movq	0xa0(%rsp), %rdi
    00001b6b: 	cmpq	%r13, %rdi
    00001b6e: 	je	.Ltmp2674 # Offset: 7022
    00001b70: 	movq	0xb0(%rsp), %rax
    00001b78: 	leaq	0x1(%rax), %rsi
    00001b7c: 	callq	_ZdlPvm@PLT # Offset: 7036
.Ltmp2674:
    00001b81: 	leaq	DATAat0x573c6(%rip), %rdx
    00001b88: 	movq	%r14, %rsi
    00001b8b: 	movq	%r12, %rdi
    00001b8e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7054
    00001b93: 	callq	clock@PLT # Offset: 7059
    00001b98: 	movl	iterations(%rip), %ecx
    00001b9e: 	movq	%rax, start_time(%rip)
    00001ba5: 	testl	%ecx, %ecx
    00001ba7: 	jle	.Ltmp2675 # Offset: 7079
    00001bad: 	movdqa	DATAat0x57f00(%rip), %xmm7
    00001bb5: 	movl	$0x0, 0x1c(%rsp)
    00001bbd: 	movaps	%xmm7, (%rsp)
    00001bc1: 	nopl	(%rax) # Size: 7
.Ltmp2678:
    00001bc8: 	movq	%rbp, %rax
    00001bcb: 	pxor	%xmm0, %xmm0
    00001bcf: 	nop # Size: 1
.Ltmp2676:
    00001bd0: 	movdqa	(%rsp), %xmm1
    00001bd5: 	addq	$0x10, %rax
    00001bd9: 	pmullw	-0x10(%rax), %xmm1
    00001bde: 	paddw	%xmm1, %xmm0
    00001be2: 	cmpq	%rax, %rbx
    00001be5: 	jne	.Ltmp2676 # Offset: 7141
    00001be7: 	movdqa	%xmm0, %xmm1
    00001beb: 	cvttsd2si	init_value(%rip), %eax
    00001bf3: 	psrldq	$0x8, %xmm1
    00001bf8: 	paddw	%xmm1, %xmm0
    00001bfc: 	movdqa	%xmm0, %xmm1
    00001c00: 	psrldq	$0x4, %xmm1
    00001c05: 	imulw	$0x21c0, %ax, %ax
    00001c0a: 	paddw	%xmm1, %xmm0
    00001c0e: 	movdqa	%xmm0, %xmm1
    00001c12: 	psrldq	$0x2, %xmm1
    00001c17: 	paddw	%xmm1, %xmm0
    00001c1b: 	pextrw	$0x0, %xmm0, %edx
    00001c20: 	cmpw	%dx, %ax
    00001c23: 	je	.Ltmp2677 # Offset: 7203
    00001c25: 	movl	current_test(%rip), %edx
    00001c2b: 	leaq	DATAat0x571d0(%rip), %rsi
    00001c32: 	movl	$0x1, %edi
    00001c37: 	xorl	%eax, %eax
    00001c39: 	callq	__printf_chk@PLT # Offset: 7225
    00001c3e: 	movl	iterations(%rip), %ecx
.Ltmp2677:
    00001c44: 	addl	$0x1, 0x1c(%rsp)
    00001c49: 	movl	0x1c(%rsp), %eax
    00001c4d: 	cmpl	%ecx, %eax
    00001c4f: 	jl	.Ltmp2678 # Offset: 7247
.Ltmp2675:
    00001c55: 	movq	%r12, %rsi
    00001c58: 	movq	%r15, %rdi
    00001c5b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7259
    00001c60: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c67: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c6e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c75: 	je	.Ltmp2679 # Offset: 7285
.Ltmp3016:
    00001c7b: 	movq	-0x20(%rax), %rdi
    00001c7f: 	movq	%rdi, (%rsp)
    00001c83: 	callq	clock@PLT # Offset: 7299
    00001c88: 	movq	(%rsp), %rdi
    00001c8c: 	pxor	%xmm0, %xmm0
    00001c90: 	movq	%rax, end_time(%rip)
    00001c97: 	subq	start_time(%rip), %rax
    00001c9e: 	cvtsi2sd	%rax, %xmm0
    00001ca3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001cab: 	callq	_Z13record_resultdPKc # Offset: 7339
    00001cb0: 	movq	0xa0(%rsp), %rdi
    00001cb8: 	cmpq	%r13, %rdi
    00001cbb: 	je	.Ltmp2680 # Offset: 7355
    00001cbd: 	movq	0xb0(%rsp), %rax
    00001cc5: 	leaq	0x1(%rax), %rsi
    00001cc9: 	callq	_ZdlPvm@PLT # Offset: 7369
.Ltmp2680:
    00001cce: 	leaq	DATAat0x573df(%rip), %rdx
    00001cd5: 	movq	%r14, %rsi
    00001cd8: 	movq	%r12, %rdi
    00001cdb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7387
    00001ce0: 	callq	clock@PLT # Offset: 7392
    00001ce5: 	movl	iterations(%rip), %esi
    00001ceb: 	movl	$0x0, (%rsp)
    00001cf2: 	movq	%rax, start_time(%rip)
    00001cf9: 	testl	%esi, %esi
    00001cfb: 	jle	.Ltmp2681 # Offset: 7419
    00001d01: 	nopl	(%rax) # Size: 7
.Ltmp2684:
    00001d08: 	movq	%rbp, %rax
    00001d0b: 	pxor	%xmm0, %xmm0
    00001d0f: 	nop # Size: 1
.Ltmp2682:
    00001d10: 	movdqa	(%rax), %xmm2
    00001d14: 	addq	$0x10, %rax
    00001d18: 	movdqa	%xmm2, %xmm1
    00001d1c: 	psubw	%xmm2, %xmm0
    00001d20: 	psllw	$0x2, %xmm1
    00001d25: 	movdqa	%xmm1, %xmm3
    00001d29: 	paddw	%xmm2, %xmm3
    00001d2d: 	psllw	$0x4, %xmm3
    00001d32: 	paddw	%xmm3, %xmm1
    00001d36: 	paddw	%xmm1, %xmm0
    00001d3a: 	cmpq	%rbx, %rax
    00001d3d: 	jne	.Ltmp2682 # Offset: 7485
    00001d3f: 	cvttsd2si	init_value(%rip), %edx
    00001d47: 	movdqa	%xmm0, %xmm1
    00001d4b: 	psrldq	$0x8, %xmm1
    00001d50: 	paddw	%xmm1, %xmm0
    00001d54: 	movdqa	%xmm0, %xmm1
    00001d58: 	leal	(,%rdx,4), %ecx
    00001d5f: 	psrldq	$0x4, %xmm1
    00001d64: 	leal	(%rcx,%rdx), %eax
    00001d67: 	paddw	%xmm1, %xmm0
    00001d6b: 	shll	$0x4, %eax
    00001d6e: 	movdqa	%xmm0, %xmm1
    00001d72: 	addl	%ecx, %eax
    00001d74: 	psrldq	$0x2, %xmm1
    00001d79: 	subl	%edx, %eax
    00001d7b: 	paddw	%xmm1, %xmm0
    00001d7f: 	imulw	$0x1f40, %ax, %ax
    00001d84: 	pextrw	$0x0, %xmm0, %edx
    00001d89: 	cmpw	%dx, %ax
    00001d8c: 	je	.Ltmp2683 # Offset: 7564
    00001d8e: 	movl	current_test(%rip), %edx
    00001d94: 	leaq	DATAat0x571d0(%rip), %rsi
    00001d9b: 	movl	$0x1, %edi
    00001da0: 	xorl	%eax, %eax
    00001da2: 	callq	__printf_chk@PLT # Offset: 7586
    00001da7: 	movl	iterations(%rip), %esi
.Ltmp2683:
    00001dad: 	addl	$0x1, (%rsp)
    00001db1: 	movl	(%rsp), %eax
    00001db4: 	cmpl	%esi, %eax
    00001db6: 	jl	.Ltmp2684 # Offset: 7606
.Ltmp2681:
    00001dbc: 	movq	%r12, %rsi
    00001dbf: 	movq	%r15, %rdi
    00001dc2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7618
    00001dc7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001dce: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001dd5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ddc: 	je	.Ltmp2685 # Offset: 7644
.Ltmp3015:
    00001de2: 	movq	-0x20(%rax), %rdi
    00001de6: 	movq	%rdi, (%rsp)
    00001dea: 	callq	clock@PLT # Offset: 7658
    00001def: 	movq	(%rsp), %rdi
    00001df3: 	pxor	%xmm0, %xmm0
    00001df7: 	movq	%rax, end_time(%rip)
    00001dfe: 	subq	start_time(%rip), %rax
    00001e05: 	cvtsi2sd	%rax, %xmm0
    00001e0a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001e12: 	callq	_Z13record_resultdPKc # Offset: 7698
    00001e17: 	movq	0xa0(%rsp), %rdi
    00001e1f: 	cmpq	%r13, %rdi
    00001e22: 	je	.Ltmp2686 # Offset: 7714
    00001e24: 	movq	0xb0(%rsp), %rax
    00001e2c: 	leaq	0x1(%rax), %rsi
    00001e30: 	callq	_ZdlPvm@PLT # Offset: 7728
.Ltmp2686:
    00001e35: 	leaq	DATAat0x573f0(%rip), %rdx
    00001e3c: 	movq	%r14, %rsi
    00001e3f: 	movq	%r12, %rdi
    00001e42: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7746
    00001e47: 	callq	clock@PLT # Offset: 7751
    00001e4c: 	movl	iterations(%rip), %ecx
    00001e52: 	movq	%rax, start_time(%rip)
    00001e59: 	testl	%ecx, %ecx
    00001e5b: 	jle	.Ltmp2687 # Offset: 7771
    00001e61: 	movdqa	DATAat0x57f00(%rip), %xmm7
    00001e69: 	movl	$0x0, 0x1c(%rsp)
    00001e71: 	movaps	%xmm7, (%rsp)
    00001e75: 	nopl	(%rax) # Size: 3
.Ltmp2690:
    00001e78: 	movq	%rbp, %rax
    00001e7b: 	pxor	%xmm0, %xmm0
    00001e7f: 	nop # Size: 1
.Ltmp2688:
    00001e80: 	movdqa	(%rsp), %xmm1
    00001e85: 	addq	$0x10, %rax
    00001e89: 	pmullw	-0x10(%rax), %xmm1
    00001e8e: 	paddw	%xmm1, %xmm0
    00001e92: 	cmpq	%rax, %rbx
    00001e95: 	jne	.Ltmp2688 # Offset: 7829
    00001e97: 	movdqa	%xmm0, %xmm1
    00001e9b: 	cvttsd2si	init_value(%rip), %eax
    00001ea3: 	psrldq	$0x8, %xmm1
    00001ea8: 	paddw	%xmm1, %xmm0
    00001eac: 	movdqa	%xmm0, %xmm1
    00001eb0: 	psrldq	$0x4, %xmm1
    00001eb5: 	imulw	$0x21c0, %ax, %ax
    00001eba: 	paddw	%xmm1, %xmm0
    00001ebe: 	movdqa	%xmm0, %xmm1
    00001ec2: 	psrldq	$0x2, %xmm1
    00001ec7: 	paddw	%xmm1, %xmm0
    00001ecb: 	pextrw	$0x0, %xmm0, %edx
    00001ed0: 	cmpw	%dx, %ax
    00001ed3: 	je	.Ltmp2689 # Offset: 7891
    00001ed5: 	movl	current_test(%rip), %edx
    00001edb: 	leaq	DATAat0x571d0(%rip), %rsi
    00001ee2: 	movl	$0x1, %edi
    00001ee7: 	xorl	%eax, %eax
    00001ee9: 	callq	__printf_chk@PLT # Offset: 7913
    00001eee: 	movl	iterations(%rip), %ecx
.Ltmp2689:
    00001ef4: 	addl	$0x1, 0x1c(%rsp)
    00001ef9: 	movl	0x1c(%rsp), %eax
    00001efd: 	cmpl	%ecx, %eax
    00001eff: 	jl	.Ltmp2690 # Offset: 7935
.Ltmp2687:
    00001f05: 	movq	%r12, %rsi
    00001f08: 	movq	%r15, %rdi
    00001f0b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7947
    00001f10: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f17: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f1e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f25: 	je	.Ltmp2691 # Offset: 7973
.Ltmp3014:
    00001f2b: 	movq	-0x20(%rax), %rdi
    00001f2f: 	movq	%rdi, (%rsp)
    00001f33: 	callq	clock@PLT # Offset: 7987
    00001f38: 	movq	(%rsp), %rdi
    00001f3c: 	pxor	%xmm0, %xmm0
    00001f40: 	movq	%rax, end_time(%rip)
    00001f47: 	subq	start_time(%rip), %rax
    00001f4e: 	cvtsi2sd	%rax, %xmm0
    00001f53: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001f5b: 	callq	_Z13record_resultdPKc # Offset: 8027
    00001f60: 	movq	0xa0(%rsp), %rdi
    00001f68: 	cmpq	%r13, %rdi
    00001f6b: 	je	.Ltmp2692 # Offset: 8043
    00001f6d: 	movq	0xb0(%rsp), %rax
    00001f75: 	leaq	0x1(%rax), %rsi
    00001f79: 	callq	_ZdlPvm@PLT # Offset: 8057
.Ltmp2692:
    00001f7e: 	leaq	DATAat0x573ff(%rip), %rdx
    00001f85: 	movq	%r14, %rsi
    00001f88: 	movq	%r12, %rdi
    00001f8b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8075
    00001f90: 	movq	%r12, %rcx
    00001f93: 	movl	$0x7e, %edx
    00001f98: 	movl	$0x1f40, %esi
    00001f9d: 	movq	%rbp, %rdi
    00001fa0: 	callq	_Z14test_variable1Is24custom_multiply_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 8096
    00001fa5: 	movq	0xa0(%rsp), %rdi
    00001fad: 	cmpq	%r13, %rdi
    00001fb0: 	je	.Ltmp2693 # Offset: 8112
    00001fb2: 	movq	0xb0(%rsp), %rax
    00001fba: 	leaq	0x1(%rax), %rsi
    00001fbe: 	callq	_ZdlPvm@PLT # Offset: 8126
.Ltmp2693:
    00001fc3: 	leaq	DATAat0x57419(%rip), %rdx
    00001fca: 	movq	%r14, %rsi
    00001fcd: 	movq	%r12, %rdi
    00001fd0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8144
    00001fd5: 	callq	clock@PLT # Offset: 8149
    00001fda: 	movl	iterations(%rip), %ecx
    00001fe0: 	movl	$0x0, (%rsp)
    00001fe7: 	movq	%rax, start_time(%rip)
    00001fee: 	testl	%ecx, %ecx
    00001ff0: 	jle	.Ltmp2694 # Offset: 8176
    00001ff6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2697:
    00002000: 	movq	%rbp, %rax
    00002003: 	pxor	%xmm1, %xmm1
    00002007: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2695:
    00002010: 	movdqa	(%rax), %xmm0
    00002014: 	addq	$0x10, %rax
    00002018: 	psllw	$0x6, %xmm0
    0000201d: 	psubw	-0x10(%rax), %xmm0
    00002022: 	psllw	$0x1, %xmm0
    00002027: 	paddw	%xmm0, %xmm1
    0000202b: 	cmpq	%rbx, %rax
    0000202e: 	jne	.Ltmp2695 # Offset: 8238
    00002030: 	movdqa	%xmm1, %xmm0
    00002034: 	cvttsd2si	init_value(%rip), %eax
    0000203c: 	psrldq	$0x8, %xmm0
    00002041: 	paddw	%xmm0, %xmm1
    00002045: 	movdqa	%xmm1, %xmm0
    00002049: 	psrldq	$0x4, %xmm0
    0000204e: 	imulw	$0x6180, %ax, %ax
    00002053: 	paddw	%xmm0, %xmm1
    00002057: 	movdqa	%xmm1, %xmm0
    0000205b: 	psrldq	$0x2, %xmm0
    00002060: 	paddw	%xmm0, %xmm1
    00002064: 	pextrw	$0x0, %xmm1, %edx
    00002069: 	cmpw	%dx, %ax
    0000206c: 	je	.Ltmp2696 # Offset: 8300
    0000206e: 	movl	current_test(%rip), %edx
    00002074: 	leaq	DATAat0x571d0(%rip), %rsi
    0000207b: 	movl	$0x1, %edi
    00002080: 	xorl	%eax, %eax
    00002082: 	callq	__printf_chk@PLT # Offset: 8322
    00002087: 	movl	iterations(%rip), %ecx
.Ltmp2696:
    0000208d: 	addl	$0x1, (%rsp)
    00002091: 	movl	(%rsp), %eax
    00002094: 	cmpl	%ecx, %eax
    00002096: 	jl	.Ltmp2697 # Offset: 8342
.Ltmp2694:
    0000209c: 	movq	%r12, %rsi
    0000209f: 	movq	%r15, %rdi
    000020a2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8354
    000020a7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020ae: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000020b5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000020bc: 	je	.Ltmp2698 # Offset: 8380
.Ltmp3013:
    000020c2: 	movq	-0x20(%rax), %rdi
    000020c6: 	movq	%rdi, (%rsp)
    000020ca: 	callq	clock@PLT # Offset: 8394
    000020cf: 	movq	(%rsp), %rdi
    000020d3: 	pxor	%xmm0, %xmm0
    000020d7: 	movq	%rax, end_time(%rip)
    000020de: 	subq	start_time(%rip), %rax
    000020e5: 	cvtsi2sd	%rax, %xmm0
    000020ea: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000020f2: 	callq	_Z13record_resultdPKc # Offset: 8434
    000020f7: 	movq	0xa0(%rsp), %rdi
    000020ff: 	cmpq	%r13, %rdi
    00002102: 	je	.Ltmp2699 # Offset: 8450
    00002104: 	movq	0xb0(%rsp), %rax
    0000210c: 	leaq	0x1(%rax), %rsi
    00002110: 	callq	_ZdlPvm@PLT # Offset: 8464
.Ltmp2699:
    00002115: 	leaq	DATAat0x57433(%rip), %rdx
    0000211c: 	movq	%r14, %rsi
    0000211f: 	movq	%r12, %rdi
    00002122: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8482
    00002127: 	movq	%r12, %rdx
    0000212a: 	movl	$0x1f40, %esi
    0000212f: 	movq	%rbp, %rdi
    00002132: 	callq	_Z13test_constantIs28custom_multiply_shiftadd_126IsEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 8498
    00002137: 	movq	0xa0(%rsp), %rdi
    0000213f: 	cmpq	%r13, %rdi
    00002142: 	je	.Ltmp2700 # Offset: 8514
    00002144: 	movq	0xb0(%rsp), %rax
    0000214c: 	leaq	0x1(%rax), %rsi
    00002150: 	callq	_ZdlPvm@PLT # Offset: 8528
.Ltmp2700:
    00002155: 	leaq	DATAat0x57445(%rip), %rdx
    0000215c: 	movq	%r14, %rsi
    0000215f: 	movq	%r12, %rdi
    00002162: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8546
    00002167: 	callq	clock@PLT # Offset: 8551
    0000216c: 	movl	iterations(%rip), %ecx
    00002172: 	movl	$0x0, (%rsp)
    00002179: 	movq	%rax, start_time(%rip)
    00002180: 	testl	%ecx, %ecx
    00002182: 	jle	.Ltmp2701 # Offset: 8578
    00002188: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2704:
    00002190: 	movq	%rbp, %rax
    00002193: 	pxor	%xmm1, %xmm1
    00002197: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2702:
    000021a0: 	movdqa	(%rax), %xmm0
    000021a4: 	addq	$0x10, %rax
    000021a8: 	psllw	$0x6, %xmm0
    000021ad: 	psubw	-0x10(%rax), %xmm0
    000021b2: 	psllw	$0x1, %xmm0
    000021b7: 	paddw	%xmm0, %xmm1
    000021bb: 	cmpq	%rbx, %rax
    000021be: 	jne	.Ltmp2702 # Offset: 8638
    000021c0: 	movdqa	%xmm1, %xmm0
    000021c4: 	cvttsd2si	init_value(%rip), %eax
    000021cc: 	psrldq	$0x8, %xmm0
    000021d1: 	paddw	%xmm0, %xmm1
    000021d5: 	movdqa	%xmm1, %xmm0
    000021d9: 	psrldq	$0x4, %xmm0
    000021de: 	imulw	$0x6180, %ax, %ax
    000021e3: 	paddw	%xmm0, %xmm1
    000021e7: 	movdqa	%xmm1, %xmm0
    000021eb: 	psrldq	$0x2, %xmm0
    000021f0: 	paddw	%xmm0, %xmm1
    000021f4: 	pextrw	$0x0, %xmm1, %edx
    000021f9: 	cmpw	%dx, %ax
    000021fc: 	je	.Ltmp2703 # Offset: 8700
    000021fe: 	movl	current_test(%rip), %edx
    00002204: 	leaq	DATAat0x571d0(%rip), %rsi
    0000220b: 	movl	$0x1, %edi
    00002210: 	xorl	%eax, %eax
    00002212: 	callq	__printf_chk@PLT # Offset: 8722
    00002217: 	movl	iterations(%rip), %ecx
.Ltmp2703:
    0000221d: 	addl	$0x1, (%rsp)
    00002221: 	movl	(%rsp), %eax
    00002224: 	cmpl	%ecx, %eax
    00002226: 	jl	.Ltmp2704 # Offset: 8742
.Ltmp2701:
    0000222c: 	movq	%r12, %rsi
    0000222f: 	movq	%r15, %rdi
    00002232: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8754
    00002237: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000223e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002245: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000224c: 	je	.Ltmp2705 # Offset: 8780
.Ltmp3012:
    00002252: 	movq	-0x20(%rax), %rdi
    00002256: 	movq	%rdi, (%rsp)
    0000225a: 	callq	clock@PLT # Offset: 8794
    0000225f: 	movq	(%rsp), %rdi
    00002263: 	pxor	%xmm0, %xmm0
    00002267: 	movq	%rax, end_time(%rip)
    0000226e: 	subq	start_time(%rip), %rax
    00002275: 	cvtsi2sd	%rax, %xmm0
    0000227a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002282: 	callq	_Z13record_resultdPKc # Offset: 8834
    00002287: 	movq	0xa0(%rsp), %rdi
    0000228f: 	cmpq	%r13, %rdi
    00002292: 	je	.Ltmp2706 # Offset: 8850
    00002294: 	movq	0xb0(%rsp), %rax
    0000229c: 	leaq	0x1(%rax), %rsi
    000022a0: 	callq	_ZdlPvm@PLT # Offset: 8864
.Ltmp2706:
    000022a5: 	leaq	0x60(%rsp), %rdi
    000022aa: 	leaq	DATAat0x57455(%rip), %rdx
    000022b1: 	movq	%r14, %rsi
    000022b4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8884
    000022b9: 	movl	iterations(%rip), %edx
    000022bf: 	movq	0x60(%rsp), %rdi
    000022c4: 	xorl	%r8d, %r8d
    000022c7: 	xorl	%ecx, %ecx
    000022c9: 	movl	$0x1f40, %esi
    000022ce: 	callq	_Z9summarizePKciiii # Offset: 8910
    000022d3: 	leaq	DATAat0x57472(%rip), %rdx
    000022da: 	movq	%r14, %rsi
    000022dd: 	movq	%r12, %rdi
    000022e0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8928
    000022e5: 	callq	clock@PLT # Offset: 8933
    000022ea: 	movl	iterations(%rip), %ecx
    000022f0: 	movl	$0x0, (%rsp)
    000022f7: 	movq	%rax, start_time(%rip)
    000022fe: 	testl	%ecx, %ecx
    00002300: 	jle	.Ltmp2707 # Offset: 8960
    00002306: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2710:
    00002310: 	movq	%rbp, %rax
    00002313: 	pxor	%xmm1, %xmm1
    00002317: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2708:
    00002320: 	movdqa	(%rax), %xmm0
    00002324: 	addq	$0x10, %rax
    00002328: 	psraw	$0x1, %xmm0
    0000232d: 	paddw	%xmm0, %xmm1
    00002331: 	cmpq	%rax, %rbx
    00002334: 	jne	.Ltmp2708 # Offset: 9012
    00002336: 	movdqa	%xmm1, %xmm0
    0000233a: 	cvttsd2si	init_value(%rip), %eax
    00002342: 	psrldq	$0x8, %xmm0
    00002347: 	paddw	%xmm0, %xmm1
    0000234b: 	movdqa	%xmm1, %xmm0
    0000234f: 	psrldq	$0x4, %xmm0
    00002354: 	sarw	%ax
    00002357: 	imulw	$0x1f40, %ax, %ax
    0000235c: 	paddw	%xmm0, %xmm1
    00002360: 	movdqa	%xmm1, %xmm0
    00002364: 	psrldq	$0x2, %xmm0
    00002369: 	paddw	%xmm0, %xmm1
    0000236d: 	pextrw	$0x0, %xmm1, %edx
    00002372: 	cmpw	%dx, %ax
    00002375: 	je	.Ltmp2709 # Offset: 9077
    00002377: 	movl	current_test(%rip), %edx
    0000237d: 	leaq	DATAat0x571d0(%rip), %rsi
    00002384: 	movl	$0x1, %edi
    00002389: 	xorl	%eax, %eax
    0000238b: 	callq	__printf_chk@PLT # Offset: 9099
    00002390: 	movl	iterations(%rip), %ecx
.Ltmp2709:
    00002396: 	addl	$0x1, (%rsp)
    0000239a: 	movl	(%rsp), %eax
    0000239d: 	cmpl	%ecx, %eax
    0000239f: 	jl	.Ltmp2710 # Offset: 9119
.Ltmp2707:
    000023a5: 	movq	%r12, %rsi
    000023a8: 	movq	%r15, %rdi
    000023ab: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9131
    000023b0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023b7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000023be: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000023c5: 	je	.Ltmp2711 # Offset: 9157
.Ltmp3011:
    000023cb: 	movq	-0x20(%rax), %rdi
    000023cf: 	movq	%rdi, (%rsp)
    000023d3: 	callq	clock@PLT # Offset: 9171
    000023d8: 	movq	(%rsp), %rdi
    000023dc: 	pxor	%xmm0, %xmm0
    000023e0: 	movq	%rax, end_time(%rip)
    000023e7: 	subq	start_time(%rip), %rax
    000023ee: 	cvtsi2sd	%rax, %xmm0
    000023f3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000023fb: 	callq	_Z13record_resultdPKc # Offset: 9211
    00002400: 	movq	0xa0(%rsp), %rdi
    00002408: 	cmpq	%r13, %rdi
    0000240b: 	je	.Ltmp2712 # Offset: 9227
    0000240d: 	movq	0xb0(%rsp), %rax
    00002415: 	leaq	0x1(%rax), %rsi
    00002419: 	callq	_ZdlPvm@PLT # Offset: 9241
.Ltmp2712:
    0000241e: 	leaq	DATAat0x579c8(%rip), %rdx
    00002425: 	movq	%r14, %rsi
    00002428: 	movq	%r12, %rdi
    0000242b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9259
    00002430: 	callq	clock@PLT # Offset: 9264
    00002435: 	movl	iterations(%rip), %esi
    0000243b: 	movl	$0x0, (%rsp)
    00002442: 	movq	%rax, start_time(%rip)
    00002449: 	testl	%esi, %esi
    0000244b: 	jle	.Ltmp2713 # Offset: 9291
    00002451: 	nopl	(%rax) # Size: 7
.Ltmp2717:
    00002458: 	pxor	%xmm4, %xmm4
    0000245c: 	movq	%rbp, %rax
    0000245f: 	pxor	%xmm6, %xmm6
    00002463: 	movdqa	%xmm4, %xmm7
    00002467: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2714:
    00002470: 	movdqa	(%rax), %xmm2
    00002474: 	movdqa	%xmm7, %xmm1
    00002478: 	movdqa	%xmm6, %xmm0
    0000247c: 	addq	$0x10, %rax
    00002480: 	pcmpgtw	%xmm2, %xmm1
    00002484: 	movdqa	%xmm2, %xmm3
    00002488: 	movdqa	%xmm2, %xmm5
    0000248c: 	psraw	$0x1, %xmm2
    00002491: 	punpcklwd	%xmm1, %xmm3
    00002495: 	punpckhwd	%xmm1, %xmm5
    00002499: 	psubd	%xmm3, %xmm0
    0000249d: 	movdqa	%xmm6, %xmm3
    000024a1: 	psubd	%xmm5, %xmm3
    000024a5: 	psrad	$0x1, %xmm0
    000024aa: 	psrad	$0x1, %xmm3
    000024af: 	movdqa	%xmm0, %xmm5
    000024b3: 	punpcklwd	%xmm3, %xmm0
    000024b7: 	punpckhwd	%xmm3, %xmm5
    000024bb: 	movdqa	%xmm0, %xmm3
    000024bf: 	punpcklwd	%xmm5, %xmm0
    000024c3: 	punpckhwd	%xmm5, %xmm3
    000024c7: 	punpcklwd	%xmm3, %xmm0
    000024cb: 	movdqa	%xmm7, %xmm3
    000024cf: 	psubw	%xmm0, %xmm3
    000024d3: 	pand	%xmm1, %xmm3
    000024d7: 	pandn	%xmm2, %xmm1
    000024db: 	por	%xmm3, %xmm1
    000024df: 	paddw	%xmm1, %xmm4
    000024e3: 	cmpq	%rbx, %rax
    000024e6: 	jne	.Ltmp2714 # Offset: 9446
    000024e8: 	movdqa	%xmm4, %xmm0
    000024ec: 	cvttsd2si	init_value(%rip), %edx
    000024f4: 	psrldq	$0x8, %xmm0
    000024f9: 	paddw	%xmm0, %xmm4
    000024fd: 	movdqa	%xmm4, %xmm0
    00002501: 	psrldq	$0x4, %xmm0
    00002506: 	movl	%edx, %eax
    00002508: 	paddw	%xmm0, %xmm4
    0000250c: 	sarw	%ax
    0000250f: 	movdqa	%xmm4, %xmm0
    00002513: 	psrldq	$0x2, %xmm0
    00002518: 	paddw	%xmm0, %xmm4
    0000251c: 	pextrw	$0x0, %xmm4, %ecx
    00002521: 	testw	%dx, %dx
    00002524: 	jns	.Ltmp2715 # Offset: 9508
    00002526: 	movswl	%dx, %eax
    00002529: 	negl	%eax
    0000252b: 	sarl	%eax
    0000252d: 	negl	%eax
.Ltmp2715:
    0000252f: 	imulw	$0x1f40, %ax, %ax
    00002534: 	cmpw	%cx, %ax
    00002537: 	je	.Ltmp2716 # Offset: 9527
    00002539: 	movl	current_test(%rip), %edx
    0000253f: 	leaq	DATAat0x571d0(%rip), %rsi
    00002546: 	movl	$0x1, %edi
    0000254b: 	xorl	%eax, %eax
    0000254d: 	callq	__printf_chk@PLT # Offset: 9549
    00002552: 	movl	iterations(%rip), %esi
.Ltmp2716:
    00002558: 	addl	$0x1, (%rsp)
    0000255c: 	movl	(%rsp), %eax
    0000255f: 	cmpl	%esi, %eax
    00002561: 	jl	.Ltmp2717 # Offset: 9569
.Ltmp2713:
    00002567: 	movq	%r12, %rsi
    0000256a: 	movq	%r15, %rdi
    0000256d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9581
    00002572: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002579: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002580: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002587: 	je	.Ltmp2718 # Offset: 9607
.Ltmp3010:
    0000258d: 	movq	-0x20(%rax), %rdi
    00002591: 	movq	%rdi, (%rsp)
    00002595: 	callq	clock@PLT # Offset: 9621
    0000259a: 	movq	(%rsp), %rdi
    0000259e: 	pxor	%xmm0, %xmm0
    000025a2: 	movq	%rax, end_time(%rip)
    000025a9: 	subq	start_time(%rip), %rax
    000025b0: 	cvtsi2sd	%rax, %xmm0
    000025b5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000025bd: 	callq	_Z13record_resultdPKc # Offset: 9661
    000025c2: 	movq	0xa0(%rsp), %rdi
    000025ca: 	cmpq	%r13, %rdi
    000025cd: 	je	.Ltmp2719 # Offset: 9677
    000025cf: 	movq	0xb0(%rsp), %rax
    000025d7: 	leaq	0x1(%rax), %rsi
    000025db: 	callq	_ZdlPvm@PLT # Offset: 9691
.Ltmp2719:
    000025e0: 	leaq	DATAat0x57484(%rip), %rdx
    000025e7: 	movq	%r14, %rsi
    000025ea: 	movq	%r12, %rdi
    000025ed: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9709
    000025f2: 	callq	clock@PLT # Offset: 9714
    000025f7: 	movl	iterations(%rip), %ecx
    000025fd: 	movl	$0x0, (%rsp)
    00002604: 	movq	%rax, start_time(%rip)
    0000260b: 	testl	%ecx, %ecx
    0000260d: 	jle	.Ltmp2720 # Offset: 9741
    00002613: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2723:
    00002618: 	pxor	%xmm1, %xmm1
    0000261c: 	movq	%rbp, %rax
    0000261f: 	movdqa	%xmm1, %xmm3
    00002623: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2721:
    00002628: 	movdqa	%xmm3, %xmm2
    0000262c: 	movdqa	(%rax), %xmm0
    00002630: 	addq	$0x10, %rax
    00002634: 	pcmpgtw	-0x10(%rax), %xmm2
    00002639: 	psubw	%xmm2, %xmm0
    0000263d: 	psraw	$0x1, %xmm0
    00002642: 	paddw	%xmm0, %xmm1
    00002646: 	cmpq	%rax, %rbx
    00002649: 	jne	.Ltmp2721 # Offset: 9801
    0000264b: 	cvttsd2si	init_value(%rip), %edx
    00002653: 	movdqa	%xmm1, %xmm0
    00002657: 	psrldq	$0x8, %xmm0
    0000265c: 	paddw	%xmm0, %xmm1
    00002660: 	movdqa	%xmm1, %xmm0
    00002664: 	movl	%edx, %eax
    00002666: 	psrldq	$0x4, %xmm0
    0000266b: 	shrw	$0xf, %ax
    0000266f: 	paddw	%xmm0, %xmm1
    00002673: 	addl	%edx, %eax
    00002675: 	movdqa	%xmm1, %xmm0
    00002679: 	sarw	%ax
    0000267c: 	psrldq	$0x2, %xmm0
    00002681: 	imulw	$0x1f40, %ax, %ax
    00002686: 	paddw	%xmm0, %xmm1
    0000268a: 	pextrw	$0x0, %xmm1, %edx
    0000268f: 	cmpw	%dx, %ax
    00002692: 	je	.Ltmp2722 # Offset: 9874
    00002694: 	movl	current_test(%rip), %edx
    0000269a: 	leaq	DATAat0x571d0(%rip), %rsi
    000026a1: 	movl	$0x1, %edi
    000026a6: 	xorl	%eax, %eax
    000026a8: 	callq	__printf_chk@PLT # Offset: 9896
    000026ad: 	movl	iterations(%rip), %ecx
.Ltmp2722:
    000026b3: 	addl	$0x1, (%rsp)
    000026b7: 	movl	(%rsp), %eax
    000026ba: 	cmpl	%ecx, %eax
    000026bc: 	jl	.Ltmp2723 # Offset: 9916
.Ltmp2720:
    000026c2: 	movq	%r12, %rsi
    000026c5: 	movq	%r15, %rdi
    000026c8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9928
    000026cd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000026d4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000026db: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000026e2: 	je	.Ltmp2724 # Offset: 9954
.Ltmp3009:
    000026e8: 	movq	-0x20(%rax), %rdi
    000026ec: 	movq	%rdi, (%rsp)
    000026f0: 	callq	clock@PLT # Offset: 9968
    000026f5: 	movq	(%rsp), %rdi
    000026f9: 	pxor	%xmm0, %xmm0
    000026fd: 	movq	%rax, end_time(%rip)
    00002704: 	subq	start_time(%rip), %rax
    0000270b: 	cvtsi2sd	%rax, %xmm0
    00002710: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002718: 	callq	_Z13record_resultdPKc # Offset: 10008
    0000271d: 	movq	0xa0(%rsp), %rdi
    00002725: 	cmpq	%r13, %rdi
    00002728: 	je	.Ltmp2725 # Offset: 10024
    0000272a: 	movq	0xb0(%rsp), %rax
    00002732: 	leaq	0x1(%rax), %rsi
    00002736: 	callq	_ZdlPvm@PLT # Offset: 10038
.Ltmp2725:
    0000273b: 	leaq	DATAat0x57498(%rip), %rdx
    00002742: 	movq	%r14, %rsi
    00002745: 	movq	%r12, %rdi
    00002748: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10056
    0000274d: 	movq	%r12, %rcx
    00002750: 	movl	$0x2, %edx
    00002755: 	movl	$0x1f40, %esi
    0000275a: 	movq	%rbp, %rdi
    0000275d: 	callq	_Z14test_variable1Is22custom_divide_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10077
    00002762: 	movq	0xa0(%rsp), %rdi
    0000276a: 	cmpq	%r13, %rdi
    0000276d: 	je	.Ltmp2726 # Offset: 10093
    0000276f: 	movq	0xb0(%rsp), %rax
    00002777: 	leaq	0x1(%rax), %rsi
    0000277b: 	callq	_ZdlPvm@PLT # Offset: 10107
.Ltmp2726:
    00002780: 	leaq	DATAat0x574ae(%rip), %rdx
    00002787: 	movq	%r14, %rsi
    0000278a: 	movq	%r12, %rdi
    0000278d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10125
    00002792: 	callq	clock@PLT # Offset: 10130
    00002797: 	movl	iterations(%rip), %ecx
    0000279d: 	movl	$0x0, (%rsp)
    000027a4: 	movq	%rax, start_time(%rip)
    000027ab: 	testl	%ecx, %ecx
    000027ad: 	jle	.Ltmp2727 # Offset: 10157
    000027b3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2730:
    000027b8: 	pxor	%xmm1, %xmm1
    000027bc: 	movq	%rbp, %rax
    000027bf: 	movdqa	%xmm1, %xmm3
    000027c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2728:
    000027c8: 	movdqa	%xmm3, %xmm2
    000027cc: 	movdqa	(%rax), %xmm0
    000027d0: 	addq	$0x10, %rax
    000027d4: 	pcmpgtw	-0x10(%rax), %xmm2
    000027d9: 	psubw	%xmm2, %xmm0
    000027dd: 	psraw	$0x1, %xmm0
    000027e2: 	paddw	%xmm0, %xmm1
    000027e6: 	cmpq	%rbx, %rax
    000027e9: 	jne	.Ltmp2728 # Offset: 10217
    000027eb: 	cvttsd2si	init_value(%rip), %edx
    000027f3: 	movdqa	%xmm1, %xmm0
    000027f7: 	psrldq	$0x8, %xmm0
    000027fc: 	paddw	%xmm0, %xmm1
    00002800: 	movdqa	%xmm1, %xmm0
    00002804: 	movl	%edx, %eax
    00002806: 	psrldq	$0x4, %xmm0
    0000280b: 	shrw	$0xf, %ax
    0000280f: 	paddw	%xmm0, %xmm1
    00002813: 	addl	%edx, %eax
    00002815: 	movdqa	%xmm1, %xmm0
    00002819: 	sarw	%ax
    0000281c: 	psrldq	$0x2, %xmm0
    00002821: 	imulw	$0x1f40, %ax, %ax
    00002826: 	paddw	%xmm0, %xmm1
    0000282a: 	pextrw	$0x0, %xmm1, %edx
    0000282f: 	cmpw	%dx, %ax
    00002832: 	je	.Ltmp2729 # Offset: 10290
    00002834: 	movl	current_test(%rip), %edx
    0000283a: 	leaq	DATAat0x571d0(%rip), %rsi
    00002841: 	movl	$0x1, %edi
    00002846: 	xorl	%eax, %eax
    00002848: 	callq	__printf_chk@PLT # Offset: 10312
    0000284d: 	movl	iterations(%rip), %ecx
.Ltmp2729:
    00002853: 	addl	$0x1, (%rsp)
    00002857: 	movl	(%rsp), %eax
    0000285a: 	cmpl	%ecx, %eax
    0000285c: 	jl	.Ltmp2730 # Offset: 10332
.Ltmp2727:
    00002862: 	movq	%r12, %rsi
    00002865: 	movq	%r15, %rdi
    00002868: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10344
    0000286d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002874: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000287b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002882: 	je	.Ltmp2731 # Offset: 10370
.Ltmp3008:
    00002888: 	movq	-0x20(%rax), %rdi
    0000288c: 	movq	%rdi, (%rsp)
    00002890: 	callq	clock@PLT # Offset: 10384
    00002895: 	movq	(%rsp), %rdi
    00002899: 	pxor	%xmm0, %xmm0
    0000289d: 	movq	%rax, end_time(%rip)
    000028a4: 	subq	start_time(%rip), %rax
    000028ab: 	cvtsi2sd	%rax, %xmm0
    000028b0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000028b8: 	callq	_Z13record_resultdPKc # Offset: 10424
    000028bd: 	movq	0xa0(%rsp), %rdi
    000028c5: 	cmpq	%r13, %rdi
    000028c8: 	je	.Ltmp2732 # Offset: 10440
    000028ca: 	movq	0xb0(%rsp), %rax
    000028d2: 	leaq	0x1(%rax), %rsi
    000028d6: 	callq	_ZdlPvm@PLT # Offset: 10454
.Ltmp2732:
    000028db: 	leaq	DATAat0x574c4(%rip), %rdx
    000028e2: 	movq	%r14, %rsi
    000028e5: 	movq	%r12, %rdi
    000028e8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10472
    000028ed: 	callq	clock@PLT # Offset: 10477
    000028f2: 	movl	iterations(%rip), %ecx
    000028f8: 	movl	$0x0, (%rsp)
    000028ff: 	movq	%rax, start_time(%rip)
    00002906: 	testl	%ecx, %ecx
    00002908: 	jle	.Ltmp2733 # Offset: 10504
    0000290e: 	nop # Size: 2
.Ltmp2736:
    00002910: 	movq	%rbp, %rax
    00002913: 	pxor	%xmm1, %xmm1
    00002917: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2734:
    00002920: 	movdqa	(%rax), %xmm0
    00002924: 	addq	$0x10, %rax
    00002928: 	psraw	$0x3, %xmm0
    0000292d: 	paddw	%xmm0, %xmm1
    00002931: 	cmpq	%rbx, %rax
    00002934: 	jne	.Ltmp2734 # Offset: 10548
    00002936: 	movdqa	%xmm1, %xmm0
    0000293a: 	cvttsd2si	init_value(%rip), %eax
    00002942: 	psrldq	$0x8, %xmm0
    00002947: 	paddw	%xmm0, %xmm1
    0000294b: 	movdqa	%xmm1, %xmm0
    0000294f: 	psrldq	$0x4, %xmm0
    00002954: 	sarw	$0x3, %ax
    00002958: 	imulw	$0x1f40, %ax, %ax
    0000295d: 	paddw	%xmm0, %xmm1
    00002961: 	movdqa	%xmm1, %xmm0
    00002965: 	psrldq	$0x2, %xmm0
    0000296a: 	paddw	%xmm0, %xmm1
    0000296e: 	pextrw	$0x0, %xmm1, %edx
    00002973: 	cmpw	%dx, %ax
    00002976: 	je	.Ltmp2735 # Offset: 10614
    00002978: 	movl	current_test(%rip), %edx
    0000297e: 	leaq	DATAat0x571d0(%rip), %rsi
    00002985: 	movl	$0x1, %edi
    0000298a: 	xorl	%eax, %eax
    0000298c: 	callq	__printf_chk@PLT # Offset: 10636
    00002991: 	movl	iterations(%rip), %ecx
.Ltmp2735:
    00002997: 	addl	$0x1, (%rsp)
    0000299b: 	movl	(%rsp), %eax
    0000299e: 	cmpl	%ecx, %eax
    000029a0: 	jl	.Ltmp2736 # Offset: 10656
.Ltmp2733:
    000029a6: 	movq	%r12, %rsi
    000029a9: 	movq	%r15, %rdi
    000029ac: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10668
    000029b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000029b8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000029bf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000029c6: 	je	.Ltmp2737 # Offset: 10694
.Ltmp3007:
    000029cc: 	movq	-0x20(%rax), %rdi
    000029d0: 	movq	%rdi, (%rsp)
    000029d4: 	callq	clock@PLT # Offset: 10708
    000029d9: 	movq	(%rsp), %rdi
    000029dd: 	pxor	%xmm0, %xmm0
    000029e1: 	movq	%rax, end_time(%rip)
    000029e8: 	subq	start_time(%rip), %rax
    000029ef: 	cvtsi2sd	%rax, %xmm0
    000029f4: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000029fc: 	callq	_Z13record_resultdPKc # Offset: 10748
    00002a01: 	movq	0xa0(%rsp), %rdi
    00002a09: 	cmpq	%r13, %rdi
    00002a0c: 	je	.Ltmp2738 # Offset: 10764
    00002a0e: 	movq	0xb0(%rsp), %rax
    00002a16: 	leaq	0x1(%rax), %rsi
    00002a1a: 	callq	_ZdlPvm@PLT # Offset: 10778
.Ltmp2738:
    00002a1f: 	leaq	DATAat0x579e8(%rip), %rdx
    00002a26: 	movq	%r14, %rsi
    00002a29: 	movq	%r12, %rdi
    00002a2c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10796
    00002a31: 	movq	%r12, %rdx
    00002a34: 	movl	$0x1f40, %esi
    00002a39: 	movq	%rbp, %rdi
    00002a3c: 	callq	_Z13test_constantIs24shift_divide_toward_zeroIsLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10812
    00002a41: 	movq	0xa0(%rsp), %rdi
    00002a49: 	cmpq	%r13, %rdi
    00002a4c: 	je	.Ltmp2739 # Offset: 10828
    00002a4e: 	movq	0xb0(%rsp), %rax
    00002a56: 	leaq	0x1(%rax), %rsi
    00002a5a: 	callq	_ZdlPvm@PLT # Offset: 10842
.Ltmp2739:
    00002a5f: 	leaq	DATAat0x574d6(%rip), %rdx
    00002a66: 	movq	%r14, %rsi
    00002a69: 	movq	%r12, %rdi
    00002a6c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10860
    00002a71: 	movq	%r12, %rcx
    00002a74: 	movl	$0x8, %edx
    00002a79: 	movl	$0x1f40, %esi
    00002a7e: 	movq	%rbp, %rdi
    00002a81: 	callq	_Z14test_variable1Is22custom_divide_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10881
    00002a86: 	movq	0xa0(%rsp), %rdi
    00002a8e: 	cmpq	%r13, %rdi
    00002a91: 	je	.Ltmp2740 # Offset: 10897
    00002a93: 	movq	0xb0(%rsp), %rax
    00002a9b: 	leaq	0x1(%rax), %rsi
    00002a9f: 	callq	_ZdlPvm@PLT # Offset: 10911
.Ltmp2740:
    00002aa4: 	leaq	DATAat0x574ec(%rip), %rdx
    00002aab: 	movq	%r14, %rsi
    00002aae: 	movq	%r12, %rdi
    00002ab1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10929
    00002ab6: 	callq	clock@PLT # Offset: 10934
    00002abb: 	movl	iterations(%rip), %ecx
    00002ac1: 	movq	%rax, start_time(%rip)
    00002ac8: 	testl	%ecx, %ecx
    00002aca: 	jle	.Ltmp2741 # Offset: 10954
    00002ad0: 	movdqa	DATAat0x57cb0(%rip), %xmm7
    00002ad8: 	movl	$0x0, 0x1c(%rsp)
    00002ae0: 	movaps	%xmm7, (%rsp)
    00002ae4: 	nopl	(%rax) # Size: 4
.Ltmp2744:
    00002ae8: 	pxor	%xmm1, %xmm1
    00002aec: 	movq	%rbp, %rax
    00002aef: 	movdqa	%xmm1, %xmm2
    00002af3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2742:
    00002af8: 	movdqa	%xmm2, %xmm0
    00002afc: 	addq	$0x10, %rax
    00002b00: 	pcmpgtw	-0x10(%rax), %xmm0
    00002b05: 	pand	(%rsp), %xmm0
    00002b0a: 	paddw	-0x10(%rax), %xmm0
    00002b0f: 	psraw	$0x3, %xmm0
    00002b14: 	paddw	%xmm0, %xmm1
    00002b18: 	cmpq	%rbx, %rax
    00002b1b: 	jne	.Ltmp2742 # Offset: 11035
    00002b1d: 	cvttsd2si	init_value(%rip), %edx
    00002b25: 	movdqa	%xmm1, %xmm0
    00002b29: 	psrldq	$0x8, %xmm0
    00002b2e: 	paddw	%xmm0, %xmm1
    00002b32: 	movdqa	%xmm1, %xmm0
    00002b36: 	testw	%dx, %dx
    00002b39: 	psrldq	$0x4, %xmm0
    00002b3e: 	leal	0x7(%rdx), %eax
    00002b41: 	cmovnsl	%edx, %eax
    00002b44: 	paddw	%xmm0, %xmm1
    00002b48: 	movdqa	%xmm1, %xmm0
    00002b4c: 	sarw	$0x3, %ax
    00002b50: 	psrldq	$0x2, %xmm0
    00002b55: 	imulw	$0x1f40, %ax, %ax
    00002b5a: 	paddw	%xmm0, %xmm1
    00002b5e: 	pextrw	$0x0, %xmm1, %edx
    00002b63: 	cmpw	%dx, %ax
    00002b66: 	je	.Ltmp2743 # Offset: 11110
    00002b68: 	movl	current_test(%rip), %edx
    00002b6e: 	leaq	DATAat0x571d0(%rip), %rsi
    00002b75: 	movl	$0x1, %edi
    00002b7a: 	xorl	%eax, %eax
    00002b7c: 	callq	__printf_chk@PLT # Offset: 11132
    00002b81: 	movl	iterations(%rip), %ecx
.Ltmp2743:
    00002b87: 	addl	$0x1, 0x1c(%rsp)
    00002b8c: 	movl	0x1c(%rsp), %eax
    00002b90: 	cmpl	%ecx, %eax
    00002b92: 	jl	.Ltmp2744 # Offset: 11154
.Ltmp2741:
    00002b98: 	movq	%r12, %rsi
    00002b9b: 	movq	%r15, %rdi
    00002b9e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11166
    00002ba3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002baa: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002bb1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002bb8: 	je	.Ltmp2745 # Offset: 11192
.Ltmp3006:
    00002bbe: 	movq	-0x20(%rax), %rdi
    00002bc2: 	movq	%rdi, (%rsp)
    00002bc6: 	callq	clock@PLT # Offset: 11206
    00002bcb: 	movq	(%rsp), %rdi
    00002bcf: 	pxor	%xmm0, %xmm0
    00002bd3: 	movq	%rax, end_time(%rip)
    00002bda: 	subq	start_time(%rip), %rax
    00002be1: 	cvtsi2sd	%rax, %xmm0
    00002be6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002bee: 	callq	_Z13record_resultdPKc # Offset: 11246
    00002bf3: 	movq	0xa0(%rsp), %rdi
    00002bfb: 	cmpq	%r13, %rdi
    00002bfe: 	je	.Ltmp2746 # Offset: 11262
    00002c00: 	movq	0xb0(%rsp), %rax
    00002c08: 	leaq	0x1(%rax), %rsi
    00002c0c: 	callq	_ZdlPvm@PLT # Offset: 11276
.Ltmp2746:
    00002c11: 	leaq	DATAat0x57502(%rip), %rdx
    00002c18: 	movq	%r14, %rsi
    00002c1b: 	movq	%r12, %rdi
    00002c1e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11294
    00002c23: 	callq	clock@PLT # Offset: 11299
    00002c28: 	movl	iterations(%rip), %ecx
    00002c2e: 	movl	$0x0, (%rsp)
    00002c35: 	movq	%rax, start_time(%rip)
    00002c3c: 	testl	%ecx, %ecx
    00002c3e: 	jle	.Ltmp2747 # Offset: 11326
    00002c44: 	nopl	(%rax) # Size: 4
.Ltmp2750:
    00002c48: 	movq	%rbp, %rax
    00002c4b: 	pxor	%xmm1, %xmm1
    00002c4f: 	nop # Size: 1
.Ltmp2748:
    00002c50: 	movdqa	(%rax), %xmm0
    00002c54: 	addq	$0x10, %rax
    00002c58: 	psraw	$0x6, %xmm0
    00002c5d: 	paddw	%xmm0, %xmm1
    00002c61: 	cmpq	%rax, %rbx
    00002c64: 	jne	.Ltmp2748 # Offset: 11364
    00002c66: 	movdqa	%xmm1, %xmm0
    00002c6a: 	cvttsd2si	init_value(%rip), %eax
    00002c72: 	psrldq	$0x8, %xmm0
    00002c77: 	paddw	%xmm0, %xmm1
    00002c7b: 	movdqa	%xmm1, %xmm0
    00002c7f: 	psrldq	$0x4, %xmm0
    00002c84: 	sarw	$0x6, %ax
    00002c88: 	imulw	$0x1f40, %ax, %ax
    00002c8d: 	paddw	%xmm0, %xmm1
    00002c91: 	movdqa	%xmm1, %xmm0
    00002c95: 	psrldq	$0x2, %xmm0
    00002c9a: 	paddw	%xmm0, %xmm1
    00002c9e: 	pextrw	$0x0, %xmm1, %edx
    00002ca3: 	cmpw	%dx, %ax
    00002ca6: 	je	.Ltmp2749 # Offset: 11430
    00002ca8: 	movl	current_test(%rip), %edx
    00002cae: 	leaq	DATAat0x571d0(%rip), %rsi
    00002cb5: 	movl	$0x1, %edi
    00002cba: 	xorl	%eax, %eax
    00002cbc: 	callq	__printf_chk@PLT # Offset: 11452
    00002cc1: 	movl	iterations(%rip), %ecx
.Ltmp2749:
    00002cc7: 	addl	$0x1, (%rsp)
    00002ccb: 	movl	(%rsp), %eax
    00002cce: 	cmpl	%ecx, %eax
    00002cd0: 	jl	.Ltmp2750 # Offset: 11472
.Ltmp2747:
    00002cd6: 	movq	%r12, %rsi
    00002cd9: 	movq	%r15, %rdi
    00002cdc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11484
    00002ce1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002ce8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002cef: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002cf6: 	je	.Ltmp2751 # Offset: 11510
.Ltmp3005:
    00002cfc: 	movq	-0x20(%rax), %rdi
    00002d00: 	movq	%rdi, (%rsp)
    00002d04: 	callq	clock@PLT # Offset: 11524
    00002d09: 	movq	(%rsp), %rdi
    00002d0d: 	pxor	%xmm0, %xmm0
    00002d11: 	movq	%rax, end_time(%rip)
    00002d18: 	subq	start_time(%rip), %rax
    00002d1f: 	cvtsi2sd	%rax, %xmm0
    00002d24: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002d2c: 	callq	_Z13record_resultdPKc # Offset: 11564
    00002d31: 	movq	0xa0(%rsp), %rdi
    00002d39: 	cmpq	%r13, %rdi
    00002d3c: 	je	.Ltmp2752 # Offset: 11580
    00002d3e: 	movq	0xb0(%rsp), %rax
    00002d46: 	leaq	0x1(%rax), %rsi
    00002d4a: 	callq	_ZdlPvm@PLT # Offset: 11594
.Ltmp2752:
    00002d4f: 	leaq	DATAat0x57a08(%rip), %rdx
    00002d56: 	movq	%r14, %rsi
    00002d59: 	movq	%r12, %rdi
    00002d5c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11612
    00002d61: 	movq	%r12, %rdx
    00002d64: 	movl	$0x1f40, %esi
    00002d69: 	movq	%rbp, %rdi
    00002d6c: 	callq	_Z13test_constantIs24shift_divide_toward_zeroIsLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11628
    00002d71: 	movq	0xa0(%rsp), %rdi
    00002d79: 	cmpq	%r13, %rdi
    00002d7c: 	je	.Ltmp2753 # Offset: 11644
    00002d7e: 	movq	0xb0(%rsp), %rax
    00002d86: 	leaq	0x1(%rax), %rsi
    00002d8a: 	callq	_ZdlPvm@PLT # Offset: 11658
.Ltmp2753:
    00002d8f: 	leaq	DATAat0x57514(%rip), %rdx
    00002d96: 	movq	%r14, %rsi
    00002d99: 	movq	%r12, %rdi
    00002d9c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11676
    00002da1: 	movq	%r12, %rcx
    00002da4: 	movl	$0x40, %edx
    00002da9: 	movl	$0x1f40, %esi
    00002dae: 	movq	%rbp, %rdi
    00002db1: 	callq	_Z14test_variable1Is22custom_divide_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11697
    00002db6: 	movq	0xa0(%rsp), %rdi
    00002dbe: 	cmpq	%r13, %rdi
    00002dc1: 	je	.Ltmp2754 # Offset: 11713
    00002dc3: 	movq	0xb0(%rsp), %rax
    00002dcb: 	leaq	0x1(%rax), %rsi
    00002dcf: 	callq	_ZdlPvm@PLT # Offset: 11727
.Ltmp2754:
    00002dd4: 	leaq	DATAat0x5752b(%rip), %rdx
    00002ddb: 	movq	%r14, %rsi
    00002dde: 	movq	%r12, %rdi
    00002de1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11745
    00002de6: 	callq	clock@PLT # Offset: 11750
    00002deb: 	movl	iterations(%rip), %ecx
    00002df1: 	movq	%rax, start_time(%rip)
    00002df8: 	testl	%ecx, %ecx
    00002dfa: 	jle	.Ltmp2755 # Offset: 11770
    00002e00: 	movdqa	DATAat0x57cc0(%rip), %xmm7
    00002e08: 	movl	$0x0, 0x1c(%rsp)
    00002e10: 	movaps	%xmm7, (%rsp)
    00002e14: 	nopl	(%rax) # Size: 4
.Ltmp2758:
    00002e18: 	pxor	%xmm1, %xmm1
    00002e1c: 	movq	%rbp, %rax
    00002e1f: 	movdqa	%xmm1, %xmm2
    00002e23: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2756:
    00002e28: 	movdqa	%xmm2, %xmm0
    00002e2c: 	addq	$0x10, %rax
    00002e30: 	pcmpgtw	-0x10(%rax), %xmm0
    00002e35: 	pand	(%rsp), %xmm0
    00002e3a: 	paddw	-0x10(%rax), %xmm0
    00002e3f: 	psraw	$0x6, %xmm0
    00002e44: 	paddw	%xmm0, %xmm1
    00002e48: 	cmpq	%rbx, %rax
    00002e4b: 	jne	.Ltmp2756 # Offset: 11851
    00002e4d: 	cvttsd2si	init_value(%rip), %edx
    00002e55: 	movdqa	%xmm1, %xmm0
    00002e59: 	psrldq	$0x8, %xmm0
    00002e5e: 	paddw	%xmm0, %xmm1
    00002e62: 	movdqa	%xmm1, %xmm0
    00002e66: 	testw	%dx, %dx
    00002e69: 	psrldq	$0x4, %xmm0
    00002e6e: 	leal	0x3f(%rdx), %eax
    00002e71: 	cmovnsl	%edx, %eax
    00002e74: 	paddw	%xmm0, %xmm1
    00002e78: 	movdqa	%xmm1, %xmm0
    00002e7c: 	sarw	$0x6, %ax
    00002e80: 	psrldq	$0x2, %xmm0
    00002e85: 	imulw	$0x1f40, %ax, %ax
    00002e8a: 	paddw	%xmm0, %xmm1
    00002e8e: 	pextrw	$0x0, %xmm1, %edx
    00002e93: 	cmpw	%dx, %ax
    00002e96: 	je	.Ltmp2757 # Offset: 11926
    00002e98: 	movl	current_test(%rip), %edx
    00002e9e: 	leaq	DATAat0x571d0(%rip), %rsi
    00002ea5: 	movl	$0x1, %edi
    00002eaa: 	xorl	%eax, %eax
    00002eac: 	callq	__printf_chk@PLT # Offset: 11948
    00002eb1: 	movl	iterations(%rip), %ecx
.Ltmp2757:
    00002eb7: 	addl	$0x1, 0x1c(%rsp)
    00002ebc: 	movl	0x1c(%rsp), %eax
    00002ec0: 	cmpl	%ecx, %eax
    00002ec2: 	jl	.Ltmp2758 # Offset: 11970
.Ltmp2755:
    00002ec8: 	movq	%r12, %rsi
    00002ecb: 	movq	%r15, %rdi
    00002ece: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11982
    00002ed3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002eda: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002ee1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002ee8: 	je	.Ltmp2759 # Offset: 12008
.Ltmp3004:
    00002eee: 	movq	-0x20(%rax), %rdi
    00002ef2: 	movq	%rdi, (%rsp)
    00002ef6: 	callq	clock@PLT # Offset: 12022
    00002efb: 	movq	(%rsp), %rdi
    00002eff: 	pxor	%xmm0, %xmm0
    00002f03: 	movq	%rax, end_time(%rip)
    00002f0a: 	subq	start_time(%rip), %rax
    00002f11: 	cvtsi2sd	%rax, %xmm0
    00002f16: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002f1e: 	callq	_Z13record_resultdPKc # Offset: 12062
    00002f23: 	movq	0xa0(%rsp), %rdi
    00002f2b: 	cmpq	%r13, %rdi
    00002f2e: 	je	.Ltmp2760 # Offset: 12078
    00002f30: 	movq	0xb0(%rsp), %rax
    00002f38: 	leaq	0x1(%rax), %rsi
    00002f3c: 	callq	_ZdlPvm@PLT # Offset: 12092
.Ltmp2760:
    00002f41: 	leaq	0x80(%rsp), %rdi
    00002f49: 	leaq	DATAat0x57542(%rip), %rdx
    00002f50: 	movq	%r14, %rsi
    00002f53: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12115
    00002f58: 	movl	iterations(%rip), %edx
    00002f5e: 	xorl	%r8d, %r8d
    00002f61: 	xorl	%ecx, %ecx
    00002f63: 	movl	$0x1f40, %esi
    00002f68: 	movq	0x80(%rsp), %rdi
    00002f70: 	callq	_Z9summarizePKciiii # Offset: 12144
    00002f75: 	leaq	DATAat0x5755d(%rip), %rdx
    00002f7c: 	movq	%r14, %rsi
    00002f7f: 	movq	%r12, %rdi
    00002f82: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12162
    00002f87: 	callq	clock@PLT # Offset: 12167
    00002f8c: 	movl	iterations(%rip), %ecx
    00002f92: 	movq	%rax, start_time(%rip)
    00002f99: 	testl	%ecx, %ecx
    00002f9b: 	jle	.Ltmp2761 # Offset: 12187
    00002fa1: 	movdqa	DATAat0x57f10(%rip), %xmm7
    00002fa9: 	movl	$0x0, 0x1c(%rsp)
    00002fb1: 	movaps	%xmm7, (%rsp)
    00002fb5: 	nopl	(%rax) # Size: 3
.Ltmp2764:
    00002fb8: 	movq	%rbp, %rax
    00002fbb: 	pxor	%xmm0, %xmm0
    00002fbf: 	nop # Size: 1
.Ltmp2762:
    00002fc0: 	movdqa	(%rsp), %xmm1
    00002fc5: 	pand	(%rax), %xmm1
    00002fc9: 	addq	$0x10, %rax
    00002fcd: 	paddw	%xmm1, %xmm0
    00002fd1: 	cmpq	%rbx, %rax
    00002fd4: 	jne	.Ltmp2762 # Offset: 12244
    00002fd6: 	movdqa	%xmm0, %xmm1
    00002fda: 	cvttsd2si	init_value(%rip), %eax
    00002fe2: 	psrldq	$0x8, %xmm1
    00002fe7: 	paddw	%xmm1, %xmm0
    00002feb: 	movdqa	%xmm0, %xmm1
    00002fef: 	psrldq	$0x4, %xmm1
    00002ff4: 	andl	$0x1, %eax
    00002ff7: 	imulw	$0x1f40, %ax, %ax
    00002ffc: 	paddw	%xmm1, %xmm0
    00003000: 	movdqa	%xmm0, %xmm1
    00003004: 	psrldq	$0x2, %xmm1
    00003009: 	paddw	%xmm1, %xmm0
    0000300d: 	pextrw	$0x0, %xmm0, %edx
    00003012: 	cmpw	%dx, %ax
    00003015: 	je	.Ltmp2763 # Offset: 12309
    00003017: 	movl	current_test(%rip), %edx
    0000301d: 	leaq	DATAat0x571d0(%rip), %rsi
    00003024: 	movl	$0x1, %edi
    00003029: 	xorl	%eax, %eax
    0000302b: 	callq	__printf_chk@PLT # Offset: 12331
    00003030: 	movl	iterations(%rip), %ecx
.Ltmp2763:
    00003036: 	addl	$0x1, 0x1c(%rsp)
    0000303b: 	movl	0x1c(%rsp), %eax
    0000303f: 	cmpl	%ecx, %eax
    00003041: 	jl	.Ltmp2764 # Offset: 12353
.Ltmp2761:
    00003047: 	movq	%r12, %rsi
    0000304a: 	movq	%r15, %rdi
    0000304d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12365
    00003052: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003059: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003060: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003067: 	je	.Ltmp2765 # Offset: 12391
.Ltmp3003:
    0000306d: 	movq	-0x20(%rax), %rdi
    00003071: 	movq	%rdi, (%rsp)
    00003075: 	callq	clock@PLT # Offset: 12405
    0000307a: 	movq	(%rsp), %rdi
    0000307e: 	pxor	%xmm0, %xmm0
    00003082: 	movq	%rax, end_time(%rip)
    00003089: 	subq	start_time(%rip), %rax
    00003090: 	cvtsi2sd	%rax, %xmm0
    00003095: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000309d: 	callq	_Z13record_resultdPKc # Offset: 12445
    000030a2: 	movq	0xa0(%rsp), %rdi
    000030aa: 	cmpq	%r13, %rdi
    000030ad: 	je	.Ltmp2766 # Offset: 12461
    000030af: 	movq	0xb0(%rsp), %rax
    000030b7: 	leaq	0x1(%rax), %rsi
    000030bb: 	callq	_ZdlPvm@PLT # Offset: 12475
.Ltmp2766:
    000030c0: 	leaq	DATAat0x57564(%rip), %rdx
    000030c7: 	movq	%r14, %rsi
    000030ca: 	movq	%r12, %rdi
    000030cd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12493
    000030d2: 	callq	clock@PLT # Offset: 12498
    000030d7: 	movl	iterations(%rip), %edi
    000030dd: 	movl	$0x0, (%rsp)
    000030e4: 	movq	%rax, start_time(%rip)
    000030eb: 	testl	%edi, %edi
    000030ed: 	jle	.Ltmp2767 # Offset: 12525
    000030ef: 	nop # Size: 1
.Ltmp2774:
    000030f0: 	movq	%rbp, %rax
    000030f3: 	xorl	%esi, %esi
    000030f5: 	nopl	(%rax) # Size: 3
.Ltmp2770:
    000030f8: 	movzwl	(%rax), %edx
    000030fb: 	movl	%edx, %ecx
    000030fd: 	andl	$0x1, %ecx
    00003100: 	testw	%dx, %dx
    00003103: 	jns	.Ltmp2768 # Offset: 12547
    00003105: 	testb	%cl, %cl
    00003107: 	jne	.Ltmp2769 # Offset: 12551
.Ltmp2768:
    0000310d: 	addq	$0x2, %rax
    00003111: 	addl	%ecx, %esi
    00003113: 	cmpq	%rax, %rbx
    00003116: 	jne	.Ltmp2770 # Offset: 12566
.Ltmp2973:
    00003118: 	cvttsd2si	init_value(%rip), %edx
    00003120: 	movl	%edx, %eax
    00003122: 	andl	$0x1, %eax
    00003125: 	testw	%dx, %dx
    00003128: 	jns	.Ltmp2771 # Offset: 12584
    0000312a: 	testb	%al, %al
    0000312c: 	jne	.Ltmp2772 # Offset: 12588
.Ltmp2771:
    00003132: 	imulw	$0x1f40, %ax, %ax
.Ltmp3032:
    00003137: 	cmpw	%ax, %si
    0000313a: 	je	.Ltmp2773 # Offset: 12602
    0000313c: 	movl	current_test(%rip), %edx
    00003142: 	leaq	DATAat0x571d0(%rip), %rsi
    00003149: 	movl	$0x1, %edi
    0000314e: 	xorl	%eax, %eax
    00003150: 	callq	__printf_chk@PLT # Offset: 12624
    00003155: 	movl	iterations(%rip), %edi
.Ltmp2773:
    0000315b: 	addl	$0x1, (%rsp)
    0000315f: 	movl	(%rsp), %eax
    00003162: 	cmpl	%edi, %eax
    00003164: 	jl	.Ltmp2774 # Offset: 12644
.Ltmp2767:
    00003166: 	movq	%r12, %rsi
    00003169: 	movq	%r15, %rdi
    0000316c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12652
    00003171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003178: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000317f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003186: 	je	.Ltmp2775 # Offset: 12678
.Ltmp3002:
    0000318c: 	movq	-0x20(%rax), %rdi
    00003190: 	movq	%rdi, (%rsp)
    00003194: 	callq	clock@PLT # Offset: 12692
    00003199: 	movq	(%rsp), %rdi
    0000319d: 	pxor	%xmm0, %xmm0
    000031a1: 	movq	%rax, end_time(%rip)
    000031a8: 	subq	start_time(%rip), %rax
    000031af: 	cvtsi2sd	%rax, %xmm0
    000031b4: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000031bc: 	callq	_Z13record_resultdPKc # Offset: 12732
    000031c1: 	movq	0xa0(%rsp), %rdi
    000031c9: 	cmpq	%r13, %rdi
    000031cc: 	je	.Ltmp2776 # Offset: 12748
    000031ce: 	movq	0xb0(%rsp), %rax
    000031d6: 	leaq	0x1(%rax), %rsi
    000031da: 	callq	_ZdlPvm@PLT # Offset: 12762
.Ltmp2776:
    000031df: 	leaq	DATAat0x57575(%rip), %rdx
    000031e6: 	movq	%r14, %rsi
    000031e9: 	movq	%r12, %rdi
    000031ec: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12780
    000031f1: 	callq	clock@PLT # Offset: 12785
    000031f6: 	movl	iterations(%rip), %esi
    000031fc: 	movl	$0x0, (%rsp)
    00003203: 	movq	%rax, start_time(%rip)
    0000320a: 	testl	%esi, %esi
    0000320c: 	jle	.Ltmp2777 # Offset: 12812
    0000320e: 	nop # Size: 2
.Ltmp2782:
    00003210: 	movq	%rbp, %rdx
    00003213: 	xorl	%ecx, %ecx
    00003215: 	nopl	(%rax) # Size: 3
.Ltmp2779:
    00003218: 	movzwl	(%rdx), %eax
    0000321b: 	testw	%ax, %ax
    0000321e: 	jns	.Ltmp2778 # Offset: 12830
    00003224: 	testb	$0x1, %al
    00003226: 	je	.Ltmp2778 # Offset: 12838
    0000322c: 	addq	$0x2, %rdx
    00003230: 	subl	$0x1, %ecx
    00003233: 	cmpq	%rbx, %rdx
    00003236: 	jne	.Ltmp2779 # Offset: 12854
    00003238: 	cvttsd2si	init_value(%rip), %eax
    00003240: 	testw	%ax, %ax
    00003243: 	jns	.Ltmp2780 # Offset: 12867
.Ltmp2971:
    00003249: 	movl	$0xffffe0c0, %edx
    0000324e: 	testb	$0x1, %al
    00003250: 	je	.Ltmp2780 # Offset: 12880
.Ltmp2972:
    00003256: 	cmpw	%dx, %cx
    00003259: 	je	.Ltmp2781 # Offset: 12889
    0000325b: 	movl	current_test(%rip), %edx
    00003261: 	leaq	DATAat0x571d0(%rip), %rsi
    00003268: 	movl	$0x1, %edi
    0000326d: 	xorl	%eax, %eax
    0000326f: 	callq	__printf_chk@PLT # Offset: 12911
    00003274: 	movl	iterations(%rip), %esi
.Ltmp2781:
    0000327a: 	addl	$0x1, (%rsp)
    0000327e: 	movl	(%rsp), %eax
    00003281: 	cmpl	%esi, %eax
    00003283: 	jl	.Ltmp2782 # Offset: 12931
.Ltmp2777:
    00003285: 	movq	%r12, %rsi
    00003288: 	movq	%r15, %rdi
    0000328b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12939
    00003290: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003297: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000329e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000032a5: 	je	.Ltmp2783 # Offset: 12965
.Ltmp3001:
    000032ab: 	movq	-0x20(%rax), %rdi
    000032af: 	movq	%rdi, (%rsp)
    000032b3: 	callq	clock@PLT # Offset: 12979
    000032b8: 	movq	(%rsp), %rdi
    000032bc: 	pxor	%xmm0, %xmm0
    000032c0: 	movq	%rax, end_time(%rip)
    000032c7: 	subq	start_time(%rip), %rax
    000032ce: 	cvtsi2sd	%rax, %xmm0
    000032d3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000032db: 	callq	_Z13record_resultdPKc # Offset: 13019
    000032e0: 	movq	0xa0(%rsp), %rdi
    000032e8: 	cmpq	%r13, %rdi
    000032eb: 	je	.Ltmp2784 # Offset: 13035
    000032ed: 	movq	0xb0(%rsp), %rax
    000032f5: 	leaq	0x1(%rax), %rsi
    000032f9: 	callq	_ZdlPvm@PLT # Offset: 13049
.Ltmp2784:
    000032fe: 	leaq	DATAat0x57587(%rip), %rdx
    00003305: 	movq	%r14, %rsi
    00003308: 	movq	%r12, %rdi
    0000330b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13067
    00003310: 	callq	clock@PLT # Offset: 13072
    00003315: 	movl	iterations(%rip), %ecx
    0000331b: 	movq	%rax, start_time(%rip)
    00003322: 	testl	%ecx, %ecx
    00003324: 	jle	.Ltmp2785 # Offset: 13092
    0000332a: 	movdqa	DATAat0x57f10(%rip), %xmm7
    00003332: 	movl	$0x0, 0x1c(%rsp)
    0000333a: 	movaps	%xmm7, (%rsp)
    0000333e: 	nop # Size: 2
.Ltmp2788:
    00003340: 	movq	%rbp, %rax
    00003343: 	pxor	%xmm1, %xmm1
    00003347: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2786:
    00003350: 	movdqa	(%rax), %xmm0
    00003354: 	addq	$0x10, %rax
    00003358: 	movdqa	%xmm0, %xmm2
    0000335c: 	psrlw	$0xf, %xmm2
    00003361: 	paddw	%xmm2, %xmm0
    00003365: 	pand	(%rsp), %xmm0
    0000336a: 	psubw	%xmm2, %xmm0
    0000336e: 	paddw	%xmm0, %xmm1
    00003372: 	cmpq	%rax, %rbx
    00003375: 	jne	.Ltmp2786 # Offset: 13173
    00003377: 	cvttsd2si	init_value(%rip), %eax
    0000337f: 	movdqa	%xmm1, %xmm0
    00003383: 	psrldq	$0x8, %xmm0
    00003388: 	paddw	%xmm0, %xmm1
    0000338c: 	movdqa	%xmm1, %xmm0
    00003390: 	movl	%eax, %edx
    00003392: 	psrldq	$0x4, %xmm0
    00003397: 	shrw	$0xf, %dx
    0000339b: 	paddw	%xmm0, %xmm1
    0000339f: 	addl	%edx, %eax
    000033a1: 	movdqa	%xmm1, %xmm0
    000033a5: 	andl	$0x1, %eax
    000033a8: 	psrldq	$0x2, %xmm0
    000033ad: 	subl	%edx, %eax
    000033af: 	paddw	%xmm0, %xmm1
    000033b3: 	imulw	$0x1f40, %ax, %ax
    000033b8: 	pextrw	$0x0, %xmm1, %edx
    000033bd: 	cmpw	%dx, %ax
    000033c0: 	je	.Ltmp2787 # Offset: 13248
    000033c2: 	movl	current_test(%rip), %edx
    000033c8: 	leaq	DATAat0x571d0(%rip), %rsi
    000033cf: 	movl	$0x1, %edi
    000033d4: 	xorl	%eax, %eax
    000033d6: 	callq	__printf_chk@PLT # Offset: 13270
    000033db: 	movl	iterations(%rip), %ecx
.Ltmp2787:
    000033e1: 	addl	$0x1, 0x1c(%rsp)
    000033e6: 	movl	0x1c(%rsp), %eax
    000033ea: 	cmpl	%ecx, %eax
    000033ec: 	jl	.Ltmp2788 # Offset: 13292
.Ltmp2785:
    000033f2: 	movq	%r12, %rsi
    000033f5: 	movq	%r15, %rdi
    000033f8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13304
    000033fd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003404: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000340b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003412: 	je	.Ltmp2789 # Offset: 13330
.Ltmp3000:
    00003418: 	movq	-0x20(%rax), %rdi
    0000341c: 	movq	%rdi, (%rsp)
    00003420: 	callq	clock@PLT # Offset: 13344
    00003425: 	movq	(%rsp), %rdi
    00003429: 	pxor	%xmm0, %xmm0
    0000342d: 	movq	%rax, end_time(%rip)
    00003434: 	subq	start_time(%rip), %rax
    0000343b: 	cvtsi2sd	%rax, %xmm0
    00003440: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003448: 	callq	_Z13record_resultdPKc # Offset: 13384
    0000344d: 	movq	0xa0(%rsp), %rdi
    00003455: 	cmpq	%r13, %rdi
    00003458: 	je	.Ltmp2790 # Offset: 13400
    0000345a: 	movq	0xb0(%rsp), %rax
    00003462: 	leaq	0x1(%rax), %rsi
    00003466: 	callq	_ZdlPvm@PLT # Offset: 13414
.Ltmp2790:
    0000346b: 	leaq	DATAat0x5759e(%rip), %rdx
    00003472: 	movq	%r14, %rsi
    00003475: 	movq	%r12, %rdi
    00003478: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13432
    0000347d: 	movq	%r12, %rcx
    00003480: 	movl	$0x2, %edx
    00003485: 	movl	$0x1f40, %esi
    0000348a: 	movq	%rbp, %rdi
    0000348d: 	callq	_Z14test_variable1Is25custom_remainder_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 13453
    00003492: 	movq	0xa0(%rsp), %rdi
    0000349a: 	cmpq	%r13, %rdi
    0000349d: 	je	.Ltmp2791 # Offset: 13469
    0000349f: 	movq	0xb0(%rsp), %rax
    000034a7: 	leaq	0x1(%rax), %rsi
    000034ab: 	callq	_ZdlPvm@PLT # Offset: 13483
.Ltmp2791:
    000034b0: 	leaq	DATAat0x575b7(%rip), %rdx
    000034b7: 	movq	%r14, %rsi
    000034ba: 	movq	%r12, %rdi
    000034bd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13501
    000034c2: 	callq	clock@PLT # Offset: 13506
    000034c7: 	movl	iterations(%rip), %ecx
    000034cd: 	movq	%rax, start_time(%rip)
    000034d4: 	testl	%ecx, %ecx
    000034d6: 	jle	.Ltmp2792 # Offset: 13526
    000034dc: 	movdqa	DATAat0x57f10(%rip), %xmm7
    000034e4: 	movl	$0x0, 0x1c(%rsp)
    000034ec: 	movaps	%xmm7, (%rsp)
.Ltmp2795:
    000034f0: 	movq	%rbp, %rax
    000034f3: 	pxor	%xmm1, %xmm1
    000034f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2793:
    00003500: 	movdqa	(%rax), %xmm0
    00003504: 	addq	$0x10, %rax
    00003508: 	movdqa	%xmm0, %xmm2
    0000350c: 	psrlw	$0xf, %xmm2
    00003511: 	paddw	%xmm2, %xmm0
    00003515: 	pand	(%rsp), %xmm0
    0000351a: 	psubw	%xmm2, %xmm0
    0000351e: 	paddw	%xmm0, %xmm1
    00003522: 	cmpq	%rbx, %rax
    00003525: 	jne	.Ltmp2793 # Offset: 13605
    00003527: 	cvttsd2si	init_value(%rip), %eax
    0000352f: 	movdqa	%xmm1, %xmm0
    00003533: 	psrldq	$0x8, %xmm0
    00003538: 	paddw	%xmm0, %xmm1
    0000353c: 	movdqa	%xmm1, %xmm0
    00003540: 	movl	%eax, %edx
    00003542: 	psrldq	$0x4, %xmm0
    00003547: 	shrw	$0xf, %dx
    0000354b: 	paddw	%xmm0, %xmm1
    0000354f: 	addl	%edx, %eax
    00003551: 	movdqa	%xmm1, %xmm0
    00003555: 	andl	$0x1, %eax
    00003558: 	psrldq	$0x2, %xmm0
    0000355d: 	subl	%edx, %eax
    0000355f: 	paddw	%xmm0, %xmm1
    00003563: 	imulw	$0x1f40, %ax, %ax
    00003568: 	pextrw	$0x0, %xmm1, %edx
    0000356d: 	cmpw	%dx, %ax
    00003570: 	je	.Ltmp2794 # Offset: 13680
    00003572: 	movl	current_test(%rip), %edx
    00003578: 	leaq	DATAat0x571d0(%rip), %rsi
    0000357f: 	movl	$0x1, %edi
    00003584: 	xorl	%eax, %eax
    00003586: 	callq	__printf_chk@PLT # Offset: 13702
    0000358b: 	movl	iterations(%rip), %ecx
.Ltmp2794:
    00003591: 	addl	$0x1, 0x1c(%rsp)
    00003596: 	movl	0x1c(%rsp), %eax
    0000359a: 	cmpl	%ecx, %eax
    0000359c: 	jl	.Ltmp2795 # Offset: 13724
.Ltmp2792:
    000035a2: 	movq	%r12, %rsi
    000035a5: 	movq	%r15, %rdi
    000035a8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13736
    000035ad: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000035b4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000035bb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000035c2: 	je	.Ltmp2796 # Offset: 13762
.Ltmp2999:
    000035c8: 	movq	-0x20(%rax), %rdi
    000035cc: 	movq	%rdi, (%rsp)
    000035d0: 	callq	clock@PLT # Offset: 13776
    000035d5: 	movq	(%rsp), %rdi
    000035d9: 	pxor	%xmm0, %xmm0
    000035dd: 	movq	%rax, end_time(%rip)
    000035e4: 	subq	start_time(%rip), %rax
    000035eb: 	cvtsi2sd	%rax, %xmm0
    000035f0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000035f8: 	callq	_Z13record_resultdPKc # Offset: 13816
    000035fd: 	movq	0xa0(%rsp), %rdi
    00003605: 	cmpq	%r13, %rdi
    00003608: 	je	.Ltmp2797 # Offset: 13832
    0000360a: 	movq	0xb0(%rsp), %rax
    00003612: 	leaq	0x1(%rax), %rsi
    00003616: 	callq	_ZdlPvm@PLT # Offset: 13846
.Ltmp2797:
    0000361b: 	leaq	DATAat0x575d0(%rip), %rdx
    00003622: 	movq	%r14, %rsi
    00003625: 	movq	%r12, %rdi
    00003628: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13864
    0000362d: 	callq	clock@PLT # Offset: 13869
    00003632: 	movl	iterations(%rip), %ecx
    00003638: 	movq	%rax, start_time(%rip)
    0000363f: 	testl	%ecx, %ecx
    00003641: 	jle	.Ltmp2798 # Offset: 13889
    00003647: 	movdqa	DATAat0x57e90(%rip), %xmm7
    0000364f: 	movl	$0x0, 0x1c(%rsp)
    00003657: 	movaps	%xmm7, (%rsp)
    0000365b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2801:
    00003660: 	movq	%rbp, %rax
    00003663: 	pxor	%xmm0, %xmm0
    00003667: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2799:
    00003670: 	movdqa	(%rsp), %xmm1
    00003675: 	pand	(%rax), %xmm1
    00003679: 	addq	$0x10, %rax
    0000367d: 	paddw	%xmm1, %xmm0
    00003681: 	cmpq	%rbx, %rax
    00003684: 	jne	.Ltmp2799 # Offset: 13956
    00003686: 	movdqa	%xmm0, %xmm1
    0000368a: 	cvttsd2si	init_value(%rip), %eax
    00003692: 	psrldq	$0x8, %xmm1
    00003697: 	paddw	%xmm1, %xmm0
    0000369b: 	movdqa	%xmm0, %xmm1
    0000369f: 	psrldq	$0x4, %xmm1
    000036a4: 	andl	$0x3, %eax
    000036a7: 	imulw	$0x1f40, %ax, %ax
    000036ac: 	paddw	%xmm1, %xmm0
    000036b0: 	movdqa	%xmm0, %xmm1
    000036b4: 	psrldq	$0x2, %xmm1
    000036b9: 	paddw	%xmm1, %xmm0
    000036bd: 	pextrw	$0x0, %xmm0, %edx
    000036c2: 	cmpw	%dx, %ax
    000036c5: 	je	.Ltmp2800 # Offset: 14021
    000036c7: 	movl	current_test(%rip), %edx
    000036cd: 	leaq	DATAat0x571d0(%rip), %rsi
    000036d4: 	movl	$0x1, %edi
    000036d9: 	xorl	%eax, %eax
    000036db: 	callq	__printf_chk@PLT # Offset: 14043
    000036e0: 	movl	iterations(%rip), %ecx
.Ltmp2800:
    000036e6: 	addl	$0x1, 0x1c(%rsp)
    000036eb: 	movl	0x1c(%rsp), %eax
    000036ef: 	cmpl	%ecx, %eax
    000036f1: 	jl	.Ltmp2801 # Offset: 14065
.Ltmp2798:
    000036f7: 	movq	%r12, %rsi
    000036fa: 	movq	%r15, %rdi
    000036fd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14077
    00003702: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003709: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003710: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003717: 	je	.Ltmp2802 # Offset: 14103
.Ltmp2998:
    0000371d: 	movq	-0x20(%rax), %rdi
    00003721: 	movq	%rdi, (%rsp)
    00003725: 	callq	clock@PLT # Offset: 14117
    0000372a: 	movq	(%rsp), %rdi
    0000372e: 	pxor	%xmm0, %xmm0
    00003732: 	movq	%rax, end_time(%rip)
    00003739: 	subq	start_time(%rip), %rax
    00003740: 	cvtsi2sd	%rax, %xmm0
    00003745: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000374d: 	callq	_Z13record_resultdPKc # Offset: 14157
    00003752: 	movq	0xa0(%rsp), %rdi
    0000375a: 	cmpq	%r13, %rdi
    0000375d: 	je	.Ltmp2803 # Offset: 14173
    0000375f: 	movq	0xb0(%rsp), %rax
    00003767: 	leaq	0x1(%rax), %rsi
    0000376b: 	callq	_ZdlPvm@PLT # Offset: 14187
.Ltmp2803:
    00003770: 	leaq	DATAat0x575d7(%rip), %rdx
    00003777: 	movq	%r14, %rsi
    0000377a: 	movq	%r12, %rdi
    0000377d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14205
    00003782: 	movq	%r12, %rdx
    00003785: 	movl	$0x1f40, %esi
    0000378a: 	movq	%rbp, %rdi
    0000378d: 	callq	_Z13test_constantIs13and_remainderIsLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 14221
    00003792: 	movq	0xa0(%rsp), %rdi
    0000379a: 	cmpq	%r13, %rdi
    0000379d: 	je	.Ltmp2804 # Offset: 14237
    0000379f: 	movq	0xb0(%rsp), %rax
    000037a7: 	leaq	0x1(%rax), %rsi
    000037ab: 	callq	_ZdlPvm@PLT # Offset: 14251
.Ltmp2804:
    000037b0: 	leaq	DATAat0x575e8(%rip), %rdx
    000037b7: 	movq	%r14, %rsi
    000037ba: 	movq	%r12, %rdi
    000037bd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14269
    000037c2: 	movq	%r12, %rdx
    000037c5: 	movl	$0x1f40, %esi
    000037ca: 	movq	%rbp, %rdi
    000037cd: 	callq	_Z13test_constantIs14and_remainder2IsLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 14285
    000037d2: 	movq	0xa0(%rsp), %rdi
    000037da: 	cmpq	%r13, %rdi
    000037dd: 	je	.Ltmp2805 # Offset: 14301
    000037df: 	movq	0xb0(%rsp), %rax
    000037e7: 	leaq	0x1(%rax), %rsi
    000037eb: 	callq	_ZdlPvm@PLT # Offset: 14315
.Ltmp2805:
    000037f0: 	leaq	DATAat0x575fa(%rip), %rdx
    000037f7: 	movq	%r14, %rsi
    000037fa: 	movq	%r12, %rdi
    000037fd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14333
    00003802: 	callq	clock@PLT # Offset: 14338
    00003807: 	movl	iterations(%rip), %ecx
    0000380d: 	movq	%rax, start_time(%rip)
    00003814: 	testl	%ecx, %ecx
    00003816: 	jle	.Ltmp2806 # Offset: 14358
    0000381c: 	movdqa	DATAat0x57e90(%rip), %xmm7
    00003824: 	movl	$0x0, 0x1c(%rsp)
    0000382c: 	movaps	%xmm7, (%rsp)
.Ltmp2809:
    00003830: 	pxor	%xmm2, %xmm2
    00003834: 	movq	%rbp, %rax
    00003837: 	movdqa	%xmm2, %xmm3
    0000383b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2807:
    00003840: 	movdqa	%xmm3, %xmm1
    00003844: 	movdqa	(%rsp), %xmm6
    00003849: 	movdqa	(%rax), %xmm0
    0000384d: 	addq	$0x10, %rax
    00003851: 	pcmpgtw	-0x10(%rax), %xmm1
    00003856: 	pand	%xmm6, %xmm1
    0000385a: 	paddw	%xmm1, %xmm0
    0000385e: 	pand	%xmm6, %xmm0
    00003862: 	psubw	%xmm1, %xmm0
    00003866: 	paddw	%xmm0, %xmm2
    0000386a: 	cmpq	%rax, %rbx
    0000386d: 	jne	.Ltmp2807 # Offset: 14445
    0000386f: 	cvttsd2si	init_value(%rip), %eax
    00003877: 	movdqa	%xmm2, %xmm0
    0000387b: 	psrldq	$0x8, %xmm0
    00003880: 	paddw	%xmm0, %xmm2
    00003884: 	movdqa	%xmm2, %xmm0
    00003888: 	movl	%eax, %edx
    0000388a: 	psrldq	$0x4, %xmm0
    0000388f: 	sarw	$0xf, %dx
    00003893: 	paddw	%xmm0, %xmm2
    00003897: 	shrw	$0xe, %dx
    0000389b: 	movdqa	%xmm2, %xmm0
    0000389f: 	addl	%edx, %eax
    000038a1: 	psrldq	$0x2, %xmm0
    000038a6: 	andl	$0x3, %eax
    000038a9: 	paddw	%xmm0, %xmm2
    000038ad: 	subl	%edx, %eax
    000038af: 	pextrw	$0x0, %xmm2, %edx
    000038b4: 	imulw	$0x1f40, %ax, %ax
    000038b9: 	cmpw	%dx, %ax
    000038bc: 	je	.Ltmp2808 # Offset: 14524
    000038be: 	movl	current_test(%rip), %edx
    000038c4: 	leaq	DATAat0x571d0(%rip), %rsi
    000038cb: 	movl	$0x1, %edi
    000038d0: 	xorl	%eax, %eax
    000038d2: 	callq	__printf_chk@PLT # Offset: 14546
    000038d7: 	movl	iterations(%rip), %ecx
.Ltmp2808:
    000038dd: 	addl	$0x1, 0x1c(%rsp)
    000038e2: 	movl	0x1c(%rsp), %eax
    000038e6: 	cmpl	%ecx, %eax
    000038e8: 	jl	.Ltmp2809 # Offset: 14568
.Ltmp2806:
    000038ee: 	movq	%r12, %rsi
    000038f1: 	movq	%r15, %rdi
    000038f4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14580
    000038f9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003900: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003907: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000390e: 	je	.Ltmp2810 # Offset: 14606
.Ltmp2997:
    00003914: 	movq	-0x20(%rax), %rdi
    00003918: 	movq	%rdi, (%rsp)
    0000391c: 	callq	clock@PLT # Offset: 14620
    00003921: 	movq	(%rsp), %rdi
    00003925: 	pxor	%xmm0, %xmm0
    00003929: 	movq	%rax, end_time(%rip)
    00003930: 	subq	start_time(%rip), %rax
    00003937: 	cvtsi2sd	%rax, %xmm0
    0000393c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003944: 	callq	_Z13record_resultdPKc # Offset: 14660
    00003949: 	movq	0xa0(%rsp), %rdi
    00003951: 	cmpq	%r13, %rdi
    00003954: 	je	.Ltmp2811 # Offset: 14676
    00003956: 	movq	0xb0(%rsp), %rax
    0000395e: 	leaq	0x1(%rax), %rsi
    00003962: 	callq	_ZdlPvm@PLT # Offset: 14690
.Ltmp2811:
    00003967: 	leaq	DATAat0x57611(%rip), %rdx
    0000396e: 	movq	%r14, %rsi
    00003971: 	movq	%r12, %rdi
    00003974: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14708
    00003979: 	movq	%r12, %rcx
    0000397c: 	movl	$0x4, %edx
    00003981: 	movl	$0x1f40, %esi
    00003986: 	movq	%rbp, %rdi
    00003989: 	callq	_Z14test_variable1Is25custom_remainder_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 14729
    0000398e: 	movq	0xa0(%rsp), %rdi
    00003996: 	cmpq	%r13, %rdi
    00003999: 	je	.Ltmp2812 # Offset: 14745
    0000399b: 	movq	0xb0(%rsp), %rax
    000039a3: 	leaq	0x1(%rax), %rsi
    000039a7: 	callq	_ZdlPvm@PLT # Offset: 14759
.Ltmp2812:
    000039ac: 	leaq	DATAat0x5762a(%rip), %rdx
    000039b3: 	movq	%r14, %rsi
    000039b6: 	movq	%r12, %rdi
    000039b9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14777
    000039be: 	callq	clock@PLT # Offset: 14782
    000039c3: 	movl	iterations(%rip), %ecx
    000039c9: 	movq	%rax, start_time(%rip)
    000039d0: 	testl	%ecx, %ecx
    000039d2: 	jle	.Ltmp2813 # Offset: 14802
    000039d8: 	movdqa	DATAat0x57e90(%rip), %xmm7
    000039e0: 	movl	$0x0, 0x1c(%rsp)
    000039e8: 	movaps	%xmm7, (%rsp)
    000039ec: 	nopl	(%rax) # Size: 4
.Ltmp2816:
    000039f0: 	pxor	%xmm2, %xmm2
    000039f4: 	movq	%rbp, %rax
    000039f7: 	movdqa	%xmm2, %xmm3
    000039fb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2814:
    00003a00: 	movdqa	%xmm3, %xmm1
    00003a04: 	movdqa	(%rsp), %xmm7
    00003a09: 	movdqa	(%rax), %xmm0
    00003a0d: 	addq	$0x10, %rax
    00003a11: 	pcmpgtw	-0x10(%rax), %xmm1
    00003a16: 	pand	%xmm7, %xmm1
    00003a1a: 	paddw	%xmm1, %xmm0
    00003a1e: 	pand	%xmm7, %xmm0
    00003a22: 	psubw	%xmm1, %xmm0
    00003a26: 	paddw	%xmm0, %xmm2
    00003a2a: 	cmpq	%rbx, %rax
    00003a2d: 	jne	.Ltmp2814 # Offset: 14893
    00003a2f: 	cvttsd2si	init_value(%rip), %eax
    00003a37: 	movdqa	%xmm2, %xmm0
    00003a3b: 	psrldq	$0x8, %xmm0
    00003a40: 	paddw	%xmm0, %xmm2
    00003a44: 	movdqa	%xmm2, %xmm0
    00003a48: 	movl	%eax, %edx
    00003a4a: 	psrldq	$0x4, %xmm0
    00003a4f: 	sarw	$0xf, %dx
    00003a53: 	paddw	%xmm0, %xmm2
    00003a57: 	shrw	$0xe, %dx
    00003a5b: 	movdqa	%xmm2, %xmm0
    00003a5f: 	addl	%edx, %eax
    00003a61: 	psrldq	$0x2, %xmm0
    00003a66: 	andl	$0x3, %eax
    00003a69: 	paddw	%xmm0, %xmm2
    00003a6d: 	subl	%edx, %eax
    00003a6f: 	pextrw	$0x0, %xmm2, %edx
    00003a74: 	imulw	$0x1f40, %ax, %ax
    00003a79: 	cmpw	%dx, %ax
    00003a7c: 	je	.Ltmp2815 # Offset: 14972
    00003a7e: 	movl	current_test(%rip), %edx
    00003a84: 	leaq	DATAat0x571d0(%rip), %rsi
    00003a8b: 	movl	$0x1, %edi
    00003a90: 	xorl	%eax, %eax
    00003a92: 	callq	__printf_chk@PLT # Offset: 14994
    00003a97: 	movl	iterations(%rip), %ecx
.Ltmp2815:
    00003a9d: 	addl	$0x1, 0x1c(%rsp)
    00003aa2: 	movl	0x1c(%rsp), %eax
    00003aa6: 	cmpl	%ecx, %eax
    00003aa8: 	jl	.Ltmp2816 # Offset: 15016
.Ltmp2813:
    00003aae: 	movq	%r12, %rsi
    00003ab1: 	movq	%r15, %rdi
    00003ab4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15028
    00003ab9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003ac0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003ac7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003ace: 	je	.Ltmp2817 # Offset: 15054
.Ltmp2996:
    00003ad4: 	movq	-0x20(%rax), %rdi
    00003ad8: 	movq	%rdi, (%rsp)
    00003adc: 	callq	clock@PLT # Offset: 15068
    00003ae1: 	movq	(%rsp), %rdi
    00003ae5: 	pxor	%xmm0, %xmm0
    00003ae9: 	movq	%rax, end_time(%rip)
    00003af0: 	subq	start_time(%rip), %rax
    00003af7: 	cvtsi2sd	%rax, %xmm0
    00003afc: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003b04: 	callq	_Z13record_resultdPKc # Offset: 15108
    00003b09: 	movq	0xa0(%rsp), %rdi
    00003b11: 	cmpq	%r13, %rdi
    00003b14: 	je	.Ltmp2818 # Offset: 15124
    00003b16: 	movq	0xb0(%rsp), %rax
    00003b1e: 	leaq	0x1(%rax), %rsi
    00003b22: 	callq	_ZdlPvm@PLT # Offset: 15138
.Ltmp2818:
    00003b27: 	leaq	DATAat0x57643(%rip), %rdx
    00003b2e: 	movq	%r14, %rsi
    00003b31: 	movq	%r12, %rdi
    00003b34: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15156
    00003b39: 	callq	clock@PLT # Offset: 15161
    00003b3e: 	movl	iterations(%rip), %ecx
    00003b44: 	movq	%rax, start_time(%rip)
    00003b4b: 	testl	%ecx, %ecx
    00003b4d: 	jle	.Ltmp2819 # Offset: 15181
    00003b53: 	movdqa	DATAat0x57cb0(%rip), %xmm7
    00003b5b: 	movl	$0x0, 0x1c(%rsp)
    00003b63: 	movaps	%xmm7, (%rsp)
    00003b67: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2822:
    00003b70: 	movq	%rbp, %rax
    00003b73: 	pxor	%xmm0, %xmm0
    00003b77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2820:
    00003b80: 	movdqa	(%rsp), %xmm1
    00003b85: 	pand	(%rax), %xmm1
    00003b89: 	addq	$0x10, %rax
    00003b8d: 	paddw	%xmm1, %xmm0
    00003b91: 	cmpq	%rax, %rbx
    00003b94: 	jne	.Ltmp2820 # Offset: 15252
    00003b96: 	movdqa	%xmm0, %xmm1
    00003b9a: 	cvttsd2si	init_value(%rip), %eax
    00003ba2: 	psrldq	$0x8, %xmm1
    00003ba7: 	paddw	%xmm1, %xmm0
    00003bab: 	movdqa	%xmm0, %xmm1
    00003baf: 	psrldq	$0x4, %xmm1
    00003bb4: 	andl	$0x7, %eax
    00003bb7: 	imulw	$0x1f40, %ax, %ax
    00003bbc: 	paddw	%xmm1, %xmm0
    00003bc0: 	movdqa	%xmm0, %xmm1
    00003bc4: 	psrldq	$0x2, %xmm1
    00003bc9: 	paddw	%xmm1, %xmm0
    00003bcd: 	pextrw	$0x0, %xmm0, %edx
    00003bd2: 	cmpw	%dx, %ax
    00003bd5: 	je	.Ltmp2821 # Offset: 15317
    00003bd7: 	movl	current_test(%rip), %edx
    00003bdd: 	leaq	DATAat0x571d0(%rip), %rsi
    00003be4: 	movl	$0x1, %edi
    00003be9: 	xorl	%eax, %eax
    00003beb: 	callq	__printf_chk@PLT # Offset: 15339
    00003bf0: 	movl	iterations(%rip), %ecx
.Ltmp2821:
    00003bf6: 	addl	$0x1, 0x1c(%rsp)
    00003bfb: 	movl	0x1c(%rsp), %eax
    00003bff: 	cmpl	%ecx, %eax
    00003c01: 	jl	.Ltmp2822 # Offset: 15361
.Ltmp2819:
    00003c07: 	movq	%r12, %rsi
    00003c0a: 	movq	%r15, %rdi
    00003c0d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15373
    00003c12: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003c19: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003c20: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003c27: 	je	.Ltmp2823 # Offset: 15399
.Ltmp2995:
    00003c2d: 	movq	-0x20(%rax), %rdi
    00003c31: 	movq	%rdi, (%rsp)
    00003c35: 	callq	clock@PLT # Offset: 15413
    00003c3a: 	movq	(%rsp), %rdi
    00003c3e: 	pxor	%xmm0, %xmm0
    00003c42: 	movq	%rax, end_time(%rip)
    00003c49: 	subq	start_time(%rip), %rax
    00003c50: 	cvtsi2sd	%rax, %xmm0
    00003c55: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003c5d: 	callq	_Z13record_resultdPKc # Offset: 15453
    00003c62: 	movq	0xa0(%rsp), %rdi
    00003c6a: 	cmpq	%r13, %rdi
    00003c6d: 	je	.Ltmp2824 # Offset: 15469
    00003c6f: 	movq	0xb0(%rsp), %rax
    00003c77: 	leaq	0x1(%rax), %rsi
    00003c7b: 	callq	_ZdlPvm@PLT # Offset: 15483
.Ltmp2824:
    00003c80: 	leaq	DATAat0x5764a(%rip), %rdx
    00003c87: 	movq	%r14, %rsi
    00003c8a: 	movq	%r12, %rdi
    00003c8d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15501
    00003c92: 	movq	%r12, %rdx
    00003c95: 	movl	$0x1f40, %esi
    00003c9a: 	movq	%rbp, %rdi
    00003c9d: 	callq	_Z13test_constantIs13and_remainderIsLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 15517
    00003ca2: 	movq	0xa0(%rsp), %rdi
    00003caa: 	cmpq	%r13, %rdi
    00003cad: 	je	.Ltmp2825 # Offset: 15533
    00003caf: 	movq	0xb0(%rsp), %rax
    00003cb7: 	leaq	0x1(%rax), %rsi
    00003cbb: 	callq	_ZdlPvm@PLT # Offset: 15547
.Ltmp2825:
    00003cc0: 	leaq	DATAat0x5765b(%rip), %rdx
    00003cc7: 	movq	%r14, %rsi
    00003cca: 	movq	%r12, %rdi
    00003ccd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15565
    00003cd2: 	movq	%r12, %rdx
    00003cd5: 	movl	$0x1f40, %esi
    00003cda: 	movq	%rbp, %rdi
    00003cdd: 	callq	_Z13test_constantIs14and_remainder2IsLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 15581
    00003ce2: 	movq	0xa0(%rsp), %rdi
    00003cea: 	cmpq	%r13, %rdi
    00003ced: 	je	.Ltmp2826 # Offset: 15597
    00003cef: 	movq	0xb0(%rsp), %rax
    00003cf7: 	leaq	0x1(%rax), %rsi
    00003cfb: 	callq	_ZdlPvm@PLT # Offset: 15611
.Ltmp2826:
    00003d00: 	leaq	DATAat0x5766d(%rip), %rdx
    00003d07: 	movq	%r14, %rsi
    00003d0a: 	movq	%r12, %rdi
    00003d0d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15629
    00003d12: 	callq	clock@PLT # Offset: 15634
    00003d17: 	movl	iterations(%rip), %ecx
    00003d1d: 	movq	%rax, start_time(%rip)
    00003d24: 	testl	%ecx, %ecx
    00003d26: 	jle	.Ltmp2827 # Offset: 15654
    00003d2c: 	movdqa	DATAat0x57cb0(%rip), %xmm7
    00003d34: 	movl	$0x0, 0x1c(%rsp)
    00003d3c: 	movaps	%xmm7, (%rsp)
.Ltmp2830:
    00003d40: 	pxor	%xmm2, %xmm2
    00003d44: 	movq	%rbp, %rax
    00003d47: 	movdqa	%xmm2, %xmm3
    00003d4b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2828:
    00003d50: 	movdqa	%xmm3, %xmm1
    00003d54: 	movdqa	(%rsp), %xmm4
    00003d59: 	movdqa	(%rax), %xmm0
    00003d5d: 	addq	$0x10, %rax
    00003d61: 	pcmpgtw	-0x10(%rax), %xmm1
    00003d66: 	pand	%xmm4, %xmm1
    00003d6a: 	paddw	%xmm1, %xmm0
    00003d6e: 	pand	%xmm4, %xmm0
    00003d72: 	psubw	%xmm1, %xmm0
    00003d76: 	paddw	%xmm0, %xmm2
    00003d7a: 	cmpq	%rbx, %rax
    00003d7d: 	jne	.Ltmp2828 # Offset: 15741
    00003d7f: 	cvttsd2si	init_value(%rip), %eax
    00003d87: 	movdqa	%xmm2, %xmm0
    00003d8b: 	psrldq	$0x8, %xmm0
    00003d90: 	paddw	%xmm0, %xmm2
    00003d94: 	movdqa	%xmm2, %xmm0
    00003d98: 	movl	%eax, %edx
    00003d9a: 	psrldq	$0x4, %xmm0
    00003d9f: 	sarw	$0xf, %dx
    00003da3: 	paddw	%xmm0, %xmm2
    00003da7: 	shrw	$0xd, %dx
    00003dab: 	movdqa	%xmm2, %xmm0
    00003daf: 	addl	%edx, %eax
    00003db1: 	psrldq	$0x2, %xmm0
    00003db6: 	andl	$0x7, %eax
    00003db9: 	paddw	%xmm0, %xmm2
    00003dbd: 	subl	%edx, %eax
    00003dbf: 	pextrw	$0x0, %xmm2, %edx
    00003dc4: 	imulw	$0x1f40, %ax, %ax
    00003dc9: 	cmpw	%dx, %ax
    00003dcc: 	je	.Ltmp2829 # Offset: 15820
    00003dce: 	movl	current_test(%rip), %edx
    00003dd4: 	leaq	DATAat0x571d0(%rip), %rsi
    00003ddb: 	movl	$0x1, %edi
    00003de0: 	xorl	%eax, %eax
    00003de2: 	callq	__printf_chk@PLT # Offset: 15842
    00003de7: 	movl	iterations(%rip), %ecx
.Ltmp2829:
    00003ded: 	addl	$0x1, 0x1c(%rsp)
    00003df2: 	movl	0x1c(%rsp), %eax
    00003df6: 	cmpl	%ecx, %eax
    00003df8: 	jl	.Ltmp2830 # Offset: 15864
.Ltmp2827:
    00003dfe: 	movq	%r12, %rsi
    00003e01: 	movq	%r15, %rdi
    00003e04: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15876
    00003e09: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003e10: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003e17: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003e1e: 	je	.Ltmp2831 # Offset: 15902
.Ltmp2994:
    00003e24: 	movq	-0x20(%rax), %rdi
    00003e28: 	movq	%rdi, (%rsp)
    00003e2c: 	callq	clock@PLT # Offset: 15916
    00003e31: 	movq	(%rsp), %rdi
    00003e35: 	pxor	%xmm0, %xmm0
    00003e39: 	movq	%rax, end_time(%rip)
    00003e40: 	subq	start_time(%rip), %rax
    00003e47: 	cvtsi2sd	%rax, %xmm0
    00003e4c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003e54: 	callq	_Z13record_resultdPKc # Offset: 15956
    00003e59: 	movq	0xa0(%rsp), %rdi
    00003e61: 	cmpq	%r13, %rdi
    00003e64: 	je	.Ltmp2832 # Offset: 15972
    00003e66: 	movq	0xb0(%rsp), %rax
    00003e6e: 	leaq	0x1(%rax), %rsi
    00003e72: 	callq	_ZdlPvm@PLT # Offset: 15986
.Ltmp2832:
    00003e77: 	leaq	DATAat0x57684(%rip), %rdx
    00003e7e: 	movq	%r14, %rsi
    00003e81: 	movq	%r12, %rdi
    00003e84: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16004
    00003e89: 	movq	%r12, %rcx
    00003e8c: 	movl	$0x8, %edx
    00003e91: 	movl	$0x1f40, %esi
    00003e96: 	movq	%rbp, %rdi
    00003e99: 	callq	_Z14test_variable1Is25custom_remainder_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 16025
    00003e9e: 	movq	0xa0(%rsp), %rdi
    00003ea6: 	cmpq	%r13, %rdi
    00003ea9: 	je	.Ltmp2833 # Offset: 16041
    00003eab: 	movq	0xb0(%rsp), %rax
    00003eb3: 	leaq	0x1(%rax), %rsi
    00003eb7: 	callq	_ZdlPvm@PLT # Offset: 16055
.Ltmp2833:
    00003ebc: 	leaq	DATAat0x5769d(%rip), %rdx
    00003ec3: 	movq	%r14, %rsi
    00003ec6: 	movq	%r12, %rdi
    00003ec9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16073
    00003ece: 	callq	clock@PLT # Offset: 16078
    00003ed3: 	movl	iterations(%rip), %ecx
    00003ed9: 	movq	%rax, start_time(%rip)
    00003ee0: 	testl	%ecx, %ecx
    00003ee2: 	jle	.Ltmp2834 # Offset: 16098
    00003ee8: 	movdqa	DATAat0x57cb0(%rip), %xmm7
    00003ef0: 	movl	$0x0, 0x1c(%rsp)
    00003ef8: 	movaps	%xmm7, (%rsp)
    00003efc: 	nopl	(%rax) # Size: 4
.Ltmp2837:
    00003f00: 	pxor	%xmm2, %xmm2
    00003f04: 	movq	%rbp, %rax
    00003f07: 	movdqa	%xmm2, %xmm3
    00003f0b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2835:
    00003f10: 	movdqa	%xmm3, %xmm1
    00003f14: 	movdqa	(%rsp), %xmm6
    00003f19: 	movdqa	(%rax), %xmm0
    00003f1d: 	addq	$0x10, %rax
    00003f21: 	pcmpgtw	-0x10(%rax), %xmm1
    00003f26: 	pand	%xmm6, %xmm1
    00003f2a: 	paddw	%xmm1, %xmm0
    00003f2e: 	pand	%xmm6, %xmm0
    00003f32: 	psubw	%xmm1, %xmm0
    00003f36: 	paddw	%xmm0, %xmm2
    00003f3a: 	cmpq	%rbx, %rax
    00003f3d: 	jne	.Ltmp2835 # Offset: 16189
    00003f3f: 	cvttsd2si	init_value(%rip), %eax
    00003f47: 	movdqa	%xmm2, %xmm0
    00003f4b: 	psrldq	$0x8, %xmm0
    00003f50: 	paddw	%xmm0, %xmm2
    00003f54: 	movdqa	%xmm2, %xmm0
    00003f58: 	movl	%eax, %edx
    00003f5a: 	psrldq	$0x4, %xmm0
    00003f5f: 	sarw	$0xf, %dx
    00003f63: 	paddw	%xmm0, %xmm2
    00003f67: 	shrw	$0xd, %dx
    00003f6b: 	movdqa	%xmm2, %xmm0
    00003f6f: 	addl	%edx, %eax
    00003f71: 	psrldq	$0x2, %xmm0
    00003f76: 	andl	$0x7, %eax
    00003f79: 	paddw	%xmm0, %xmm2
    00003f7d: 	subl	%edx, %eax
    00003f7f: 	pextrw	$0x0, %xmm2, %edx
    00003f84: 	imulw	$0x1f40, %ax, %ax
    00003f89: 	cmpw	%dx, %ax
    00003f8c: 	je	.Ltmp2836 # Offset: 16268
    00003f8e: 	movl	current_test(%rip), %edx
    00003f94: 	leaq	DATAat0x571d0(%rip), %rsi
    00003f9b: 	movl	$0x1, %edi
    00003fa0: 	xorl	%eax, %eax
    00003fa2: 	callq	__printf_chk@PLT # Offset: 16290
    00003fa7: 	movl	iterations(%rip), %ecx
.Ltmp2836:
    00003fad: 	addl	$0x1, 0x1c(%rsp)
    00003fb2: 	movl	0x1c(%rsp), %eax
    00003fb6: 	cmpl	%ecx, %eax
    00003fb8: 	jl	.Ltmp2837 # Offset: 16312
.Ltmp2834:
    00003fbe: 	movq	%r12, %rsi
    00003fc1: 	movq	%r15, %rdi
    00003fc4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16324
    00003fc9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003fd0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003fd7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003fde: 	je	.Ltmp2838 # Offset: 16350
.Ltmp2993:
    00003fe4: 	movq	-0x20(%rax), %rdi
    00003fe8: 	movq	%rdi, (%rsp)
    00003fec: 	callq	clock@PLT # Offset: 16364
    00003ff1: 	movq	(%rsp), %rdi
    00003ff5: 	pxor	%xmm0, %xmm0
    00003ff9: 	movq	%rax, end_time(%rip)
    00004000: 	subq	start_time(%rip), %rax
    00004007: 	cvtsi2sd	%rax, %xmm0
    0000400c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004014: 	callq	_Z13record_resultdPKc # Offset: 16404
    00004019: 	movq	0xa0(%rsp), %rdi
    00004021: 	cmpq	%r13, %rdi
    00004024: 	je	.Ltmp2839 # Offset: 16420
    00004026: 	movq	0xb0(%rsp), %rax
    0000402e: 	leaq	0x1(%rax), %rsi
    00004032: 	callq	_ZdlPvm@PLT # Offset: 16434
.Ltmp2839:
    00004037: 	leaq	DATAat0x576b6(%rip), %rdx
    0000403e: 	movq	%r14, %rsi
    00004041: 	movq	%r12, %rdi
    00004044: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16452
    00004049: 	callq	clock@PLT # Offset: 16457
    0000404e: 	movl	iterations(%rip), %ecx
    00004054: 	movq	%rax, start_time(%rip)
    0000405b: 	testl	%ecx, %ecx
    0000405d: 	jle	.Ltmp2840 # Offset: 16477
    00004063: 	movdqa	DATAat0x57c90(%rip), %xmm7
    0000406b: 	movl	$0x0, 0x1c(%rsp)
    00004073: 	movaps	%xmm7, (%rsp)
    00004077: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2843:
    00004080: 	movq	%rbp, %rax
    00004083: 	pxor	%xmm0, %xmm0
    00004087: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2841:
    00004090: 	movdqa	(%rsp), %xmm1
    00004095: 	pand	(%rax), %xmm1
    00004099: 	addq	$0x10, %rax
    0000409d: 	paddw	%xmm1, %xmm0
    000040a1: 	cmpq	%rax, %rbx
    000040a4: 	jne	.Ltmp2841 # Offset: 16548
    000040a6: 	movdqa	%xmm0, %xmm1
    000040aa: 	cvttsd2si	init_value(%rip), %eax
    000040b2: 	psrldq	$0x8, %xmm1
    000040b7: 	paddw	%xmm1, %xmm0
    000040bb: 	movdqa	%xmm0, %xmm1
    000040bf: 	psrldq	$0x4, %xmm1
    000040c4: 	andl	$0xf, %eax
    000040c7: 	imulw	$0x1f40, %ax, %ax
    000040cc: 	paddw	%xmm1, %xmm0
    000040d0: 	movdqa	%xmm0, %xmm1
    000040d4: 	psrldq	$0x2, %xmm1
    000040d9: 	paddw	%xmm1, %xmm0
    000040dd: 	pextrw	$0x0, %xmm0, %edx
    000040e2: 	cmpw	%dx, %ax
    000040e5: 	je	.Ltmp2842 # Offset: 16613
    000040e7: 	movl	current_test(%rip), %edx
    000040ed: 	leaq	DATAat0x571d0(%rip), %rsi
    000040f4: 	movl	$0x1, %edi
    000040f9: 	xorl	%eax, %eax
    000040fb: 	callq	__printf_chk@PLT # Offset: 16635
    00004100: 	movl	iterations(%rip), %ecx
.Ltmp2842:
    00004106: 	addl	$0x1, 0x1c(%rsp)
    0000410b: 	movl	0x1c(%rsp), %eax
    0000410f: 	cmpl	%ecx, %eax
    00004111: 	jl	.Ltmp2843 # Offset: 16657
.Ltmp2840:
    00004117: 	movq	%r12, %rsi
    0000411a: 	movq	%r15, %rdi
    0000411d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16669
    00004122: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004129: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004130: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004137: 	je	.Ltmp2844 # Offset: 16695
.Ltmp2992:
    0000413d: 	movq	-0x20(%rax), %rdi
    00004141: 	movq	%rdi, (%rsp)
    00004145: 	callq	clock@PLT # Offset: 16709
    0000414a: 	movq	(%rsp), %rdi
    0000414e: 	pxor	%xmm0, %xmm0
    00004152: 	movq	%rax, end_time(%rip)
    00004159: 	subq	start_time(%rip), %rax
    00004160: 	cvtsi2sd	%rax, %xmm0
    00004165: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000416d: 	callq	_Z13record_resultdPKc # Offset: 16749
    00004172: 	movq	0xa0(%rsp), %rdi
    0000417a: 	cmpq	%r13, %rdi
    0000417d: 	je	.Ltmp2845 # Offset: 16765
    0000417f: 	movq	0xb0(%rsp), %rax
    00004187: 	leaq	0x1(%rax), %rsi
    0000418b: 	callq	_ZdlPvm@PLT # Offset: 16779
.Ltmp2845:
    00004190: 	leaq	DATAat0x576be(%rip), %rdx
    00004197: 	movq	%r14, %rsi
    0000419a: 	movq	%r12, %rdi
    0000419d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16797
    000041a2: 	movq	%r12, %rdx
    000041a5: 	movl	$0x1f40, %esi
    000041aa: 	movq	%rbp, %rdi
    000041ad: 	callq	_Z13test_constantIs13and_remainderIsLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 16813
    000041b2: 	movq	0xa0(%rsp), %rdi
    000041ba: 	cmpq	%r13, %rdi
    000041bd: 	je	.Ltmp2846 # Offset: 16829
    000041bf: 	movq	0xb0(%rsp), %rax
    000041c7: 	leaq	0x1(%rax), %rsi
    000041cb: 	callq	_ZdlPvm@PLT # Offset: 16843
.Ltmp2846:
    000041d0: 	leaq	DATAat0x576d0(%rip), %rdx
    000041d7: 	movq	%r14, %rsi
    000041da: 	movq	%r12, %rdi
    000041dd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16861
    000041e2: 	movq	%r12, %rdx
    000041e5: 	movl	$0x1f40, %esi
    000041ea: 	movq	%rbp, %rdi
    000041ed: 	callq	_Z13test_constantIs14and_remainder2IsLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 16877
    000041f2: 	movq	0xa0(%rsp), %rdi
    000041fa: 	cmpq	%r13, %rdi
    000041fd: 	je	.Ltmp2847 # Offset: 16893
    000041ff: 	movq	0xb0(%rsp), %rax
    00004207: 	leaq	0x1(%rax), %rsi
    0000420b: 	callq	_ZdlPvm@PLT # Offset: 16907
.Ltmp2847:
    00004210: 	leaq	DATAat0x576e3(%rip), %rdx
    00004217: 	movq	%r14, %rsi
    0000421a: 	movq	%r12, %rdi
    0000421d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16925
    00004222: 	callq	clock@PLT # Offset: 16930
    00004227: 	movl	iterations(%rip), %ecx
    0000422d: 	movq	%rax, start_time(%rip)
    00004234: 	testl	%ecx, %ecx
    00004236: 	jle	.Ltmp2848 # Offset: 16950
    0000423c: 	movdqa	DATAat0x57c90(%rip), %xmm7
    00004244: 	movl	$0x0, 0x1c(%rsp)
    0000424c: 	movaps	%xmm7, (%rsp)
.Ltmp2851:
    00004250: 	pxor	%xmm2, %xmm2
    00004254: 	movq	%rbp, %rax
    00004257: 	movdqa	%xmm2, %xmm3
    0000425b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2849:
    00004260: 	movdqa	%xmm3, %xmm1
    00004264: 	movdqa	(%rsp), %xmm7
    00004269: 	movdqa	(%rax), %xmm0
    0000426d: 	addq	$0x10, %rax
    00004271: 	pcmpgtw	-0x10(%rax), %xmm1
    00004276: 	pand	%xmm7, %xmm1
    0000427a: 	paddw	%xmm1, %xmm0
    0000427e: 	pand	%xmm7, %xmm0
    00004282: 	psubw	%xmm1, %xmm0
    00004286: 	paddw	%xmm0, %xmm2
    0000428a: 	cmpq	%rbx, %rax
    0000428d: 	jne	.Ltmp2849 # Offset: 17037
    0000428f: 	cvttsd2si	init_value(%rip), %eax
    00004297: 	movdqa	%xmm2, %xmm0
    0000429b: 	psrldq	$0x8, %xmm0
    000042a0: 	paddw	%xmm0, %xmm2
    000042a4: 	movdqa	%xmm2, %xmm0
    000042a8: 	movl	%eax, %edx
    000042aa: 	psrldq	$0x4, %xmm0
    000042af: 	sarw	$0xf, %dx
    000042b3: 	paddw	%xmm0, %xmm2
    000042b7: 	shrw	$0xc, %dx
    000042bb: 	movdqa	%xmm2, %xmm0
    000042bf: 	addl	%edx, %eax
    000042c1: 	psrldq	$0x2, %xmm0
    000042c6: 	andl	$0xf, %eax
    000042c9: 	paddw	%xmm0, %xmm2
    000042cd: 	subl	%edx, %eax
    000042cf: 	pextrw	$0x0, %xmm2, %edx
    000042d4: 	imulw	$0x1f40, %ax, %ax
    000042d9: 	cmpw	%dx, %ax
    000042dc: 	je	.Ltmp2850 # Offset: 17116
    000042de: 	movl	current_test(%rip), %edx
    000042e4: 	leaq	DATAat0x571d0(%rip), %rsi
    000042eb: 	movl	$0x1, %edi
    000042f0: 	xorl	%eax, %eax
    000042f2: 	callq	__printf_chk@PLT # Offset: 17138
    000042f7: 	movl	iterations(%rip), %ecx
.Ltmp2850:
    000042fd: 	addl	$0x1, 0x1c(%rsp)
    00004302: 	movl	0x1c(%rsp), %eax
    00004306: 	cmpl	%ecx, %eax
    00004308: 	jl	.Ltmp2851 # Offset: 17160
.Ltmp2848:
    0000430e: 	movq	%r12, %rsi
    00004311: 	movq	%r15, %rdi
    00004314: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17172
    00004319: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004320: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004327: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000432e: 	je	.Ltmp2852 # Offset: 17198
.Ltmp2991:
    00004334: 	movq	-0x20(%rax), %rdi
    00004338: 	movq	%rdi, (%rsp)
    0000433c: 	callq	clock@PLT # Offset: 17212
    00004341: 	movq	(%rsp), %rdi
    00004345: 	pxor	%xmm0, %xmm0
    00004349: 	movq	%rax, end_time(%rip)
    00004350: 	subq	start_time(%rip), %rax
    00004357: 	cvtsi2sd	%rax, %xmm0
    0000435c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004364: 	callq	_Z13record_resultdPKc # Offset: 17252
    00004369: 	movq	0xa0(%rsp), %rdi
    00004371: 	cmpq	%r13, %rdi
    00004374: 	je	.Ltmp2853 # Offset: 17268
    00004376: 	movq	0xb0(%rsp), %rax
    0000437e: 	leaq	0x1(%rax), %rsi
    00004382: 	callq	_ZdlPvm@PLT # Offset: 17282
.Ltmp2853:
    00004387: 	leaq	DATAat0x576fb(%rip), %rdx
    0000438e: 	movq	%r14, %rsi
    00004391: 	movq	%r12, %rdi
    00004394: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17300
    00004399: 	movq	%r12, %rcx
    0000439c: 	movl	$0x10, %edx
    000043a1: 	movl	$0x1f40, %esi
    000043a6: 	movq	%rbp, %rdi
    000043a9: 	callq	_Z14test_variable1Is25custom_remainder_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 17321
    000043ae: 	movq	0xa0(%rsp), %rdi
    000043b6: 	cmpq	%r13, %rdi
    000043b9: 	je	.Ltmp2854 # Offset: 17337
    000043bb: 	movq	0xb0(%rsp), %rax
    000043c3: 	leaq	0x1(%rax), %rsi
    000043c7: 	callq	_ZdlPvm@PLT # Offset: 17351
.Ltmp2854:
    000043cc: 	leaq	DATAat0x57715(%rip), %rdx
    000043d3: 	movq	%r14, %rsi
    000043d6: 	movq	%r12, %rdi
    000043d9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17369
    000043de: 	callq	clock@PLT # Offset: 17374
    000043e3: 	movl	iterations(%rip), %ecx
    000043e9: 	movq	%rax, start_time(%rip)
    000043f0: 	testl	%ecx, %ecx
    000043f2: 	jle	.Ltmp2855 # Offset: 17394
    000043f8: 	movdqa	DATAat0x57c90(%rip), %xmm7
    00004400: 	movl	$0x0, 0x1c(%rsp)
    00004408: 	movaps	%xmm7, (%rsp)
    0000440c: 	nopl	(%rax) # Size: 4
.Ltmp2858:
    00004410: 	pxor	%xmm2, %xmm2
    00004414: 	movq	%rbp, %rax
    00004417: 	movdqa	%xmm2, %xmm3
    0000441b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2856:
    00004420: 	movdqa	%xmm3, %xmm1
    00004424: 	movdqa	(%rsp), %xmm5
    00004429: 	movdqa	(%rax), %xmm0
    0000442d: 	addq	$0x10, %rax
    00004431: 	pcmpgtw	-0x10(%rax), %xmm1
    00004436: 	pand	%xmm5, %xmm1
    0000443a: 	paddw	%xmm1, %xmm0
    0000443e: 	pand	%xmm5, %xmm0
    00004442: 	psubw	%xmm1, %xmm0
    00004446: 	paddw	%xmm0, %xmm2
    0000444a: 	cmpq	%rbx, %rax
    0000444d: 	jne	.Ltmp2856 # Offset: 17485
    0000444f: 	cvttsd2si	init_value(%rip), %eax
    00004457: 	movdqa	%xmm2, %xmm0
    0000445b: 	psrldq	$0x8, %xmm0
    00004460: 	paddw	%xmm0, %xmm2
    00004464: 	movdqa	%xmm2, %xmm0
    00004468: 	movl	%eax, %edx
    0000446a: 	psrldq	$0x4, %xmm0
    0000446f: 	sarw	$0xf, %dx
    00004473: 	paddw	%xmm0, %xmm2
    00004477: 	shrw	$0xc, %dx
    0000447b: 	movdqa	%xmm2, %xmm0
    0000447f: 	addl	%edx, %eax
    00004481: 	psrldq	$0x2, %xmm0
    00004486: 	andl	$0xf, %eax
    00004489: 	paddw	%xmm0, %xmm2
    0000448d: 	subl	%edx, %eax
    0000448f: 	pextrw	$0x0, %xmm2, %edx
    00004494: 	imulw	$0x1f40, %ax, %ax
    00004499: 	cmpw	%dx, %ax
    0000449c: 	je	.Ltmp2857 # Offset: 17564
    0000449e: 	movl	current_test(%rip), %edx
    000044a4: 	leaq	DATAat0x571d0(%rip), %rsi
    000044ab: 	movl	$0x1, %edi
    000044b0: 	xorl	%eax, %eax
    000044b2: 	callq	__printf_chk@PLT # Offset: 17586
    000044b7: 	movl	iterations(%rip), %ecx
.Ltmp2857:
    000044bd: 	addl	$0x1, 0x1c(%rsp)
    000044c2: 	movl	0x1c(%rsp), %eax
    000044c6: 	cmpl	%ecx, %eax
    000044c8: 	jl	.Ltmp2858 # Offset: 17608
.Ltmp2855:
    000044ce: 	movq	%r12, %rsi
    000044d1: 	movq	%r15, %rdi
    000044d4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17620
    000044d9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000044e0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000044e7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000044ee: 	je	.Ltmp2859 # Offset: 17646
.Ltmp2990:
    000044f4: 	movq	-0x20(%rax), %rdi
    000044f8: 	movq	%rdi, (%rsp)
    000044fc: 	callq	clock@PLT # Offset: 17660
    00004501: 	movq	(%rsp), %rdi
    00004505: 	pxor	%xmm0, %xmm0
    00004509: 	movq	%rax, end_time(%rip)
    00004510: 	subq	start_time(%rip), %rax
    00004517: 	cvtsi2sd	%rax, %xmm0
    0000451c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004524: 	callq	_Z13record_resultdPKc # Offset: 17700
    00004529: 	movq	0xa0(%rsp), %rdi
    00004531: 	cmpq	%r13, %rdi
    00004534: 	je	.Ltmp2860 # Offset: 17716
    00004536: 	movq	0xb0(%rsp), %rax
    0000453e: 	leaq	0x1(%rax), %rsi
    00004542: 	callq	_ZdlPvm@PLT # Offset: 17730
.Ltmp2860:
    00004547: 	leaq	DATAat0x5772f(%rip), %rdx
    0000454e: 	movq	%r14, %rsi
    00004551: 	movq	%r12, %rdi
    00004554: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17748
    00004559: 	callq	clock@PLT # Offset: 17753
    0000455e: 	movl	iterations(%rip), %ecx
    00004564: 	movq	%rax, start_time(%rip)
    0000456b: 	testl	%ecx, %ecx
    0000456d: 	jle	.Ltmp2861 # Offset: 17773
    00004573: 	movdqa	DATAat0x57e20(%rip), %xmm7
    0000457b: 	movl	$0x0, 0x1c(%rsp)
    00004583: 	movaps	%xmm7, (%rsp)
    00004587: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2864:
    00004590: 	movq	%rbp, %rax
    00004593: 	pxor	%xmm0, %xmm0
    00004597: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2862:
    000045a0: 	movdqa	(%rsp), %xmm1
    000045a5: 	pand	(%rax), %xmm1
    000045a9: 	addq	$0x10, %rax
    000045ad: 	paddw	%xmm1, %xmm0
    000045b1: 	cmpq	%rbx, %rax
    000045b4: 	jne	.Ltmp2862 # Offset: 17844
    000045b6: 	movdqa	%xmm0, %xmm1
    000045ba: 	cvttsd2si	init_value(%rip), %eax
    000045c2: 	psrldq	$0x8, %xmm1
    000045c7: 	paddw	%xmm1, %xmm0
    000045cb: 	movdqa	%xmm0, %xmm1
    000045cf: 	psrldq	$0x4, %xmm1
    000045d4: 	andl	$0x1f, %eax
    000045d7: 	imulw	$0x1f40, %ax, %ax
    000045dc: 	paddw	%xmm1, %xmm0
    000045e0: 	movdqa	%xmm0, %xmm1
    000045e4: 	psrldq	$0x2, %xmm1
    000045e9: 	paddw	%xmm1, %xmm0
    000045ed: 	pextrw	$0x0, %xmm0, %edx
    000045f2: 	cmpw	%dx, %ax
    000045f5: 	je	.Ltmp2863 # Offset: 17909
    000045f7: 	movl	current_test(%rip), %edx
    000045fd: 	leaq	DATAat0x571d0(%rip), %rsi
    00004604: 	movl	$0x1, %edi
    00004609: 	xorl	%eax, %eax
    0000460b: 	callq	__printf_chk@PLT # Offset: 17931
    00004610: 	movl	iterations(%rip), %ecx
.Ltmp2863:
    00004616: 	addl	$0x1, 0x1c(%rsp)
    0000461b: 	movl	0x1c(%rsp), %eax
    0000461f: 	cmpl	%ecx, %eax
    00004621: 	jl	.Ltmp2864 # Offset: 17953
.Ltmp2861:
    00004627: 	movq	%r12, %rsi
    0000462a: 	movq	%r15, %rdi
    0000462d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17965
    00004632: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004639: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004640: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004647: 	je	.Ltmp2865 # Offset: 17991
.Ltmp2989:
    0000464d: 	movq	-0x20(%rax), %rdi
    00004651: 	movq	%rdi, (%rsp)
    00004655: 	callq	clock@PLT # Offset: 18005
    0000465a: 	movq	(%rsp), %rdi
    0000465e: 	pxor	%xmm0, %xmm0
    00004662: 	movq	%rax, end_time(%rip)
    00004669: 	subq	start_time(%rip), %rax
    00004670: 	cvtsi2sd	%rax, %xmm0
    00004675: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000467d: 	callq	_Z13record_resultdPKc # Offset: 18045
    00004682: 	movq	0xa0(%rsp), %rdi
    0000468a: 	cmpq	%r13, %rdi
    0000468d: 	je	.Ltmp2866 # Offset: 18061
    0000468f: 	movq	0xb0(%rsp), %rax
    00004697: 	leaq	0x1(%rax), %rsi
    0000469b: 	callq	_ZdlPvm@PLT # Offset: 18075
.Ltmp2866:
    000046a0: 	leaq	DATAat0x57737(%rip), %rdx
    000046a7: 	movq	%r14, %rsi
    000046aa: 	movq	%r12, %rdi
    000046ad: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18093
    000046b2: 	movq	%r12, %rdx
    000046b5: 	movl	$0x1f40, %esi
    000046ba: 	movq	%rbp, %rdi
    000046bd: 	callq	_Z13test_constantIs13and_remainderIsLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 18109
    000046c2: 	movq	0xa0(%rsp), %rdi
    000046ca: 	cmpq	%r13, %rdi
    000046cd: 	je	.Ltmp2867 # Offset: 18125
    000046cf: 	movq	0xb0(%rsp), %rax
    000046d7: 	leaq	0x1(%rax), %rsi
    000046db: 	callq	_ZdlPvm@PLT # Offset: 18139
.Ltmp2867:
    000046e0: 	leaq	DATAat0x57749(%rip), %rdx
    000046e7: 	movq	%r14, %rsi
    000046ea: 	movq	%r12, %rdi
    000046ed: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18157
    000046f2: 	movq	%r12, %rdx
    000046f5: 	movl	$0x1f40, %esi
    000046fa: 	movq	%rbp, %rdi
    000046fd: 	callq	_Z13test_constantIs14and_remainder2IsLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 18173
    00004702: 	movq	0xa0(%rsp), %rdi
    0000470a: 	cmpq	%r13, %rdi
    0000470d: 	je	.Ltmp2868 # Offset: 18189
    0000470f: 	movq	0xb0(%rsp), %rax
    00004717: 	leaq	0x1(%rax), %rsi
    0000471b: 	callq	_ZdlPvm@PLT # Offset: 18203
.Ltmp2868:
    00004720: 	leaq	DATAat0x5775c(%rip), %rdx
    00004727: 	movq	%r14, %rsi
    0000472a: 	movq	%r12, %rdi
    0000472d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18221
    00004732: 	callq	clock@PLT # Offset: 18226
    00004737: 	movl	iterations(%rip), %ecx
    0000473d: 	movq	%rax, start_time(%rip)
    00004744: 	testl	%ecx, %ecx
    00004746: 	jle	.Ltmp2869 # Offset: 18246
    0000474c: 	movdqa	DATAat0x57e20(%rip), %xmm7
    00004754: 	movl	$0x0, 0x1c(%rsp)
    0000475c: 	movaps	%xmm7, (%rsp)
.Ltmp2872:
    00004760: 	pxor	%xmm2, %xmm2
    00004764: 	movq	%rbp, %rax
    00004767: 	movdqa	%xmm2, %xmm3
    0000476b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2870:
    00004770: 	movdqa	%xmm3, %xmm1
    00004774: 	movdqa	(%rsp), %xmm4
    00004779: 	movdqa	(%rax), %xmm0
    0000477d: 	addq	$0x10, %rax
    00004781: 	pcmpgtw	-0x10(%rax), %xmm1
    00004786: 	pand	%xmm4, %xmm1
    0000478a: 	paddw	%xmm1, %xmm0
    0000478e: 	pand	%xmm4, %xmm0
    00004792: 	psubw	%xmm1, %xmm0
    00004796: 	paddw	%xmm0, %xmm2
    0000479a: 	cmpq	%rax, %rbx
    0000479d: 	jne	.Ltmp2870 # Offset: 18333
    0000479f: 	cvttsd2si	init_value(%rip), %eax
    000047a7: 	movdqa	%xmm2, %xmm0
    000047ab: 	psrldq	$0x8, %xmm0
    000047b0: 	paddw	%xmm0, %xmm2
    000047b4: 	movdqa	%xmm2, %xmm0
    000047b8: 	movl	%eax, %edx
    000047ba: 	psrldq	$0x4, %xmm0
    000047bf: 	sarw	$0xf, %dx
    000047c3: 	paddw	%xmm0, %xmm2
    000047c7: 	shrw	$0xb, %dx
    000047cb: 	movdqa	%xmm2, %xmm0
    000047cf: 	addl	%edx, %eax
    000047d1: 	psrldq	$0x2, %xmm0
    000047d6: 	andl	$0x1f, %eax
    000047d9: 	paddw	%xmm0, %xmm2
    000047dd: 	subl	%edx, %eax
    000047df: 	pextrw	$0x0, %xmm2, %edx
    000047e4: 	imulw	$0x1f40, %ax, %ax
    000047e9: 	cmpw	%dx, %ax
    000047ec: 	je	.Ltmp2871 # Offset: 18412
    000047ee: 	movl	current_test(%rip), %edx
    000047f4: 	leaq	DATAat0x571d0(%rip), %rsi
    000047fb: 	movl	$0x1, %edi
    00004800: 	xorl	%eax, %eax
    00004802: 	callq	__printf_chk@PLT # Offset: 18434
    00004807: 	movl	iterations(%rip), %ecx
.Ltmp2871:
    0000480d: 	addl	$0x1, 0x1c(%rsp)
    00004812: 	movl	0x1c(%rsp), %eax
    00004816: 	cmpl	%ecx, %eax
    00004818: 	jl	.Ltmp2872 # Offset: 18456
.Ltmp2869:
    0000481e: 	movq	%r12, %rsi
    00004821: 	movq	%r15, %rdi
    00004824: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18468
    00004829: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004830: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004837: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000483e: 	je	.Ltmp2873 # Offset: 18494
.Ltmp2988:
    00004844: 	movq	-0x20(%rax), %rdi
    00004848: 	movq	%rdi, (%rsp)
    0000484c: 	callq	clock@PLT # Offset: 18508
    00004851: 	movq	(%rsp), %rdi
    00004855: 	pxor	%xmm0, %xmm0
    00004859: 	movq	%rax, end_time(%rip)
    00004860: 	subq	start_time(%rip), %rax
    00004867: 	cvtsi2sd	%rax, %xmm0
    0000486c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004874: 	callq	_Z13record_resultdPKc # Offset: 18548
    00004879: 	movq	0xa0(%rsp), %rdi
    00004881: 	cmpq	%r13, %rdi
    00004884: 	je	.Ltmp2874 # Offset: 18564
    00004886: 	movq	0xb0(%rsp), %rax
    0000488e: 	leaq	0x1(%rax), %rsi
    00004892: 	callq	_ZdlPvm@PLT # Offset: 18578
.Ltmp2874:
    00004897: 	leaq	DATAat0x57774(%rip), %rdx
    0000489e: 	movq	%r14, %rsi
    000048a1: 	movq	%r12, %rdi
    000048a4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18596
    000048a9: 	movq	%r12, %rcx
    000048ac: 	movl	$0x20, %edx
    000048b1: 	movl	$0x1f40, %esi
    000048b6: 	movq	%rbp, %rdi
    000048b9: 	callq	_Z14test_variable1Is25custom_remainder_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 18617
    000048be: 	movq	0xa0(%rsp), %rdi
    000048c6: 	cmpq	%r13, %rdi
    000048c9: 	je	.Ltmp2875 # Offset: 18633
    000048cb: 	movq	0xb0(%rsp), %rax
    000048d3: 	leaq	0x1(%rax), %rsi
    000048d7: 	callq	_ZdlPvm@PLT # Offset: 18647
.Ltmp2875:
    000048dc: 	leaq	DATAat0x5778e(%rip), %rdx
    000048e3: 	movq	%r14, %rsi
    000048e6: 	movq	%r12, %rdi
    000048e9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18665
    000048ee: 	callq	clock@PLT # Offset: 18670
    000048f3: 	movl	iterations(%rip), %ecx
    000048f9: 	movq	%rax, start_time(%rip)
    00004900: 	testl	%ecx, %ecx
    00004902: 	jle	.Ltmp2876 # Offset: 18690
    00004908: 	movdqa	DATAat0x57e20(%rip), %xmm7
    00004910: 	movl	$0x0, 0x1c(%rsp)
    00004918: 	movaps	%xmm7, (%rsp)
    0000491c: 	nopl	(%rax) # Size: 4
.Ltmp2879:
    00004920: 	pxor	%xmm2, %xmm2
    00004924: 	movq	%rbp, %rax
    00004927: 	movdqa	%xmm2, %xmm3
    0000492b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2877:
    00004930: 	movdqa	%xmm3, %xmm1
    00004934: 	movdqa	(%rsp), %xmm6
    00004939: 	movdqa	(%rax), %xmm0
    0000493d: 	addq	$0x10, %rax
    00004941: 	pcmpgtw	-0x10(%rax), %xmm1
    00004946: 	pand	%xmm6, %xmm1
    0000494a: 	paddw	%xmm1, %xmm0
    0000494e: 	pand	%xmm6, %xmm0
    00004952: 	psubw	%xmm1, %xmm0
    00004956: 	paddw	%xmm0, %xmm2
    0000495a: 	cmpq	%rbx, %rax
    0000495d: 	jne	.Ltmp2877 # Offset: 18781
    0000495f: 	cvttsd2si	init_value(%rip), %eax
    00004967: 	movdqa	%xmm2, %xmm0
    0000496b: 	psrldq	$0x8, %xmm0
    00004970: 	paddw	%xmm0, %xmm2
    00004974: 	movdqa	%xmm2, %xmm0
    00004978: 	movl	%eax, %edx
    0000497a: 	psrldq	$0x4, %xmm0
    0000497f: 	sarw	$0xf, %dx
    00004983: 	paddw	%xmm0, %xmm2
    00004987: 	shrw	$0xb, %dx
    0000498b: 	movdqa	%xmm2, %xmm0
    0000498f: 	addl	%edx, %eax
    00004991: 	psrldq	$0x2, %xmm0
    00004996: 	andl	$0x1f, %eax
    00004999: 	paddw	%xmm0, %xmm2
    0000499d: 	subl	%edx, %eax
    0000499f: 	pextrw	$0x0, %xmm2, %edx
    000049a4: 	imulw	$0x1f40, %ax, %ax
    000049a9: 	cmpw	%dx, %ax
    000049ac: 	je	.Ltmp2878 # Offset: 18860
    000049ae: 	movl	current_test(%rip), %edx
    000049b4: 	leaq	DATAat0x571d0(%rip), %rsi
    000049bb: 	movl	$0x1, %edi
    000049c0: 	xorl	%eax, %eax
    000049c2: 	callq	__printf_chk@PLT # Offset: 18882
    000049c7: 	movl	iterations(%rip), %ecx
.Ltmp2878:
    000049cd: 	addl	$0x1, 0x1c(%rsp)
    000049d2: 	movl	0x1c(%rsp), %eax
    000049d6: 	cmpl	%ecx, %eax
    000049d8: 	jl	.Ltmp2879 # Offset: 18904
.Ltmp2876:
    000049de: 	movq	%r12, %rsi
    000049e1: 	movq	%r15, %rdi
    000049e4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18916
    000049e9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000049f0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000049f7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000049fe: 	je	.Ltmp2880 # Offset: 18942
.Ltmp2987:
    00004a04: 	movq	-0x20(%rax), %rdi
    00004a08: 	movq	%rdi, (%rsp)
    00004a0c: 	callq	clock@PLT # Offset: 18956
    00004a11: 	movq	(%rsp), %rdi
    00004a15: 	pxor	%xmm0, %xmm0
    00004a19: 	movq	%rax, end_time(%rip)
    00004a20: 	subq	start_time(%rip), %rax
    00004a27: 	cvtsi2sd	%rax, %xmm0
    00004a2c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004a34: 	callq	_Z13record_resultdPKc # Offset: 18996
    00004a39: 	movq	0xa0(%rsp), %rdi
    00004a41: 	cmpq	%r13, %rdi
    00004a44: 	je	.Ltmp2881 # Offset: 19012
    00004a46: 	movq	0xb0(%rsp), %rax
    00004a4e: 	leaq	0x1(%rax), %rsi
    00004a52: 	callq	_ZdlPvm@PLT # Offset: 19026
.Ltmp2881:
    00004a57: 	leaq	DATAat0x577a8(%rip), %rdx
    00004a5e: 	movq	%r14, %rsi
    00004a61: 	movq	%r12, %rdi
    00004a64: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19044
    00004a69: 	callq	clock@PLT # Offset: 19049
    00004a6e: 	movl	iterations(%rip), %ecx
    00004a74: 	movq	%rax, start_time(%rip)
    00004a7b: 	testl	%ecx, %ecx
    00004a7d: 	jle	.Ltmp2882 # Offset: 19069
    00004a83: 	movdqa	DATAat0x57cc0(%rip), %xmm7
    00004a8b: 	movl	$0x0, 0x1c(%rsp)
    00004a93: 	movaps	%xmm7, (%rsp)
    00004a97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2885:
    00004aa0: 	movq	%rbp, %rax
    00004aa3: 	pxor	%xmm0, %xmm0
    00004aa7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2883:
    00004ab0: 	movdqa	(%rsp), %xmm1
    00004ab5: 	pand	(%rax), %xmm1
    00004ab9: 	addq	$0x10, %rax
    00004abd: 	paddw	%xmm1, %xmm0
    00004ac1: 	cmpq	%rbx, %rax
    00004ac4: 	jne	.Ltmp2883 # Offset: 19140
    00004ac6: 	movdqa	%xmm0, %xmm1
    00004aca: 	cvttsd2si	init_value(%rip), %eax
    00004ad2: 	psrldq	$0x8, %xmm1
    00004ad7: 	paddw	%xmm1, %xmm0
    00004adb: 	movdqa	%xmm0, %xmm1
    00004adf: 	psrldq	$0x4, %xmm1
    00004ae4: 	andl	$0x3f, %eax
    00004ae7: 	imulw	$0x1f40, %ax, %ax
    00004aec: 	paddw	%xmm1, %xmm0
    00004af0: 	movdqa	%xmm0, %xmm1
    00004af4: 	psrldq	$0x2, %xmm1
    00004af9: 	paddw	%xmm1, %xmm0
    00004afd: 	pextrw	$0x0, %xmm0, %edx
    00004b02: 	cmpw	%dx, %ax
    00004b05: 	je	.Ltmp2884 # Offset: 19205
    00004b07: 	movl	current_test(%rip), %edx
    00004b0d: 	leaq	DATAat0x571d0(%rip), %rsi
    00004b14: 	movl	$0x1, %edi
    00004b19: 	xorl	%eax, %eax
    00004b1b: 	callq	__printf_chk@PLT # Offset: 19227
    00004b20: 	movl	iterations(%rip), %ecx
.Ltmp2884:
    00004b26: 	addl	$0x1, 0x1c(%rsp)
    00004b2b: 	movl	0x1c(%rsp), %eax
    00004b2f: 	cmpl	%ecx, %eax
    00004b31: 	jl	.Ltmp2885 # Offset: 19249
.Ltmp2882:
    00004b37: 	movq	%r12, %rsi
    00004b3a: 	movq	%r15, %rdi
    00004b3d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19261
    00004b42: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004b49: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004b50: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004b57: 	je	.Ltmp2886 # Offset: 19287
.Ltmp2986:
    00004b5d: 	movq	-0x20(%rax), %rdi
    00004b61: 	movq	%rdi, (%rsp)
    00004b65: 	callq	clock@PLT # Offset: 19301
    00004b6a: 	movq	(%rsp), %rdi
    00004b6e: 	pxor	%xmm0, %xmm0
    00004b72: 	movq	%rax, end_time(%rip)
    00004b79: 	subq	start_time(%rip), %rax
    00004b80: 	cvtsi2sd	%rax, %xmm0
    00004b85: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004b8d: 	callq	_Z13record_resultdPKc # Offset: 19341
    00004b92: 	movq	0xa0(%rsp), %rdi
    00004b9a: 	cmpq	%r13, %rdi
    00004b9d: 	je	.Ltmp2887 # Offset: 19357
    00004b9f: 	movq	0xb0(%rsp), %rax
    00004ba7: 	leaq	0x1(%rax), %rsi
    00004bab: 	callq	_ZdlPvm@PLT # Offset: 19371
.Ltmp2887:
    00004bb0: 	leaq	DATAat0x577b0(%rip), %rdx
    00004bb7: 	movq	%r14, %rsi
    00004bba: 	movq	%r12, %rdi
    00004bbd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19389
    00004bc2: 	movq	%r12, %rdx
    00004bc5: 	movl	$0x1f40, %esi
    00004bca: 	movq	%rbp, %rdi
    00004bcd: 	callq	_Z13test_constantIs13and_remainderIsLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 19405
    00004bd2: 	movq	0xa0(%rsp), %rdi
    00004bda: 	cmpq	%r13, %rdi
    00004bdd: 	je	.Ltmp2888 # Offset: 19421
    00004bdf: 	movq	0xb0(%rsp), %rax
    00004be7: 	leaq	0x1(%rax), %rsi
    00004beb: 	callq	_ZdlPvm@PLT # Offset: 19435
.Ltmp2888:
    00004bf0: 	leaq	DATAat0x577c2(%rip), %rdx
    00004bf7: 	movq	%r14, %rsi
    00004bfa: 	movq	%r12, %rdi
    00004bfd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19453
    00004c02: 	movq	%r12, %rdx
    00004c05: 	movl	$0x1f40, %esi
    00004c0a: 	movq	%rbp, %rdi
    00004c0d: 	callq	_Z13test_constantIs14and_remainder2IsLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 19469
    00004c12: 	movq	0xa0(%rsp), %rdi
    00004c1a: 	cmpq	%r13, %rdi
    00004c1d: 	je	.Ltmp2889 # Offset: 19485
    00004c1f: 	movq	0xb0(%rsp), %rax
    00004c27: 	leaq	0x1(%rax), %rsi
    00004c2b: 	callq	_ZdlPvm@PLT # Offset: 19499
.Ltmp2889:
    00004c30: 	leaq	DATAat0x577d5(%rip), %rdx
    00004c37: 	movq	%r14, %rsi
    00004c3a: 	movq	%r12, %rdi
    00004c3d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19517
    00004c42: 	callq	clock@PLT # Offset: 19522
    00004c47: 	movl	iterations(%rip), %ecx
    00004c4d: 	movq	%rax, start_time(%rip)
    00004c54: 	testl	%ecx, %ecx
    00004c56: 	jle	.Ltmp2890 # Offset: 19542
    00004c5c: 	movdqa	DATAat0x57cc0(%rip), %xmm7
    00004c64: 	movl	$0x0, 0x1c(%rsp)
    00004c6c: 	movaps	%xmm7, (%rsp)
.Ltmp2893:
    00004c70: 	pxor	%xmm2, %xmm2
    00004c74: 	movq	%rbp, %rax
    00004c77: 	movdqa	%xmm2, %xmm3
    00004c7b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2891:
    00004c80: 	movdqa	%xmm3, %xmm1
    00004c84: 	movdqa	(%rsp), %xmm7
    00004c89: 	movdqa	(%rax), %xmm0
    00004c8d: 	addq	$0x10, %rax
    00004c91: 	pcmpgtw	-0x10(%rax), %xmm1
    00004c96: 	pand	%xmm7, %xmm1
    00004c9a: 	paddw	%xmm1, %xmm0
    00004c9e: 	pand	%xmm7, %xmm0
    00004ca2: 	psubw	%xmm1, %xmm0
    00004ca6: 	paddw	%xmm0, %xmm2
    00004caa: 	cmpq	%rax, %rbx
    00004cad: 	jne	.Ltmp2891 # Offset: 19629
    00004caf: 	cvttsd2si	init_value(%rip), %eax
    00004cb7: 	movdqa	%xmm2, %xmm0
    00004cbb: 	psrldq	$0x8, %xmm0
    00004cc0: 	paddw	%xmm0, %xmm2
    00004cc4: 	movdqa	%xmm2, %xmm0
    00004cc8: 	movl	%eax, %edx
    00004cca: 	psrldq	$0x4, %xmm0
    00004ccf: 	sarw	$0xf, %dx
    00004cd3: 	paddw	%xmm0, %xmm2
    00004cd7: 	shrw	$0xa, %dx
    00004cdb: 	movdqa	%xmm2, %xmm0
    00004cdf: 	addl	%edx, %eax
    00004ce1: 	psrldq	$0x2, %xmm0
    00004ce6: 	andl	$0x3f, %eax
    00004ce9: 	paddw	%xmm0, %xmm2
    00004ced: 	subl	%edx, %eax
    00004cef: 	pextrw	$0x0, %xmm2, %edx
    00004cf4: 	imulw	$0x1f40, %ax, %ax
    00004cf9: 	cmpw	%dx, %ax
    00004cfc: 	je	.Ltmp2892 # Offset: 19708
    00004cfe: 	movl	current_test(%rip), %edx
    00004d04: 	leaq	DATAat0x571d0(%rip), %rsi
    00004d0b: 	movl	$0x1, %edi
    00004d10: 	xorl	%eax, %eax
    00004d12: 	callq	__printf_chk@PLT # Offset: 19730
    00004d17: 	movl	iterations(%rip), %ecx
.Ltmp2892:
    00004d1d: 	addl	$0x1, 0x1c(%rsp)
    00004d22: 	movl	0x1c(%rsp), %eax
    00004d26: 	cmpl	%ecx, %eax
    00004d28: 	jl	.Ltmp2893 # Offset: 19752
.Ltmp2890:
    00004d2e: 	movq	%r12, %rsi
    00004d31: 	movq	%r15, %rdi
    00004d34: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19764
    00004d39: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004d40: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004d47: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004d4e: 	je	.Ltmp2894 # Offset: 19790
.Ltmp2985:
    00004d54: 	movq	-0x20(%rax), %rdi
    00004d58: 	movq	%rdi, (%rsp)
    00004d5c: 	callq	clock@PLT # Offset: 19804
    00004d61: 	movq	(%rsp), %rdi
    00004d65: 	pxor	%xmm0, %xmm0
    00004d69: 	movq	%rax, end_time(%rip)
    00004d70: 	subq	start_time(%rip), %rax
    00004d77: 	cvtsi2sd	%rax, %xmm0
    00004d7c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004d84: 	callq	_Z13record_resultdPKc # Offset: 19844
    00004d89: 	movq	0xa0(%rsp), %rdi
    00004d91: 	cmpq	%r13, %rdi
    00004d94: 	je	.Ltmp2895 # Offset: 19860
    00004d96: 	movq	0xb0(%rsp), %rax
    00004d9e: 	leaq	0x1(%rax), %rsi
    00004da2: 	callq	_ZdlPvm@PLT # Offset: 19874
.Ltmp2895:
    00004da7: 	leaq	DATAat0x577ed(%rip), %rdx
    00004dae: 	movq	%r14, %rsi
    00004db1: 	movq	%r12, %rdi
    00004db4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19892
    00004db9: 	movq	%r12, %rcx
    00004dbc: 	movl	$0x40, %edx
    00004dc1: 	movl	$0x1f40, %esi
    00004dc6: 	movq	%rbp, %rdi
    00004dc9: 	callq	_Z14test_variable1Is25custom_remainder_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 19913
    00004dce: 	movq	0xa0(%rsp), %rdi
    00004dd6: 	cmpq	%r13, %rdi
    00004dd9: 	je	.Ltmp2896 # Offset: 19929
    00004ddb: 	movq	0xb0(%rsp), %rax
    00004de3: 	leaq	0x1(%rax), %rsi
    00004de7: 	callq	_ZdlPvm@PLT # Offset: 19943
.Ltmp2896:
    00004dec: 	leaq	DATAat0x57807(%rip), %rdx
    00004df3: 	movq	%r14, %rsi
    00004df6: 	movq	%r12, %rdi
    00004df9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19961
    00004dfe: 	callq	clock@PLT # Offset: 19966
    00004e03: 	movl	iterations(%rip), %ecx
    00004e09: 	movq	%rax, start_time(%rip)
    00004e10: 	testl	%ecx, %ecx
    00004e12: 	jle	.Ltmp2897 # Offset: 19986
    00004e18: 	movdqa	DATAat0x57cc0(%rip), %xmm7
    00004e20: 	movl	$0x0, 0x1c(%rsp)
    00004e28: 	movaps	%xmm7, (%rsp)
    00004e2c: 	nopl	(%rax) # Size: 4
.Ltmp2900:
    00004e30: 	pxor	%xmm2, %xmm2
    00004e34: 	movq	%rbp, %rax
    00004e37: 	movdqa	%xmm2, %xmm3
    00004e3b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2898:
    00004e40: 	movdqa	%xmm3, %xmm1
    00004e44: 	movdqa	(%rsp), %xmm5
    00004e49: 	movdqa	(%rax), %xmm0
    00004e4d: 	addq	$0x10, %rax
    00004e51: 	pcmpgtw	-0x10(%rax), %xmm1
    00004e56: 	pand	%xmm5, %xmm1
    00004e5a: 	paddw	%xmm1, %xmm0
    00004e5e: 	pand	%xmm5, %xmm0
    00004e62: 	psubw	%xmm1, %xmm0
    00004e66: 	paddw	%xmm0, %xmm2
    00004e6a: 	cmpq	%rbx, %rax
    00004e6d: 	jne	.Ltmp2898 # Offset: 20077
    00004e6f: 	cvttsd2si	init_value(%rip), %eax
    00004e77: 	movdqa	%xmm2, %xmm0
    00004e7b: 	psrldq	$0x8, %xmm0
    00004e80: 	paddw	%xmm0, %xmm2
    00004e84: 	movdqa	%xmm2, %xmm0
    00004e88: 	movl	%eax, %edx
    00004e8a: 	psrldq	$0x4, %xmm0
    00004e8f: 	sarw	$0xf, %dx
    00004e93: 	paddw	%xmm0, %xmm2
    00004e97: 	shrw	$0xa, %dx
    00004e9b: 	movdqa	%xmm2, %xmm0
    00004e9f: 	addl	%edx, %eax
    00004ea1: 	psrldq	$0x2, %xmm0
    00004ea6: 	andl	$0x3f, %eax
    00004ea9: 	paddw	%xmm0, %xmm2
    00004ead: 	subl	%edx, %eax
    00004eaf: 	pextrw	$0x0, %xmm2, %edx
    00004eb4: 	imulw	$0x1f40, %ax, %ax
    00004eb9: 	cmpw	%dx, %ax
    00004ebc: 	je	.Ltmp2899 # Offset: 20156
    00004ebe: 	movl	current_test(%rip), %edx
    00004ec4: 	leaq	DATAat0x571d0(%rip), %rsi
    00004ecb: 	movl	$0x1, %edi
    00004ed0: 	xorl	%eax, %eax
    00004ed2: 	callq	__printf_chk@PLT # Offset: 20178
    00004ed7: 	movl	iterations(%rip), %ecx
.Ltmp2899:
    00004edd: 	addl	$0x1, 0x1c(%rsp)
    00004ee2: 	movl	0x1c(%rsp), %eax
    00004ee6: 	cmpl	%ecx, %eax
    00004ee8: 	jl	.Ltmp2900 # Offset: 20200
.Ltmp2897:
    00004eee: 	movq	%r12, %rsi
    00004ef1: 	movq	%r15, %rdi
    00004ef4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 20212
    00004ef9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004f00: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004f07: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004f0e: 	je	.Ltmp2901 # Offset: 20238
.Ltmp2984:
    00004f14: 	movq	-0x20(%rax), %rdi
    00004f18: 	movq	%rdi, (%rsp)
    00004f1c: 	callq	clock@PLT # Offset: 20252
    00004f21: 	movq	(%rsp), %rdi
    00004f25: 	pxor	%xmm0, %xmm0
    00004f29: 	movq	%rax, end_time(%rip)
    00004f30: 	subq	start_time(%rip), %rax
    00004f37: 	cvtsi2sd	%rax, %xmm0
    00004f3c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004f44: 	callq	_Z13record_resultdPKc # Offset: 20292
    00004f49: 	movq	0xa0(%rsp), %rdi
    00004f51: 	cmpq	%r13, %rdi
    00004f54: 	je	.Ltmp2902 # Offset: 20308
    00004f56: 	movq	0xb0(%rsp), %rax
    00004f5e: 	leaq	0x1(%rax), %rsi
    00004f62: 	callq	_ZdlPvm@PLT # Offset: 20322
.Ltmp2902:
    00004f67: 	leaq	DATAat0x57821(%rip), %rdx
    00004f6e: 	movq	%r14, %rsi
    00004f71: 	movq	%r12, %rdi
    00004f74: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20340
    00004f79: 	callq	clock@PLT # Offset: 20345
    00004f7e: 	movl	iterations(%rip), %ecx
    00004f84: 	movq	%rax, start_time(%rip)
    00004f8b: 	testl	%ecx, %ecx
    00004f8d: 	jle	.Ltmp2903 # Offset: 20365
    00004f93: 	movdqa	DATAat0x57c30(%rip), %xmm7
    00004f9b: 	movl	$0x0, 0x1c(%rsp)
    00004fa3: 	movaps	%xmm7, (%rsp)
    00004fa7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2906:
    00004fb0: 	movq	%rbp, %rax
    00004fb3: 	pxor	%xmm0, %xmm0
    00004fb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2904:
    00004fc0: 	movdqa	(%rsp), %xmm1
    00004fc5: 	pand	(%rax), %xmm1
    00004fc9: 	addq	$0x10, %rax
    00004fcd: 	paddw	%xmm1, %xmm0
    00004fd1: 	cmpq	%rax, %rbx
    00004fd4: 	jne	.Ltmp2904 # Offset: 20436
    00004fd6: 	movdqa	%xmm0, %xmm1
    00004fda: 	cvttsd2si	init_value(%rip), %eax
    00004fe2: 	psrldq	$0x8, %xmm1
    00004fe7: 	paddw	%xmm1, %xmm0
    00004feb: 	movdqa	%xmm0, %xmm1
    00004fef: 	psrldq	$0x4, %xmm1
    00004ff4: 	andl	$0x7f, %eax
    00004ff7: 	imulw	$0x1f40, %ax, %ax
    00004ffc: 	paddw	%xmm1, %xmm0
    00005000: 	movdqa	%xmm0, %xmm1
    00005004: 	psrldq	$0x2, %xmm1
    00005009: 	paddw	%xmm1, %xmm0
    0000500d: 	pextrw	$0x0, %xmm0, %edx
    00005012: 	cmpw	%dx, %ax
    00005015: 	je	.Ltmp2905 # Offset: 20501
    00005017: 	movl	current_test(%rip), %edx
    0000501d: 	leaq	DATAat0x571d0(%rip), %rsi
    00005024: 	movl	$0x1, %edi
    00005029: 	xorl	%eax, %eax
    0000502b: 	callq	__printf_chk@PLT # Offset: 20523
    00005030: 	movl	iterations(%rip), %ecx
.Ltmp2905:
    00005036: 	addl	$0x1, 0x1c(%rsp)
    0000503b: 	movl	0x1c(%rsp), %eax
    0000503f: 	cmpl	%ecx, %eax
    00005041: 	jl	.Ltmp2906 # Offset: 20545
.Ltmp2903:
    00005047: 	movq	%r12, %rsi
    0000504a: 	movq	%r15, %rdi
    0000504d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 20557
    00005052: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005059: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005060: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005067: 	je	.Ltmp2907 # Offset: 20583
.Ltmp2983:
    0000506d: 	movq	-0x20(%rax), %rdi
    00005071: 	movq	%rdi, (%rsp)
    00005075: 	callq	clock@PLT # Offset: 20597
    0000507a: 	movq	(%rsp), %rdi
    0000507e: 	pxor	%xmm0, %xmm0
    00005082: 	movq	%rax, end_time(%rip)
    00005089: 	subq	start_time(%rip), %rax
    00005090: 	cvtsi2sd	%rax, %xmm0
    00005095: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000509d: 	callq	_Z13record_resultdPKc # Offset: 20637
    000050a2: 	movq	0xa0(%rsp), %rdi
    000050aa: 	cmpq	%r13, %rdi
    000050ad: 	je	.Ltmp2908 # Offset: 20653
    000050af: 	movq	0xb0(%rsp), %rax
    000050b7: 	leaq	0x1(%rax), %rsi
    000050bb: 	callq	_ZdlPvm@PLT # Offset: 20667
.Ltmp2908:
    000050c0: 	leaq	DATAat0x5782a(%rip), %rdx
    000050c7: 	movq	%r14, %rsi
    000050ca: 	movq	%r12, %rdi
    000050cd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20685
    000050d2: 	movq	%r12, %rdx
    000050d5: 	movl	$0x1f40, %esi
    000050da: 	movq	%rbp, %rdi
    000050dd: 	callq	_Z13test_constantIs13and_remainderIsLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 20701
    000050e2: 	movq	0xa0(%rsp), %rdi
    000050ea: 	cmpq	%r13, %rdi
    000050ed: 	je	.Ltmp2909 # Offset: 20717
    000050ef: 	movq	0xb0(%rsp), %rax
    000050f7: 	leaq	0x1(%rax), %rsi
    000050fb: 	callq	_ZdlPvm@PLT # Offset: 20731
.Ltmp2909:
    00005100: 	leaq	DATAat0x5783d(%rip), %rdx
    00005107: 	movq	%r14, %rsi
    0000510a: 	movq	%r12, %rdi
    0000510d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20749
    00005112: 	movq	%r12, %rdx
    00005115: 	movl	$0x1f40, %esi
    0000511a: 	movq	%rbp, %rdi
    0000511d: 	callq	_Z13test_constantIs14and_remainder2IsLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 20765
    00005122: 	movq	0xa0(%rsp), %rdi
    0000512a: 	cmpq	%r13, %rdi
    0000512d: 	je	.Ltmp2910 # Offset: 20781
    0000512f: 	movq	0xb0(%rsp), %rax
    00005137: 	leaq	0x1(%rax), %rsi
    0000513b: 	callq	_ZdlPvm@PLT # Offset: 20795
.Ltmp2910:
    00005140: 	leaq	DATAat0x57851(%rip), %rdx
    00005147: 	movq	%r14, %rsi
    0000514a: 	movq	%r12, %rdi
    0000514d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20813
    00005152: 	callq	clock@PLT # Offset: 20818
    00005157: 	movl	iterations(%rip), %ecx
    0000515d: 	movq	%rax, start_time(%rip)
    00005164: 	testl	%ecx, %ecx
    00005166: 	jle	.Ltmp2911 # Offset: 20838
    0000516c: 	movdqa	DATAat0x57c30(%rip), %xmm7
    00005174: 	movl	$0x0, 0x1c(%rsp)
    0000517c: 	movaps	%xmm7, (%rsp)
.Ltmp2914:
    00005180: 	pxor	%xmm2, %xmm2
    00005184: 	movq	%rbp, %rax
    00005187: 	movdqa	%xmm2, %xmm3
    0000518b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2912:
    00005190: 	movdqa	%xmm3, %xmm1
    00005194: 	movdqa	(%rsp), %xmm4
    00005199: 	movdqa	(%rax), %xmm0
    0000519d: 	addq	$0x10, %rax
    000051a1: 	pcmpgtw	-0x10(%rax), %xmm1
    000051a6: 	pand	%xmm4, %xmm1
    000051aa: 	paddw	%xmm1, %xmm0
    000051ae: 	pand	%xmm4, %xmm0
    000051b2: 	psubw	%xmm1, %xmm0
    000051b6: 	paddw	%xmm0, %xmm2
    000051ba: 	cmpq	%rbx, %rax
    000051bd: 	jne	.Ltmp2912 # Offset: 20925
    000051bf: 	cvttsd2si	init_value(%rip), %eax
    000051c7: 	movdqa	%xmm2, %xmm0
    000051cb: 	psrldq	$0x8, %xmm0
    000051d0: 	paddw	%xmm0, %xmm2
    000051d4: 	movdqa	%xmm2, %xmm0
    000051d8: 	movl	%eax, %edx
    000051da: 	psrldq	$0x4, %xmm0
    000051df: 	sarw	$0xf, %dx
    000051e3: 	paddw	%xmm0, %xmm2
    000051e7: 	shrw	$0x9, %dx
    000051eb: 	movdqa	%xmm2, %xmm0
    000051ef: 	addl	%edx, %eax
    000051f1: 	psrldq	$0x2, %xmm0
    000051f6: 	andl	$0x7f, %eax
    000051f9: 	paddw	%xmm0, %xmm2
    000051fd: 	subl	%edx, %eax
    000051ff: 	pextrw	$0x0, %xmm2, %edx
    00005204: 	imulw	$0x1f40, %ax, %ax
    00005209: 	cmpw	%dx, %ax
    0000520c: 	je	.Ltmp2913 # Offset: 21004
    0000520e: 	movl	current_test(%rip), %edx
    00005214: 	leaq	DATAat0x571d0(%rip), %rsi
    0000521b: 	movl	$0x1, %edi
    00005220: 	xorl	%eax, %eax
    00005222: 	callq	__printf_chk@PLT # Offset: 21026
    00005227: 	movl	iterations(%rip), %ecx
.Ltmp2913:
    0000522d: 	addl	$0x1, 0x1c(%rsp)
    00005232: 	movl	0x1c(%rsp), %eax
    00005236: 	cmpl	%ecx, %eax
    00005238: 	jl	.Ltmp2914 # Offset: 21048
.Ltmp2911:
    0000523e: 	movq	%r12, %rsi
    00005241: 	movq	%r15, %rdi
    00005244: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 21060
    00005249: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005250: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005257: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000525e: 	je	.Ltmp2915 # Offset: 21086
.Ltmp2982:
    00005264: 	movq	-0x20(%rax), %rdi
    00005268: 	movq	%rdi, (%rsp)
    0000526c: 	callq	clock@PLT # Offset: 21100
    00005271: 	movq	(%rsp), %rdi
    00005275: 	pxor	%xmm0, %xmm0
    00005279: 	movq	%rax, end_time(%rip)
    00005280: 	subq	start_time(%rip), %rax
    00005287: 	cvtsi2sd	%rax, %xmm0
    0000528c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00005294: 	callq	_Z13record_resultdPKc # Offset: 21140
    00005299: 	movq	0xa0(%rsp), %rdi
    000052a1: 	cmpq	%r13, %rdi
    000052a4: 	je	.Ltmp2916 # Offset: 21156
    000052a6: 	movq	0xb0(%rsp), %rax
    000052ae: 	leaq	0x1(%rax), %rsi
    000052b2: 	callq	_ZdlPvm@PLT # Offset: 21170
.Ltmp2916:
    000052b7: 	leaq	DATAat0x5786a(%rip), %rdx
    000052be: 	movq	%r14, %rsi
    000052c1: 	movq	%r12, %rdi
    000052c4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21188
    000052c9: 	movq	%r12, %rcx
    000052cc: 	movl	$0x80, %edx
    000052d1: 	movl	$0x1f40, %esi
    000052d6: 	movq	%rbp, %rdi
    000052d9: 	callq	_Z14test_variable1Is25custom_remainder_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 21209
    000052de: 	movq	0xa0(%rsp), %rdi
    000052e6: 	cmpq	%r13, %rdi
    000052e9: 	je	.Ltmp2917 # Offset: 21225
    000052eb: 	movq	0xb0(%rsp), %rax
    000052f3: 	leaq	0x1(%rax), %rsi
    000052f7: 	callq	_ZdlPvm@PLT # Offset: 21239
.Ltmp2917:
    000052fc: 	leaq	DATAat0x57885(%rip), %rdx
    00005303: 	movq	%r14, %rsi
    00005306: 	movq	%r12, %rdi
    00005309: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21257
    0000530e: 	callq	clock@PLT # Offset: 21262
    00005313: 	movl	iterations(%rip), %ecx
    00005319: 	movq	%rax, start_time(%rip)
    00005320: 	testl	%ecx, %ecx
    00005322: 	jle	.Ltmp2918 # Offset: 21282
    00005328: 	movdqa	DATAat0x57c30(%rip), %xmm7
    00005330: 	movl	$0x0, 0x1c(%rsp)
    00005338: 	movaps	%xmm7, (%rsp)
    0000533c: 	nopl	(%rax) # Size: 4
.Ltmp2921:
    00005340: 	pxor	%xmm2, %xmm2
    00005344: 	movq	%rbp, %rax
    00005347: 	movdqa	%xmm2, %xmm3
    0000534b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2919:
    00005350: 	movdqa	%xmm3, %xmm1
    00005354: 	movdqa	(%rsp), %xmm6
    00005359: 	movdqa	(%rax), %xmm0
    0000535d: 	addq	$0x10, %rax
    00005361: 	pcmpgtw	-0x10(%rax), %xmm1
    00005366: 	pand	%xmm6, %xmm1
    0000536a: 	paddw	%xmm1, %xmm0
    0000536e: 	pand	%xmm6, %xmm0
    00005372: 	psubw	%xmm1, %xmm0
    00005376: 	paddw	%xmm0, %xmm2
    0000537a: 	cmpq	%rbx, %rax
    0000537d: 	jne	.Ltmp2919 # Offset: 21373
    0000537f: 	cvttsd2si	init_value(%rip), %eax
    00005387: 	movdqa	%xmm2, %xmm0
    0000538b: 	psrldq	$0x8, %xmm0
    00005390: 	paddw	%xmm0, %xmm2
    00005394: 	movdqa	%xmm2, %xmm0
    00005398: 	movl	%eax, %edx
    0000539a: 	psrldq	$0x4, %xmm0
    0000539f: 	sarw	$0xf, %dx
    000053a3: 	paddw	%xmm0, %xmm2
    000053a7: 	shrw	$0x9, %dx
    000053ab: 	movdqa	%xmm2, %xmm0
    000053af: 	addl	%edx, %eax
    000053b1: 	psrldq	$0x2, %xmm0
    000053b6: 	andl	$0x7f, %eax
    000053b9: 	paddw	%xmm0, %xmm2
    000053bd: 	subl	%edx, %eax
    000053bf: 	pextrw	$0x0, %xmm2, %edx
    000053c4: 	imulw	$0x1f40, %ax, %ax
    000053c9: 	cmpw	%dx, %ax
    000053cc: 	je	.Ltmp2920 # Offset: 21452
    000053ce: 	movl	current_test(%rip), %edx
    000053d4: 	leaq	DATAat0x571d0(%rip), %rsi
    000053db: 	movl	$0x1, %edi
    000053e0: 	xorl	%eax, %eax
    000053e2: 	callq	__printf_chk@PLT # Offset: 21474
    000053e7: 	movl	iterations(%rip), %ecx
.Ltmp2920:
    000053ed: 	addl	$0x1, 0x1c(%rsp)
    000053f2: 	movl	0x1c(%rsp), %eax
    000053f6: 	cmpl	%ecx, %eax
    000053f8: 	jl	.Ltmp2921 # Offset: 21496
.Ltmp2918:
    000053fe: 	movq	%r12, %rsi
    00005401: 	movq	%r15, %rdi
    00005404: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 21508
    00005409: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005410: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005417: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000541e: 	je	.Ltmp2922 # Offset: 21534
.Ltmp2981:
    00005424: 	movq	-0x20(%rax), %rdi
    00005428: 	movq	%rdi, (%rsp)
    0000542c: 	callq	clock@PLT # Offset: 21548
    00005431: 	movq	(%rsp), %rdi
    00005435: 	pxor	%xmm0, %xmm0
    00005439: 	movq	%rax, end_time(%rip)
    00005440: 	subq	start_time(%rip), %rax
    00005447: 	cvtsi2sd	%rax, %xmm0
    0000544c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00005454: 	callq	_Z13record_resultdPKc # Offset: 21588
    00005459: 	movq	0xa0(%rsp), %rdi
    00005461: 	cmpq	%r13, %rdi
    00005464: 	je	.Ltmp2923 # Offset: 21604
    00005466: 	movq	0xb0(%rsp), %rax
    0000546e: 	leaq	0x1(%rax), %rsi
    00005472: 	callq	_ZdlPvm@PLT # Offset: 21618
.Ltmp2923:
    00005477: 	leaq	DATAat0x578a0(%rip), %rdx
    0000547e: 	movq	%r14, %rsi
    00005481: 	movq	%r12, %rdi
    00005484: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21636
    00005489: 	callq	clock@PLT # Offset: 21641
    0000548e: 	movl	iterations(%rip), %ecx
    00005494: 	movq	%rax, start_time(%rip)
    0000549b: 	testl	%ecx, %ecx
    0000549d: 	jle	.Ltmp2924 # Offset: 21661
    000054a3: 	movdqa	DATAat0x57be0(%rip), %xmm7
    000054ab: 	movl	$0x0, 0x1c(%rsp)
    000054b3: 	movaps	%xmm7, (%rsp)
    000054b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2927:
    000054c0: 	movq	%rbp, %rax
    000054c3: 	pxor	%xmm0, %xmm0
    000054c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2925:
    000054d0: 	movdqa	(%rsp), %xmm1
    000054d5: 	pand	(%rax), %xmm1
    000054d9: 	addq	$0x10, %rax
    000054dd: 	paddw	%xmm1, %xmm0
    000054e1: 	cmpq	%rax, %rbx
    000054e4: 	jne	.Ltmp2925 # Offset: 21732
    000054e6: 	movdqa	%xmm0, %xmm1
    000054ea: 	cvttsd2si	init_value(%rip), %eax
    000054f2: 	psrldq	$0x8, %xmm1
    000054f7: 	paddw	%xmm1, %xmm0
    000054fb: 	movdqa	%xmm0, %xmm1
    000054ff: 	psrldq	$0x4, %xmm1
    00005504: 	movzbl	%al, %eax
    00005507: 	imulw	$0x1f40, %ax, %ax
    0000550c: 	paddw	%xmm1, %xmm0
    00005510: 	movdqa	%xmm0, %xmm1
    00005514: 	psrldq	$0x2, %xmm1
    00005519: 	paddw	%xmm1, %xmm0
    0000551d: 	pextrw	$0x0, %xmm0, %edx
    00005522: 	cmpw	%dx, %ax
    00005525: 	je	.Ltmp2926 # Offset: 21797
    00005527: 	movl	current_test(%rip), %edx
    0000552d: 	leaq	DATAat0x571d0(%rip), %rsi
    00005534: 	movl	$0x1, %edi
    00005539: 	xorl	%eax, %eax
    0000553b: 	callq	__printf_chk@PLT # Offset: 21819
    00005540: 	movl	iterations(%rip), %ecx
.Ltmp2926:
    00005546: 	addl	$0x1, 0x1c(%rsp)
    0000554b: 	movl	0x1c(%rsp), %eax
    0000554f: 	cmpl	%ecx, %eax
    00005551: 	jl	.Ltmp2927 # Offset: 21841
.Ltmp2924:
    00005557: 	movq	%r12, %rsi
    0000555a: 	movq	%r15, %rdi
    0000555d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 21853
    00005562: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005569: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005570: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005577: 	je	.Ltmp2928 # Offset: 21879
.Ltmp2980:
    0000557d: 	movq	-0x20(%rax), %rdi
    00005581: 	movq	%rdi, (%rsp)
    00005585: 	callq	clock@PLT # Offset: 21893
    0000558a: 	movq	(%rsp), %rdi
    0000558e: 	pxor	%xmm0, %xmm0
    00005592: 	movq	%rax, end_time(%rip)
    00005599: 	subq	start_time(%rip), %rax
    000055a0: 	cvtsi2sd	%rax, %xmm0
    000055a5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000055ad: 	callq	_Z13record_resultdPKc # Offset: 21933
    000055b2: 	movq	0xa0(%rsp), %rdi
    000055ba: 	cmpq	%r13, %rdi
    000055bd: 	je	.Ltmp2929 # Offset: 21949
    000055bf: 	movq	0xb0(%rsp), %rax
    000055c7: 	leaq	0x1(%rax), %rsi
    000055cb: 	callq	_ZdlPvm@PLT # Offset: 21963
.Ltmp2929:
    000055d0: 	leaq	DATAat0x578a9(%rip), %rdx
    000055d7: 	movq	%r14, %rsi
    000055da: 	movq	%r12, %rdi
    000055dd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21981
    000055e2: 	movq	%r12, %rdx
    000055e5: 	movl	$0x1f40, %esi
    000055ea: 	movq	%rbp, %rdi
    000055ed: 	callq	_Z13test_constantIs13and_remainderIsLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 21997
    000055f2: 	movq	0xa0(%rsp), %rdi
    000055fa: 	cmpq	%r13, %rdi
    000055fd: 	je	.Ltmp2930 # Offset: 22013
    000055ff: 	movq	0xb0(%rsp), %rax
    00005607: 	leaq	0x1(%rax), %rsi
    0000560b: 	callq	_ZdlPvm@PLT # Offset: 22027
.Ltmp2930:
    00005610: 	leaq	DATAat0x578bc(%rip), %rdx
    00005617: 	movq	%r14, %rsi
    0000561a: 	movq	%r12, %rdi
    0000561d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22045
    00005622: 	movq	%r12, %rdx
    00005625: 	movl	$0x1f40, %esi
    0000562a: 	movq	%rbp, %rdi
    0000562d: 	callq	_Z13test_constantIs14and_remainder2IsLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 22061
    00005632: 	movq	0xa0(%rsp), %rdi
    0000563a: 	cmpq	%r13, %rdi
    0000563d: 	je	.Ltmp2931 # Offset: 22077
    0000563f: 	movq	0xb0(%rsp), %rax
    00005647: 	leaq	0x1(%rax), %rsi
    0000564b: 	callq	_ZdlPvm@PLT # Offset: 22091
.Ltmp2931:
    00005650: 	leaq	DATAat0x578d0(%rip), %rdx
    00005657: 	movq	%r14, %rsi
    0000565a: 	movq	%r12, %rdi
    0000565d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22109
    00005662: 	callq	clock@PLT # Offset: 22114
    00005667: 	movl	iterations(%rip), %ecx
    0000566d: 	movq	%rax, start_time(%rip)
    00005674: 	testl	%ecx, %ecx
    00005676: 	jle	.Ltmp2932 # Offset: 22134
    0000567c: 	movdqa	DATAat0x57be0(%rip), %xmm7
    00005684: 	movl	$0x0, 0x1c(%rsp)
    0000568c: 	movaps	%xmm7, (%rsp)
.Ltmp2935:
    00005690: 	pxor	%xmm2, %xmm2
    00005694: 	movq	%rbp, %rax
    00005697: 	movdqa	%xmm2, %xmm3
    0000569b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2933:
    000056a0: 	movdqa	%xmm3, %xmm1
    000056a4: 	movdqa	(%rsp), %xmm7
    000056a9: 	movdqa	(%rax), %xmm0
    000056ad: 	addq	$0x10, %rax
    000056b1: 	pcmpgtw	-0x10(%rax), %xmm1
    000056b6: 	pand	%xmm7, %xmm1
    000056ba: 	paddw	%xmm1, %xmm0
    000056be: 	pand	%xmm7, %xmm0
    000056c2: 	psubw	%xmm1, %xmm0
    000056c6: 	paddw	%xmm0, %xmm2
    000056ca: 	cmpq	%rbx, %rax
    000056cd: 	jne	.Ltmp2933 # Offset: 22221
    000056cf: 	cvttsd2si	init_value(%rip), %eax
    000056d7: 	movdqa	%xmm2, %xmm0
    000056db: 	psrldq	$0x8, %xmm0
    000056e0: 	paddw	%xmm0, %xmm2
    000056e4: 	movdqa	%xmm2, %xmm0
    000056e8: 	movl	%eax, %edx
    000056ea: 	psrldq	$0x4, %xmm0
    000056ef: 	sarw	$0xf, %dx
    000056f3: 	paddw	%xmm0, %xmm2
    000056f7: 	shrw	$0x8, %dx
    000056fb: 	movdqa	%xmm2, %xmm0
    000056ff: 	addl	%edx, %eax
    00005701: 	psrldq	$0x2, %xmm0
    00005706: 	movzbl	%al, %eax
    00005709: 	paddw	%xmm0, %xmm2
    0000570d: 	subl	%edx, %eax
    0000570f: 	pextrw	$0x0, %xmm2, %edx
    00005714: 	imulw	$0x1f40, %ax, %ax
    00005719: 	cmpw	%dx, %ax
    0000571c: 	je	.Ltmp2934 # Offset: 22300
    0000571e: 	movl	current_test(%rip), %edx
    00005724: 	leaq	DATAat0x571d0(%rip), %rsi
    0000572b: 	movl	$0x1, %edi
    00005730: 	xorl	%eax, %eax
    00005732: 	callq	__printf_chk@PLT # Offset: 22322
    00005737: 	movl	iterations(%rip), %ecx
.Ltmp2934:
    0000573d: 	addl	$0x1, 0x1c(%rsp)
    00005742: 	movl	0x1c(%rsp), %eax
    00005746: 	cmpl	%ecx, %eax
    00005748: 	jl	.Ltmp2935 # Offset: 22344
.Ltmp2932:
    0000574e: 	movq	%r12, %rsi
    00005751: 	movq	%r15, %rdi
    00005754: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 22356
    00005759: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005760: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005767: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000576e: 	je	.Ltmp2936 # Offset: 22382
.Ltmp2979:
    00005774: 	movq	-0x20(%rax), %rdi
    00005778: 	movq	%rdi, (%rsp)
    0000577c: 	callq	clock@PLT # Offset: 22396
    00005781: 	movq	(%rsp), %rdi
    00005785: 	pxor	%xmm0, %xmm0
    00005789: 	movq	%rax, end_time(%rip)
    00005790: 	subq	start_time(%rip), %rax
    00005797: 	cvtsi2sd	%rax, %xmm0
    0000579c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000057a4: 	callq	_Z13record_resultdPKc # Offset: 22436
    000057a9: 	movq	0xa0(%rsp), %rdi
    000057b1: 	cmpq	%r13, %rdi
    000057b4: 	je	.Ltmp2937 # Offset: 22452
    000057b6: 	movq	0xb0(%rsp), %rax
    000057be: 	leaq	0x1(%rax), %rsi
    000057c2: 	callq	_ZdlPvm@PLT # Offset: 22466
.Ltmp2937:
    000057c7: 	leaq	DATAat0x578e9(%rip), %rdx
    000057ce: 	movq	%r14, %rsi
    000057d1: 	movq	%r12, %rdi
    000057d4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22484
    000057d9: 	movq	%r12, %rcx
    000057dc: 	movl	$0x100, %edx
    000057e1: 	movl	$0x1f40, %esi
    000057e6: 	movq	%rbp, %rdi
    000057e9: 	callq	_Z14test_variable1Is25custom_remainder_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 22505
    000057ee: 	movq	0xa0(%rsp), %rdi
    000057f6: 	cmpq	%r13, %rdi
    000057f9: 	je	.Ltmp2938 # Offset: 22521
    000057fb: 	movq	0xb0(%rsp), %rax
    00005803: 	leaq	0x1(%rax), %rsi
    00005807: 	callq	_ZdlPvm@PLT # Offset: 22535
.Ltmp2938:
    0000580c: 	leaq	DATAat0x57904(%rip), %rdx
    00005813: 	movq	%r14, %rsi
    00005816: 	movq	%r12, %rdi
    00005819: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22553
    0000581e: 	callq	clock@PLT # Offset: 22558
    00005823: 	movl	iterations(%rip), %ecx
    00005829: 	movq	%rax, start_time(%rip)
    00005830: 	testl	%ecx, %ecx
    00005832: 	jle	.Ltmp2939 # Offset: 22578
    00005838: 	movdqa	DATAat0x57be0(%rip), %xmm7
    00005840: 	movl	$0x0, 0x1c(%rsp)
    00005848: 	movaps	%xmm7, (%rsp)
    0000584c: 	nopl	(%rax) # Size: 4
.Ltmp2942:
    00005850: 	pxor	%xmm2, %xmm2
    00005854: 	movq	%rbp, %rax
    00005857: 	movdqa	%xmm2, %xmm3
    0000585b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2940:
    00005860: 	movdqa	%xmm3, %xmm1
    00005864: 	movdqa	(%rsp), %xmm5
    00005869: 	movdqa	(%rax), %xmm0
    0000586d: 	addq	$0x10, %rax
    00005871: 	pcmpgtw	-0x10(%rax), %xmm1
    00005876: 	pand	%xmm5, %xmm1
    0000587a: 	paddw	%xmm1, %xmm0
    0000587e: 	pand	%xmm5, %xmm0
    00005882: 	psubw	%xmm1, %xmm0
    00005886: 	paddw	%xmm0, %xmm2
    0000588a: 	cmpq	%rax, %rbx
    0000588d: 	jne	.Ltmp2940 # Offset: 22669
    0000588f: 	cvttsd2si	init_value(%rip), %eax
    00005897: 	movdqa	%xmm2, %xmm0
    0000589b: 	psrldq	$0x8, %xmm0
    000058a0: 	paddw	%xmm0, %xmm2
    000058a4: 	movdqa	%xmm2, %xmm0
    000058a8: 	movl	%eax, %edx
    000058aa: 	psrldq	$0x4, %xmm0
    000058af: 	sarw	$0xf, %dx
    000058b3: 	paddw	%xmm0, %xmm2
    000058b7: 	shrw	$0x8, %dx
    000058bb: 	movdqa	%xmm2, %xmm0
    000058bf: 	addl	%edx, %eax
    000058c1: 	psrldq	$0x2, %xmm0
    000058c6: 	movzbl	%al, %eax
    000058c9: 	paddw	%xmm0, %xmm2
    000058cd: 	subl	%edx, %eax
    000058cf: 	pextrw	$0x0, %xmm2, %edx
    000058d4: 	imulw	$0x1f40, %ax, %ax
    000058d9: 	cmpw	%dx, %ax
    000058dc: 	je	.Ltmp2941 # Offset: 22748
    000058de: 	movl	current_test(%rip), %edx
    000058e4: 	leaq	DATAat0x571d0(%rip), %rsi
    000058eb: 	movl	$0x1, %edi
    000058f0: 	xorl	%eax, %eax
    000058f2: 	callq	__printf_chk@PLT # Offset: 22770
    000058f7: 	movl	iterations(%rip), %ecx
.Ltmp2941:
    000058fd: 	addl	$0x1, 0x1c(%rsp)
    00005902: 	movl	0x1c(%rsp), %eax
    00005906: 	cmpl	%ecx, %eax
    00005908: 	jl	.Ltmp2942 # Offset: 22792
.Ltmp2939:
    0000590e: 	movq	%r12, %rsi
    00005911: 	movq	%r15, %rdi
    00005914: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 22804
    00005919: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005920: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005927: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000592e: 	je	.Ltmp2943 # Offset: 22830
.Ltmp2978:
    00005934: 	movq	-0x20(%rax), %rdi
    00005938: 	movq	%rdi, (%rsp)
    0000593c: 	callq	clock@PLT # Offset: 22844
    00005941: 	movq	(%rsp), %rdi
    00005945: 	pxor	%xmm0, %xmm0
    00005949: 	movq	%rax, end_time(%rip)
    00005950: 	subq	start_time(%rip), %rax
    00005957: 	cvtsi2sd	%rax, %xmm0
    0000595c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00005964: 	callq	_Z13record_resultdPKc # Offset: 22884
    00005969: 	movq	0xa0(%rsp), %rdi
    00005971: 	cmpq	%r13, %rdi
    00005974: 	je	.Ltmp2944 # Offset: 22900
    00005976: 	movq	0xb0(%rsp), %rax
    0000597e: 	leaq	0x1(%rax), %rsi
    00005982: 	callq	_ZdlPvm@PLT # Offset: 22914
.Ltmp2944:
    00005987: 	leaq	DATAat0x5791f(%rip), %rdx
    0000598e: 	movq	%r14, %rsi
    00005991: 	movq	%r12, %rdi
    00005994: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22932
    00005999: 	callq	clock@PLT # Offset: 22937
    0000599e: 	movl	iterations(%rip), %ecx
    000059a4: 	movq	%rax, start_time(%rip)
    000059ab: 	testl	%ecx, %ecx
    000059ad: 	jle	.Ltmp2945 # Offset: 22957
    000059b3: 	movdqa	DATAat0x57eb0(%rip), %xmm7
    000059bb: 	movl	$0x0, 0x1c(%rsp)
    000059c3: 	movaps	%xmm7, (%rsp)
    000059c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2948:
    000059d0: 	movq	%rbp, %rax
    000059d3: 	pxor	%xmm0, %xmm0
    000059d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2946:
    000059e0: 	movdqa	(%rsp), %xmm1
    000059e5: 	pand	(%rax), %xmm1
    000059e9: 	addq	$0x10, %rax
    000059ed: 	paddw	%xmm1, %xmm0
    000059f1: 	cmpq	%rbx, %rax
    000059f4: 	jne	.Ltmp2946 # Offset: 23028
    000059f6: 	movdqa	%xmm0, %xmm1
    000059fa: 	cvttsd2si	init_value(%rip), %eax
    00005a02: 	psrldq	$0x8, %xmm1
    00005a07: 	paddw	%xmm1, %xmm0
    00005a0b: 	movdqa	%xmm0, %xmm1
    00005a0f: 	psrldq	$0x4, %xmm1
    00005a14: 	andw	$0x3ff, %ax
    00005a18: 	imulw	$0x1f40, %ax, %ax
    00005a1d: 	paddw	%xmm1, %xmm0
    00005a21: 	movdqa	%xmm0, %xmm1
    00005a25: 	psrldq	$0x2, %xmm1
    00005a2a: 	paddw	%xmm1, %xmm0
    00005a2e: 	pextrw	$0x0, %xmm0, %edx
    00005a33: 	cmpw	%dx, %ax
    00005a36: 	je	.Ltmp2947 # Offset: 23094
    00005a38: 	movl	current_test(%rip), %edx
    00005a3e: 	leaq	DATAat0x571d0(%rip), %rsi
    00005a45: 	movl	$0x1, %edi
    00005a4a: 	xorl	%eax, %eax
    00005a4c: 	callq	__printf_chk@PLT # Offset: 23116
    00005a51: 	movl	iterations(%rip), %ecx
.Ltmp2947:
    00005a57: 	addl	$0x1, 0x1c(%rsp)
    00005a5c: 	movl	0x1c(%rsp), %eax
    00005a60: 	cmpl	%ecx, %eax
    00005a62: 	jl	.Ltmp2948 # Offset: 23138
.Ltmp2945:
    00005a68: 	movq	%r12, %rsi
    00005a6b: 	movq	%r15, %rdi
    00005a6e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 23150
    00005a73: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005a7a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005a81: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005a88: 	je	.Ltmp2949 # Offset: 23176
.Ltmp2977:
    00005a8e: 	movq	-0x20(%rax), %rdi
    00005a92: 	movq	%rdi, (%rsp)
    00005a96: 	callq	clock@PLT # Offset: 23190
    00005a9b: 	movq	(%rsp), %rdi
    00005a9f: 	pxor	%xmm0, %xmm0
    00005aa3: 	movq	%rax, end_time(%rip)
    00005aaa: 	subq	start_time(%rip), %rax
    00005ab1: 	cvtsi2sd	%rax, %xmm0
    00005ab6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00005abe: 	callq	_Z13record_resultdPKc # Offset: 23230
    00005ac3: 	movq	0xa0(%rsp), %rdi
    00005acb: 	cmpq	%r13, %rdi
    00005ace: 	je	.Ltmp2950 # Offset: 23246
    00005ad0: 	movq	0xb0(%rsp), %rax
    00005ad8: 	leaq	0x1(%rax), %rsi
    00005adc: 	callq	_ZdlPvm@PLT # Offset: 23260
.Ltmp2950:
    00005ae1: 	leaq	DATAat0x57929(%rip), %rdx
    00005ae8: 	movq	%r14, %rsi
    00005aeb: 	movq	%r12, %rdi
    00005aee: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 23278
    00005af3: 	movq	%r12, %rdx
    00005af6: 	movl	$0x1f40, %esi
    00005afb: 	movq	%rbp, %rdi
    00005afe: 	callq	_Z13test_constantIs13and_remainderIsLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 23294
    00005b03: 	movq	0xa0(%rsp), %rdi
    00005b0b: 	cmpq	%r13, %rdi
    00005b0e: 	je	.Ltmp2951 # Offset: 23310
    00005b10: 	movq	0xb0(%rsp), %rax
    00005b18: 	leaq	0x1(%rax), %rsi
    00005b1c: 	callq	_ZdlPvm@PLT # Offset: 23324
.Ltmp2951:
    00005b21: 	leaq	DATAat0x5793d(%rip), %rdx
    00005b28: 	movq	%r14, %rsi
    00005b2b: 	movq	%r12, %rdi
    00005b2e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 23342
    00005b33: 	movq	%r12, %rdx
    00005b36: 	movl	$0x1f40, %esi
    00005b3b: 	movq	%rbp, %rdi
    00005b3e: 	callq	_Z13test_constantIs14and_remainder2IsLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 23358
    00005b43: 	movq	0xa0(%rsp), %rdi
    00005b4b: 	cmpq	%r13, %rdi
    00005b4e: 	je	.Ltmp2952 # Offset: 23374
    00005b50: 	movq	0xb0(%rsp), %rax
    00005b58: 	leaq	0x1(%rax), %rsi
    00005b5c: 	callq	_ZdlPvm@PLT # Offset: 23388
.Ltmp2952:
    00005b61: 	leaq	DATAat0x57952(%rip), %rdx
    00005b68: 	movq	%r14, %rsi
    00005b6b: 	movq	%r12, %rdi
    00005b6e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 23406
    00005b73: 	callq	clock@PLT # Offset: 23411
    00005b78: 	movl	iterations(%rip), %ecx
    00005b7e: 	movq	%rax, start_time(%rip)
    00005b85: 	testl	%ecx, %ecx
    00005b87: 	jle	.Ltmp2953 # Offset: 23431
    00005b8d: 	movdqa	DATAat0x57eb0(%rip), %xmm7
    00005b95: 	movl	$0x0, 0x1c(%rsp)
    00005b9d: 	movaps	%xmm7, (%rsp)
    00005ba1: 	nopl	(%rax) # Size: 7
.Ltmp2956:
    00005ba8: 	pxor	%xmm2, %xmm2
    00005bac: 	movq	%rbp, %rax
    00005baf: 	movdqa	%xmm2, %xmm3
    00005bb3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2954:
    00005bb8: 	movdqa	%xmm3, %xmm1
    00005bbc: 	movdqa	(%rsp), %xmm4
    00005bc1: 	movdqa	(%rax), %xmm0
    00005bc5: 	addq	$0x10, %rax
    00005bc9: 	pcmpgtw	-0x10(%rax), %xmm1
    00005bce: 	pand	%xmm4, %xmm1
    00005bd2: 	paddw	%xmm1, %xmm0
    00005bd6: 	pand	%xmm4, %xmm0
    00005bda: 	psubw	%xmm1, %xmm0
    00005bde: 	paddw	%xmm0, %xmm2
    00005be2: 	cmpq	%rbx, %rax
    00005be5: 	jne	.Ltmp2954 # Offset: 23525
    00005be7: 	cvttsd2si	init_value(%rip), %eax
    00005bef: 	movdqa	%xmm2, %xmm0
    00005bf3: 	psrldq	$0x8, %xmm0
    00005bf8: 	paddw	%xmm0, %xmm2
    00005bfc: 	movdqa	%xmm2, %xmm0
    00005c00: 	movl	%eax, %edx
    00005c02: 	psrldq	$0x4, %xmm0
    00005c07: 	sarw	$0xf, %dx
    00005c0b: 	paddw	%xmm0, %xmm2
    00005c0f: 	shrw	$0x6, %dx
    00005c13: 	movdqa	%xmm2, %xmm0
    00005c17: 	addl	%edx, %eax
    00005c19: 	psrldq	$0x2, %xmm0
    00005c1e: 	andw	$0x3ff, %ax
    00005c22: 	paddw	%xmm0, %xmm2
    00005c26: 	subl	%edx, %eax
    00005c28: 	pextrw	$0x0, %xmm2, %edx
    00005c2d: 	imulw	$0x1f40, %ax, %ax
    00005c32: 	cmpw	%dx, %ax
    00005c35: 	je	.Ltmp2955 # Offset: 23605
    00005c37: 	movl	current_test(%rip), %edx
    00005c3d: 	leaq	DATAat0x571d0(%rip), %rsi
    00005c44: 	movl	$0x1, %edi
    00005c49: 	xorl	%eax, %eax
    00005c4b: 	callq	__printf_chk@PLT # Offset: 23627
    00005c50: 	movl	iterations(%rip), %ecx
.Ltmp2955:
    00005c56: 	addl	$0x1, 0x1c(%rsp)
    00005c5b: 	movl	0x1c(%rsp), %eax
    00005c5f: 	cmpl	%ecx, %eax
    00005c61: 	jl	.Ltmp2956 # Offset: 23649
.Ltmp2953:
    00005c67: 	movq	%r12, %rsi
    00005c6a: 	movq	%r15, %rdi
    00005c6d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 23661
    00005c72: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005c79: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005c80: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005c87: 	je	.Ltmp2957 # Offset: 23687
.Ltmp2976:
    00005c8d: 	movq	-0x20(%rax), %rdi
    00005c91: 	movq	%rdi, (%rsp)
    00005c95: 	callq	clock@PLT # Offset: 23701
    00005c9a: 	movq	(%rsp), %rdi
    00005c9e: 	pxor	%xmm0, %xmm0
    00005ca2: 	movq	%rax, end_time(%rip)
    00005ca9: 	subq	start_time(%rip), %rax
    00005cb0: 	cvtsi2sd	%rax, %xmm0
    00005cb5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00005cbd: 	callq	_Z13record_resultdPKc # Offset: 23741
    00005cc2: 	movq	0xa0(%rsp), %rdi
    00005cca: 	cmpq	%r13, %rdi
    00005ccd: 	je	.Ltmp2958 # Offset: 23757
    00005ccf: 	movq	0xb0(%rsp), %rax
    00005cd7: 	leaq	0x1(%rax), %rsi
    00005cdb: 	callq	_ZdlPvm@PLT # Offset: 23771
.Ltmp2958:
    00005ce0: 	leaq	DATAat0x5796c(%rip), %rdx
    00005ce7: 	movq	%r14, %rsi
    00005cea: 	movq	%r12, %rdi
    00005ced: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 23789
    00005cf2: 	movq	%r12, %rcx
    00005cf5: 	movl	$0x400, %edx
    00005cfa: 	movl	$0x1f40, %esi
    00005cff: 	movq	%rbp, %rdi
    00005d02: 	callq	_Z14test_variable1Is25custom_remainder_variableIsEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 23810
    00005d07: 	movq	0xa0(%rsp), %rdi
    00005d0f: 	cmpq	%r13, %rdi
    00005d12: 	je	.Ltmp2959 # Offset: 23826
    00005d14: 	movq	0xb0(%rsp), %rax
    00005d1c: 	leaq	0x1(%rax), %rsi
    00005d20: 	callq	_ZdlPvm@PLT # Offset: 23840
.Ltmp2959:
    00005d25: 	leaq	DATAat0x57988(%rip), %rdx
    00005d2c: 	movq	%r14, %rsi
    00005d2f: 	movq	%r12, %rdi
    00005d32: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 23858
    00005d37: 	callq	clock@PLT # Offset: 23863
    00005d3c: 	movl	iterations(%rip), %ecx
    00005d42: 	movq	%rax, start_time(%rip)
    00005d49: 	testl	%ecx, %ecx
    00005d4b: 	jle	.Ltmp2960 # Offset: 23883
    00005d51: 	movdqa	DATAat0x57eb0(%rip), %xmm7
    00005d59: 	movl	$0x0, 0x1c(%rsp)
    00005d61: 	movaps	%xmm7, (%rsp)
    00005d65: 	nopl	(%rax) # Size: 3
.Ltmp2963:
    00005d68: 	pxor	%xmm2, %xmm2
    00005d6c: 	movq	%rbp, %rax
    00005d6f: 	movdqa	%xmm2, %xmm3
    00005d73: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2961:
    00005d78: 	movdqa	%xmm3, %xmm1
    00005d7c: 	movdqa	(%rsp), %xmm6
    00005d81: 	movdqa	(%rax), %xmm0
    00005d85: 	addq	$0x10, %rax
    00005d89: 	pcmpgtw	-0x10(%rax), %xmm1
    00005d8e: 	pand	%xmm6, %xmm1
    00005d92: 	paddw	%xmm1, %xmm0
    00005d96: 	pand	%xmm6, %xmm0
    00005d9a: 	psubw	%xmm1, %xmm0
    00005d9e: 	paddw	%xmm0, %xmm2
    00005da2: 	cmpq	%rbx, %rax
    00005da5: 	jne	.Ltmp2961 # Offset: 23973
    00005da7: 	cvttsd2si	init_value(%rip), %eax
    00005daf: 	movdqa	%xmm2, %xmm0
    00005db3: 	psrldq	$0x8, %xmm0
    00005db8: 	paddw	%xmm0, %xmm2
    00005dbc: 	movdqa	%xmm2, %xmm0
    00005dc0: 	movl	%eax, %edx
    00005dc2: 	psrldq	$0x4, %xmm0
    00005dc7: 	sarw	$0xf, %dx
    00005dcb: 	paddw	%xmm0, %xmm2
    00005dcf: 	shrw	$0x6, %dx
    00005dd3: 	movdqa	%xmm2, %xmm0
    00005dd7: 	addl	%edx, %eax
    00005dd9: 	psrldq	$0x2, %xmm0
    00005dde: 	andw	$0x3ff, %ax
    00005de2: 	paddw	%xmm0, %xmm2
    00005de6: 	subl	%edx, %eax
    00005de8: 	pextrw	$0x0, %xmm2, %edx
    00005ded: 	imulw	$0x1f40, %ax, %ax
    00005df2: 	cmpw	%dx, %ax
    00005df5: 	je	.Ltmp2962 # Offset: 24053
    00005df7: 	movl	current_test(%rip), %edx
    00005dfd: 	leaq	DATAat0x571d0(%rip), %rsi
    00005e04: 	movl	$0x1, %edi
    00005e09: 	xorl	%eax, %eax
    00005e0b: 	callq	__printf_chk@PLT # Offset: 24075
    00005e10: 	movl	iterations(%rip), %ecx
.Ltmp2962:
    00005e16: 	addl	$0x1, 0x1c(%rsp)
    00005e1b: 	movl	0x1c(%rsp), %eax
    00005e1f: 	cmpl	%ecx, %eax
    00005e21: 	jl	.Ltmp2963 # Offset: 24097
.Ltmp2960:
    00005e27: 	movq	%r12, %rsi
    00005e2a: 	movq	%r15, %rdi
    00005e2d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 24109
    00005e32: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005e39: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005e40: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005e47: 	je	.Ltmp2964 # Offset: 24135
.Ltmp2975:
    00005e4d: 	movq	-0x20(%rax), %rbp
    00005e51: 	callq	clock@PLT # Offset: 24145
    00005e56: 	pxor	%xmm0, %xmm0
    00005e5a: 	movq	%rax, end_time(%rip)
    00005e61: 	movq	%rbp, %rdi
    00005e64: 	subq	start_time(%rip), %rax
    00005e6b: 	cvtsi2sd	%rax, %xmm0
    00005e70: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00005e78: 	callq	_Z13record_resultdPKc # Offset: 24184
    00005e7d: 	movq	0xa0(%rsp), %rdi
    00005e85: 	cmpq	%r13, %rdi
    00005e88: 	je	.Ltmp2965 # Offset: 24200
    00005e8a: 	movq	0xb0(%rsp), %rax
    00005e92: 	leaq	0x1(%rax), %rsi
    00005e96: 	callq	_ZdlPvm@PLT # Offset: 24214
.Ltmp2965:
    00005e9b: 	leaq	DATAat0x579a4(%rip), %rdx
    00005ea2: 	movq	%r14, %rsi
    00005ea5: 	movq	%r12, %rdi
    00005ea8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 24232
    00005ead: 	movl	iterations(%rip), %edx
    00005eb3: 	xorl	%r8d, %r8d
    00005eb6: 	xorl	%ecx, %ecx
    00005eb8: 	movl	$0x1f40, %esi
    00005ebd: 	movq	0xa0(%rsp), %rdi
    00005ec5: 	callq	_Z9summarizePKciiii # Offset: 24261
    00005eca: 	movq	0xa0(%rsp), %rdi
    00005ed2: 	cmpq	%r13, %rdi
    00005ed5: 	je	.Ltmp2966 # Offset: 24277
    00005ed7: 	movq	0xb0(%rsp), %rax
    00005edf: 	leaq	0x1(%rax), %rsi
    00005ee3: 	callq	_ZdlPvm@PLT # Offset: 24291
.Ltmp2966:
    00005ee8: 	movq	0x80(%rsp), %rdi
    00005ef0: 	leaq	0x90(%rsp), %rax
    00005ef8: 	cmpq	%rax, %rdi
    00005efb: 	je	.Ltmp2967 # Offset: 24315
    00005efd: 	movq	0x90(%rsp), %rax
    00005f05: 	leaq	0x1(%rax), %rsi
    00005f09: 	callq	_ZdlPvm@PLT # Offset: 24329
.Ltmp2967:
    00005f0e: 	movq	0x60(%rsp), %rdi
    00005f13: 	leaq	0x70(%rsp), %rax
    00005f18: 	cmpq	%rax, %rdi
    00005f1b: 	je	.Ltmp2968 # Offset: 24347
    00005f1d: 	movq	0x70(%rsp), %rax
    00005f22: 	leaq	0x1(%rax), %rsi
    00005f26: 	callq	_ZdlPvm@PLT # Offset: 24358
.Ltmp2968:
    00005f2b: 	movq	0x40(%rsp), %rdi
    00005f30: 	leaq	0x50(%rsp), %rax
    00005f35: 	cmpq	%rax, %rdi
    00005f38: 	je	.Ltmp2969 # Offset: 24376
    00005f3a: 	movq	0x50(%rsp), %rax
    00005f3f: 	leaq	0x1(%rax), %rsi
    00005f43: 	callq	_ZdlPvm@PLT # Offset: 24387
.Ltmp2969:
    00005f48: 	movq	0x3f48(%rsp), %rax
    00005f50: 	subq	%fs:0x28, %rax
    00005f59: 	jne	.Ltmp2970 # Offset: 24409
    00005f5f: 	addq	$0x3f58, %rsp
    00005f66: 	popq	%rbx
    00005f67: 	popq	%rbp
    00005f68: 	popq	%r12
    00005f6a: 	popq	%r13
    00005f6c: 	popq	%r14
    00005f6e: 	popq	%r15
    00005f70: 	retq # Offset: 24432
    00005f71: 	nopl	(%rax) # Size: 7
.Ltmp2778:
    00005f78: 	andl	$0x1, %eax
    00005f7b: 	addq	$0x2, %rdx
    00005f7f: 	addl	%eax, %ecx
    00005f81: 	cmpq	%rdx, %rbx
    00005f84: 	jne	.Ltmp2779 # Offset: 24452
    00005f8a: 	cvttsd2si	init_value(%rip), %eax
    00005f92: 	testw	%ax, %ax
    00005f95: 	js	.Ltmp2971 # Offset: 24469
.Ltmp2780:
    00005f9b: 	andl	$0x1, %eax
    00005f9e: 	imulw	$0x1f40, %ax, %dx
    00005fa3: 	jmp	.Ltmp2972 # Offset: 24483
    00005fa8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2769:
    00005fb0: 	addq	$0x2, %rax
    00005fb4: 	subl	$0x1, %esi
    00005fb7: 	cmpq	%rax, %rbx
    00005fba: 	jne	.Ltmp2770 # Offset: 24506
    00005fc0: 	jmp	.Ltmp2973 # Offset: 24512
.Ltmp2576:
    00005fc5: 	movq	-0x8(%rdx), %rax
    00005fc9: 	addq	$0x200, %rax
    00005fcf: 	jmp	.Ltmp2974 # Offset: 24527
.Ltmp2964:
    00005fd4: 	movq	-0x8(%rdx), %rax
    00005fd8: 	addq	$0x200, %rax
    00005fde: 	jmp	.Ltmp2975 # Offset: 24542
.Ltmp2957:
    00005fe3: 	movq	-0x8(%rdx), %rax
    00005fe7: 	addq	$0x200, %rax
    00005fed: 	jmp	.Ltmp2976 # Offset: 24557
.Ltmp2949:
    00005ff2: 	movq	-0x8(%rdx), %rax
    00005ff6: 	addq	$0x200, %rax
    00005ffc: 	jmp	.Ltmp2977 # Offset: 24572
.Ltmp2943:
    00006001: 	movq	-0x8(%rdx), %rax
    00006005: 	addq	$0x200, %rax
    0000600b: 	jmp	.Ltmp2978 # Offset: 24587
.Ltmp2936:
    00006010: 	movq	-0x8(%rdx), %rax
    00006014: 	addq	$0x200, %rax
    0000601a: 	jmp	.Ltmp2979 # Offset: 24602
.Ltmp2928:
    0000601f: 	movq	-0x8(%rdx), %rax
    00006023: 	addq	$0x200, %rax
    00006029: 	jmp	.Ltmp2980 # Offset: 24617
.Ltmp2922:
    0000602e: 	movq	-0x8(%rdx), %rax
    00006032: 	addq	$0x200, %rax
    00006038: 	jmp	.Ltmp2981 # Offset: 24632
.Ltmp2915:
    0000603d: 	movq	-0x8(%rdx), %rax
    00006041: 	addq	$0x200, %rax
    00006047: 	jmp	.Ltmp2982 # Offset: 24647
.Ltmp2907:
    0000604c: 	movq	-0x8(%rdx), %rax
    00006050: 	addq	$0x200, %rax
    00006056: 	jmp	.Ltmp2983 # Offset: 24662
.Ltmp2901:
    0000605b: 	movq	-0x8(%rdx), %rax
    0000605f: 	addq	$0x200, %rax
    00006065: 	jmp	.Ltmp2984 # Offset: 24677
.Ltmp2894:
    0000606a: 	movq	-0x8(%rdx), %rax
    0000606e: 	addq	$0x200, %rax
    00006074: 	jmp	.Ltmp2985 # Offset: 24692
.Ltmp2886:
    00006079: 	movq	-0x8(%rdx), %rax
    0000607d: 	addq	$0x200, %rax
    00006083: 	jmp	.Ltmp2986 # Offset: 24707
.Ltmp2880:
    00006088: 	movq	-0x8(%rdx), %rax
    0000608c: 	addq	$0x200, %rax
    00006092: 	jmp	.Ltmp2987 # Offset: 24722
.Ltmp2873:
    00006097: 	movq	-0x8(%rdx), %rax
    0000609b: 	addq	$0x200, %rax
    000060a1: 	jmp	.Ltmp2988 # Offset: 24737
.Ltmp2865:
    000060a6: 	movq	-0x8(%rdx), %rax
    000060aa: 	addq	$0x200, %rax
    000060b0: 	jmp	.Ltmp2989 # Offset: 24752
.Ltmp2859:
    000060b5: 	movq	-0x8(%rdx), %rax
    000060b9: 	addq	$0x200, %rax
    000060bf: 	jmp	.Ltmp2990 # Offset: 24767
.Ltmp2852:
    000060c4: 	movq	-0x8(%rdx), %rax
    000060c8: 	addq	$0x200, %rax
    000060ce: 	jmp	.Ltmp2991 # Offset: 24782
.Ltmp2844:
    000060d3: 	movq	-0x8(%rdx), %rax
    000060d7: 	addq	$0x200, %rax
    000060dd: 	jmp	.Ltmp2992 # Offset: 24797
.Ltmp2838:
    000060e2: 	movq	-0x8(%rdx), %rax
    000060e6: 	addq	$0x200, %rax
    000060ec: 	jmp	.Ltmp2993 # Offset: 24812
.Ltmp2831:
    000060f1: 	movq	-0x8(%rdx), %rax
    000060f5: 	addq	$0x200, %rax
    000060fb: 	jmp	.Ltmp2994 # Offset: 24827
.Ltmp2823:
    00006100: 	movq	-0x8(%rdx), %rax
    00006104: 	addq	$0x200, %rax
    0000610a: 	jmp	.Ltmp2995 # Offset: 24842
.Ltmp2817:
    0000610f: 	movq	-0x8(%rdx), %rax
    00006113: 	addq	$0x200, %rax
    00006119: 	jmp	.Ltmp2996 # Offset: 24857
.Ltmp2810:
    0000611e: 	movq	-0x8(%rdx), %rax
    00006122: 	addq	$0x200, %rax
    00006128: 	jmp	.Ltmp2997 # Offset: 24872
.Ltmp2802:
    0000612d: 	movq	-0x8(%rdx), %rax
    00006131: 	addq	$0x200, %rax
    00006137: 	jmp	.Ltmp2998 # Offset: 24887
.Ltmp2796:
    0000613c: 	movq	-0x8(%rdx), %rax
    00006140: 	addq	$0x200, %rax
    00006146: 	jmp	.Ltmp2999 # Offset: 24902
.Ltmp2789:
    0000614b: 	movq	-0x8(%rdx), %rax
    0000614f: 	addq	$0x200, %rax
    00006155: 	jmp	.Ltmp3000 # Offset: 24917
.Ltmp2783:
    0000615a: 	movq	-0x8(%rdx), %rax
    0000615e: 	addq	$0x200, %rax
    00006164: 	jmp	.Ltmp3001 # Offset: 24932
.Ltmp2775:
    00006169: 	movq	-0x8(%rdx), %rax
    0000616d: 	addq	$0x200, %rax
    00006173: 	jmp	.Ltmp3002 # Offset: 24947
.Ltmp2765:
    00006178: 	movq	-0x8(%rdx), %rax
    0000617c: 	addq	$0x200, %rax
    00006182: 	jmp	.Ltmp3003 # Offset: 24962
.Ltmp2759:
    00006187: 	movq	-0x8(%rdx), %rax
    0000618b: 	addq	$0x200, %rax
    00006191: 	jmp	.Ltmp3004 # Offset: 24977
.Ltmp2751:
    00006196: 	movq	-0x8(%rdx), %rax
    0000619a: 	addq	$0x200, %rax
    000061a0: 	jmp	.Ltmp3005 # Offset: 24992
.Ltmp2745:
    000061a5: 	movq	-0x8(%rdx), %rax
    000061a9: 	addq	$0x200, %rax
    000061af: 	jmp	.Ltmp3006 # Offset: 25007
.Ltmp2737:
    000061b4: 	movq	-0x8(%rdx), %rax
    000061b8: 	addq	$0x200, %rax
    000061be: 	jmp	.Ltmp3007 # Offset: 25022
.Ltmp2731:
    000061c3: 	movq	-0x8(%rdx), %rax
    000061c7: 	addq	$0x200, %rax
    000061cd: 	jmp	.Ltmp3008 # Offset: 25037
.Ltmp2724:
    000061d2: 	movq	-0x8(%rdx), %rax
    000061d6: 	addq	$0x200, %rax
    000061dc: 	jmp	.Ltmp3009 # Offset: 25052
.Ltmp2718:
    000061e1: 	movq	-0x8(%rdx), %rax
    000061e5: 	addq	$0x200, %rax
    000061eb: 	jmp	.Ltmp3010 # Offset: 25067
.Ltmp2711:
    000061f0: 	movq	-0x8(%rdx), %rax
    000061f4: 	addq	$0x200, %rax
    000061fa: 	jmp	.Ltmp3011 # Offset: 25082
.Ltmp2705:
    000061ff: 	movq	-0x8(%rdx), %rax
    00006203: 	addq	$0x200, %rax
    00006209: 	jmp	.Ltmp3012 # Offset: 25097
.Ltmp2698:
    0000620e: 	movq	-0x8(%rdx), %rax
    00006212: 	addq	$0x200, %rax
    00006218: 	jmp	.Ltmp3013 # Offset: 25112
.Ltmp2691:
    0000621d: 	movq	-0x8(%rdx), %rax
    00006221: 	addq	$0x200, %rax
    00006227: 	jmp	.Ltmp3014 # Offset: 25127
.Ltmp2685:
    0000622c: 	movq	-0x8(%rdx), %rax
    00006230: 	addq	$0x200, %rax
    00006236: 	jmp	.Ltmp3015 # Offset: 25142
.Ltmp2679:
    0000623b: 	movq	-0x8(%rdx), %rax
    0000623f: 	addq	$0x200, %rax
    00006245: 	jmp	.Ltmp3016 # Offset: 25157
.Ltmp2672:
    0000624a: 	movq	-0x8(%rdx), %rax
    0000624e: 	addq	$0x200, %rax
    00006254: 	jmp	.Ltmp3017 # Offset: 25172
.Ltmp2666:
    00006259: 	movq	-0x8(%rdx), %rax
    0000625d: 	addq	$0x200, %rax
    00006263: 	jmp	.Ltmp3018 # Offset: 25187
.Ltmp2660:
    00006268: 	movq	-0x8(%rdx), %rax
    0000626c: 	addq	$0x200, %rax
    00006272: 	jmp	.Ltmp3019 # Offset: 25202
.Ltmp2653:
    00006277: 	movq	-0x8(%rdx), %rax
    0000627b: 	addq	$0x200, %rax
    00006281: 	jmp	.Ltmp3020 # Offset: 25217
.Ltmp2647:
    00006286: 	movq	-0x8(%rdx), %rax
    0000628a: 	addq	$0x200, %rax
    00006290: 	jmp	.Ltmp3021 # Offset: 25232
.Ltmp2640:
    00006295: 	movq	-0x8(%rdx), %rax
    00006299: 	addq	$0x200, %rax
    0000629f: 	jmp	.Ltmp3022 # Offset: 25247
.Ltmp2634:
    000062a4: 	movq	-0x8(%rdx), %rax
    000062a8: 	addq	$0x200, %rax
    000062ae: 	jmp	.Ltmp3023 # Offset: 25262
.Ltmp2627:
    000062b3: 	movq	-0x8(%rdx), %rax
    000062b7: 	addq	$0x200, %rax
    000062bd: 	jmp	.Ltmp3024 # Offset: 25277
.Ltmp2620:
    000062c2: 	movq	-0x8(%rdx), %rax
    000062c6: 	addq	$0x200, %rax
    000062cc: 	jmp	.Ltmp3025 # Offset: 25292
.Ltmp2614:
    000062d1: 	movq	-0x8(%rdx), %rax
    000062d5: 	addq	$0x200, %rax
    000062db: 	jmp	.Ltmp3026 # Offset: 25307
.Ltmp2607:
    000062e0: 	movq	-0x8(%rdx), %rax
    000062e4: 	addq	$0x200, %rax
    000062ea: 	jmp	.Ltmp3027 # Offset: 25322
.Ltmp2601:
    000062ef: 	movq	-0x8(%rdx), %rax
    000062f3: 	addq	$0x200, %rax
    000062f9: 	jmp	.Ltmp3028 # Offset: 25337
.Ltmp2595:
    000062fe: 	movq	-0x8(%rdx), %rax
    00006302: 	addq	$0x200, %rax
    00006308: 	jmp	.Ltmp3029 # Offset: 25352
.Ltmp2588:
    0000630d: 	movq	-0x8(%rdx), %rax
    00006311: 	addq	$0x200, %rax
    00006317: 	jmp	.Ltmp3030 # Offset: 25367
.Ltmp2582:
    0000631c: 	movq	-0x8(%rdx), %rax
    00006320: 	addq	$0x200, %rax
    00006326: 	jmp	.Ltmp3031 # Offset: 25382
.Ltmp2772:
    0000632b: 	movl	$0xffffe0c0, %eax
    00006330: 	jmp	.Ltmp3032 # Offset: 25392
.Ltmp2970:
    00006335: 	callq	__stack_chk_fail@PLT # Offset: 25397
    0000633a: 	endbr64
.Ltmp3034:
    0000633e: 	movq	%rax, %rbx
    00006341: 	jmp	.Ltmp3033 # Offset: 25409
    00006346: 	endbr64
    0000634a: 	jmp	.Ltmp3034 # Offset: 25418
    0000634c: 	endbr64
    00006350: 	jmp	.Ltmp3034 # Offset: 25424
    00006352: 	endbr64
    00006356: 	jmp	.Ltmp3034 # Offset: 25430
    00006358: 	endbr64
    0000635c: 	jmp	.Ltmp3034 # Offset: 25436
    0000635e: 	endbr64
    00006362: 	jmp	.Ltmp3034 # Offset: 25442
    00006364: 	endbr64
    00006368: 	movq	%rax, %rbx
    0000636b: 	jmp	.Ltmp3035 # Offset: 25451
    0000636d: 	endbr64
    00006371: 	movq	%rax, %rbx
    00006374: 	jmp	.Ltmp3036 # Offset: 25460
.Ltmp3035:
    00006379: 	movq	0xa0(%rsp), %rdi
    00006381: 	cmpq	%r13, %rdi
    00006384: 	je	.Ltmp3037 # Offset: 25476
    00006386: 	movq	0xb0(%rsp), %rax
    0000638e: 	leaq	0x1(%rax), %rsi
    00006392: 	callq	_ZdlPvm@PLT # Offset: 25490
.Ltmp3037:
    00006397: 	movq	0x80(%rsp), %rdi
    0000639f: 	leaq	0x90(%rsp), %rax
    000063a7: 	cmpq	%rax, %rdi
    000063aa: 	je	.Ltmp3038 # Offset: 25514
    000063ac: 	movq	0x90(%rsp), %rax
    000063b4: 	leaq	0x1(%rax), %rsi
    000063b8: 	callq	_ZdlPvm@PLT # Offset: 25528
.Ltmp3038:
    000063bd: 	movq	0x60(%rsp), %rdi
    000063c2: 	leaq	0x70(%rsp), %rax
    000063c7: 	cmpq	%rax, %rdi
    000063ca: 	je	.Ltmp3039 # Offset: 25546
    000063cc: 	movq	0x70(%rsp), %rax
    000063d1: 	leaq	0x1(%rax), %rsi
    000063d5: 	callq	_ZdlPvm@PLT # Offset: 25557
.Ltmp3039:
    000063da: 	movq	%rbx, %rbp
.Ltmp3047:
    000063dd: 	movq	0x40(%rsp), %rdi
    000063e2: 	leaq	0x50(%rsp), %rax
    000063e7: 	cmpq	%rax, %rdi
    000063ea: 	je	.Ltmp3040 # Offset: 25578
    000063ec: 	movq	0x50(%rsp), %rax
    000063f1: 	leaq	0x1(%rax), %rsi
    000063f5: 	callq	_ZdlPvm@PLT # Offset: 25589
.Ltmp3040:
    000063fa: 	movq	%rbp, %rdi
    000063fd: 	callq	_Unwind_Resume@PLT # Offset: 25597
.Ltmp3036:
    00006402: 	movq	0xa0(%rsp), %rdi
    0000640a: 	cmpq	%r13, %rdi
    0000640d: 	je	.Ltmp3037 # Offset: 25613
    0000640f: 	movq	0xb0(%rsp), %rax
    00006417: 	leaq	0x1(%rax), %rsi
    0000641b: 	callq	_ZdlPvm@PLT # Offset: 25627
    00006420: 	jmp	.Ltmp3037 # Offset: 25632
    00006425: 	endbr64
    00006429: 	movq	%rax, %rbx
    0000642c: 	jmp	.Ltmp3041 # Offset: 25644
    0000642e: 	endbr64
    00006432: 	movq	%rax, %rbx
    00006435: 	jmp	.Ltmp3042 # Offset: 25653
.Ltmp3041:
    00006437: 	movq	0xa0(%rsp), %rdi
    0000643f: 	cmpq	%r13, %rdi
    00006442: 	je	.Ltmp3037 # Offset: 25666
    00006448: 	movq	0xb0(%rsp), %rax
    00006450: 	leaq	0x1(%rax), %rsi
    00006454: 	callq	_ZdlPvm@PLT # Offset: 25684
    00006459: 	jmp	.Ltmp3037 # Offset: 25689
.Ltmp3042:
    0000645e: 	movq	0xa0(%rsp), %rdi
    00006466: 	cmpq	%r13, %rdi
    00006469: 	je	.Ltmp3037 # Offset: 25705
    0000646f: 	movq	0xb0(%rsp), %rax
    00006477: 	leaq	0x1(%rax), %rsi
    0000647b: 	callq	_ZdlPvm@PLT # Offset: 25723
    00006480: 	jmp	.Ltmp3037 # Offset: 25728
    00006485: 	endbr64
    00006489: 	movq	%rax, %rbx
    0000648c: 	jmp	.Ltmp3043 # Offset: 25740
    0000648e: 	endbr64
    00006492: 	movq	%rax, %rbx
    00006495: 	jmp	.Ltmp3044 # Offset: 25749
.Ltmp3043:
    00006497: 	movq	0xa0(%rsp), %rdi
    0000649f: 	cmpq	%r13, %rdi
    000064a2: 	je	.Ltmp3037 # Offset: 25762
    000064a8: 	movq	0xb0(%rsp), %rax
    000064b0: 	leaq	0x1(%rax), %rsi
    000064b4: 	callq	_ZdlPvm@PLT # Offset: 25780
    000064b9: 	jmp	.Ltmp3037 # Offset: 25785
.Ltmp3044:
    000064be: 	movq	0xa0(%rsp), %rdi
    000064c6: 	cmpq	%r13, %rdi
    000064c9: 	je	.Ltmp3037 # Offset: 25801
    000064cf: 	movq	0xb0(%rsp), %rax
    000064d7: 	leaq	0x1(%rax), %rsi
    000064db: 	callq	_ZdlPvm@PLT # Offset: 25819
    000064e0: 	jmp	.Ltmp3037 # Offset: 25824
    000064e5: 	endbr64
    000064e9: 	movq	%rax, %rbx
    000064ec: 	jmp	.Ltmp3045 # Offset: 25836
    000064ee: 	endbr64
.Ltmp3048:
    000064f2: 	movq	%rax, %rbp
    000064f5: 	jmp	.Ltmp3046 # Offset: 25845
.Ltmp3045:
    000064f7: 	movq	0xa0(%rsp), %rdi
    000064ff: 	cmpq	%r13, %rdi
    00006502: 	je	.Ltmp3037 # Offset: 25858
    00006508: 	movq	0xb0(%rsp), %rax
    00006510: 	leaq	0x1(%rax), %rsi
    00006514: 	callq	_ZdlPvm@PLT # Offset: 25876
    00006519: 	jmp	.Ltmp3037 # Offset: 25881
.Ltmp3046:
    0000651e: 	movq	0xa0(%rsp), %rdi
    00006526: 	cmpq	%r13, %rdi
    00006529: 	je	.Ltmp3047 # Offset: 25897
    0000652f: 	movq	0xb0(%rsp), %rax
    00006537: 	leaq	0x1(%rax), %rsi
    0000653b: 	callq	_ZdlPvm@PLT # Offset: 25915
    00006540: 	jmp	.Ltmp3047 # Offset: 25920
    00006545: 	endbr64
    00006549: 	jmp	.Ltmp3048 # Offset: 25929
    0000654b: 	endbr64
    0000654f: 	jmp	.Ltmp3048 # Offset: 25935
    00006551: 	endbr64
    00006555: 	jmp	.Ltmp3048 # Offset: 25941
    00006557: 	endbr64
    0000655b: 	jmp	.Ltmp3048 # Offset: 25947
    0000655d: 	endbr64
    00006561: 	movq	%rax, %rbx
    00006564: 	jmp	.Ltmp3049 # Offset: 25956
    00006566: 	endbr64
    0000656a: 	movq	%rax, %rbx
    0000656d: 	jmp	.Ltmp3050 # Offset: 25965
.Ltmp3049:
    0000656f: 	movq	0xa0(%rsp), %rdi
    00006577: 	cmpq	%r13, %rdi
    0000657a: 	je	.Ltmp3037 # Offset: 25978
    00006580: 	movq	0xb0(%rsp), %rax
    00006588: 	leaq	0x1(%rax), %rsi
    0000658c: 	callq	_ZdlPvm@PLT # Offset: 25996
    00006591: 	jmp	.Ltmp3037 # Offset: 26001
.Ltmp3050:
    00006596: 	movq	0xa0(%rsp), %rdi
    0000659e: 	cmpq	%r13, %rdi
    000065a1: 	je	.Ltmp3037 # Offset: 26017
    000065a7: 	movq	0xb0(%rsp), %rax
    000065af: 	leaq	0x1(%rax), %rsi
    000065b3: 	callq	_ZdlPvm@PLT # Offset: 26035
    000065b8: 	jmp	.Ltmp3037 # Offset: 26040
    000065bd: 	endbr64
    000065c1: 	movq	%rax, %rbx
    000065c4: 	jmp	.Ltmp3051 # Offset: 26052
    000065c6: 	endbr64
    000065ca: 	movq	%rax, %rbx
    000065cd: 	jmp	.Ltmp3052 # Offset: 26061
.Ltmp3051:
    000065cf: 	movq	0xa0(%rsp), %rdi
    000065d7: 	cmpq	%r13, %rdi
    000065da: 	je	.Ltmp3037 # Offset: 26074
    000065e0: 	movq	0xb0(%rsp), %rax
    000065e8: 	leaq	0x1(%rax), %rsi
    000065ec: 	callq	_ZdlPvm@PLT # Offset: 26092
    000065f1: 	jmp	.Ltmp3037 # Offset: 26097
.Ltmp3052:
    000065f6: 	movq	0xa0(%rsp), %rdi
    000065fe: 	cmpq	%r13, %rdi
    00006601: 	je	.Ltmp3037 # Offset: 26113
    00006607: 	movq	0xb0(%rsp), %rax
    0000660f: 	leaq	0x1(%rax), %rsi
    00006613: 	callq	_ZdlPvm@PLT # Offset: 26131
    00006618: 	jmp	.Ltmp3037 # Offset: 26136
    0000661d: 	endbr64
    00006621: 	movq	%rax, %rbx
    00006624: 	jmp	.Ltmp3053 # Offset: 26148
    00006626: 	endbr64
    0000662a: 	movq	%rax, %rbx
    0000662d: 	jmp	.Ltmp3054 # Offset: 26157
.Ltmp3053:
    0000662f: 	movq	0xa0(%rsp), %rdi
    00006637: 	cmpq	%r13, %rdi
    0000663a: 	je	.Ltmp3037 # Offset: 26170
    00006640: 	movq	0xb0(%rsp), %rax
    00006648: 	leaq	0x1(%rax), %rsi
    0000664c: 	callq	_ZdlPvm@PLT # Offset: 26188
    00006651: 	jmp	.Ltmp3037 # Offset: 26193
.Ltmp3054:
    00006656: 	movq	0xa0(%rsp), %rdi
    0000665e: 	cmpq	%r13, %rdi
    00006661: 	je	.Ltmp3037 # Offset: 26209
    00006667: 	movq	0xb0(%rsp), %rax
    0000666f: 	leaq	0x1(%rax), %rsi
    00006673: 	callq	_ZdlPvm@PLT # Offset: 26227
    00006678: 	jmp	.Ltmp3037 # Offset: 26232
    0000667d: 	endbr64
    00006681: 	movq	%rax, %rbp
    00006684: 	jmp	.Ltmp3047 # Offset: 26244
    00006689: 	endbr64
    0000668d: 	movq	%rax, %rbx
    00006690: 	jmp	.Ltmp3055 # Offset: 26256
    00006692: 	endbr64
    00006696: 	movq	%rax, %rbx
    00006699: 	jmp	.Ltmp3056 # Offset: 26265
    0000669b: 	endbr64
    0000669f: 	movq	%rax, %rbx
    000066a2: 	jmp	.Ltmp3057 # Offset: 26274
.Ltmp3055:
    000066a4: 	movq	0xa0(%rsp), %rdi
    000066ac: 	cmpq	%r13, %rdi
    000066af: 	je	.Ltmp3037 # Offset: 26287
    000066b5: 	movq	0xb0(%rsp), %rax
    000066bd: 	leaq	0x1(%rax), %rsi
    000066c1: 	callq	_ZdlPvm@PLT # Offset: 26305
    000066c6: 	jmp	.Ltmp3037 # Offset: 26310
.Ltmp3056:
    000066cb: 	movq	0xa0(%rsp), %rdi
    000066d3: 	cmpq	%r13, %rdi
    000066d6: 	je	.Ltmp3037 # Offset: 26326
    000066dc: 	movq	0xb0(%rsp), %rax
    000066e4: 	leaq	0x1(%rax), %rsi
    000066e8: 	callq	_ZdlPvm@PLT # Offset: 26344
    000066ed: 	jmp	.Ltmp3037 # Offset: 26349
.Ltmp3057:
    000066f2: 	movq	0xa0(%rsp), %rdi
    000066fa: 	cmpq	%r13, %rdi
    000066fd: 	je	.Ltmp3037 # Offset: 26365
    00006703: 	movq	0xb0(%rsp), %rax
    0000670b: 	leaq	0x1(%rax), %rsi
    0000670f: 	callq	_ZdlPvm@PLT # Offset: 26383
    00006714: 	jmp	.Ltmp3037 # Offset: 26388
    00006719: 	endbr64
    0000671d: 	jmp	.Ltmp3048 # Offset: 26397
    00006722: 	endbr64
    00006726: 	jmp	.Ltmp3048 # Offset: 26406
    0000672b: 	endbr64
    0000672f: 	jmp	.Ltmp3048 # Offset: 26415
.Ltmp3033:
    00006734: 	movq	0xa0(%rsp), %rdi
    0000673c: 	cmpq	%r13, %rdi
    0000673f: 	je	.Ltmp3038 # Offset: 26431
    00006745: 	movq	0xb0(%rsp), %rax
    0000674d: 	leaq	0x1(%rax), %rsi
    00006751: 	callq	_ZdlPvm@PLT # Offset: 26449
    00006756: 	jmp	.Ltmp3038 # Offset: 26454
    0000675b: 	endbr64
    0000675f: 	movq	%rax, %rbx
    00006762: 	jmp	.Ltmp3058 # Offset: 26466
    00006767: 	endbr64
    0000676b: 	movq	%rax, %rbx
    0000676e: 	jmp	.Ltmp3059 # Offset: 26478
    00006770: 	endbr64
    00006774: 	movq	%rax, %rbx
    00006777: 	jmp	.Ltmp3060 # Offset: 26487
    0000677c: 	endbr64
    00006780: 	movq	%rax, %rbx
    00006783: 	movq	0xa0(%rsp), %rdi
    0000678b: 	cmpq	%r13, %rdi
    0000678e: 	je	.Ltmp3037 # Offset: 26510
    00006794: 	movq	0xb0(%rsp), %rax
    0000679c: 	leaq	0x1(%rax), %rsi
    000067a0: 	callq	_ZdlPvm@PLT # Offset: 26528
    000067a5: 	jmp	.Ltmp3037 # Offset: 26533
    000067aa: 	endbr64
    000067ae: 	movq	%rax, %rbx
    000067b1: 	jmp	.Ltmp3061 # Offset: 26545
    000067b3: 	endbr64
    000067b7: 	movq	%rax, %rbx
    000067ba: 	jmp	.Ltmp3062 # Offset: 26554
.Ltmp3059:
    000067bf: 	movq	0xa0(%rsp), %rdi
    000067c7: 	cmpq	%r13, %rdi
    000067ca: 	je	.Ltmp3037 # Offset: 26570
    000067d0: 	movq	0xb0(%rsp), %rax
    000067d8: 	leaq	0x1(%rax), %rsi
    000067dc: 	callq	_ZdlPvm@PLT # Offset: 26588
    000067e1: 	jmp	.Ltmp3037 # Offset: 26593
.Ltmp3061:
    000067e6: 	movq	0xa0(%rsp), %rdi
    000067ee: 	cmpq	%r13, %rdi
    000067f1: 	je	.Ltmp3037 # Offset: 26609
    000067f7: 	movq	0xb0(%rsp), %rax
    000067ff: 	leaq	0x1(%rax), %rsi
    00006803: 	callq	_ZdlPvm@PLT # Offset: 26627
    00006808: 	jmp	.Ltmp3037 # Offset: 26632
.Ltmp3058:
    0000680d: 	movq	0xa0(%rsp), %rdi
    00006815: 	cmpq	%r13, %rdi
    00006818: 	je	.Ltmp3037 # Offset: 26648
    0000681e: 	movq	0xb0(%rsp), %rax
    00006826: 	leaq	0x1(%rax), %rsi
    0000682a: 	callq	_ZdlPvm@PLT # Offset: 26666
    0000682f: 	jmp	.Ltmp3037 # Offset: 26671
.Ltmp3060:
    00006834: 	movq	0xa0(%rsp), %rdi
    0000683c: 	cmpq	%r13, %rdi
    0000683f: 	je	.Ltmp3037 # Offset: 26687
    00006845: 	movq	0xb0(%rsp), %rax
    0000684d: 	leaq	0x1(%rax), %rsi
    00006851: 	callq	_ZdlPvm@PLT # Offset: 26705
    00006856: 	jmp	.Ltmp3037 # Offset: 26710
.Ltmp3062:
    0000685b: 	movq	0xa0(%rsp), %rdi
    00006863: 	cmpq	%r13, %rdi
    00006866: 	je	.Ltmp3037 # Offset: 26726
    0000686c: 	movq	0xb0(%rsp), %rax
    00006874: 	leaq	0x1(%rax), %rsi
    00006878: 	callq	_ZdlPvm@PLT # Offset: 26744
    0000687d: 	jmp	.Ltmp3037 # Offset: 26749
    00006882: 	endbr64
    00006886: 	jmp	.Ltmp3048 # Offset: 26758
    0000688b: 	endbr64
    0000688f: 	jmp	.Ltmp3048 # Offset: 26767
    00006894: 	endbr64
    00006898: 	jmp	.Ltmp3048 # Offset: 26776
    0000689d: 	endbr64
    000068a1: 	jmp	.Ltmp3048 # Offset: 26785
    000068a6: 	endbr64
    000068aa: 	jmp	.Ltmp3048 # Offset: 26794
    000068af: 	endbr64
    000068b3: 	jmp	.Ltmp3048 # Offset: 26803
    000068b8: 	endbr64
    000068bc: 	jmp	.Ltmp3048 # Offset: 26812
    000068c1: 	endbr64
    000068c5: 	jmp	.Ltmp3048 # Offset: 26821
    000068ca: 	endbr64
    000068ce: 	jmp	.Ltmp3048 # Offset: 26830
    000068d3: 	endbr64
    000068d7: 	jmp	.Ltmp3034 # Offset: 26839
    000068dc: 	endbr64
    000068e0: 	jmp	.Ltmp3034 # Offset: 26848
    000068e5: 	endbr64
    000068e9: 	jmp	.Ltmp3048 # Offset: 26857
    000068ee: 	endbr64
    000068f2: 	jmp	.Ltmp3048 # Offset: 26866
    000068f7: 	endbr64
    000068fb: 	jmp	.Ltmp3034 # Offset: 26875
    00006900: 	endbr64
    00006904: 	movq	%rax, %rbx
    00006907: 	jmp	.Ltmp3038 # Offset: 26887
    0000690c: 	endbr64
    00006910: 	jmp	.Ltmp3048 # Offset: 26896
    00006915: 	endbr64
    00006919: 	jmp	.Ltmp3048 # Offset: 26905
    0000691e: 	endbr64
    00006922: 	jmp	.Ltmp3048 # Offset: 26914
    00006927: 	endbr64
    0000692b: 	jmp	.Ltmp3048 # Offset: 26923
    00006930: 	endbr64
    00006934: 	jmp	.Ltmp3048 # Offset: 26932
    00006939: 	endbr64
    0000693d: 	jmp	.Ltmp3048 # Offset: 26941
    00006942: 	endbr64
    00006946: 	jmp	.Ltmp3048 # Offset: 26950
    0000694b: 	endbr64
    0000694f: 	jmp	.Ltmp3048 # Offset: 26959
    00006954: 	endbr64
    00006958: 	jmp	.Ltmp3048 # Offset: 26968
    0000695d: 	endbr64
    00006961: 	jmp	.Ltmp3048 # Offset: 26977
    00006966: 	endbr64
    0000696a: 	movq	%rax, %rbx
    0000696d: 	jmp	.Ltmp3063 # Offset: 26989
    0000696f: 	endbr64
    00006973: 	movq	%rax, %rbx
    00006976: 	jmp	.Ltmp3064 # Offset: 26998
    00006978: 	endbr64
    0000697c: 	movq	%rax, %rbx
    0000697f: 	jmp	.Ltmp3065 # Offset: 27007
.Ltmp3063:
    00006981: 	movq	0xa0(%rsp), %rdi
    00006989: 	cmpq	%r13, %rdi
    0000698c: 	je	.Ltmp3037 # Offset: 27020
    00006992: 	movq	0xb0(%rsp), %rax
    0000699a: 	leaq	0x1(%rax), %rsi
    0000699e: 	callq	_ZdlPvm@PLT # Offset: 27038
    000069a3: 	jmp	.Ltmp3037 # Offset: 27043
.Ltmp3064:
    000069a8: 	movq	0xa0(%rsp), %rdi
    000069b0: 	cmpq	%r13, %rdi
    000069b3: 	je	.Ltmp3037 # Offset: 27059
    000069b9: 	movq	0xb0(%rsp), %rax
    000069c1: 	leaq	0x1(%rax), %rsi
    000069c5: 	callq	_ZdlPvm@PLT # Offset: 27077
    000069ca: 	jmp	.Ltmp3037 # Offset: 27082
.Ltmp3065:
    000069cf: 	movq	0xa0(%rsp), %rdi
    000069d7: 	cmpq	%r13, %rdi
    000069da: 	je	.Ltmp3037 # Offset: 27098
    000069e0: 	movq	0xb0(%rsp), %rax
    000069e8: 	leaq	0x1(%rax), %rsi
    000069ec: 	callq	_ZdlPvm@PLT # Offset: 27116
    000069f1: 	jmp	.Ltmp3037 # Offset: 27121
    000069f6: 	endbr64
    000069fa: 	movq	%rax, %rbx
    000069fd: 	jmp	.Ltmp3066 # Offset: 27133
    000069ff: 	endbr64
    00006a03: 	movq	%rax, %rbx
    00006a06: 	jmp	.Ltmp3067 # Offset: 27142
.Ltmp3066:
    00006a08: 	movq	0xa0(%rsp), %rdi
    00006a10: 	cmpq	%r13, %rdi
    00006a13: 	je	.Ltmp3037 # Offset: 27155
    00006a19: 	movq	0xb0(%rsp), %rax
    00006a21: 	leaq	0x1(%rax), %rsi
    00006a25: 	callq	_ZdlPvm@PLT # Offset: 27173
    00006a2a: 	jmp	.Ltmp3037 # Offset: 27178
.Ltmp3067:
    00006a2f: 	movq	0xa0(%rsp), %rdi
    00006a37: 	cmpq	%r13, %rdi
    00006a3a: 	je	.Ltmp3037 # Offset: 27194
    00006a40: 	movq	0xb0(%rsp), %rax
    00006a48: 	leaq	0x1(%rax), %rsi
    00006a4c: 	callq	_ZdlPvm@PLT # Offset: 27212
    00006a51: 	jmp	.Ltmp3037 # Offset: 27217
    00006a56: 	endbr64
    00006a5a: 	movq	%rax, %rbx
    00006a5d: 	jmp	.Ltmp3068 # Offset: 27229
    00006a5f: 	endbr64
    00006a63: 	movq	%rax, %rbx
    00006a66: 	jmp	.Ltmp3069 # Offset: 27238
.Ltmp3068:
    00006a68: 	movq	0xa0(%rsp), %rdi
    00006a70: 	cmpq	%r13, %rdi
    00006a73: 	je	.Ltmp3037 # Offset: 27251
    00006a79: 	movq	0xb0(%rsp), %rax
    00006a81: 	leaq	0x1(%rax), %rsi
    00006a85: 	callq	_ZdlPvm@PLT # Offset: 27269
    00006a8a: 	jmp	.Ltmp3037 # Offset: 27274
.Ltmp3069:
    00006a8f: 	movq	0xa0(%rsp), %rdi
    00006a97: 	cmpq	%r13, %rdi
    00006a9a: 	je	.Ltmp3037 # Offset: 27290
    00006aa0: 	movq	0xb0(%rsp), %rax
    00006aa8: 	leaq	0x1(%rax), %rsi
    00006aac: 	callq	_ZdlPvm@PLT # Offset: 27308
    00006ab1: 	jmp	.Ltmp3037 # Offset: 27313
    00006ab6: 	endbr64
    00006aba: 	movq	%rax, %rbx
    00006abd: 	jmp	.Ltmp3070 # Offset: 27325
    00006abf: 	endbr64
    00006ac3: 	jmp	.Ltmp3048 # Offset: 27331
.Ltmp3070:
    00006ac8: 	movq	0xa0(%rsp), %rdi
    00006ad0: 	cmpq	%r13, %rdi
    00006ad3: 	je	.Ltmp3037 # Offset: 27347
    00006ad9: 	movq	0xb0(%rsp), %rax
    00006ae1: 	leaq	0x1(%rax), %rsi
    00006ae5: 	callq	_ZdlPvm@PLT # Offset: 27365
    00006aea: 	jmp	.Ltmp3037 # Offset: 27370
    00006aef: 	endbr64
    00006af3: 	movq	%rax, %rbx
    00006af6: 	jmp	.Ltmp3071 # Offset: 27382
    00006af8: 	endbr64
    00006afc: 	jmp	.Ltmp3034 # Offset: 27388
.Ltmp3071:
    00006b01: 	movq	0xa0(%rsp), %rdi
    00006b09: 	cmpq	%r13, %rdi
    00006b0c: 	je	.Ltmp3037 # Offset: 27404
    00006b12: 	movq	0xb0(%rsp), %rax
    00006b1a: 	leaq	0x1(%rax), %rsi
    00006b1e: 	callq	_ZdlPvm@PLT # Offset: 27422
    00006b23: 	jmp	.Ltmp3037 # Offset: 27427
    00006b28: 	endbr64
    00006b2c: 	jmp	.Ltmp3034 # Offset: 27436
    00006b31: 	endbr64
    00006b35: 	movq	%rax, %rbx
    00006b38: 	jmp	.Ltmp3037 # Offset: 27448
    00006b3d: 	endbr64
    00006b41: 	jmp	.Ltmp3034 # Offset: 27457
    00006b46: 	endbr64
    00006b4a: 	movq	%rax, %rbx
    00006b4d: 	movq	0xa0(%rsp), %rdi
    00006b55: 	cmpq	%r13, %rdi
    00006b58: 	je	.Ltmp3037 # Offset: 27480
    00006b5e: 	movq	0xb0(%rsp), %rax
    00006b66: 	leaq	0x1(%rax), %rsi
    00006b6a: 	callq	_ZdlPvm@PLT # Offset: 27498
    00006b6f: 	jmp	.Ltmp3037 # Offset: 27503
    00006b74: 	endbr64
    00006b78: 	jmp	.Ltmp3034 # Offset: 27512
    00006b7d: 	endbr64
    00006b81: 	movq	%rax, %rbx
    00006b84: 	jmp	.Ltmp3072 # Offset: 27524
    00006b86: 	endbr64
    00006b8a: 	movq	%rax, %rbx
    00006b8d: 	jmp	.Ltmp3073 # Offset: 27533
.Ltmp3072:
    00006b8f: 	movq	0xa0(%rsp), %rdi
    00006b97: 	cmpq	%r13, %rdi
    00006b9a: 	je	.Ltmp3037 # Offset: 27546
    00006ba0: 	movq	0xb0(%rsp), %rax
    00006ba8: 	leaq	0x1(%rax), %rsi
    00006bac: 	callq	_ZdlPvm@PLT # Offset: 27564
    00006bb1: 	jmp	.Ltmp3037 # Offset: 27569
.Ltmp3073:
    00006bb6: 	movq	0xa0(%rsp), %rdi
    00006bbe: 	cmpq	%r13, %rdi
    00006bc1: 	je	.Ltmp3037 # Offset: 27585
    00006bc7: 	movq	0xb0(%rsp), %rax
    00006bcf: 	leaq	0x1(%rax), %rsi
    00006bd3: 	callq	_ZdlPvm@PLT # Offset: 27603
    00006bd8: 	jmp	.Ltmp3037 # Offset: 27608
    00006bdd: 	endbr64
    00006be1: 	movq	%rax, %rbx
    00006be4: 	jmp	.Ltmp3074 # Offset: 27620
    00006be6: 	endbr64
    00006bea: 	movq	%rax, %rbx
    00006bed: 	jmp	.Ltmp3075 # Offset: 27629
.Ltmp3074:
    00006bef: 	movq	0xa0(%rsp), %rdi
    00006bf7: 	cmpq	%r13, %rdi
    00006bfa: 	je	.Ltmp3037 # Offset: 27642
    00006c00: 	movq	0xb0(%rsp), %rax
    00006c08: 	leaq	0x1(%rax), %rsi
    00006c0c: 	callq	_ZdlPvm@PLT # Offset: 27660
    00006c11: 	jmp	.Ltmp3037 # Offset: 27665
.Ltmp3075:
    00006c16: 	movq	0xa0(%rsp), %rdi
    00006c1e: 	cmpq	%r13, %rdi
    00006c21: 	je	.Ltmp3037 # Offset: 27681
    00006c27: 	movq	0xb0(%rsp), %rax
    00006c2f: 	leaq	0x1(%rax), %rsi
    00006c33: 	callq	_ZdlPvm@PLT # Offset: 27699
    00006c38: 	jmp	.Ltmp3037 # Offset: 27704
    00006c3d: 	endbr64
    00006c41: 	movq	%rax, %rbx
    00006c44: 	jmp	.Ltmp3076 # Offset: 27716
    00006c46: 	endbr64
    00006c4a: 	movq	%rax, %rbx
    00006c4d: 	jmp	.Ltmp3077 # Offset: 27725
.Ltmp3076:
    00006c4f: 	movq	0xa0(%rsp), %rdi
    00006c57: 	cmpq	%r13, %rdi
    00006c5a: 	je	.Ltmp3037 # Offset: 27738
    00006c60: 	movq	0xb0(%rsp), %rax
    00006c68: 	leaq	0x1(%rax), %rsi
    00006c6c: 	callq	_ZdlPvm@PLT # Offset: 27756
    00006c71: 	jmp	.Ltmp3037 # Offset: 27761
.Ltmp3077:
    00006c76: 	movq	0xa0(%rsp), %rdi
    00006c7e: 	cmpq	%r13, %rdi
    00006c81: 	je	.Ltmp3037 # Offset: 27777
    00006c87: 	movq	0xb0(%rsp), %rax
    00006c8f: 	leaq	0x1(%rax), %rsi
    00006c93: 	callq	_ZdlPvm@PLT # Offset: 27795
    00006c98: 	jmp	.Ltmp3037 # Offset: 27800
    00006c9d: 	endbr64
    00006ca1: 	movq	%rax, %rbx
    00006ca4: 	movq	0xa0(%rsp), %rdi
    00006cac: 	cmpq	%r13, %rdi
    00006caf: 	je	.Ltmp3037 # Offset: 27823
    00006cb5: 	movq	0xb0(%rsp), %rax
    00006cbd: 	leaq	0x1(%rax), %rsi
    00006cc1: 	callq	_ZdlPvm@PLT # Offset: 27841
    00006cc6: 	jmp	.Ltmp3037 # Offset: 27846
    00006ccb: 	endbr64
    00006ccf: 	movq	%rax, %rbx
    00006cd2: 	jmp	.Ltmp3078 # Offset: 27858
    00006cd7: 	endbr64
    00006cdb: 	movq	%rax, %rbx
    00006cde: 	jmp	.Ltmp3079 # Offset: 27870
    00006ce3: 	endbr64
    00006ce7: 	movq	%rax, %rbx
    00006cea: 	jmp	.Ltmp3080 # Offset: 27882
    00006cef: 	endbr64
    00006cf3: 	movq	%rax, %rbx
    00006cf6: 	jmp	.Ltmp3081 # Offset: 27894
    00006cfb: 	endbr64
    00006cff: 	movq	%rax, %rbx
    00006d02: 	jmp	.Ltmp3082 # Offset: 27906
    00006d07: 	endbr64
    00006d0b: 	movq	%rax, %rbx
    00006d0e: 	jmp	.Ltmp3083 # Offset: 27918
    00006d13: 	endbr64
    00006d17: 	movq	%rax, %rbx
    00006d1a: 	jmp	.Ltmp3084 # Offset: 27930
    00006d1f: 	endbr64
    00006d23: 	movq	%rax, %rbx
    00006d26: 	jmp	.Ltmp3085 # Offset: 27942
    00006d2b: 	endbr64
    00006d2f: 	movq	%rax, %rbx
    00006d32: 	jmp	.Ltmp3086 # Offset: 27954
    00006d34: 	endbr64
    00006d38: 	movq	%rax, %rbx
    00006d3b: 	jmp	.Ltmp3087 # Offset: 27963
    00006d40: 	endbr64
    00006d44: 	movq	%rax, %rbx
    00006d47: 	jmp	.Ltmp3088 # Offset: 27975
    00006d4c: 	endbr64
    00006d50: 	movq	%rax, %rbx
    00006d53: 	jmp	.Ltmp3089 # Offset: 27987
    00006d58: 	endbr64
    00006d5c: 	movq	%rax, %rbx
    00006d5f: 	jmp	.Ltmp3090 # Offset: 27999
    00006d64: 	endbr64
    00006d68: 	movq	%rax, %rbx
    00006d6b: 	jmp	.Ltmp3091 # Offset: 28011
    00006d70: 	endbr64
    00006d74: 	movq	%rax, %rbx
    00006d77: 	jmp	.Ltmp3092 # Offset: 28023
    00006d7c: 	endbr64
    00006d80: 	movq	%rax, %rbx
    00006d83: 	jmp	.Ltmp3093 # Offset: 28035
.Ltmp3078:
    00006d88: 	movq	0xa0(%rsp), %rdi
    00006d90: 	cmpq	%r13, %rdi
    00006d93: 	je	.Ltmp3037 # Offset: 28051
    00006d99: 	movq	0xb0(%rsp), %rax
    00006da1: 	leaq	0x1(%rax), %rsi
    00006da5: 	callq	_ZdlPvm@PLT # Offset: 28069
    00006daa: 	jmp	.Ltmp3037 # Offset: 28074
.Ltmp3086:
    00006daf: 	movq	0xa0(%rsp), %rdi
    00006db7: 	cmpq	%r13, %rdi
    00006dba: 	je	.Ltmp3037 # Offset: 28090
    00006dc0: 	movq	0xb0(%rsp), %rax
    00006dc8: 	leaq	0x1(%rax), %rsi
    00006dcc: 	callq	_ZdlPvm@PLT # Offset: 28108
    00006dd1: 	jmp	.Ltmp3037 # Offset: 28113
.Ltmp3082:
    00006dd6: 	movq	0xa0(%rsp), %rdi
    00006dde: 	cmpq	%r13, %rdi
    00006de1: 	je	.Ltmp3037 # Offset: 28129
    00006de7: 	movq	0xb0(%rsp), %rax
    00006def: 	leaq	0x1(%rax), %rsi
    00006df3: 	callq	_ZdlPvm@PLT # Offset: 28147
    00006df8: 	jmp	.Ltmp3037 # Offset: 28152
.Ltmp3090:
    00006dfd: 	movq	0xa0(%rsp), %rdi
    00006e05: 	cmpq	%r13, %rdi
    00006e08: 	je	.Ltmp3037 # Offset: 28168
    00006e0e: 	movq	0xb0(%rsp), %rax
    00006e16: 	leaq	0x1(%rax), %rsi
    00006e1a: 	callq	_ZdlPvm@PLT # Offset: 28186
    00006e1f: 	jmp	.Ltmp3037 # Offset: 28191
.Ltmp3080:
    00006e24: 	movq	0xa0(%rsp), %rdi
    00006e2c: 	cmpq	%r13, %rdi
    00006e2f: 	je	.Ltmp3037 # Offset: 28207
    00006e35: 	movq	0xb0(%rsp), %rax
    00006e3d: 	leaq	0x1(%rax), %rsi
    00006e41: 	callq	_ZdlPvm@PLT # Offset: 28225
    00006e46: 	jmp	.Ltmp3037 # Offset: 28230
.Ltmp3088:
    00006e4b: 	movq	0xa0(%rsp), %rdi
    00006e53: 	cmpq	%r13, %rdi
    00006e56: 	je	.Ltmp3037 # Offset: 28246
    00006e5c: 	movq	0xb0(%rsp), %rax
    00006e64: 	leaq	0x1(%rax), %rsi
    00006e68: 	callq	_ZdlPvm@PLT # Offset: 28264
    00006e6d: 	jmp	.Ltmp3037 # Offset: 28269
.Ltmp3084:
    00006e72: 	movq	0xa0(%rsp), %rdi
    00006e7a: 	cmpq	%r13, %rdi
    00006e7d: 	je	.Ltmp3037 # Offset: 28285
    00006e83: 	movq	0xb0(%rsp), %rax
    00006e8b: 	leaq	0x1(%rax), %rsi
    00006e8f: 	callq	_ZdlPvm@PLT # Offset: 28303
    00006e94: 	jmp	.Ltmp3037 # Offset: 28308
.Ltmp3092:
    00006e99: 	movq	0xa0(%rsp), %rdi
    00006ea1: 	cmpq	%r13, %rdi
    00006ea4: 	je	.Ltmp3037 # Offset: 28324
    00006eaa: 	movq	0xb0(%rsp), %rax
    00006eb2: 	leaq	0x1(%rax), %rsi
    00006eb6: 	callq	_ZdlPvm@PLT # Offset: 28342
    00006ebb: 	jmp	.Ltmp3037 # Offset: 28347
.Ltmp3079:
    00006ec0: 	movq	0xa0(%rsp), %rdi
    00006ec8: 	cmpq	%r13, %rdi
    00006ecb: 	je	.Ltmp3037 # Offset: 28363
    00006ed1: 	movq	0xb0(%rsp), %rax
    00006ed9: 	leaq	0x1(%rax), %rsi
    00006edd: 	callq	_ZdlPvm@PLT # Offset: 28381
    00006ee2: 	jmp	.Ltmp3037 # Offset: 28386
.Ltmp3087:
    00006ee7: 	movq	0xa0(%rsp), %rdi
    00006eef: 	cmpq	%r13, %rdi
    00006ef2: 	je	.Ltmp3037 # Offset: 28402
    00006ef8: 	movq	0xb0(%rsp), %rax
    00006f00: 	leaq	0x1(%rax), %rsi
    00006f04: 	callq	_ZdlPvm@PLT # Offset: 28420
    00006f09: 	jmp	.Ltmp3037 # Offset: 28425
.Ltmp3083:
    00006f0e: 	movq	0xa0(%rsp), %rdi
    00006f16: 	cmpq	%r13, %rdi
    00006f19: 	je	.Ltmp3037 # Offset: 28441
    00006f1f: 	movq	0xb0(%rsp), %rax
    00006f27: 	leaq	0x1(%rax), %rsi
    00006f2b: 	callq	_ZdlPvm@PLT # Offset: 28459
    00006f30: 	jmp	.Ltmp3037 # Offset: 28464
.Ltmp3091:
    00006f35: 	movq	0xa0(%rsp), %rdi
    00006f3d: 	cmpq	%r13, %rdi
    00006f40: 	je	.Ltmp3037 # Offset: 28480
    00006f46: 	movq	0xb0(%rsp), %rax
    00006f4e: 	leaq	0x1(%rax), %rsi
    00006f52: 	callq	_ZdlPvm@PLT # Offset: 28498
    00006f57: 	jmp	.Ltmp3037 # Offset: 28503
.Ltmp3081:
    00006f5c: 	movq	0xa0(%rsp), %rdi
    00006f64: 	cmpq	%r13, %rdi
    00006f67: 	je	.Ltmp3037 # Offset: 28519
    00006f6d: 	movq	0xb0(%rsp), %rax
    00006f75: 	leaq	0x1(%rax), %rsi
    00006f79: 	callq	_ZdlPvm@PLT # Offset: 28537
    00006f7e: 	jmp	.Ltmp3037 # Offset: 28542
.Ltmp3089:
    00006f83: 	movq	0xa0(%rsp), %rdi
    00006f8b: 	cmpq	%r13, %rdi
    00006f8e: 	je	.Ltmp3037 # Offset: 28558
    00006f94: 	movq	0xb0(%rsp), %rax
    00006f9c: 	leaq	0x1(%rax), %rsi
    00006fa0: 	callq	_ZdlPvm@PLT # Offset: 28576
    00006fa5: 	jmp	.Ltmp3037 # Offset: 28581
.Ltmp3085:
    00006faa: 	movq	0xa0(%rsp), %rdi
    00006fb2: 	cmpq	%r13, %rdi
    00006fb5: 	je	.Ltmp3037 # Offset: 28597
    00006fbb: 	movq	0xb0(%rsp), %rax
    00006fc3: 	leaq	0x1(%rax), %rsi
    00006fc7: 	callq	_ZdlPvm@PLT # Offset: 28615
    00006fcc: 	jmp	.Ltmp3037 # Offset: 28620
.Ltmp3093:
    00006fd1: 	movq	0xa0(%rsp), %rdi
    00006fd9: 	cmpq	%r13, %rdi
    00006fdc: 	je	.Ltmp3037 # Offset: 28636
    00006fe2: 	movq	0xb0(%rsp), %rax
    00006fea: 	leaq	0x1(%rax), %rsi
    00006fee: 	callq	_ZdlPvm@PLT # Offset: 28654
    00006ff3: 	jmp	.Ltmp3037 # Offset: 28659
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIsEvv"

Binary Function "_Z13test_constantIt28custom_multiply_shiftadd_126ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 182
  State       : disassembled
  Address     : 0x24720
  Size        : 0x3f5
  MaxSize     : 0x400
  Offset      : 0x24720
  Section     : .text
  Orc Section : .local.text._Z13test_constantIt28custom_multiply_shiftadd_126ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0181:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movl	%esi, %r12d
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r8d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r8d, %r8d
    00000043: 	jle	.Ltmp3094 # Offset: 67
    00000049: 	leal	-0x1(%r12), %eax
    0000004e: 	movl	%r12d, %r15d
    00000051: 	leaq	DATAat0x571d0(%rip), %rbx
    00000058: 	xorl	%r14d, %r14d
    0000005b: 	movl	%eax, 0x4(%rsp)
    0000005f: 	movl	%r12d, %eax
    00000062: 	cvttsd2si	init_value(%rip), %esi
    0000006a: 	andl	$-0x8, %r15d
    0000006e: 	shrl	$0x3, %eax
    00000071: 	subl	$0x1, %eax
    00000074: 	shlq	$0x4, %rax
    00000078: 	leaq	0x10(%r13,%rax), %rbp
    0000007d: 	nopl	(%rax) # Size: 3
.Ltmp3100:
    00000080: 	xorl	%edx, %edx
    00000082: 	testl	%r12d, %r12d
    00000085: 	jle	.Ltmp3095 # Offset: 133
    0000008b: 	cmpl	$0x6, 0x4(%rsp)
    00000090: 	jbe	.Ltmp3096 # Offset: 144
    00000096: 	movq	%r13, %rax
    00000099: 	pxor	%xmm2, %xmm2
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp3097:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	movdqa	%xmm0, %xmm1
    000000ac: 	movdqa	%xmm0, %xmm3
    000000b0: 	psllw	$0x1, %xmm1
    000000b5: 	psllw	$0x4, %xmm3
    000000ba: 	paddw	%xmm1, %xmm0
    000000be: 	paddw	%xmm1, %xmm2
    000000c2: 	movdqa	%xmm0, %xmm4
    000000c6: 	psllw	$0x2, %xmm0
    000000cb: 	psllw	$0x5, %xmm4
    000000d0: 	paddw	%xmm4, %xmm3
    000000d4: 	paddw	%xmm3, %xmm0
    000000d8: 	paddw	%xmm0, %xmm2
    000000dc: 	cmpq	%rbp, %rax
    000000df: 	jne	.Ltmp3097 # Offset: 223
    000000e1: 	movdqa	%xmm2, %xmm0
    000000e5: 	psrldq	$0x8, %xmm0
    000000ea: 	paddw	%xmm0, %xmm2
    000000ee: 	movdqa	%xmm2, %xmm0
    000000f2: 	psrldq	$0x4, %xmm0
    000000f7: 	paddw	%xmm0, %xmm2
    000000fb: 	movdqa	%xmm2, %xmm0
    000000ff: 	psrldq	$0x2, %xmm0
    00000104: 	paddw	%xmm0, %xmm2
    00000108: 	pextrw	$0x0, %xmm2, %edx
    0000010d: 	cmpl	%r12d, %r15d
    00000110: 	je	.Ltmp3095 # Offset: 272
    00000116: 	movl	%r15d, %edi
    00000119: 	movl	%r15d, %eax
.Ltmp3108:
    0000011c: 	movl	%r12d, %ecx
    0000011f: 	subl	%edi, %ecx
    00000121: 	leal	-0x1(%rcx), %r9d
    00000125: 	cmpl	$0x2, %r9d
    00000129: 	jbe	.Ltmp3098 # Offset: 297
    0000012b: 	movq	(%r13,%rdi,2), %xmm1
    00000132: 	movdqa	%xmm1, %xmm2
    00000136: 	movdqa	%xmm1, %xmm0
    0000013a: 	psllw	$0x1, %xmm2
    0000013f: 	psllw	$0x4, %xmm0
    00000144: 	paddw	%xmm2, %xmm1
    00000148: 	movdqa	%xmm1, %xmm3
    0000014c: 	psllw	$0x2, %xmm1
    00000151: 	psllw	$0x5, %xmm3
    00000156: 	paddw	%xmm3, %xmm0
    0000015a: 	paddw	%xmm1, %xmm0
    0000015e: 	paddw	%xmm2, %xmm0
    00000162: 	pextrw	$0x0, %xmm0, %edi
    00000167: 	pextrw	$0x1, %xmm0, %r9d
    0000016d: 	addl	%r9d, %edi
    00000170: 	addl	%edx, %edi
    00000172: 	pextrw	$0x2, %xmm0, %edx
    00000177: 	addl	%edx, %edi
    00000179: 	pextrw	$0x3, %xmm0, %edx
    0000017e: 	addl	%edi, %edx
    00000180: 	movl	%ecx, %edi
    00000182: 	andl	$-0x4, %edi
    00000185: 	addl	%edi, %eax
    00000187: 	cmpl	%ecx, %edi
    00000189: 	je	.Ltmp3095 # Offset: 393
.Ltmp3098:
    0000018f: 	movslq	%eax, %rcx
    00000192: 	leaq	(%rcx,%rcx), %rdi
    00000196: 	movzwl	(%r13,%rcx,2), %ecx
    0000019c: 	leal	(%rcx,%rcx), %r9d
    000001a0: 	movl	%ecx, %r11d
    000001a3: 	leal	(%r9,%rcx), %r10d
    000001a7: 	shll	$0x4, %r11d
    000001ab: 	shll	$0x5, %r10d
    000001af: 	addl	%r11d, %r10d
    000001b2: 	addl	%r10d, %edx
    000001b5: 	leal	(%rdx,%rcx,8), %edx
    000001b8: 	leal	(%rdx,%rcx,4), %ecx
    000001bb: 	leal	(%r9,%rcx), %edx
    000001bf: 	leal	0x1(%rax), %ecx
    000001c2: 	cmpl	%ecx, %r12d
    000001c5: 	jle	.Ltmp3095 # Offset: 453
    000001c7: 	movzwl	0x2(%r13,%rdi), %ecx
    000001cd: 	addl	$0x2, %eax
    000001d0: 	leal	(%rcx,%rcx), %r10d
    000001d4: 	movl	%ecx, %r9d
    000001d7: 	leal	(%r10,%rcx), %r11d
    000001db: 	shll	$0x4, %r9d
    000001df: 	shll	$0x5, %r11d
    000001e3: 	addl	%r11d, %r9d
    000001e6: 	leal	(%r9,%rcx,8), %r9d
    000001ea: 	leal	(%r9,%rcx,4), %ecx
    000001ee: 	addl	%r10d, %ecx
    000001f1: 	addl	%ecx, %edx
    000001f3: 	cmpl	%eax, %r12d
    000001f6: 	jle	.Ltmp3095 # Offset: 502
    000001f8: 	movzwl	0x4(%r13,%rdi), %eax
    000001fe: 	leal	(%rax,%rax), %edi
    00000201: 	movl	%eax, %ecx
    00000203: 	leal	(%rdi,%rax), %r9d
    00000207: 	shll	$0x4, %ecx
    0000020a: 	shll	$0x5, %r9d
    0000020e: 	addl	%r9d, %ecx
    00000211: 	leal	(%rcx,%rax,8), %ecx
    00000214: 	leal	(%rcx,%rax,4), %eax
    00000217: 	addl	%edi, %eax
    00000219: 	addl	%eax, %edx
.Ltmp3095:
    0000021b: 	leal	(%rsi,%rsi), %ecx
    0000021e: 	movl	%esi, %edi
    00000220: 	leal	(%rcx,%rsi), %eax
    00000223: 	shll	$0x4, %edi
    00000226: 	shll	$0x5, %eax
    00000229: 	addl	%edi, %eax
    0000022b: 	leal	(%rax,%rsi,8), %eax
    0000022e: 	leal	(%rax,%rsi,4), %eax
    00000231: 	addl	%ecx, %eax
    00000233: 	imulw	$0x1f40, %ax, %ax
    00000238: 	cmpw	%dx, %ax
    0000023b: 	je	.Ltmp3099 # Offset: 571
    0000023d: 	movl	current_test(%rip), %edx
    00000243: 	movq	%rbx, %rsi
    00000246: 	movl	$0x1, %edi
    0000024b: 	xorl	%eax, %eax
    0000024d: 	addl	$0x1, %r14d
    00000251: 	callq	__printf_chk@PLT # Offset: 593
    00000256: 	movl	iterations(%rip), %r8d
    0000025d: 	cmpl	%r8d, %r14d
    00000260: 	jge	.Ltmp3094 # Offset: 608
    00000262: 	cvttsd2si	init_value(%rip), %esi
    0000026a: 	jmp	.Ltmp3100 # Offset: 618
    0000026f: 	nop # Size: 1
.Ltmp3099:
    00000270: 	addl	$0x1, %r14d
    00000274: 	cmpl	%r8d, %r14d
    00000277: 	jl	.Ltmp3100 # Offset: 631
.Ltmp3094:
    0000027d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000284: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000028b: 	subq	$0x20, %rax
    0000028f: 	cmpq	%rax, %rbx
    00000292: 	je	.Ltmp3101 # Offset: 658
    00000298: 	movq	0x8(%rsp), %rax
    0000029d: 	leaq	0x10(%rbx), %rdi
    000002a1: 	movq	%rdi, (%rbx)
    000002a4: 	movq	(%rax), %rbp
    000002a7: 	movq	0x8(%rax), %r12
    000002ab: 	movq	%rbp, %rax
    000002ae: 	addq	%r12, %rax
    000002b1: 	je	.Ltmp3102 # Offset: 689
    000002b3: 	testq	%rbp, %rbp
    000002b6: 	je	.Ltmp3103 # Offset: 694
.Ltmp3102:
    000002bc: 	movq	%r12, 0x10(%rsp)
    000002c1: 	cmpq	$0xf, %r12
    000002c5: 	ja	.Ltmp3104 # Offset: 709
    000002cb: 	cmpq	$0x1, %r12
    000002cf: 	jne	.Ltmp3105 # Offset: 719
    000002d5: 	movzbl	(%rbp), %eax
    000002d9: 	movb	%al, 0x10(%rbx)
.Ltmp3109:
    000002dc: 	movq	%r12, 0x8(%rbx)
    000002e0: 	movb	$0x0, (%rdi,%r12)
    000002e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002f3: 	addq	$0x20, %rax
    000002f7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002fe: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000305: 	je	.Ltmp3106 # Offset: 773
.Ltmp3110:
    0000030b: 	movq	-0x20(%rax), %rbp
    0000030f: 	callq	clock@PLT # Offset: 783
    00000314: 	movq	%rax, end_time(%rip)
    0000031b: 	movq	0x18(%rsp), %rdx
    00000320: 	subq	%fs:0x28, %rdx
    00000329: 	jne	.Ltmp3107 # Offset: 809
    0000032f: 	subq	start_time(%rip), %rax
    00000336: 	pxor	%xmm0, %xmm0
    0000033a: 	movq	%rbp, %rdi
    0000033d: 	cvtsi2sd	%rax, %xmm0
    00000342: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000034a: 	addq	$0x28, %rsp
    0000034e: 	popq	%rbx
    0000034f: 	popq	%rbp
    00000350: 	popq	%r12
    00000352: 	popq	%r13
    00000354: 	popq	%r14
    00000356: 	popq	%r15
    00000358: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 856
.Ltmp3096:
    0000035d: 	xorl	%edi, %edi
    0000035f: 	xorl	%eax, %eax
    00000361: 	xorl	%edx, %edx
    00000363: 	jmp	.Ltmp3108 # Offset: 867
.Ltmp3104:
    00000368: 	movq	%rbx, %rdi
    0000036b: 	leaq	0x10(%rsp), %rsi
    00000370: 	xorl	%edx, %edx
    00000372: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 882
    00000377: 	movq	%rax, (%rbx)
    0000037a: 	movq	%rax, %rdi
    0000037d: 	movq	0x10(%rsp), %rax
    00000382: 	movq	%rax, 0x10(%rbx)
.Ltmp3111:
    00000386: 	movq	%r12, %rdx
    00000389: 	movq	%rbp, %rsi
    0000038c: 	callq	memcpy@PLT # Offset: 908
    00000391: 	movq	0x10(%rsp), %r12
    00000396: 	movq	(%rbx), %rdi
    00000399: 	jmp	.Ltmp3109 # Offset: 921
.Ltmp3101:
    0000039e: 	movq	0x8(%rsp), %rsi
    000003a3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003aa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 938
    000003af: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003b6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003bd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003c4: 	jne	.Ltmp3110 # Offset: 964
.Ltmp3106:
    000003ca: 	movq	-0x8(%rdx), %rax
    000003ce: 	addq	$0x200, %rax
    000003d4: 	jmp	.Ltmp3110 # Offset: 980
.Ltmp3105:
    000003d9: 	testq	%r12, %r12
    000003dc: 	je	.Ltmp3109 # Offset: 988
    000003e2: 	jmp	.Ltmp3111 # Offset: 994
.Ltmp3107:
    000003e4: 	callq	__stack_chk_fail@PLT # Offset: 996
.Ltmp3103:
    000003e9: 	leaq	DATAat0x57008(%rip), %rdi
    000003f0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1008
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIt28custom_multiply_shiftadd_126ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIm28custom_multiply_shiftadd_126ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 183
  State       : disassembled
  Address     : 0x24b20
  Size        : 0x345
  MaxSize     : 0x350
  Offset      : 0x24b20
  Section     : .text
  Orc Section : .local.text._Z13test_constantIm28custom_multiply_shiftadd_126ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0182:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp3112 # Offset: 67
    00000049: 	movl	%r15d, %eax
    0000004c: 	movl	%r15d, %ebx
    0000004f: 	leaq	DATAat0x571d0(%rip), %rbp
    00000056: 	xorl	%r12d, %r12d
    00000059: 	shrl	%eax
    0000005b: 	movsd	DATAat0x57bd8(%rip), %xmm6
    00000063: 	movsd	init_value(%rip), %xmm5
    0000006b: 	andl	$-0x2, %ebx
    0000006e: 	subl	$0x1, %eax
    00000071: 	shlq	$0x4, %rax
    00000075: 	leaq	0x10(%r13,%rax), %r14
    0000007a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3118:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp3113 # Offset: 133
    0000008b: 	cmpl	$0x1, %r15d
    0000008f: 	je	.Ltmp3114 # Offset: 143
    00000095: 	movq	%r13, %rax
    00000098: 	pxor	%xmm2, %xmm2
    0000009c: 	nopl	(%rax) # Size: 4
.Ltmp3115:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	movdqa	%xmm0, %xmm3
    000000ac: 	movdqa	%xmm0, %xmm1
    000000b0: 	psllq	$0x1, %xmm3
    000000b5: 	psllq	$0x4, %xmm1
    000000ba: 	paddq	%xmm3, %xmm0
    000000be: 	paddq	%xmm3, %xmm2
    000000c2: 	movdqa	%xmm0, %xmm4
    000000c6: 	psllq	$0x2, %xmm0
    000000cb: 	psllq	$0x5, %xmm4
    000000d0: 	paddq	%xmm4, %xmm1
    000000d4: 	paddq	%xmm1, %xmm0
    000000d8: 	paddq	%xmm0, %xmm2
    000000dc: 	cmpq	%rax, %r14
    000000df: 	jne	.Ltmp3115 # Offset: 223
    000000e1: 	movdqa	%xmm2, %xmm0
    000000e5: 	movslq	%ebx, %rdx
    000000e8: 	psrldq	$0x8, %xmm0
    000000ed: 	paddq	%xmm0, %xmm2
    000000f1: 	movq	%xmm2, %rax
    000000f6: 	cmpl	%r15d, %ebx
    000000f9: 	je	.Ltmp3113 # Offset: 249
.Ltmp3127:
    000000fb: 	movq	(%r13,%rdx,8), %rsi
    00000100: 	leaq	(%rsi,%rsi), %rdi
    00000104: 	movq	%rsi, %rdx
    00000107: 	leaq	(%rdi,%rsi), %r10
    0000010b: 	shlq	$0x4, %rdx
    0000010f: 	shlq	$0x5, %r10
    00000113: 	addq	%r10, %rdx
    00000116: 	addq	%rdx, %rax
    00000119: 	leaq	(%rax,%rsi,8), %rax
    0000011d: 	leaq	(%rax,%rsi,4), %rax
    00000121: 	addq	%rdi, %rax
.Ltmp3113:
    00000124: 	comisd	%xmm6, %xmm5
    00000128: 	jae	.Ltmp3116 # Offset: 296
    0000012e: 	cvttsd2si	%xmm5, %rdx
.Ltmp3126:
    00000133: 	leaq	(%rdx,%rdx), %rdi
    00000137: 	movq	%rdx, %r10
    0000013a: 	leaq	(%rdi,%rdx), %rsi
    0000013e: 	shlq	$0x4, %r10
    00000142: 	shlq	$0x5, %rsi
    00000146: 	addq	%r10, %rsi
    00000149: 	leaq	(%rsi,%rdx,8), %rsi
    0000014d: 	leaq	(%rsi,%rdx,4), %rdx
    00000151: 	addq	%rdi, %rdx
    00000154: 	imulq	$0x1f40, %rdx, %rdx
    0000015b: 	cmpq	%rax, %rdx
    0000015e: 	je	.Ltmp3117 # Offset: 350
    00000160: 	movl	current_test(%rip), %edx
    00000166: 	movq	%rbp, %rsi
    00000169: 	movl	$0x1, %edi
    0000016e: 	xorl	%eax, %eax
    00000170: 	addl	$0x1, %r12d
    00000174: 	callq	__printf_chk@PLT # Offset: 372
    00000179: 	movl	iterations(%rip), %r9d
    00000180: 	cmpl	%r9d, %r12d
    00000183: 	jge	.Ltmp3112 # Offset: 387
    00000185: 	movq	DATAat0x57bd8(%rip), %rax
    0000018c: 	movsd	init_value(%rip), %xmm5
    00000194: 	movq	%rax, %xmm6
    00000199: 	jmp	.Ltmp3118 # Offset: 409
    0000019e: 	nop # Size: 2
.Ltmp3117:
    000001a0: 	addl	$0x1, %r12d
    000001a4: 	cmpl	%r9d, %r12d
    000001a7: 	jl	.Ltmp3118 # Offset: 423
.Ltmp3112:
    000001ad: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001b4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001bb: 	subq	$0x20, %rax
    000001bf: 	cmpq	%rax, %rbx
    000001c2: 	je	.Ltmp3119 # Offset: 450
    000001c8: 	movq	0x8(%rsp), %rax
    000001cd: 	leaq	0x10(%rbx), %rdi
    000001d1: 	movq	%rdi, (%rbx)
    000001d4: 	movq	(%rax), %rbp
    000001d7: 	movq	0x8(%rax), %r12
    000001db: 	movq	%rbp, %rax
    000001de: 	addq	%r12, %rax
    000001e1: 	je	.Ltmp3120 # Offset: 481
    000001e3: 	testq	%rbp, %rbp
    000001e6: 	je	.Ltmp3121 # Offset: 486
.Ltmp3120:
    000001ec: 	movq	%r12, 0x10(%rsp)
    000001f1: 	cmpq	$0xf, %r12
    000001f5: 	ja	.Ltmp3122 # Offset: 501
    000001fb: 	cmpq	$0x1, %r12
    000001ff: 	jne	.Ltmp3123 # Offset: 511
    00000205: 	movzbl	(%rbp), %eax
    00000209: 	movb	%al, 0x10(%rbx)
.Ltmp3128:
    0000020c: 	movq	%r12, 0x8(%rbx)
    00000210: 	movb	$0x0, (%rdi,%r12)
    00000215: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000021c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000223: 	addq	$0x20, %rax
    00000227: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000022e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000235: 	je	.Ltmp3124 # Offset: 565
.Ltmp3129:
    0000023b: 	movq	-0x20(%rax), %rbp
    0000023f: 	callq	clock@PLT # Offset: 575
    00000244: 	movq	%rax, end_time(%rip)
    0000024b: 	movq	0x18(%rsp), %rdx
    00000250: 	subq	%fs:0x28, %rdx
    00000259: 	jne	.Ltmp3125 # Offset: 601
    0000025f: 	subq	start_time(%rip), %rax
    00000266: 	pxor	%xmm0, %xmm0
    0000026a: 	movq	%rbp, %rdi
    0000026d: 	cvtsi2sd	%rax, %xmm0
    00000272: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000027a: 	addq	$0x28, %rsp
    0000027e: 	popq	%rbx
    0000027f: 	popq	%rbp
    00000280: 	popq	%r12
    00000282: 	popq	%r13
    00000284: 	popq	%r14
    00000286: 	popq	%r15
    00000288: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 648
    0000028d: 	nopl	(%rax) # Size: 3
.Ltmp3116:
    00000290: 	movabsq	$-0x8000000000000000, %rcx
    0000029a: 	movapd	%xmm5, %xmm0
    0000029e: 	subsd	%xmm6, %xmm0
    000002a2: 	cvttsd2si	%xmm0, %rdx
    000002a7: 	xorq	%rcx, %rdx
    000002aa: 	jmp	.Ltmp3126 # Offset: 682
.Ltmp3114:
    000002af: 	xorl	%edx, %edx
    000002b1: 	xorl	%eax, %eax
    000002b3: 	jmp	.Ltmp3127 # Offset: 691
.Ltmp3122:
    000002b8: 	movq	%rbx, %rdi
    000002bb: 	leaq	0x10(%rsp), %rsi
    000002c0: 	xorl	%edx, %edx
    000002c2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 706
    000002c7: 	movq	%rax, (%rbx)
    000002ca: 	movq	%rax, %rdi
    000002cd: 	movq	0x10(%rsp), %rax
    000002d2: 	movq	%rax, 0x10(%rbx)
.Ltmp3130:
    000002d6: 	movq	%r12, %rdx
    000002d9: 	movq	%rbp, %rsi
    000002dc: 	callq	memcpy@PLT # Offset: 732
    000002e1: 	movq	0x10(%rsp), %r12
    000002e6: 	movq	(%rbx), %rdi
    000002e9: 	jmp	.Ltmp3128 # Offset: 745
.Ltmp3119:
    000002ee: 	movq	0x8(%rsp), %rsi
    000002f3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002fa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 762
    000002ff: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000306: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000030d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000314: 	jne	.Ltmp3129 # Offset: 788
.Ltmp3124:
    0000031a: 	movq	-0x8(%rdx), %rax
    0000031e: 	addq	$0x200, %rax
    00000324: 	jmp	.Ltmp3129 # Offset: 804
.Ltmp3123:
    00000329: 	testq	%r12, %r12
    0000032c: 	je	.Ltmp3128 # Offset: 812
    00000332: 	jmp	.Ltmp3130 # Offset: 818
.Ltmp3125:
    00000334: 	callq	__stack_chk_fail@PLT # Offset: 820
.Ltmp3121:
    00000339: 	leaq	DATAat0x57008(%rip), %rdi
    00000340: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 832
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIm28custom_multiply_shiftadd_126ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl28custom_multiply_shiftadd_126IlEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 184
  State       : disassembled
  Address     : 0x24e70
  Size        : 0x314
  MaxSize     : 0x320
  Offset      : 0x24e70
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl28custom_multiply_shiftadd_126IlEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0183:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r8d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r8d, %r8d
    00000043: 	jle	.Ltmp3131 # Offset: 67
    00000049: 	movl	%r14d, %eax
    0000004c: 	movl	%r14d, %ebp
    0000004f: 	leaq	DATAat0x571d0(%rip), %rbx
    00000056: 	xorl	%r15d, %r15d
    00000059: 	shrl	%eax
    0000005b: 	movsd	init_value(%rip), %xmm5
    00000063: 	andl	$-0x2, %ebp
    00000066: 	subl	$0x1, %eax
    00000069: 	shlq	$0x4, %rax
    0000006d: 	leaq	0x10(%r12,%rax), %r13
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3136:
    00000078: 	xorl	%edx, %edx
    0000007a: 	testl	%r14d, %r14d
    0000007d: 	jle	.Ltmp3132 # Offset: 125
    00000083: 	cmpl	$0x1, %r14d
    00000087: 	je	.Ltmp3133 # Offset: 135
    0000008d: 	movq	%r12, %rax
    00000090: 	pxor	%xmm4, %xmm4
    00000094: 	nopl	(%rax) # Size: 4
.Ltmp3134:
    00000098: 	movdqu	(%rax), %xmm1
    0000009c: 	addq	$0x10, %rax
    000000a0: 	movdqa	%xmm1, %xmm3
    000000a4: 	movdqa	%xmm1, %xmm0
    000000a8: 	psllq	$0x1, %xmm3
    000000ad: 	psllq	$0x4, %xmm0
    000000b2: 	movdqa	%xmm3, %xmm2
    000000b6: 	paddq	%xmm1, %xmm2
    000000ba: 	psllq	$0x5, %xmm2
    000000bf: 	paddq	%xmm2, %xmm0
    000000c3: 	movdqa	%xmm1, %xmm2
    000000c7: 	psllq	$0x3, %xmm2
    000000cc: 	psllq	$0x2, %xmm1
    000000d1: 	paddq	%xmm2, %xmm0
    000000d5: 	paddq	%xmm1, %xmm0
    000000d9: 	paddq	%xmm3, %xmm0
    000000dd: 	paddq	%xmm0, %xmm4
    000000e1: 	cmpq	%rax, %r13
    000000e4: 	jne	.Ltmp3134 # Offset: 228
    000000e6: 	movdqa	%xmm4, %xmm0
    000000ea: 	movslq	%ebp, %rax
    000000ed: 	psrldq	$0x8, %xmm0
    000000f2: 	paddq	%xmm0, %xmm4
    000000f6: 	movq	%xmm4, %rdx
    000000fb: 	cmpl	%r14d, %ebp
    000000fe: 	je	.Ltmp3132 # Offset: 254
.Ltmp3144:
    00000100: 	movq	(%r12,%rax,8), %rax
    00000104: 	leaq	(%rax,%rax), %r9
    00000108: 	movq	%rax, %rsi
    0000010b: 	leaq	(%r9,%rax), %rdi
    0000010f: 	shlq	$0x4, %rsi
    00000113: 	shlq	$0x5, %rdi
    00000117: 	addq	%rdi, %rsi
    0000011a: 	leaq	(%rsi,%rax,8), %rsi
    0000011e: 	leaq	(%rsi,%rax,4), %rax
    00000122: 	addq	%r9, %rax
    00000125: 	addq	%rax, %rdx
.Ltmp3132:
    00000128: 	cvttsd2si	%xmm5, %rax
    0000012d: 	leaq	(%rax,%rax), %rdi
    00000131: 	movq	%rax, %r9
    00000134: 	leaq	(%rdi,%rax), %rsi
    00000138: 	shlq	$0x4, %r9
    0000013c: 	shlq	$0x5, %rsi
    00000140: 	addq	%r9, %rsi
    00000143: 	leaq	(%rsi,%rax,8), %rsi
    00000147: 	leaq	(%rsi,%rax,4), %rax
    0000014b: 	addq	%rdi, %rax
    0000014e: 	imulq	$0x1f40, %rax, %rax
    00000155: 	cmpq	%rdx, %rax
    00000158: 	je	.Ltmp3135 # Offset: 344
    0000015a: 	movl	current_test(%rip), %edx
    00000160: 	movq	%rbx, %rsi
    00000163: 	movl	$0x1, %edi
    00000168: 	xorl	%eax, %eax
    0000016a: 	addl	$0x1, %r15d
    0000016e: 	callq	__printf_chk@PLT # Offset: 366
    00000173: 	movl	iterations(%rip), %r8d
    0000017a: 	cmpl	%r8d, %r15d
    0000017d: 	jge	.Ltmp3131 # Offset: 381
    0000017f: 	movsd	init_value(%rip), %xmm5
    00000187: 	jmp	.Ltmp3136 # Offset: 391
    0000018c: 	nopl	(%rax) # Size: 4
.Ltmp3135:
    00000190: 	addl	$0x1, %r15d
    00000194: 	cmpl	%r8d, %r15d
    00000197: 	jl	.Ltmp3136 # Offset: 407
.Ltmp3131:
    0000019d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001a4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001ab: 	subq	$0x20, %rax
    000001af: 	cmpq	%rax, %rbx
    000001b2: 	je	.Ltmp3137 # Offset: 434
    000001b8: 	movq	0x8(%rsp), %rax
    000001bd: 	leaq	0x10(%rbx), %rdi
    000001c1: 	movq	%rdi, (%rbx)
    000001c4: 	movq	(%rax), %r13
    000001c7: 	movq	0x8(%rax), %r12
    000001cb: 	movq	%r13, %rax
    000001ce: 	addq	%r12, %rax
    000001d1: 	je	.Ltmp3138 # Offset: 465
    000001d3: 	testq	%r13, %r13
    000001d6: 	je	.Ltmp3139 # Offset: 470
.Ltmp3138:
    000001dc: 	movq	%r12, 0x10(%rsp)
    000001e1: 	cmpq	$0xf, %r12
    000001e5: 	ja	.Ltmp3140 # Offset: 485
    000001eb: 	cmpq	$0x1, %r12
    000001ef: 	jne	.Ltmp3141 # Offset: 495
    000001f5: 	movzbl	(%r13), %eax
    000001fa: 	movb	%al, 0x10(%rbx)
.Ltmp3145:
    000001fd: 	movq	%r12, 0x8(%rbx)
    00000201: 	movb	$0x0, (%rdi,%r12)
    00000206: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000020d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000214: 	addq	$0x20, %rax
    00000218: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000021f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000226: 	je	.Ltmp3142 # Offset: 550
.Ltmp3146:
    0000022c: 	movq	-0x20(%rax), %rbp
    00000230: 	callq	clock@PLT # Offset: 560
    00000235: 	movq	%rax, end_time(%rip)
    0000023c: 	movq	0x18(%rsp), %rdx
    00000241: 	subq	%fs:0x28, %rdx
    0000024a: 	jne	.Ltmp3143 # Offset: 586
    00000250: 	subq	start_time(%rip), %rax
    00000257: 	pxor	%xmm0, %xmm0
    0000025b: 	movq	%rbp, %rdi
    0000025e: 	cvtsi2sd	%rax, %xmm0
    00000263: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000026b: 	addq	$0x28, %rsp
    0000026f: 	popq	%rbx
    00000270: 	popq	%rbp
    00000271: 	popq	%r12
    00000273: 	popq	%r13
    00000275: 	popq	%r14
    00000277: 	popq	%r15
    00000279: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 633
.Ltmp3133:
    0000027e: 	xorl	%eax, %eax
    00000280: 	xorl	%edx, %edx
    00000282: 	jmp	.Ltmp3144 # Offset: 642
.Ltmp3140:
    00000287: 	movq	%rbx, %rdi
    0000028a: 	leaq	0x10(%rsp), %rsi
    0000028f: 	xorl	%edx, %edx
    00000291: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 657
    00000296: 	movq	%rax, (%rbx)
    00000299: 	movq	%rax, %rdi
    0000029c: 	movq	0x10(%rsp), %rax
    000002a1: 	movq	%rax, 0x10(%rbx)
.Ltmp3147:
    000002a5: 	movq	%r12, %rdx
    000002a8: 	movq	%r13, %rsi
    000002ab: 	callq	memcpy@PLT # Offset: 683
    000002b0: 	movq	0x10(%rsp), %r12
    000002b5: 	movq	(%rbx), %rdi
    000002b8: 	jmp	.Ltmp3145 # Offset: 696
.Ltmp3137:
    000002bd: 	movq	0x8(%rsp), %rsi
    000002c2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002c9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 713
    000002ce: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002d5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002dc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002e3: 	jne	.Ltmp3146 # Offset: 739
.Ltmp3142:
    000002e9: 	movq	-0x8(%rdx), %rax
    000002ed: 	addq	$0x200, %rax
    000002f3: 	jmp	.Ltmp3146 # Offset: 755
.Ltmp3141:
    000002f8: 	testq	%r12, %r12
    000002fb: 	je	.Ltmp3145 # Offset: 763
    00000301: 	jmp	.Ltmp3147 # Offset: 769
.Ltmp3143:
    00000303: 	callq	__stack_chk_fail@PLT # Offset: 771
.Ltmp3139:
    00000308: 	leaq	DATAat0x57008(%rip), %rdi
    0000030f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 783
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl28custom_multiply_shiftadd_126IlEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIh27custom_multiply_shiftadd_42IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIh27custom_multiply_shiftadd_42IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIh27custom_multiply_shiftadd_42IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 185
  State       : disassembled
  Address     : 0x25190
  Size        : 0x25d
  MaxSize     : 0x260
  Offset      : 0x25190
  Section     : .text
  Orc Section : .local.text._Z13test_constantIh27custom_multiply_shiftadd_42IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0184:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp3148 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x571d0(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp3151:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	nop # Size: 1
.Ltmp3149:
    00000060: 	movdqu	(%rax), %xmm0
    00000064: 	addq	$0x10, %rax
    00000068: 	movdqa	%xmm0, %xmm3
    0000006c: 	paddb	%xmm0, %xmm3
    00000070: 	movdqa	%xmm3, %xmm2
    00000074: 	psubb	%xmm3, %xmm1
    00000078: 	paddb	%xmm3, %xmm2
    0000007c: 	paddb	%xmm2, %xmm0
    00000080: 	paddb	%xmm0, %xmm0
    00000084: 	paddb	%xmm0, %xmm0
    00000088: 	paddb	%xmm0, %xmm0
    0000008c: 	paddb	%xmm0, %xmm2
    00000090: 	paddb	%xmm2, %xmm1
    00000094: 	cmpq	%rax, %rbx
    00000097: 	jne	.Ltmp3149 # Offset: 151
    00000099: 	movdqa	%xmm1, %xmm0
    0000009d: 	pxor	%xmm4, %xmm4
    000000a1: 	movl	%esi, %edx
    000000a3: 	psrldq	$0x8, %xmm0
    000000a8: 	shll	$0x7, %edx
    000000ab: 	paddb	%xmm0, %xmm1
    000000af: 	psadbw	%xmm4, %xmm1
    000000b3: 	movd	%xmm1, %eax
    000000b7: 	cmpb	%al, %dl
    000000b9: 	je	.Ltmp3150 # Offset: 185
    000000bb: 	movl	current_test(%rip), %edx
    000000c1: 	movq	%r12, %rsi
    000000c4: 	movl	$0x1, %edi
    000000c9: 	xorl	%eax, %eax
    000000cb: 	addl	$0x1, %r14d
    000000cf: 	callq	__printf_chk@PLT # Offset: 207
    000000d4: 	movl	iterations(%rip), %ecx
    000000da: 	cmpl	%ecx, %r14d
    000000dd: 	jge	.Ltmp3148 # Offset: 221
    000000df: 	cvttsd2si	init_value(%rip), %esi
    000000e7: 	jmp	.Ltmp3151 # Offset: 231
    000000ec: 	nopl	(%rax) # Size: 4
.Ltmp3150:
    000000f0: 	addl	$0x1, %r14d
    000000f4: 	cmpl	%ecx, %r14d
    000000f7: 	jl	.Ltmp3151 # Offset: 247
.Ltmp3148:
    000000fd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000104: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000010b: 	subq	$0x20, %rax
    0000010f: 	cmpq	%rax, %rbx
    00000112: 	je	.Ltmp3152 # Offset: 274
    00000118: 	leaq	0x10(%rbx), %rdi
    0000011c: 	movq	0x8(%r13), %r12
    00000120: 	movq	%rdi, (%rbx)
    00000123: 	movq	(%r13), %rbp
    00000127: 	movq	%rbp, %rax
    0000012a: 	addq	%r12, %rax
    0000012d: 	je	.Ltmp3153 # Offset: 301
    0000012f: 	testq	%rbp, %rbp
    00000132: 	je	.Ltmp3154 # Offset: 306
.Ltmp3153:
    00000138: 	movq	%r12, (%rsp)
    0000013c: 	cmpq	$0xf, %r12
    00000140: 	ja	.Ltmp3155 # Offset: 320
    00000146: 	cmpq	$0x1, %r12
    0000014a: 	jne	.Ltmp3156 # Offset: 330
    00000150: 	movzbl	(%rbp), %eax
    00000154: 	movb	%al, 0x10(%rbx)
.Ltmp3159:
    00000157: 	movq	%r12, 0x8(%rbx)
    0000015b: 	movb	$0x0, (%rdi,%r12)
    00000160: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000167: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000016e: 	addq	$0x20, %rax
    00000172: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000179: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000180: 	je	.Ltmp3157 # Offset: 384
.Ltmp3160:
    00000186: 	movq	-0x20(%rax), %rbp
    0000018a: 	callq	clock@PLT # Offset: 394
    0000018f: 	movq	%rax, end_time(%rip)
    00000196: 	movq	0x8(%rsp), %rdx
    0000019b: 	subq	%fs:0x28, %rdx
    000001a4: 	jne	.Ltmp3158 # Offset: 420
    000001aa: 	subq	start_time(%rip), %rax
    000001b1: 	pxor	%xmm0, %xmm0
    000001b5: 	movq	%rbp, %rdi
    000001b8: 	cvtsi2sd	%rax, %xmm0
    000001bd: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001c5: 	addq	$0x10, %rsp
    000001c9: 	popq	%rbx
    000001ca: 	popq	%rbp
    000001cb: 	popq	%r12
    000001cd: 	popq	%r13
    000001cf: 	popq	%r14
    000001d1: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 465
.Ltmp3155:
    000001d6: 	movq	%rbx, %rdi
    000001d9: 	movq	%rsp, %rsi
    000001dc: 	xorl	%edx, %edx
    000001de: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 478
    000001e3: 	movq	%rax, (%rbx)
    000001e6: 	movq	%rax, %rdi
    000001e9: 	movq	(%rsp), %rax
    000001ed: 	movq	%rax, 0x10(%rbx)
.Ltmp3161:
    000001f1: 	movq	%r12, %rdx
    000001f4: 	movq	%rbp, %rsi
    000001f7: 	callq	memcpy@PLT # Offset: 503
    000001fc: 	movq	(%rsp), %r12
    00000200: 	movq	(%rbx), %rdi
    00000203: 	jmp	.Ltmp3159 # Offset: 515
.Ltmp3152:
    00000208: 	movq	%r13, %rsi
    0000020b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000212: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 530
    00000217: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000021e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000225: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000022c: 	jne	.Ltmp3160 # Offset: 556
.Ltmp3157:
    00000232: 	movq	-0x8(%rdx), %rax
    00000236: 	addq	$0x200, %rax
    0000023c: 	jmp	.Ltmp3160 # Offset: 572
.Ltmp3156:
    00000241: 	testq	%r12, %r12
    00000244: 	je	.Ltmp3159 # Offset: 580
    0000024a: 	jmp	.Ltmp3161 # Offset: 586
.Ltmp3158:
    0000024c: 	callq	__stack_chk_fail@PLT # Offset: 588
.Ltmp3154:
    00000251: 	leaq	DATAat0x57008(%rip), %rdi
    00000258: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 600
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIh27custom_multiply_shiftadd_42IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIa27custom_multiply_shiftadd_42IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIa27custom_multiply_shiftadd_42IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIa27custom_multiply_shiftadd_42IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 186
  State       : disassembled
  Address     : 0x253f0
  Size        : 0x25d
  MaxSize     : 0x260
  Offset      : 0x253f0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIa27custom_multiply_shiftadd_42IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0185:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp3162 # Offset: 54
    0000003c: 	movsd	init_value(%rip), %xmm4
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x571d0(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp3165:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	nop # Size: 1
.Ltmp3163:
    00000060: 	movdqu	(%rax), %xmm0
    00000064: 	addq	$0x10, %rax
    00000068: 	movdqa	%xmm0, %xmm3
    0000006c: 	paddb	%xmm0, %xmm3
    00000070: 	movdqa	%xmm3, %xmm2
    00000074: 	psubb	%xmm3, %xmm1
    00000078: 	paddb	%xmm3, %xmm2
    0000007c: 	paddb	%xmm2, %xmm0
    00000080: 	paddb	%xmm0, %xmm0
    00000084: 	paddb	%xmm0, %xmm0
    00000088: 	paddb	%xmm0, %xmm0
    0000008c: 	paddb	%xmm0, %xmm2
    00000090: 	paddb	%xmm2, %xmm1
    00000094: 	cmpq	%rax, %rbx
    00000097: 	jne	.Ltmp3163 # Offset: 151
    00000099: 	movdqa	%xmm1, %xmm0
    0000009d: 	cvttsd2si	%xmm4, %edx
    000000a1: 	pxor	%xmm5, %xmm5
    000000a5: 	psrldq	$0x8, %xmm0
    000000aa: 	paddb	%xmm0, %xmm1
    000000ae: 	psadbw	%xmm5, %xmm1
    000000b2: 	movd	%xmm1, %eax
    000000b6: 	shll	$0x7, %edx
    000000b9: 	cmpb	%al, %dl
    000000bb: 	je	.Ltmp3164 # Offset: 187
    000000bd: 	movl	current_test(%rip), %edx
    000000c3: 	movq	%r12, %rsi
    000000c6: 	movl	$0x1, %edi
    000000cb: 	xorl	%eax, %eax
    000000cd: 	addl	$0x1, %r14d
    000000d1: 	callq	__printf_chk@PLT # Offset: 209
    000000d6: 	movl	iterations(%rip), %ecx
    000000dc: 	cmpl	%ecx, %r14d
    000000df: 	jge	.Ltmp3162 # Offset: 223
    000000e1: 	movsd	init_value(%rip), %xmm4
    000000e9: 	jmp	.Ltmp3165 # Offset: 233
    000000ee: 	nop # Size: 2
.Ltmp3164:
    000000f0: 	addl	$0x1, %r14d
    000000f4: 	cmpl	%ecx, %r14d
    000000f7: 	jl	.Ltmp3165 # Offset: 247
.Ltmp3162:
    000000fd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000104: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000010b: 	subq	$0x20, %rax
    0000010f: 	cmpq	%rax, %rbx
    00000112: 	je	.Ltmp3166 # Offset: 274
    00000118: 	leaq	0x10(%rbx), %rdi
    0000011c: 	movq	0x8(%r13), %r12
    00000120: 	movq	%rdi, (%rbx)
    00000123: 	movq	(%r13), %rbp
    00000127: 	movq	%rbp, %rax
    0000012a: 	addq	%r12, %rax
    0000012d: 	je	.Ltmp3167 # Offset: 301
    0000012f: 	testq	%rbp, %rbp
    00000132: 	je	.Ltmp3168 # Offset: 306
.Ltmp3167:
    00000138: 	movq	%r12, (%rsp)
    0000013c: 	cmpq	$0xf, %r12
    00000140: 	ja	.Ltmp3169 # Offset: 320
    00000146: 	cmpq	$0x1, %r12
    0000014a: 	jne	.Ltmp3170 # Offset: 330
    00000150: 	movzbl	(%rbp), %eax
    00000154: 	movb	%al, 0x10(%rbx)
.Ltmp3173:
    00000157: 	movq	%r12, 0x8(%rbx)
    0000015b: 	movb	$0x0, (%rdi,%r12)
    00000160: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000167: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000016e: 	addq	$0x20, %rax
    00000172: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000179: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000180: 	je	.Ltmp3171 # Offset: 384
.Ltmp3174:
    00000186: 	movq	-0x20(%rax), %rbp
    0000018a: 	callq	clock@PLT # Offset: 394
    0000018f: 	movq	%rax, end_time(%rip)
    00000196: 	movq	0x8(%rsp), %rdx
    0000019b: 	subq	%fs:0x28, %rdx
    000001a4: 	jne	.Ltmp3172 # Offset: 420
    000001aa: 	subq	start_time(%rip), %rax
    000001b1: 	pxor	%xmm0, %xmm0
    000001b5: 	movq	%rbp, %rdi
    000001b8: 	cvtsi2sd	%rax, %xmm0
    000001bd: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001c5: 	addq	$0x10, %rsp
    000001c9: 	popq	%rbx
    000001ca: 	popq	%rbp
    000001cb: 	popq	%r12
    000001cd: 	popq	%r13
    000001cf: 	popq	%r14
    000001d1: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 465
.Ltmp3169:
    000001d6: 	movq	%rbx, %rdi
    000001d9: 	movq	%rsp, %rsi
    000001dc: 	xorl	%edx, %edx
    000001de: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 478
    000001e3: 	movq	%rax, (%rbx)
    000001e6: 	movq	%rax, %rdi
    000001e9: 	movq	(%rsp), %rax
    000001ed: 	movq	%rax, 0x10(%rbx)
.Ltmp3175:
    000001f1: 	movq	%r12, %rdx
    000001f4: 	movq	%rbp, %rsi
    000001f7: 	callq	memcpy@PLT # Offset: 503
    000001fc: 	movq	(%rsp), %r12
    00000200: 	movq	(%rbx), %rdi
    00000203: 	jmp	.Ltmp3173 # Offset: 515
.Ltmp3166:
    00000208: 	movq	%r13, %rsi
    0000020b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000212: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 530
    00000217: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000021e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000225: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000022c: 	jne	.Ltmp3174 # Offset: 556
.Ltmp3171:
    00000232: 	movq	-0x8(%rdx), %rax
    00000236: 	addq	$0x200, %rax
    0000023c: 	jmp	.Ltmp3174 # Offset: 572
.Ltmp3170:
    00000241: 	testq	%r12, %r12
    00000244: 	je	.Ltmp3173 # Offset: 580
    0000024a: 	jmp	.Ltmp3175 # Offset: 586
.Ltmp3172:
    0000024c: 	callq	__stack_chk_fail@PLT # Offset: 588
.Ltmp3168:
    00000251: 	leaq	DATAat0x57008(%rip), %rdi
    00000258: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 600
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIa27custom_multiply_shiftadd_42IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIh26custom_multiply_shiftadd_2IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIh26custom_multiply_shiftadd_2IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIh26custom_multiply_shiftadd_2IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 187
  State       : disassembled
  Address     : 0x25650
  Size        : 0x27d
  MaxSize     : 0x280
  Offset      : 0x25650
  Section     : .text
  Orc Section : .local.text._Z13test_constantIh26custom_multiply_shiftadd_2IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0186:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp3176 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x571d0(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp3179:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm3, %xmm3
    0000005f: 	nop # Size: 1
.Ltmp3177:
    00000060: 	movdqu	(%rax), %xmm4
    00000064: 	addq	$0x10, %rax
    00000068: 	movdqa	%xmm4, %xmm1
    0000006c: 	paddb	%xmm4, %xmm1
    00000070: 	movdqa	%xmm1, %xmm0
    00000074: 	paddb	%xmm1, %xmm0
    00000078: 	paddb	%xmm4, %xmm1
    0000007c: 	paddb	%xmm0, %xmm0
    00000080: 	paddb	%xmm1, %xmm1
    00000084: 	movdqa	%xmm0, %xmm2
    00000088: 	paddb	%xmm0, %xmm2
    0000008c: 	paddb	%xmm2, %xmm2
    00000090: 	paddb	%xmm2, %xmm2
    00000094: 	paddb	%xmm2, %xmm3
    00000098: 	movdqa	%xmm1, %xmm2
    0000009c: 	paddb	%xmm1, %xmm2
    000000a0: 	paddb	%xmm2, %xmm2
    000000a4: 	paddb	%xmm2, %xmm2
    000000a8: 	paddb	%xmm2, %xmm0
    000000ac: 	paddb	%xmm1, %xmm0
    000000b0: 	psubb	%xmm0, %xmm3
    000000b4: 	cmpq	%rax, %rbx
    000000b7: 	jne	.Ltmp3177 # Offset: 183
    000000b9: 	movdqa	%xmm3, %xmm0
    000000bd: 	pxor	%xmm5, %xmm5
    000000c1: 	movl	%esi, %edx
    000000c3: 	psrldq	$0x8, %xmm0
    000000c8: 	shll	$0x7, %edx
    000000cb: 	paddb	%xmm0, %xmm3
    000000cf: 	psadbw	%xmm5, %xmm3
    000000d3: 	movd	%xmm3, %eax
    000000d7: 	cmpb	%al, %dl
    000000d9: 	je	.Ltmp3178 # Offset: 217
    000000db: 	movl	current_test(%rip), %edx
    000000e1: 	movq	%r12, %rsi
    000000e4: 	movl	$0x1, %edi
    000000e9: 	xorl	%eax, %eax
    000000eb: 	addl	$0x1, %r14d
    000000ef: 	callq	__printf_chk@PLT # Offset: 239
    000000f4: 	movl	iterations(%rip), %ecx
    000000fa: 	cmpl	%ecx, %r14d
    000000fd: 	jge	.Ltmp3176 # Offset: 253
    000000ff: 	cvttsd2si	init_value(%rip), %esi
    00000107: 	jmp	.Ltmp3179 # Offset: 263
    0000010c: 	nopl	(%rax) # Size: 4
.Ltmp3178:
    00000110: 	addl	$0x1, %r14d
    00000114: 	cmpl	%ecx, %r14d
    00000117: 	jl	.Ltmp3179 # Offset: 279
.Ltmp3176:
    0000011d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000124: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000012b: 	subq	$0x20, %rax
    0000012f: 	cmpq	%rax, %rbx
    00000132: 	je	.Ltmp3180 # Offset: 306
    00000138: 	leaq	0x10(%rbx), %rdi
    0000013c: 	movq	0x8(%r13), %r12
    00000140: 	movq	%rdi, (%rbx)
    00000143: 	movq	(%r13), %rbp
    00000147: 	movq	%rbp, %rax
    0000014a: 	addq	%r12, %rax
    0000014d: 	je	.Ltmp3181 # Offset: 333
    0000014f: 	testq	%rbp, %rbp
    00000152: 	je	.Ltmp3182 # Offset: 338
.Ltmp3181:
    00000158: 	movq	%r12, (%rsp)
    0000015c: 	cmpq	$0xf, %r12
    00000160: 	ja	.Ltmp3183 # Offset: 352
    00000166: 	cmpq	$0x1, %r12
    0000016a: 	jne	.Ltmp3184 # Offset: 362
    00000170: 	movzbl	(%rbp), %eax
    00000174: 	movb	%al, 0x10(%rbx)
.Ltmp3187:
    00000177: 	movq	%r12, 0x8(%rbx)
    0000017b: 	movb	$0x0, (%rdi,%r12)
    00000180: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000187: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000018e: 	addq	$0x20, %rax
    00000192: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000199: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001a0: 	je	.Ltmp3185 # Offset: 416
.Ltmp3188:
    000001a6: 	movq	-0x20(%rax), %rbp
    000001aa: 	callq	clock@PLT # Offset: 426
    000001af: 	movq	%rax, end_time(%rip)
    000001b6: 	movq	0x8(%rsp), %rdx
    000001bb: 	subq	%fs:0x28, %rdx
    000001c4: 	jne	.Ltmp3186 # Offset: 452
    000001ca: 	subq	start_time(%rip), %rax
    000001d1: 	pxor	%xmm0, %xmm0
    000001d5: 	movq	%rbp, %rdi
    000001d8: 	cvtsi2sd	%rax, %xmm0
    000001dd: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001e5: 	addq	$0x10, %rsp
    000001e9: 	popq	%rbx
    000001ea: 	popq	%rbp
    000001eb: 	popq	%r12
    000001ed: 	popq	%r13
    000001ef: 	popq	%r14
    000001f1: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 497
.Ltmp3183:
    000001f6: 	movq	%rbx, %rdi
    000001f9: 	movq	%rsp, %rsi
    000001fc: 	xorl	%edx, %edx
    000001fe: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 510
    00000203: 	movq	%rax, (%rbx)
    00000206: 	movq	%rax, %rdi
    00000209: 	movq	(%rsp), %rax
    0000020d: 	movq	%rax, 0x10(%rbx)
.Ltmp3189:
    00000211: 	movq	%r12, %rdx
    00000214: 	movq	%rbp, %rsi
    00000217: 	callq	memcpy@PLT # Offset: 535
    0000021c: 	movq	(%rsp), %r12
    00000220: 	movq	(%rbx), %rdi
    00000223: 	jmp	.Ltmp3187 # Offset: 547
.Ltmp3180:
    00000228: 	movq	%r13, %rsi
    0000022b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000232: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 562
    00000237: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000023e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000245: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000024c: 	jne	.Ltmp3188 # Offset: 588
.Ltmp3185:
    00000252: 	movq	-0x8(%rdx), %rax
    00000256: 	addq	$0x200, %rax
    0000025c: 	jmp	.Ltmp3188 # Offset: 604
.Ltmp3184:
    00000261: 	testq	%r12, %r12
    00000264: 	je	.Ltmp3187 # Offset: 612
    0000026a: 	jmp	.Ltmp3189 # Offset: 618
.Ltmp3186:
    0000026c: 	callq	__stack_chk_fail@PLT # Offset: 620
.Ltmp3182:
    00000271: 	leaq	DATAat0x57008(%rip), %rdi
    00000278: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 632
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIh26custom_multiply_shiftadd_2IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z11TestOneTypeIhEvv" after disassembly {
  Number      : 188
  State       : disassembled
  Address     : 0x258d0
  Size        : 0x5194
  MaxSize     : 0x51a0
  Offset      : 0x258d0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIhEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0187:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0x18, %rsp
    0000002a: 	leaq	DATAat0x57a27(%rip), %rbx
    00000031: 	leaq	"_ZL7gLabels/1"(%rip), %r15
    00000038: 	movq	%rbx, %rsi
    0000003b: 	movq	%fs:0x28, %rax
    00000044: 	movq	%rax, 0x2008(%rsp)
    0000004c: 	xorl	%eax, %eax
    0000004e: 	leaq	0x40(%rsp), %r14
    00000053: 	leaq	0xc0(%rsp), %rbp
    0000005b: 	movq	%r14, %rdi
    0000005e: 	leaq	0xa0(%rsp), %r12
    00000066: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 102
    0000006b: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm7
    00000073: 	leaq	0x20(%rsp), %rsi
    00000078: 	movq	%r15, %rdi
    0000007b: 	movaps	%xmm7, 0x20(%rsp)
    00000080: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm7
    00000088: 	movaps	%xmm7, 0x30(%rsp)
    0000008d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 141
    00000092: 	movl	$0x3e8, %ecx
    00000097: 	movq	%rbp, %rdi
    0000009a: 	movq	%rbx, %rsi
    0000009d: 	cvttsd2si	init_value(%rip), %eax
    000000a5: 	movabsq	$0x101010101010101, %rdx
    000000af: 	movzbl	%al, %eax
    000000b2: 	imulq	%rdx, %rax
    000000b6: 	rep		stosq	%rax, %es:(%rdi)
    000000b9: 	movq	%r12, %rdi
    000000bc: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 188
    000000c1: 	movq	0xa0(%rsp), %rdi
    000000c9: 	leaq	0xb0(%rsp), %r13
    000000d1: 	cmpq	%r13, %rdi
    000000d4: 	je	.Ltmp3190 # Offset: 212
    000000d6: 	movq	0xb0(%rsp), %rax
    000000de: 	leaq	0x1(%rax), %rsi
    000000e2: 	callq	_ZdlPvm@PLT # Offset: 226
.Ltmp3190:
    000000e7: 	movq	%rbx, %rsi
    000000ea: 	movq	%r12, %rdi
    000000ed: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 237
    000000f2: 	movq	0xa0(%rsp), %rdi
    000000fa: 	cmpq	%r13, %rdi
    000000fd: 	je	.Ltmp3191 # Offset: 253
    000000ff: 	movq	0xb0(%rsp), %rax
    00000107: 	leaq	0x1(%rax), %rsi
    0000010b: 	callq	_ZdlPvm@PLT # Offset: 267
.Ltmp3191:
    00000110: 	movq	%rbx, %rsi
    00000113: 	movq	%r12, %rdi
    00000116: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 278
    0000011b: 	movq	0xa0(%rsp), %rdi
    00000123: 	cmpq	%r13, %rdi
    00000126: 	je	.Ltmp3192 # Offset: 294
    00000128: 	movq	0xb0(%rsp), %rax
    00000130: 	leaq	0x1(%rax), %rsi
    00000134: 	callq	_ZdlPvm@PLT # Offset: 308
.Ltmp3192:
    00000139: 	movq	%rbx, %rsi
    0000013c: 	movq	%r12, %rdi
    0000013f: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 319
    00000144: 	movq	0xa0(%rsp), %rdi
    0000014c: 	cmpq	%r13, %rdi
    0000014f: 	je	.Ltmp3193 # Offset: 335
    00000151: 	movq	0xb0(%rsp), %rax
    00000159: 	leaq	0x1(%rax), %rsi
    0000015d: 	callq	_ZdlPvm@PLT # Offset: 349
.Ltmp3193:
    00000162: 	movq	%rbx, %rsi
    00000165: 	movq	%r12, %rdi
    00000168: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 360
    0000016d: 	movq	0xa0(%rsp), %rdi
    00000175: 	cmpq	%r13, %rdi
    00000178: 	je	.Ltmp3194 # Offset: 376
    0000017a: 	movq	0xb0(%rsp), %rax
    00000182: 	leaq	0x1(%rax), %rsi
    00000186: 	callq	_ZdlPvm@PLT # Offset: 390
.Ltmp3194:
    0000018b: 	movq	%rbx, %rsi
    0000018e: 	movq	%r12, %rdi
    00000191: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 401
    00000196: 	movq	0xa0(%rsp), %rdi
    0000019e: 	cmpq	%r13, %rdi
    000001a1: 	je	.Ltmp3195 # Offset: 417
    000001a3: 	movq	0xb0(%rsp), %rax
    000001ab: 	leaq	0x1(%rax), %rsi
    000001af: 	callq	_ZdlPvm@PLT # Offset: 431
.Ltmp3195:
    000001b4: 	movq	%rbx, %rsi
    000001b7: 	movq	%r12, %rdi
    000001ba: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 442
    000001bf: 	movq	0xa0(%rsp), %rdi
    000001c7: 	cmpq	%r13, %rdi
    000001ca: 	je	.Ltmp3196 # Offset: 458
    000001cc: 	movq	0xb0(%rsp), %rax
    000001d4: 	leaq	0x1(%rax), %rsi
    000001d8: 	callq	_ZdlPvm@PLT # Offset: 472
.Ltmp3196:
    000001dd: 	movq	%rbx, %rsi
    000001e0: 	movq	%r12, %rdi
    000001e3: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 483
    000001e8: 	movq	0xa0(%rsp), %rdi
    000001f0: 	cmpq	%r13, %rdi
    000001f3: 	je	.Ltmp3197 # Offset: 499
    000001f5: 	movq	0xb0(%rsp), %rax
    000001fd: 	leaq	0x1(%rax), %rsi
    00000201: 	callq	_ZdlPvm@PLT # Offset: 513
.Ltmp3197:
    00000206: 	movq	%rbx, %rsi
    00000209: 	movq	%r12, %rdi
    0000020c: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 524
    00000211: 	movq	0xa0(%rsp), %rdi
    00000219: 	cmpq	%r13, %rdi
    0000021c: 	je	.Ltmp3198 # Offset: 540
    0000021e: 	movq	0xb0(%rsp), %rax
    00000226: 	leaq	0x1(%rax), %rsi
    0000022a: 	callq	_ZdlPvm@PLT # Offset: 554
.Ltmp3198:
    0000022f: 	movq	%rbx, %rsi
    00000232: 	movq	%r12, %rdi
    00000235: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 565
    0000023a: 	movq	0xa0(%rsp), %rdi
    00000242: 	cmpq	%r13, %rdi
    00000245: 	je	.Ltmp3199 # Offset: 581
    00000247: 	movq	0xb0(%rsp), %rax
    0000024f: 	leaq	0x1(%rax), %rsi
    00000253: 	callq	_ZdlPvm@PLT # Offset: 595
.Ltmp3199:
    00000258: 	movq	%rbx, %rsi
    0000025b: 	movq	%r12, %rdi
    0000025e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 606
    00000263: 	movq	0xa0(%rsp), %rdi
    0000026b: 	cmpq	%r13, %rdi
    0000026e: 	je	.Ltmp3200 # Offset: 622
    00000270: 	movq	0xb0(%rsp), %rax
    00000278: 	leaq	0x1(%rax), %rsi
    0000027c: 	callq	_ZdlPvm@PLT # Offset: 636
.Ltmp3200:
    00000281: 	leaq	DATAat0x571e0(%rip), %rdx
    00000288: 	movq	%r14, %rsi
    0000028b: 	movq	%r12, %rdi
    0000028e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 654
    00000293: 	callq	clock@PLT # Offset: 659
    00000298: 	movl	iterations(%rip), %ecx
    0000029e: 	movl	$0x0, (%rsp)
    000002a5: 	leaq	0x2000(%rsp), %rbx
    000002ad: 	movq	%rax, start_time(%rip)
    000002b4: 	testl	%ecx, %ecx
    000002b6: 	jle	.Ltmp3201 # Offset: 694
    000002b8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3204:
    000002c0: 	movq	%rbp, %rax
    000002c3: 	pxor	%xmm1, %xmm1
    000002c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3202:
    000002d0: 	movdqa	(%rax), %xmm0
    000002d4: 	addq	$0x10, %rax
    000002d8: 	paddb	%xmm0, %xmm0
    000002dc: 	paddb	%xmm0, %xmm1
    000002e0: 	cmpq	%rax, %rbx
    000002e3: 	jne	.Ltmp3202 # Offset: 739
    000002e5: 	movdqa	%xmm1, %xmm0
    000002e9: 	cvttsd2si	init_value(%rip), %edx
    000002f1: 	psrldq	$0x8, %xmm0
    000002f6: 	paddb	%xmm0, %xmm1
    000002fa: 	pxor	%xmm0, %xmm0
    000002fe: 	psadbw	%xmm0, %xmm1
    00000302: 	movd	%xmm1, %eax
    00000306: 	shll	$0x7, %edx
    00000309: 	cmpb	%al, %dl
    0000030b: 	je	.Ltmp3203 # Offset: 779
    0000030d: 	movl	current_test(%rip), %edx
    00000313: 	leaq	DATAat0x571d0(%rip), %rsi
    0000031a: 	movl	$0x1, %edi
    0000031f: 	xorl	%eax, %eax
    00000321: 	callq	__printf_chk@PLT # Offset: 801
    00000326: 	movl	iterations(%rip), %ecx
.Ltmp3203:
    0000032c: 	addl	$0x1, (%rsp)
    00000330: 	movl	(%rsp), %eax
    00000333: 	cmpl	%ecx, %eax
    00000335: 	jl	.Ltmp3204 # Offset: 821
.Ltmp3201:
    00000337: 	movq	%r12, %rsi
    0000033a: 	movq	%r15, %rdi
    0000033d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 829
    00000342: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000349: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000350: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000357: 	je	.Ltmp3205 # Offset: 855
.Ltmp3549:
    0000035d: 	movq	-0x20(%rax), %rbx
    00000361: 	callq	clock@PLT # Offset: 865
    00000366: 	pxor	%xmm0, %xmm0
    0000036a: 	movq	%rax, end_time(%rip)
    00000371: 	movq	%rbx, %rdi
    00000374: 	subq	start_time(%rip), %rax
    0000037b: 	cvtsi2sd	%rax, %xmm0
    00000380: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000388: 	callq	_Z13record_resultdPKc # Offset: 904
    0000038d: 	movq	0xa0(%rsp), %rdi
    00000395: 	cmpq	%r13, %rdi
    00000398: 	je	.Ltmp3206 # Offset: 920
    0000039a: 	movq	0xb0(%rsp), %rax
    000003a2: 	leaq	0x1(%rax), %rsi
    000003a6: 	callq	_ZdlPvm@PLT # Offset: 934
.Ltmp3206:
    000003ab: 	leaq	DATAat0x571f1(%rip), %rdx
    000003b2: 	movq	%r14, %rsi
    000003b5: 	movq	%r12, %rdi
    000003b8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 952
    000003bd: 	callq	clock@PLT # Offset: 957
    000003c2: 	movl	iterations(%rip), %ecx
    000003c8: 	movl	$0x0, (%rsp)
    000003cf: 	leaq	0x2000(%rsp), %rbx
    000003d7: 	movq	%rax, start_time(%rip)
    000003de: 	testl	%ecx, %ecx
    000003e0: 	jle	.Ltmp3207 # Offset: 992
    000003e2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3210:
    000003e8: 	movq	%rbp, %rax
    000003eb: 	pxor	%xmm1, %xmm1
    000003ef: 	nop # Size: 1
.Ltmp3208:
    000003f0: 	movdqa	(%rax), %xmm0
    000003f4: 	addq	$0x10, %rax
    000003f8: 	paddb	%xmm0, %xmm0
    000003fc: 	paddb	%xmm0, %xmm1
    00000400: 	cmpq	%rax, %rbx
    00000403: 	jne	.Ltmp3208 # Offset: 1027
    00000405: 	movdqa	%xmm1, %xmm0
    00000409: 	cvttsd2si	init_value(%rip), %edx
    00000411: 	psrldq	$0x8, %xmm0
    00000416: 	paddb	%xmm0, %xmm1
    0000041a: 	pxor	%xmm0, %xmm0
    0000041e: 	psadbw	%xmm0, %xmm1
    00000422: 	movd	%xmm1, %eax
    00000426: 	shll	$0x7, %edx
    00000429: 	cmpb	%al, %dl
    0000042b: 	je	.Ltmp3209 # Offset: 1067
    0000042d: 	movl	current_test(%rip), %edx
    00000433: 	leaq	DATAat0x571d0(%rip), %rsi
    0000043a: 	movl	$0x1, %edi
    0000043f: 	xorl	%eax, %eax
    00000441: 	callq	__printf_chk@PLT # Offset: 1089
    00000446: 	movl	iterations(%rip), %ecx
.Ltmp3209:
    0000044c: 	addl	$0x1, (%rsp)
    00000450: 	movl	(%rsp), %eax
    00000453: 	cmpl	%ecx, %eax
    00000455: 	jl	.Ltmp3210 # Offset: 1109
.Ltmp3207:
    00000457: 	movq	%r12, %rsi
    0000045a: 	movq	%r15, %rdi
    0000045d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1117
    00000462: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000469: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000470: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000477: 	je	.Ltmp3211 # Offset: 1143
.Ltmp3600:
    0000047d: 	movq	-0x20(%rax), %rbx
    00000481: 	callq	clock@PLT # Offset: 1153
    00000486: 	pxor	%xmm0, %xmm0
    0000048a: 	movq	%rax, end_time(%rip)
    00000491: 	movq	%rbx, %rdi
    00000494: 	subq	start_time(%rip), %rax
    0000049b: 	cvtsi2sd	%rax, %xmm0
    000004a0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000004a8: 	callq	_Z13record_resultdPKc # Offset: 1192
    000004ad: 	movq	0xa0(%rsp), %rdi
    000004b5: 	cmpq	%r13, %rdi
    000004b8: 	je	.Ltmp3212 # Offset: 1208
    000004ba: 	movq	0xb0(%rsp), %rax
    000004c2: 	leaq	0x1(%rax), %rsi
    000004c6: 	callq	_ZdlPvm@PLT # Offset: 1222
.Ltmp3212:
    000004cb: 	leaq	DATAat0x571fb(%rip), %rdx
    000004d2: 	movq	%r14, %rsi
    000004d5: 	movq	%r12, %rdi
    000004d8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1240
    000004dd: 	callq	clock@PLT # Offset: 1245
    000004e2: 	movl	iterations(%rip), %ecx
    000004e8: 	movl	$0x0, (%rsp)
    000004ef: 	leaq	0x2000(%rsp), %rbx
    000004f7: 	movq	%rax, start_time(%rip)
    000004fe: 	testl	%ecx, %ecx
    00000500: 	jle	.Ltmp3213 # Offset: 1280
    00000502: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3216:
    00000508: 	movq	%rbp, %rax
    0000050b: 	pxor	%xmm1, %xmm1
    0000050f: 	nop # Size: 1
.Ltmp3214:
    00000510: 	movdqa	(%rax), %xmm0
    00000514: 	addq	$0x10, %rax
    00000518: 	paddb	%xmm0, %xmm0
    0000051c: 	paddb	%xmm0, %xmm1
    00000520: 	cmpq	%rax, %rbx
    00000523: 	jne	.Ltmp3214 # Offset: 1315
    00000525: 	movdqa	%xmm1, %xmm0
    00000529: 	cvttsd2si	init_value(%rip), %edx
    00000531: 	psrldq	$0x8, %xmm0
    00000536: 	paddb	%xmm0, %xmm1
    0000053a: 	pxor	%xmm0, %xmm0
    0000053e: 	psadbw	%xmm0, %xmm1
    00000542: 	movd	%xmm1, %eax
    00000546: 	shll	$0x7, %edx
    00000549: 	cmpb	%al, %dl
    0000054b: 	je	.Ltmp3215 # Offset: 1355
    0000054d: 	movl	current_test(%rip), %edx
    00000553: 	leaq	DATAat0x571d0(%rip), %rsi
    0000055a: 	movl	$0x1, %edi
    0000055f: 	xorl	%eax, %eax
    00000561: 	callq	__printf_chk@PLT # Offset: 1377
    00000566: 	movl	iterations(%rip), %ecx
.Ltmp3215:
    0000056c: 	addl	$0x1, (%rsp)
    00000570: 	movl	(%rsp), %eax
    00000573: 	cmpl	%ecx, %eax
    00000575: 	jl	.Ltmp3216 # Offset: 1397
.Ltmp3213:
    00000577: 	movq	%r12, %rsi
    0000057a: 	movq	%r15, %rdi
    0000057d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1405
    00000582: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000589: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000590: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000597: 	je	.Ltmp3217 # Offset: 1431
.Ltmp3599:
    0000059d: 	movq	-0x20(%rax), %rbx
    000005a1: 	callq	clock@PLT # Offset: 1441
    000005a6: 	pxor	%xmm0, %xmm0
    000005aa: 	movq	%rax, end_time(%rip)
    000005b1: 	movq	%rbx, %rdi
    000005b4: 	subq	start_time(%rip), %rax
    000005bb: 	cvtsi2sd	%rax, %xmm0
    000005c0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000005c8: 	callq	_Z13record_resultdPKc # Offset: 1480
    000005cd: 	movq	0xa0(%rsp), %rdi
    000005d5: 	cmpq	%r13, %rdi
    000005d8: 	je	.Ltmp3218 # Offset: 1496
    000005da: 	movq	0xb0(%rsp), %rax
    000005e2: 	leaq	0x1(%rax), %rsi
    000005e6: 	callq	_ZdlPvm@PLT # Offset: 1510
.Ltmp3218:
    000005eb: 	leaq	DATAat0x57211(%rip), %rdx
    000005f2: 	movq	%r14, %rsi
    000005f5: 	movq	%r12, %rdi
    000005f8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1528
    000005fd: 	movq	%r12, %rdx
    00000600: 	movl	$0x2, %esi
    00000605: 	movq	%rbp, %rdi
    00000608: 	callq	"_Z14test_variable1Ih24custom_multiply_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 1544
    0000060d: 	movq	0xa0(%rsp), %rdi
    00000615: 	cmpq	%r13, %rdi
    00000618: 	je	.Ltmp3219 # Offset: 1560
    0000061a: 	movq	0xb0(%rsp), %rax
    00000622: 	leaq	0x1(%rax), %rsi
    00000626: 	callq	_ZdlPvm@PLT # Offset: 1574
.Ltmp3219:
    0000062b: 	leaq	DATAat0x57229(%rip), %rdx
    00000632: 	movq	%r14, %rsi
    00000635: 	movq	%r12, %rdi
    00000638: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1592
    0000063d: 	callq	clock@PLT # Offset: 1597
    00000642: 	movl	iterations(%rip), %ecx
    00000648: 	movl	$0x0, (%rsp)
    0000064f: 	leaq	0x2000(%rsp), %rbx
    00000657: 	movq	%rax, start_time(%rip)
    0000065e: 	testl	%ecx, %ecx
    00000660: 	jle	.Ltmp3220 # Offset: 1632
    00000662: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3223:
    00000668: 	movq	%rbp, %rax
    0000066b: 	pxor	%xmm1, %xmm1
    0000066f: 	nop # Size: 1
.Ltmp3221:
    00000670: 	movdqa	(%rax), %xmm0
    00000674: 	addq	$0x10, %rax
    00000678: 	paddb	%xmm0, %xmm0
    0000067c: 	paddb	%xmm0, %xmm1
    00000680: 	cmpq	%rbx, %rax
    00000683: 	jne	.Ltmp3221 # Offset: 1667
    00000685: 	movdqa	%xmm1, %xmm0
    00000689: 	cvttsd2si	init_value(%rip), %edx
    00000691: 	psrldq	$0x8, %xmm0
    00000696: 	paddb	%xmm0, %xmm1
    0000069a: 	pxor	%xmm0, %xmm0
    0000069e: 	psadbw	%xmm0, %xmm1
    000006a2: 	movd	%xmm1, %eax
    000006a6: 	shll	$0x7, %edx
    000006a9: 	cmpb	%al, %dl
    000006ab: 	je	.Ltmp3222 # Offset: 1707
    000006ad: 	movl	current_test(%rip), %edx
    000006b3: 	leaq	DATAat0x571d0(%rip), %rsi
    000006ba: 	movl	$0x1, %edi
    000006bf: 	xorl	%eax, %eax
    000006c1: 	callq	__printf_chk@PLT # Offset: 1729
    000006c6: 	movl	iterations(%rip), %ecx
.Ltmp3222:
    000006cc: 	addl	$0x1, (%rsp)
    000006d0: 	movl	(%rsp), %eax
    000006d3: 	cmpl	%ecx, %eax
    000006d5: 	jl	.Ltmp3223 # Offset: 1749
.Ltmp3220:
    000006d7: 	movq	%r12, %rsi
    000006da: 	movq	%r15, %rdi
    000006dd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1757
    000006e2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000006e9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000006f0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000006f7: 	je	.Ltmp3224 # Offset: 1783
.Ltmp3598:
    000006fd: 	movq	-0x20(%rax), %rbx
    00000701: 	callq	clock@PLT # Offset: 1793
    00000706: 	pxor	%xmm0, %xmm0
    0000070a: 	movq	%rax, end_time(%rip)
    00000711: 	movq	%rbx, %rdi
    00000714: 	subq	start_time(%rip), %rax
    0000071b: 	cvtsi2sd	%rax, %xmm0
    00000720: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000728: 	callq	_Z13record_resultdPKc # Offset: 1832
    0000072d: 	movq	0xa0(%rsp), %rdi
    00000735: 	cmpq	%r13, %rdi
    00000738: 	je	.Ltmp3225 # Offset: 1848
    0000073a: 	movq	0xb0(%rsp), %rax
    00000742: 	leaq	0x1(%rax), %rsi
    00000746: 	callq	_ZdlPvm@PLT # Offset: 1862
.Ltmp3225:
    0000074b: 	leaq	DATAat0x57241(%rip), %rdx
    00000752: 	movq	%r14, %rsi
    00000755: 	movq	%r12, %rdi
    00000758: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1880
    0000075d: 	movq	%r12, %rsi
    00000760: 	movq	%rbp, %rdi
    00000763: 	callq	"_Z13test_constantIh26custom_multiply_shiftadd_2IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 1891
    00000768: 	movq	0xa0(%rsp), %rdi
    00000770: 	cmpq	%r13, %rdi
    00000773: 	je	.Ltmp3226 # Offset: 1907
    00000775: 	movq	0xb0(%rsp), %rax
    0000077d: 	leaq	0x1(%rax), %rsi
    00000781: 	callq	_ZdlPvm@PLT # Offset: 1921
.Ltmp3226:
    00000786: 	leaq	DATAat0x57251(%rip), %rdx
    0000078d: 	movq	%r14, %rsi
    00000790: 	movq	%r12, %rdi
    00000793: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1939
    00000798: 	callq	clock@PLT # Offset: 1944
    0000079d: 	movl	iterations(%rip), %edx
    000007a3: 	movl	$0x0, (%rsp)
    000007aa: 	leaq	0x2000(%rsp), %rbx
    000007b2: 	movq	%rax, start_time(%rip)
    000007b9: 	testl	%edx, %edx
    000007bb: 	jle	.Ltmp3227 # Offset: 1979
    000007bd: 	nopl	(%rax) # Size: 3
.Ltmp3230:
    000007c0: 	movq	%rbp, %rax
    000007c3: 	pxor	%xmm1, %xmm1
    000007c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3228:
    000007d0: 	movdqa	(%rax), %xmm0
    000007d4: 	addq	$0x10, %rax
    000007d8: 	paddb	%xmm0, %xmm0
    000007dc: 	paddb	%xmm0, %xmm0
    000007e0: 	paddb	%xmm0, %xmm0
    000007e4: 	paddb	%xmm0, %xmm1
    000007e8: 	cmpq	%rax, %rbx
    000007eb: 	jne	.Ltmp3228 # Offset: 2027
    000007ed: 	movdqa	%xmm1, %xmm0
    000007f1: 	psrldq	$0x8, %xmm0
    000007f6: 	paddb	%xmm0, %xmm1
    000007fa: 	pxor	%xmm0, %xmm0
    000007fe: 	psadbw	%xmm0, %xmm1
    00000802: 	movd	%xmm1, %eax
    00000806: 	testb	%al, %al
    00000808: 	jne	.Ltmp3229 # Offset: 2056
.Ltmp3548:
    0000080e: 	addl	$0x1, (%rsp)
    00000812: 	movl	(%rsp), %eax
    00000815: 	cmpl	%edx, %eax
    00000817: 	jl	.Ltmp3230 # Offset: 2071
.Ltmp3227:
    00000819: 	movq	%r12, %rsi
    0000081c: 	movq	%r15, %rdi
    0000081f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2079
    00000824: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000082b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000832: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000839: 	je	.Ltmp3231 # Offset: 2105
.Ltmp3597:
    0000083f: 	movq	-0x20(%rax), %rbx
    00000843: 	callq	clock@PLT # Offset: 2115
    00000848: 	pxor	%xmm0, %xmm0
    0000084c: 	movq	%rax, end_time(%rip)
    00000853: 	movq	%rbx, %rdi
    00000856: 	subq	start_time(%rip), %rax
    0000085d: 	cvtsi2sd	%rax, %xmm0
    00000862: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000086a: 	callq	_Z13record_resultdPKc # Offset: 2154
    0000086f: 	movq	0xa0(%rsp), %rdi
    00000877: 	cmpq	%r13, %rdi
    0000087a: 	je	.Ltmp3232 # Offset: 2170
    0000087c: 	movq	0xb0(%rsp), %rax
    00000884: 	leaq	0x1(%rax), %rsi
    00000888: 	callq	_ZdlPvm@PLT # Offset: 2184
.Ltmp3232:
    0000088d: 	leaq	DATAat0x57262(%rip), %rdx
    00000894: 	movq	%r14, %rsi
    00000897: 	movq	%r12, %rdi
    0000089a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2202
    0000089f: 	movq	%r12, %rdx
    000008a2: 	movl	$0x8, %esi
    000008a7: 	movq	%rbp, %rdi
    000008aa: 	callq	"_Z14test_variable1Ih24custom_multiply_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 2218
    000008af: 	movq	0xa0(%rsp), %rdi
    000008b7: 	cmpq	%r13, %rdi
    000008ba: 	je	.Ltmp3233 # Offset: 2234
    000008bc: 	movq	0xb0(%rsp), %rax
    000008c4: 	leaq	0x1(%rax), %rsi
    000008c8: 	callq	_ZdlPvm@PLT # Offset: 2248
.Ltmp3233:
    000008cd: 	leaq	DATAat0x5727a(%rip), %rdx
    000008d4: 	movq	%r14, %rsi
    000008d7: 	movq	%r12, %rdi
    000008da: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2266
    000008df: 	callq	clock@PLT # Offset: 2271
    000008e4: 	movl	iterations(%rip), %edx
    000008ea: 	movl	$0x0, (%rsp)
    000008f1: 	leaq	0x2000(%rsp), %rbx
    000008f9: 	movq	%rax, start_time(%rip)
    00000900: 	testl	%edx, %edx
    00000902: 	jle	.Ltmp3234 # Offset: 2306
    00000904: 	nopl	(%rax) # Size: 4
.Ltmp3237:
    00000908: 	movq	%rbp, %rax
    0000090b: 	pxor	%xmm1, %xmm1
    0000090f: 	nop # Size: 1
.Ltmp3235:
    00000910: 	movdqa	(%rax), %xmm0
    00000914: 	addq	$0x10, %rax
    00000918: 	paddb	%xmm0, %xmm0
    0000091c: 	paddb	%xmm0, %xmm0
    00000920: 	paddb	%xmm0, %xmm0
    00000924: 	paddb	%xmm0, %xmm1
    00000928: 	cmpq	%rbx, %rax
    0000092b: 	jne	.Ltmp3235 # Offset: 2347
    0000092d: 	movdqa	%xmm1, %xmm0
    00000931: 	psrldq	$0x8, %xmm0
    00000936: 	paddb	%xmm0, %xmm1
    0000093a: 	pxor	%xmm0, %xmm0
    0000093e: 	psadbw	%xmm0, %xmm1
    00000942: 	movd	%xmm1, %eax
    00000946: 	testb	%al, %al
    00000948: 	jne	.Ltmp3236 # Offset: 2376
.Ltmp3547:
    0000094e: 	addl	$0x1, (%rsp)
    00000952: 	movl	(%rsp), %eax
    00000955: 	cmpl	%edx, %eax
    00000957: 	jl	.Ltmp3237 # Offset: 2391
.Ltmp3234:
    00000959: 	movq	%r12, %rsi
    0000095c: 	movq	%r15, %rdi
    0000095f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2399
    00000964: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000096b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000972: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000979: 	je	.Ltmp3238 # Offset: 2425
.Ltmp3596:
    0000097f: 	movq	-0x20(%rax), %rbx
    00000983: 	callq	clock@PLT # Offset: 2435
    00000988: 	pxor	%xmm0, %xmm0
    0000098c: 	movq	%rax, end_time(%rip)
    00000993: 	movq	%rbx, %rdi
    00000996: 	subq	start_time(%rip), %rax
    0000099d: 	cvtsi2sd	%rax, %xmm0
    000009a2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000009aa: 	callq	_Z13record_resultdPKc # Offset: 2474
    000009af: 	movq	0xa0(%rsp), %rdi
    000009b7: 	cmpq	%r13, %rdi
    000009ba: 	je	.Ltmp3239 # Offset: 2490
    000009bc: 	movq	0xb0(%rsp), %rax
    000009c4: 	leaq	0x1(%rax), %rsi
    000009c8: 	callq	_ZdlPvm@PLT # Offset: 2504
.Ltmp3239:
    000009cd: 	leaq	DATAat0x57292(%rip), %rdx
    000009d4: 	movq	%r14, %rsi
    000009d7: 	movq	%r12, %rdi
    000009da: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2522
    000009df: 	callq	clock@PLT # Offset: 2527
    000009e4: 	movl	iterations(%rip), %edx
    000009ea: 	movl	$0x0, (%rsp)
    000009f1: 	leaq	0x2000(%rsp), %rbx
    000009f9: 	movq	%rax, start_time(%rip)
    00000a00: 	testl	%edx, %edx
    00000a02: 	jle	.Ltmp3240 # Offset: 2562
    00000a04: 	nopl	(%rax) # Size: 4
.Ltmp3243:
    00000a08: 	movq	%rbp, %rax
    00000a0b: 	pxor	%xmm1, %xmm1
    00000a0f: 	nop # Size: 1
.Ltmp3241:
    00000a10: 	movdqa	(%rax), %xmm0
    00000a14: 	addq	$0x10, %rax
    00000a18: 	paddb	%xmm0, %xmm0
    00000a1c: 	paddb	%xmm0, %xmm0
    00000a20: 	paddb	%xmm0, %xmm0
    00000a24: 	paddb	%xmm0, %xmm0
    00000a28: 	paddb	%xmm0, %xmm0
    00000a2c: 	paddb	%xmm0, %xmm0
    00000a30: 	paddb	%xmm0, %xmm1
    00000a34: 	cmpq	%rax, %rbx
    00000a37: 	jne	.Ltmp3241 # Offset: 2615
    00000a39: 	movdqa	%xmm1, %xmm0
    00000a3d: 	psrldq	$0x8, %xmm0
    00000a42: 	paddb	%xmm0, %xmm1
    00000a46: 	pxor	%xmm0, %xmm0
    00000a4a: 	psadbw	%xmm0, %xmm1
    00000a4e: 	movd	%xmm1, %eax
    00000a52: 	testb	%al, %al
    00000a54: 	jne	.Ltmp3242 # Offset: 2644
.Ltmp3546:
    00000a5a: 	addl	$0x1, (%rsp)
    00000a5e: 	movl	(%rsp), %eax
    00000a61: 	cmpl	%edx, %eax
    00000a63: 	jl	.Ltmp3243 # Offset: 2659
.Ltmp3240:
    00000a65: 	movq	%r12, %rsi
    00000a68: 	movq	%r15, %rdi
    00000a6b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2667
    00000a70: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a77: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a7e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a85: 	je	.Ltmp3244 # Offset: 2693
.Ltmp3595:
    00000a8b: 	movq	-0x20(%rax), %rbx
    00000a8f: 	callq	clock@PLT # Offset: 2703
    00000a94: 	pxor	%xmm0, %xmm0
    00000a98: 	movq	%rax, end_time(%rip)
    00000a9f: 	movq	%rbx, %rdi
    00000aa2: 	subq	start_time(%rip), %rax
    00000aa9: 	cvtsi2sd	%rax, %xmm0
    00000aae: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000ab6: 	callq	_Z13record_resultdPKc # Offset: 2742
    00000abb: 	movq	0xa0(%rsp), %rdi
    00000ac3: 	cmpq	%r13, %rdi
    00000ac6: 	je	.Ltmp3245 # Offset: 2758
    00000ac8: 	movq	0xb0(%rsp), %rax
    00000ad0: 	leaq	0x1(%rax), %rsi
    00000ad4: 	callq	_ZdlPvm@PLT # Offset: 2772
.Ltmp3245:
    00000ad9: 	leaq	DATAat0x572a3(%rip), %rdx
    00000ae0: 	movq	%r14, %rsi
    00000ae3: 	movq	%r12, %rdi
    00000ae6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2790
    00000aeb: 	movq	%r12, %rdx
    00000aee: 	movl	$0x40, %esi
    00000af3: 	movq	%rbp, %rdi
    00000af6: 	callq	"_Z14test_variable1Ih24custom_multiply_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 2806
    00000afb: 	movq	0xa0(%rsp), %rdi
    00000b03: 	cmpq	%r13, %rdi
    00000b06: 	je	.Ltmp3246 # Offset: 2822
    00000b08: 	movq	0xb0(%rsp), %rax
    00000b10: 	leaq	0x1(%rax), %rsi
    00000b14: 	callq	_ZdlPvm@PLT # Offset: 2836
.Ltmp3246:
    00000b19: 	leaq	DATAat0x572bc(%rip), %rdx
    00000b20: 	movq	%r14, %rsi
    00000b23: 	movq	%r12, %rdi
    00000b26: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2854
    00000b2b: 	callq	clock@PLT # Offset: 2859
    00000b30: 	movl	iterations(%rip), %edx
    00000b36: 	movl	$0x0, (%rsp)
    00000b3d: 	leaq	0x2000(%rsp), %rbx
    00000b45: 	movq	%rax, start_time(%rip)
    00000b4c: 	testl	%edx, %edx
    00000b4e: 	jle	.Ltmp3247 # Offset: 2894
.Ltmp3250:
    00000b50: 	movq	%rbp, %rax
    00000b53: 	pxor	%xmm1, %xmm1
    00000b57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3248:
    00000b60: 	movdqa	(%rax), %xmm0
    00000b64: 	addq	$0x10, %rax
    00000b68: 	paddb	%xmm0, %xmm0
    00000b6c: 	paddb	%xmm0, %xmm0
    00000b70: 	paddb	%xmm0, %xmm0
    00000b74: 	paddb	%xmm0, %xmm0
    00000b78: 	paddb	%xmm0, %xmm0
    00000b7c: 	paddb	%xmm0, %xmm0
    00000b80: 	paddb	%xmm0, %xmm1
    00000b84: 	cmpq	%rbx, %rax
    00000b87: 	jne	.Ltmp3248 # Offset: 2951
    00000b89: 	movdqa	%xmm1, %xmm0
    00000b8d: 	psrldq	$0x8, %xmm0
    00000b92: 	paddb	%xmm0, %xmm1
    00000b96: 	pxor	%xmm0, %xmm0
    00000b9a: 	psadbw	%xmm0, %xmm1
    00000b9e: 	movd	%xmm1, %eax
    00000ba2: 	testb	%al, %al
    00000ba4: 	jne	.Ltmp3249 # Offset: 2980
.Ltmp3545:
    00000baa: 	addl	$0x1, (%rsp)
    00000bae: 	movl	(%rsp), %eax
    00000bb1: 	cmpl	%edx, %eax
    00000bb3: 	jl	.Ltmp3250 # Offset: 2995
.Ltmp3247:
    00000bb5: 	movq	%r12, %rsi
    00000bb8: 	movq	%r15, %rdi
    00000bbb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3003
    00000bc0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000bc7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000bce: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000bd5: 	je	.Ltmp3251 # Offset: 3029
.Ltmp3594:
    00000bdb: 	movq	-0x20(%rax), %rbx
    00000bdf: 	callq	clock@PLT # Offset: 3039
    00000be4: 	pxor	%xmm0, %xmm0
    00000be8: 	movq	%rax, end_time(%rip)
    00000bef: 	movq	%rbx, %rdi
    00000bf2: 	subq	start_time(%rip), %rax
    00000bf9: 	cvtsi2sd	%rax, %xmm0
    00000bfe: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000c06: 	callq	_Z13record_resultdPKc # Offset: 3078
    00000c0b: 	movq	0xa0(%rsp), %rdi
    00000c13: 	cmpq	%r13, %rdi
    00000c16: 	je	.Ltmp3252 # Offset: 3094
    00000c18: 	movq	0xb0(%rsp), %rax
    00000c20: 	leaq	0x1(%rax), %rsi
    00000c24: 	callq	_ZdlPvm@PLT # Offset: 3108
.Ltmp3252:
    00000c29: 	leaq	DATAat0x572d5(%rip), %rdx
    00000c30: 	movq	%r14, %rsi
    00000c33: 	movq	%r12, %rdi
    00000c36: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3126
    00000c3b: 	movq	%r12, %rdx
    00000c3e: 	movl	$0x2a, %esi
    00000c43: 	movq	%rbp, %rdi
    00000c46: 	callq	"_Z14test_variable1Ih24custom_multiply_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3142
    00000c4b: 	movq	0xa0(%rsp), %rdi
    00000c53: 	cmpq	%r13, %rdi
    00000c56: 	je	.Ltmp3253 # Offset: 3158
    00000c58: 	movq	0xb0(%rsp), %rax
    00000c60: 	leaq	0x1(%rax), %rsi
    00000c64: 	callq	_ZdlPvm@PLT # Offset: 3172
.Ltmp3253:
    00000c69: 	leaq	DATAat0x572ee(%rip), %rdx
    00000c70: 	movq	%r14, %rsi
    00000c73: 	movq	%r12, %rdi
    00000c76: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3190
    00000c7b: 	callq	clock@PLT # Offset: 3195
    00000c80: 	movl	iterations(%rip), %ecx
    00000c86: 	movl	$0x0, (%rsp)
    00000c8d: 	leaq	0x2000(%rsp), %rbx
    00000c95: 	movq	%rax, start_time(%rip)
    00000c9c: 	testl	%ecx, %ecx
    00000c9e: 	jle	.Ltmp3254 # Offset: 3230
    00000ca4: 	nopl	(%rax) # Size: 4
.Ltmp3257:
    00000ca8: 	movq	%rbp, %rax
    00000cab: 	pxor	%xmm2, %xmm2
    00000caf: 	nop # Size: 1
.Ltmp3255:
    00000cb0: 	movdqa	(%rax), %xmm1
    00000cb4: 	addq	$0x10, %rax
    00000cb8: 	movdqa	%xmm1, %xmm0
    00000cbc: 	paddb	%xmm1, %xmm0
    00000cc0: 	paddb	%xmm0, %xmm0
    00000cc4: 	paddb	%xmm1, %xmm0
    00000cc8: 	paddb	%xmm0, %xmm0
    00000ccc: 	paddb	%xmm0, %xmm0
    00000cd0: 	paddb	%xmm1, %xmm0
    00000cd4: 	paddb	%xmm0, %xmm0
    00000cd8: 	paddb	%xmm0, %xmm2
    00000cdc: 	cmpq	%rbx, %rax
    00000cdf: 	jne	.Ltmp3255 # Offset: 3295
    00000ce1: 	movdqa	%xmm2, %xmm0
    00000ce5: 	cvttsd2si	init_value(%rip), %edx
    00000ced: 	psrldq	$0x8, %xmm0
    00000cf2: 	paddb	%xmm0, %xmm2
    00000cf6: 	pxor	%xmm0, %xmm0
    00000cfa: 	psadbw	%xmm0, %xmm2
    00000cfe: 	movd	%xmm2, %eax
    00000d02: 	shll	$0x7, %edx
    00000d05: 	cmpb	%al, %dl
    00000d07: 	je	.Ltmp3256 # Offset: 3335
    00000d09: 	movl	current_test(%rip), %edx
    00000d0f: 	leaq	DATAat0x571d0(%rip), %rsi
    00000d16: 	movl	$0x1, %edi
    00000d1b: 	xorl	%eax, %eax
    00000d1d: 	callq	__printf_chk@PLT # Offset: 3357
    00000d22: 	movl	iterations(%rip), %ecx
.Ltmp3256:
    00000d28: 	addl	$0x1, (%rsp)
    00000d2c: 	movl	(%rsp), %eax
    00000d2f: 	cmpl	%ecx, %eax
    00000d31: 	jl	.Ltmp3257 # Offset: 3377
.Ltmp3254:
    00000d37: 	movq	%r12, %rsi
    00000d3a: 	movq	%r15, %rdi
    00000d3d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3389
    00000d42: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d49: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d50: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d57: 	je	.Ltmp3258 # Offset: 3415
.Ltmp3593:
    00000d5d: 	movq	-0x20(%rax), %rbx
    00000d61: 	callq	clock@PLT # Offset: 3425
    00000d66: 	pxor	%xmm0, %xmm0
    00000d6a: 	movq	%rax, end_time(%rip)
    00000d71: 	movq	%rbx, %rdi
    00000d74: 	subq	start_time(%rip), %rax
    00000d7b: 	cvtsi2sd	%rax, %xmm0
    00000d80: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000d88: 	callq	_Z13record_resultdPKc # Offset: 3464
    00000d8d: 	movq	0xa0(%rsp), %rdi
    00000d95: 	cmpq	%r13, %rdi
    00000d98: 	je	.Ltmp3259 # Offset: 3480
    00000d9a: 	movq	0xb0(%rsp), %rax
    00000da2: 	leaq	0x1(%rax), %rsi
    00000da6: 	callq	_ZdlPvm@PLT # Offset: 3494
.Ltmp3259:
    00000dab: 	leaq	DATAat0x57307(%rip), %rdx
    00000db2: 	movq	%r14, %rsi
    00000db5: 	movq	%r12, %rdi
    00000db8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3512
    00000dbd: 	movq	%r12, %rsi
    00000dc0: 	movq	%rbp, %rdi
    00000dc3: 	callq	"_Z13test_constantIh27custom_multiply_shiftadd_42IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3523
    00000dc8: 	movq	0xa0(%rsp), %rdi
    00000dd0: 	cmpq	%r13, %rdi
    00000dd3: 	je	.Ltmp3260 # Offset: 3539
    00000dd5: 	movq	0xb0(%rsp), %rax
    00000ddd: 	leaq	0x1(%rax), %rsi
    00000de1: 	callq	_ZdlPvm@PLT # Offset: 3553
.Ltmp3260:
    00000de6: 	leaq	DATAat0x57318(%rip), %rdx
    00000ded: 	movq	%r14, %rsi
    00000df0: 	movq	%r12, %rdi
    00000df3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3571
    00000df8: 	movq	%r12, %rdx
    00000dfb: 	movl	$0x3f, %esi
    00000e00: 	movq	%rbp, %rdi
    00000e03: 	callq	"_Z14test_variable1Ih24custom_multiply_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3587
    00000e08: 	movq	0xa0(%rsp), %rdi
    00000e10: 	cmpq	%r13, %rdi
    00000e13: 	je	.Ltmp3261 # Offset: 3603
    00000e15: 	movq	0xb0(%rsp), %rax
    00000e1d: 	leaq	0x1(%rax), %rsi
    00000e21: 	callq	_ZdlPvm@PLT # Offset: 3617
.Ltmp3261:
    00000e26: 	leaq	DATAat0x57331(%rip), %rdx
    00000e2d: 	movq	%r14, %rsi
    00000e30: 	movq	%r12, %rdi
    00000e33: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3635
    00000e38: 	callq	clock@PLT # Offset: 3640
    00000e3d: 	movl	iterations(%rip), %ecx
    00000e43: 	movl	$0x0, (%rsp)
    00000e4a: 	leaq	0x2000(%rsp), %rbx
    00000e52: 	movq	%rax, start_time(%rip)
    00000e59: 	testl	%ecx, %ecx
    00000e5b: 	jle	.Ltmp3262 # Offset: 3675
    00000e61: 	nopl	(%rax) # Size: 7
.Ltmp3265:
    00000e68: 	movq	%rbp, %rax
    00000e6b: 	pxor	%xmm2, %xmm2
    00000e6f: 	nop # Size: 1
.Ltmp3263:
    00000e70: 	movdqa	(%rax), %xmm1
    00000e74: 	addq	$0x10, %rax
    00000e78: 	movdqa	%xmm1, %xmm0
    00000e7c: 	paddb	%xmm1, %xmm0
    00000e80: 	paddb	%xmm0, %xmm0
    00000e84: 	paddb	%xmm0, %xmm0
    00000e88: 	paddb	%xmm0, %xmm0
    00000e8c: 	paddb	%xmm0, %xmm0
    00000e90: 	paddb	%xmm0, %xmm0
    00000e94: 	psubb	%xmm1, %xmm0
    00000e98: 	paddb	%xmm0, %xmm2
    00000e9c: 	cmpq	%rax, %rbx
    00000e9f: 	jne	.Ltmp3263 # Offset: 3743
    00000ea1: 	movdqa	%xmm2, %xmm0
    00000ea5: 	cvttsd2si	init_value(%rip), %edx
    00000ead: 	psrldq	$0x8, %xmm0
    00000eb2: 	paddb	%xmm0, %xmm2
    00000eb6: 	pxor	%xmm0, %xmm0
    00000eba: 	psadbw	%xmm0, %xmm2
    00000ebe: 	movd	%xmm2, %eax
    00000ec2: 	shll	$0x6, %edx
    00000ec5: 	addb	%dl, %al
    00000ec7: 	je	.Ltmp3264 # Offset: 3783
    00000ec9: 	movl	current_test(%rip), %edx
    00000ecf: 	leaq	DATAat0x571d0(%rip), %rsi
    00000ed6: 	movl	$0x1, %edi
    00000edb: 	xorl	%eax, %eax
    00000edd: 	callq	__printf_chk@PLT # Offset: 3805
    00000ee2: 	movl	iterations(%rip), %ecx
.Ltmp3264:
    00000ee8: 	addl	$0x1, (%rsp)
    00000eec: 	movl	(%rsp), %eax
    00000eef: 	cmpl	%ecx, %eax
    00000ef1: 	jl	.Ltmp3265 # Offset: 3825
.Ltmp3262:
    00000ef7: 	movq	%r12, %rsi
    00000efa: 	movq	%r15, %rdi
    00000efd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3837
    00000f02: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f09: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f10: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f17: 	je	.Ltmp3266 # Offset: 3863
.Ltmp3592:
    00000f1d: 	movq	-0x20(%rax), %rbx
    00000f21: 	callq	clock@PLT # Offset: 3873
    00000f26: 	pxor	%xmm0, %xmm0
    00000f2a: 	movq	%rax, end_time(%rip)
    00000f31: 	movq	%rbx, %rdi
    00000f34: 	subq	start_time(%rip), %rax
    00000f3b: 	cvtsi2sd	%rax, %xmm0
    00000f40: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000f48: 	callq	_Z13record_resultdPKc # Offset: 3912
    00000f4d: 	movq	0xa0(%rsp), %rdi
    00000f55: 	cmpq	%r13, %rdi
    00000f58: 	je	.Ltmp3267 # Offset: 3928
    00000f5a: 	movq	0xb0(%rsp), %rax
    00000f62: 	leaq	0x1(%rax), %rsi
    00000f66: 	callq	_ZdlPvm@PLT # Offset: 3942
.Ltmp3267:
    00000f6b: 	leaq	DATAat0x5734a(%rip), %rdx
    00000f72: 	movq	%r14, %rsi
    00000f75: 	movq	%r12, %rdi
    00000f78: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3960
    00000f7d: 	movq	%r12, %rsi
    00000f80: 	movq	%rbp, %rdi
    00000f83: 	callq	"_Z13test_constantIh27custom_multiply_shiftadd_63IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3971
    00000f88: 	movq	0xa0(%rsp), %rdi
    00000f90: 	cmpq	%r13, %rdi
    00000f93: 	je	.Ltmp3268 # Offset: 3987
    00000f95: 	movq	0xb0(%rsp), %rax
    00000f9d: 	leaq	0x1(%rax), %rsi
    00000fa1: 	callq	_ZdlPvm@PLT # Offset: 4001
.Ltmp3268:
    00000fa6: 	leaq	DATAat0x5735b(%rip), %rdx
    00000fad: 	movq	%r14, %rsi
    00000fb0: 	movq	%r12, %rdi
    00000fb3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4019
    00000fb8: 	movq	%r12, %rdx
    00000fbb: 	movl	$0x43, %esi
    00000fc0: 	movq	%rbp, %rdi
    00000fc3: 	callq	"_Z14test_variable1Ih24custom_multiply_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4035
    00000fc8: 	movq	0xa0(%rsp), %rdi
    00000fd0: 	cmpq	%r13, %rdi
    00000fd3: 	je	.Ltmp3269 # Offset: 4051
    00000fd5: 	movq	0xb0(%rsp), %rax
    00000fdd: 	leaq	0x1(%rax), %rsi
    00000fe1: 	callq	_ZdlPvm@PLT # Offset: 4065
.Ltmp3269:
    00000fe6: 	leaq	DATAat0x57374(%rip), %rdx
    00000fed: 	movq	%r14, %rsi
    00000ff0: 	movq	%r12, %rdi
    00000ff3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4083
    00000ff8: 	callq	clock@PLT # Offset: 4088
    00000ffd: 	movl	iterations(%rip), %ecx
    00001003: 	movl	$0x0, (%rsp)
    0000100a: 	leaq	0x2000(%rsp), %rbx
    00001012: 	movq	%rax, start_time(%rip)
    00001019: 	testl	%ecx, %ecx
    0000101b: 	jle	.Ltmp3270 # Offset: 4123
    00001021: 	nopl	(%rax) # Size: 7
.Ltmp3273:
    00001028: 	movq	%rbp, %rax
    0000102b: 	pxor	%xmm2, %xmm2
    0000102f: 	nop # Size: 1
.Ltmp3271:
    00001030: 	movdqa	(%rax), %xmm1
    00001034: 	addq	$0x10, %rax
    00001038: 	movdqa	%xmm1, %xmm0
    0000103c: 	paddb	%xmm1, %xmm0
    00001040: 	paddb	%xmm0, %xmm0
    00001044: 	paddb	%xmm0, %xmm0
    00001048: 	paddb	%xmm0, %xmm0
    0000104c: 	paddb	%xmm1, %xmm0
    00001050: 	paddb	%xmm0, %xmm0
    00001054: 	paddb	%xmm0, %xmm0
    00001058: 	psubb	%xmm1, %xmm0
    0000105c: 	paddb	%xmm0, %xmm2
    00001060: 	cmpq	%rbx, %rax
    00001063: 	jne	.Ltmp3271 # Offset: 4195
    00001065: 	movdqa	%xmm2, %xmm0
    00001069: 	cvttsd2si	init_value(%rip), %edx
    00001071: 	psrldq	$0x8, %xmm0
    00001076: 	paddb	%xmm0, %xmm2
    0000107a: 	pxor	%xmm0, %xmm0
    0000107e: 	psadbw	%xmm0, %xmm2
    00001082: 	movd	%xmm2, %eax
    00001086: 	shll	$0x6, %edx
    00001089: 	addb	%dl, %al
    0000108b: 	je	.Ltmp3272 # Offset: 4235
    0000108d: 	movl	current_test(%rip), %edx
    00001093: 	leaq	DATAat0x571d0(%rip), %rsi
    0000109a: 	movl	$0x1, %edi
    0000109f: 	xorl	%eax, %eax
    000010a1: 	callq	__printf_chk@PLT # Offset: 4257
    000010a6: 	movl	iterations(%rip), %ecx
.Ltmp3272:
    000010ac: 	addl	$0x1, (%rsp)
    000010b0: 	movl	(%rsp), %eax
    000010b3: 	cmpl	%ecx, %eax
    000010b5: 	jl	.Ltmp3273 # Offset: 4277
.Ltmp3270:
    000010bb: 	movq	%r12, %rsi
    000010be: 	movq	%r15, %rdi
    000010c1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4289
    000010c6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000010cd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000010d4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010db: 	je	.Ltmp3274 # Offset: 4315
.Ltmp3591:
    000010e1: 	movq	-0x20(%rax), %rbx
    000010e5: 	callq	clock@PLT # Offset: 4325
    000010ea: 	pxor	%xmm0, %xmm0
    000010ee: 	movq	%rax, end_time(%rip)
    000010f5: 	movq	%rbx, %rdi
    000010f8: 	subq	start_time(%rip), %rax
    000010ff: 	cvtsi2sd	%rax, %xmm0
    00001104: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000110c: 	callq	_Z13record_resultdPKc # Offset: 4364
    00001111: 	movq	0xa0(%rsp), %rdi
    00001119: 	cmpq	%r13, %rdi
    0000111c: 	je	.Ltmp3275 # Offset: 4380
    0000111e: 	movq	0xb0(%rsp), %rax
    00001126: 	leaq	0x1(%rax), %rsi
    0000112a: 	callq	_ZdlPvm@PLT # Offset: 4394
.Ltmp3275:
    0000112f: 	leaq	DATAat0x5738d(%rip), %rdx
    00001136: 	movq	%r14, %rsi
    00001139: 	movq	%r12, %rdi
    0000113c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4412
    00001141: 	callq	clock@PLT # Offset: 4417
    00001146: 	movl	iterations(%rip), %ecx
    0000114c: 	movl	$0x0, (%rsp)
    00001153: 	leaq	0x2000(%rsp), %rbx
    0000115b: 	movq	%rax, start_time(%rip)
    00001162: 	testl	%ecx, %ecx
    00001164: 	jle	.Ltmp3276 # Offset: 4452
    0000116a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3279:
    00001170: 	movq	%rbp, %rax
    00001173: 	pxor	%xmm2, %xmm2
    00001177: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3277:
    00001180: 	movdqa	(%rax), %xmm1
    00001184: 	addq	$0x10, %rax
    00001188: 	movdqa	%xmm1, %xmm0
    0000118c: 	paddb	%xmm1, %xmm0
    00001190: 	paddb	%xmm0, %xmm0
    00001194: 	paddb	%xmm0, %xmm0
    00001198: 	paddb	%xmm0, %xmm0
    0000119c: 	paddb	%xmm1, %xmm0
    000011a0: 	paddb	%xmm0, %xmm0
    000011a4: 	paddb	%xmm0, %xmm0
    000011a8: 	psubb	%xmm1, %xmm0
    000011ac: 	paddb	%xmm0, %xmm2
    000011b0: 	cmpq	%rax, %rbx
    000011b3: 	jne	.Ltmp3277 # Offset: 4531
    000011b5: 	movdqa	%xmm2, %xmm0
    000011b9: 	cvttsd2si	init_value(%rip), %edx
    000011c1: 	psrldq	$0x8, %xmm0
    000011c6: 	paddb	%xmm0, %xmm2
    000011ca: 	pxor	%xmm0, %xmm0
    000011ce: 	psadbw	%xmm0, %xmm2
    000011d2: 	movd	%xmm2, %eax
    000011d6: 	shll	$0x6, %edx
    000011d9: 	addb	%dl, %al
    000011db: 	je	.Ltmp3278 # Offset: 4571
    000011dd: 	movl	current_test(%rip), %edx
    000011e3: 	leaq	DATAat0x571d0(%rip), %rsi
    000011ea: 	movl	$0x1, %edi
    000011ef: 	xorl	%eax, %eax
    000011f1: 	callq	__printf_chk@PLT # Offset: 4593
    000011f6: 	movl	iterations(%rip), %ecx
.Ltmp3278:
    000011fc: 	addl	$0x1, (%rsp)
    00001200: 	movl	(%rsp), %eax
    00001203: 	cmpl	%ecx, %eax
    00001205: 	jl	.Ltmp3279 # Offset: 4613
.Ltmp3276:
    0000120b: 	movq	%r12, %rsi
    0000120e: 	movq	%r15, %rdi
    00001211: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4625
    00001216: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000121d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001224: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000122b: 	je	.Ltmp3280 # Offset: 4651
.Ltmp3590:
    00001231: 	movq	-0x20(%rax), %rbx
    00001235: 	callq	clock@PLT # Offset: 4661
    0000123a: 	pxor	%xmm0, %xmm0
    0000123e: 	movq	%rax, end_time(%rip)
    00001245: 	movq	%rbx, %rdi
    00001248: 	subq	start_time(%rip), %rax
    0000124f: 	cvtsi2sd	%rax, %xmm0
    00001254: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000125c: 	callq	_Z13record_resultdPKc # Offset: 4700
    00001261: 	movq	0xa0(%rsp), %rdi
    00001269: 	cmpq	%r13, %rdi
    0000126c: 	je	.Ltmp3281 # Offset: 4716
    0000126e: 	movq	0xb0(%rsp), %rax
    00001276: 	leaq	0x1(%rax), %rsi
    0000127a: 	callq	_ZdlPvm@PLT # Offset: 4730
.Ltmp3281:
    0000127f: 	leaq	DATAat0x5739e(%rip), %rdx
    00001286: 	movq	%r14, %rsi
    00001289: 	movq	%r12, %rdi
    0000128c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4748
    00001291: 	callq	clock@PLT # Offset: 4753
    00001296: 	movl	iterations(%rip), %ecx
    0000129c: 	movl	$0x0, (%rsp)
    000012a3: 	leaq	0x2000(%rsp), %rbx
    000012ab: 	movq	%rax, start_time(%rip)
    000012b2: 	testl	%ecx, %ecx
    000012b4: 	jle	.Ltmp3282 # Offset: 4788
    000012ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3285:
    000012c0: 	movq	%rbp, %rax
    000012c3: 	pxor	%xmm2, %xmm2
    000012c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3283:
    000012d0: 	movdqa	(%rax), %xmm1
    000012d4: 	addq	$0x10, %rax
    000012d8: 	movdqa	%xmm1, %xmm0
    000012dc: 	paddb	%xmm1, %xmm0
    000012e0: 	paddb	%xmm0, %xmm0
    000012e4: 	paddb	%xmm0, %xmm0
    000012e8: 	paddb	%xmm0, %xmm0
    000012ec: 	paddb	%xmm1, %xmm0
    000012f0: 	paddb	%xmm0, %xmm0
    000012f4: 	paddb	%xmm0, %xmm0
    000012f8: 	psubb	%xmm1, %xmm0
    000012fc: 	paddb	%xmm0, %xmm2
    00001300: 	cmpq	%rbx, %rax
    00001303: 	jne	.Ltmp3283 # Offset: 4867
    00001305: 	movdqa	%xmm2, %xmm0
    00001309: 	cvttsd2si	init_value(%rip), %edx
    00001311: 	psrldq	$0x8, %xmm0
    00001316: 	paddb	%xmm0, %xmm2
    0000131a: 	pxor	%xmm0, %xmm0
    0000131e: 	psadbw	%xmm0, %xmm2
    00001322: 	movd	%xmm2, %eax
    00001326: 	shll	$0x6, %edx
    00001329: 	addb	%dl, %al
    0000132b: 	je	.Ltmp3284 # Offset: 4907
    0000132d: 	movl	current_test(%rip), %edx
    00001333: 	leaq	DATAat0x571d0(%rip), %rsi
    0000133a: 	movl	$0x1, %edi
    0000133f: 	xorl	%eax, %eax
    00001341: 	callq	__printf_chk@PLT # Offset: 4929
    00001346: 	movl	iterations(%rip), %ecx
.Ltmp3284:
    0000134c: 	addl	$0x1, (%rsp)
    00001350: 	movl	(%rsp), %eax
    00001353: 	cmpl	%ecx, %eax
    00001355: 	jl	.Ltmp3285 # Offset: 4949
.Ltmp3282:
    0000135b: 	movq	%r12, %rsi
    0000135e: 	movq	%r15, %rdi
    00001361: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4961
    00001366: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000136d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001374: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000137b: 	je	.Ltmp3286 # Offset: 4987
.Ltmp3589:
    00001381: 	movq	-0x20(%rax), %rbx
    00001385: 	callq	clock@PLT # Offset: 4997
    0000138a: 	pxor	%xmm0, %xmm0
    0000138e: 	movq	%rax, end_time(%rip)
    00001395: 	movq	%rbx, %rdi
    00001398: 	subq	start_time(%rip), %rax
    0000139f: 	cvtsi2sd	%rax, %xmm0
    000013a4: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000013ac: 	callq	_Z13record_resultdPKc # Offset: 5036
    000013b1: 	movq	0xa0(%rsp), %rdi
    000013b9: 	cmpq	%r13, %rdi
    000013bc: 	je	.Ltmp3287 # Offset: 5052
    000013be: 	movq	0xb0(%rsp), %rax
    000013c6: 	leaq	0x1(%rax), %rsi
    000013ca: 	callq	_ZdlPvm@PLT # Offset: 5066
.Ltmp3287:
    000013cf: 	leaq	DATAat0x573ad(%rip), %rdx
    000013d6: 	movq	%r14, %rsi
    000013d9: 	movq	%r12, %rdi
    000013dc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5084
    000013e1: 	movq	%r12, %rdx
    000013e4: 	movl	$0x53, %esi
    000013e9: 	movq	%rbp, %rdi
    000013ec: 	callq	"_Z14test_variable1Ih24custom_multiply_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 5100
    000013f1: 	movq	0xa0(%rsp), %rdi
    000013f9: 	cmpq	%r13, %rdi
    000013fc: 	je	.Ltmp3288 # Offset: 5116
    000013fe: 	movq	0xb0(%rsp), %rax
    00001406: 	leaq	0x1(%rax), %rsi
    0000140a: 	callq	_ZdlPvm@PLT # Offset: 5130
.Ltmp3288:
    0000140f: 	leaq	DATAat0x573c6(%rip), %rdx
    00001416: 	movq	%r14, %rsi
    00001419: 	movq	%r12, %rdi
    0000141c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5148
    00001421: 	callq	clock@PLT # Offset: 5153
    00001426: 	movl	iterations(%rip), %ecx
    0000142c: 	movl	$0x0, (%rsp)
    00001433: 	leaq	0x2000(%rsp), %rbx
    0000143b: 	movq	%rax, start_time(%rip)
    00001442: 	testl	%ecx, %ecx
    00001444: 	jle	.Ltmp3289 # Offset: 5188
    0000144a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3292:
    00001450: 	movq	%rbp, %rax
    00001453: 	pxor	%xmm2, %xmm2
    00001457: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3290:
    00001460: 	movdqa	(%rax), %xmm1
    00001464: 	addq	$0x10, %rax
    00001468: 	movdqa	%xmm1, %xmm0
    0000146c: 	paddb	%xmm1, %xmm0
    00001470: 	paddb	%xmm0, %xmm0
    00001474: 	paddb	%xmm1, %xmm0
    00001478: 	paddb	%xmm0, %xmm0
    0000147c: 	paddb	%xmm0, %xmm0
    00001480: 	paddb	%xmm1, %xmm0
    00001484: 	paddb	%xmm0, %xmm0
    00001488: 	paddb	%xmm0, %xmm0
    0000148c: 	psubb	%xmm1, %xmm0
    00001490: 	paddb	%xmm0, %xmm2
    00001494: 	cmpq	%rax, %rbx
    00001497: 	jne	.Ltmp3290 # Offset: 5271
    00001499: 	movdqa	%xmm2, %xmm0
    0000149d: 	cvttsd2si	init_value(%rip), %edx
    000014a5: 	psrldq	$0x8, %xmm0
    000014aa: 	paddb	%xmm0, %xmm2
    000014ae: 	pxor	%xmm0, %xmm0
    000014b2: 	psadbw	%xmm0, %xmm2
    000014b6: 	movd	%xmm2, %eax
    000014ba: 	shll	$0x6, %edx
    000014bd: 	addb	%dl, %al
    000014bf: 	je	.Ltmp3291 # Offset: 5311
    000014c1: 	movl	current_test(%rip), %edx
    000014c7: 	leaq	DATAat0x571d0(%rip), %rsi
    000014ce: 	movl	$0x1, %edi
    000014d3: 	xorl	%eax, %eax
    000014d5: 	callq	__printf_chk@PLT # Offset: 5333
    000014da: 	movl	iterations(%rip), %ecx
.Ltmp3291:
    000014e0: 	addl	$0x1, (%rsp)
    000014e4: 	movl	(%rsp), %eax
    000014e7: 	cmpl	%ecx, %eax
    000014e9: 	jl	.Ltmp3292 # Offset: 5353
.Ltmp3289:
    000014ef: 	movq	%r12, %rsi
    000014f2: 	movq	%r15, %rdi
    000014f5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5365
    000014fa: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001501: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001508: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000150f: 	je	.Ltmp3293 # Offset: 5391
.Ltmp3588:
    00001515: 	movq	-0x20(%rax), %rbx
    00001519: 	callq	clock@PLT # Offset: 5401
    0000151e: 	pxor	%xmm0, %xmm0
    00001522: 	movq	%rax, end_time(%rip)
    00001529: 	movq	%rbx, %rdi
    0000152c: 	subq	start_time(%rip), %rax
    00001533: 	cvtsi2sd	%rax, %xmm0
    00001538: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001540: 	callq	_Z13record_resultdPKc # Offset: 5440
    00001545: 	movq	0xa0(%rsp), %rdi
    0000154d: 	cmpq	%r13, %rdi
    00001550: 	je	.Ltmp3294 # Offset: 5456
    00001552: 	movq	0xb0(%rsp), %rax
    0000155a: 	leaq	0x1(%rax), %rsi
    0000155e: 	callq	_ZdlPvm@PLT # Offset: 5470
.Ltmp3294:
    00001563: 	leaq	DATAat0x573df(%rip), %rdx
    0000156a: 	movq	%r14, %rsi
    0000156d: 	movq	%r12, %rdi
    00001570: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5488
    00001575: 	movq	%r12, %rsi
    00001578: 	movq	%rbp, %rdi
    0000157b: 	callq	"_Z13test_constantIh27custom_multiply_shiftadd_83IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 5499
    00001580: 	movq	0xa0(%rsp), %rdi
    00001588: 	cmpq	%r13, %rdi
    0000158b: 	je	.Ltmp3295 # Offset: 5515
    0000158d: 	movq	0xb0(%rsp), %rax
    00001595: 	leaq	0x1(%rax), %rsi
    00001599: 	callq	_ZdlPvm@PLT # Offset: 5529
.Ltmp3295:
    0000159e: 	leaq	DATAat0x573f0(%rip), %rdx
    000015a5: 	movq	%r14, %rsi
    000015a8: 	movq	%r12, %rdi
    000015ab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5547
    000015b0: 	callq	clock@PLT # Offset: 5552
    000015b5: 	movl	iterations(%rip), %ecx
    000015bb: 	movl	$0x0, (%rsp)
    000015c2: 	leaq	0x2000(%rsp), %rbx
    000015ca: 	movq	%rax, start_time(%rip)
    000015d1: 	testl	%ecx, %ecx
    000015d3: 	jle	.Ltmp3296 # Offset: 5587
    000015d9: 	nopl	(%rax) # Size: 7
.Ltmp3299:
    000015e0: 	movq	%rbp, %rax
    000015e3: 	pxor	%xmm2, %xmm2
    000015e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3297:
    000015f0: 	movdqa	(%rax), %xmm1
    000015f4: 	addq	$0x10, %rax
    000015f8: 	movdqa	%xmm1, %xmm0
    000015fc: 	paddb	%xmm1, %xmm0
    00001600: 	paddb	%xmm0, %xmm0
    00001604: 	paddb	%xmm1, %xmm0
    00001608: 	paddb	%xmm0, %xmm0
    0000160c: 	paddb	%xmm0, %xmm0
    00001610: 	paddb	%xmm1, %xmm0
    00001614: 	paddb	%xmm0, %xmm0
    00001618: 	paddb	%xmm0, %xmm0
    0000161c: 	psubb	%xmm1, %xmm0
    00001620: 	paddb	%xmm0, %xmm2
    00001624: 	cmpq	%rbx, %rax
    00001627: 	jne	.Ltmp3297 # Offset: 5671
    00001629: 	movdqa	%xmm2, %xmm0
    0000162d: 	cvttsd2si	init_value(%rip), %edx
    00001635: 	psrldq	$0x8, %xmm0
    0000163a: 	paddb	%xmm0, %xmm2
    0000163e: 	pxor	%xmm0, %xmm0
    00001642: 	psadbw	%xmm0, %xmm2
    00001646: 	movd	%xmm2, %eax
    0000164a: 	shll	$0x6, %edx
    0000164d: 	addb	%dl, %al
    0000164f: 	je	.Ltmp3298 # Offset: 5711
    00001651: 	movl	current_test(%rip), %edx
    00001657: 	leaq	DATAat0x571d0(%rip), %rsi
    0000165e: 	movl	$0x1, %edi
    00001663: 	xorl	%eax, %eax
    00001665: 	callq	__printf_chk@PLT # Offset: 5733
    0000166a: 	movl	iterations(%rip), %ecx
.Ltmp3298:
    00001670: 	addl	$0x1, (%rsp)
    00001674: 	movl	(%rsp), %eax
    00001677: 	cmpl	%ecx, %eax
    00001679: 	jl	.Ltmp3299 # Offset: 5753
.Ltmp3296:
    0000167f: 	movq	%r12, %rsi
    00001682: 	movq	%r15, %rdi
    00001685: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5765
    0000168a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001691: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001698: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000169f: 	je	.Ltmp3300 # Offset: 5791
.Ltmp3587:
    000016a5: 	movq	-0x20(%rax), %rbx
    000016a9: 	callq	clock@PLT # Offset: 5801
    000016ae: 	pxor	%xmm0, %xmm0
    000016b2: 	movq	%rax, end_time(%rip)
    000016b9: 	movq	%rbx, %rdi
    000016bc: 	subq	start_time(%rip), %rax
    000016c3: 	cvtsi2sd	%rax, %xmm0
    000016c8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000016d0: 	callq	_Z13record_resultdPKc # Offset: 5840
    000016d5: 	movq	0xa0(%rsp), %rdi
    000016dd: 	cmpq	%r13, %rdi
    000016e0: 	je	.Ltmp3301 # Offset: 5856
    000016e2: 	movq	0xb0(%rsp), %rax
    000016ea: 	leaq	0x1(%rax), %rsi
    000016ee: 	callq	_ZdlPvm@PLT # Offset: 5870
.Ltmp3301:
    000016f3: 	leaq	DATAat0x573ff(%rip), %rdx
    000016fa: 	movq	%r14, %rsi
    000016fd: 	movq	%r12, %rdi
    00001700: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5888
    00001705: 	movq	%r12, %rdx
    00001708: 	movl	$0x7e, %esi
    0000170d: 	movq	%rbp, %rdi
    00001710: 	callq	"_Z14test_variable1Ih24custom_multiply_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 5904
    00001715: 	movq	0xa0(%rsp), %rdi
    0000171d: 	cmpq	%r13, %rdi
    00001720: 	je	.Ltmp3302 # Offset: 5920
    00001722: 	movq	0xb0(%rsp), %rax
    0000172a: 	leaq	0x1(%rax), %rsi
    0000172e: 	callq	_ZdlPvm@PLT # Offset: 5934
.Ltmp3302:
    00001733: 	leaq	DATAat0x57419(%rip), %rdx
    0000173a: 	movq	%r14, %rsi
    0000173d: 	movq	%r12, %rdi
    00001740: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5952
    00001745: 	callq	clock@PLT # Offset: 5957
    0000174a: 	movl	iterations(%rip), %ecx
    00001750: 	movl	$0x0, (%rsp)
    00001757: 	leaq	0x2000(%rsp), %rbx
    0000175f: 	movq	%rax, start_time(%rip)
    00001766: 	testl	%ecx, %ecx
    00001768: 	jle	.Ltmp3303 # Offset: 5992
    0000176e: 	nop # Size: 2
.Ltmp3306:
    00001770: 	movq	%rbp, %rax
    00001773: 	pxor	%xmm2, %xmm2
    00001777: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3304:
    00001780: 	movdqa	(%rax), %xmm1
    00001784: 	addq	$0x10, %rax
    00001788: 	movdqa	%xmm1, %xmm0
    0000178c: 	paddb	%xmm1, %xmm0
    00001790: 	paddb	%xmm0, %xmm0
    00001794: 	paddb	%xmm0, %xmm0
    00001798: 	paddb	%xmm0, %xmm0
    0000179c: 	paddb	%xmm0, %xmm0
    000017a0: 	paddb	%xmm0, %xmm0
    000017a4: 	psubb	%xmm1, %xmm0
    000017a8: 	paddb	%xmm0, %xmm0
    000017ac: 	paddb	%xmm0, %xmm2
    000017b0: 	cmpq	%rax, %rbx
    000017b3: 	jne	.Ltmp3304 # Offset: 6067
    000017b5: 	movdqa	%xmm2, %xmm0
    000017b9: 	cvttsd2si	init_value(%rip), %edx
    000017c1: 	psrldq	$0x8, %xmm0
    000017c6: 	paddb	%xmm0, %xmm2
    000017ca: 	pxor	%xmm0, %xmm0
    000017ce: 	psadbw	%xmm0, %xmm2
    000017d2: 	movd	%xmm2, %eax
    000017d6: 	shll	$0x7, %edx
    000017d9: 	cmpb	%al, %dl
    000017db: 	je	.Ltmp3305 # Offset: 6107
    000017dd: 	movl	current_test(%rip), %edx
    000017e3: 	leaq	DATAat0x571d0(%rip), %rsi
    000017ea: 	movl	$0x1, %edi
    000017ef: 	xorl	%eax, %eax
    000017f1: 	callq	__printf_chk@PLT # Offset: 6129
    000017f6: 	movl	iterations(%rip), %ecx
.Ltmp3305:
    000017fc: 	addl	$0x1, (%rsp)
    00001800: 	movl	(%rsp), %eax
    00001803: 	cmpl	%ecx, %eax
    00001805: 	jl	.Ltmp3306 # Offset: 6149
.Ltmp3303:
    0000180b: 	movq	%r12, %rsi
    0000180e: 	movq	%r15, %rdi
    00001811: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6161
    00001816: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000181d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001824: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000182b: 	je	.Ltmp3307 # Offset: 6187
.Ltmp3586:
    00001831: 	movq	-0x20(%rax), %rbx
    00001835: 	callq	clock@PLT # Offset: 6197
    0000183a: 	pxor	%xmm0, %xmm0
    0000183e: 	movq	%rax, end_time(%rip)
    00001845: 	movq	%rbx, %rdi
    00001848: 	subq	start_time(%rip), %rax
    0000184f: 	cvtsi2sd	%rax, %xmm0
    00001854: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000185c: 	callq	_Z13record_resultdPKc # Offset: 6236
    00001861: 	movq	0xa0(%rsp), %rdi
    00001869: 	cmpq	%r13, %rdi
    0000186c: 	je	.Ltmp3308 # Offset: 6252
    0000186e: 	movq	0xb0(%rsp), %rax
    00001876: 	leaq	0x1(%rax), %rsi
    0000187a: 	callq	_ZdlPvm@PLT # Offset: 6266
.Ltmp3308:
    0000187f: 	leaq	DATAat0x57433(%rip), %rdx
    00001886: 	movq	%r14, %rsi
    00001889: 	movq	%r12, %rdi
    0000188c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6284
    00001891: 	movq	%r12, %rsi
    00001894: 	movq	%rbp, %rdi
    00001897: 	callq	"_Z13test_constantIh28custom_multiply_shiftadd_126IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 6295
    0000189c: 	movq	0xa0(%rsp), %rdi
    000018a4: 	cmpq	%r13, %rdi
    000018a7: 	je	.Ltmp3309 # Offset: 6311
    000018a9: 	movq	0xb0(%rsp), %rax
    000018b1: 	leaq	0x1(%rax), %rsi
    000018b5: 	callq	_ZdlPvm@PLT # Offset: 6325
.Ltmp3309:
    000018ba: 	leaq	DATAat0x57445(%rip), %rdx
    000018c1: 	movq	%r14, %rsi
    000018c4: 	movq	%r12, %rdi
    000018c7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6343
    000018cc: 	callq	clock@PLT # Offset: 6348
    000018d1: 	movl	iterations(%rip), %ecx
    000018d7: 	movl	$0x0, (%rsp)
    000018de: 	leaq	0x2000(%rsp), %rbx
    000018e6: 	movq	%rax, start_time(%rip)
    000018ed: 	testl	%ecx, %ecx
    000018ef: 	jle	.Ltmp3310 # Offset: 6383
    000018f5: 	nopl	(%rax) # Size: 3
.Ltmp3313:
    000018f8: 	movq	%rbp, %rax
    000018fb: 	pxor	%xmm2, %xmm2
    000018ff: 	nop # Size: 1
.Ltmp3311:
    00001900: 	movdqa	(%rax), %xmm1
    00001904: 	addq	$0x10, %rax
    00001908: 	movdqa	%xmm1, %xmm0
    0000190c: 	paddb	%xmm1, %xmm0
    00001910: 	paddb	%xmm0, %xmm0
    00001914: 	paddb	%xmm0, %xmm0
    00001918: 	paddb	%xmm0, %xmm0
    0000191c: 	paddb	%xmm0, %xmm0
    00001920: 	paddb	%xmm0, %xmm0
    00001924: 	psubb	%xmm1, %xmm0
    00001928: 	paddb	%xmm0, %xmm0
    0000192c: 	paddb	%xmm0, %xmm2
    00001930: 	cmpq	%rbx, %rax
    00001933: 	jne	.Ltmp3311 # Offset: 6451
    00001935: 	movdqa	%xmm2, %xmm0
    00001939: 	cvttsd2si	init_value(%rip), %edx
    00001941: 	psrldq	$0x8, %xmm0
    00001946: 	paddb	%xmm0, %xmm2
    0000194a: 	pxor	%xmm0, %xmm0
    0000194e: 	psadbw	%xmm0, %xmm2
    00001952: 	movd	%xmm2, %eax
    00001956: 	shll	$0x7, %edx
    00001959: 	cmpb	%al, %dl
    0000195b: 	je	.Ltmp3312 # Offset: 6491
    0000195d: 	movl	current_test(%rip), %edx
    00001963: 	leaq	DATAat0x571d0(%rip), %rsi
    0000196a: 	movl	$0x1, %edi
    0000196f: 	xorl	%eax, %eax
    00001971: 	callq	__printf_chk@PLT # Offset: 6513
    00001976: 	movl	iterations(%rip), %ecx
.Ltmp3312:
    0000197c: 	addl	$0x1, (%rsp)
    00001980: 	movl	(%rsp), %eax
    00001983: 	cmpl	%ecx, %eax
    00001985: 	jl	.Ltmp3313 # Offset: 6533
.Ltmp3310:
    0000198b: 	movq	%r12, %rsi
    0000198e: 	movq	%r15, %rdi
    00001991: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6545
    00001996: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000199d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000019a4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000019ab: 	je	.Ltmp3314 # Offset: 6571
.Ltmp3585:
    000019b1: 	movq	-0x20(%rax), %rbx
    000019b5: 	callq	clock@PLT # Offset: 6581
    000019ba: 	pxor	%xmm0, %xmm0
    000019be: 	movq	%rax, end_time(%rip)
    000019c5: 	movq	%rbx, %rdi
    000019c8: 	subq	start_time(%rip), %rax
    000019cf: 	cvtsi2sd	%rax, %xmm0
    000019d4: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000019dc: 	callq	_Z13record_resultdPKc # Offset: 6620
    000019e1: 	movq	0xa0(%rsp), %rdi
    000019e9: 	cmpq	%r13, %rdi
    000019ec: 	je	.Ltmp3315 # Offset: 6636
    000019ee: 	movq	0xb0(%rsp), %rax
    000019f6: 	leaq	0x1(%rax), %rsi
    000019fa: 	callq	_ZdlPvm@PLT # Offset: 6650
.Ltmp3315:
    000019ff: 	leaq	0x60(%rsp), %rdi
    00001a04: 	leaq	DATAat0x57455(%rip), %rdx
    00001a0b: 	movq	%r14, %rsi
    00001a0e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6670
    00001a13: 	movl	iterations(%rip), %edx
    00001a19: 	movq	0x60(%rsp), %rdi
    00001a1e: 	xorl	%r8d, %r8d
    00001a21: 	xorl	%ecx, %ecx
    00001a23: 	movl	$0x1f40, %esi
    00001a28: 	callq	_Z9summarizePKciiii # Offset: 6696
    00001a2d: 	leaq	DATAat0x57472(%rip), %rdx
    00001a34: 	movq	%r14, %rsi
    00001a37: 	movq	%r12, %rdi
    00001a3a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6714
    00001a3f: 	movq	%r12, %rsi
    00001a42: 	movq	%rbp, %rdi
    00001a45: 	callq	"_Z13test_constantIh11shift_rightIhLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 6725
    00001a4a: 	movq	0xa0(%rsp), %rdi
    00001a52: 	cmpq	%r13, %rdi
    00001a55: 	je	.Ltmp3316 # Offset: 6741
    00001a57: 	movq	0xb0(%rsp), %rax
    00001a5f: 	leaq	0x1(%rax), %rsi
    00001a63: 	callq	_ZdlPvm@PLT # Offset: 6755
.Ltmp3316:
    00001a68: 	leaq	DATAat0x579c8(%rip), %rdx
    00001a6f: 	movq	%r14, %rsi
    00001a72: 	movq	%r12, %rdi
    00001a75: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6773
    00001a7a: 	callq	clock@PLT # Offset: 6778
    00001a7f: 	movl	iterations(%rip), %ecx
    00001a85: 	movq	%rax, start_time(%rip)
    00001a8c: 	testl	%ecx, %ecx
    00001a8e: 	jle	.Ltmp3317 # Offset: 6798
    00001a94: 	movdqa	DATAat0x57c00(%rip), %xmm7
    00001a9c: 	movl	$0x0, 0x1c(%rsp)
    00001aa4: 	leaq	0x2000(%rsp), %rbx
    00001aac: 	movaps	%xmm7, (%rsp)
.Ltmp3320:
    00001ab0: 	movq	%rbp, %rax
    00001ab3: 	pxor	%xmm1, %xmm1
    00001ab7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3318:
    00001ac0: 	movdqa	(%rax), %xmm0
    00001ac4: 	addq	$0x10, %rax
    00001ac8: 	psrlw	$0x1, %xmm0
    00001acd: 	pand	(%rsp), %xmm0
    00001ad2: 	paddb	%xmm0, %xmm1
    00001ad6: 	cmpq	%rax, %rbx
    00001ad9: 	jne	.Ltmp3318 # Offset: 6873
    00001adb: 	cvttsd2si	init_value(%rip), %edx
    00001ae3: 	movdqa	%xmm1, %xmm0
    00001ae7: 	psrldq	$0x8, %xmm0
    00001aec: 	paddb	%xmm0, %xmm1
    00001af0: 	pxor	%xmm0, %xmm0
    00001af4: 	psadbw	%xmm0, %xmm1
    00001af8: 	shrb	%dl
    00001afa: 	movd	%xmm1, %eax
    00001afe: 	shll	$0x6, %edx
    00001b01: 	cmpb	%al, %dl
    00001b03: 	je	.Ltmp3319 # Offset: 6915
    00001b05: 	movl	current_test(%rip), %edx
    00001b0b: 	leaq	DATAat0x571d0(%rip), %rsi
    00001b12: 	movl	$0x1, %edi
    00001b17: 	xorl	%eax, %eax
    00001b19: 	callq	__printf_chk@PLT # Offset: 6937
    00001b1e: 	movl	iterations(%rip), %ecx
.Ltmp3319:
    00001b24: 	addl	$0x1, 0x1c(%rsp)
    00001b29: 	movl	0x1c(%rsp), %eax
    00001b2d: 	cmpl	%ecx, %eax
    00001b2f: 	jl	.Ltmp3320 # Offset: 6959
.Ltmp3317:
    00001b35: 	movq	%r12, %rsi
    00001b38: 	movq	%r15, %rdi
    00001b3b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6971
    00001b40: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b47: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001b4e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b55: 	je	.Ltmp3321 # Offset: 6997
.Ltmp3584:
    00001b5b: 	movq	-0x20(%rax), %rbx
    00001b5f: 	callq	clock@PLT # Offset: 7007
    00001b64: 	pxor	%xmm0, %xmm0
    00001b68: 	movq	%rax, end_time(%rip)
    00001b6f: 	movq	%rbx, %rdi
    00001b72: 	subq	start_time(%rip), %rax
    00001b79: 	cvtsi2sd	%rax, %xmm0
    00001b7e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001b86: 	callq	_Z13record_resultdPKc # Offset: 7046
    00001b8b: 	movq	0xa0(%rsp), %rdi
    00001b93: 	cmpq	%r13, %rdi
    00001b96: 	je	.Ltmp3322 # Offset: 7062
    00001b98: 	movq	0xb0(%rsp), %rax
    00001ba0: 	leaq	0x1(%rax), %rsi
    00001ba4: 	callq	_ZdlPvm@PLT # Offset: 7076
.Ltmp3322:
    00001ba9: 	leaq	DATAat0x57484(%rip), %rdx
    00001bb0: 	movq	%r14, %rsi
    00001bb3: 	movq	%r12, %rdi
    00001bb6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7094
    00001bbb: 	callq	clock@PLT # Offset: 7099
    00001bc0: 	movl	iterations(%rip), %ecx
    00001bc6: 	movq	%rax, start_time(%rip)
    00001bcd: 	testl	%ecx, %ecx
    00001bcf: 	jle	.Ltmp3323 # Offset: 7119
    00001bd5: 	movdqa	DATAat0x57c00(%rip), %xmm7
    00001bdd: 	movl	$0x0, 0x1c(%rsp)
    00001be5: 	leaq	0x2000(%rsp), %rbx
    00001bed: 	movaps	%xmm7, (%rsp)
    00001bf1: 	nopl	(%rax) # Size: 7
.Ltmp3326:
    00001bf8: 	movq	%rbp, %rax
    00001bfb: 	pxor	%xmm1, %xmm1
    00001bff: 	nop # Size: 1
.Ltmp3324:
    00001c00: 	movdqa	(%rax), %xmm0
    00001c04: 	addq	$0x10, %rax
    00001c08: 	psrlw	$0x1, %xmm0
    00001c0d: 	pand	(%rsp), %xmm0
    00001c12: 	paddb	%xmm0, %xmm1
    00001c16: 	cmpq	%rbx, %rax
    00001c19: 	jne	.Ltmp3324 # Offset: 7193
    00001c1b: 	cvttsd2si	init_value(%rip), %edx
    00001c23: 	movdqa	%xmm1, %xmm0
    00001c27: 	psrldq	$0x8, %xmm0
    00001c2c: 	paddb	%xmm0, %xmm1
    00001c30: 	pxor	%xmm0, %xmm0
    00001c34: 	psadbw	%xmm0, %xmm1
    00001c38: 	shrb	%dl
    00001c3a: 	movd	%xmm1, %eax
    00001c3e: 	shll	$0x6, %edx
    00001c41: 	cmpb	%al, %dl
    00001c43: 	je	.Ltmp3325 # Offset: 7235
    00001c45: 	movl	current_test(%rip), %edx
    00001c4b: 	leaq	DATAat0x571d0(%rip), %rsi
    00001c52: 	movl	$0x1, %edi
    00001c57: 	xorl	%eax, %eax
    00001c59: 	callq	__printf_chk@PLT # Offset: 7257
    00001c5e: 	movl	iterations(%rip), %ecx
.Ltmp3325:
    00001c64: 	addl	$0x1, 0x1c(%rsp)
    00001c69: 	movl	0x1c(%rsp), %eax
    00001c6d: 	cmpl	%ecx, %eax
    00001c6f: 	jl	.Ltmp3326 # Offset: 7279
.Ltmp3323:
    00001c75: 	movq	%r12, %rsi
    00001c78: 	movq	%r15, %rdi
    00001c7b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7291
    00001c80: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c87: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c8e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c95: 	je	.Ltmp3327 # Offset: 7317
.Ltmp3583:
    00001c9b: 	movq	-0x20(%rax), %rbx
    00001c9f: 	callq	clock@PLT # Offset: 7327
    00001ca4: 	pxor	%xmm0, %xmm0
    00001ca8: 	movq	%rax, end_time(%rip)
    00001caf: 	movq	%rbx, %rdi
    00001cb2: 	subq	start_time(%rip), %rax
    00001cb9: 	cvtsi2sd	%rax, %xmm0
    00001cbe: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001cc6: 	callq	_Z13record_resultdPKc # Offset: 7366
    00001ccb: 	movq	0xa0(%rsp), %rdi
    00001cd3: 	cmpq	%r13, %rdi
    00001cd6: 	je	.Ltmp3328 # Offset: 7382
    00001cd8: 	movq	0xb0(%rsp), %rax
    00001ce0: 	leaq	0x1(%rax), %rsi
    00001ce4: 	callq	_ZdlPvm@PLT # Offset: 7396
.Ltmp3328:
    00001ce9: 	leaq	DATAat0x57498(%rip), %rdx
    00001cf0: 	movq	%r14, %rsi
    00001cf3: 	movq	%r12, %rdi
    00001cf6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7414
    00001cfb: 	movq	%r12, %rdx
    00001cfe: 	movl	$0x2, %esi
    00001d03: 	movq	%rbp, %rdi
    00001d06: 	callq	"_Z14test_variable1Ih22custom_divide_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 7430
    00001d0b: 	movq	0xa0(%rsp), %rdi
    00001d13: 	cmpq	%r13, %rdi
    00001d16: 	je	.Ltmp3329 # Offset: 7446
    00001d18: 	movq	0xb0(%rsp), %rax
    00001d20: 	leaq	0x1(%rax), %rsi
    00001d24: 	callq	_ZdlPvm@PLT # Offset: 7460
.Ltmp3329:
    00001d29: 	leaq	DATAat0x574ae(%rip), %rdx
    00001d30: 	movq	%r14, %rsi
    00001d33: 	movq	%r12, %rdi
    00001d36: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7478
    00001d3b: 	callq	clock@PLT # Offset: 7483
    00001d40: 	movl	iterations(%rip), %ecx
    00001d46: 	movq	%rax, start_time(%rip)
    00001d4d: 	testl	%ecx, %ecx
    00001d4f: 	jle	.Ltmp3330 # Offset: 7503
    00001d55: 	movdqa	DATAat0x57c00(%rip), %xmm7
    00001d5d: 	movl	$0x0, 0x1c(%rsp)
    00001d65: 	leaq	0x2000(%rsp), %rbx
    00001d6d: 	movaps	%xmm7, (%rsp)
    00001d71: 	nopl	(%rax) # Size: 7
.Ltmp3333:
    00001d78: 	movq	%rbp, %rax
    00001d7b: 	pxor	%xmm1, %xmm1
    00001d7f: 	nop # Size: 1
.Ltmp3331:
    00001d80: 	movdqa	(%rax), %xmm0
    00001d84: 	addq	$0x10, %rax
    00001d88: 	psrlw	$0x1, %xmm0
    00001d8d: 	pand	(%rsp), %xmm0
    00001d92: 	paddb	%xmm0, %xmm1
    00001d96: 	cmpq	%rbx, %rax
    00001d99: 	jne	.Ltmp3331 # Offset: 7577
    00001d9b: 	cvttsd2si	init_value(%rip), %edx
    00001da3: 	movdqa	%xmm1, %xmm0
    00001da7: 	psrldq	$0x8, %xmm0
    00001dac: 	paddb	%xmm0, %xmm1
    00001db0: 	pxor	%xmm0, %xmm0
    00001db4: 	psadbw	%xmm0, %xmm1
    00001db8: 	shrb	%dl
    00001dba: 	movd	%xmm1, %eax
    00001dbe: 	shll	$0x6, %edx
    00001dc1: 	cmpb	%al, %dl
    00001dc3: 	je	.Ltmp3332 # Offset: 7619
    00001dc5: 	movl	current_test(%rip), %edx
    00001dcb: 	leaq	DATAat0x571d0(%rip), %rsi
    00001dd2: 	movl	$0x1, %edi
    00001dd7: 	xorl	%eax, %eax
    00001dd9: 	callq	__printf_chk@PLT # Offset: 7641
    00001dde: 	movl	iterations(%rip), %ecx
.Ltmp3332:
    00001de4: 	addl	$0x1, 0x1c(%rsp)
    00001de9: 	movl	0x1c(%rsp), %eax
    00001ded: 	cmpl	%ecx, %eax
    00001def: 	jl	.Ltmp3333 # Offset: 7663
.Ltmp3330:
    00001df5: 	movq	%r12, %rsi
    00001df8: 	movq	%r15, %rdi
    00001dfb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7675
    00001e00: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e07: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001e0e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e15: 	je	.Ltmp3334 # Offset: 7701
.Ltmp3582:
    00001e1b: 	movq	-0x20(%rax), %rbx
    00001e1f: 	callq	clock@PLT # Offset: 7711
    00001e24: 	pxor	%xmm0, %xmm0
    00001e28: 	movq	%rax, end_time(%rip)
    00001e2f: 	movq	%rbx, %rdi
    00001e32: 	subq	start_time(%rip), %rax
    00001e39: 	cvtsi2sd	%rax, %xmm0
    00001e3e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001e46: 	callq	_Z13record_resultdPKc # Offset: 7750
    00001e4b: 	movq	0xa0(%rsp), %rdi
    00001e53: 	cmpq	%r13, %rdi
    00001e56: 	je	.Ltmp3335 # Offset: 7766
    00001e58: 	movq	0xb0(%rsp), %rax
    00001e60: 	leaq	0x1(%rax), %rsi
    00001e64: 	callq	_ZdlPvm@PLT # Offset: 7780
.Ltmp3335:
    00001e69: 	leaq	DATAat0x574c4(%rip), %rdx
    00001e70: 	movq	%r14, %rsi
    00001e73: 	movq	%r12, %rdi
    00001e76: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7798
    00001e7b: 	callq	clock@PLT # Offset: 7803
    00001e80: 	movl	iterations(%rip), %ecx
    00001e86: 	movq	%rax, start_time(%rip)
    00001e8d: 	testl	%ecx, %ecx
    00001e8f: 	jle	.Ltmp3336 # Offset: 7823
    00001e95: 	movdqa	DATAat0x57d40(%rip), %xmm7
    00001e9d: 	movl	$0x0, 0x1c(%rsp)
    00001ea5: 	leaq	0x2000(%rsp), %rbx
    00001ead: 	movaps	%xmm7, (%rsp)
    00001eb1: 	nopl	(%rax) # Size: 7
.Ltmp3339:
    00001eb8: 	movq	%rbp, %rax
    00001ebb: 	pxor	%xmm1, %xmm1
    00001ebf: 	nop # Size: 1
.Ltmp3337:
    00001ec0: 	movdqa	(%rax), %xmm0
    00001ec4: 	addq	$0x10, %rax
    00001ec8: 	psrlw	$0x3, %xmm0
    00001ecd: 	pand	(%rsp), %xmm0
    00001ed2: 	paddb	%xmm0, %xmm1
    00001ed6: 	cmpq	%rax, %rbx
    00001ed9: 	jne	.Ltmp3337 # Offset: 7897
    00001edb: 	cvttsd2si	init_value(%rip), %edx
    00001ee3: 	movdqa	%xmm1, %xmm0
    00001ee7: 	psrldq	$0x8, %xmm0
    00001eec: 	paddb	%xmm0, %xmm1
    00001ef0: 	pxor	%xmm0, %xmm0
    00001ef4: 	psadbw	%xmm0, %xmm1
    00001ef8: 	shrb	$0x3, %dl
    00001efb: 	movd	%xmm1, %eax
    00001eff: 	shll	$0x6, %edx
    00001f02: 	cmpb	%al, %dl
    00001f04: 	je	.Ltmp3338 # Offset: 7940
    00001f06: 	movl	current_test(%rip), %edx
    00001f0c: 	leaq	DATAat0x571d0(%rip), %rsi
    00001f13: 	movl	$0x1, %edi
    00001f18: 	xorl	%eax, %eax
    00001f1a: 	callq	__printf_chk@PLT # Offset: 7962
    00001f1f: 	movl	iterations(%rip), %ecx
.Ltmp3338:
    00001f25: 	addl	$0x1, 0x1c(%rsp)
    00001f2a: 	movl	0x1c(%rsp), %eax
    00001f2e: 	cmpl	%ecx, %eax
    00001f30: 	jl	.Ltmp3339 # Offset: 7984
.Ltmp3336:
    00001f36: 	movq	%r12, %rsi
    00001f39: 	movq	%r15, %rdi
    00001f3c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7996
    00001f41: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f48: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f4f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f56: 	je	.Ltmp3340 # Offset: 8022
.Ltmp3581:
    00001f5c: 	movq	-0x20(%rax), %rbx
    00001f60: 	callq	clock@PLT # Offset: 8032
    00001f65: 	pxor	%xmm0, %xmm0
    00001f69: 	movq	%rax, end_time(%rip)
    00001f70: 	movq	%rbx, %rdi
    00001f73: 	subq	start_time(%rip), %rax
    00001f7a: 	cvtsi2sd	%rax, %xmm0
    00001f7f: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001f87: 	callq	_Z13record_resultdPKc # Offset: 8071
    00001f8c: 	movq	0xa0(%rsp), %rdi
    00001f94: 	cmpq	%r13, %rdi
    00001f97: 	je	.Ltmp3341 # Offset: 8087
    00001f99: 	movq	0xb0(%rsp), %rax
    00001fa1: 	leaq	0x1(%rax), %rsi
    00001fa5: 	callq	_ZdlPvm@PLT # Offset: 8101
.Ltmp3341:
    00001faa: 	leaq	DATAat0x579e8(%rip), %rdx
    00001fb1: 	movq	%r14, %rsi
    00001fb4: 	movq	%r12, %rdi
    00001fb7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8119
    00001fbc: 	callq	clock@PLT # Offset: 8124
    00001fc1: 	movl	iterations(%rip), %ecx
    00001fc7: 	movq	%rax, start_time(%rip)
    00001fce: 	testl	%ecx, %ecx
    00001fd0: 	jle	.Ltmp3342 # Offset: 8144
    00001fd6: 	movdqa	DATAat0x57d40(%rip), %xmm7
    00001fde: 	movl	$0x0, 0x1c(%rsp)
    00001fe6: 	leaq	0x2000(%rsp), %rbx
    00001fee: 	movaps	%xmm7, (%rsp)
    00001ff2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3345:
    00001ff8: 	movq	%rbp, %rax
    00001ffb: 	pxor	%xmm1, %xmm1
    00001fff: 	nop # Size: 1
.Ltmp3343:
    00002000: 	movdqa	(%rax), %xmm0
    00002004: 	addq	$0x10, %rax
    00002008: 	psrlw	$0x3, %xmm0
    0000200d: 	pand	(%rsp), %xmm0
    00002012: 	paddb	%xmm0, %xmm1
    00002016: 	cmpq	%rbx, %rax
    00002019: 	jne	.Ltmp3343 # Offset: 8217
    0000201b: 	cvttsd2si	init_value(%rip), %edx
    00002023: 	movdqa	%xmm1, %xmm0
    00002027: 	psrldq	$0x8, %xmm0
    0000202c: 	paddb	%xmm0, %xmm1
    00002030: 	pxor	%xmm0, %xmm0
    00002034: 	psadbw	%xmm0, %xmm1
    00002038: 	shrb	$0x3, %dl
    0000203b: 	movd	%xmm1, %eax
    0000203f: 	shll	$0x6, %edx
    00002042: 	cmpb	%al, %dl
    00002044: 	je	.Ltmp3344 # Offset: 8260
    00002046: 	movl	current_test(%rip), %edx
    0000204c: 	leaq	DATAat0x571d0(%rip), %rsi
    00002053: 	movl	$0x1, %edi
    00002058: 	xorl	%eax, %eax
    0000205a: 	callq	__printf_chk@PLT # Offset: 8282
    0000205f: 	movl	iterations(%rip), %ecx
.Ltmp3344:
    00002065: 	addl	$0x1, 0x1c(%rsp)
    0000206a: 	movl	0x1c(%rsp), %eax
    0000206e: 	cmpl	%ecx, %eax
    00002070: 	jl	.Ltmp3345 # Offset: 8304
.Ltmp3342:
    00002076: 	movq	%r12, %rsi
    00002079: 	movq	%r15, %rdi
    0000207c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8316
    00002081: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002088: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000208f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002096: 	je	.Ltmp3346 # Offset: 8342
.Ltmp3580:
    0000209c: 	movq	-0x20(%rax), %rbx
    000020a0: 	callq	clock@PLT # Offset: 8352
    000020a5: 	pxor	%xmm0, %xmm0
    000020a9: 	movq	%rax, end_time(%rip)
    000020b0: 	movq	%rbx, %rdi
    000020b3: 	subq	start_time(%rip), %rax
    000020ba: 	cvtsi2sd	%rax, %xmm0
    000020bf: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000020c7: 	callq	_Z13record_resultdPKc # Offset: 8391
    000020cc: 	movq	0xa0(%rsp), %rdi
    000020d4: 	cmpq	%r13, %rdi
    000020d7: 	je	.Ltmp3347 # Offset: 8407
    000020d9: 	movq	0xb0(%rsp), %rax
    000020e1: 	leaq	0x1(%rax), %rsi
    000020e5: 	callq	_ZdlPvm@PLT # Offset: 8421
.Ltmp3347:
    000020ea: 	leaq	DATAat0x574d6(%rip), %rdx
    000020f1: 	movq	%r14, %rsi
    000020f4: 	movq	%r12, %rdi
    000020f7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8439
    000020fc: 	movq	%r12, %rdx
    000020ff: 	movl	$0x8, %esi
    00002104: 	movq	%rbp, %rdi
    00002107: 	callq	"_Z14test_variable1Ih22custom_divide_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 8455
    0000210c: 	movq	0xa0(%rsp), %rdi
    00002114: 	cmpq	%r13, %rdi
    00002117: 	je	.Ltmp3348 # Offset: 8471
    00002119: 	movq	0xb0(%rsp), %rax
    00002121: 	leaq	0x1(%rax), %rsi
    00002125: 	callq	_ZdlPvm@PLT # Offset: 8485
.Ltmp3348:
    0000212a: 	leaq	DATAat0x574ec(%rip), %rdx
    00002131: 	movq	%r14, %rsi
    00002134: 	movq	%r12, %rdi
    00002137: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8503
    0000213c: 	callq	clock@PLT # Offset: 8508
    00002141: 	movl	iterations(%rip), %ecx
    00002147: 	movq	%rax, start_time(%rip)
    0000214e: 	testl	%ecx, %ecx
    00002150: 	jle	.Ltmp3349 # Offset: 8528
    00002156: 	movdqa	DATAat0x57d40(%rip), %xmm7
    0000215e: 	movl	$0x0, 0x1c(%rsp)
    00002166: 	leaq	0x2000(%rsp), %rbx
    0000216e: 	movaps	%xmm7, (%rsp)
    00002172: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3352:
    00002178: 	movq	%rbp, %rax
    0000217b: 	pxor	%xmm1, %xmm1
    0000217f: 	nop # Size: 1
.Ltmp3350:
    00002180: 	movdqa	(%rax), %xmm0
    00002184: 	addq	$0x10, %rax
    00002188: 	psrlw	$0x3, %xmm0
    0000218d: 	pand	(%rsp), %xmm0
    00002192: 	paddb	%xmm0, %xmm1
    00002196: 	cmpq	%rax, %rbx
    00002199: 	jne	.Ltmp3350 # Offset: 8601
    0000219b: 	cvttsd2si	init_value(%rip), %edx
    000021a3: 	movdqa	%xmm1, %xmm0
    000021a7: 	psrldq	$0x8, %xmm0
    000021ac: 	paddb	%xmm0, %xmm1
    000021b0: 	pxor	%xmm0, %xmm0
    000021b4: 	psadbw	%xmm0, %xmm1
    000021b8: 	shrb	$0x3, %dl
    000021bb: 	movd	%xmm1, %eax
    000021bf: 	shll	$0x6, %edx
    000021c2: 	cmpb	%al, %dl
    000021c4: 	je	.Ltmp3351 # Offset: 8644
    000021c6: 	movl	current_test(%rip), %edx
    000021cc: 	leaq	DATAat0x571d0(%rip), %rsi
    000021d3: 	movl	$0x1, %edi
    000021d8: 	xorl	%eax, %eax
    000021da: 	callq	__printf_chk@PLT # Offset: 8666
    000021df: 	movl	iterations(%rip), %ecx
.Ltmp3351:
    000021e5: 	addl	$0x1, 0x1c(%rsp)
    000021ea: 	movl	0x1c(%rsp), %eax
    000021ee: 	cmpl	%ecx, %eax
    000021f0: 	jl	.Ltmp3352 # Offset: 8688
.Ltmp3349:
    000021f6: 	movq	%r12, %rsi
    000021f9: 	movq	%r15, %rdi
    000021fc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8700
    00002201: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002208: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000220f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002216: 	je	.Ltmp3353 # Offset: 8726
.Ltmp3579:
    0000221c: 	movq	-0x20(%rax), %rbx
    00002220: 	callq	clock@PLT # Offset: 8736
    00002225: 	pxor	%xmm0, %xmm0
    00002229: 	movq	%rax, end_time(%rip)
    00002230: 	movq	%rbx, %rdi
    00002233: 	subq	start_time(%rip), %rax
    0000223a: 	cvtsi2sd	%rax, %xmm0
    0000223f: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002247: 	callq	_Z13record_resultdPKc # Offset: 8775
    0000224c: 	movq	0xa0(%rsp), %rdi
    00002254: 	cmpq	%r13, %rdi
    00002257: 	je	.Ltmp3354 # Offset: 8791
    00002259: 	movq	0xb0(%rsp), %rax
    00002261: 	leaq	0x1(%rax), %rsi
    00002265: 	callq	_ZdlPvm@PLT # Offset: 8805
.Ltmp3354:
    0000226a: 	leaq	DATAat0x57502(%rip), %rdx
    00002271: 	movq	%r14, %rsi
    00002274: 	movq	%r12, %rdi
    00002277: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8823
    0000227c: 	callq	clock@PLT # Offset: 8828
    00002281: 	movl	iterations(%rip), %ecx
    00002287: 	movq	%rax, start_time(%rip)
    0000228e: 	testl	%ecx, %ecx
    00002290: 	jle	.Ltmp3355 # Offset: 8848
    00002296: 	movdqa	DATAat0x57c10(%rip), %xmm7
    0000229e: 	movl	$0x0, 0x1c(%rsp)
    000022a6: 	leaq	0x2000(%rsp), %rbx
    000022ae: 	movaps	%xmm7, (%rsp)
    000022b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3358:
    000022b8: 	movq	%rbp, %rax
    000022bb: 	pxor	%xmm1, %xmm1
    000022bf: 	nop # Size: 1
.Ltmp3356:
    000022c0: 	movdqa	(%rax), %xmm0
    000022c4: 	addq	$0x10, %rax
    000022c8: 	psrlw	$0x6, %xmm0
    000022cd: 	pand	(%rsp), %xmm0
    000022d2: 	paddb	%xmm0, %xmm1
    000022d6: 	cmpq	%rbx, %rax
    000022d9: 	jne	.Ltmp3356 # Offset: 8921
    000022db: 	movdqa	%xmm1, %xmm0
    000022df: 	cvttsd2si	init_value(%rip), %edx
    000022e7: 	psrldq	$0x8, %xmm0
    000022ec: 	paddb	%xmm0, %xmm1
    000022f0: 	pxor	%xmm0, %xmm0
    000022f4: 	psadbw	%xmm0, %xmm1
    000022f8: 	movd	%xmm1, %eax
    000022fc: 	andl	$-0x40, %edx
    000022ff: 	cmpb	%al, %dl
    00002301: 	je	.Ltmp3357 # Offset: 8961
    00002303: 	movl	current_test(%rip), %edx
    00002309: 	leaq	DATAat0x571d0(%rip), %rsi
    00002310: 	movl	$0x1, %edi
    00002315: 	xorl	%eax, %eax
    00002317: 	callq	__printf_chk@PLT # Offset: 8983
    0000231c: 	movl	iterations(%rip), %ecx
.Ltmp3357:
    00002322: 	addl	$0x1, 0x1c(%rsp)
    00002327: 	movl	0x1c(%rsp), %eax
    0000232b: 	cmpl	%ecx, %eax
    0000232d: 	jl	.Ltmp3358 # Offset: 9005
.Ltmp3355:
    0000232f: 	movq	%r12, %rsi
    00002332: 	movq	%r15, %rdi
    00002335: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9013
    0000233a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002341: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002348: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000234f: 	je	.Ltmp3359 # Offset: 9039
.Ltmp3578:
    00002355: 	movq	-0x20(%rax), %rbx
    00002359: 	callq	clock@PLT # Offset: 9049
    0000235e: 	pxor	%xmm0, %xmm0
    00002362: 	movq	%rax, end_time(%rip)
    00002369: 	movq	%rbx, %rdi
    0000236c: 	subq	start_time(%rip), %rax
    00002373: 	cvtsi2sd	%rax, %xmm0
    00002378: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002380: 	callq	_Z13record_resultdPKc # Offset: 9088
    00002385: 	movq	0xa0(%rsp), %rdi
    0000238d: 	cmpq	%r13, %rdi
    00002390: 	je	.Ltmp3360 # Offset: 9104
    00002392: 	movq	0xb0(%rsp), %rax
    0000239a: 	leaq	0x1(%rax), %rsi
    0000239e: 	callq	_ZdlPvm@PLT # Offset: 9118
.Ltmp3360:
    000023a3: 	leaq	DATAat0x57a08(%rip), %rdx
    000023aa: 	movq	%r14, %rsi
    000023ad: 	movq	%r12, %rdi
    000023b0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9136
    000023b5: 	callq	clock@PLT # Offset: 9141
    000023ba: 	movl	iterations(%rip), %ecx
    000023c0: 	movq	%rax, start_time(%rip)
    000023c7: 	testl	%ecx, %ecx
    000023c9: 	jle	.Ltmp3361 # Offset: 9161
    000023cf: 	movdqa	DATAat0x57c10(%rip), %xmm7
    000023d7: 	movl	$0x0, 0x1c(%rsp)
    000023df: 	leaq	0x2000(%rsp), %rbx
    000023e7: 	movaps	%xmm7, (%rsp)
    000023eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3364:
    000023f0: 	movq	%rbp, %rax
    000023f3: 	pxor	%xmm1, %xmm1
    000023f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3362:
    00002400: 	movdqa	(%rax), %xmm0
    00002404: 	addq	$0x10, %rax
    00002408: 	psrlw	$0x6, %xmm0
    0000240d: 	pand	(%rsp), %xmm0
    00002412: 	paddb	%xmm0, %xmm1
    00002416: 	cmpq	%rax, %rbx
    00002419: 	jne	.Ltmp3362 # Offset: 9241
    0000241b: 	movdqa	%xmm1, %xmm0
    0000241f: 	cvttsd2si	init_value(%rip), %edx
    00002427: 	psrldq	$0x8, %xmm0
    0000242c: 	paddb	%xmm0, %xmm1
    00002430: 	pxor	%xmm0, %xmm0
    00002434: 	psadbw	%xmm0, %xmm1
    00002438: 	movd	%xmm1, %eax
    0000243c: 	andl	$-0x40, %edx
    0000243f: 	cmpb	%al, %dl
    00002441: 	je	.Ltmp3363 # Offset: 9281
    00002443: 	movl	current_test(%rip), %edx
    00002449: 	leaq	DATAat0x571d0(%rip), %rsi
    00002450: 	movl	$0x1, %edi
    00002455: 	xorl	%eax, %eax
    00002457: 	callq	__printf_chk@PLT # Offset: 9303
    0000245c: 	movl	iterations(%rip), %ecx
.Ltmp3363:
    00002462: 	addl	$0x1, 0x1c(%rsp)
    00002467: 	movl	0x1c(%rsp), %eax
    0000246b: 	cmpl	%ecx, %eax
    0000246d: 	jl	.Ltmp3364 # Offset: 9325
.Ltmp3361:
    0000246f: 	movq	%r12, %rsi
    00002472: 	movq	%r15, %rdi
    00002475: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9333
    0000247a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002481: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002488: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000248f: 	je	.Ltmp3365 # Offset: 9359
.Ltmp3577:
    00002495: 	movq	-0x20(%rax), %rbx
    00002499: 	callq	clock@PLT # Offset: 9369
    0000249e: 	pxor	%xmm0, %xmm0
    000024a2: 	movq	%rax, end_time(%rip)
    000024a9: 	movq	%rbx, %rdi
    000024ac: 	subq	start_time(%rip), %rax
    000024b3: 	cvtsi2sd	%rax, %xmm0
    000024b8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000024c0: 	callq	_Z13record_resultdPKc # Offset: 9408
    000024c5: 	movq	0xa0(%rsp), %rdi
    000024cd: 	cmpq	%r13, %rdi
    000024d0: 	je	.Ltmp3366 # Offset: 9424
    000024d2: 	movq	0xb0(%rsp), %rax
    000024da: 	leaq	0x1(%rax), %rsi
    000024de: 	callq	_ZdlPvm@PLT # Offset: 9438
.Ltmp3366:
    000024e3: 	leaq	DATAat0x57514(%rip), %rdx
    000024ea: 	movq	%r14, %rsi
    000024ed: 	movq	%r12, %rdi
    000024f0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9456
    000024f5: 	movq	%r12, %rdx
    000024f8: 	movl	$0x40, %esi
    000024fd: 	movq	%rbp, %rdi
    00002500: 	callq	"_Z14test_variable1Ih22custom_divide_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 9472
    00002505: 	movq	0xa0(%rsp), %rdi
    0000250d: 	cmpq	%r13, %rdi
    00002510: 	je	.Ltmp3367 # Offset: 9488
    00002512: 	movq	0xb0(%rsp), %rax
    0000251a: 	leaq	0x1(%rax), %rsi
    0000251e: 	callq	_ZdlPvm@PLT # Offset: 9502
.Ltmp3367:
    00002523: 	leaq	DATAat0x5752b(%rip), %rdx
    0000252a: 	movq	%r14, %rsi
    0000252d: 	movq	%r12, %rdi
    00002530: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9520
    00002535: 	callq	clock@PLT # Offset: 9525
    0000253a: 	movl	iterations(%rip), %ecx
    00002540: 	movq	%rax, start_time(%rip)
    00002547: 	testl	%ecx, %ecx
    00002549: 	jle	.Ltmp3368 # Offset: 9545
    0000254f: 	movdqa	DATAat0x57c10(%rip), %xmm7
    00002557: 	movl	$0x0, 0x1c(%rsp)
    0000255f: 	leaq	0x2000(%rsp), %rbx
    00002567: 	movaps	%xmm7, (%rsp)
    0000256b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3371:
    00002570: 	movq	%rbp, %rax
    00002573: 	pxor	%xmm1, %xmm1
    00002577: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3369:
    00002580: 	movdqa	(%rax), %xmm0
    00002584: 	addq	$0x10, %rax
    00002588: 	psrlw	$0x6, %xmm0
    0000258d: 	pand	(%rsp), %xmm0
    00002592: 	paddb	%xmm0, %xmm1
    00002596: 	cmpq	%rbx, %rax
    00002599: 	jne	.Ltmp3369 # Offset: 9625
    0000259b: 	movdqa	%xmm1, %xmm0
    0000259f: 	cvttsd2si	init_value(%rip), %edx
    000025a7: 	psrldq	$0x8, %xmm0
    000025ac: 	paddb	%xmm0, %xmm1
    000025b0: 	pxor	%xmm0, %xmm0
    000025b4: 	psadbw	%xmm0, %xmm1
    000025b8: 	movd	%xmm1, %eax
    000025bc: 	andl	$-0x40, %edx
    000025bf: 	cmpb	%al, %dl
    000025c1: 	je	.Ltmp3370 # Offset: 9665
    000025c3: 	movl	current_test(%rip), %edx
    000025c9: 	leaq	DATAat0x571d0(%rip), %rsi
    000025d0: 	movl	$0x1, %edi
    000025d5: 	xorl	%eax, %eax
    000025d7: 	callq	__printf_chk@PLT # Offset: 9687
    000025dc: 	movl	iterations(%rip), %ecx
.Ltmp3370:
    000025e2: 	addl	$0x1, 0x1c(%rsp)
    000025e7: 	movl	0x1c(%rsp), %eax
    000025eb: 	cmpl	%ecx, %eax
    000025ed: 	jl	.Ltmp3371 # Offset: 9709
.Ltmp3368:
    000025ef: 	movq	%r12, %rsi
    000025f2: 	movq	%r15, %rdi
    000025f5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9717
    000025fa: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002601: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002608: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000260f: 	je	.Ltmp3372 # Offset: 9743
.Ltmp3576:
    00002615: 	movq	-0x20(%rax), %rbx
    00002619: 	callq	clock@PLT # Offset: 9753
    0000261e: 	pxor	%xmm0, %xmm0
    00002622: 	movq	%rax, end_time(%rip)
    00002629: 	movq	%rbx, %rdi
    0000262c: 	subq	start_time(%rip), %rax
    00002633: 	cvtsi2sd	%rax, %xmm0
    00002638: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002640: 	callq	_Z13record_resultdPKc # Offset: 9792
    00002645: 	movq	0xa0(%rsp), %rdi
    0000264d: 	cmpq	%r13, %rdi
    00002650: 	je	.Ltmp3373 # Offset: 9808
    00002652: 	movq	0xb0(%rsp), %rax
    0000265a: 	leaq	0x1(%rax), %rsi
    0000265e: 	callq	_ZdlPvm@PLT # Offset: 9822
.Ltmp3373:
    00002663: 	leaq	0x80(%rsp), %rdi
    0000266b: 	leaq	DATAat0x57542(%rip), %rdx
    00002672: 	movq	%r14, %rsi
    00002675: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9845
    0000267a: 	movl	iterations(%rip), %edx
    00002680: 	xorl	%r8d, %r8d
    00002683: 	xorl	%ecx, %ecx
    00002685: 	movl	$0x1f40, %esi
    0000268a: 	movq	0x80(%rsp), %rdi
    00002692: 	callq	_Z9summarizePKciiii # Offset: 9874
    00002697: 	leaq	DATAat0x5755d(%rip), %rdx
    0000269e: 	movq	%r14, %rsi
    000026a1: 	movq	%r12, %rdi
    000026a4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9892
    000026a9: 	callq	clock@PLT # Offset: 9897
    000026ae: 	movl	iterations(%rip), %ecx
    000026b4: 	movq	%rax, start_time(%rip)
    000026bb: 	testl	%ecx, %ecx
    000026bd: 	jle	.Ltmp3374 # Offset: 9917
    000026c3: 	movdqa	DATAat0x57f20(%rip), %xmm7
    000026cb: 	movl	$0x0, 0x1c(%rsp)
    000026d3: 	leaq	0x2000(%rsp), %rbx
    000026db: 	movaps	%xmm7, (%rsp)
    000026df: 	nop # Size: 1
.Ltmp3377:
    000026e0: 	movq	%rbp, %rax
    000026e3: 	pxor	%xmm0, %xmm0
    000026e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3375:
    000026f0: 	movdqa	(%rsp), %xmm1
    000026f5: 	pand	(%rax), %xmm1
    000026f9: 	addq	$0x10, %rax
    000026fd: 	paddb	%xmm1, %xmm0
    00002701: 	cmpq	%rax, %rbx
    00002704: 	jne	.Ltmp3375 # Offset: 9988
    00002706: 	cvttsd2si	init_value(%rip), %edx
    0000270e: 	movdqa	%xmm0, %xmm1
    00002712: 	psrldq	$0x8, %xmm1
    00002717: 	paddb	%xmm1, %xmm0
    0000271b: 	pxor	%xmm1, %xmm1
    0000271f: 	psadbw	%xmm1, %xmm0
    00002723: 	andl	$0x1, %edx
    00002726: 	movd	%xmm0, %eax
    0000272a: 	shll	$0x6, %edx
    0000272d: 	cmpb	%al, %dl
    0000272f: 	je	.Ltmp3376 # Offset: 10031
    00002731: 	movl	current_test(%rip), %edx
    00002737: 	leaq	DATAat0x571d0(%rip), %rsi
    0000273e: 	movl	$0x1, %edi
    00002743: 	xorl	%eax, %eax
    00002745: 	callq	__printf_chk@PLT # Offset: 10053
    0000274a: 	movl	iterations(%rip), %ecx
.Ltmp3376:
    00002750: 	addl	$0x1, 0x1c(%rsp)
    00002755: 	movl	0x1c(%rsp), %eax
    00002759: 	cmpl	%ecx, %eax
    0000275b: 	jl	.Ltmp3377 # Offset: 10075
.Ltmp3374:
    0000275d: 	movq	%r12, %rsi
    00002760: 	movq	%r15, %rdi
    00002763: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10083
    00002768: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000276f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002776: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000277d: 	je	.Ltmp3378 # Offset: 10109
.Ltmp3575:
    00002783: 	movq	-0x20(%rax), %rbx
    00002787: 	callq	clock@PLT # Offset: 10119
    0000278c: 	pxor	%xmm0, %xmm0
    00002790: 	movq	%rax, end_time(%rip)
    00002797: 	movq	%rbx, %rdi
    0000279a: 	subq	start_time(%rip), %rax
    000027a1: 	cvtsi2sd	%rax, %xmm0
    000027a6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000027ae: 	callq	_Z13record_resultdPKc # Offset: 10158
    000027b3: 	movq	0xa0(%rsp), %rdi
    000027bb: 	cmpq	%r13, %rdi
    000027be: 	je	.Ltmp3379 # Offset: 10174
    000027c0: 	movq	0xb0(%rsp), %rax
    000027c8: 	leaq	0x1(%rax), %rsi
    000027cc: 	callq	_ZdlPvm@PLT # Offset: 10188
.Ltmp3379:
    000027d1: 	leaq	DATAat0x57564(%rip), %rdx
    000027d8: 	movq	%r14, %rsi
    000027db: 	movq	%r12, %rdi
    000027de: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10206
    000027e3: 	callq	clock@PLT # Offset: 10211
    000027e8: 	movl	iterations(%rip), %ecx
    000027ee: 	movq	%rax, start_time(%rip)
    000027f5: 	testl	%ecx, %ecx
    000027f7: 	jle	.Ltmp3380 # Offset: 10231
    000027fd: 	movdqa	DATAat0x57f20(%rip), %xmm7
    00002805: 	movl	$0x0, 0x1c(%rsp)
    0000280d: 	leaq	0x2000(%rsp), %rbx
    00002815: 	movaps	%xmm7, (%rsp)
    00002819: 	nopl	(%rax) # Size: 7
.Ltmp3383:
    00002820: 	movq	%rbp, %rax
    00002823: 	pxor	%xmm0, %xmm0
    00002827: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3381:
    00002830: 	movdqa	(%rsp), %xmm1
    00002835: 	pand	(%rax), %xmm1
    00002839: 	addq	$0x10, %rax
    0000283d: 	paddb	%xmm1, %xmm0
    00002841: 	cmpq	%rbx, %rax
    00002844: 	jne	.Ltmp3381 # Offset: 10308
    00002846: 	cvttsd2si	init_value(%rip), %edx
    0000284e: 	movdqa	%xmm0, %xmm1
    00002852: 	psrldq	$0x8, %xmm1
    00002857: 	paddb	%xmm1, %xmm0
    0000285b: 	pxor	%xmm1, %xmm1
    0000285f: 	psadbw	%xmm1, %xmm0
    00002863: 	andl	$0x1, %edx
    00002866: 	movd	%xmm0, %eax
    0000286a: 	shll	$0x6, %edx
    0000286d: 	cmpb	%al, %dl
    0000286f: 	je	.Ltmp3382 # Offset: 10351
    00002871: 	movl	current_test(%rip), %edx
    00002877: 	leaq	DATAat0x571d0(%rip), %rsi
    0000287e: 	movl	$0x1, %edi
    00002883: 	xorl	%eax, %eax
    00002885: 	callq	__printf_chk@PLT # Offset: 10373
    0000288a: 	movl	iterations(%rip), %ecx
.Ltmp3382:
    00002890: 	addl	$0x1, 0x1c(%rsp)
    00002895: 	movl	0x1c(%rsp), %eax
    00002899: 	cmpl	%ecx, %eax
    0000289b: 	jl	.Ltmp3383 # Offset: 10395
.Ltmp3380:
    0000289d: 	movq	%r12, %rsi
    000028a0: 	movq	%r15, %rdi
    000028a3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10403
    000028a8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000028af: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000028b6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000028bd: 	je	.Ltmp3384 # Offset: 10429
.Ltmp3574:
    000028c3: 	movq	-0x20(%rax), %rbx
    000028c7: 	callq	clock@PLT # Offset: 10439
    000028cc: 	pxor	%xmm0, %xmm0
    000028d0: 	movq	%rax, end_time(%rip)
    000028d7: 	movq	%rbx, %rdi
    000028da: 	subq	start_time(%rip), %rax
    000028e1: 	cvtsi2sd	%rax, %xmm0
    000028e6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000028ee: 	callq	_Z13record_resultdPKc # Offset: 10478
    000028f3: 	movq	0xa0(%rsp), %rdi
    000028fb: 	cmpq	%r13, %rdi
    000028fe: 	je	.Ltmp3385 # Offset: 10494
    00002900: 	movq	0xb0(%rsp), %rax
    00002908: 	leaq	0x1(%rax), %rsi
    0000290c: 	callq	_ZdlPvm@PLT # Offset: 10508
.Ltmp3385:
    00002911: 	leaq	DATAat0x57575(%rip), %rdx
    00002918: 	movq	%r14, %rsi
    0000291b: 	movq	%r12, %rdi
    0000291e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10526
    00002923: 	callq	clock@PLT # Offset: 10531
    00002928: 	movl	iterations(%rip), %ecx
    0000292e: 	movq	%rax, start_time(%rip)
    00002935: 	testl	%ecx, %ecx
    00002937: 	jle	.Ltmp3386 # Offset: 10551
    0000293d: 	movdqa	DATAat0x57f20(%rip), %xmm7
    00002945: 	movl	$0x0, 0x1c(%rsp)
    0000294d: 	leaq	0x2000(%rsp), %rbx
    00002955: 	movaps	%xmm7, (%rsp)
    00002959: 	nopl	(%rax) # Size: 7
.Ltmp3389:
    00002960: 	movq	%rbp, %rax
    00002963: 	pxor	%xmm0, %xmm0
    00002967: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3387:
    00002970: 	movdqa	(%rsp), %xmm1
    00002975: 	pand	(%rax), %xmm1
    00002979: 	addq	$0x10, %rax
    0000297d: 	paddb	%xmm1, %xmm0
    00002981: 	cmpq	%rax, %rbx
    00002984: 	jne	.Ltmp3387 # Offset: 10628
    00002986: 	cvttsd2si	init_value(%rip), %edx
    0000298e: 	movdqa	%xmm0, %xmm1
    00002992: 	psrldq	$0x8, %xmm1
    00002997: 	paddb	%xmm1, %xmm0
    0000299b: 	pxor	%xmm1, %xmm1
    0000299f: 	psadbw	%xmm1, %xmm0
    000029a3: 	andl	$0x1, %edx
    000029a6: 	movd	%xmm0, %eax
    000029aa: 	shll	$0x6, %edx
    000029ad: 	cmpb	%al, %dl
    000029af: 	je	.Ltmp3388 # Offset: 10671
    000029b1: 	movl	current_test(%rip), %edx
    000029b7: 	leaq	DATAat0x571d0(%rip), %rsi
    000029be: 	movl	$0x1, %edi
    000029c3: 	xorl	%eax, %eax
    000029c5: 	callq	__printf_chk@PLT # Offset: 10693
    000029ca: 	movl	iterations(%rip), %ecx
.Ltmp3388:
    000029d0: 	addl	$0x1, 0x1c(%rsp)
    000029d5: 	movl	0x1c(%rsp), %eax
    000029d9: 	cmpl	%ecx, %eax
    000029db: 	jl	.Ltmp3389 # Offset: 10715
.Ltmp3386:
    000029dd: 	movq	%r12, %rsi
    000029e0: 	movq	%r15, %rdi
    000029e3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10723
    000029e8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000029ef: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000029f6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000029fd: 	je	.Ltmp3390 # Offset: 10749
.Ltmp3573:
    00002a03: 	movq	-0x20(%rax), %rbx
    00002a07: 	callq	clock@PLT # Offset: 10759
    00002a0c: 	pxor	%xmm0, %xmm0
    00002a10: 	movq	%rax, end_time(%rip)
    00002a17: 	movq	%rbx, %rdi
    00002a1a: 	subq	start_time(%rip), %rax
    00002a21: 	cvtsi2sd	%rax, %xmm0
    00002a26: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002a2e: 	callq	_Z13record_resultdPKc # Offset: 10798
    00002a33: 	movq	0xa0(%rsp), %rdi
    00002a3b: 	cmpq	%r13, %rdi
    00002a3e: 	je	.Ltmp3391 # Offset: 10814
    00002a40: 	movq	0xb0(%rsp), %rax
    00002a48: 	leaq	0x1(%rax), %rsi
    00002a4c: 	callq	_ZdlPvm@PLT # Offset: 10828
.Ltmp3391:
    00002a51: 	leaq	DATAat0x57587(%rip), %rdx
    00002a58: 	movq	%r14, %rsi
    00002a5b: 	movq	%r12, %rdi
    00002a5e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10846
    00002a63: 	callq	clock@PLT # Offset: 10851
    00002a68: 	movl	iterations(%rip), %ecx
    00002a6e: 	movq	%rax, start_time(%rip)
    00002a75: 	testl	%ecx, %ecx
    00002a77: 	jle	.Ltmp3392 # Offset: 10871
    00002a7d: 	movdqa	DATAat0x57f20(%rip), %xmm7
    00002a85: 	movl	$0x0, 0x1c(%rsp)
    00002a8d: 	leaq	0x2000(%rsp), %rbx
    00002a95: 	movaps	%xmm7, (%rsp)
    00002a99: 	nopl	(%rax) # Size: 7
.Ltmp3395:
    00002aa0: 	movq	%rbp, %rax
    00002aa3: 	pxor	%xmm0, %xmm0
    00002aa7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3393:
    00002ab0: 	movdqa	(%rsp), %xmm1
    00002ab5: 	pand	(%rax), %xmm1
    00002ab9: 	addq	$0x10, %rax
    00002abd: 	paddb	%xmm1, %xmm0
    00002ac1: 	cmpq	%rbx, %rax
    00002ac4: 	jne	.Ltmp3393 # Offset: 10948
    00002ac6: 	cvttsd2si	init_value(%rip), %edx
    00002ace: 	movdqa	%xmm0, %xmm1
    00002ad2: 	psrldq	$0x8, %xmm1
    00002ad7: 	paddb	%xmm1, %xmm0
    00002adb: 	pxor	%xmm1, %xmm1
    00002adf: 	psadbw	%xmm1, %xmm0
    00002ae3: 	andl	$0x1, %edx
    00002ae6: 	movd	%xmm0, %eax
    00002aea: 	shll	$0x6, %edx
    00002aed: 	cmpb	%al, %dl
    00002aef: 	je	.Ltmp3394 # Offset: 10991
    00002af1: 	movl	current_test(%rip), %edx
    00002af7: 	leaq	DATAat0x571d0(%rip), %rsi
    00002afe: 	movl	$0x1, %edi
    00002b03: 	xorl	%eax, %eax
    00002b05: 	callq	__printf_chk@PLT # Offset: 11013
    00002b0a: 	movl	iterations(%rip), %ecx
.Ltmp3394:
    00002b10: 	addl	$0x1, 0x1c(%rsp)
    00002b15: 	movl	0x1c(%rsp), %eax
    00002b19: 	cmpl	%ecx, %eax
    00002b1b: 	jl	.Ltmp3395 # Offset: 11035
.Ltmp3392:
    00002b1d: 	movq	%r12, %rsi
    00002b20: 	movq	%r15, %rdi
    00002b23: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11043
    00002b28: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002b2f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002b36: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002b3d: 	je	.Ltmp3396 # Offset: 11069
.Ltmp3572:
    00002b43: 	movq	-0x20(%rax), %rbx
    00002b47: 	callq	clock@PLT # Offset: 11079
    00002b4c: 	pxor	%xmm0, %xmm0
    00002b50: 	movq	%rax, end_time(%rip)
    00002b57: 	movq	%rbx, %rdi
    00002b5a: 	subq	start_time(%rip), %rax
    00002b61: 	cvtsi2sd	%rax, %xmm0
    00002b66: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002b6e: 	callq	_Z13record_resultdPKc # Offset: 11118
    00002b73: 	movq	0xa0(%rsp), %rdi
    00002b7b: 	cmpq	%r13, %rdi
    00002b7e: 	je	.Ltmp3397 # Offset: 11134
    00002b80: 	movq	0xb0(%rsp), %rax
    00002b88: 	leaq	0x1(%rax), %rsi
    00002b8c: 	callq	_ZdlPvm@PLT # Offset: 11148
.Ltmp3397:
    00002b91: 	leaq	DATAat0x5759e(%rip), %rdx
    00002b98: 	movq	%r14, %rsi
    00002b9b: 	movq	%r12, %rdi
    00002b9e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11166
    00002ba3: 	movq	%r12, %rdx
    00002ba6: 	movl	$0x2, %esi
    00002bab: 	movq	%rbp, %rdi
    00002bae: 	callq	"_Z14test_variable1Ih25custom_remainder_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 11182
    00002bb3: 	movq	0xa0(%rsp), %rdi
    00002bbb: 	cmpq	%r13, %rdi
    00002bbe: 	je	.Ltmp3398 # Offset: 11198
    00002bc0: 	movq	0xb0(%rsp), %rax
    00002bc8: 	leaq	0x1(%rax), %rsi
    00002bcc: 	callq	_ZdlPvm@PLT # Offset: 11212
.Ltmp3398:
    00002bd1: 	leaq	DATAat0x575b7(%rip), %rdx
    00002bd8: 	movq	%r14, %rsi
    00002bdb: 	movq	%r12, %rdi
    00002bde: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11230
    00002be3: 	callq	clock@PLT # Offset: 11235
    00002be8: 	movl	iterations(%rip), %ecx
    00002bee: 	movq	%rax, start_time(%rip)
    00002bf5: 	testl	%ecx, %ecx
    00002bf7: 	jle	.Ltmp3399 # Offset: 11255
    00002bfd: 	movdqa	DATAat0x57f20(%rip), %xmm7
    00002c05: 	movl	$0x0, 0x1c(%rsp)
    00002c0d: 	leaq	0x2000(%rsp), %rbx
    00002c15: 	movaps	%xmm7, (%rsp)
    00002c19: 	nopl	(%rax) # Size: 7
.Ltmp3402:
    00002c20: 	movq	%rbp, %rax
    00002c23: 	pxor	%xmm0, %xmm0
    00002c27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3400:
    00002c30: 	movdqa	(%rsp), %xmm1
    00002c35: 	pand	(%rax), %xmm1
    00002c39: 	addq	$0x10, %rax
    00002c3d: 	paddb	%xmm1, %xmm0
    00002c41: 	cmpq	%rbx, %rax
    00002c44: 	jne	.Ltmp3400 # Offset: 11332
    00002c46: 	cvttsd2si	init_value(%rip), %edx
    00002c4e: 	movdqa	%xmm0, %xmm1
    00002c52: 	psrldq	$0x8, %xmm1
    00002c57: 	paddb	%xmm1, %xmm0
    00002c5b: 	pxor	%xmm1, %xmm1
    00002c5f: 	psadbw	%xmm1, %xmm0
    00002c63: 	andl	$0x1, %edx
    00002c66: 	movd	%xmm0, %eax
    00002c6a: 	shll	$0x6, %edx
    00002c6d: 	cmpb	%al, %dl
    00002c6f: 	je	.Ltmp3401 # Offset: 11375
    00002c71: 	movl	current_test(%rip), %edx
    00002c77: 	leaq	DATAat0x571d0(%rip), %rsi
    00002c7e: 	movl	$0x1, %edi
    00002c83: 	xorl	%eax, %eax
    00002c85: 	callq	__printf_chk@PLT # Offset: 11397
    00002c8a: 	movl	iterations(%rip), %ecx
.Ltmp3401:
    00002c90: 	addl	$0x1, 0x1c(%rsp)
    00002c95: 	movl	0x1c(%rsp), %eax
    00002c99: 	cmpl	%ecx, %eax
    00002c9b: 	jl	.Ltmp3402 # Offset: 11419
.Ltmp3399:
    00002c9d: 	movq	%r12, %rsi
    00002ca0: 	movq	%r15, %rdi
    00002ca3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11427
    00002ca8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002caf: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002cb6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002cbd: 	je	.Ltmp3403 # Offset: 11453
.Ltmp3571:
    00002cc3: 	movq	-0x20(%rax), %rbx
    00002cc7: 	callq	clock@PLT # Offset: 11463
    00002ccc: 	pxor	%xmm0, %xmm0
    00002cd0: 	movq	%rax, end_time(%rip)
    00002cd7: 	movq	%rbx, %rdi
    00002cda: 	subq	start_time(%rip), %rax
    00002ce1: 	cvtsi2sd	%rax, %xmm0
    00002ce6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002cee: 	callq	_Z13record_resultdPKc # Offset: 11502
    00002cf3: 	movq	0xa0(%rsp), %rdi
    00002cfb: 	cmpq	%r13, %rdi
    00002cfe: 	je	.Ltmp3404 # Offset: 11518
    00002d00: 	movq	0xb0(%rsp), %rax
    00002d08: 	leaq	0x1(%rax), %rsi
    00002d0c: 	callq	_ZdlPvm@PLT # Offset: 11532
.Ltmp3404:
    00002d11: 	leaq	DATAat0x575d0(%rip), %rdx
    00002d18: 	movq	%r14, %rsi
    00002d1b: 	movq	%r12, %rdi
    00002d1e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11550
    00002d23: 	callq	clock@PLT # Offset: 11555
    00002d28: 	movl	iterations(%rip), %ecx
    00002d2e: 	movq	%rax, start_time(%rip)
    00002d35: 	testl	%ecx, %ecx
    00002d37: 	jle	.Ltmp3405 # Offset: 11575
    00002d3d: 	movdqa	DATAat0x57c10(%rip), %xmm7
    00002d45: 	movl	$0x0, 0x1c(%rsp)
    00002d4d: 	leaq	0x2000(%rsp), %rbx
    00002d55: 	movaps	%xmm7, (%rsp)
    00002d59: 	nopl	(%rax) # Size: 7
.Ltmp3408:
    00002d60: 	movq	%rbp, %rax
    00002d63: 	pxor	%xmm0, %xmm0
    00002d67: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3406:
    00002d70: 	movdqa	(%rsp), %xmm1
    00002d75: 	pand	(%rax), %xmm1
    00002d79: 	addq	$0x10, %rax
    00002d7d: 	paddb	%xmm1, %xmm0
    00002d81: 	cmpq	%rax, %rbx
    00002d84: 	jne	.Ltmp3406 # Offset: 11652
    00002d86: 	movdqa	%xmm0, %xmm1
    00002d8a: 	cvttsd2si	init_value(%rip), %edx
    00002d92: 	psrldq	$0x8, %xmm1
    00002d97: 	paddb	%xmm1, %xmm0
    00002d9b: 	pxor	%xmm1, %xmm1
    00002d9f: 	psadbw	%xmm1, %xmm0
    00002da3: 	movd	%xmm0, %eax
    00002da7: 	shll	$0x6, %edx
    00002daa: 	cmpb	%al, %dl
    00002dac: 	je	.Ltmp3407 # Offset: 11692
    00002dae: 	movl	current_test(%rip), %edx
    00002db4: 	leaq	DATAat0x571d0(%rip), %rsi
    00002dbb: 	movl	$0x1, %edi
    00002dc0: 	xorl	%eax, %eax
    00002dc2: 	callq	__printf_chk@PLT # Offset: 11714
    00002dc7: 	movl	iterations(%rip), %ecx
.Ltmp3407:
    00002dcd: 	addl	$0x1, 0x1c(%rsp)
    00002dd2: 	movl	0x1c(%rsp), %eax
    00002dd6: 	cmpl	%ecx, %eax
    00002dd8: 	jl	.Ltmp3408 # Offset: 11736
.Ltmp3405:
    00002dda: 	movq	%r12, %rsi
    00002ddd: 	movq	%r15, %rdi
    00002de0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11744
    00002de5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002dec: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002df3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002dfa: 	je	.Ltmp3409 # Offset: 11770
.Ltmp3570:
    00002e00: 	movq	-0x20(%rax), %rbx
    00002e04: 	callq	clock@PLT # Offset: 11780
    00002e09: 	pxor	%xmm0, %xmm0
    00002e0d: 	movq	%rax, end_time(%rip)
    00002e14: 	movq	%rbx, %rdi
    00002e17: 	subq	start_time(%rip), %rax
    00002e1e: 	cvtsi2sd	%rax, %xmm0
    00002e23: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002e2b: 	callq	_Z13record_resultdPKc # Offset: 11819
    00002e30: 	movq	0xa0(%rsp), %rdi
    00002e38: 	cmpq	%r13, %rdi
    00002e3b: 	je	.Ltmp3410 # Offset: 11835
    00002e3d: 	movq	0xb0(%rsp), %rax
    00002e45: 	leaq	0x1(%rax), %rsi
    00002e49: 	callq	_ZdlPvm@PLT # Offset: 11849
.Ltmp3410:
    00002e4e: 	leaq	DATAat0x575d7(%rip), %rdx
    00002e55: 	movq	%r14, %rsi
    00002e58: 	movq	%r12, %rdi
    00002e5b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11867
    00002e60: 	movq	%r12, %rsi
    00002e63: 	movq	%rbp, %rdi
    00002e66: 	callq	"_Z13test_constantIh13and_remainderIhLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 11878
    00002e6b: 	movq	0xa0(%rsp), %rdi
    00002e73: 	cmpq	%r13, %rdi
    00002e76: 	je	.Ltmp3411 # Offset: 11894
    00002e78: 	movq	0xb0(%rsp), %rax
    00002e80: 	leaq	0x1(%rax), %rsi
    00002e84: 	callq	_ZdlPvm@PLT # Offset: 11908
.Ltmp3411:
    00002e89: 	leaq	DATAat0x575e8(%rip), %rdx
    00002e90: 	movq	%r14, %rsi
    00002e93: 	movq	%r12, %rdi
    00002e96: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11926
    00002e9b: 	callq	clock@PLT # Offset: 11931
    00002ea0: 	movl	iterations(%rip), %ecx
    00002ea6: 	movq	%rax, start_time(%rip)
    00002ead: 	testl	%ecx, %ecx
    00002eaf: 	jle	.Ltmp3412 # Offset: 11951
    00002eb5: 	movdqa	DATAat0x57c10(%rip), %xmm7
    00002ebd: 	movl	$0x0, 0x1c(%rsp)
    00002ec5: 	leaq	0x2000(%rsp), %rbx
    00002ecd: 	movaps	%xmm7, (%rsp)
    00002ed1: 	nopl	(%rax) # Size: 7
.Ltmp3415:
    00002ed8: 	movq	%rbp, %rax
    00002edb: 	pxor	%xmm0, %xmm0
    00002edf: 	nop # Size: 1
.Ltmp3413:
    00002ee0: 	movdqa	(%rsp), %xmm1
    00002ee5: 	pand	(%rax), %xmm1
    00002ee9: 	addq	$0x10, %rax
    00002eed: 	paddb	%xmm1, %xmm0
    00002ef1: 	cmpq	%rbx, %rax
    00002ef4: 	jne	.Ltmp3413 # Offset: 12020
    00002ef6: 	movdqa	%xmm0, %xmm1
    00002efa: 	cvttsd2si	init_value(%rip), %edx
    00002f02: 	psrldq	$0x8, %xmm1
    00002f07: 	paddb	%xmm1, %xmm0
    00002f0b: 	pxor	%xmm1, %xmm1
    00002f0f: 	psadbw	%xmm1, %xmm0
    00002f13: 	movd	%xmm0, %eax
    00002f17: 	shll	$0x6, %edx
    00002f1a: 	cmpb	%al, %dl
    00002f1c: 	je	.Ltmp3414 # Offset: 12060
    00002f1e: 	movl	current_test(%rip), %edx
    00002f24: 	leaq	DATAat0x571d0(%rip), %rsi
    00002f2b: 	movl	$0x1, %edi
    00002f30: 	xorl	%eax, %eax
    00002f32: 	callq	__printf_chk@PLT # Offset: 12082
    00002f37: 	movl	iterations(%rip), %ecx
.Ltmp3414:
    00002f3d: 	addl	$0x1, 0x1c(%rsp)
    00002f42: 	movl	0x1c(%rsp), %eax
    00002f46: 	cmpl	%ecx, %eax
    00002f48: 	jl	.Ltmp3415 # Offset: 12104
.Ltmp3412:
    00002f4a: 	movq	%r12, %rsi
    00002f4d: 	movq	%r15, %rdi
    00002f50: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12112
    00002f55: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002f5c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002f63: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002f6a: 	je	.Ltmp3416 # Offset: 12138
.Ltmp3569:
    00002f70: 	movq	-0x20(%rax), %rbx
    00002f74: 	callq	clock@PLT # Offset: 12148
    00002f79: 	pxor	%xmm0, %xmm0
    00002f7d: 	movq	%rax, end_time(%rip)
    00002f84: 	movq	%rbx, %rdi
    00002f87: 	subq	start_time(%rip), %rax
    00002f8e: 	cvtsi2sd	%rax, %xmm0
    00002f93: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002f9b: 	callq	_Z13record_resultdPKc # Offset: 12187
    00002fa0: 	movq	0xa0(%rsp), %rdi
    00002fa8: 	cmpq	%r13, %rdi
    00002fab: 	je	.Ltmp3417 # Offset: 12203
    00002fad: 	movq	0xb0(%rsp), %rax
    00002fb5: 	leaq	0x1(%rax), %rsi
    00002fb9: 	callq	_ZdlPvm@PLT # Offset: 12217
.Ltmp3417:
    00002fbe: 	leaq	DATAat0x575fa(%rip), %rdx
    00002fc5: 	movq	%r14, %rsi
    00002fc8: 	movq	%r12, %rdi
    00002fcb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12235
    00002fd0: 	callq	clock@PLT # Offset: 12240
    00002fd5: 	movl	iterations(%rip), %ecx
    00002fdb: 	movq	%rax, start_time(%rip)
    00002fe2: 	testl	%ecx, %ecx
    00002fe4: 	jle	.Ltmp3418 # Offset: 12260
    00002fea: 	movdqa	DATAat0x57c10(%rip), %xmm7
    00002ff2: 	movl	$0x0, 0x1c(%rsp)
    00002ffa: 	leaq	0x2000(%rsp), %rbx
    00003002: 	movaps	%xmm7, (%rsp)
    00003006: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3421:
    00003010: 	movq	%rbp, %rax
    00003013: 	pxor	%xmm0, %xmm0
    00003017: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3419:
    00003020: 	movdqa	(%rsp), %xmm1
    00003025: 	pand	(%rax), %xmm1
    00003029: 	addq	$0x10, %rax
    0000302d: 	paddb	%xmm1, %xmm0
    00003031: 	cmpq	%rax, %rbx
    00003034: 	jne	.Ltmp3419 # Offset: 12340
    00003036: 	movdqa	%xmm0, %xmm1
    0000303a: 	cvttsd2si	init_value(%rip), %edx
    00003042: 	psrldq	$0x8, %xmm1
    00003047: 	paddb	%xmm1, %xmm0
    0000304b: 	pxor	%xmm1, %xmm1
    0000304f: 	psadbw	%xmm1, %xmm0
    00003053: 	movd	%xmm0, %eax
    00003057: 	shll	$0x6, %edx
    0000305a: 	cmpb	%al, %dl
    0000305c: 	je	.Ltmp3420 # Offset: 12380
    0000305e: 	movl	current_test(%rip), %edx
    00003064: 	leaq	DATAat0x571d0(%rip), %rsi
    0000306b: 	movl	$0x1, %edi
    00003070: 	xorl	%eax, %eax
    00003072: 	callq	__printf_chk@PLT # Offset: 12402
    00003077: 	movl	iterations(%rip), %ecx
.Ltmp3420:
    0000307d: 	addl	$0x1, 0x1c(%rsp)
    00003082: 	movl	0x1c(%rsp), %eax
    00003086: 	cmpl	%ecx, %eax
    00003088: 	jl	.Ltmp3421 # Offset: 12424
.Ltmp3418:
    0000308a: 	movq	%r12, %rsi
    0000308d: 	movq	%r15, %rdi
    00003090: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12432
    00003095: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000309c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000030a3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000030aa: 	je	.Ltmp3422 # Offset: 12458
.Ltmp3568:
    000030b0: 	movq	-0x20(%rax), %rbx
    000030b4: 	callq	clock@PLT # Offset: 12468
    000030b9: 	pxor	%xmm0, %xmm0
    000030bd: 	movq	%rax, end_time(%rip)
    000030c4: 	movq	%rbx, %rdi
    000030c7: 	subq	start_time(%rip), %rax
    000030ce: 	cvtsi2sd	%rax, %xmm0
    000030d3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000030db: 	callq	_Z13record_resultdPKc # Offset: 12507
    000030e0: 	movq	0xa0(%rsp), %rdi
    000030e8: 	cmpq	%r13, %rdi
    000030eb: 	je	.Ltmp3423 # Offset: 12523
    000030ed: 	movq	0xb0(%rsp), %rax
    000030f5: 	leaq	0x1(%rax), %rsi
    000030f9: 	callq	_ZdlPvm@PLT # Offset: 12537
.Ltmp3423:
    000030fe: 	leaq	DATAat0x57611(%rip), %rdx
    00003105: 	movq	%r14, %rsi
    00003108: 	movq	%r12, %rdi
    0000310b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12555
    00003110: 	movq	%r12, %rdx
    00003113: 	movl	$0x4, %esi
    00003118: 	movq	%rbp, %rdi
    0000311b: 	callq	"_Z14test_variable1Ih25custom_remainder_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 12571
    00003120: 	movq	0xa0(%rsp), %rdi
    00003128: 	cmpq	%r13, %rdi
    0000312b: 	je	.Ltmp3424 # Offset: 12587
    0000312d: 	movq	0xb0(%rsp), %rax
    00003135: 	leaq	0x1(%rax), %rsi
    00003139: 	callq	_ZdlPvm@PLT # Offset: 12601
.Ltmp3424:
    0000313e: 	leaq	DATAat0x5762a(%rip), %rdx
    00003145: 	movq	%r14, %rsi
    00003148: 	movq	%r12, %rdi
    0000314b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12619
    00003150: 	movq	%r12, %rsi
    00003153: 	movq	%rbp, %rdi
    00003156: 	callq	"_Z13test_constantIh16custom_remainderIhLi4EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 12630
    0000315b: 	movq	0xa0(%rsp), %rdi
    00003163: 	cmpq	%r13, %rdi
    00003166: 	je	.Ltmp3425 # Offset: 12646
    00003168: 	movq	0xb0(%rsp), %rax
    00003170: 	leaq	0x1(%rax), %rsi
    00003174: 	callq	_ZdlPvm@PLT # Offset: 12660
.Ltmp3425:
    00003179: 	leaq	DATAat0x57643(%rip), %rdx
    00003180: 	movq	%r14, %rsi
    00003183: 	movq	%r12, %rdi
    00003186: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12678
    0000318b: 	callq	clock@PLT # Offset: 12683
    00003190: 	movl	iterations(%rip), %ecx
    00003196: 	movq	%rax, start_time(%rip)
    0000319d: 	testl	%ecx, %ecx
    0000319f: 	jle	.Ltmp3426 # Offset: 12703
    000031a5: 	movdqa	DATAat0x57bf0(%rip), %xmm7
    000031ad: 	movl	$0x0, 0x1c(%rsp)
    000031b5: 	leaq	0x2000(%rsp), %rbx
    000031bd: 	movaps	%xmm7, (%rsp)
    000031c1: 	nopl	(%rax) # Size: 7
.Ltmp3429:
    000031c8: 	movq	%rbp, %rax
    000031cb: 	pxor	%xmm0, %xmm0
    000031cf: 	nop # Size: 1
.Ltmp3427:
    000031d0: 	movdqa	(%rsp), %xmm1
    000031d5: 	pand	(%rax), %xmm1
    000031d9: 	addq	$0x10, %rax
    000031dd: 	paddb	%xmm1, %xmm0
    000031e1: 	cmpq	%rbx, %rax
    000031e4: 	jne	.Ltmp3427 # Offset: 12772
    000031e6: 	movdqa	%xmm0, %xmm1
    000031ea: 	cvttsd2si	init_value(%rip), %edx
    000031f2: 	psrldq	$0x8, %xmm1
    000031f7: 	paddb	%xmm1, %xmm0
    000031fb: 	pxor	%xmm1, %xmm1
    000031ff: 	psadbw	%xmm1, %xmm0
    00003203: 	movd	%xmm0, %eax
    00003207: 	shll	$0x6, %edx
    0000320a: 	cmpb	%al, %dl
    0000320c: 	je	.Ltmp3428 # Offset: 12812
    0000320e: 	movl	current_test(%rip), %edx
    00003214: 	leaq	DATAat0x571d0(%rip), %rsi
    0000321b: 	movl	$0x1, %edi
    00003220: 	xorl	%eax, %eax
    00003222: 	callq	__printf_chk@PLT # Offset: 12834
    00003227: 	movl	iterations(%rip), %ecx
.Ltmp3428:
    0000322d: 	addl	$0x1, 0x1c(%rsp)
    00003232: 	movl	0x1c(%rsp), %eax
    00003236: 	cmpl	%ecx, %eax
    00003238: 	jl	.Ltmp3429 # Offset: 12856
.Ltmp3426:
    0000323a: 	movq	%r12, %rsi
    0000323d: 	movq	%r15, %rdi
    00003240: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12864
    00003245: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000324c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003253: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000325a: 	je	.Ltmp3430 # Offset: 12890
.Ltmp3567:
    00003260: 	movq	-0x20(%rax), %rbx
    00003264: 	callq	clock@PLT # Offset: 12900
    00003269: 	pxor	%xmm0, %xmm0
    0000326d: 	movq	%rax, end_time(%rip)
    00003274: 	movq	%rbx, %rdi
    00003277: 	subq	start_time(%rip), %rax
    0000327e: 	cvtsi2sd	%rax, %xmm0
    00003283: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000328b: 	callq	_Z13record_resultdPKc # Offset: 12939
    00003290: 	movq	0xa0(%rsp), %rdi
    00003298: 	cmpq	%r13, %rdi
    0000329b: 	je	.Ltmp3431 # Offset: 12955
    0000329d: 	movq	0xb0(%rsp), %rax
    000032a5: 	leaq	0x1(%rax), %rsi
    000032a9: 	callq	_ZdlPvm@PLT # Offset: 12969
.Ltmp3431:
    000032ae: 	leaq	DATAat0x5764a(%rip), %rdx
    000032b5: 	movq	%r14, %rsi
    000032b8: 	movq	%r12, %rdi
    000032bb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12987
    000032c0: 	callq	clock@PLT # Offset: 12992
    000032c5: 	movl	iterations(%rip), %ecx
    000032cb: 	movq	%rax, start_time(%rip)
    000032d2: 	testl	%ecx, %ecx
    000032d4: 	jle	.Ltmp3432 # Offset: 13012
    000032da: 	movdqa	DATAat0x57bf0(%rip), %xmm7
    000032e2: 	movl	$0x0, 0x1c(%rsp)
    000032ea: 	leaq	0x2000(%rsp), %rbx
    000032f2: 	movaps	%xmm7, (%rsp)
    000032f6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3435:
    00003300: 	movq	%rbp, %rax
    00003303: 	pxor	%xmm0, %xmm0
    00003307: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3433:
    00003310: 	movdqa	(%rsp), %xmm1
    00003315: 	pand	(%rax), %xmm1
    00003319: 	addq	$0x10, %rax
    0000331d: 	paddb	%xmm1, %xmm0
    00003321: 	cmpq	%rax, %rbx
    00003324: 	jne	.Ltmp3433 # Offset: 13092
    00003326: 	movdqa	%xmm0, %xmm1
    0000332a: 	cvttsd2si	init_value(%rip), %edx
    00003332: 	psrldq	$0x8, %xmm1
    00003337: 	paddb	%xmm1, %xmm0
    0000333b: 	pxor	%xmm1, %xmm1
    0000333f: 	psadbw	%xmm1, %xmm0
    00003343: 	movd	%xmm0, %eax
    00003347: 	shll	$0x6, %edx
    0000334a: 	cmpb	%al, %dl
    0000334c: 	je	.Ltmp3434 # Offset: 13132
    0000334e: 	movl	current_test(%rip), %edx
    00003354: 	leaq	DATAat0x571d0(%rip), %rsi
    0000335b: 	movl	$0x1, %edi
    00003360: 	xorl	%eax, %eax
    00003362: 	callq	__printf_chk@PLT # Offset: 13154
    00003367: 	movl	iterations(%rip), %ecx
.Ltmp3434:
    0000336d: 	addl	$0x1, 0x1c(%rsp)
    00003372: 	movl	0x1c(%rsp), %eax
    00003376: 	cmpl	%ecx, %eax
    00003378: 	jl	.Ltmp3435 # Offset: 13176
.Ltmp3432:
    0000337a: 	movq	%r12, %rsi
    0000337d: 	movq	%r15, %rdi
    00003380: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13184
    00003385: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000338c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003393: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000339a: 	je	.Ltmp3436 # Offset: 13210
.Ltmp3566:
    000033a0: 	movq	-0x20(%rax), %rbx
    000033a4: 	callq	clock@PLT # Offset: 13220
    000033a9: 	pxor	%xmm0, %xmm0
    000033ad: 	movq	%rax, end_time(%rip)
    000033b4: 	movq	%rbx, %rdi
    000033b7: 	subq	start_time(%rip), %rax
    000033be: 	cvtsi2sd	%rax, %xmm0
    000033c3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000033cb: 	callq	_Z13record_resultdPKc # Offset: 13259
    000033d0: 	movq	0xa0(%rsp), %rdi
    000033d8: 	cmpq	%r13, %rdi
    000033db: 	je	.Ltmp3437 # Offset: 13275
    000033dd: 	movq	0xb0(%rsp), %rax
    000033e5: 	leaq	0x1(%rax), %rsi
    000033e9: 	callq	_ZdlPvm@PLT # Offset: 13289
.Ltmp3437:
    000033ee: 	leaq	DATAat0x5765b(%rip), %rdx
    000033f5: 	movq	%r14, %rsi
    000033f8: 	movq	%r12, %rdi
    000033fb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13307
    00003400: 	callq	clock@PLT # Offset: 13312
    00003405: 	movl	iterations(%rip), %ecx
    0000340b: 	movq	%rax, start_time(%rip)
    00003412: 	testl	%ecx, %ecx
    00003414: 	jle	.Ltmp3438 # Offset: 13332
    0000341a: 	movdqa	DATAat0x57bf0(%rip), %xmm7
    00003422: 	movl	$0x0, 0x1c(%rsp)
    0000342a: 	leaq	0x2000(%rsp), %rbx
    00003432: 	movaps	%xmm7, (%rsp)
    00003436: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3441:
    00003440: 	movq	%rbp, %rax
    00003443: 	pxor	%xmm0, %xmm0
    00003447: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3439:
    00003450: 	movdqa	(%rsp), %xmm1
    00003455: 	pand	(%rax), %xmm1
    00003459: 	addq	$0x10, %rax
    0000345d: 	paddb	%xmm1, %xmm0
    00003461: 	cmpq	%rbx, %rax
    00003464: 	jne	.Ltmp3439 # Offset: 13412
    00003466: 	movdqa	%xmm0, %xmm1
    0000346a: 	cvttsd2si	init_value(%rip), %edx
    00003472: 	psrldq	$0x8, %xmm1
    00003477: 	paddb	%xmm1, %xmm0
    0000347b: 	pxor	%xmm1, %xmm1
    0000347f: 	psadbw	%xmm1, %xmm0
    00003483: 	movd	%xmm0, %eax
    00003487: 	shll	$0x6, %edx
    0000348a: 	cmpb	%al, %dl
    0000348c: 	je	.Ltmp3440 # Offset: 13452
    0000348e: 	movl	current_test(%rip), %edx
    00003494: 	leaq	DATAat0x571d0(%rip), %rsi
    0000349b: 	movl	$0x1, %edi
    000034a0: 	xorl	%eax, %eax
    000034a2: 	callq	__printf_chk@PLT # Offset: 13474
    000034a7: 	movl	iterations(%rip), %ecx
.Ltmp3440:
    000034ad: 	addl	$0x1, 0x1c(%rsp)
    000034b2: 	movl	0x1c(%rsp), %eax
    000034b6: 	cmpl	%ecx, %eax
    000034b8: 	jl	.Ltmp3441 # Offset: 13496
.Ltmp3438:
    000034ba: 	movq	%r12, %rsi
    000034bd: 	movq	%r15, %rdi
    000034c0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13504
    000034c5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000034cc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000034d3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000034da: 	je	.Ltmp3442 # Offset: 13530
.Ltmp3565:
    000034e0: 	movq	-0x20(%rax), %rbx
    000034e4: 	callq	clock@PLT # Offset: 13540
    000034e9: 	pxor	%xmm0, %xmm0
    000034ed: 	movq	%rax, end_time(%rip)
    000034f4: 	movq	%rbx, %rdi
    000034f7: 	subq	start_time(%rip), %rax
    000034fe: 	cvtsi2sd	%rax, %xmm0
    00003503: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000350b: 	callq	_Z13record_resultdPKc # Offset: 13579
    00003510: 	movq	0xa0(%rsp), %rdi
    00003518: 	cmpq	%r13, %rdi
    0000351b: 	je	.Ltmp3443 # Offset: 13595
    0000351d: 	movq	0xb0(%rsp), %rax
    00003525: 	leaq	0x1(%rax), %rsi
    00003529: 	callq	_ZdlPvm@PLT # Offset: 13609
.Ltmp3443:
    0000352e: 	leaq	DATAat0x5766d(%rip), %rdx
    00003535: 	movq	%r14, %rsi
    00003538: 	movq	%r12, %rdi
    0000353b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13627
    00003540: 	movq	%r12, %rsi
    00003543: 	movq	%rbp, %rdi
    00003546: 	callq	"_Z13test_constantIh24custom_remainder_inline8IhEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 13638
    0000354b: 	movq	0xa0(%rsp), %rdi
    00003553: 	cmpq	%r13, %rdi
    00003556: 	je	.Ltmp3444 # Offset: 13654
    00003558: 	movq	0xb0(%rsp), %rax
    00003560: 	leaq	0x1(%rax), %rsi
    00003564: 	callq	_ZdlPvm@PLT # Offset: 13668
.Ltmp3444:
    00003569: 	leaq	DATAat0x57684(%rip), %rdx
    00003570: 	movq	%r14, %rsi
    00003573: 	movq	%r12, %rdi
    00003576: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13686
    0000357b: 	movq	%r12, %rdx
    0000357e: 	movl	$0x8, %esi
    00003583: 	movq	%rbp, %rdi
    00003586: 	callq	"_Z14test_variable1Ih25custom_remainder_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 13702
    0000358b: 	movq	0xa0(%rsp), %rdi
    00003593: 	cmpq	%r13, %rdi
    00003596: 	je	.Ltmp3445 # Offset: 13718
    00003598: 	movq	0xb0(%rsp), %rax
    000035a0: 	leaq	0x1(%rax), %rsi
    000035a4: 	callq	_ZdlPvm@PLT # Offset: 13732
.Ltmp3445:
    000035a9: 	leaq	DATAat0x5769d(%rip), %rdx
    000035b0: 	movq	%r14, %rsi
    000035b3: 	movq	%r12, %rdi
    000035b6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13750
    000035bb: 	movq	%r12, %rsi
    000035be: 	movq	%rbp, %rdi
    000035c1: 	callq	"_Z13test_constantIh16custom_remainderIhLi8EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 13761
    000035c6: 	movq	0xa0(%rsp), %rdi
    000035ce: 	cmpq	%r13, %rdi
    000035d1: 	je	.Ltmp3446 # Offset: 13777
    000035d3: 	movq	0xb0(%rsp), %rax
    000035db: 	leaq	0x1(%rax), %rsi
    000035df: 	callq	_ZdlPvm@PLT # Offset: 13791
.Ltmp3446:
    000035e4: 	leaq	DATAat0x576b6(%rip), %rdx
    000035eb: 	movq	%r14, %rsi
    000035ee: 	movq	%r12, %rdi
    000035f1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13809
    000035f6: 	callq	clock@PLT # Offset: 13814
    000035fb: 	movl	iterations(%rip), %ecx
    00003601: 	movq	%rax, start_time(%rip)
    00003608: 	testl	%ecx, %ecx
    0000360a: 	jle	.Ltmp3447 # Offset: 13834
    00003610: 	movdqa	DATAat0x57db0(%rip), %xmm7
    00003618: 	movl	$0x0, 0x1c(%rsp)
    00003620: 	leaq	0x2000(%rsp), %rbx
    00003628: 	movaps	%xmm7, (%rsp)
    0000362c: 	nopl	(%rax) # Size: 4
.Ltmp3450:
    00003630: 	movq	%rbp, %rax
    00003633: 	pxor	%xmm0, %xmm0
    00003637: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3448:
    00003640: 	movdqa	(%rsp), %xmm1
    00003645: 	pand	(%rax), %xmm1
    00003649: 	addq	$0x10, %rax
    0000364d: 	paddb	%xmm1, %xmm0
    00003651: 	cmpq	%rax, %rbx
    00003654: 	jne	.Ltmp3448 # Offset: 13908
    00003656: 	movdqa	%xmm0, %xmm1
    0000365a: 	cvttsd2si	init_value(%rip), %edx
    00003662: 	psrldq	$0x8, %xmm1
    00003667: 	paddb	%xmm1, %xmm0
    0000366b: 	pxor	%xmm1, %xmm1
    0000366f: 	psadbw	%xmm1, %xmm0
    00003673: 	movd	%xmm0, %eax
    00003677: 	shll	$0x6, %edx
    0000367a: 	cmpb	%al, %dl
    0000367c: 	je	.Ltmp3449 # Offset: 13948
    0000367e: 	movl	current_test(%rip), %edx
    00003684: 	leaq	DATAat0x571d0(%rip), %rsi
    0000368b: 	movl	$0x1, %edi
    00003690: 	xorl	%eax, %eax
    00003692: 	callq	__printf_chk@PLT # Offset: 13970
    00003697: 	movl	iterations(%rip), %ecx
.Ltmp3449:
    0000369d: 	addl	$0x1, 0x1c(%rsp)
    000036a2: 	movl	0x1c(%rsp), %eax
    000036a6: 	cmpl	%ecx, %eax
    000036a8: 	jl	.Ltmp3450 # Offset: 13992
.Ltmp3447:
    000036aa: 	movq	%r12, %rsi
    000036ad: 	movq	%r15, %rdi
    000036b0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14000
    000036b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000036bc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000036c3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000036ca: 	je	.Ltmp3451 # Offset: 14026
.Ltmp3564:
    000036d0: 	movq	-0x20(%rax), %rbx
    000036d4: 	callq	clock@PLT # Offset: 14036
    000036d9: 	pxor	%xmm0, %xmm0
    000036dd: 	movq	%rax, end_time(%rip)
    000036e4: 	movq	%rbx, %rdi
    000036e7: 	subq	start_time(%rip), %rax
    000036ee: 	cvtsi2sd	%rax, %xmm0
    000036f3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000036fb: 	callq	_Z13record_resultdPKc # Offset: 14075
    00003700: 	movq	0xa0(%rsp), %rdi
    00003708: 	cmpq	%r13, %rdi
    0000370b: 	je	.Ltmp3452 # Offset: 14091
    0000370d: 	movq	0xb0(%rsp), %rax
    00003715: 	leaq	0x1(%rax), %rsi
    00003719: 	callq	_ZdlPvm@PLT # Offset: 14105
.Ltmp3452:
    0000371e: 	leaq	DATAat0x576be(%rip), %rdx
    00003725: 	movq	%r14, %rsi
    00003728: 	movq	%r12, %rdi
    0000372b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14123
    00003730: 	callq	clock@PLT # Offset: 14128
    00003735: 	movl	iterations(%rip), %ecx
    0000373b: 	movq	%rax, start_time(%rip)
    00003742: 	testl	%ecx, %ecx
    00003744: 	jle	.Ltmp3453 # Offset: 14148
    0000374a: 	movdqa	DATAat0x57db0(%rip), %xmm7
    00003752: 	movl	$0x0, 0x1c(%rsp)
    0000375a: 	leaq	0x2000(%rsp), %rbx
    00003762: 	movaps	%xmm7, (%rsp)
    00003766: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3456:
    00003770: 	movq	%rbp, %rax
    00003773: 	pxor	%xmm0, %xmm0
    00003777: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3454:
    00003780: 	movdqa	(%rsp), %xmm1
    00003785: 	pand	(%rax), %xmm1
    00003789: 	addq	$0x10, %rax
    0000378d: 	paddb	%xmm1, %xmm0
    00003791: 	cmpq	%rbx, %rax
    00003794: 	jne	.Ltmp3454 # Offset: 14228
    00003796: 	movdqa	%xmm0, %xmm1
    0000379a: 	cvttsd2si	init_value(%rip), %edx
    000037a2: 	psrldq	$0x8, %xmm1
    000037a7: 	paddb	%xmm1, %xmm0
    000037ab: 	pxor	%xmm1, %xmm1
    000037af: 	psadbw	%xmm1, %xmm0
    000037b3: 	movd	%xmm0, %eax
    000037b7: 	shll	$0x6, %edx
    000037ba: 	cmpb	%al, %dl
    000037bc: 	je	.Ltmp3455 # Offset: 14268
    000037be: 	movl	current_test(%rip), %edx
    000037c4: 	leaq	DATAat0x571d0(%rip), %rsi
    000037cb: 	movl	$0x1, %edi
    000037d0: 	xorl	%eax, %eax
    000037d2: 	callq	__printf_chk@PLT # Offset: 14290
    000037d7: 	movl	iterations(%rip), %ecx
.Ltmp3455:
    000037dd: 	addl	$0x1, 0x1c(%rsp)
    000037e2: 	movl	0x1c(%rsp), %eax
    000037e6: 	cmpl	%ecx, %eax
    000037e8: 	jl	.Ltmp3456 # Offset: 14312
.Ltmp3453:
    000037ea: 	movq	%r12, %rsi
    000037ed: 	movq	%r15, %rdi
    000037f0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14320
    000037f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000037fc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003803: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000380a: 	je	.Ltmp3457 # Offset: 14346
.Ltmp3563:
    00003810: 	movq	-0x20(%rax), %rbx
    00003814: 	callq	clock@PLT # Offset: 14356
    00003819: 	pxor	%xmm0, %xmm0
    0000381d: 	movq	%rax, end_time(%rip)
    00003824: 	movq	%rbx, %rdi
    00003827: 	subq	start_time(%rip), %rax
    0000382e: 	cvtsi2sd	%rax, %xmm0
    00003833: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000383b: 	callq	_Z13record_resultdPKc # Offset: 14395
    00003840: 	movq	0xa0(%rsp), %rdi
    00003848: 	cmpq	%r13, %rdi
    0000384b: 	je	.Ltmp3458 # Offset: 14411
    0000384d: 	movq	0xb0(%rsp), %rax
    00003855: 	leaq	0x1(%rax), %rsi
    00003859: 	callq	_ZdlPvm@PLT # Offset: 14425
.Ltmp3458:
    0000385e: 	leaq	DATAat0x576d0(%rip), %rdx
    00003865: 	movq	%r14, %rsi
    00003868: 	movq	%r12, %rdi
    0000386b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14443
    00003870: 	callq	clock@PLT # Offset: 14448
    00003875: 	movl	iterations(%rip), %ecx
    0000387b: 	movq	%rax, start_time(%rip)
    00003882: 	testl	%ecx, %ecx
    00003884: 	jle	.Ltmp3459 # Offset: 14468
    0000388a: 	movdqa	DATAat0x57db0(%rip), %xmm7
    00003892: 	movl	$0x0, 0x1c(%rsp)
    0000389a: 	leaq	0x2000(%rsp), %rbx
    000038a2: 	movaps	%xmm7, (%rsp)
    000038a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3462:
    000038b0: 	movq	%rbp, %rax
    000038b3: 	pxor	%xmm0, %xmm0
    000038b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3460:
    000038c0: 	movdqa	(%rsp), %xmm1
    000038c5: 	pand	(%rax), %xmm1
    000038c9: 	addq	$0x10, %rax
    000038cd: 	paddb	%xmm1, %xmm0
    000038d1: 	cmpq	%rax, %rbx
    000038d4: 	jne	.Ltmp3460 # Offset: 14548
    000038d6: 	movdqa	%xmm0, %xmm1
    000038da: 	cvttsd2si	init_value(%rip), %edx
    000038e2: 	psrldq	$0x8, %xmm1
    000038e7: 	paddb	%xmm1, %xmm0
    000038eb: 	pxor	%xmm1, %xmm1
    000038ef: 	psadbw	%xmm1, %xmm0
    000038f3: 	movd	%xmm0, %eax
    000038f7: 	shll	$0x6, %edx
    000038fa: 	cmpb	%al, %dl
    000038fc: 	je	.Ltmp3461 # Offset: 14588
    000038fe: 	movl	current_test(%rip), %edx
    00003904: 	leaq	DATAat0x571d0(%rip), %rsi
    0000390b: 	movl	$0x1, %edi
    00003910: 	xorl	%eax, %eax
    00003912: 	callq	__printf_chk@PLT # Offset: 14610
    00003917: 	movl	iterations(%rip), %ecx
.Ltmp3461:
    0000391d: 	addl	$0x1, 0x1c(%rsp)
    00003922: 	movl	0x1c(%rsp), %eax
    00003926: 	cmpl	%ecx, %eax
    00003928: 	jl	.Ltmp3462 # Offset: 14632
.Ltmp3459:
    0000392a: 	movq	%r12, %rsi
    0000392d: 	movq	%r15, %rdi
    00003930: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14640
    00003935: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000393c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003943: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000394a: 	je	.Ltmp3463 # Offset: 14666
.Ltmp3562:
    00003950: 	movq	-0x20(%rax), %rbx
    00003954: 	callq	clock@PLT # Offset: 14676
    00003959: 	pxor	%xmm0, %xmm0
    0000395d: 	movq	%rax, end_time(%rip)
    00003964: 	movq	%rbx, %rdi
    00003967: 	subq	start_time(%rip), %rax
    0000396e: 	cvtsi2sd	%rax, %xmm0
    00003973: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000397b: 	callq	_Z13record_resultdPKc # Offset: 14715
    00003980: 	movq	0xa0(%rsp), %rdi
    00003988: 	cmpq	%r13, %rdi
    0000398b: 	je	.Ltmp3464 # Offset: 14731
    0000398d: 	movq	0xb0(%rsp), %rax
    00003995: 	leaq	0x1(%rax), %rsi
    00003999: 	callq	_ZdlPvm@PLT # Offset: 14745
.Ltmp3464:
    0000399e: 	leaq	DATAat0x576e3(%rip), %rdx
    000039a5: 	movq	%r14, %rsi
    000039a8: 	movq	%r12, %rdi
    000039ab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14763
    000039b0: 	callq	clock@PLT # Offset: 14768
    000039b5: 	movl	iterations(%rip), %ecx
    000039bb: 	movq	%rax, start_time(%rip)
    000039c2: 	testl	%ecx, %ecx
    000039c4: 	jle	.Ltmp3465 # Offset: 14788
    000039ca: 	movdqa	DATAat0x57db0(%rip), %xmm7
    000039d2: 	movl	$0x0, 0x1c(%rsp)
    000039da: 	leaq	0x2000(%rsp), %rbx
    000039e2: 	movaps	%xmm7, (%rsp)
    000039e6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3468:
    000039f0: 	movq	%rbp, %rax
    000039f3: 	pxor	%xmm0, %xmm0
    000039f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3466:
    00003a00: 	movdqa	(%rsp), %xmm1
    00003a05: 	pand	(%rax), %xmm1
    00003a09: 	addq	$0x10, %rax
    00003a0d: 	paddb	%xmm1, %xmm0
    00003a11: 	cmpq	%rbx, %rax
    00003a14: 	jne	.Ltmp3466 # Offset: 14868
    00003a16: 	movdqa	%xmm0, %xmm1
    00003a1a: 	cvttsd2si	init_value(%rip), %edx
    00003a22: 	psrldq	$0x8, %xmm1
    00003a27: 	paddb	%xmm1, %xmm0
    00003a2b: 	pxor	%xmm1, %xmm1
    00003a2f: 	psadbw	%xmm1, %xmm0
    00003a33: 	movd	%xmm0, %eax
    00003a37: 	shll	$0x6, %edx
    00003a3a: 	cmpb	%al, %dl
    00003a3c: 	je	.Ltmp3467 # Offset: 14908
    00003a3e: 	movl	current_test(%rip), %edx
    00003a44: 	leaq	DATAat0x571d0(%rip), %rsi
    00003a4b: 	movl	$0x1, %edi
    00003a50: 	xorl	%eax, %eax
    00003a52: 	callq	__printf_chk@PLT # Offset: 14930
    00003a57: 	movl	iterations(%rip), %ecx
.Ltmp3467:
    00003a5d: 	addl	$0x1, 0x1c(%rsp)
    00003a62: 	movl	0x1c(%rsp), %eax
    00003a66: 	cmpl	%ecx, %eax
    00003a68: 	jl	.Ltmp3468 # Offset: 14952
.Ltmp3465:
    00003a6a: 	movq	%r12, %rsi
    00003a6d: 	movq	%r15, %rdi
    00003a70: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14960
    00003a75: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003a7c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003a83: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003a8a: 	je	.Ltmp3469 # Offset: 14986
.Ltmp3561:
    00003a90: 	movq	-0x20(%rax), %rbx
    00003a94: 	callq	clock@PLT # Offset: 14996
    00003a99: 	pxor	%xmm0, %xmm0
    00003a9d: 	movq	%rax, end_time(%rip)
    00003aa4: 	movq	%rbx, %rdi
    00003aa7: 	subq	start_time(%rip), %rax
    00003aae: 	cvtsi2sd	%rax, %xmm0
    00003ab3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003abb: 	callq	_Z13record_resultdPKc # Offset: 15035
    00003ac0: 	movq	0xa0(%rsp), %rdi
    00003ac8: 	cmpq	%r13, %rdi
    00003acb: 	je	.Ltmp3470 # Offset: 15051
    00003acd: 	movq	0xb0(%rsp), %rax
    00003ad5: 	leaq	0x1(%rax), %rsi
    00003ad9: 	callq	_ZdlPvm@PLT # Offset: 15065
.Ltmp3470:
    00003ade: 	leaq	DATAat0x576fb(%rip), %rdx
    00003ae5: 	movq	%r14, %rsi
    00003ae8: 	movq	%r12, %rdi
    00003aeb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15083
    00003af0: 	movq	%r12, %rdx
    00003af3: 	movl	$0x10, %esi
    00003af8: 	movq	%rbp, %rdi
    00003afb: 	callq	"_Z14test_variable1Ih25custom_remainder_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 15099
    00003b00: 	movq	0xa0(%rsp), %rdi
    00003b08: 	cmpq	%r13, %rdi
    00003b0b: 	je	.Ltmp3471 # Offset: 15115
    00003b0d: 	movq	0xb0(%rsp), %rax
    00003b15: 	leaq	0x1(%rax), %rsi
    00003b19: 	callq	_ZdlPvm@PLT # Offset: 15129
.Ltmp3471:
    00003b1e: 	leaq	DATAat0x57715(%rip), %rdx
    00003b25: 	movq	%r14, %rsi
    00003b28: 	movq	%r12, %rdi
    00003b2b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15147
    00003b30: 	callq	clock@PLT # Offset: 15152
    00003b35: 	movl	iterations(%rip), %ecx
    00003b3b: 	movq	%rax, start_time(%rip)
    00003b42: 	testl	%ecx, %ecx
    00003b44: 	jle	.Ltmp3472 # Offset: 15172
    00003b4a: 	movdqa	DATAat0x57db0(%rip), %xmm7
    00003b52: 	movl	$0x0, 0x1c(%rsp)
    00003b5a: 	leaq	0x2000(%rsp), %rbx
    00003b62: 	movaps	%xmm7, (%rsp)
    00003b66: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3475:
    00003b70: 	movq	%rbp, %rax
    00003b73: 	pxor	%xmm0, %xmm0
    00003b77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3473:
    00003b80: 	movdqa	(%rsp), %xmm1
    00003b85: 	pand	(%rax), %xmm1
    00003b89: 	addq	$0x10, %rax
    00003b8d: 	paddb	%xmm1, %xmm0
    00003b91: 	cmpq	%rbx, %rax
    00003b94: 	jne	.Ltmp3473 # Offset: 15252
    00003b96: 	movdqa	%xmm0, %xmm1
    00003b9a: 	cvttsd2si	init_value(%rip), %edx
    00003ba2: 	psrldq	$0x8, %xmm1
    00003ba7: 	paddb	%xmm1, %xmm0
    00003bab: 	pxor	%xmm1, %xmm1
    00003baf: 	psadbw	%xmm1, %xmm0
    00003bb3: 	movd	%xmm0, %eax
    00003bb7: 	shll	$0x6, %edx
    00003bba: 	cmpb	%al, %dl
    00003bbc: 	je	.Ltmp3474 # Offset: 15292
    00003bbe: 	movl	current_test(%rip), %edx
    00003bc4: 	leaq	DATAat0x571d0(%rip), %rsi
    00003bcb: 	movl	$0x1, %edi
    00003bd0: 	xorl	%eax, %eax
    00003bd2: 	callq	__printf_chk@PLT # Offset: 15314
    00003bd7: 	movl	iterations(%rip), %ecx
.Ltmp3474:
    00003bdd: 	addl	$0x1, 0x1c(%rsp)
    00003be2: 	movl	0x1c(%rsp), %eax
    00003be6: 	cmpl	%ecx, %eax
    00003be8: 	jl	.Ltmp3475 # Offset: 15336
.Ltmp3472:
    00003bea: 	movq	%r12, %rsi
    00003bed: 	movq	%r15, %rdi
    00003bf0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15344
    00003bf5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003bfc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003c03: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003c0a: 	je	.Ltmp3476 # Offset: 15370
.Ltmp3560:
    00003c10: 	movq	-0x20(%rax), %rbx
    00003c14: 	callq	clock@PLT # Offset: 15380
    00003c19: 	pxor	%xmm0, %xmm0
    00003c1d: 	movq	%rax, end_time(%rip)
    00003c24: 	movq	%rbx, %rdi
    00003c27: 	subq	start_time(%rip), %rax
    00003c2e: 	cvtsi2sd	%rax, %xmm0
    00003c33: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003c3b: 	callq	_Z13record_resultdPKc # Offset: 15419
    00003c40: 	movq	0xa0(%rsp), %rdi
    00003c48: 	cmpq	%r13, %rdi
    00003c4b: 	je	.Ltmp3477 # Offset: 15435
    00003c4d: 	movq	0xb0(%rsp), %rax
    00003c55: 	leaq	0x1(%rax), %rsi
    00003c59: 	callq	_ZdlPvm@PLT # Offset: 15449
.Ltmp3477:
    00003c5e: 	leaq	DATAat0x5772f(%rip), %rdx
    00003c65: 	movq	%r14, %rsi
    00003c68: 	movq	%r12, %rdi
    00003c6b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15467
    00003c70: 	callq	clock@PLT # Offset: 15472
    00003c75: 	movl	iterations(%rip), %ecx
    00003c7b: 	movq	%rax, start_time(%rip)
    00003c82: 	testl	%ecx, %ecx
    00003c84: 	jle	.Ltmp3478 # Offset: 15492
    00003c8a: 	movdqa	DATAat0x57d40(%rip), %xmm7
    00003c92: 	movl	$0x0, 0x1c(%rsp)
    00003c9a: 	leaq	0x2000(%rsp), %rbx
    00003ca2: 	movaps	%xmm7, (%rsp)
    00003ca6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3481:
    00003cb0: 	movq	%rbp, %rax
    00003cb3: 	pxor	%xmm0, %xmm0
    00003cb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3479:
    00003cc0: 	movdqa	(%rsp), %xmm1
    00003cc5: 	pand	(%rax), %xmm1
    00003cc9: 	addq	$0x10, %rax
    00003ccd: 	paddb	%xmm1, %xmm0
    00003cd1: 	cmpq	%rax, %rbx
    00003cd4: 	jne	.Ltmp3479 # Offset: 15572
    00003cd6: 	movdqa	%xmm0, %xmm1
    00003cda: 	cvttsd2si	init_value(%rip), %edx
    00003ce2: 	psrldq	$0x8, %xmm1
    00003ce7: 	paddb	%xmm1, %xmm0
    00003ceb: 	pxor	%xmm1, %xmm1
    00003cef: 	psadbw	%xmm1, %xmm0
    00003cf3: 	movd	%xmm0, %eax
    00003cf7: 	shll	$0x6, %edx
    00003cfa: 	cmpb	%al, %dl
    00003cfc: 	je	.Ltmp3480 # Offset: 15612
    00003cfe: 	movl	current_test(%rip), %edx
    00003d04: 	leaq	DATAat0x571d0(%rip), %rsi
    00003d0b: 	movl	$0x1, %edi
    00003d10: 	xorl	%eax, %eax
    00003d12: 	callq	__printf_chk@PLT # Offset: 15634
    00003d17: 	movl	iterations(%rip), %ecx
.Ltmp3480:
    00003d1d: 	addl	$0x1, 0x1c(%rsp)
    00003d22: 	movl	0x1c(%rsp), %eax
    00003d26: 	cmpl	%ecx, %eax
    00003d28: 	jl	.Ltmp3481 # Offset: 15656
.Ltmp3478:
    00003d2a: 	movq	%r12, %rsi
    00003d2d: 	movq	%r15, %rdi
    00003d30: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15664
    00003d35: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003d3c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003d43: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003d4a: 	je	.Ltmp3482 # Offset: 15690
.Ltmp3559:
    00003d50: 	movq	-0x20(%rax), %rbx
    00003d54: 	callq	clock@PLT # Offset: 15700
    00003d59: 	pxor	%xmm0, %xmm0
    00003d5d: 	movq	%rax, end_time(%rip)
    00003d64: 	movq	%rbx, %rdi
    00003d67: 	subq	start_time(%rip), %rax
    00003d6e: 	cvtsi2sd	%rax, %xmm0
    00003d73: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003d7b: 	callq	_Z13record_resultdPKc # Offset: 15739
    00003d80: 	movq	0xa0(%rsp), %rdi
    00003d88: 	cmpq	%r13, %rdi
    00003d8b: 	je	.Ltmp3483 # Offset: 15755
    00003d8d: 	movq	0xb0(%rsp), %rax
    00003d95: 	leaq	0x1(%rax), %rsi
    00003d99: 	callq	_ZdlPvm@PLT # Offset: 15769
.Ltmp3483:
    00003d9e: 	leaq	DATAat0x57737(%rip), %rdx
    00003da5: 	movq	%r14, %rsi
    00003da8: 	movq	%r12, %rdi
    00003dab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15787
    00003db0: 	callq	clock@PLT # Offset: 15792
    00003db5: 	movl	iterations(%rip), %ecx
    00003dbb: 	movq	%rax, start_time(%rip)
    00003dc2: 	testl	%ecx, %ecx
    00003dc4: 	jle	.Ltmp3484 # Offset: 15812
    00003dca: 	movdqa	DATAat0x57d40(%rip), %xmm7
    00003dd2: 	movl	$0x0, 0x1c(%rsp)
    00003dda: 	leaq	0x2000(%rsp), %rbx
    00003de2: 	movaps	%xmm7, (%rsp)
    00003de6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3487:
    00003df0: 	movq	%rbp, %rax
    00003df3: 	pxor	%xmm0, %xmm0
    00003df7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3485:
    00003e00: 	movdqa	(%rsp), %xmm1
    00003e05: 	pand	(%rax), %xmm1
    00003e09: 	addq	$0x10, %rax
    00003e0d: 	paddb	%xmm1, %xmm0
    00003e11: 	cmpq	%rbx, %rax
    00003e14: 	jne	.Ltmp3485 # Offset: 15892
    00003e16: 	movdqa	%xmm0, %xmm1
    00003e1a: 	cvttsd2si	init_value(%rip), %edx
    00003e22: 	psrldq	$0x8, %xmm1
    00003e27: 	paddb	%xmm1, %xmm0
    00003e2b: 	pxor	%xmm1, %xmm1
    00003e2f: 	psadbw	%xmm1, %xmm0
    00003e33: 	movd	%xmm0, %eax
    00003e37: 	shll	$0x6, %edx
    00003e3a: 	cmpb	%al, %dl
    00003e3c: 	je	.Ltmp3486 # Offset: 15932
    00003e3e: 	movl	current_test(%rip), %edx
    00003e44: 	leaq	DATAat0x571d0(%rip), %rsi
    00003e4b: 	movl	$0x1, %edi
    00003e50: 	xorl	%eax, %eax
    00003e52: 	callq	__printf_chk@PLT # Offset: 15954
    00003e57: 	movl	iterations(%rip), %ecx
.Ltmp3486:
    00003e5d: 	addl	$0x1, 0x1c(%rsp)
    00003e62: 	movl	0x1c(%rsp), %eax
    00003e66: 	cmpl	%ecx, %eax
    00003e68: 	jl	.Ltmp3487 # Offset: 15976
.Ltmp3484:
    00003e6a: 	movq	%r12, %rsi
    00003e6d: 	movq	%r15, %rdi
    00003e70: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15984
    00003e75: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003e7c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003e83: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003e8a: 	je	.Ltmp3488 # Offset: 16010
.Ltmp3558:
    00003e90: 	movq	-0x20(%rax), %rbx
    00003e94: 	callq	clock@PLT # Offset: 16020
    00003e99: 	pxor	%xmm0, %xmm0
    00003e9d: 	movq	%rax, end_time(%rip)
    00003ea4: 	movq	%rbx, %rdi
    00003ea7: 	subq	start_time(%rip), %rax
    00003eae: 	cvtsi2sd	%rax, %xmm0
    00003eb3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003ebb: 	callq	_Z13record_resultdPKc # Offset: 16059
    00003ec0: 	movq	0xa0(%rsp), %rdi
    00003ec8: 	cmpq	%r13, %rdi
    00003ecb: 	je	.Ltmp3489 # Offset: 16075
    00003ecd: 	movq	0xb0(%rsp), %rax
    00003ed5: 	leaq	0x1(%rax), %rsi
    00003ed9: 	callq	_ZdlPvm@PLT # Offset: 16089
.Ltmp3489:
    00003ede: 	leaq	DATAat0x57749(%rip), %rdx
    00003ee5: 	movq	%r14, %rsi
    00003ee8: 	movq	%r12, %rdi
    00003eeb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16107
    00003ef0: 	callq	clock@PLT # Offset: 16112
    00003ef5: 	movl	iterations(%rip), %ecx
    00003efb: 	movq	%rax, start_time(%rip)
    00003f02: 	testl	%ecx, %ecx
    00003f04: 	jle	.Ltmp3490 # Offset: 16132
    00003f0a: 	movdqa	DATAat0x57d40(%rip), %xmm7
    00003f12: 	movl	$0x0, 0x1c(%rsp)
    00003f1a: 	leaq	0x2000(%rsp), %rbx
    00003f22: 	movaps	%xmm7, (%rsp)
    00003f26: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3493:
    00003f30: 	movq	%rbp, %rax
    00003f33: 	pxor	%xmm0, %xmm0
    00003f37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3491:
    00003f40: 	movdqa	(%rsp), %xmm1
    00003f45: 	pand	(%rax), %xmm1
    00003f49: 	addq	$0x10, %rax
    00003f4d: 	paddb	%xmm1, %xmm0
    00003f51: 	cmpq	%rax, %rbx
    00003f54: 	jne	.Ltmp3491 # Offset: 16212
    00003f56: 	movdqa	%xmm0, %xmm1
    00003f5a: 	cvttsd2si	init_value(%rip), %edx
    00003f62: 	psrldq	$0x8, %xmm1
    00003f67: 	paddb	%xmm1, %xmm0
    00003f6b: 	pxor	%xmm1, %xmm1
    00003f6f: 	psadbw	%xmm1, %xmm0
    00003f73: 	movd	%xmm0, %eax
    00003f77: 	shll	$0x6, %edx
    00003f7a: 	cmpb	%al, %dl
    00003f7c: 	je	.Ltmp3492 # Offset: 16252
    00003f7e: 	movl	current_test(%rip), %edx
    00003f84: 	leaq	DATAat0x571d0(%rip), %rsi
    00003f8b: 	movl	$0x1, %edi
    00003f90: 	xorl	%eax, %eax
    00003f92: 	callq	__printf_chk@PLT # Offset: 16274
    00003f97: 	movl	iterations(%rip), %ecx
.Ltmp3492:
    00003f9d: 	addl	$0x1, 0x1c(%rsp)
    00003fa2: 	movl	0x1c(%rsp), %eax
    00003fa6: 	cmpl	%ecx, %eax
    00003fa8: 	jl	.Ltmp3493 # Offset: 16296
.Ltmp3490:
    00003faa: 	movq	%r12, %rsi
    00003fad: 	movq	%r15, %rdi
    00003fb0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16304
    00003fb5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003fbc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003fc3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003fca: 	je	.Ltmp3494 # Offset: 16330
.Ltmp3557:
    00003fd0: 	movq	-0x20(%rax), %rbx
    00003fd4: 	callq	clock@PLT # Offset: 16340
    00003fd9: 	pxor	%xmm0, %xmm0
    00003fdd: 	movq	%rax, end_time(%rip)
    00003fe4: 	movq	%rbx, %rdi
    00003fe7: 	subq	start_time(%rip), %rax
    00003fee: 	cvtsi2sd	%rax, %xmm0
    00003ff3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003ffb: 	callq	_Z13record_resultdPKc # Offset: 16379
    00004000: 	movq	0xa0(%rsp), %rdi
    00004008: 	cmpq	%r13, %rdi
    0000400b: 	je	.Ltmp3495 # Offset: 16395
    0000400d: 	movq	0xb0(%rsp), %rax
    00004015: 	leaq	0x1(%rax), %rsi
    00004019: 	callq	_ZdlPvm@PLT # Offset: 16409
.Ltmp3495:
    0000401e: 	leaq	DATAat0x5775c(%rip), %rdx
    00004025: 	movq	%r14, %rsi
    00004028: 	movq	%r12, %rdi
    0000402b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16427
    00004030: 	callq	clock@PLT # Offset: 16432
    00004035: 	movl	iterations(%rip), %ecx
    0000403b: 	movq	%rax, start_time(%rip)
    00004042: 	testl	%ecx, %ecx
    00004044: 	jle	.Ltmp3496 # Offset: 16452
    0000404a: 	movdqa	DATAat0x57d40(%rip), %xmm7
    00004052: 	movl	$0x0, 0x1c(%rsp)
    0000405a: 	leaq	0x2000(%rsp), %rbx
    00004062: 	movaps	%xmm7, (%rsp)
    00004066: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3499:
    00004070: 	movq	%rbp, %rax
    00004073: 	pxor	%xmm0, %xmm0
    00004077: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3497:
    00004080: 	movdqa	(%rsp), %xmm1
    00004085: 	pand	(%rax), %xmm1
    00004089: 	addq	$0x10, %rax
    0000408d: 	paddb	%xmm1, %xmm0
    00004091: 	cmpq	%rbx, %rax
    00004094: 	jne	.Ltmp3497 # Offset: 16532
    00004096: 	movdqa	%xmm0, %xmm1
    0000409a: 	cvttsd2si	init_value(%rip), %edx
    000040a2: 	psrldq	$0x8, %xmm1
    000040a7: 	paddb	%xmm1, %xmm0
    000040ab: 	pxor	%xmm1, %xmm1
    000040af: 	psadbw	%xmm1, %xmm0
    000040b3: 	movd	%xmm0, %eax
    000040b7: 	shll	$0x6, %edx
    000040ba: 	cmpb	%al, %dl
    000040bc: 	je	.Ltmp3498 # Offset: 16572
    000040be: 	movl	current_test(%rip), %edx
    000040c4: 	leaq	DATAat0x571d0(%rip), %rsi
    000040cb: 	movl	$0x1, %edi
    000040d0: 	xorl	%eax, %eax
    000040d2: 	callq	__printf_chk@PLT # Offset: 16594
    000040d7: 	movl	iterations(%rip), %ecx
.Ltmp3498:
    000040dd: 	addl	$0x1, 0x1c(%rsp)
    000040e2: 	movl	0x1c(%rsp), %eax
    000040e6: 	cmpl	%ecx, %eax
    000040e8: 	jl	.Ltmp3499 # Offset: 16616
.Ltmp3496:
    000040ea: 	movq	%r12, %rsi
    000040ed: 	movq	%r15, %rdi
    000040f0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16624
    000040f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000040fc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004103: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000410a: 	je	.Ltmp3500 # Offset: 16650
.Ltmp3556:
    00004110: 	movq	-0x20(%rax), %rbx
    00004114: 	callq	clock@PLT # Offset: 16660
    00004119: 	pxor	%xmm0, %xmm0
    0000411d: 	movq	%rax, end_time(%rip)
    00004124: 	movq	%rbx, %rdi
    00004127: 	subq	start_time(%rip), %rax
    0000412e: 	cvtsi2sd	%rax, %xmm0
    00004133: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000413b: 	callq	_Z13record_resultdPKc # Offset: 16699
    00004140: 	movq	0xa0(%rsp), %rdi
    00004148: 	cmpq	%r13, %rdi
    0000414b: 	je	.Ltmp3501 # Offset: 16715
    0000414d: 	movq	0xb0(%rsp), %rax
    00004155: 	leaq	0x1(%rax), %rsi
    00004159: 	callq	_ZdlPvm@PLT # Offset: 16729
.Ltmp3501:
    0000415e: 	leaq	DATAat0x57774(%rip), %rdx
    00004165: 	movq	%r14, %rsi
    00004168: 	movq	%r12, %rdi
    0000416b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16747
    00004170: 	movq	%r12, %rdx
    00004173: 	movl	$0x20, %esi
    00004178: 	movq	%rbp, %rdi
    0000417b: 	callq	"_Z14test_variable1Ih25custom_remainder_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 16763
    00004180: 	movq	0xa0(%rsp), %rdi
    00004188: 	cmpq	%r13, %rdi
    0000418b: 	je	.Ltmp3502 # Offset: 16779
    0000418d: 	movq	0xb0(%rsp), %rax
    00004195: 	leaq	0x1(%rax), %rsi
    00004199: 	callq	_ZdlPvm@PLT # Offset: 16793
.Ltmp3502:
    0000419e: 	leaq	DATAat0x5778e(%rip), %rdx
    000041a5: 	movq	%r14, %rsi
    000041a8: 	movq	%r12, %rdi
    000041ab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16811
    000041b0: 	callq	clock@PLT # Offset: 16816
    000041b5: 	movl	iterations(%rip), %ecx
    000041bb: 	movq	%rax, start_time(%rip)
    000041c2: 	testl	%ecx, %ecx
    000041c4: 	jle	.Ltmp3503 # Offset: 16836
    000041ca: 	movdqa	DATAat0x57d40(%rip), %xmm7
    000041d2: 	movl	$0x0, 0x1c(%rsp)
    000041da: 	leaq	0x2000(%rsp), %rbx
    000041e2: 	movaps	%xmm7, (%rsp)
    000041e6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3506:
    000041f0: 	movq	%rbp, %rax
    000041f3: 	pxor	%xmm0, %xmm0
    000041f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3504:
    00004200: 	movdqa	(%rsp), %xmm1
    00004205: 	pand	(%rax), %xmm1
    00004209: 	addq	$0x10, %rax
    0000420d: 	paddb	%xmm1, %xmm0
    00004211: 	cmpq	%rax, %rbx
    00004214: 	jne	.Ltmp3504 # Offset: 16916
    00004216: 	movdqa	%xmm0, %xmm1
    0000421a: 	cvttsd2si	init_value(%rip), %edx
    00004222: 	psrldq	$0x8, %xmm1
    00004227: 	paddb	%xmm1, %xmm0
    0000422b: 	pxor	%xmm1, %xmm1
    0000422f: 	psadbw	%xmm1, %xmm0
    00004233: 	movd	%xmm0, %eax
    00004237: 	shll	$0x6, %edx
    0000423a: 	cmpb	%al, %dl
    0000423c: 	je	.Ltmp3505 # Offset: 16956
    0000423e: 	movl	current_test(%rip), %edx
    00004244: 	leaq	DATAat0x571d0(%rip), %rsi
    0000424b: 	movl	$0x1, %edi
    00004250: 	xorl	%eax, %eax
    00004252: 	callq	__printf_chk@PLT # Offset: 16978
    00004257: 	movl	iterations(%rip), %ecx
.Ltmp3505:
    0000425d: 	addl	$0x1, 0x1c(%rsp)
    00004262: 	movl	0x1c(%rsp), %eax
    00004266: 	cmpl	%ecx, %eax
    00004268: 	jl	.Ltmp3506 # Offset: 17000
.Ltmp3503:
    0000426a: 	movq	%r12, %rsi
    0000426d: 	movq	%r15, %rdi
    00004270: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17008
    00004275: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000427c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004283: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000428a: 	je	.Ltmp3507 # Offset: 17034
.Ltmp3555:
    00004290: 	movq	-0x20(%rax), %rbx
    00004294: 	callq	clock@PLT # Offset: 17044
    00004299: 	pxor	%xmm0, %xmm0
    0000429d: 	movq	%rax, end_time(%rip)
    000042a4: 	movq	%rbx, %rdi
    000042a7: 	subq	start_time(%rip), %rax
    000042ae: 	cvtsi2sd	%rax, %xmm0
    000042b3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000042bb: 	callq	_Z13record_resultdPKc # Offset: 17083
    000042c0: 	movq	0xa0(%rsp), %rdi
    000042c8: 	cmpq	%r13, %rdi
    000042cb: 	je	.Ltmp3508 # Offset: 17099
    000042cd: 	movq	0xb0(%rsp), %rax
    000042d5: 	leaq	0x1(%rax), %rsi
    000042d9: 	callq	_ZdlPvm@PLT # Offset: 17113
.Ltmp3508:
    000042de: 	leaq	DATAat0x577a8(%rip), %rdx
    000042e5: 	movq	%r14, %rsi
    000042e8: 	movq	%r12, %rdi
    000042eb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17131
    000042f0: 	callq	clock@PLT # Offset: 17136
    000042f5: 	movl	iterations(%rip), %ecx
    000042fb: 	movq	%rax, start_time(%rip)
    00004302: 	testl	%ecx, %ecx
    00004304: 	jle	.Ltmp3509 # Offset: 17156
    0000430a: 	movdqa	DATAat0x57d10(%rip), %xmm7
    00004312: 	movl	$0x0, 0x1c(%rsp)
    0000431a: 	leaq	0x2000(%rsp), %rbx
    00004322: 	movaps	%xmm7, (%rsp)
    00004326: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3512:
    00004330: 	movq	%rbp, %rax
    00004333: 	pxor	%xmm0, %xmm0
    00004337: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3510:
    00004340: 	movdqa	(%rsp), %xmm1
    00004345: 	pand	(%rax), %xmm1
    00004349: 	addq	$0x10, %rax
    0000434d: 	paddb	%xmm1, %xmm0
    00004351: 	cmpq	%rbx, %rax
    00004354: 	jne	.Ltmp3510 # Offset: 17236
    00004356: 	movdqa	%xmm0, %xmm1
    0000435a: 	cvttsd2si	init_value(%rip), %edx
    00004362: 	psrldq	$0x8, %xmm1
    00004367: 	paddb	%xmm1, %xmm0
    0000436b: 	pxor	%xmm1, %xmm1
    0000436f: 	psadbw	%xmm1, %xmm0
    00004373: 	movd	%xmm0, %eax
    00004377: 	shll	$0x6, %edx
    0000437a: 	cmpb	%al, %dl
    0000437c: 	je	.Ltmp3511 # Offset: 17276
    0000437e: 	movl	current_test(%rip), %edx
    00004384: 	leaq	DATAat0x571d0(%rip), %rsi
    0000438b: 	movl	$0x1, %edi
    00004390: 	xorl	%eax, %eax
    00004392: 	callq	__printf_chk@PLT # Offset: 17298
    00004397: 	movl	iterations(%rip), %ecx
.Ltmp3511:
    0000439d: 	addl	$0x1, 0x1c(%rsp)
    000043a2: 	movl	0x1c(%rsp), %eax
    000043a6: 	cmpl	%ecx, %eax
    000043a8: 	jl	.Ltmp3512 # Offset: 17320
.Ltmp3509:
    000043aa: 	movq	%r12, %rsi
    000043ad: 	movq	%r15, %rdi
    000043b0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17328
    000043b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000043bc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000043c3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000043ca: 	je	.Ltmp3513 # Offset: 17354
.Ltmp3554:
    000043d0: 	movq	-0x20(%rax), %rbx
    000043d4: 	callq	clock@PLT # Offset: 17364
    000043d9: 	pxor	%xmm0, %xmm0
    000043dd: 	movq	%rax, end_time(%rip)
    000043e4: 	movq	%rbx, %rdi
    000043e7: 	subq	start_time(%rip), %rax
    000043ee: 	cvtsi2sd	%rax, %xmm0
    000043f3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000043fb: 	callq	_Z13record_resultdPKc # Offset: 17403
    00004400: 	movq	0xa0(%rsp), %rdi
    00004408: 	cmpq	%r13, %rdi
    0000440b: 	je	.Ltmp3514 # Offset: 17419
    0000440d: 	movq	0xb0(%rsp), %rax
    00004415: 	leaq	0x1(%rax), %rsi
    00004419: 	callq	_ZdlPvm@PLT # Offset: 17433
.Ltmp3514:
    0000441e: 	leaq	DATAat0x577b0(%rip), %rdx
    00004425: 	movq	%r14, %rsi
    00004428: 	movq	%r12, %rdi
    0000442b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17451
    00004430: 	callq	clock@PLT # Offset: 17456
    00004435: 	movl	iterations(%rip), %ecx
    0000443b: 	movq	%rax, start_time(%rip)
    00004442: 	testl	%ecx, %ecx
    00004444: 	jle	.Ltmp3515 # Offset: 17476
    0000444a: 	movdqa	DATAat0x57d10(%rip), %xmm7
    00004452: 	movl	$0x0, 0x1c(%rsp)
    0000445a: 	leaq	0x2000(%rsp), %rbx
    00004462: 	movaps	%xmm7, (%rsp)
    00004466: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3518:
    00004470: 	movq	%rbp, %rax
    00004473: 	pxor	%xmm0, %xmm0
    00004477: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3516:
    00004480: 	movdqa	(%rsp), %xmm1
    00004485: 	pand	(%rax), %xmm1
    00004489: 	addq	$0x10, %rax
    0000448d: 	paddb	%xmm1, %xmm0
    00004491: 	cmpq	%rax, %rbx
    00004494: 	jne	.Ltmp3516 # Offset: 17556
    00004496: 	movdqa	%xmm0, %xmm1
    0000449a: 	cvttsd2si	init_value(%rip), %edx
    000044a2: 	psrldq	$0x8, %xmm1
    000044a7: 	paddb	%xmm1, %xmm0
    000044ab: 	pxor	%xmm1, %xmm1
    000044af: 	psadbw	%xmm1, %xmm0
    000044b3: 	movd	%xmm0, %eax
    000044b7: 	shll	$0x6, %edx
    000044ba: 	cmpb	%al, %dl
    000044bc: 	je	.Ltmp3517 # Offset: 17596
    000044be: 	movl	current_test(%rip), %edx
    000044c4: 	leaq	DATAat0x571d0(%rip), %rsi
    000044cb: 	movl	$0x1, %edi
    000044d0: 	xorl	%eax, %eax
    000044d2: 	callq	__printf_chk@PLT # Offset: 17618
    000044d7: 	movl	iterations(%rip), %ecx
.Ltmp3517:
    000044dd: 	addl	$0x1, 0x1c(%rsp)
    000044e2: 	movl	0x1c(%rsp), %eax
    000044e6: 	cmpl	%ecx, %eax
    000044e8: 	jl	.Ltmp3518 # Offset: 17640
.Ltmp3515:
    000044ea: 	movq	%r12, %rsi
    000044ed: 	movq	%r15, %rdi
    000044f0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17648
    000044f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000044fc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004503: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000450a: 	je	.Ltmp3519 # Offset: 17674
.Ltmp3553:
    00004510: 	movq	-0x20(%rax), %rbx
    00004514: 	callq	clock@PLT # Offset: 17684
    00004519: 	pxor	%xmm0, %xmm0
    0000451d: 	movq	%rax, end_time(%rip)
    00004524: 	movq	%rbx, %rdi
    00004527: 	subq	start_time(%rip), %rax
    0000452e: 	cvtsi2sd	%rax, %xmm0
    00004533: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000453b: 	callq	_Z13record_resultdPKc # Offset: 17723
    00004540: 	movq	0xa0(%rsp), %rdi
    00004548: 	cmpq	%r13, %rdi
    0000454b: 	je	.Ltmp3520 # Offset: 17739
    0000454d: 	movq	0xb0(%rsp), %rax
    00004555: 	leaq	0x1(%rax), %rsi
    00004559: 	callq	_ZdlPvm@PLT # Offset: 17753
.Ltmp3520:
    0000455e: 	leaq	DATAat0x577c2(%rip), %rdx
    00004565: 	movq	%r14, %rsi
    00004568: 	movq	%r12, %rdi
    0000456b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17771
    00004570: 	callq	clock@PLT # Offset: 17776
    00004575: 	movl	iterations(%rip), %ecx
    0000457b: 	movq	%rax, start_time(%rip)
    00004582: 	testl	%ecx, %ecx
    00004584: 	jle	.Ltmp3521 # Offset: 17796
    0000458a: 	movdqa	DATAat0x57d10(%rip), %xmm7
    00004592: 	movl	$0x0, 0x1c(%rsp)
    0000459a: 	leaq	0x2000(%rsp), %rbx
    000045a2: 	movaps	%xmm7, (%rsp)
    000045a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3524:
    000045b0: 	movq	%rbp, %rax
    000045b3: 	pxor	%xmm0, %xmm0
    000045b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3522:
    000045c0: 	movdqa	(%rsp), %xmm1
    000045c5: 	pand	(%rax), %xmm1
    000045c9: 	addq	$0x10, %rax
    000045cd: 	paddb	%xmm1, %xmm0
    000045d1: 	cmpq	%rbx, %rax
    000045d4: 	jne	.Ltmp3522 # Offset: 17876
    000045d6: 	movdqa	%xmm0, %xmm1
    000045da: 	cvttsd2si	init_value(%rip), %edx
    000045e2: 	psrldq	$0x8, %xmm1
    000045e7: 	paddb	%xmm1, %xmm0
    000045eb: 	pxor	%xmm1, %xmm1
    000045ef: 	psadbw	%xmm1, %xmm0
    000045f3: 	movd	%xmm0, %eax
    000045f7: 	shll	$0x6, %edx
    000045fa: 	cmpb	%al, %dl
    000045fc: 	je	.Ltmp3523 # Offset: 17916
    000045fe: 	movl	current_test(%rip), %edx
    00004604: 	leaq	DATAat0x571d0(%rip), %rsi
    0000460b: 	movl	$0x1, %edi
    00004610: 	xorl	%eax, %eax
    00004612: 	callq	__printf_chk@PLT # Offset: 17938
    00004617: 	movl	iterations(%rip), %ecx
.Ltmp3523:
    0000461d: 	addl	$0x1, 0x1c(%rsp)
    00004622: 	movl	0x1c(%rsp), %eax
    00004626: 	cmpl	%ecx, %eax
    00004628: 	jl	.Ltmp3524 # Offset: 17960
.Ltmp3521:
    0000462a: 	movq	%r12, %rsi
    0000462d: 	movq	%r15, %rdi
    00004630: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17968
    00004635: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000463c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004643: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000464a: 	je	.Ltmp3525 # Offset: 17994
.Ltmp3552:
    00004650: 	movq	-0x20(%rax), %rbx
    00004654: 	callq	clock@PLT # Offset: 18004
    00004659: 	pxor	%xmm0, %xmm0
    0000465d: 	movq	%rax, end_time(%rip)
    00004664: 	movq	%rbx, %rdi
    00004667: 	subq	start_time(%rip), %rax
    0000466e: 	cvtsi2sd	%rax, %xmm0
    00004673: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000467b: 	callq	_Z13record_resultdPKc # Offset: 18043
    00004680: 	movq	0xa0(%rsp), %rdi
    00004688: 	cmpq	%r13, %rdi
    0000468b: 	je	.Ltmp3526 # Offset: 18059
    0000468d: 	movq	0xb0(%rsp), %rax
    00004695: 	leaq	0x1(%rax), %rsi
    00004699: 	callq	_ZdlPvm@PLT # Offset: 18073
.Ltmp3526:
    0000469e: 	leaq	DATAat0x577d5(%rip), %rdx
    000046a5: 	movq	%r14, %rsi
    000046a8: 	movq	%r12, %rdi
    000046ab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18091
    000046b0: 	callq	clock@PLT # Offset: 18096
    000046b5: 	movl	iterations(%rip), %ecx
    000046bb: 	movq	%rax, start_time(%rip)
    000046c2: 	testl	%ecx, %ecx
    000046c4: 	jle	.Ltmp3527 # Offset: 18116
    000046ca: 	movdqa	DATAat0x57d10(%rip), %xmm7
    000046d2: 	movl	$0x0, 0x1c(%rsp)
    000046da: 	leaq	0x2000(%rsp), %rbx
    000046e2: 	movaps	%xmm7, (%rsp)
    000046e6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3530:
    000046f0: 	movq	%rbp, %rax
    000046f3: 	pxor	%xmm0, %xmm0
    000046f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3528:
    00004700: 	movdqa	(%rsp), %xmm1
    00004705: 	pand	(%rax), %xmm1
    00004709: 	addq	$0x10, %rax
    0000470d: 	paddb	%xmm1, %xmm0
    00004711: 	cmpq	%rax, %rbx
    00004714: 	jne	.Ltmp3528 # Offset: 18196
    00004716: 	movdqa	%xmm0, %xmm1
    0000471a: 	cvttsd2si	init_value(%rip), %edx
    00004722: 	psrldq	$0x8, %xmm1
    00004727: 	paddb	%xmm1, %xmm0
    0000472b: 	pxor	%xmm1, %xmm1
    0000472f: 	psadbw	%xmm1, %xmm0
    00004733: 	movd	%xmm0, %eax
    00004737: 	shll	$0x6, %edx
    0000473a: 	cmpb	%al, %dl
    0000473c: 	je	.Ltmp3529 # Offset: 18236
    0000473e: 	movl	current_test(%rip), %edx
    00004744: 	leaq	DATAat0x571d0(%rip), %rsi
    0000474b: 	movl	$0x1, %edi
    00004750: 	xorl	%eax, %eax
    00004752: 	callq	__printf_chk@PLT # Offset: 18258
    00004757: 	movl	iterations(%rip), %ecx
.Ltmp3529:
    0000475d: 	addl	$0x1, 0x1c(%rsp)
    00004762: 	movl	0x1c(%rsp), %eax
    00004766: 	cmpl	%ecx, %eax
    00004768: 	jl	.Ltmp3530 # Offset: 18280
.Ltmp3527:
    0000476a: 	movq	%r12, %rsi
    0000476d: 	movq	%r15, %rdi
    00004770: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18288
    00004775: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000477c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004783: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000478a: 	je	.Ltmp3531 # Offset: 18314
.Ltmp3551:
    00004790: 	movq	-0x20(%rax), %rbx
    00004794: 	callq	clock@PLT # Offset: 18324
    00004799: 	pxor	%xmm0, %xmm0
    0000479d: 	movq	%rax, end_time(%rip)
    000047a4: 	movq	%rbx, %rdi
    000047a7: 	subq	start_time(%rip), %rax
    000047ae: 	cvtsi2sd	%rax, %xmm0
    000047b3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000047bb: 	callq	_Z13record_resultdPKc # Offset: 18363
    000047c0: 	movq	0xa0(%rsp), %rdi
    000047c8: 	cmpq	%r13, %rdi
    000047cb: 	je	.Ltmp3532 # Offset: 18379
    000047cd: 	movq	0xb0(%rsp), %rax
    000047d5: 	leaq	0x1(%rax), %rsi
    000047d9: 	callq	_ZdlPvm@PLT # Offset: 18393
.Ltmp3532:
    000047de: 	leaq	DATAat0x577ed(%rip), %rdx
    000047e5: 	movq	%r14, %rsi
    000047e8: 	movq	%r12, %rdi
    000047eb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18411
    000047f0: 	movq	%r12, %rdx
    000047f3: 	movl	$0x40, %esi
    000047f8: 	movq	%rbp, %rdi
    000047fb: 	callq	"_Z14test_variable1Ih25custom_remainder_variableIhEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 18427
    00004800: 	movq	0xa0(%rsp), %rdi
    00004808: 	cmpq	%r13, %rdi
    0000480b: 	je	.Ltmp3533 # Offset: 18443
    0000480d: 	movq	0xb0(%rsp), %rax
    00004815: 	leaq	0x1(%rax), %rsi
    00004819: 	callq	_ZdlPvm@PLT # Offset: 18457
.Ltmp3533:
    0000481e: 	leaq	DATAat0x57807(%rip), %rdx
    00004825: 	movq	%r14, %rsi
    00004828: 	movq	%r12, %rdi
    0000482b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18475
    00004830: 	callq	clock@PLT # Offset: 18480
    00004835: 	movl	iterations(%rip), %ecx
    0000483b: 	movq	%rax, start_time(%rip)
    00004842: 	testl	%ecx, %ecx
    00004844: 	jle	.Ltmp3534 # Offset: 18500
    0000484a: 	movdqa	DATAat0x57d10(%rip), %xmm7
    00004852: 	movl	$0x0, 0x1c(%rsp)
    0000485a: 	leaq	0x2000(%rsp), %rbx
    00004862: 	movaps	%xmm7, (%rsp)
    00004866: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3537:
    00004870: 	movq	%rbp, %rax
    00004873: 	pxor	%xmm0, %xmm0
    00004877: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3535:
    00004880: 	movdqa	(%rsp), %xmm1
    00004885: 	pand	(%rax), %xmm1
    00004889: 	addq	$0x10, %rax
    0000488d: 	paddb	%xmm1, %xmm0
    00004891: 	cmpq	%rbx, %rax
    00004894: 	jne	.Ltmp3535 # Offset: 18580
    00004896: 	movdqa	%xmm0, %xmm1
    0000489a: 	cvttsd2si	init_value(%rip), %edx
    000048a2: 	psrldq	$0x8, %xmm1
    000048a7: 	paddb	%xmm1, %xmm0
    000048ab: 	pxor	%xmm1, %xmm1
    000048af: 	psadbw	%xmm1, %xmm0
    000048b3: 	movd	%xmm0, %eax
    000048b7: 	shll	$0x6, %edx
    000048ba: 	cmpb	%al, %dl
    000048bc: 	je	.Ltmp3536 # Offset: 18620
    000048be: 	movl	current_test(%rip), %edx
    000048c4: 	leaq	DATAat0x571d0(%rip), %rsi
    000048cb: 	movl	$0x1, %edi
    000048d0: 	xorl	%eax, %eax
    000048d2: 	callq	__printf_chk@PLT # Offset: 18642
    000048d7: 	movl	iterations(%rip), %ecx
.Ltmp3536:
    000048dd: 	addl	$0x1, 0x1c(%rsp)
    000048e2: 	movl	0x1c(%rsp), %eax
    000048e6: 	cmpl	%ecx, %eax
    000048e8: 	jl	.Ltmp3537 # Offset: 18664
.Ltmp3534:
    000048ea: 	movq	%r12, %rsi
    000048ed: 	movq	%r15, %rdi
    000048f0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18672
    000048f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000048fc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004903: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000490a: 	je	.Ltmp3538 # Offset: 18698
.Ltmp3550:
    00004910: 	movq	-0x20(%rax), %rbp
    00004914: 	callq	clock@PLT # Offset: 18708
    00004919: 	pxor	%xmm0, %xmm0
    0000491d: 	movq	%rax, end_time(%rip)
    00004924: 	movq	%rbp, %rdi
    00004927: 	subq	start_time(%rip), %rax
    0000492e: 	cvtsi2sd	%rax, %xmm0
    00004933: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000493b: 	callq	_Z13record_resultdPKc # Offset: 18747
    00004940: 	movq	0xa0(%rsp), %rdi
    00004948: 	cmpq	%r13, %rdi
    0000494b: 	je	.Ltmp3539 # Offset: 18763
    0000494d: 	movq	0xb0(%rsp), %rax
    00004955: 	leaq	0x1(%rax), %rsi
    00004959: 	callq	_ZdlPvm@PLT # Offset: 18777
.Ltmp3539:
    0000495e: 	leaq	DATAat0x579a4(%rip), %rdx
    00004965: 	movq	%r14, %rsi
    00004968: 	movq	%r12, %rdi
    0000496b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18795
    00004970: 	movl	iterations(%rip), %edx
    00004976: 	xorl	%r8d, %r8d
    00004979: 	xorl	%ecx, %ecx
    0000497b: 	movl	$0x1f40, %esi
    00004980: 	movq	0xa0(%rsp), %rdi
    00004988: 	callq	_Z9summarizePKciiii # Offset: 18824
    0000498d: 	movq	0xa0(%rsp), %rdi
    00004995: 	cmpq	%r13, %rdi
    00004998: 	je	.Ltmp3540 # Offset: 18840
    0000499a: 	movq	0xb0(%rsp), %rax
    000049a2: 	leaq	0x1(%rax), %rsi
    000049a6: 	callq	_ZdlPvm@PLT # Offset: 18854
.Ltmp3540:
    000049ab: 	movq	0x80(%rsp), %rdi
    000049b3: 	leaq	0x90(%rsp), %rax
    000049bb: 	cmpq	%rax, %rdi
    000049be: 	je	.Ltmp3541 # Offset: 18878
    000049c0: 	movq	0x90(%rsp), %rax
    000049c8: 	leaq	0x1(%rax), %rsi
    000049cc: 	callq	_ZdlPvm@PLT # Offset: 18892
.Ltmp3541:
    000049d1: 	movq	0x60(%rsp), %rdi
    000049d6: 	leaq	0x70(%rsp), %rax
    000049db: 	cmpq	%rax, %rdi
    000049de: 	je	.Ltmp3542 # Offset: 18910
    000049e0: 	movq	0x70(%rsp), %rax
    000049e5: 	leaq	0x1(%rax), %rsi
    000049e9: 	callq	_ZdlPvm@PLT # Offset: 18921
.Ltmp3542:
    000049ee: 	movq	0x40(%rsp), %rdi
    000049f3: 	leaq	0x50(%rsp), %rax
    000049f8: 	cmpq	%rax, %rdi
    000049fb: 	je	.Ltmp3543 # Offset: 18939
    000049fd: 	movq	0x50(%rsp), %rax
    00004a02: 	leaq	0x1(%rax), %rsi
    00004a06: 	callq	_ZdlPvm@PLT # Offset: 18950
.Ltmp3543:
    00004a0b: 	movq	0x2008(%rsp), %rax
    00004a13: 	subq	%fs:0x28, %rax
    00004a1c: 	jne	.Ltmp3544 # Offset: 18972
    00004a22: 	addq	$0x2018, %rsp
    00004a29: 	popq	%rbx
    00004a2a: 	popq	%rbp
    00004a2b: 	popq	%r12
    00004a2d: 	popq	%r13
    00004a2f: 	popq	%r14
    00004a31: 	popq	%r15
    00004a33: 	retq # Offset: 18995
    00004a34: 	nopl	(%rax) # Size: 4
.Ltmp3249:
    00004a38: 	movl	current_test(%rip), %edx
    00004a3e: 	leaq	DATAat0x571d0(%rip), %rsi
    00004a45: 	movl	$0x1, %edi
    00004a4a: 	xorl	%eax, %eax
    00004a4c: 	callq	__printf_chk@PLT # Offset: 19020
    00004a51: 	movl	iterations(%rip), %edx
    00004a57: 	jmp	.Ltmp3545 # Offset: 19031
    00004a5c: 	nopl	(%rax) # Size: 4
.Ltmp3242:
    00004a60: 	movl	current_test(%rip), %edx
    00004a66: 	leaq	DATAat0x571d0(%rip), %rsi
    00004a6d: 	movl	$0x1, %edi
    00004a72: 	xorl	%eax, %eax
    00004a74: 	callq	__printf_chk@PLT # Offset: 19060
    00004a79: 	movl	iterations(%rip), %edx
    00004a7f: 	jmp	.Ltmp3546 # Offset: 19071
    00004a84: 	nopl	(%rax) # Size: 4
.Ltmp3236:
    00004a88: 	movl	current_test(%rip), %edx
    00004a8e: 	leaq	DATAat0x571d0(%rip), %rsi
    00004a95: 	movl	$0x1, %edi
    00004a9a: 	xorl	%eax, %eax
    00004a9c: 	callq	__printf_chk@PLT # Offset: 19100
    00004aa1: 	movl	iterations(%rip), %edx
    00004aa7: 	jmp	.Ltmp3547 # Offset: 19111
    00004aac: 	nopl	(%rax) # Size: 4
.Ltmp3229:
    00004ab0: 	movl	current_test(%rip), %edx
    00004ab6: 	leaq	DATAat0x571d0(%rip), %rsi
    00004abd: 	movl	$0x1, %edi
    00004ac2: 	xorl	%eax, %eax
    00004ac4: 	callq	__printf_chk@PLT # Offset: 19140
    00004ac9: 	movl	iterations(%rip), %edx
    00004acf: 	jmp	.Ltmp3548 # Offset: 19151
.Ltmp3205:
    00004ad4: 	movq	-0x8(%rdx), %rax
    00004ad8: 	addq	$0x200, %rax
    00004ade: 	jmp	.Ltmp3549 # Offset: 19166
.Ltmp3538:
    00004ae3: 	movq	-0x8(%rdx), %rax
    00004ae7: 	addq	$0x200, %rax
    00004aed: 	jmp	.Ltmp3550 # Offset: 19181
.Ltmp3531:
    00004af2: 	movq	-0x8(%rdx), %rax
    00004af6: 	addq	$0x200, %rax
    00004afc: 	jmp	.Ltmp3551 # Offset: 19196
.Ltmp3525:
    00004b01: 	movq	-0x8(%rdx), %rax
    00004b05: 	addq	$0x200, %rax
    00004b0b: 	jmp	.Ltmp3552 # Offset: 19211
.Ltmp3519:
    00004b10: 	movq	-0x8(%rdx), %rax
    00004b14: 	addq	$0x200, %rax
    00004b1a: 	jmp	.Ltmp3553 # Offset: 19226
.Ltmp3513:
    00004b1f: 	movq	-0x8(%rdx), %rax
    00004b23: 	addq	$0x200, %rax
    00004b29: 	jmp	.Ltmp3554 # Offset: 19241
.Ltmp3507:
    00004b2e: 	movq	-0x8(%rdx), %rax
    00004b32: 	addq	$0x200, %rax
    00004b38: 	jmp	.Ltmp3555 # Offset: 19256
.Ltmp3500:
    00004b3d: 	movq	-0x8(%rdx), %rax
    00004b41: 	addq	$0x200, %rax
    00004b47: 	jmp	.Ltmp3556 # Offset: 19271
.Ltmp3494:
    00004b4c: 	movq	-0x8(%rdx), %rax
    00004b50: 	addq	$0x200, %rax
    00004b56: 	jmp	.Ltmp3557 # Offset: 19286
.Ltmp3488:
    00004b5b: 	movq	-0x8(%rdx), %rax
    00004b5f: 	addq	$0x200, %rax
    00004b65: 	jmp	.Ltmp3558 # Offset: 19301
.Ltmp3482:
    00004b6a: 	movq	-0x8(%rdx), %rax
    00004b6e: 	addq	$0x200, %rax
    00004b74: 	jmp	.Ltmp3559 # Offset: 19316
.Ltmp3476:
    00004b79: 	movq	-0x8(%rdx), %rax
    00004b7d: 	addq	$0x200, %rax
    00004b83: 	jmp	.Ltmp3560 # Offset: 19331
.Ltmp3469:
    00004b88: 	movq	-0x8(%rdx), %rax
    00004b8c: 	addq	$0x200, %rax
    00004b92: 	jmp	.Ltmp3561 # Offset: 19346
.Ltmp3463:
    00004b97: 	movq	-0x8(%rdx), %rax
    00004b9b: 	addq	$0x200, %rax
    00004ba1: 	jmp	.Ltmp3562 # Offset: 19361
.Ltmp3457:
    00004ba6: 	movq	-0x8(%rdx), %rax
    00004baa: 	addq	$0x200, %rax
    00004bb0: 	jmp	.Ltmp3563 # Offset: 19376
.Ltmp3451:
    00004bb5: 	movq	-0x8(%rdx), %rax
    00004bb9: 	addq	$0x200, %rax
    00004bbf: 	jmp	.Ltmp3564 # Offset: 19391
.Ltmp3442:
    00004bc4: 	movq	-0x8(%rdx), %rax
    00004bc8: 	addq	$0x200, %rax
    00004bce: 	jmp	.Ltmp3565 # Offset: 19406
.Ltmp3436:
    00004bd3: 	movq	-0x8(%rdx), %rax
    00004bd7: 	addq	$0x200, %rax
    00004bdd: 	jmp	.Ltmp3566 # Offset: 19421
.Ltmp3430:
    00004be2: 	movq	-0x8(%rdx), %rax
    00004be6: 	addq	$0x200, %rax
    00004bec: 	jmp	.Ltmp3567 # Offset: 19436
.Ltmp3422:
    00004bf1: 	movq	-0x8(%rdx), %rax
    00004bf5: 	addq	$0x200, %rax
    00004bfb: 	jmp	.Ltmp3568 # Offset: 19451
.Ltmp3416:
    00004c00: 	movq	-0x8(%rdx), %rax
    00004c04: 	addq	$0x200, %rax
    00004c0a: 	jmp	.Ltmp3569 # Offset: 19466
.Ltmp3409:
    00004c0f: 	movq	-0x8(%rdx), %rax
    00004c13: 	addq	$0x200, %rax
    00004c19: 	jmp	.Ltmp3570 # Offset: 19481
.Ltmp3403:
    00004c1e: 	movq	-0x8(%rdx), %rax
    00004c22: 	addq	$0x200, %rax
    00004c28: 	jmp	.Ltmp3571 # Offset: 19496
.Ltmp3396:
    00004c2d: 	movq	-0x8(%rdx), %rax
    00004c31: 	addq	$0x200, %rax
    00004c37: 	jmp	.Ltmp3572 # Offset: 19511
.Ltmp3390:
    00004c3c: 	movq	-0x8(%rdx), %rax
    00004c40: 	addq	$0x200, %rax
    00004c46: 	jmp	.Ltmp3573 # Offset: 19526
.Ltmp3384:
    00004c4b: 	movq	-0x8(%rdx), %rax
    00004c4f: 	addq	$0x200, %rax
    00004c55: 	jmp	.Ltmp3574 # Offset: 19541
.Ltmp3378:
    00004c5a: 	movq	-0x8(%rdx), %rax
    00004c5e: 	addq	$0x200, %rax
    00004c64: 	jmp	.Ltmp3575 # Offset: 19556
.Ltmp3372:
    00004c69: 	movq	-0x8(%rdx), %rax
    00004c6d: 	addq	$0x200, %rax
    00004c73: 	jmp	.Ltmp3576 # Offset: 19571
.Ltmp3365:
    00004c78: 	movq	-0x8(%rdx), %rax
    00004c7c: 	addq	$0x200, %rax
    00004c82: 	jmp	.Ltmp3577 # Offset: 19586
.Ltmp3359:
    00004c87: 	movq	-0x8(%rdx), %rax
    00004c8b: 	addq	$0x200, %rax
    00004c91: 	jmp	.Ltmp3578 # Offset: 19601
.Ltmp3353:
    00004c96: 	movq	-0x8(%rdx), %rax
    00004c9a: 	addq	$0x200, %rax
    00004ca0: 	jmp	.Ltmp3579 # Offset: 19616
.Ltmp3346:
    00004ca5: 	movq	-0x8(%rdx), %rax
    00004ca9: 	addq	$0x200, %rax
    00004caf: 	jmp	.Ltmp3580 # Offset: 19631
.Ltmp3340:
    00004cb4: 	movq	-0x8(%rdx), %rax
    00004cb8: 	addq	$0x200, %rax
    00004cbe: 	jmp	.Ltmp3581 # Offset: 19646
.Ltmp3334:
    00004cc3: 	movq	-0x8(%rdx), %rax
    00004cc7: 	addq	$0x200, %rax
    00004ccd: 	jmp	.Ltmp3582 # Offset: 19661
.Ltmp3327:
    00004cd2: 	movq	-0x8(%rdx), %rax
    00004cd6: 	addq	$0x200, %rax
    00004cdc: 	jmp	.Ltmp3583 # Offset: 19676
.Ltmp3321:
    00004ce1: 	movq	-0x8(%rdx), %rax
    00004ce5: 	addq	$0x200, %rax
    00004ceb: 	jmp	.Ltmp3584 # Offset: 19691
.Ltmp3314:
    00004cf0: 	movq	-0x8(%rdx), %rax
    00004cf4: 	addq	$0x200, %rax
    00004cfa: 	jmp	.Ltmp3585 # Offset: 19706
.Ltmp3307:
    00004cff: 	movq	-0x8(%rdx), %rax
    00004d03: 	addq	$0x200, %rax
    00004d09: 	jmp	.Ltmp3586 # Offset: 19721
.Ltmp3300:
    00004d0e: 	movq	-0x8(%rdx), %rax
    00004d12: 	addq	$0x200, %rax
    00004d18: 	jmp	.Ltmp3587 # Offset: 19736
.Ltmp3293:
    00004d1d: 	movq	-0x8(%rdx), %rax
    00004d21: 	addq	$0x200, %rax
    00004d27: 	jmp	.Ltmp3588 # Offset: 19751
.Ltmp3286:
    00004d2c: 	movq	-0x8(%rdx), %rax
    00004d30: 	addq	$0x200, %rax
    00004d36: 	jmp	.Ltmp3589 # Offset: 19766
.Ltmp3280:
    00004d3b: 	movq	-0x8(%rdx), %rax
    00004d3f: 	addq	$0x200, %rax
    00004d45: 	jmp	.Ltmp3590 # Offset: 19781
.Ltmp3274:
    00004d4a: 	movq	-0x8(%rdx), %rax
    00004d4e: 	addq	$0x200, %rax
    00004d54: 	jmp	.Ltmp3591 # Offset: 19796
.Ltmp3266:
    00004d59: 	movq	-0x8(%rdx), %rax
    00004d5d: 	addq	$0x200, %rax
    00004d63: 	jmp	.Ltmp3592 # Offset: 19811
.Ltmp3258:
    00004d68: 	movq	-0x8(%rdx), %rax
    00004d6c: 	addq	$0x200, %rax
    00004d72: 	jmp	.Ltmp3593 # Offset: 19826
.Ltmp3251:
    00004d77: 	movq	-0x8(%rdx), %rax
    00004d7b: 	addq	$0x200, %rax
    00004d81: 	jmp	.Ltmp3594 # Offset: 19841
.Ltmp3244:
    00004d86: 	movq	-0x8(%rdx), %rax
    00004d8a: 	addq	$0x200, %rax
    00004d90: 	jmp	.Ltmp3595 # Offset: 19856
.Ltmp3238:
    00004d95: 	movq	-0x8(%rdx), %rax
    00004d99: 	addq	$0x200, %rax
    00004d9f: 	jmp	.Ltmp3596 # Offset: 19871
.Ltmp3231:
    00004da4: 	movq	-0x8(%rdx), %rax
    00004da8: 	addq	$0x200, %rax
    00004dae: 	jmp	.Ltmp3597 # Offset: 19886
.Ltmp3224:
    00004db3: 	movq	-0x8(%rdx), %rax
    00004db7: 	addq	$0x200, %rax
    00004dbd: 	jmp	.Ltmp3598 # Offset: 19901
.Ltmp3217:
    00004dc2: 	movq	-0x8(%rdx), %rax
    00004dc6: 	addq	$0x200, %rax
    00004dcc: 	jmp	.Ltmp3599 # Offset: 19916
.Ltmp3211:
    00004dd1: 	movq	-0x8(%rdx), %rax
    00004dd5: 	addq	$0x200, %rax
    00004ddb: 	jmp	.Ltmp3600 # Offset: 19931
.Ltmp3544:
    00004de0: 	callq	__stack_chk_fail@PLT # Offset: 19936
    00004de5: 	endbr64
    00004de9: 	movq	%rax, %rbp
    00004dec: 	jmp	.Ltmp3601 # Offset: 19948
    00004dee: 	endbr64
.Ltmp3603:
    00004df2: 	movq	%rax, %rbx
    00004df5: 	jmp	.Ltmp3602 # Offset: 19957
    00004df7: 	endbr64
    00004dfb: 	jmp	.Ltmp3603 # Offset: 19963
.Ltmp3608:
    00004dfd: 	movq	0xa0(%rsp), %rdi
    00004e05: 	cmpq	%r13, %rdi
    00004e08: 	je	.Ltmp3604 # Offset: 19976
    00004e0a: 	movq	0xb0(%rsp), %rax
    00004e12: 	leaq	0x1(%rax), %rsi
    00004e16: 	callq	_ZdlPvm@PLT # Offset: 19990
.Ltmp3604:
    00004e1b: 	movq	0x60(%rsp), %rdi
    00004e20: 	leaq	0x70(%rsp), %rax
    00004e25: 	cmpq	%rax, %rdi
    00004e28: 	jne	.Ltmp3605 # Offset: 20008
.Ltmp3610:
    00004e2e: 	movq	%rbx, %rbp
.Ltmp3601:
    00004e31: 	movq	0x40(%rsp), %rdi
    00004e36: 	leaq	0x50(%rsp), %rax
    00004e3b: 	cmpq	%rax, %rdi
    00004e3e: 	je	.Ltmp3606 # Offset: 20030
    00004e40: 	movq	0x50(%rsp), %rax
    00004e45: 	leaq	0x1(%rax), %rsi
    00004e49: 	callq	_ZdlPvm@PLT # Offset: 20041
.Ltmp3606:
    00004e4e: 	movq	%rbp, %rdi
    00004e51: 	callq	_Unwind_Resume@PLT # Offset: 20049
.Ltmp3602:
    00004e56: 	movq	0xa0(%rsp), %rdi
    00004e5e: 	cmpq	%r13, %rdi
    00004e61: 	je	.Ltmp3607 # Offset: 20065
    00004e63: 	movq	0xb0(%rsp), %rax
    00004e6b: 	leaq	0x1(%rax), %rsi
    00004e6f: 	callq	_ZdlPvm@PLT # Offset: 20079
.Ltmp3607:
    00004e74: 	movq	0x80(%rsp), %rdi
    00004e7c: 	leaq	0x90(%rsp), %rax
    00004e84: 	cmpq	%rax, %rdi
    00004e87: 	je	.Ltmp3604 # Offset: 20103
    00004e89: 	movq	0x90(%rsp), %rax
    00004e91: 	leaq	0x1(%rax), %rsi
    00004e95: 	callq	_ZdlPvm@PLT # Offset: 20117
    00004e9a: 	jmp	.Ltmp3604 # Offset: 20122
    00004e9f: 	endbr64
    00004ea3: 	jmp	.Ltmp3603 # Offset: 20131
    00004ea8: 	endbr64
    00004eac: 	jmp	.Ltmp3603 # Offset: 20140
    00004eb1: 	endbr64
.Ltmp3609:
    00004eb5: 	movq	%rax, %rbx
    00004eb8: 	jmp	.Ltmp3608 # Offset: 20152
    00004ebd: 	endbr64
    00004ec1: 	jmp	.Ltmp3609 # Offset: 20161
    00004ec3: 	endbr64
    00004ec7: 	jmp	.Ltmp3609 # Offset: 20167
    00004ec9: 	endbr64
    00004ecd: 	jmp	.Ltmp3609 # Offset: 20173
    00004ecf: 	endbr64
    00004ed3: 	jmp	.Ltmp3603 # Offset: 20179
    00004ed8: 	endbr64
    00004edc: 	jmp	.Ltmp3609 # Offset: 20188
    00004ede: 	endbr64
    00004ee2: 	jmp	.Ltmp3609 # Offset: 20194
    00004ee4: 	endbr64
    00004ee8: 	jmp	.Ltmp3609 # Offset: 20200
.Ltmp3605:
    00004eea: 	movq	0x70(%rsp), %rax
    00004eef: 	leaq	0x1(%rax), %rsi
    00004ef3: 	callq	_ZdlPvm@PLT # Offset: 20211
    00004ef8: 	jmp	.Ltmp3610 # Offset: 20216
    00004efd: 	endbr64
    00004f01: 	jmp	.Ltmp3603 # Offset: 20225
    00004f06: 	endbr64
    00004f0a: 	jmp	.Ltmp3603 # Offset: 20234
    00004f0f: 	endbr64
    00004f13: 	jmp	.Ltmp3603 # Offset: 20243
    00004f18: 	endbr64
    00004f1c: 	movq	%rax, %rbx
    00004f1f: 	jmp	.Ltmp3607 # Offset: 20255
    00004f24: 	endbr64
    00004f28: 	jmp	.Ltmp3603 # Offset: 20264
    00004f2d: 	endbr64
    00004f31: 	jmp	.Ltmp3603 # Offset: 20273
    00004f36: 	endbr64
.Ltmp3612:
    00004f3a: 	movq	%rax, %rbp
    00004f3d: 	jmp	.Ltmp3611 # Offset: 20285
    00004f3f: 	endbr64
    00004f43: 	jmp	.Ltmp3612 # Offset: 20291
    00004f45: 	endbr64
    00004f49: 	jmp	.Ltmp3612 # Offset: 20297
    00004f4b: 	endbr64
    00004f4f: 	jmp	.Ltmp3612 # Offset: 20303
.Ltmp3611:
    00004f51: 	movq	0xa0(%rsp), %rdi
    00004f59: 	cmpq	%r13, %rdi
    00004f5c: 	je	.Ltmp3601 # Offset: 20316
    00004f62: 	movq	0xb0(%rsp), %rax
    00004f6a: 	leaq	0x1(%rax), %rsi
    00004f6e: 	callq	_ZdlPvm@PLT # Offset: 20334
    00004f73: 	jmp	.Ltmp3601 # Offset: 20339
    00004f78: 	endbr64
    00004f7c: 	jmp	.Ltmp3612 # Offset: 20348
    00004f7e: 	endbr64
    00004f82: 	jmp	.Ltmp3603 # Offset: 20354
    00004f87: 	endbr64
    00004f8b: 	jmp	.Ltmp3603 # Offset: 20363
    00004f90: 	endbr64
    00004f94: 	jmp	.Ltmp3603 # Offset: 20372
    00004f99: 	endbr64
    00004f9d: 	jmp	.Ltmp3603 # Offset: 20381
    00004fa2: 	endbr64
    00004fa6: 	jmp	.Ltmp3603 # Offset: 20390
    00004fab: 	endbr64
    00004faf: 	jmp	.Ltmp3603 # Offset: 20399
    00004fb4: 	endbr64
    00004fb8: 	jmp	.Ltmp3603 # Offset: 20408
    00004fbd: 	endbr64
    00004fc1: 	jmp	.Ltmp3603 # Offset: 20417
    00004fc6: 	endbr64
    00004fca: 	jmp	.Ltmp3603 # Offset: 20426
    00004fcf: 	endbr64
    00004fd3: 	jmp	.Ltmp3603 # Offset: 20435
    00004fd8: 	endbr64
    00004fdc: 	jmp	.Ltmp3603 # Offset: 20444
    00004fe1: 	endbr64
    00004fe5: 	jmp	.Ltmp3603 # Offset: 20453
    00004fea: 	endbr64
    00004fee: 	jmp	.Ltmp3603 # Offset: 20462
    00004ff3: 	endbr64
    00004ff7: 	jmp	.Ltmp3603 # Offset: 20471
    00004ffc: 	endbr64
    00005000: 	jmp	.Ltmp3603 # Offset: 20480
    00005005: 	endbr64
    00005009: 	jmp	.Ltmp3603 # Offset: 20489
    0000500e: 	endbr64
    00005012: 	jmp	.Ltmp3603 # Offset: 20498
    00005017: 	endbr64
    0000501b: 	jmp	.Ltmp3603 # Offset: 20507
    00005020: 	endbr64
    00005024: 	jmp	.Ltmp3603 # Offset: 20516
    00005029: 	endbr64
    0000502d: 	jmp	.Ltmp3603 # Offset: 20525
    00005032: 	endbr64
    00005036: 	jmp	.Ltmp3603 # Offset: 20534
    0000503b: 	endbr64
    0000503f: 	jmp	.Ltmp3603 # Offset: 20543
    00005044: 	endbr64
    00005048: 	jmp	.Ltmp3603 # Offset: 20552
    0000504d: 	endbr64
    00005051: 	jmp	.Ltmp3603 # Offset: 20561
    00005056: 	endbr64
    0000505a: 	jmp	.Ltmp3603 # Offset: 20570
    0000505f: 	endbr64
    00005063: 	jmp	.Ltmp3603 # Offset: 20579
    00005068: 	endbr64
    0000506c: 	jmp	.Ltmp3603 # Offset: 20588
    00005071: 	endbr64
    00005075: 	jmp	.Ltmp3612 # Offset: 20597
    0000507a: 	endbr64
    0000507e: 	jmp	.Ltmp3612 # Offset: 20606
    00005083: 	endbr64
    00005087: 	jmp	.Ltmp3612 # Offset: 20615
    0000508c: 	endbr64
    00005090: 	jmp	.Ltmp3612 # Offset: 20624
    00005095: 	endbr64
    00005099: 	jmp	.Ltmp3612 # Offset: 20633
    0000509e: 	endbr64
    000050a2: 	jmp	.Ltmp3612 # Offset: 20642
    000050a7: 	endbr64
    000050ab: 	jmp	.Ltmp3612 # Offset: 20651
    000050b0: 	endbr64
    000050b4: 	jmp	.Ltmp3612 # Offset: 20660
    000050b9: 	endbr64
    000050bd: 	movq	%rax, %rbx
    000050c0: 	jmp	.Ltmp3604 # Offset: 20672
    000050c5: 	endbr64
    000050c9: 	jmp	.Ltmp3612 # Offset: 20681
    000050ce: 	endbr64
    000050d2: 	jmp	.Ltmp3612 # Offset: 20690
    000050d7: 	endbr64
    000050db: 	jmp	.Ltmp3612 # Offset: 20699
    000050e0: 	endbr64
    000050e4: 	jmp	.Ltmp3609 # Offset: 20708
    000050e9: 	endbr64
    000050ed: 	jmp	.Ltmp3609 # Offset: 20717
    000050f2: 	endbr64
    000050f6: 	jmp	.Ltmp3609 # Offset: 20726
    000050fb: 	endbr64
    000050ff: 	jmp	.Ltmp3609 # Offset: 20735
    00005104: 	endbr64
    00005108: 	jmp	.Ltmp3612 # Offset: 20744
    0000510d: 	endbr64
    00005111: 	jmp	.Ltmp3612 # Offset: 20753
    00005116: 	endbr64
    0000511a: 	jmp	.Ltmp3612 # Offset: 20762
    0000511f: 	endbr64
    00005123: 	jmp	.Ltmp3612 # Offset: 20771
    00005128: 	endbr64
    0000512c: 	jmp	.Ltmp3609 # Offset: 20780
    00005131: 	endbr64
    00005135: 	jmp	.Ltmp3609 # Offset: 20789
    0000513a: 	endbr64
    0000513e: 	jmp	.Ltmp3612 # Offset: 20798
    00005143: 	endbr64
    00005147: 	jmp	.Ltmp3612 # Offset: 20807
    0000514c: 	endbr64
    00005150: 	jmp	.Ltmp3612 # Offset: 20816
    00005155: 	endbr64
    00005159: 	jmp	.Ltmp3612 # Offset: 20825
    0000515e: 	endbr64
    00005162: 	jmp	.Ltmp3612 # Offset: 20834
    00005167: 	endbr64
    0000516b: 	jmp	.Ltmp3612 # Offset: 20843
    00005170: 	endbr64
    00005174: 	jmp	.Ltmp3612 # Offset: 20852
    00005179: 	endbr64
    0000517d: 	jmp	.Ltmp3612 # Offset: 20861
    00005182: 	endbr64
    00005186: 	jmp	.Ltmp3612 # Offset: 20870
    0000518b: 	endbr64
    0000518f: 	jmp	.Ltmp3612 # Offset: 20879
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIhEvv"

Binary Function "_Z13test_constantIa26custom_multiply_shiftadd_2IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIa26custom_multiply_shiftadd_2IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIa26custom_multiply_shiftadd_2IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_strength_reduction.cpp/1
  Number      : 189
  State       : disassembled
  Address     : 0x2aa70
  Size        : 0x27d
  MaxSize     : 0x280
  Offset      : 0x2aa70
  Section     : .text
  Orc Section : .local.text._Z13test_constantIa26custom_multiply_shiftadd_2IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0188:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp3613 # Offset: 54
    0000003c: 	movsd	init_value(%rip), %xmm4
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x571d0(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp3616:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm3, %xmm3
    0000005f: 	nop # Size: 1
.Ltmp3614:
    00000060: 	movdqu	(%rax), %xmm1
    00000064: 	addq	$0x10, %rax
    00000068: 	movdqa	%xmm1, %xmm2
    0000006c: 	paddb	%xmm1, %xmm2
    00000070: 	movdqa	%xmm2, %xmm0
    00000074: 	paddb	%xmm2, %xmm1
    00000078: 	paddb	%xmm2, %xmm0
    0000007c: 	paddb	%xmm1, %xmm1
    00000080: 	paddb	%xmm0, %xmm0
    00000084: 	paddb	%xmm1, %xmm1
    00000088: 	paddb	%xmm0, %xmm0
    0000008c: 	paddb	%xmm0, %xmm0
    00000090: 	paddb	%xmm0, %xmm0
    00000094: 	paddb	%xmm3, %xmm0
    00000098: 	movdqa	%xmm1, %xmm3
    0000009c: 	paddb	%xmm1, %xmm3
    000000a0: 	paddb	%xmm2, %xmm1
    000000a4: 	paddb	%xmm3, %xmm3
    000000a8: 	psubb	%xmm3, %xmm0
    000000ac: 	movdqa	%xmm0, %xmm3
    000000b0: 	psubb	%xmm1, %xmm3
    000000b4: 	cmpq	%rax, %rbx
    000000b7: 	jne	.Ltmp3614 # Offset: 183
    000000b9: 	movdqa	%xmm3, %xmm0
    000000bd: 	cvttsd2si	%xmm4, %edx
    000000c1: 	pxor	%xmm5, %xmm5
    000000c5: 	psrldq	$0x8, %xmm0
    000000ca: 	paddb	%xmm0, %xmm3
    000000ce: 	psadbw	%xmm5, %xmm3
    000000d2: 	movd	%xmm3, %eax
    000000d6: 	shll	$0x7, %edx
    000000d9: 	cmpb	%al, %dl
    000000db: 	je	.Ltmp3615 # Offset: 219
    000000dd: 	movl	current_test(%rip), %edx
    000000e3: 	movq	%r12, %rsi
    000000e6: 	movl	$0x1, %edi
    000000eb: 	xorl	%eax, %eax
    000000ed: 	addl	$0x1, %r14d
    000000f1: 	callq	__printf_chk@PLT # Offset: 241
    000000f6: 	movl	iterations(%rip), %ecx
    000000fc: 	cmpl	%r14d, %ecx
    000000ff: 	jle	.Ltmp3613 # Offset: 255
    00000101: 	movsd	init_value(%rip), %xmm4
    00000109: 	jmp	.Ltmp3616 # Offset: 265
    0000010e: 	nop # Size: 2
.Ltmp3615:
    00000110: 	addl	$0x1, %r14d
    00000114: 	cmpl	%ecx, %r14d
    00000117: 	jl	.Ltmp3616 # Offset: 279
.Ltmp3613:
    0000011d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000124: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000012b: 	subq	$0x20, %rax
    0000012f: 	cmpq	%rax, %rbx
    00000132: 	je	.Ltmp3617 # Offset: 306
    00000138: 	leaq	0x10(%rbx), %rdi
    0000013c: 	movq	0x8(%r13), %r12
    00000140: 	movq	%rdi, (%rbx)
    00000143: 	movq	(%r13), %rbp
    00000147: 	movq	%rbp, %rax
    0000014a: 	addq	%r12, %rax
    0000014d: 	je	.Ltmp3618 # Offset: 333
    0000014f: 	testq	%rbp, %rbp
    00000152: 	je	.Ltmp3619 # Offset: 338
.Ltmp3618:
    00000158: 	movq	%r12, (%rsp)
    0000015c: 	cmpq	$0xf, %r12
    00000160: 	ja	.Ltmp3620 # Offset: 352
    00000166: 	cmpq	$0x1, %r12
    0000016a: 	jne	.Ltmp3621 # Offset: 362
    00000170: 	movzbl	(%rbp), %eax
    00000174: 	movb	%al, 0x10(%rbx)
.Ltmp3624:
    00000177: 	movq	%r12, 0x8(%rbx)
    0000017b: 	movb	$0x0, (%rdi,%r12)
    00000180: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000187: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000018e: 	addq	$0x20, %rax
    00000192: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000199: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001a0: 	je	.Ltmp3622 # Offset: 416
.Ltmp3625:
    000001a6: 	movq	-0x20(%rax), %rbp
    000001aa: 	callq	clock@PLT # Offset: 426
    000001af: 	movq	%rax, end_time(%rip)
    000001b6: 	movq	0x8(%rsp), %rdx
    000001bb: 	subq	%fs:0x28, %rdx
    000001c4: 	jne	.Ltmp3623 # Offset: 452
    000001ca: 	subq	start_time(%rip), %rax
    000001d1: 	pxor	%xmm0, %xmm0
    000001d5: 	movq	%rbp, %rdi
    000001d8: 	cvtsi2sd	%rax, %xmm0
    000001dd: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000001e5: 	addq	$0x10, %rsp
    000001e9: 	popq	%rbx
    000001ea: 	popq	%rbp
    000001eb: 	popq	%r12
    000001ed: 	popq	%r13
    000001ef: 	popq	%r14
    000001f1: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 497
.Ltmp3620:
    000001f6: 	movq	%rbx, %rdi
    000001f9: 	movq	%rsp, %rsi
    000001fc: 	xorl	%edx, %edx
    000001fe: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 510
    00000203: 	movq	%rax, (%rbx)
    00000206: 	movq	%rax, %rdi
    00000209: 	movq	(%rsp), %rax
    0000020d: 	movq	%rax, 0x10(%rbx)
.Ltmp3626:
    00000211: 	movq	%r12, %rdx
    00000214: 	movq	%rbp, %rsi
    00000217: 	callq	memcpy@PLT # Offset: 535
    0000021c: 	movq	(%rsp), %r12
    00000220: 	movq	(%rbx), %rdi
    00000223: 	jmp	.Ltmp3624 # Offset: 547
.Ltmp3617:
    00000228: 	movq	%r13, %rsi
    0000022b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000232: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 562
    00000237: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000023e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000245: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000024c: 	jne	.Ltmp3625 # Offset: 588
.Ltmp3622:
    00000252: 	movq	-0x8(%rdx), %rax
    00000256: 	addq	$0x200, %rax
    0000025c: 	jmp	.Ltmp3625 # Offset: 604
.Ltmp3621:
    00000261: 	testq	%r12, %r12
    00000264: 	je	.Ltmp3624 # Offset: 612
    0000026a: 	jmp	.Ltmp3626 # Offset: 618
.Ltmp3623:
    0000026c: 	callq	__stack_chk_fail@PLT # Offset: 620
.Ltmp3619:
    00000271: 	leaq	DATAat0x57008(%rip), %rdi
    00000278: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 632
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIa26custom_multiply_shiftadd_2IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z11TestOneTypeIaEvv" after disassembly {
  Number      : 190
  State       : disassembled
  Address     : 0x2acf0
  Size        : 0x5374
  MaxSize     : 0x5380
  Offset      : 0x2acf0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIaEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0189:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0x38, %rsp
    0000002a: 	leaq	DATAat0x57a28(%rip), %rbx
    00000031: 	leaq	"_ZL7gLabels/1"(%rip), %r15
    00000038: 	movq	%rbx, %rsi
    0000003b: 	movq	%fs:0x28, %rax
    00000044: 	movq	%rax, 0x2028(%rsp)
    0000004c: 	xorl	%eax, %eax
    0000004e: 	leaq	0x60(%rsp), %r14
    00000053: 	leaq	0xe0(%rsp), %rbp
    0000005b: 	movq	%r14, %rdi
    0000005e: 	leaq	0xc0(%rsp), %r12
    00000066: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 102
    0000006b: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm3
    00000073: 	leaq	0x40(%rsp), %rsi
    00000078: 	movq	%r15, %rdi
    0000007b: 	movaps	%xmm3, 0x40(%rsp)
    00000080: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    00000088: 	movaps	%xmm3, 0x50(%rsp)
    0000008d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 141
    00000092: 	movl	$0x3e8, %ecx
    00000097: 	movq	%rbp, %rdi
    0000009a: 	movq	%rbx, %rsi
    0000009d: 	cvttsd2si	init_value(%rip), %eax
    000000a5: 	movabsq	$0x101010101010101, %rdx
    000000af: 	movzbl	%al, %eax
    000000b2: 	imulq	%rdx, %rax
    000000b6: 	rep		stosq	%rax, %es:(%rdi)
    000000b9: 	movq	%r12, %rdi
    000000bc: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 188
    000000c1: 	movq	0xc0(%rsp), %rdi
    000000c9: 	leaq	0xd0(%rsp), %r13
    000000d1: 	cmpq	%r13, %rdi
    000000d4: 	je	.Ltmp3627 # Offset: 212
    000000d6: 	movq	0xd0(%rsp), %rax
    000000de: 	leaq	0x1(%rax), %rsi
    000000e2: 	callq	_ZdlPvm@PLT # Offset: 226
.Ltmp3627:
    000000e7: 	movq	%rbx, %rsi
    000000ea: 	movq	%r12, %rdi
    000000ed: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 237
    000000f2: 	movq	0xc0(%rsp), %rdi
    000000fa: 	cmpq	%r13, %rdi
    000000fd: 	je	.Ltmp3628 # Offset: 253
    000000ff: 	movq	0xd0(%rsp), %rax
    00000107: 	leaq	0x1(%rax), %rsi
    0000010b: 	callq	_ZdlPvm@PLT # Offset: 267
.Ltmp3628:
    00000110: 	movq	%rbx, %rsi
    00000113: 	movq	%r12, %rdi
    00000116: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 278
    0000011b: 	movq	0xc0(%rsp), %rdi
    00000123: 	cmpq	%r13, %rdi
    00000126: 	je	.Ltmp3629 # Offset: 294
    00000128: 	movq	0xd0(%rsp), %rax
    00000130: 	leaq	0x1(%rax), %rsi
    00000134: 	callq	_ZdlPvm@PLT # Offset: 308
.Ltmp3629:
    00000139: 	movq	%rbx, %rsi
    0000013c: 	movq	%r12, %rdi
    0000013f: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 319
    00000144: 	movq	0xc0(%rsp), %rdi
    0000014c: 	cmpq	%r13, %rdi
    0000014f: 	je	.Ltmp3630 # Offset: 335
    00000151: 	movq	0xd0(%rsp), %rax
    00000159: 	leaq	0x1(%rax), %rsi
    0000015d: 	callq	_ZdlPvm@PLT # Offset: 349
.Ltmp3630:
    00000162: 	movq	%rbx, %rsi
    00000165: 	movq	%r12, %rdi
    00000168: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 360
    0000016d: 	movq	0xc0(%rsp), %rdi
    00000175: 	cmpq	%r13, %rdi
    00000178: 	je	.Ltmp3631 # Offset: 376
    0000017a: 	movq	0xd0(%rsp), %rax
    00000182: 	leaq	0x1(%rax), %rsi
    00000186: 	callq	_ZdlPvm@PLT # Offset: 390
.Ltmp3631:
    0000018b: 	movq	%rbx, %rsi
    0000018e: 	movq	%r12, %rdi
    00000191: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 401
    00000196: 	movq	0xc0(%rsp), %rdi
    0000019e: 	cmpq	%r13, %rdi
    000001a1: 	je	.Ltmp3632 # Offset: 417
    000001a3: 	movq	0xd0(%rsp), %rax
    000001ab: 	leaq	0x1(%rax), %rsi
    000001af: 	callq	_ZdlPvm@PLT # Offset: 431
.Ltmp3632:
    000001b4: 	movq	%rbx, %rsi
    000001b7: 	movq	%r12, %rdi
    000001ba: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 442
    000001bf: 	movq	0xc0(%rsp), %rdi
    000001c7: 	cmpq	%r13, %rdi
    000001ca: 	je	.Ltmp3633 # Offset: 458
    000001cc: 	movq	0xd0(%rsp), %rax
    000001d4: 	leaq	0x1(%rax), %rsi
    000001d8: 	callq	_ZdlPvm@PLT # Offset: 472
.Ltmp3633:
    000001dd: 	movq	%rbx, %rsi
    000001e0: 	movq	%r12, %rdi
    000001e3: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 483
    000001e8: 	movq	0xc0(%rsp), %rdi
    000001f0: 	cmpq	%r13, %rdi
    000001f3: 	je	.Ltmp3634 # Offset: 499
    000001f5: 	movq	0xd0(%rsp), %rax
    000001fd: 	leaq	0x1(%rax), %rsi
    00000201: 	callq	_ZdlPvm@PLT # Offset: 513
.Ltmp3634:
    00000206: 	movq	%rbx, %rsi
    00000209: 	movq	%r12, %rdi
    0000020c: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 524
    00000211: 	movq	0xc0(%rsp), %rdi
    00000219: 	cmpq	%r13, %rdi
    0000021c: 	je	.Ltmp3635 # Offset: 540
    0000021e: 	movq	0xd0(%rsp), %rax
    00000226: 	leaq	0x1(%rax), %rsi
    0000022a: 	callq	_ZdlPvm@PLT # Offset: 554
.Ltmp3635:
    0000022f: 	movq	%rbx, %rsi
    00000232: 	movq	%r12, %rdi
    00000235: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 565
    0000023a: 	movq	0xc0(%rsp), %rdi
    00000242: 	cmpq	%r13, %rdi
    00000245: 	je	.Ltmp3636 # Offset: 581
    00000247: 	movq	0xd0(%rsp), %rax
    0000024f: 	leaq	0x1(%rax), %rsi
    00000253: 	callq	_ZdlPvm@PLT # Offset: 595
.Ltmp3636:
    00000258: 	movq	%rbx, %rsi
    0000025b: 	movq	%r12, %rdi
    0000025e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 606
    00000263: 	movq	0xc0(%rsp), %rdi
    0000026b: 	cmpq	%r13, %rdi
    0000026e: 	je	.Ltmp3637 # Offset: 622
    00000270: 	movq	0xd0(%rsp), %rax
    00000278: 	leaq	0x1(%rax), %rsi
    0000027c: 	callq	_ZdlPvm@PLT # Offset: 636
.Ltmp3637:
    00000281: 	movq	%rbx, %rsi
    00000284: 	movq	%r12, %rdi
    00000287: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 647
    0000028c: 	movq	0xc0(%rsp), %rdi
    00000294: 	cmpq	%r13, %rdi
    00000297: 	je	.Ltmp3638 # Offset: 663
    00000299: 	movq	0xd0(%rsp), %rax
    000002a1: 	leaq	0x1(%rax), %rsi
    000002a5: 	callq	_ZdlPvm@PLT # Offset: 677
.Ltmp3638:
    000002aa: 	movq	%rbx, %rsi
    000002ad: 	movq	%r12, %rdi
    000002b0: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 688
    000002b5: 	movq	0xc0(%rsp), %rdi
    000002bd: 	cmpq	%r13, %rdi
    000002c0: 	je	.Ltmp3639 # Offset: 704
    000002c2: 	movq	0xd0(%rsp), %rax
    000002ca: 	leaq	0x1(%rax), %rsi
    000002ce: 	callq	_ZdlPvm@PLT # Offset: 718
.Ltmp3639:
    000002d3: 	movq	%rbx, %rsi
    000002d6: 	movq	%r12, %rdi
    000002d9: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 729
    000002de: 	movq	0xc0(%rsp), %rdi
    000002e6: 	cmpq	%r13, %rdi
    000002e9: 	je	.Ltmp3640 # Offset: 745
    000002eb: 	movq	0xd0(%rsp), %rax
    000002f3: 	leaq	0x1(%rax), %rsi
    000002f7: 	callq	_ZdlPvm@PLT # Offset: 759
.Ltmp3640:
    000002fc: 	movq	%rbx, %rsi
    000002ff: 	movq	%r12, %rdi
    00000302: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 770
    00000307: 	movq	0xc0(%rsp), %rdi
    0000030f: 	cmpq	%r13, %rdi
    00000312: 	je	.Ltmp3641 # Offset: 786
    00000314: 	movq	0xd0(%rsp), %rax
    0000031c: 	leaq	0x1(%rax), %rsi
    00000320: 	callq	_ZdlPvm@PLT # Offset: 800
.Ltmp3641:
    00000325: 	movq	%rbx, %rsi
    00000328: 	movq	%r12, %rdi
    0000032b: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 811
    00000330: 	movq	0xc0(%rsp), %rdi
    00000338: 	cmpq	%r13, %rdi
    0000033b: 	je	.Ltmp3642 # Offset: 827
    0000033d: 	movq	0xd0(%rsp), %rax
    00000345: 	leaq	0x1(%rax), %rsi
    00000349: 	callq	_ZdlPvm@PLT # Offset: 841
.Ltmp3642:
    0000034e: 	movq	%rbx, %rsi
    00000351: 	movq	%r12, %rdi
    00000354: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 852
    00000359: 	movq	0xc0(%rsp), %rdi
    00000361: 	cmpq	%r13, %rdi
    00000364: 	je	.Ltmp3643 # Offset: 868
    00000366: 	movq	0xd0(%rsp), %rax
    0000036e: 	leaq	0x1(%rax), %rsi
    00000372: 	callq	_ZdlPvm@PLT # Offset: 882
.Ltmp3643:
    00000377: 	movq	%rbx, %rsi
    0000037a: 	movq	%r12, %rdi
    0000037d: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 893
    00000382: 	movq	0xc0(%rsp), %rdi
    0000038a: 	cmpq	%r13, %rdi
    0000038d: 	je	.Ltmp3644 # Offset: 909
    0000038f: 	movq	0xd0(%rsp), %rax
    00000397: 	leaq	0x1(%rax), %rsi
    0000039b: 	callq	_ZdlPvm@PLT # Offset: 923
.Ltmp3644:
    000003a0: 	movq	%rbx, %rsi
    000003a3: 	movq	%r12, %rdi
    000003a6: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 934
    000003ab: 	movq	0xc0(%rsp), %rdi
    000003b3: 	cmpq	%r13, %rdi
    000003b6: 	je	.Ltmp3645 # Offset: 950
    000003b8: 	movq	0xd0(%rsp), %rax
    000003c0: 	leaq	0x1(%rax), %rsi
    000003c4: 	callq	_ZdlPvm@PLT # Offset: 964
.Ltmp3645:
    000003c9: 	movq	%rbx, %rsi
    000003cc: 	movq	%r12, %rdi
    000003cf: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 975
    000003d4: 	movq	0xc0(%rsp), %rdi
    000003dc: 	cmpq	%r13, %rdi
    000003df: 	je	.Ltmp3646 # Offset: 991
    000003e1: 	movq	0xd0(%rsp), %rax
    000003e9: 	leaq	0x1(%rax), %rsi
    000003ed: 	callq	_ZdlPvm@PLT # Offset: 1005
.Ltmp3646:
    000003f2: 	leaq	DATAat0x571e0(%rip), %rdx
    000003f9: 	movq	%r14, %rsi
    000003fc: 	movq	%r12, %rdi
    000003ff: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1023
    00000404: 	callq	clock@PLT # Offset: 1028
    00000409: 	movl	iterations(%rip), %ecx
    0000040f: 	movl	$0x0, (%rsp)
    00000416: 	leaq	0x2020(%rsp), %rbx
    0000041e: 	movq	%rax, start_time(%rip)
    00000425: 	testl	%ecx, %ecx
    00000427: 	jle	.Ltmp3647 # Offset: 1063
    00000429: 	nopl	(%rax) # Size: 7
.Ltmp3650:
    00000430: 	movq	%rbp, %rax
    00000433: 	pxor	%xmm1, %xmm1
    00000437: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3648:
    00000440: 	movdqa	(%rax), %xmm0
    00000444: 	addq	$0x10, %rax
    00000448: 	paddb	%xmm0, %xmm0
    0000044c: 	paddb	%xmm0, %xmm1
    00000450: 	cmpq	%rax, %rbx
    00000453: 	jne	.Ltmp3648 # Offset: 1107
    00000455: 	movdqa	%xmm1, %xmm0
    00000459: 	cvttsd2si	init_value(%rip), %edx
    00000461: 	psrldq	$0x8, %xmm0
    00000466: 	paddb	%xmm0, %xmm1
    0000046a: 	pxor	%xmm0, %xmm0
    0000046e: 	psadbw	%xmm0, %xmm1
    00000472: 	movd	%xmm1, %eax
    00000476: 	shll	$0x7, %edx
    00000479: 	cmpb	%al, %dl
    0000047b: 	je	.Ltmp3649 # Offset: 1147
    0000047d: 	movl	current_test(%rip), %edx
    00000483: 	leaq	DATAat0x571d0(%rip), %rsi
    0000048a: 	movl	$0x1, %edi
    0000048f: 	xorl	%eax, %eax
    00000491: 	callq	__printf_chk@PLT # Offset: 1169
    00000496: 	movl	iterations(%rip), %ecx
.Ltmp3649:
    0000049c: 	addl	$0x1, (%rsp)
    000004a0: 	movl	(%rsp), %eax
    000004a3: 	cmpl	%ecx, %eax
    000004a5: 	jl	.Ltmp3650 # Offset: 1189
.Ltmp3647:
    000004a7: 	movq	%r12, %rsi
    000004aa: 	movq	%r15, %rdi
    000004ad: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1197
    000004b2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004b9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000004c0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004c7: 	je	.Ltmp3651 # Offset: 1223
.Ltmp3986:
    000004cd: 	movq	-0x20(%rax), %rbx
    000004d1: 	callq	clock@PLT # Offset: 1233
    000004d6: 	pxor	%xmm0, %xmm0
    000004da: 	movq	%rax, end_time(%rip)
    000004e1: 	movq	%rbx, %rdi
    000004e4: 	subq	start_time(%rip), %rax
    000004eb: 	cvtsi2sd	%rax, %xmm0
    000004f0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000004f8: 	callq	_Z13record_resultdPKc # Offset: 1272
    000004fd: 	movq	0xc0(%rsp), %rdi
    00000505: 	cmpq	%r13, %rdi
    00000508: 	je	.Ltmp3652 # Offset: 1288
    0000050a: 	movq	0xd0(%rsp), %rax
    00000512: 	leaq	0x1(%rax), %rsi
    00000516: 	callq	_ZdlPvm@PLT # Offset: 1302
.Ltmp3652:
    0000051b: 	leaq	DATAat0x571f1(%rip), %rdx
    00000522: 	movq	%r14, %rsi
    00000525: 	movq	%r12, %rdi
    00000528: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1320
    0000052d: 	callq	clock@PLT # Offset: 1325
    00000532: 	movl	iterations(%rip), %ecx
    00000538: 	movl	$0x0, (%rsp)
    0000053f: 	leaq	0x2020(%rsp), %rbx
    00000547: 	movq	%rax, start_time(%rip)
    0000054e: 	testl	%ecx, %ecx
    00000550: 	jle	.Ltmp3653 # Offset: 1360
    00000552: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3656:
    00000558: 	movq	%rbp, %rax
    0000055b: 	pxor	%xmm1, %xmm1
    0000055f: 	nop # Size: 1
.Ltmp3654:
    00000560: 	movdqa	(%rax), %xmm0
    00000564: 	addq	$0x10, %rax
    00000568: 	paddb	%xmm0, %xmm0
    0000056c: 	paddb	%xmm0, %xmm1
    00000570: 	cmpq	%rbx, %rax
    00000573: 	jne	.Ltmp3654 # Offset: 1395
    00000575: 	movdqa	%xmm1, %xmm0
    00000579: 	cvttsd2si	init_value(%rip), %edx
    00000581: 	psrldq	$0x8, %xmm0
    00000586: 	paddb	%xmm0, %xmm1
    0000058a: 	pxor	%xmm0, %xmm0
    0000058e: 	psadbw	%xmm0, %xmm1
    00000592: 	movd	%xmm1, %eax
    00000596: 	shll	$0x7, %edx
    00000599: 	cmpb	%al, %dl
    0000059b: 	je	.Ltmp3655 # Offset: 1435
    0000059d: 	movl	current_test(%rip), %edx
    000005a3: 	leaq	DATAat0x571d0(%rip), %rsi
    000005aa: 	movl	$0x1, %edi
    000005af: 	xorl	%eax, %eax
    000005b1: 	callq	__printf_chk@PLT # Offset: 1457
    000005b6: 	movl	iterations(%rip), %ecx
.Ltmp3655:
    000005bc: 	addl	$0x1, (%rsp)
    000005c0: 	movl	(%rsp), %eax
    000005c3: 	cmpl	%ecx, %eax
    000005c5: 	jl	.Ltmp3656 # Offset: 1477
.Ltmp3653:
    000005c7: 	movq	%r12, %rsi
    000005ca: 	movq	%r15, %rdi
    000005cd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1485
    000005d2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005d9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000005e0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000005e7: 	je	.Ltmp3657 # Offset: 1511
.Ltmp4033:
    000005ed: 	movq	-0x20(%rax), %rbx
    000005f1: 	callq	clock@PLT # Offset: 1521
    000005f6: 	pxor	%xmm0, %xmm0
    000005fa: 	movq	%rax, end_time(%rip)
    00000601: 	movq	%rbx, %rdi
    00000604: 	subq	start_time(%rip), %rax
    0000060b: 	cvtsi2sd	%rax, %xmm0
    00000610: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000618: 	callq	_Z13record_resultdPKc # Offset: 1560
    0000061d: 	movq	0xc0(%rsp), %rdi
    00000625: 	cmpq	%r13, %rdi
    00000628: 	je	.Ltmp3658 # Offset: 1576
    0000062a: 	movq	0xd0(%rsp), %rax
    00000632: 	leaq	0x1(%rax), %rsi
    00000636: 	callq	_ZdlPvm@PLT # Offset: 1590
.Ltmp3658:
    0000063b: 	leaq	DATAat0x571fb(%rip), %rdx
    00000642: 	movq	%r14, %rsi
    00000645: 	movq	%r12, %rdi
    00000648: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1608
    0000064d: 	callq	clock@PLT # Offset: 1613
    00000652: 	movl	iterations(%rip), %ecx
    00000658: 	movl	$0x0, (%rsp)
    0000065f: 	leaq	0x2020(%rsp), %rbx
    00000667: 	movq	%rax, start_time(%rip)
    0000066e: 	testl	%ecx, %ecx
    00000670: 	jle	.Ltmp3659 # Offset: 1648
    00000672: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3662:
    00000678: 	movq	%rbp, %rax
    0000067b: 	pxor	%xmm1, %xmm1
    0000067f: 	nop # Size: 1
.Ltmp3660:
    00000680: 	movdqa	(%rax), %xmm0
    00000684: 	addq	$0x10, %rax
    00000688: 	paddb	%xmm0, %xmm0
    0000068c: 	paddb	%xmm0, %xmm1
    00000690: 	cmpq	%rax, %rbx
    00000693: 	jne	.Ltmp3660 # Offset: 1683
    00000695: 	movdqa	%xmm1, %xmm0
    00000699: 	cvttsd2si	init_value(%rip), %edx
    000006a1: 	psrldq	$0x8, %xmm0
    000006a6: 	paddb	%xmm0, %xmm1
    000006aa: 	pxor	%xmm0, %xmm0
    000006ae: 	psadbw	%xmm0, %xmm1
    000006b2: 	movd	%xmm1, %eax
    000006b6: 	shll	$0x7, %edx
    000006b9: 	cmpb	%al, %dl
    000006bb: 	je	.Ltmp3661 # Offset: 1723
    000006bd: 	movl	current_test(%rip), %edx
    000006c3: 	leaq	DATAat0x571d0(%rip), %rsi
    000006ca: 	movl	$0x1, %edi
    000006cf: 	xorl	%eax, %eax
    000006d1: 	callq	__printf_chk@PLT # Offset: 1745
    000006d6: 	movl	iterations(%rip), %ecx
.Ltmp3661:
    000006dc: 	addl	$0x1, (%rsp)
    000006e0: 	movl	(%rsp), %eax
    000006e3: 	cmpl	%ecx, %eax
    000006e5: 	jl	.Ltmp3662 # Offset: 1765
.Ltmp3659:
    000006e7: 	movq	%r12, %rsi
    000006ea: 	movq	%r15, %rdi
    000006ed: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1773
    000006f2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000006f9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000700: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000707: 	je	.Ltmp3663 # Offset: 1799
.Ltmp4032:
    0000070d: 	movq	-0x20(%rax), %rbx
    00000711: 	callq	clock@PLT # Offset: 1809
    00000716: 	pxor	%xmm0, %xmm0
    0000071a: 	movq	%rax, end_time(%rip)
    00000721: 	movq	%rbx, %rdi
    00000724: 	subq	start_time(%rip), %rax
    0000072b: 	cvtsi2sd	%rax, %xmm0
    00000730: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000738: 	callq	_Z13record_resultdPKc # Offset: 1848
    0000073d: 	movq	0xc0(%rsp), %rdi
    00000745: 	cmpq	%r13, %rdi
    00000748: 	je	.Ltmp3664 # Offset: 1864
    0000074a: 	movq	0xd0(%rsp), %rax
    00000752: 	leaq	0x1(%rax), %rsi
    00000756: 	callq	_ZdlPvm@PLT # Offset: 1878
.Ltmp3664:
    0000075b: 	leaq	DATAat0x57211(%rip), %rdx
    00000762: 	movq	%r14, %rsi
    00000765: 	movq	%r12, %rdi
    00000768: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1896
    0000076d: 	movq	%r12, %rdx
    00000770: 	movl	$0x2, %esi
    00000775: 	movq	%rbp, %rdi
    00000778: 	callq	"_Z14test_variable1Ia24custom_multiply_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 1912
    0000077d: 	movq	0xc0(%rsp), %rdi
    00000785: 	cmpq	%r13, %rdi
    00000788: 	je	.Ltmp3665 # Offset: 1928
    0000078a: 	movq	0xd0(%rsp), %rax
    00000792: 	leaq	0x1(%rax), %rsi
    00000796: 	callq	_ZdlPvm@PLT # Offset: 1942
.Ltmp3665:
    0000079b: 	leaq	DATAat0x57229(%rip), %rdx
    000007a2: 	movq	%r14, %rsi
    000007a5: 	movq	%r12, %rdi
    000007a8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1960
    000007ad: 	callq	clock@PLT # Offset: 1965
    000007b2: 	movl	iterations(%rip), %ecx
    000007b8: 	movl	$0x0, (%rsp)
    000007bf: 	leaq	0x2020(%rsp), %rbx
    000007c7: 	movq	%rax, start_time(%rip)
    000007ce: 	testl	%ecx, %ecx
    000007d0: 	jle	.Ltmp3666 # Offset: 2000
    000007d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3669:
    000007d8: 	movq	%rbp, %rax
    000007db: 	pxor	%xmm1, %xmm1
    000007df: 	nop # Size: 1
.Ltmp3667:
    000007e0: 	movdqa	(%rax), %xmm0
    000007e4: 	addq	$0x10, %rax
    000007e8: 	paddb	%xmm0, %xmm0
    000007ec: 	paddb	%xmm0, %xmm1
    000007f0: 	cmpq	%rbx, %rax
    000007f3: 	jne	.Ltmp3667 # Offset: 2035
    000007f5: 	movdqa	%xmm1, %xmm0
    000007f9: 	cvttsd2si	init_value(%rip), %edx
    00000801: 	psrldq	$0x8, %xmm0
    00000806: 	paddb	%xmm0, %xmm1
    0000080a: 	pxor	%xmm0, %xmm0
    0000080e: 	psadbw	%xmm0, %xmm1
    00000812: 	movd	%xmm1, %eax
    00000816: 	shll	$0x7, %edx
    00000819: 	cmpb	%al, %dl
    0000081b: 	je	.Ltmp3668 # Offset: 2075
    0000081d: 	movl	current_test(%rip), %edx
    00000823: 	leaq	DATAat0x571d0(%rip), %rsi
    0000082a: 	movl	$0x1, %edi
    0000082f: 	xorl	%eax, %eax
    00000831: 	callq	__printf_chk@PLT # Offset: 2097
    00000836: 	movl	iterations(%rip), %ecx
.Ltmp3668:
    0000083c: 	addl	$0x1, (%rsp)
    00000840: 	movl	(%rsp), %eax
    00000843: 	cmpl	%ecx, %eax
    00000845: 	jl	.Ltmp3669 # Offset: 2117
.Ltmp3666:
    00000847: 	movq	%r12, %rsi
    0000084a: 	movq	%r15, %rdi
    0000084d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2125
    00000852: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000859: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000860: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000867: 	je	.Ltmp3670 # Offset: 2151
.Ltmp4031:
    0000086d: 	movq	-0x20(%rax), %rbx
    00000871: 	callq	clock@PLT # Offset: 2161
    00000876: 	pxor	%xmm0, %xmm0
    0000087a: 	movq	%rax, end_time(%rip)
    00000881: 	movq	%rbx, %rdi
    00000884: 	subq	start_time(%rip), %rax
    0000088b: 	cvtsi2sd	%rax, %xmm0
    00000890: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000898: 	callq	_Z13record_resultdPKc # Offset: 2200
    0000089d: 	movq	0xc0(%rsp), %rdi
    000008a5: 	cmpq	%r13, %rdi
    000008a8: 	je	.Ltmp3671 # Offset: 2216
    000008aa: 	movq	0xd0(%rsp), %rax
    000008b2: 	leaq	0x1(%rax), %rsi
    000008b6: 	callq	_ZdlPvm@PLT # Offset: 2230
.Ltmp3671:
    000008bb: 	leaq	DATAat0x57241(%rip), %rdx
    000008c2: 	movq	%r14, %rsi
    000008c5: 	movq	%r12, %rdi
    000008c8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2248
    000008cd: 	movq	%r12, %rsi
    000008d0: 	movq	%rbp, %rdi
    000008d3: 	callq	"_Z13test_constantIa26custom_multiply_shiftadd_2IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 2259
    000008d8: 	movq	0xc0(%rsp), %rdi
    000008e0: 	cmpq	%r13, %rdi
    000008e3: 	je	.Ltmp3672 # Offset: 2275
    000008e5: 	movq	0xd0(%rsp), %rax
    000008ed: 	leaq	0x1(%rax), %rsi
    000008f1: 	callq	_ZdlPvm@PLT # Offset: 2289
.Ltmp3672:
    000008f6: 	leaq	DATAat0x57251(%rip), %rdx
    000008fd: 	movq	%r14, %rsi
    00000900: 	movq	%r12, %rdi
    00000903: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2307
    00000908: 	callq	clock@PLT # Offset: 2312
    0000090d: 	movl	iterations(%rip), %edx
    00000913: 	movl	$0x0, (%rsp)
    0000091a: 	leaq	0x2020(%rsp), %rbx
    00000922: 	movq	%rax, start_time(%rip)
    00000929: 	testl	%edx, %edx
    0000092b: 	jle	.Ltmp3673 # Offset: 2347
    0000092d: 	nopl	(%rax) # Size: 3
.Ltmp3676:
    00000930: 	movq	%rbp, %rax
    00000933: 	pxor	%xmm1, %xmm1
    00000937: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3674:
    00000940: 	movdqa	(%rax), %xmm0
    00000944: 	addq	$0x10, %rax
    00000948: 	paddb	%xmm0, %xmm0
    0000094c: 	paddb	%xmm0, %xmm0
    00000950: 	paddb	%xmm0, %xmm0
    00000954: 	paddb	%xmm0, %xmm1
    00000958: 	cmpq	%rax, %rbx
    0000095b: 	jne	.Ltmp3674 # Offset: 2395
    0000095d: 	movdqa	%xmm1, %xmm0
    00000961: 	psrldq	$0x8, %xmm0
    00000966: 	paddb	%xmm0, %xmm1
    0000096a: 	pxor	%xmm0, %xmm0
    0000096e: 	psadbw	%xmm0, %xmm1
    00000972: 	movd	%xmm1, %eax
    00000976: 	testb	%al, %al
    00000978: 	jne	.Ltmp3675 # Offset: 2424
.Ltmp3984:
    0000097e: 	addl	$0x1, (%rsp)
    00000982: 	movl	(%rsp), %eax
    00000985: 	cmpl	%edx, %eax
    00000987: 	jl	.Ltmp3676 # Offset: 2439
.Ltmp3673:
    00000989: 	movq	%r12, %rsi
    0000098c: 	movq	%r15, %rdi
    0000098f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2447
    00000994: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000099b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000009a2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000009a9: 	je	.Ltmp3677 # Offset: 2473
.Ltmp4030:
    000009af: 	movq	-0x20(%rax), %rbx
    000009b3: 	callq	clock@PLT # Offset: 2483
    000009b8: 	pxor	%xmm0, %xmm0
    000009bc: 	movq	%rax, end_time(%rip)
    000009c3: 	movq	%rbx, %rdi
    000009c6: 	subq	start_time(%rip), %rax
    000009cd: 	cvtsi2sd	%rax, %xmm0
    000009d2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000009da: 	callq	_Z13record_resultdPKc # Offset: 2522
    000009df: 	movq	0xc0(%rsp), %rdi
    000009e7: 	cmpq	%r13, %rdi
    000009ea: 	je	.Ltmp3678 # Offset: 2538
    000009ec: 	movq	0xd0(%rsp), %rax
    000009f4: 	leaq	0x1(%rax), %rsi
    000009f8: 	callq	_ZdlPvm@PLT # Offset: 2552
.Ltmp3678:
    000009fd: 	leaq	DATAat0x57262(%rip), %rdx
    00000a04: 	movq	%r14, %rsi
    00000a07: 	movq	%r12, %rdi
    00000a0a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2570
    00000a0f: 	movq	%r12, %rdx
    00000a12: 	movl	$0x8, %esi
    00000a17: 	movq	%rbp, %rdi
    00000a1a: 	callq	"_Z14test_variable1Ia24custom_multiply_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 2586
    00000a1f: 	movq	0xc0(%rsp), %rdi
    00000a27: 	cmpq	%r13, %rdi
    00000a2a: 	je	.Ltmp3679 # Offset: 2602
    00000a2c: 	movq	0xd0(%rsp), %rax
    00000a34: 	leaq	0x1(%rax), %rsi
    00000a38: 	callq	_ZdlPvm@PLT # Offset: 2616
.Ltmp3679:
    00000a3d: 	leaq	DATAat0x5727a(%rip), %rdx
    00000a44: 	movq	%r14, %rsi
    00000a47: 	movq	%r12, %rdi
    00000a4a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2634
    00000a4f: 	callq	clock@PLT # Offset: 2639
    00000a54: 	movl	iterations(%rip), %edx
    00000a5a: 	movl	$0x0, (%rsp)
    00000a61: 	leaq	0x2020(%rsp), %rbx
    00000a69: 	movq	%rax, start_time(%rip)
    00000a70: 	testl	%edx, %edx
    00000a72: 	jle	.Ltmp3680 # Offset: 2674
    00000a74: 	nopl	(%rax) # Size: 4
.Ltmp3683:
    00000a78: 	movq	%rbp, %rax
    00000a7b: 	pxor	%xmm1, %xmm1
    00000a7f: 	nop # Size: 1
.Ltmp3681:
    00000a80: 	movdqa	(%rax), %xmm0
    00000a84: 	addq	$0x10, %rax
    00000a88: 	paddb	%xmm0, %xmm0
    00000a8c: 	paddb	%xmm0, %xmm0
    00000a90: 	paddb	%xmm0, %xmm0
    00000a94: 	paddb	%xmm0, %xmm1
    00000a98: 	cmpq	%rbx, %rax
    00000a9b: 	jne	.Ltmp3681 # Offset: 2715
    00000a9d: 	movdqa	%xmm1, %xmm0
    00000aa1: 	psrldq	$0x8, %xmm0
    00000aa6: 	paddb	%xmm0, %xmm1
    00000aaa: 	pxor	%xmm0, %xmm0
    00000aae: 	psadbw	%xmm0, %xmm1
    00000ab2: 	movd	%xmm1, %eax
    00000ab6: 	testb	%al, %al
    00000ab8: 	jne	.Ltmp3682 # Offset: 2744
.Ltmp3983:
    00000abe: 	addl	$0x1, (%rsp)
    00000ac2: 	movl	(%rsp), %eax
    00000ac5: 	cmpl	%edx, %eax
    00000ac7: 	jl	.Ltmp3683 # Offset: 2759
.Ltmp3680:
    00000ac9: 	movq	%r12, %rsi
    00000acc: 	movq	%r15, %rdi
    00000acf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2767
    00000ad4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000adb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ae2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ae9: 	je	.Ltmp3684 # Offset: 2793
.Ltmp4029:
    00000aef: 	movq	-0x20(%rax), %rbx
    00000af3: 	callq	clock@PLT # Offset: 2803
    00000af8: 	pxor	%xmm0, %xmm0
    00000afc: 	movq	%rax, end_time(%rip)
    00000b03: 	movq	%rbx, %rdi
    00000b06: 	subq	start_time(%rip), %rax
    00000b0d: 	cvtsi2sd	%rax, %xmm0
    00000b12: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000b1a: 	callq	_Z13record_resultdPKc # Offset: 2842
    00000b1f: 	movq	0xc0(%rsp), %rdi
    00000b27: 	cmpq	%r13, %rdi
    00000b2a: 	je	.Ltmp3685 # Offset: 2858
    00000b2c: 	movq	0xd0(%rsp), %rax
    00000b34: 	leaq	0x1(%rax), %rsi
    00000b38: 	callq	_ZdlPvm@PLT # Offset: 2872
.Ltmp3685:
    00000b3d: 	leaq	DATAat0x57292(%rip), %rdx
    00000b44: 	movq	%r14, %rsi
    00000b47: 	movq	%r12, %rdi
    00000b4a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2890
    00000b4f: 	callq	clock@PLT # Offset: 2895
    00000b54: 	movl	iterations(%rip), %edx
    00000b5a: 	movl	$0x0, (%rsp)
    00000b61: 	leaq	0x2020(%rsp), %rbx
    00000b69: 	movq	%rax, start_time(%rip)
    00000b70: 	testl	%edx, %edx
    00000b72: 	jle	.Ltmp3686 # Offset: 2930
    00000b74: 	nopl	(%rax) # Size: 4
.Ltmp3689:
    00000b78: 	movq	%rbp, %rax
    00000b7b: 	pxor	%xmm1, %xmm1
    00000b7f: 	nop # Size: 1
.Ltmp3687:
    00000b80: 	movdqa	(%rax), %xmm0
    00000b84: 	addq	$0x10, %rax
    00000b88: 	paddb	%xmm0, %xmm0
    00000b8c: 	paddb	%xmm0, %xmm0
    00000b90: 	paddb	%xmm0, %xmm0
    00000b94: 	paddb	%xmm0, %xmm0
    00000b98: 	paddb	%xmm0, %xmm0
    00000b9c: 	paddb	%xmm0, %xmm0
    00000ba0: 	paddb	%xmm0, %xmm1
    00000ba4: 	cmpq	%rbx, %rax
    00000ba7: 	jne	.Ltmp3687 # Offset: 2983
    00000ba9: 	movdqa	%xmm1, %xmm0
    00000bad: 	psrldq	$0x8, %xmm0
    00000bb2: 	paddb	%xmm0, %xmm1
    00000bb6: 	pxor	%xmm0, %xmm0
    00000bba: 	psadbw	%xmm0, %xmm1
    00000bbe: 	movd	%xmm1, %eax
    00000bc2: 	testb	%al, %al
    00000bc4: 	jne	.Ltmp3688 # Offset: 3012
.Ltmp3982:
    00000bca: 	addl	$0x1, (%rsp)
    00000bce: 	movl	(%rsp), %eax
    00000bd1: 	cmpl	%edx, %eax
    00000bd3: 	jl	.Ltmp3689 # Offset: 3027
.Ltmp3686:
    00000bd5: 	movq	%r12, %rsi
    00000bd8: 	movq	%r15, %rdi
    00000bdb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3035
    00000be0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000be7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000bee: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000bf5: 	je	.Ltmp3690 # Offset: 3061
.Ltmp4028:
    00000bfb: 	movq	-0x20(%rax), %rbx
    00000bff: 	callq	clock@PLT # Offset: 3071
    00000c04: 	pxor	%xmm0, %xmm0
    00000c08: 	movq	%rax, end_time(%rip)
    00000c0f: 	movq	%rbx, %rdi
    00000c12: 	subq	start_time(%rip), %rax
    00000c19: 	cvtsi2sd	%rax, %xmm0
    00000c1e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000c26: 	callq	_Z13record_resultdPKc # Offset: 3110
    00000c2b: 	movq	0xc0(%rsp), %rdi
    00000c33: 	cmpq	%r13, %rdi
    00000c36: 	je	.Ltmp3691 # Offset: 3126
    00000c38: 	movq	0xd0(%rsp), %rax
    00000c40: 	leaq	0x1(%rax), %rsi
    00000c44: 	callq	_ZdlPvm@PLT # Offset: 3140
.Ltmp3691:
    00000c49: 	leaq	DATAat0x572a3(%rip), %rdx
    00000c50: 	movq	%r14, %rsi
    00000c53: 	movq	%r12, %rdi
    00000c56: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3158
    00000c5b: 	movq	%r12, %rdx
    00000c5e: 	movl	$0x40, %esi
    00000c63: 	movq	%rbp, %rdi
    00000c66: 	callq	"_Z14test_variable1Ia24custom_multiply_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3174
    00000c6b: 	movq	0xc0(%rsp), %rdi
    00000c73: 	cmpq	%r13, %rdi
    00000c76: 	je	.Ltmp3692 # Offset: 3190
    00000c78: 	movq	0xd0(%rsp), %rax
    00000c80: 	leaq	0x1(%rax), %rsi
    00000c84: 	callq	_ZdlPvm@PLT # Offset: 3204
.Ltmp3692:
    00000c89: 	leaq	DATAat0x572bc(%rip), %rdx
    00000c90: 	movq	%r14, %rsi
    00000c93: 	movq	%r12, %rdi
    00000c96: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3222
    00000c9b: 	callq	clock@PLT # Offset: 3227
    00000ca0: 	movl	iterations(%rip), %edx
    00000ca6: 	movl	$0x0, (%rsp)
    00000cad: 	leaq	0x2020(%rsp), %rbx
    00000cb5: 	movq	%rax, start_time(%rip)
    00000cbc: 	testl	%edx, %edx
    00000cbe: 	jle	.Ltmp3693 # Offset: 3262
.Ltmp3696:
    00000cc0: 	movq	%rbp, %rax
    00000cc3: 	pxor	%xmm1, %xmm1
    00000cc7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3694:
    00000cd0: 	movdqa	(%rax), %xmm0
    00000cd4: 	addq	$0x10, %rax
    00000cd8: 	paddb	%xmm0, %xmm0
    00000cdc: 	paddb	%xmm0, %xmm0
    00000ce0: 	paddb	%xmm0, %xmm0
    00000ce4: 	paddb	%xmm0, %xmm0
    00000ce8: 	paddb	%xmm0, %xmm0
    00000cec: 	paddb	%xmm0, %xmm0
    00000cf0: 	paddb	%xmm0, %xmm1
    00000cf4: 	cmpq	%rax, %rbx
    00000cf7: 	jne	.Ltmp3694 # Offset: 3319
    00000cf9: 	movdqa	%xmm1, %xmm0
    00000cfd: 	psrldq	$0x8, %xmm0
    00000d02: 	paddb	%xmm0, %xmm1
    00000d06: 	pxor	%xmm0, %xmm0
    00000d0a: 	psadbw	%xmm0, %xmm1
    00000d0e: 	movd	%xmm1, %eax
    00000d12: 	testb	%al, %al
    00000d14: 	jne	.Ltmp3695 # Offset: 3348
.Ltmp3981:
    00000d1a: 	addl	$0x1, (%rsp)
    00000d1e: 	movl	(%rsp), %eax
    00000d21: 	cmpl	%edx, %eax
    00000d23: 	jl	.Ltmp3696 # Offset: 3363
.Ltmp3693:
    00000d25: 	movq	%r12, %rsi
    00000d28: 	movq	%r15, %rdi
    00000d2b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3371
    00000d30: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d37: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d3e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d45: 	je	.Ltmp3697 # Offset: 3397
.Ltmp4027:
    00000d4b: 	movq	-0x20(%rax), %rbx
    00000d4f: 	callq	clock@PLT # Offset: 3407
    00000d54: 	pxor	%xmm0, %xmm0
    00000d58: 	movq	%rax, end_time(%rip)
    00000d5f: 	movq	%rbx, %rdi
    00000d62: 	subq	start_time(%rip), %rax
    00000d69: 	cvtsi2sd	%rax, %xmm0
    00000d6e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000d76: 	callq	_Z13record_resultdPKc # Offset: 3446
    00000d7b: 	movq	0xc0(%rsp), %rdi
    00000d83: 	cmpq	%r13, %rdi
    00000d86: 	je	.Ltmp3698 # Offset: 3462
    00000d88: 	movq	0xd0(%rsp), %rax
    00000d90: 	leaq	0x1(%rax), %rsi
    00000d94: 	callq	_ZdlPvm@PLT # Offset: 3476
.Ltmp3698:
    00000d99: 	leaq	DATAat0x572d5(%rip), %rdx
    00000da0: 	movq	%r14, %rsi
    00000da3: 	movq	%r12, %rdi
    00000da6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3494
    00000dab: 	movq	%r12, %rdx
    00000dae: 	movl	$0x2a, %esi
    00000db3: 	movq	%rbp, %rdi
    00000db6: 	callq	"_Z14test_variable1Ia24custom_multiply_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3510
    00000dbb: 	movq	0xc0(%rsp), %rdi
    00000dc3: 	cmpq	%r13, %rdi
    00000dc6: 	je	.Ltmp3699 # Offset: 3526
    00000dc8: 	movq	0xd0(%rsp), %rax
    00000dd0: 	leaq	0x1(%rax), %rsi
    00000dd4: 	callq	_ZdlPvm@PLT # Offset: 3540
.Ltmp3699:
    00000dd9: 	leaq	DATAat0x572ee(%rip), %rdx
    00000de0: 	movq	%r14, %rsi
    00000de3: 	movq	%r12, %rdi
    00000de6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3558
    00000deb: 	callq	clock@PLT # Offset: 3563
    00000df0: 	movl	iterations(%rip), %ecx
    00000df6: 	movl	$0x0, (%rsp)
    00000dfd: 	leaq	0x2020(%rsp), %rbx
    00000e05: 	movq	%rax, start_time(%rip)
    00000e0c: 	testl	%ecx, %ecx
    00000e0e: 	jle	.Ltmp3700 # Offset: 3598
    00000e14: 	nopl	(%rax) # Size: 4
.Ltmp3703:
    00000e18: 	movq	%rbp, %rax
    00000e1b: 	pxor	%xmm2, %xmm2
    00000e1f: 	nop # Size: 1
.Ltmp3701:
    00000e20: 	movdqa	(%rax), %xmm1
    00000e24: 	addq	$0x10, %rax
    00000e28: 	movdqa	%xmm1, %xmm0
    00000e2c: 	paddb	%xmm1, %xmm0
    00000e30: 	paddb	%xmm0, %xmm0
    00000e34: 	paddb	%xmm1, %xmm0
    00000e38: 	paddb	%xmm0, %xmm0
    00000e3c: 	paddb	%xmm0, %xmm0
    00000e40: 	paddb	%xmm1, %xmm0
    00000e44: 	paddb	%xmm0, %xmm0
    00000e48: 	paddb	%xmm0, %xmm2
    00000e4c: 	cmpq	%rbx, %rax
    00000e4f: 	jne	.Ltmp3701 # Offset: 3663
    00000e51: 	movdqa	%xmm2, %xmm0
    00000e55: 	cvttsd2si	init_value(%rip), %edx
    00000e5d: 	psrldq	$0x8, %xmm0
    00000e62: 	paddb	%xmm0, %xmm2
    00000e66: 	pxor	%xmm0, %xmm0
    00000e6a: 	psadbw	%xmm0, %xmm2
    00000e6e: 	movd	%xmm2, %eax
    00000e72: 	shll	$0x7, %edx
    00000e75: 	cmpb	%al, %dl
    00000e77: 	je	.Ltmp3702 # Offset: 3703
    00000e79: 	movl	current_test(%rip), %edx
    00000e7f: 	leaq	DATAat0x571d0(%rip), %rsi
    00000e86: 	movl	$0x1, %edi
    00000e8b: 	xorl	%eax, %eax
    00000e8d: 	callq	__printf_chk@PLT # Offset: 3725
    00000e92: 	movl	iterations(%rip), %ecx
.Ltmp3702:
    00000e98: 	addl	$0x1, (%rsp)
    00000e9c: 	movl	(%rsp), %eax
    00000e9f: 	cmpl	%ecx, %eax
    00000ea1: 	jl	.Ltmp3703 # Offset: 3745
.Ltmp3700:
    00000ea7: 	movq	%r12, %rsi
    00000eaa: 	movq	%r15, %rdi
    00000ead: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3757
    00000eb2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000eb9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ec0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ec7: 	je	.Ltmp3704 # Offset: 3783
.Ltmp4026:
    00000ecd: 	movq	-0x20(%rax), %rbx
    00000ed1: 	callq	clock@PLT # Offset: 3793
    00000ed6: 	pxor	%xmm0, %xmm0
    00000eda: 	movq	%rax, end_time(%rip)
    00000ee1: 	movq	%rbx, %rdi
    00000ee4: 	subq	start_time(%rip), %rax
    00000eeb: 	cvtsi2sd	%rax, %xmm0
    00000ef0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000ef8: 	callq	_Z13record_resultdPKc # Offset: 3832
    00000efd: 	movq	0xc0(%rsp), %rdi
    00000f05: 	cmpq	%r13, %rdi
    00000f08: 	je	.Ltmp3705 # Offset: 3848
    00000f0a: 	movq	0xd0(%rsp), %rax
    00000f12: 	leaq	0x1(%rax), %rsi
    00000f16: 	callq	_ZdlPvm@PLT # Offset: 3862
.Ltmp3705:
    00000f1b: 	leaq	DATAat0x57307(%rip), %rdx
    00000f22: 	movq	%r14, %rsi
    00000f25: 	movq	%r12, %rdi
    00000f28: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3880
    00000f2d: 	movq	%r12, %rsi
    00000f30: 	movq	%rbp, %rdi
    00000f33: 	callq	"_Z13test_constantIa27custom_multiply_shiftadd_42IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3891
    00000f38: 	movq	0xc0(%rsp), %rdi
    00000f40: 	cmpq	%r13, %rdi
    00000f43: 	je	.Ltmp3706 # Offset: 3907
    00000f45: 	movq	0xd0(%rsp), %rax
    00000f4d: 	leaq	0x1(%rax), %rsi
    00000f51: 	callq	_ZdlPvm@PLT # Offset: 3921
.Ltmp3706:
    00000f56: 	leaq	DATAat0x57318(%rip), %rdx
    00000f5d: 	movq	%r14, %rsi
    00000f60: 	movq	%r12, %rdi
    00000f63: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3939
    00000f68: 	movq	%r12, %rdx
    00000f6b: 	movl	$0x3f, %esi
    00000f70: 	movq	%rbp, %rdi
    00000f73: 	callq	"_Z14test_variable1Ia24custom_multiply_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3955
    00000f78: 	movq	0xc0(%rsp), %rdi
    00000f80: 	cmpq	%r13, %rdi
    00000f83: 	je	.Ltmp3707 # Offset: 3971
    00000f85: 	movq	0xd0(%rsp), %rax
    00000f8d: 	leaq	0x1(%rax), %rsi
    00000f91: 	callq	_ZdlPvm@PLT # Offset: 3985
.Ltmp3707:
    00000f96: 	leaq	DATAat0x57331(%rip), %rdx
    00000f9d: 	movq	%r14, %rsi
    00000fa0: 	movq	%r12, %rdi
    00000fa3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4003
    00000fa8: 	callq	clock@PLT # Offset: 4008
    00000fad: 	movl	iterations(%rip), %ecx
    00000fb3: 	movl	$0x0, (%rsp)
    00000fba: 	leaq	0x2020(%rsp), %rbx
    00000fc2: 	movq	%rax, start_time(%rip)
    00000fc9: 	testl	%ecx, %ecx
    00000fcb: 	jle	.Ltmp3708 # Offset: 4043
    00000fd1: 	nopl	(%rax) # Size: 7
.Ltmp3711:
    00000fd8: 	movq	%rbp, %rax
    00000fdb: 	pxor	%xmm2, %xmm2
    00000fdf: 	nop # Size: 1
.Ltmp3709:
    00000fe0: 	movdqa	(%rax), %xmm1
    00000fe4: 	addq	$0x10, %rax
    00000fe8: 	movdqa	%xmm1, %xmm0
    00000fec: 	paddb	%xmm1, %xmm0
    00000ff0: 	paddb	%xmm0, %xmm0
    00000ff4: 	paddb	%xmm0, %xmm0
    00000ff8: 	paddb	%xmm0, %xmm0
    00000ffc: 	paddb	%xmm0, %xmm0
    00001000: 	paddb	%xmm0, %xmm0
    00001004: 	psubb	%xmm1, %xmm0
    00001008: 	paddb	%xmm0, %xmm2
    0000100c: 	cmpq	%rax, %rbx
    0000100f: 	jne	.Ltmp3709 # Offset: 4111
    00001011: 	movdqa	%xmm2, %xmm0
    00001015: 	cvttsd2si	init_value(%rip), %edx
    0000101d: 	psrldq	$0x8, %xmm0
    00001022: 	paddb	%xmm0, %xmm2
    00001026: 	pxor	%xmm0, %xmm0
    0000102a: 	psadbw	%xmm0, %xmm2
    0000102e: 	movd	%xmm2, %eax
    00001032: 	shll	$0x6, %edx
    00001035: 	addb	%dl, %al
    00001037: 	je	.Ltmp3710 # Offset: 4151
    00001039: 	movl	current_test(%rip), %edx
    0000103f: 	leaq	DATAat0x571d0(%rip), %rsi
    00001046: 	movl	$0x1, %edi
    0000104b: 	xorl	%eax, %eax
    0000104d: 	callq	__printf_chk@PLT # Offset: 4173
    00001052: 	movl	iterations(%rip), %ecx
.Ltmp3710:
    00001058: 	addl	$0x1, (%rsp)
    0000105c: 	movl	(%rsp), %eax
    0000105f: 	cmpl	%ecx, %eax
    00001061: 	jl	.Ltmp3711 # Offset: 4193
.Ltmp3708:
    00001067: 	movq	%r12, %rsi
    0000106a: 	movq	%r15, %rdi
    0000106d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4205
    00001072: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001079: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001080: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001087: 	je	.Ltmp3712 # Offset: 4231
.Ltmp4025:
    0000108d: 	movq	-0x20(%rax), %rbx
    00001091: 	callq	clock@PLT # Offset: 4241
    00001096: 	pxor	%xmm0, %xmm0
    0000109a: 	movq	%rax, end_time(%rip)
    000010a1: 	movq	%rbx, %rdi
    000010a4: 	subq	start_time(%rip), %rax
    000010ab: 	cvtsi2sd	%rax, %xmm0
    000010b0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000010b8: 	callq	_Z13record_resultdPKc # Offset: 4280
    000010bd: 	movq	0xc0(%rsp), %rdi
    000010c5: 	cmpq	%r13, %rdi
    000010c8: 	je	.Ltmp3713 # Offset: 4296
    000010ca: 	movq	0xd0(%rsp), %rax
    000010d2: 	leaq	0x1(%rax), %rsi
    000010d6: 	callq	_ZdlPvm@PLT # Offset: 4310
.Ltmp3713:
    000010db: 	leaq	DATAat0x5734a(%rip), %rdx
    000010e2: 	movq	%r14, %rsi
    000010e5: 	movq	%r12, %rdi
    000010e8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4328
    000010ed: 	callq	clock@PLT # Offset: 4333
    000010f2: 	movl	iterations(%rip), %ecx
    000010f8: 	movl	$0x0, (%rsp)
    000010ff: 	leaq	0x2020(%rsp), %rbx
    00001107: 	movq	%rax, start_time(%rip)
    0000110e: 	testl	%ecx, %ecx
    00001110: 	jle	.Ltmp3714 # Offset: 4368
    00001116: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3717:
    00001120: 	movq	%rbp, %rax
    00001123: 	pxor	%xmm2, %xmm2
    00001127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3715:
    00001130: 	movdqa	(%rax), %xmm1
    00001134: 	addq	$0x10, %rax
    00001138: 	movdqa	%xmm1, %xmm0
    0000113c: 	paddb	%xmm1, %xmm0
    00001140: 	paddb	%xmm0, %xmm0
    00001144: 	paddb	%xmm0, %xmm0
    00001148: 	paddb	%xmm0, %xmm0
    0000114c: 	paddb	%xmm0, %xmm0
    00001150: 	paddb	%xmm0, %xmm0
    00001154: 	psubb	%xmm1, %xmm0
    00001158: 	paddb	%xmm0, %xmm2
    0000115c: 	cmpq	%rbx, %rax
    0000115f: 	jne	.Ltmp3715 # Offset: 4447
    00001161: 	movdqa	%xmm2, %xmm0
    00001165: 	cvttsd2si	init_value(%rip), %edx
    0000116d: 	psrldq	$0x8, %xmm0
    00001172: 	paddb	%xmm0, %xmm2
    00001176: 	pxor	%xmm0, %xmm0
    0000117a: 	psadbw	%xmm0, %xmm2
    0000117e: 	movd	%xmm2, %eax
    00001182: 	shll	$0x6, %edx
    00001185: 	addb	%dl, %al
    00001187: 	je	.Ltmp3716 # Offset: 4487
    00001189: 	movl	current_test(%rip), %edx
    0000118f: 	leaq	DATAat0x571d0(%rip), %rsi
    00001196: 	movl	$0x1, %edi
    0000119b: 	xorl	%eax, %eax
    0000119d: 	callq	__printf_chk@PLT # Offset: 4509
    000011a2: 	movl	iterations(%rip), %ecx
.Ltmp3716:
    000011a8: 	addl	$0x1, (%rsp)
    000011ac: 	movl	(%rsp), %eax
    000011af: 	cmpl	%ecx, %eax
    000011b1: 	jl	.Ltmp3717 # Offset: 4529
.Ltmp3714:
    000011b7: 	movq	%r12, %rsi
    000011ba: 	movq	%r15, %rdi
    000011bd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4541
    000011c2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011c9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011d0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011d7: 	je	.Ltmp3718 # Offset: 4567
.Ltmp4024:
    000011dd: 	movq	-0x20(%rax), %rbx
    000011e1: 	callq	clock@PLT # Offset: 4577
    000011e6: 	pxor	%xmm0, %xmm0
    000011ea: 	movq	%rax, end_time(%rip)
    000011f1: 	movq	%rbx, %rdi
    000011f4: 	subq	start_time(%rip), %rax
    000011fb: 	cvtsi2sd	%rax, %xmm0
    00001200: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001208: 	callq	_Z13record_resultdPKc # Offset: 4616
    0000120d: 	movq	0xc0(%rsp), %rdi
    00001215: 	cmpq	%r13, %rdi
    00001218: 	je	.Ltmp3719 # Offset: 4632
    0000121a: 	movq	0xd0(%rsp), %rax
    00001222: 	leaq	0x1(%rax), %rsi
    00001226: 	callq	_ZdlPvm@PLT # Offset: 4646
.Ltmp3719:
    0000122b: 	leaq	DATAat0x5735b(%rip), %rdx
    00001232: 	movq	%r14, %rsi
    00001235: 	movq	%r12, %rdi
    00001238: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4664
    0000123d: 	movq	%r12, %rdx
    00001240: 	movl	$0x43, %esi
    00001245: 	movq	%rbp, %rdi
    00001248: 	callq	"_Z14test_variable1Ia24custom_multiply_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4680
    0000124d: 	movq	0xc0(%rsp), %rdi
    00001255: 	cmpq	%r13, %rdi
    00001258: 	je	.Ltmp3720 # Offset: 4696
    0000125a: 	movq	0xd0(%rsp), %rax
    00001262: 	leaq	0x1(%rax), %rsi
    00001266: 	callq	_ZdlPvm@PLT # Offset: 4710
.Ltmp3720:
    0000126b: 	leaq	DATAat0x57374(%rip), %rdx
    00001272: 	movq	%r14, %rsi
    00001275: 	movq	%r12, %rdi
    00001278: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4728
    0000127d: 	callq	clock@PLT # Offset: 4733
    00001282: 	movl	iterations(%rip), %ecx
    00001288: 	movl	$0x0, (%rsp)
    0000128f: 	leaq	0x2020(%rsp), %rbx
    00001297: 	movq	%rax, start_time(%rip)
    0000129e: 	testl	%ecx, %ecx
    000012a0: 	jle	.Ltmp3721 # Offset: 4768
    000012a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3724:
    000012b0: 	movq	%rbp, %rax
    000012b3: 	pxor	%xmm2, %xmm2
    000012b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3722:
    000012c0: 	movdqa	(%rax), %xmm1
    000012c4: 	addq	$0x10, %rax
    000012c8: 	movdqa	%xmm1, %xmm0
    000012cc: 	paddb	%xmm1, %xmm0
    000012d0: 	paddb	%xmm0, %xmm0
    000012d4: 	paddb	%xmm0, %xmm0
    000012d8: 	paddb	%xmm0, %xmm0
    000012dc: 	paddb	%xmm1, %xmm0
    000012e0: 	paddb	%xmm0, %xmm0
    000012e4: 	paddb	%xmm0, %xmm0
    000012e8: 	psubb	%xmm1, %xmm0
    000012ec: 	paddb	%xmm0, %xmm2
    000012f0: 	cmpq	%rbx, %rax
    000012f3: 	jne	.Ltmp3722 # Offset: 4851
    000012f5: 	movdqa	%xmm2, %xmm0
    000012f9: 	cvttsd2si	init_value(%rip), %edx
    00001301: 	psrldq	$0x8, %xmm0
    00001306: 	paddb	%xmm0, %xmm2
    0000130a: 	pxor	%xmm0, %xmm0
    0000130e: 	psadbw	%xmm0, %xmm2
    00001312: 	movd	%xmm2, %eax
    00001316: 	shll	$0x6, %edx
    00001319: 	addb	%dl, %al
    0000131b: 	je	.Ltmp3723 # Offset: 4891
    0000131d: 	movl	current_test(%rip), %edx
    00001323: 	leaq	DATAat0x571d0(%rip), %rsi
    0000132a: 	movl	$0x1, %edi
    0000132f: 	xorl	%eax, %eax
    00001331: 	callq	__printf_chk@PLT # Offset: 4913
    00001336: 	movl	iterations(%rip), %ecx
.Ltmp3723:
    0000133c: 	addl	$0x1, (%rsp)
    00001340: 	movl	(%rsp), %eax
    00001343: 	cmpl	%ecx, %eax
    00001345: 	jl	.Ltmp3724 # Offset: 4933
.Ltmp3721:
    0000134b: 	movq	%r12, %rsi
    0000134e: 	movq	%r15, %rdi
    00001351: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4945
    00001356: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000135d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001364: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000136b: 	je	.Ltmp3725 # Offset: 4971
.Ltmp4023:
    00001371: 	movq	-0x20(%rax), %rbx
    00001375: 	callq	clock@PLT # Offset: 4981
    0000137a: 	pxor	%xmm0, %xmm0
    0000137e: 	movq	%rax, end_time(%rip)
    00001385: 	movq	%rbx, %rdi
    00001388: 	subq	start_time(%rip), %rax
    0000138f: 	cvtsi2sd	%rax, %xmm0
    00001394: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000139c: 	callq	_Z13record_resultdPKc # Offset: 5020
    000013a1: 	movq	0xc0(%rsp), %rdi
    000013a9: 	cmpq	%r13, %rdi
    000013ac: 	je	.Ltmp3726 # Offset: 5036
    000013ae: 	movq	0xd0(%rsp), %rax
    000013b6: 	leaq	0x1(%rax), %rsi
    000013ba: 	callq	_ZdlPvm@PLT # Offset: 5050
.Ltmp3726:
    000013bf: 	leaq	DATAat0x5738d(%rip), %rdx
    000013c6: 	movq	%r14, %rsi
    000013c9: 	movq	%r12, %rdi
    000013cc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5068
    000013d1: 	callq	clock@PLT # Offset: 5073
    000013d6: 	movl	iterations(%rip), %ecx
    000013dc: 	movl	$0x0, (%rsp)
    000013e3: 	leaq	0x2020(%rsp), %rbx
    000013eb: 	movq	%rax, start_time(%rip)
    000013f2: 	testl	%ecx, %ecx
    000013f4: 	jle	.Ltmp3727 # Offset: 5108
    000013fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3730:
    00001400: 	movq	%rbp, %rax
    00001403: 	pxor	%xmm2, %xmm2
    00001407: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3728:
    00001410: 	movdqa	(%rax), %xmm1
    00001414: 	addq	$0x10, %rax
    00001418: 	movdqa	%xmm1, %xmm0
    0000141c: 	paddb	%xmm1, %xmm0
    00001420: 	paddb	%xmm0, %xmm0
    00001424: 	paddb	%xmm0, %xmm0
    00001428: 	paddb	%xmm0, %xmm0
    0000142c: 	paddb	%xmm1, %xmm0
    00001430: 	paddb	%xmm0, %xmm0
    00001434: 	paddb	%xmm0, %xmm0
    00001438: 	psubb	%xmm1, %xmm0
    0000143c: 	paddb	%xmm0, %xmm2
    00001440: 	cmpq	%rax, %rbx
    00001443: 	jne	.Ltmp3728 # Offset: 5187
    00001445: 	movdqa	%xmm2, %xmm0
    00001449: 	cvttsd2si	init_value(%rip), %edx
    00001451: 	psrldq	$0x8, %xmm0
    00001456: 	paddb	%xmm0, %xmm2
    0000145a: 	pxor	%xmm0, %xmm0
    0000145e: 	psadbw	%xmm0, %xmm2
    00001462: 	movd	%xmm2, %eax
    00001466: 	shll	$0x6, %edx
    00001469: 	addb	%dl, %al
    0000146b: 	je	.Ltmp3729 # Offset: 5227
    0000146d: 	movl	current_test(%rip), %edx
    00001473: 	leaq	DATAat0x571d0(%rip), %rsi
    0000147a: 	movl	$0x1, %edi
    0000147f: 	xorl	%eax, %eax
    00001481: 	callq	__printf_chk@PLT # Offset: 5249
    00001486: 	movl	iterations(%rip), %ecx
.Ltmp3729:
    0000148c: 	addl	$0x1, (%rsp)
    00001490: 	movl	(%rsp), %eax
    00001493: 	cmpl	%ecx, %eax
    00001495: 	jl	.Ltmp3730 # Offset: 5269
.Ltmp3727:
    0000149b: 	movq	%r12, %rsi
    0000149e: 	movq	%r15, %rdi
    000014a1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5281
    000014a6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014ad: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000014b4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000014bb: 	je	.Ltmp3731 # Offset: 5307
.Ltmp4022:
    000014c1: 	movq	-0x20(%rax), %rbx
    000014c5: 	callq	clock@PLT # Offset: 5317
    000014ca: 	pxor	%xmm0, %xmm0
    000014ce: 	movq	%rax, end_time(%rip)
    000014d5: 	movq	%rbx, %rdi
    000014d8: 	subq	start_time(%rip), %rax
    000014df: 	cvtsi2sd	%rax, %xmm0
    000014e4: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000014ec: 	callq	_Z13record_resultdPKc # Offset: 5356
    000014f1: 	movq	0xc0(%rsp), %rdi
    000014f9: 	cmpq	%r13, %rdi
    000014fc: 	je	.Ltmp3732 # Offset: 5372
    000014fe: 	movq	0xd0(%rsp), %rax
    00001506: 	leaq	0x1(%rax), %rsi
    0000150a: 	callq	_ZdlPvm@PLT # Offset: 5386
.Ltmp3732:
    0000150f: 	leaq	DATAat0x5739e(%rip), %rdx
    00001516: 	movq	%r14, %rsi
    00001519: 	movq	%r12, %rdi
    0000151c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5404
    00001521: 	callq	clock@PLT # Offset: 5409
    00001526: 	movl	iterations(%rip), %ecx
    0000152c: 	movl	$0x0, (%rsp)
    00001533: 	leaq	0x2020(%rsp), %rbx
    0000153b: 	movq	%rax, start_time(%rip)
    00001542: 	testl	%ecx, %ecx
    00001544: 	jle	.Ltmp3733 # Offset: 5444
    0000154a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3736:
    00001550: 	movq	%rbp, %rax
    00001553: 	pxor	%xmm2, %xmm2
    00001557: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3734:
    00001560: 	movdqa	(%rax), %xmm1
    00001564: 	addq	$0x10, %rax
    00001568: 	movdqa	%xmm1, %xmm0
    0000156c: 	paddb	%xmm1, %xmm0
    00001570: 	paddb	%xmm0, %xmm0
    00001574: 	paddb	%xmm0, %xmm0
    00001578: 	paddb	%xmm0, %xmm0
    0000157c: 	paddb	%xmm1, %xmm0
    00001580: 	paddb	%xmm0, %xmm0
    00001584: 	paddb	%xmm0, %xmm0
    00001588: 	psubb	%xmm1, %xmm0
    0000158c: 	paddb	%xmm0, %xmm2
    00001590: 	cmpq	%rbx, %rax
    00001593: 	jne	.Ltmp3734 # Offset: 5523
    00001595: 	movdqa	%xmm2, %xmm0
    00001599: 	cvttsd2si	init_value(%rip), %edx
    000015a1: 	psrldq	$0x8, %xmm0
    000015a6: 	paddb	%xmm0, %xmm2
    000015aa: 	pxor	%xmm0, %xmm0
    000015ae: 	psadbw	%xmm0, %xmm2
    000015b2: 	movd	%xmm2, %eax
    000015b6: 	shll	$0x6, %edx
    000015b9: 	addb	%dl, %al
    000015bb: 	je	.Ltmp3735 # Offset: 5563
    000015bd: 	movl	current_test(%rip), %edx
    000015c3: 	leaq	DATAat0x571d0(%rip), %rsi
    000015ca: 	movl	$0x1, %edi
    000015cf: 	xorl	%eax, %eax
    000015d1: 	callq	__printf_chk@PLT # Offset: 5585
    000015d6: 	movl	iterations(%rip), %ecx
.Ltmp3735:
    000015dc: 	addl	$0x1, (%rsp)
    000015e0: 	movl	(%rsp), %eax
    000015e3: 	cmpl	%ecx, %eax
    000015e5: 	jl	.Ltmp3736 # Offset: 5605
.Ltmp3733:
    000015eb: 	movq	%r12, %rsi
    000015ee: 	movq	%r15, %rdi
    000015f1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5617
    000015f6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015fd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001604: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000160b: 	je	.Ltmp3737 # Offset: 5643
.Ltmp4021:
    00001611: 	movq	-0x20(%rax), %rbx
    00001615: 	callq	clock@PLT # Offset: 5653
    0000161a: 	pxor	%xmm0, %xmm0
    0000161e: 	movq	%rax, end_time(%rip)
    00001625: 	movq	%rbx, %rdi
    00001628: 	subq	start_time(%rip), %rax
    0000162f: 	cvtsi2sd	%rax, %xmm0
    00001634: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000163c: 	callq	_Z13record_resultdPKc # Offset: 5692
    00001641: 	movq	0xc0(%rsp), %rdi
    00001649: 	cmpq	%r13, %rdi
    0000164c: 	je	.Ltmp3738 # Offset: 5708
    0000164e: 	movq	0xd0(%rsp), %rax
    00001656: 	leaq	0x1(%rax), %rsi
    0000165a: 	callq	_ZdlPvm@PLT # Offset: 5722
.Ltmp3738:
    0000165f: 	leaq	DATAat0x573ad(%rip), %rdx
    00001666: 	movq	%r14, %rsi
    00001669: 	movq	%r12, %rdi
    0000166c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5740
    00001671: 	movq	%r12, %rdx
    00001674: 	movl	$0x53, %esi
    00001679: 	movq	%rbp, %rdi
    0000167c: 	callq	"_Z14test_variable1Ia24custom_multiply_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 5756
    00001681: 	movq	0xc0(%rsp), %rdi
    00001689: 	cmpq	%r13, %rdi
    0000168c: 	je	.Ltmp3739 # Offset: 5772
    0000168e: 	movq	0xd0(%rsp), %rax
    00001696: 	leaq	0x1(%rax), %rsi
    0000169a: 	callq	_ZdlPvm@PLT # Offset: 5786
.Ltmp3739:
    0000169f: 	leaq	DATAat0x573c6(%rip), %rdx
    000016a6: 	movq	%r14, %rsi
    000016a9: 	movq	%r12, %rdi
    000016ac: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5804
    000016b1: 	callq	clock@PLT # Offset: 5809
    000016b6: 	movl	iterations(%rip), %ecx
    000016bc: 	movl	$0x0, (%rsp)
    000016c3: 	leaq	0x2020(%rsp), %rbx
    000016cb: 	movq	%rax, start_time(%rip)
    000016d2: 	testl	%ecx, %ecx
    000016d4: 	jle	.Ltmp3740 # Offset: 5844
    000016da: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3743:
    000016e0: 	movq	%rbp, %rax
    000016e3: 	pxor	%xmm2, %xmm2
    000016e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3741:
    000016f0: 	movdqa	(%rax), %xmm1
    000016f4: 	addq	$0x10, %rax
    000016f8: 	movdqa	%xmm1, %xmm0
    000016fc: 	paddb	%xmm1, %xmm0
    00001700: 	paddb	%xmm0, %xmm0
    00001704: 	paddb	%xmm1, %xmm0
    00001708: 	paddb	%xmm0, %xmm0
    0000170c: 	paddb	%xmm0, %xmm0
    00001710: 	paddb	%xmm1, %xmm0
    00001714: 	paddb	%xmm0, %xmm0
    00001718: 	paddb	%xmm0, %xmm0
    0000171c: 	psubb	%xmm1, %xmm0
    00001720: 	paddb	%xmm0, %xmm2
    00001724: 	cmpq	%rax, %rbx
    00001727: 	jne	.Ltmp3741 # Offset: 5927
    00001729: 	movdqa	%xmm2, %xmm0
    0000172d: 	cvttsd2si	init_value(%rip), %edx
    00001735: 	psrldq	$0x8, %xmm0
    0000173a: 	paddb	%xmm0, %xmm2
    0000173e: 	pxor	%xmm0, %xmm0
    00001742: 	psadbw	%xmm0, %xmm2
    00001746: 	movd	%xmm2, %eax
    0000174a: 	shll	$0x6, %edx
    0000174d: 	addb	%dl, %al
    0000174f: 	je	.Ltmp3742 # Offset: 5967
    00001751: 	movl	current_test(%rip), %edx
    00001757: 	leaq	DATAat0x571d0(%rip), %rsi
    0000175e: 	movl	$0x1, %edi
    00001763: 	xorl	%eax, %eax
    00001765: 	callq	__printf_chk@PLT # Offset: 5989
    0000176a: 	movl	iterations(%rip), %ecx
.Ltmp3742:
    00001770: 	addl	$0x1, (%rsp)
    00001774: 	movl	(%rsp), %eax
    00001777: 	cmpl	%ecx, %eax
    00001779: 	jl	.Ltmp3743 # Offset: 6009
.Ltmp3740:
    0000177f: 	movq	%r12, %rsi
    00001782: 	movq	%r15, %rdi
    00001785: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6021
    0000178a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001791: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001798: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000179f: 	je	.Ltmp3744 # Offset: 6047
.Ltmp4020:
    000017a5: 	movq	-0x20(%rax), %rbx
    000017a9: 	callq	clock@PLT # Offset: 6057
    000017ae: 	pxor	%xmm0, %xmm0
    000017b2: 	movq	%rax, end_time(%rip)
    000017b9: 	movq	%rbx, %rdi
    000017bc: 	subq	start_time(%rip), %rax
    000017c3: 	cvtsi2sd	%rax, %xmm0
    000017c8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000017d0: 	callq	_Z13record_resultdPKc # Offset: 6096
    000017d5: 	movq	0xc0(%rsp), %rdi
    000017dd: 	cmpq	%r13, %rdi
    000017e0: 	je	.Ltmp3745 # Offset: 6112
    000017e2: 	movq	0xd0(%rsp), %rax
    000017ea: 	leaq	0x1(%rax), %rsi
    000017ee: 	callq	_ZdlPvm@PLT # Offset: 6126
.Ltmp3745:
    000017f3: 	leaq	DATAat0x573df(%rip), %rdx
    000017fa: 	movq	%r14, %rsi
    000017fd: 	movq	%r12, %rdi
    00001800: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6144
    00001805: 	callq	clock@PLT # Offset: 6149
    0000180a: 	movl	iterations(%rip), %ecx
    00001810: 	movl	$0x0, (%rsp)
    00001817: 	leaq	0x2020(%rsp), %rbx
    0000181f: 	movq	%rax, start_time(%rip)
    00001826: 	testl	%ecx, %ecx
    00001828: 	jle	.Ltmp3746 # Offset: 6184
    0000182e: 	nop # Size: 2
.Ltmp3749:
    00001830: 	movq	%rbp, %rax
    00001833: 	pxor	%xmm2, %xmm2
    00001837: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3747:
    00001840: 	movdqa	(%rax), %xmm3
    00001844: 	addq	$0x10, %rax
    00001848: 	movdqa	%xmm3, %xmm1
    0000184c: 	psubb	%xmm3, %xmm2
    00001850: 	paddb	%xmm3, %xmm1
    00001854: 	paddb	%xmm1, %xmm1
    00001858: 	movdqa	%xmm1, %xmm0
    0000185c: 	paddb	%xmm3, %xmm0
    00001860: 	paddb	%xmm0, %xmm0
    00001864: 	paddb	%xmm0, %xmm0
    00001868: 	paddb	%xmm0, %xmm0
    0000186c: 	paddb	%xmm0, %xmm0
    00001870: 	paddb	%xmm0, %xmm1
    00001874: 	paddb	%xmm1, %xmm2
    00001878: 	cmpq	%rbx, %rax
    0000187b: 	jne	.Ltmp3747 # Offset: 6267
    0000187d: 	movdqa	%xmm2, %xmm0
    00001881: 	cvttsd2si	init_value(%rip), %edx
    00001889: 	pxor	%xmm3, %xmm3
    0000188d: 	psrldq	$0x8, %xmm0
    00001892: 	paddb	%xmm0, %xmm2
    00001896: 	psadbw	%xmm3, %xmm2
    0000189a: 	movd	%xmm2, %eax
    0000189e: 	shll	$0x6, %edx
    000018a1: 	addb	%dl, %al
    000018a3: 	je	.Ltmp3748 # Offset: 6307
    000018a5: 	movl	current_test(%rip), %edx
    000018ab: 	leaq	DATAat0x571d0(%rip), %rsi
    000018b2: 	movl	$0x1, %edi
    000018b7: 	xorl	%eax, %eax
    000018b9: 	callq	__printf_chk@PLT # Offset: 6329
    000018be: 	movl	iterations(%rip), %ecx
.Ltmp3748:
    000018c4: 	addl	$0x1, (%rsp)
    000018c8: 	movl	(%rsp), %eax
    000018cb: 	cmpl	%ecx, %eax
    000018cd: 	jl	.Ltmp3749 # Offset: 6349
.Ltmp3746:
    000018d3: 	movq	%r12, %rsi
    000018d6: 	movq	%r15, %rdi
    000018d9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6361
    000018de: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018e5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000018ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018f3: 	je	.Ltmp3750 # Offset: 6387
.Ltmp4019:
    000018f9: 	movq	-0x20(%rax), %rbx
    000018fd: 	callq	clock@PLT # Offset: 6397
    00001902: 	pxor	%xmm0, %xmm0
    00001906: 	movq	%rax, end_time(%rip)
    0000190d: 	movq	%rbx, %rdi
    00001910: 	subq	start_time(%rip), %rax
    00001917: 	cvtsi2sd	%rax, %xmm0
    0000191c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001924: 	callq	_Z13record_resultdPKc # Offset: 6436
    00001929: 	movq	0xc0(%rsp), %rdi
    00001931: 	cmpq	%r13, %rdi
    00001934: 	je	.Ltmp3751 # Offset: 6452
    00001936: 	movq	0xd0(%rsp), %rax
    0000193e: 	leaq	0x1(%rax), %rsi
    00001942: 	callq	_ZdlPvm@PLT # Offset: 6466
.Ltmp3751:
    00001947: 	leaq	DATAat0x573f0(%rip), %rdx
    0000194e: 	movq	%r14, %rsi
    00001951: 	movq	%r12, %rdi
    00001954: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6484
    00001959: 	callq	clock@PLT # Offset: 6489
    0000195e: 	movl	iterations(%rip), %ecx
    00001964: 	movl	$0x0, (%rsp)
    0000196b: 	leaq	0x2020(%rsp), %rbx
    00001973: 	movq	%rax, start_time(%rip)
    0000197a: 	testl	%ecx, %ecx
    0000197c: 	jle	.Ltmp3752 # Offset: 6524
    00001982: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3755:
    00001988: 	movq	%rbp, %rax
    0000198b: 	pxor	%xmm2, %xmm2
    0000198f: 	nop # Size: 1
.Ltmp3753:
    00001990: 	movdqa	(%rax), %xmm1
    00001994: 	addq	$0x10, %rax
    00001998: 	movdqa	%xmm1, %xmm0
    0000199c: 	paddb	%xmm1, %xmm0
    000019a0: 	paddb	%xmm0, %xmm0
    000019a4: 	paddb	%xmm1, %xmm0
    000019a8: 	paddb	%xmm0, %xmm0
    000019ac: 	paddb	%xmm0, %xmm0
    000019b0: 	paddb	%xmm1, %xmm0
    000019b4: 	paddb	%xmm0, %xmm0
    000019b8: 	paddb	%xmm0, %xmm0
    000019bc: 	psubb	%xmm1, %xmm0
    000019c0: 	paddb	%xmm0, %xmm2
    000019c4: 	cmpq	%rbx, %rax
    000019c7: 	jne	.Ltmp3753 # Offset: 6599
    000019c9: 	movdqa	%xmm2, %xmm0
    000019cd: 	cvttsd2si	init_value(%rip), %edx
    000019d5: 	psrldq	$0x8, %xmm0
    000019da: 	paddb	%xmm0, %xmm2
    000019de: 	pxor	%xmm0, %xmm0
    000019e2: 	psadbw	%xmm0, %xmm2
    000019e6: 	movd	%xmm2, %eax
    000019ea: 	shll	$0x6, %edx
    000019ed: 	addb	%dl, %al
    000019ef: 	je	.Ltmp3754 # Offset: 6639
    000019f1: 	movl	current_test(%rip), %edx
    000019f7: 	leaq	DATAat0x571d0(%rip), %rsi
    000019fe: 	movl	$0x1, %edi
    00001a03: 	xorl	%eax, %eax
    00001a05: 	callq	__printf_chk@PLT # Offset: 6661
    00001a0a: 	movl	iterations(%rip), %ecx
.Ltmp3754:
    00001a10: 	addl	$0x1, (%rsp)
    00001a14: 	movl	(%rsp), %eax
    00001a17: 	cmpl	%ecx, %eax
    00001a19: 	jl	.Ltmp3755 # Offset: 6681
.Ltmp3752:
    00001a1f: 	movq	%r12, %rsi
    00001a22: 	movq	%r15, %rdi
    00001a25: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6693
    00001a2a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a31: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a38: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a3f: 	je	.Ltmp3756 # Offset: 6719
.Ltmp4018:
    00001a45: 	movq	-0x20(%rax), %rbx
    00001a49: 	callq	clock@PLT # Offset: 6729
    00001a4e: 	pxor	%xmm0, %xmm0
    00001a52: 	movq	%rax, end_time(%rip)
    00001a59: 	movq	%rbx, %rdi
    00001a5c: 	subq	start_time(%rip), %rax
    00001a63: 	cvtsi2sd	%rax, %xmm0
    00001a68: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001a70: 	callq	_Z13record_resultdPKc # Offset: 6768
    00001a75: 	movq	0xc0(%rsp), %rdi
    00001a7d: 	cmpq	%r13, %rdi
    00001a80: 	je	.Ltmp3757 # Offset: 6784
    00001a82: 	movq	0xd0(%rsp), %rax
    00001a8a: 	leaq	0x1(%rax), %rsi
    00001a8e: 	callq	_ZdlPvm@PLT # Offset: 6798
.Ltmp3757:
    00001a93: 	leaq	DATAat0x573ff(%rip), %rdx
    00001a9a: 	movq	%r14, %rsi
    00001a9d: 	movq	%r12, %rdi
    00001aa0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6816
    00001aa5: 	movq	%r12, %rdx
    00001aa8: 	movl	$0x7e, %esi
    00001aad: 	movq	%rbp, %rdi
    00001ab0: 	callq	"_Z14test_variable1Ia24custom_multiply_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 6832
    00001ab5: 	movq	0xc0(%rsp), %rdi
    00001abd: 	cmpq	%r13, %rdi
    00001ac0: 	je	.Ltmp3758 # Offset: 6848
    00001ac2: 	movq	0xd0(%rsp), %rax
    00001aca: 	leaq	0x1(%rax), %rsi
    00001ace: 	callq	_ZdlPvm@PLT # Offset: 6862
.Ltmp3758:
    00001ad3: 	leaq	DATAat0x57419(%rip), %rdx
    00001ada: 	movq	%r14, %rsi
    00001add: 	movq	%r12, %rdi
    00001ae0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6880
    00001ae5: 	callq	clock@PLT # Offset: 6885
    00001aea: 	movl	iterations(%rip), %ecx
    00001af0: 	movl	$0x0, (%rsp)
    00001af7: 	leaq	0x2020(%rsp), %rbx
    00001aff: 	movq	%rax, start_time(%rip)
    00001b06: 	testl	%ecx, %ecx
    00001b08: 	jle	.Ltmp3759 # Offset: 6920
    00001b0e: 	nop # Size: 2
.Ltmp3762:
    00001b10: 	movq	%rbp, %rax
    00001b13: 	pxor	%xmm2, %xmm2
    00001b17: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3760:
    00001b20: 	movdqa	(%rax), %xmm1
    00001b24: 	addq	$0x10, %rax
    00001b28: 	movdqa	%xmm1, %xmm0
    00001b2c: 	paddb	%xmm1, %xmm0
    00001b30: 	paddb	%xmm0, %xmm0
    00001b34: 	paddb	%xmm0, %xmm0
    00001b38: 	paddb	%xmm0, %xmm0
    00001b3c: 	paddb	%xmm0, %xmm0
    00001b40: 	paddb	%xmm0, %xmm0
    00001b44: 	psubb	%xmm1, %xmm0
    00001b48: 	paddb	%xmm0, %xmm0
    00001b4c: 	paddb	%xmm0, %xmm2
    00001b50: 	cmpq	%rbx, %rax
    00001b53: 	jne	.Ltmp3760 # Offset: 6995
    00001b55: 	movdqa	%xmm2, %xmm0
    00001b59: 	cvttsd2si	init_value(%rip), %edx
    00001b61: 	psrldq	$0x8, %xmm0
    00001b66: 	paddb	%xmm0, %xmm2
    00001b6a: 	pxor	%xmm0, %xmm0
    00001b6e: 	psadbw	%xmm0, %xmm2
    00001b72: 	movd	%xmm2, %eax
    00001b76: 	shll	$0x7, %edx
    00001b79: 	cmpb	%al, %dl
    00001b7b: 	je	.Ltmp3761 # Offset: 7035
    00001b7d: 	movl	current_test(%rip), %edx
    00001b83: 	leaq	DATAat0x571d0(%rip), %rsi
    00001b8a: 	movl	$0x1, %edi
    00001b8f: 	xorl	%eax, %eax
    00001b91: 	callq	__printf_chk@PLT # Offset: 7057
    00001b96: 	movl	iterations(%rip), %ecx
.Ltmp3761:
    00001b9c: 	addl	$0x1, (%rsp)
    00001ba0: 	movl	(%rsp), %eax
    00001ba3: 	cmpl	%ecx, %eax
    00001ba5: 	jl	.Ltmp3762 # Offset: 7077
.Ltmp3759:
    00001bab: 	movq	%r12, %rsi
    00001bae: 	movq	%r15, %rdi
    00001bb1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7089
    00001bb6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bbd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001bc4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001bcb: 	je	.Ltmp3763 # Offset: 7115
.Ltmp4017:
    00001bd1: 	movq	-0x20(%rax), %rbx
    00001bd5: 	callq	clock@PLT # Offset: 7125
    00001bda: 	pxor	%xmm0, %xmm0
    00001bde: 	movq	%rax, end_time(%rip)
    00001be5: 	movq	%rbx, %rdi
    00001be8: 	subq	start_time(%rip), %rax
    00001bef: 	cvtsi2sd	%rax, %xmm0
    00001bf4: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001bfc: 	callq	_Z13record_resultdPKc # Offset: 7164
    00001c01: 	movq	0xc0(%rsp), %rdi
    00001c09: 	cmpq	%r13, %rdi
    00001c0c: 	je	.Ltmp3764 # Offset: 7180
    00001c0e: 	movq	0xd0(%rsp), %rax
    00001c16: 	leaq	0x1(%rax), %rsi
    00001c1a: 	callq	_ZdlPvm@PLT # Offset: 7194
.Ltmp3764:
    00001c1f: 	leaq	DATAat0x57433(%rip), %rdx
    00001c26: 	movq	%r14, %rsi
    00001c29: 	movq	%r12, %rdi
    00001c2c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7212
    00001c31: 	movq	%r12, %rsi
    00001c34: 	movq	%rbp, %rdi
    00001c37: 	callq	"_Z13test_constantIa28custom_multiply_shiftadd_126IaEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 7223
    00001c3c: 	movq	0xc0(%rsp), %rdi
    00001c44: 	cmpq	%r13, %rdi
    00001c47: 	je	.Ltmp3765 # Offset: 7239
    00001c49: 	movq	0xd0(%rsp), %rax
    00001c51: 	leaq	0x1(%rax), %rsi
    00001c55: 	callq	_ZdlPvm@PLT # Offset: 7253
.Ltmp3765:
    00001c5a: 	leaq	DATAat0x57445(%rip), %rdx
    00001c61: 	movq	%r14, %rsi
    00001c64: 	movq	%r12, %rdi
    00001c67: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7271
    00001c6c: 	callq	clock@PLT # Offset: 7276
    00001c71: 	movl	iterations(%rip), %ecx
    00001c77: 	movl	$0x0, (%rsp)
    00001c7e: 	leaq	0x2020(%rsp), %rbx
    00001c86: 	movq	%rax, start_time(%rip)
    00001c8d: 	testl	%ecx, %ecx
    00001c8f: 	jle	.Ltmp3766 # Offset: 7311
    00001c95: 	nopl	(%rax) # Size: 3
.Ltmp3769:
    00001c98: 	movq	%rbp, %rax
    00001c9b: 	pxor	%xmm2, %xmm2
    00001c9f: 	nop # Size: 1
.Ltmp3767:
    00001ca0: 	movdqa	(%rax), %xmm1
    00001ca4: 	addq	$0x10, %rax
    00001ca8: 	movdqa	%xmm1, %xmm0
    00001cac: 	paddb	%xmm1, %xmm0
    00001cb0: 	paddb	%xmm0, %xmm0
    00001cb4: 	paddb	%xmm0, %xmm0
    00001cb8: 	paddb	%xmm0, %xmm0
    00001cbc: 	paddb	%xmm0, %xmm0
    00001cc0: 	paddb	%xmm0, %xmm0
    00001cc4: 	psubb	%xmm1, %xmm0
    00001cc8: 	paddb	%xmm0, %xmm0
    00001ccc: 	paddb	%xmm0, %xmm2
    00001cd0: 	cmpq	%rbx, %rax
    00001cd3: 	jne	.Ltmp3767 # Offset: 7379
    00001cd5: 	movdqa	%xmm2, %xmm0
    00001cd9: 	cvttsd2si	init_value(%rip), %edx
    00001ce1: 	psrldq	$0x8, %xmm0
    00001ce6: 	paddb	%xmm0, %xmm2
    00001cea: 	pxor	%xmm0, %xmm0
    00001cee: 	psadbw	%xmm0, %xmm2
    00001cf2: 	movd	%xmm2, %eax
    00001cf6: 	shll	$0x7, %edx
    00001cf9: 	cmpb	%al, %dl
    00001cfb: 	je	.Ltmp3768 # Offset: 7419
    00001cfd: 	movl	current_test(%rip), %edx
    00001d03: 	leaq	DATAat0x571d0(%rip), %rsi
    00001d0a: 	movl	$0x1, %edi
    00001d0f: 	xorl	%eax, %eax
    00001d11: 	callq	__printf_chk@PLT # Offset: 7441
    00001d16: 	movl	iterations(%rip), %ecx
.Ltmp3768:
    00001d1c: 	addl	$0x1, (%rsp)
    00001d20: 	movl	(%rsp), %eax
    00001d23: 	cmpl	%ecx, %eax
    00001d25: 	jl	.Ltmp3769 # Offset: 7461
.Ltmp3766:
    00001d2b: 	movq	%r12, %rsi
    00001d2e: 	movq	%r15, %rdi
    00001d31: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7473
    00001d36: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d3d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d44: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d4b: 	je	.Ltmp3770 # Offset: 7499
.Ltmp4016:
    00001d51: 	movq	-0x20(%rax), %rbx
    00001d55: 	callq	clock@PLT # Offset: 7509
    00001d5a: 	pxor	%xmm0, %xmm0
    00001d5e: 	movq	%rax, end_time(%rip)
    00001d65: 	movq	%rbx, %rdi
    00001d68: 	subq	start_time(%rip), %rax
    00001d6f: 	cvtsi2sd	%rax, %xmm0
    00001d74: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001d7c: 	callq	_Z13record_resultdPKc # Offset: 7548
    00001d81: 	movq	0xc0(%rsp), %rdi
    00001d89: 	cmpq	%r13, %rdi
    00001d8c: 	je	.Ltmp3771 # Offset: 7564
    00001d8e: 	movq	0xd0(%rsp), %rax
    00001d96: 	leaq	0x1(%rax), %rsi
    00001d9a: 	callq	_ZdlPvm@PLT # Offset: 7578
.Ltmp3771:
    00001d9f: 	leaq	0x80(%rsp), %rdi
    00001da7: 	leaq	DATAat0x57455(%rip), %rdx
    00001dae: 	movq	%r14, %rsi
    00001db1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7601
    00001db6: 	movl	iterations(%rip), %edx
    00001dbc: 	xorl	%r8d, %r8d
    00001dbf: 	xorl	%ecx, %ecx
    00001dc1: 	movl	$0x1f40, %esi
    00001dc6: 	movq	0x80(%rsp), %rdi
    00001dce: 	callq	_Z9summarizePKciiii # Offset: 7630
    00001dd3: 	leaq	DATAat0x57472(%rip), %rdx
    00001dda: 	movq	%r14, %rsi
    00001ddd: 	movq	%r12, %rdi
    00001de0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7648
    00001de5: 	callq	clock@PLT # Offset: 7653
    00001dea: 	movl	iterations(%rip), %ecx
    00001df0: 	movq	%rax, start_time(%rip)
    00001df7: 	testl	%ecx, %ecx
    00001df9: 	jle	.Ltmp3772 # Offset: 7673
    00001dff: 	movdqa	DATAat0x57c00(%rip), %xmm3
    00001e07: 	movl	$0x0, 0x20(%rsp)
    00001e0f: 	leaq	0x2020(%rsp), %rbx
    00001e17: 	movaps	%xmm3, 0x10(%rsp)
    00001e1c: 	movdqa	DATAat0x57f30(%rip), %xmm3
    00001e24: 	movaps	%xmm3, (%rsp)
    00001e28: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3775:
    00001e30: 	movq	%rbp, %rax
    00001e33: 	pxor	%xmm1, %xmm1
    00001e37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3773:
    00001e40: 	movdqa	(%rax), %xmm0
    00001e44: 	movdqa	(%rsp), %xmm4
    00001e49: 	addq	$0x10, %rax
    00001e4d: 	psraw	$0x1, %xmm0
    00001e52: 	pand	0x10(%rsp), %xmm0
    00001e58: 	pxor	%xmm4, %xmm0
    00001e5c: 	psubb	%xmm4, %xmm0
    00001e60: 	paddb	%xmm0, %xmm1
    00001e64: 	cmpq	%rax, %rbx
    00001e67: 	jne	.Ltmp3773 # Offset: 7783
    00001e69: 	cvttsd2si	init_value(%rip), %edx
    00001e71: 	movdqa	%xmm1, %xmm0
    00001e75: 	psrldq	$0x8, %xmm0
    00001e7a: 	paddb	%xmm0, %xmm1
    00001e7e: 	pxor	%xmm0, %xmm0
    00001e82: 	psadbw	%xmm0, %xmm1
    00001e86: 	sarb	%dl
    00001e88: 	movd	%xmm1, %eax
    00001e8c: 	shll	$0x6, %edx
    00001e8f: 	cmpb	%al, %dl
    00001e91: 	je	.Ltmp3774 # Offset: 7825
    00001e93: 	movl	current_test(%rip), %edx
    00001e99: 	leaq	DATAat0x571d0(%rip), %rsi
    00001ea0: 	movl	$0x1, %edi
    00001ea5: 	xorl	%eax, %eax
    00001ea7: 	callq	__printf_chk@PLT # Offset: 7847
    00001eac: 	movl	iterations(%rip), %ecx
.Ltmp3774:
    00001eb2: 	addl	$0x1, 0x20(%rsp)
    00001eb7: 	movl	0x20(%rsp), %eax
    00001ebb: 	cmpl	%ecx, %eax
    00001ebd: 	jl	.Ltmp3775 # Offset: 7869
.Ltmp3772:
    00001ec3: 	movq	%r12, %rsi
    00001ec6: 	movq	%r15, %rdi
    00001ec9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7881
    00001ece: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ed5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001edc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ee3: 	je	.Ltmp3776 # Offset: 7907
.Ltmp4015:
    00001ee9: 	movq	-0x20(%rax), %rbx
    00001eed: 	callq	clock@PLT # Offset: 7917
    00001ef2: 	pxor	%xmm0, %xmm0
    00001ef6: 	movq	%rax, end_time(%rip)
    00001efd: 	movq	%rbx, %rdi
    00001f00: 	subq	start_time(%rip), %rax
    00001f07: 	cvtsi2sd	%rax, %xmm0
    00001f0c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001f14: 	callq	_Z13record_resultdPKc # Offset: 7956
    00001f19: 	movq	0xc0(%rsp), %rdi
    00001f21: 	cmpq	%r13, %rdi
    00001f24: 	je	.Ltmp3777 # Offset: 7972
    00001f26: 	movq	0xd0(%rsp), %rax
    00001f2e: 	leaq	0x1(%rax), %rsi
    00001f32: 	callq	_ZdlPvm@PLT # Offset: 7986
.Ltmp3777:
    00001f37: 	leaq	DATAat0x579c8(%rip), %rdx
    00001f3e: 	movq	%r14, %rsi
    00001f41: 	movq	%r12, %rdi
    00001f44: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8004
    00001f49: 	callq	clock@PLT # Offset: 8009
    00001f4e: 	movl	iterations(%rip), %esi
    00001f54: 	movq	%rax, start_time(%rip)
    00001f5b: 	testl	%esi, %esi
    00001f5d: 	jle	.Ltmp3778 # Offset: 8029
    00001f63: 	movdqa	DATAat0x57c00(%rip), %xmm3
    00001f6b: 	movl	$0x0, 0x20(%rsp)
    00001f73: 	leaq	0x2020(%rsp), %rbx
    00001f7b: 	movaps	%xmm3, 0x10(%rsp)
    00001f80: 	movdqa	DATAat0x57f30(%rip), %xmm3
    00001f88: 	movaps	%xmm3, (%rsp)
    00001f8c: 	movdqa	DATAat0x57be0(%rip), %xmm3
    00001f94: 	movaps	%xmm3, 0x30(%rsp)
    00001f99: 	nopl	(%rax) # Size: 7
.Ltmp3782:
    00001fa0: 	pxor	%xmm4, %xmm4
    00001fa4: 	pxor	%xmm6, %xmm6
    00001fa8: 	pxor	%xmm3, %xmm3
    00001fac: 	movq	%rbp, %rax
    00001faf: 	movdqa	%xmm4, %xmm5
    00001fb3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3779:
    00001fb8: 	movdqa	%xmm5, %xmm7
    00001fbc: 	movdqa	%xmm6, %xmm2
    00001fc0: 	movdqa	%xmm3, %xmm1
    00001fc4: 	addq	$0x10, %rax
    00001fc8: 	movdqa	-0x10(%rax), %xmm8
    00001fce: 	pcmpgtb	%xmm8, %xmm7
    00001fd3: 	movdqa	%xmm8, %xmm0
    00001fd8: 	movdqa	%xmm8, %xmm9
    00001fdd: 	punpcklbw	%xmm7, %xmm0
    00001fe1: 	punpckhbw	%xmm7, %xmm9
    00001fe6: 	pcmpgtw	%xmm0, %xmm2
    00001fea: 	movdqa	%xmm0, %xmm10
    00001fef: 	punpcklwd	%xmm2, %xmm10
    00001ff4: 	punpckhwd	%xmm2, %xmm0
    00001ff8: 	movdqa	%xmm3, %xmm2
    00001ffc: 	psubd	%xmm0, %xmm2
    00002000: 	psubd	%xmm10, %xmm1
    00002005: 	movdqa	%xmm9, %xmm10
    0000200a: 	movdqa	%xmm1, %xmm0
    0000200e: 	punpcklwd	%xmm2, %xmm1
    00002012: 	punpckhwd	%xmm2, %xmm0
    00002016: 	movdqa	%xmm1, %xmm2
    0000201a: 	punpckhwd	%xmm0, %xmm2
    0000201e: 	punpcklwd	%xmm0, %xmm1
    00002022: 	movdqa	%xmm3, %xmm0
    00002026: 	punpcklwd	%xmm2, %xmm1
    0000202a: 	movdqa	%xmm1, %xmm2
    0000202e: 	movdqa	%xmm6, %xmm1
    00002032: 	pcmpgtw	%xmm9, %xmm1
    00002037: 	psraw	$0x1, %xmm2
    0000203c: 	punpcklwd	%xmm1, %xmm10
    00002041: 	punpckhwd	%xmm1, %xmm9
    00002046: 	psubd	%xmm10, %xmm0
    0000204b: 	movdqa	%xmm3, %xmm10
    00002050: 	psubd	%xmm9, %xmm10
    00002055: 	movdqa	%xmm0, %xmm1
    00002059: 	punpcklwd	%xmm10, %xmm0
    0000205e: 	punpckhwd	%xmm10, %xmm1
    00002063: 	movdqa	%xmm0, %xmm9
    00002068: 	punpcklwd	%xmm1, %xmm0
    0000206c: 	punpckhwd	%xmm1, %xmm9
    00002071: 	movdqa	0x30(%rsp), %xmm1
    00002077: 	punpcklwd	%xmm9, %xmm0
    0000207c: 	psraw	$0x1, %xmm0
    00002081: 	pand	%xmm1, %xmm2
    00002085: 	pand	%xmm1, %xmm0
    00002089: 	movdqa	%xmm5, %xmm1
    0000208d: 	packuswb	%xmm0, %xmm2
    00002091: 	movdqa	%xmm8, %xmm0
    00002096: 	psubb	%xmm2, %xmm1
    0000209a: 	psraw	$0x1, %xmm0
    0000209f: 	movdqa	(%rsp), %xmm2
    000020a4: 	pand	0x10(%rsp), %xmm0
    000020aa: 	pxor	%xmm2, %xmm0
    000020ae: 	psubb	%xmm2, %xmm0
    000020b2: 	movdqa	%xmm1, %xmm2
    000020b6: 	pand	%xmm7, %xmm2
    000020ba: 	pandn	%xmm0, %xmm7
    000020be: 	movdqa	%xmm7, %xmm1
    000020c2: 	por	%xmm2, %xmm1
    000020c6: 	paddb	%xmm1, %xmm4
    000020ca: 	cmpq	%rbx, %rax
    000020cd: 	jne	.Ltmp3779 # Offset: 8397
    000020d3: 	cvttsd2si	init_value(%rip), %ecx
    000020db: 	movdqa	%xmm4, %xmm0
    000020df: 	psrldq	$0x8, %xmm0
    000020e4: 	paddb	%xmm0, %xmm4
    000020e8: 	psadbw	%xmm5, %xmm4
    000020ec: 	movl	%ecx, %edx
    000020ee: 	movd	%xmm4, %eax
    000020f2: 	sarb	%dl
    000020f4: 	testb	%cl, %cl
    000020f6: 	jns	.Ltmp3780 # Offset: 8438
    000020f8: 	movsbl	%cl, %edx
    000020fb: 	negl	%edx
    000020fd: 	sarl	%edx
    000020ff: 	negl	%edx
.Ltmp3780:
    00002101: 	shll	$0x6, %edx
    00002104: 	cmpb	%al, %dl
    00002106: 	je	.Ltmp3781 # Offset: 8454
    00002108: 	movl	current_test(%rip), %edx
    0000210e: 	leaq	DATAat0x571d0(%rip), %rsi
    00002115: 	movl	$0x1, %edi
    0000211a: 	xorl	%eax, %eax
    0000211c: 	callq	__printf_chk@PLT # Offset: 8476
    00002121: 	movl	iterations(%rip), %esi
.Ltmp3781:
    00002127: 	addl	$0x1, 0x20(%rsp)
    0000212c: 	movl	0x20(%rsp), %eax
    00002130: 	cmpl	%esi, %eax
    00002132: 	jl	.Ltmp3782 # Offset: 8498
.Ltmp3778:
    00002138: 	movq	%r12, %rsi
    0000213b: 	movq	%r15, %rdi
    0000213e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8510
    00002143: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000214a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002151: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002158: 	je	.Ltmp3783 # Offset: 8536
.Ltmp4014:
    0000215e: 	movq	-0x20(%rax), %rbx
    00002162: 	callq	clock@PLT # Offset: 8546
    00002167: 	pxor	%xmm0, %xmm0
    0000216b: 	movq	%rax, end_time(%rip)
    00002172: 	movq	%rbx, %rdi
    00002175: 	subq	start_time(%rip), %rax
    0000217c: 	cvtsi2sd	%rax, %xmm0
    00002181: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002189: 	callq	_Z13record_resultdPKc # Offset: 8585
    0000218e: 	movq	0xc0(%rsp), %rdi
    00002196: 	cmpq	%r13, %rdi
    00002199: 	je	.Ltmp3784 # Offset: 8601
    0000219b: 	movq	0xd0(%rsp), %rax
    000021a3: 	leaq	0x1(%rax), %rsi
    000021a7: 	callq	_ZdlPvm@PLT # Offset: 8615
.Ltmp3784:
    000021ac: 	leaq	DATAat0x57484(%rip), %rdx
    000021b3: 	movq	%r14, %rsi
    000021b6: 	movq	%r12, %rdi
    000021b9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8633
    000021be: 	callq	clock@PLT # Offset: 8638
    000021c3: 	movl	iterations(%rip), %esi
    000021c9: 	movq	%rax, start_time(%rip)
    000021d0: 	testl	%esi, %esi
    000021d2: 	jle	.Ltmp3785 # Offset: 8658
    000021d8: 	movdqa	DATAat0x57c00(%rip), %xmm3
    000021e0: 	movl	$0x0, 0x20(%rsp)
    000021e8: 	leaq	0x2020(%rsp), %rbx
    000021f0: 	movaps	%xmm3, 0x10(%rsp)
    000021f5: 	movdqa	DATAat0x57f30(%rip), %xmm3
    000021fd: 	movaps	%xmm3, (%rsp)
    00002201: 	nopl	(%rax) # Size: 7
.Ltmp3788:
    00002208: 	pxor	%xmm1, %xmm1
    0000220c: 	movq	%rbp, %rax
    0000220f: 	movdqa	%xmm1, %xmm3
    00002213: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3786:
    00002218: 	movdqa	%xmm3, %xmm2
    0000221c: 	movdqa	(%rax), %xmm0
    00002220: 	movdqa	(%rsp), %xmm6
    00002225: 	addq	$0x10, %rax
    00002229: 	pcmpgtb	-0x10(%rax), %xmm2
    0000222e: 	psubb	%xmm2, %xmm0
    00002232: 	psraw	$0x1, %xmm0
    00002237: 	pand	0x10(%rsp), %xmm0
    0000223d: 	pxor	%xmm6, %xmm0
    00002241: 	psubb	%xmm6, %xmm0
    00002245: 	paddb	%xmm0, %xmm1
    00002249: 	cmpq	%rax, %rbx
    0000224c: 	jne	.Ltmp3786 # Offset: 8780
    0000224e: 	cvttsd2si	init_value(%rip), %ecx
    00002256: 	movdqa	%xmm1, %xmm0
    0000225a: 	psrldq	$0x8, %xmm0
    0000225f: 	paddb	%xmm0, %xmm1
    00002263: 	psadbw	%xmm3, %xmm1
    00002267: 	movl	%ecx, %edx
    00002269: 	movd	%xmm1, %eax
    0000226d: 	shrb	$0x7, %dl
    00002270: 	addl	%ecx, %edx
    00002272: 	sarb	%dl
    00002274: 	shll	$0x6, %edx
    00002277: 	cmpb	%al, %dl
    00002279: 	je	.Ltmp3787 # Offset: 8825
    0000227b: 	movl	current_test(%rip), %edx
    00002281: 	leaq	DATAat0x571d0(%rip), %rsi
    00002288: 	movl	$0x1, %edi
    0000228d: 	xorl	%eax, %eax
    0000228f: 	callq	__printf_chk@PLT # Offset: 8847
    00002294: 	movl	iterations(%rip), %esi
.Ltmp3787:
    0000229a: 	addl	$0x1, 0x20(%rsp)
    0000229f: 	movl	0x20(%rsp), %eax
    000022a3: 	cmpl	%esi, %eax
    000022a5: 	jl	.Ltmp3788 # Offset: 8869
.Ltmp3785:
    000022ab: 	movq	%r12, %rsi
    000022ae: 	movq	%r15, %rdi
    000022b1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8881
    000022b6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000022bd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000022c4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000022cb: 	je	.Ltmp3789 # Offset: 8907
.Ltmp4013:
    000022d1: 	movq	-0x20(%rax), %rbx
    000022d5: 	callq	clock@PLT # Offset: 8917
    000022da: 	pxor	%xmm0, %xmm0
    000022de: 	movq	%rax, end_time(%rip)
    000022e5: 	movq	%rbx, %rdi
    000022e8: 	subq	start_time(%rip), %rax
    000022ef: 	cvtsi2sd	%rax, %xmm0
    000022f4: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000022fc: 	callq	_Z13record_resultdPKc # Offset: 8956
    00002301: 	movq	0xc0(%rsp), %rdi
    00002309: 	cmpq	%r13, %rdi
    0000230c: 	je	.Ltmp3790 # Offset: 8972
    0000230e: 	movq	0xd0(%rsp), %rax
    00002316: 	leaq	0x1(%rax), %rsi
    0000231a: 	callq	_ZdlPvm@PLT # Offset: 8986
.Ltmp3790:
    0000231f: 	leaq	DATAat0x57498(%rip), %rdx
    00002326: 	movq	%r14, %rsi
    00002329: 	movq	%r12, %rdi
    0000232c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9004
    00002331: 	movq	%r12, %rdx
    00002334: 	movl	$0x2, %esi
    00002339: 	movq	%rbp, %rdi
    0000233c: 	callq	"_Z14test_variable1Ia22custom_divide_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 9020
    00002341: 	movq	0xc0(%rsp), %rdi
    00002349: 	cmpq	%r13, %rdi
    0000234c: 	je	.Ltmp3791 # Offset: 9036
    0000234e: 	movq	0xd0(%rsp), %rax
    00002356: 	leaq	0x1(%rax), %rsi
    0000235a: 	callq	_ZdlPvm@PLT # Offset: 9050
.Ltmp3791:
    0000235f: 	leaq	DATAat0x574ae(%rip), %rdx
    00002366: 	movq	%r14, %rsi
    00002369: 	movq	%r12, %rdi
    0000236c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9068
    00002371: 	callq	clock@PLT # Offset: 9073
    00002376: 	movl	iterations(%rip), %esi
    0000237c: 	movq	%rax, start_time(%rip)
    00002383: 	testl	%esi, %esi
    00002385: 	jle	.Ltmp3792 # Offset: 9093
    0000238b: 	movdqa	DATAat0x57c00(%rip), %xmm3
    00002393: 	movl	$0x0, 0x20(%rsp)
    0000239b: 	leaq	0x2020(%rsp), %rbx
    000023a3: 	movaps	%xmm3, 0x10(%rsp)
    000023a8: 	movdqa	DATAat0x57f30(%rip), %xmm3
    000023b0: 	movaps	%xmm3, (%rsp)
    000023b4: 	nopl	(%rax) # Size: 4
.Ltmp3795:
    000023b8: 	pxor	%xmm1, %xmm1
    000023bc: 	movq	%rbp, %rax
    000023bf: 	movdqa	%xmm1, %xmm3
    000023c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3793:
    000023c8: 	movdqa	%xmm3, %xmm2
    000023cc: 	movdqa	(%rax), %xmm0
    000023d0: 	movdqa	(%rsp), %xmm5
    000023d5: 	addq	$0x10, %rax
    000023d9: 	pcmpgtb	-0x10(%rax), %xmm2
    000023de: 	psubb	%xmm2, %xmm0
    000023e2: 	psraw	$0x1, %xmm0
    000023e7: 	pand	0x10(%rsp), %xmm0
    000023ed: 	pxor	%xmm5, %xmm0
    000023f1: 	psubb	%xmm5, %xmm0
    000023f5: 	paddb	%xmm0, %xmm1
    000023f9: 	cmpq	%rbx, %rax
    000023fc: 	jne	.Ltmp3793 # Offset: 9212
    000023fe: 	cvttsd2si	init_value(%rip), %ecx
    00002406: 	movdqa	%xmm1, %xmm0
    0000240a: 	psrldq	$0x8, %xmm0
    0000240f: 	paddb	%xmm0, %xmm1
    00002413: 	psadbw	%xmm3, %xmm1
    00002417: 	movl	%ecx, %edx
    00002419: 	movd	%xmm1, %eax
    0000241d: 	shrb	$0x7, %dl
    00002420: 	addl	%ecx, %edx
    00002422: 	sarb	%dl
    00002424: 	shll	$0x6, %edx
    00002427: 	cmpb	%al, %dl
    00002429: 	je	.Ltmp3794 # Offset: 9257
    0000242b: 	movl	current_test(%rip), %edx
    00002431: 	leaq	DATAat0x571d0(%rip), %rsi
    00002438: 	movl	$0x1, %edi
    0000243d: 	xorl	%eax, %eax
    0000243f: 	callq	__printf_chk@PLT # Offset: 9279
    00002444: 	movl	iterations(%rip), %esi
.Ltmp3794:
    0000244a: 	addl	$0x1, 0x20(%rsp)
    0000244f: 	movl	0x20(%rsp), %eax
    00002453: 	cmpl	%esi, %eax
    00002455: 	jl	.Ltmp3795 # Offset: 9301
.Ltmp3792:
    0000245b: 	movq	%r12, %rsi
    0000245e: 	movq	%r15, %rdi
    00002461: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9313
    00002466: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000246d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002474: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000247b: 	je	.Ltmp3796 # Offset: 9339
.Ltmp4012:
    00002481: 	movq	-0x20(%rax), %rbx
    00002485: 	callq	clock@PLT # Offset: 9349
    0000248a: 	pxor	%xmm0, %xmm0
    0000248e: 	movq	%rax, end_time(%rip)
    00002495: 	movq	%rbx, %rdi
    00002498: 	subq	start_time(%rip), %rax
    0000249f: 	cvtsi2sd	%rax, %xmm0
    000024a4: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000024ac: 	callq	_Z13record_resultdPKc # Offset: 9388
    000024b1: 	movq	0xc0(%rsp), %rdi
    000024b9: 	cmpq	%r13, %rdi
    000024bc: 	je	.Ltmp3797 # Offset: 9404
    000024be: 	movq	0xd0(%rsp), %rax
    000024c6: 	leaq	0x1(%rax), %rsi
    000024ca: 	callq	_ZdlPvm@PLT # Offset: 9418
.Ltmp3797:
    000024cf: 	leaq	DATAat0x574c4(%rip), %rdx
    000024d6: 	movq	%r14, %rsi
    000024d9: 	movq	%r12, %rdi
    000024dc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9436
    000024e1: 	callq	clock@PLT # Offset: 9441
    000024e6: 	movl	iterations(%rip), %ecx
    000024ec: 	movq	%rax, start_time(%rip)
    000024f3: 	testl	%ecx, %ecx
    000024f5: 	jle	.Ltmp3798 # Offset: 9461
    000024fb: 	movdqa	DATAat0x57d40(%rip), %xmm3
    00002503: 	movl	$0x0, 0x10(%rsp)
    0000250b: 	leaq	0x2020(%rsp), %rbx
    00002513: 	movaps	%xmm3, (%rsp)
    00002517: 	movdqa	DATAat0x57f40(%rip), %xmm3
    0000251f: 	movaps	%xmm3, 0x20(%rsp)
    00002524: 	nopl	(%rax) # Size: 4
.Ltmp3801:
    00002528: 	movq	%rbp, %rax
    0000252b: 	pxor	%xmm1, %xmm1
    0000252f: 	nop # Size: 1
.Ltmp3799:
    00002530: 	movdqa	(%rax), %xmm0
    00002534: 	movdqa	0x20(%rsp), %xmm4
    0000253a: 	addq	$0x10, %rax
    0000253e: 	psraw	$0x3, %xmm0
    00002543: 	pand	(%rsp), %xmm0
    00002548: 	pxor	%xmm4, %xmm0
    0000254c: 	psubb	%xmm4, %xmm0
    00002550: 	paddb	%xmm0, %xmm1
    00002554: 	cmpq	%rbx, %rax
    00002557: 	jne	.Ltmp3799 # Offset: 9559
    00002559: 	cvttsd2si	init_value(%rip), %edx
    00002561: 	movdqa	%xmm1, %xmm0
    00002565: 	psrldq	$0x8, %xmm0
    0000256a: 	paddb	%xmm0, %xmm1
    0000256e: 	pxor	%xmm0, %xmm0
    00002572: 	psadbw	%xmm0, %xmm1
    00002576: 	sarb	$0x3, %dl
    00002579: 	movd	%xmm1, %eax
    0000257d: 	shll	$0x6, %edx
    00002580: 	cmpb	%al, %dl
    00002582: 	je	.Ltmp3800 # Offset: 9602
    00002584: 	movl	current_test(%rip), %edx
    0000258a: 	leaq	DATAat0x571d0(%rip), %rsi
    00002591: 	movl	$0x1, %edi
    00002596: 	xorl	%eax, %eax
    00002598: 	callq	__printf_chk@PLT # Offset: 9624
    0000259d: 	movl	iterations(%rip), %ecx
.Ltmp3800:
    000025a3: 	addl	$0x1, 0x10(%rsp)
    000025a8: 	movl	0x10(%rsp), %eax
    000025ac: 	cmpl	%ecx, %eax
    000025ae: 	jl	.Ltmp3801 # Offset: 9646
.Ltmp3798:
    000025b4: 	movq	%r12, %rsi
    000025b7: 	movq	%r15, %rdi
    000025ba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9658
    000025bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000025c6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000025cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000025d4: 	je	.Ltmp3802 # Offset: 9684
.Ltmp4011:
    000025da: 	movq	-0x20(%rax), %rbx
    000025de: 	callq	clock@PLT # Offset: 9694
    000025e3: 	pxor	%xmm0, %xmm0
    000025e7: 	movq	%rax, end_time(%rip)
    000025ee: 	movq	%rbx, %rdi
    000025f1: 	subq	start_time(%rip), %rax
    000025f8: 	cvtsi2sd	%rax, %xmm0
    000025fd: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002605: 	callq	_Z13record_resultdPKc # Offset: 9733
    0000260a: 	movq	0xc0(%rsp), %rdi
    00002612: 	cmpq	%r13, %rdi
    00002615: 	je	.Ltmp3803 # Offset: 9749
    00002617: 	movq	0xd0(%rsp), %rax
    0000261f: 	leaq	0x1(%rax), %rsi
    00002623: 	callq	_ZdlPvm@PLT # Offset: 9763
.Ltmp3803:
    00002628: 	leaq	DATAat0x579e8(%rip), %rdx
    0000262f: 	movq	%r14, %rsi
    00002632: 	movq	%r12, %rdi
    00002635: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9781
    0000263a: 	callq	clock@PLT # Offset: 9786
    0000263f: 	movl	iterations(%rip), %esi
    00002645: 	movq	%rax, start_time(%rip)
    0000264c: 	testl	%esi, %esi
    0000264e: 	jle	.Ltmp3804 # Offset: 9806
    00002654: 	movdqa	DATAat0x57be0(%rip), %xmm3
    0000265c: 	movl	$0x0, 0x10(%rsp)
    00002664: 	leaq	0x2020(%rsp), %rbx
    0000266c: 	movaps	%xmm3, 0x30(%rsp)
    00002671: 	movdqa	DATAat0x57d40(%rip), %xmm3
    00002679: 	movaps	%xmm3, (%rsp)
    0000267d: 	movdqa	DATAat0x57f40(%rip), %xmm3
    00002685: 	movaps	%xmm3, 0x20(%rsp)
    0000268a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3808:
    00002690: 	pxor	%xmm4, %xmm4
    00002694: 	pxor	%xmm6, %xmm6
    00002698: 	pxor	%xmm3, %xmm3
    0000269c: 	movq	%rbp, %rax
    0000269f: 	movdqa	%xmm4, %xmm5
    000026a3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3805:
    000026a8: 	movdqa	%xmm5, %xmm7
    000026ac: 	movdqa	%xmm6, %xmm2
    000026b0: 	movdqa	%xmm3, %xmm1
    000026b4: 	addq	$0x10, %rax
    000026b8: 	movdqa	-0x10(%rax), %xmm8
    000026be: 	pcmpgtb	%xmm8, %xmm7
    000026c3: 	movdqa	%xmm8, %xmm0
    000026c8: 	movdqa	%xmm8, %xmm9
    000026cd: 	punpcklbw	%xmm7, %xmm0
    000026d1: 	punpckhbw	%xmm7, %xmm9
    000026d6: 	pcmpgtw	%xmm0, %xmm2
    000026da: 	movdqa	%xmm0, %xmm10
    000026df: 	punpcklwd	%xmm2, %xmm10
    000026e4: 	punpckhwd	%xmm2, %xmm0
    000026e8: 	movdqa	%xmm3, %xmm2
    000026ec: 	psubd	%xmm0, %xmm2
    000026f0: 	psubd	%xmm10, %xmm1
    000026f5: 	movdqa	%xmm6, %xmm10
    000026fa: 	movdqa	%xmm1, %xmm0
    000026fe: 	pcmpgtw	%xmm9, %xmm10
    00002703: 	punpcklwd	%xmm2, %xmm1
    00002707: 	punpckhwd	%xmm2, %xmm0
    0000270b: 	movdqa	%xmm1, %xmm2
    0000270f: 	punpckhwd	%xmm0, %xmm2
    00002713: 	punpcklwd	%xmm0, %xmm1
    00002717: 	movdqa	%xmm3, %xmm0
    0000271b: 	punpcklwd	%xmm2, %xmm1
    0000271f: 	movdqa	%xmm1, %xmm2
    00002723: 	movdqa	%xmm9, %xmm1
    00002728: 	punpcklwd	%xmm10, %xmm1
    0000272d: 	psraw	$0x3, %xmm2
    00002732: 	psubd	%xmm1, %xmm0
    00002736: 	movdqa	%xmm9, %xmm1
    0000273b: 	movdqa	%xmm3, %xmm9
    00002740: 	punpckhwd	%xmm10, %xmm1
    00002745: 	psubd	%xmm1, %xmm9
    0000274a: 	movdqa	%xmm0, %xmm1
    0000274e: 	punpcklwd	%xmm9, %xmm0
    00002753: 	punpckhwd	%xmm9, %xmm1
    00002758: 	movdqa	%xmm0, %xmm9
    0000275d: 	punpcklwd	%xmm1, %xmm0
    00002761: 	punpckhwd	%xmm1, %xmm9
    00002766: 	movdqa	0x30(%rsp), %xmm1
    0000276c: 	punpcklwd	%xmm9, %xmm0
    00002771: 	psraw	$0x3, %xmm0
    00002776: 	pand	%xmm1, %xmm2
    0000277a: 	pand	%xmm1, %xmm0
    0000277e: 	movdqa	%xmm5, %xmm1
    00002782: 	packuswb	%xmm0, %xmm2
    00002786: 	movdqa	%xmm8, %xmm0
    0000278b: 	psubb	%xmm2, %xmm1
    0000278f: 	psraw	$0x3, %xmm0
    00002794: 	movdqa	0x20(%rsp), %xmm2
    0000279a: 	pand	(%rsp), %xmm0
    0000279f: 	pxor	%xmm2, %xmm0
    000027a3: 	psubb	%xmm2, %xmm0
    000027a7: 	movdqa	%xmm1, %xmm2
    000027ab: 	pand	%xmm7, %xmm2
    000027af: 	pandn	%xmm0, %xmm7
    000027b3: 	movdqa	%xmm7, %xmm1
    000027b7: 	por	%xmm2, %xmm1
    000027bb: 	paddb	%xmm1, %xmm4
    000027bf: 	cmpq	%rax, %rbx
    000027c2: 	jne	.Ltmp3805 # Offset: 10178
    000027c8: 	cvttsd2si	init_value(%rip), %ecx
    000027d0: 	movdqa	%xmm4, %xmm0
    000027d4: 	psrldq	$0x8, %xmm0
    000027d9: 	paddb	%xmm0, %xmm4
    000027dd: 	psadbw	%xmm5, %xmm4
    000027e1: 	movl	%ecx, %edx
    000027e3: 	movd	%xmm4, %eax
    000027e7: 	sarb	$0x3, %dl
    000027ea: 	testb	%cl, %cl
    000027ec: 	jns	.Ltmp3806 # Offset: 10220
    000027ee: 	movsbl	%cl, %edx
    000027f1: 	negl	%edx
    000027f3: 	sarl	$0x3, %edx
    000027f6: 	negl	%edx
.Ltmp3806:
    000027f8: 	shll	$0x6, %edx
    000027fb: 	cmpb	%al, %dl
    000027fd: 	je	.Ltmp3807 # Offset: 10237
    000027ff: 	movl	current_test(%rip), %edx
    00002805: 	leaq	DATAat0x571d0(%rip), %rsi
    0000280c: 	movl	$0x1, %edi
    00002811: 	xorl	%eax, %eax
    00002813: 	callq	__printf_chk@PLT # Offset: 10259
    00002818: 	movl	iterations(%rip), %esi
.Ltmp3807:
    0000281e: 	addl	$0x1, 0x10(%rsp)
    00002823: 	movl	0x10(%rsp), %eax
    00002827: 	cmpl	%esi, %eax
    00002829: 	jl	.Ltmp3808 # Offset: 10281
.Ltmp3804:
    0000282f: 	movq	%r12, %rsi
    00002832: 	movq	%r15, %rdi
    00002835: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10293
    0000283a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002841: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002848: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000284f: 	je	.Ltmp3809 # Offset: 10319
.Ltmp4010:
    00002855: 	movq	-0x20(%rax), %rbx
    00002859: 	callq	clock@PLT # Offset: 10329
    0000285e: 	pxor	%xmm0, %xmm0
    00002862: 	movq	%rax, end_time(%rip)
    00002869: 	movq	%rbx, %rdi
    0000286c: 	subq	start_time(%rip), %rax
    00002873: 	cvtsi2sd	%rax, %xmm0
    00002878: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002880: 	callq	_Z13record_resultdPKc # Offset: 10368
    00002885: 	movq	0xc0(%rsp), %rdi
    0000288d: 	cmpq	%r13, %rdi
    00002890: 	je	.Ltmp3810 # Offset: 10384
    00002892: 	movq	0xd0(%rsp), %rax
    0000289a: 	leaq	0x1(%rax), %rsi
    0000289e: 	callq	_ZdlPvm@PLT # Offset: 10398
.Ltmp3810:
    000028a3: 	leaq	DATAat0x574d6(%rip), %rdx
    000028aa: 	movq	%r14, %rsi
    000028ad: 	movq	%r12, %rdi
    000028b0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10416
    000028b5: 	movq	%r12, %rdx
    000028b8: 	movl	$0x8, %esi
    000028bd: 	movq	%rbp, %rdi
    000028c0: 	callq	"_Z14test_variable1Ia22custom_divide_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 10432
    000028c5: 	movq	0xc0(%rsp), %rdi
    000028cd: 	cmpq	%r13, %rdi
    000028d0: 	je	.Ltmp3811 # Offset: 10448
    000028d2: 	movq	0xd0(%rsp), %rax
    000028da: 	leaq	0x1(%rax), %rsi
    000028de: 	callq	_ZdlPvm@PLT # Offset: 10462
.Ltmp3811:
    000028e3: 	leaq	DATAat0x574ec(%rip), %rdx
    000028ea: 	movq	%r14, %rsi
    000028ed: 	movq	%r12, %rdi
    000028f0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10480
    000028f5: 	callq	clock@PLT # Offset: 10485
    000028fa: 	movl	iterations(%rip), %esi
    00002900: 	movq	%rax, start_time(%rip)
    00002907: 	testl	%esi, %esi
    00002909: 	jle	.Ltmp3812 # Offset: 10505
    0000290f: 	movdqa	DATAat0x57d40(%rip), %xmm3
    00002917: 	movl	$0x0, 0x30(%rsp)
    0000291f: 	leaq	0x2020(%rsp), %rbx
    00002927: 	movaps	%xmm3, (%rsp)
    0000292b: 	movdqa	DATAat0x57f40(%rip), %xmm3
    00002933: 	movaps	%xmm3, 0x20(%rsp)
    00002938: 	movdqa	DATAat0x57bf0(%rip), %xmm3
    00002940: 	movaps	%xmm3, 0x10(%rsp)
    00002945: 	nopl	(%rax) # Size: 3
.Ltmp3815:
    00002948: 	pxor	%xmm1, %xmm1
    0000294c: 	movq	%rbp, %rax
    0000294f: 	movdqa	%xmm1, %xmm2
    00002953: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3813:
    00002958: 	movdqa	%xmm2, %xmm0
    0000295c: 	movdqa	0x20(%rsp), %xmm6
    00002962: 	addq	$0x10, %rax
    00002966: 	pcmpgtb	-0x10(%rax), %xmm0
    0000296b: 	pand	0x10(%rsp), %xmm0
    00002971: 	paddb	-0x10(%rax), %xmm0
    00002976: 	psraw	$0x3, %xmm0
    0000297b: 	pand	(%rsp), %xmm0
    00002980: 	pxor	%xmm6, %xmm0
    00002984: 	psubb	%xmm6, %xmm0
    00002988: 	paddb	%xmm0, %xmm1
    0000298c: 	cmpq	%rbx, %rax
    0000298f: 	jne	.Ltmp3813 # Offset: 10639
    00002991: 	cvttsd2si	init_value(%rip), %ecx
    00002999: 	movdqa	%xmm1, %xmm0
    0000299d: 	psrldq	$0x8, %xmm0
    000029a2: 	paddb	%xmm0, %xmm1
    000029a6: 	psadbw	%xmm2, %xmm1
    000029aa: 	testb	%cl, %cl
    000029ac: 	leal	0x7(%rcx), %edx
    000029af: 	movd	%xmm1, %eax
    000029b3: 	cmovnsl	%ecx, %edx
    000029b6: 	sarb	$0x3, %dl
    000029b9: 	shll	$0x6, %edx
    000029bc: 	cmpb	%al, %dl
    000029be: 	je	.Ltmp3814 # Offset: 10686
    000029c0: 	movl	current_test(%rip), %edx
    000029c6: 	leaq	DATAat0x571d0(%rip), %rsi
    000029cd: 	movl	$0x1, %edi
    000029d2: 	xorl	%eax, %eax
    000029d4: 	callq	__printf_chk@PLT # Offset: 10708
    000029d9: 	movl	iterations(%rip), %esi
.Ltmp3814:
    000029df: 	addl	$0x1, 0x30(%rsp)
    000029e4: 	movl	0x30(%rsp), %eax
    000029e8: 	cmpl	%esi, %eax
    000029ea: 	jl	.Ltmp3815 # Offset: 10730
.Ltmp3812:
    000029f0: 	movq	%r12, %rsi
    000029f3: 	movq	%r15, %rdi
    000029f6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10742
    000029fb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002a02: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002a09: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002a10: 	je	.Ltmp3816 # Offset: 10768
.Ltmp4009:
    00002a16: 	movq	-0x20(%rax), %rbx
    00002a1a: 	callq	clock@PLT # Offset: 10778
    00002a1f: 	pxor	%xmm0, %xmm0
    00002a23: 	movq	%rax, end_time(%rip)
    00002a2a: 	movq	%rbx, %rdi
    00002a2d: 	subq	start_time(%rip), %rax
    00002a34: 	cvtsi2sd	%rax, %xmm0
    00002a39: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002a41: 	callq	_Z13record_resultdPKc # Offset: 10817
    00002a46: 	movq	0xc0(%rsp), %rdi
    00002a4e: 	cmpq	%r13, %rdi
    00002a51: 	je	.Ltmp3817 # Offset: 10833
    00002a53: 	movq	0xd0(%rsp), %rax
    00002a5b: 	leaq	0x1(%rax), %rsi
    00002a5f: 	callq	_ZdlPvm@PLT # Offset: 10847
.Ltmp3817:
    00002a64: 	leaq	DATAat0x57502(%rip), %rdx
    00002a6b: 	movq	%r14, %rsi
    00002a6e: 	movq	%r12, %rdi
    00002a71: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10865
    00002a76: 	callq	clock@PLT # Offset: 10870
    00002a7b: 	movl	iterations(%rip), %ecx
    00002a81: 	movq	%rax, start_time(%rip)
    00002a88: 	testl	%ecx, %ecx
    00002a8a: 	jle	.Ltmp3818 # Offset: 10890
    00002a90: 	movdqa	DATAat0x57c10(%rip), %xmm7
    00002a98: 	movdqa	DATAat0x57d00(%rip), %xmm3
    00002aa0: 	movl	$0x0, 0x10(%rsp)
    00002aa8: 	leaq	0x2020(%rsp), %rbx
    00002ab0: 	movaps	%xmm7, (%rsp)
    00002ab4: 	movaps	%xmm3, 0x20(%rsp)
    00002ab9: 	nopl	(%rax) # Size: 7
.Ltmp3821:
    00002ac0: 	movq	%rbp, %rax
    00002ac3: 	pxor	%xmm1, %xmm1
    00002ac7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3819:
    00002ad0: 	movdqa	(%rax), %xmm0
    00002ad4: 	movdqa	0x20(%rsp), %xmm5
    00002ada: 	addq	$0x10, %rax
    00002ade: 	psraw	$0x6, %xmm0
    00002ae3: 	pand	(%rsp), %xmm0
    00002ae8: 	pxor	%xmm5, %xmm0
    00002aec: 	psubb	%xmm5, %xmm0
    00002af0: 	paddb	%xmm0, %xmm1
    00002af4: 	cmpq	%rax, %rbx
    00002af7: 	jne	.Ltmp3819 # Offset: 10999
    00002af9: 	movdqa	%xmm1, %xmm0
    00002afd: 	cvttsd2si	init_value(%rip), %edx
    00002b05: 	psrldq	$0x8, %xmm0
    00002b0a: 	paddb	%xmm0, %xmm1
    00002b0e: 	pxor	%xmm0, %xmm0
    00002b12: 	psadbw	%xmm0, %xmm1
    00002b16: 	movd	%xmm1, %eax
    00002b1a: 	andl	$-0x40, %edx
    00002b1d: 	cmpb	%al, %dl
    00002b1f: 	je	.Ltmp3820 # Offset: 11039
    00002b21: 	movl	current_test(%rip), %edx
    00002b27: 	leaq	DATAat0x571d0(%rip), %rsi
    00002b2e: 	movl	$0x1, %edi
    00002b33: 	xorl	%eax, %eax
    00002b35: 	callq	__printf_chk@PLT # Offset: 11061
    00002b3a: 	movl	iterations(%rip), %ecx
.Ltmp3820:
    00002b40: 	addl	$0x1, 0x10(%rsp)
    00002b45: 	movl	0x10(%rsp), %eax
    00002b49: 	cmpl	%ecx, %eax
    00002b4b: 	jl	.Ltmp3821 # Offset: 11083
.Ltmp3818:
    00002b51: 	movq	%r12, %rsi
    00002b54: 	movq	%r15, %rdi
    00002b57: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11095
    00002b5c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002b63: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002b6a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002b71: 	je	.Ltmp3822 # Offset: 11121
.Ltmp4008:
    00002b77: 	movq	-0x20(%rax), %rbx
    00002b7b: 	callq	clock@PLT # Offset: 11131
    00002b80: 	pxor	%xmm0, %xmm0
    00002b84: 	movq	%rax, end_time(%rip)
    00002b8b: 	movq	%rbx, %rdi
    00002b8e: 	subq	start_time(%rip), %rax
    00002b95: 	cvtsi2sd	%rax, %xmm0
    00002b9a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002ba2: 	callq	_Z13record_resultdPKc # Offset: 11170
    00002ba7: 	movq	0xc0(%rsp), %rdi
    00002baf: 	cmpq	%r13, %rdi
    00002bb2: 	je	.Ltmp3823 # Offset: 11186
    00002bb4: 	movq	0xd0(%rsp), %rax
    00002bbc: 	leaq	0x1(%rax), %rsi
    00002bc0: 	callq	_ZdlPvm@PLT # Offset: 11200
.Ltmp3823:
    00002bc5: 	leaq	DATAat0x57a08(%rip), %rdx
    00002bcc: 	movq	%r14, %rsi
    00002bcf: 	movq	%r12, %rdi
    00002bd2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11218
    00002bd7: 	movq	%r12, %rsi
    00002bda: 	movq	%rbp, %rdi
    00002bdd: 	callq	"_Z13test_constantIa24shift_divide_toward_zeroIaLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 11229
    00002be2: 	movq	0xc0(%rsp), %rdi
    00002bea: 	cmpq	%r13, %rdi
    00002bed: 	je	.Ltmp3824 # Offset: 11245
    00002bef: 	movq	0xd0(%rsp), %rax
    00002bf7: 	leaq	0x1(%rax), %rsi
    00002bfb: 	callq	_ZdlPvm@PLT # Offset: 11259
.Ltmp3824:
    00002c00: 	leaq	DATAat0x57514(%rip), %rdx
    00002c07: 	movq	%r14, %rsi
    00002c0a: 	movq	%r12, %rdi
    00002c0d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11277
    00002c12: 	movq	%r12, %rdx
    00002c15: 	movl	$0x40, %esi
    00002c1a: 	movq	%rbp, %rdi
    00002c1d: 	callq	"_Z14test_variable1Ia22custom_divide_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 11293
    00002c22: 	movq	0xc0(%rsp), %rdi
    00002c2a: 	cmpq	%r13, %rdi
    00002c2d: 	je	.Ltmp3825 # Offset: 11309
    00002c2f: 	movq	0xd0(%rsp), %rax
    00002c37: 	leaq	0x1(%rax), %rsi
    00002c3b: 	callq	_ZdlPvm@PLT # Offset: 11323
.Ltmp3825:
    00002c40: 	leaq	DATAat0x5752b(%rip), %rdx
    00002c47: 	movq	%r14, %rsi
    00002c4a: 	movq	%r12, %rdi
    00002c4d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11341
    00002c52: 	callq	clock@PLT # Offset: 11346
    00002c57: 	movl	iterations(%rip), %esi
    00002c5d: 	movq	%rax, start_time(%rip)
    00002c64: 	testl	%esi, %esi
    00002c66: 	jle	.Ltmp3826 # Offset: 11366
    00002c6c: 	movdqa	DATAat0x57c10(%rip), %xmm7
    00002c74: 	movdqa	DATAat0x57d00(%rip), %xmm3
    00002c7c: 	movl	$0x0, 0x30(%rsp)
    00002c84: 	leaq	0x2020(%rsp), %rbx
    00002c8c: 	movaps	%xmm7, (%rsp)
    00002c90: 	movdqa	DATAat0x57d10(%rip), %xmm7
    00002c98: 	movaps	%xmm3, 0x20(%rsp)
    00002c9d: 	movaps	%xmm7, 0x10(%rsp)
    00002ca2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3829:
    00002ca8: 	pxor	%xmm1, %xmm1
    00002cac: 	movq	%rbp, %rax
    00002caf: 	movdqa	%xmm1, %xmm2
    00002cb3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3827:
    00002cb8: 	movdqa	%xmm2, %xmm0
    00002cbc: 	movdqa	0x20(%rsp), %xmm4
    00002cc2: 	addq	$0x10, %rax
    00002cc6: 	pcmpgtb	-0x10(%rax), %xmm0
    00002ccb: 	pand	0x10(%rsp), %xmm0
    00002cd1: 	paddb	-0x10(%rax), %xmm0
    00002cd6: 	psraw	$0x6, %xmm0
    00002cdb: 	pand	(%rsp), %xmm0
    00002ce0: 	pxor	%xmm4, %xmm0
    00002ce4: 	psubb	%xmm4, %xmm0
    00002ce8: 	paddb	%xmm0, %xmm1
    00002cec: 	cmpq	%rbx, %rax
    00002cef: 	jne	.Ltmp3827 # Offset: 11503
    00002cf1: 	cvttsd2si	init_value(%rip), %ecx
    00002cf9: 	movdqa	%xmm1, %xmm0
    00002cfd: 	psrldq	$0x8, %xmm0
    00002d02: 	paddb	%xmm0, %xmm1
    00002d06: 	psadbw	%xmm2, %xmm1
    00002d0a: 	testb	%cl, %cl
    00002d0c: 	leal	0x3f(%rcx), %edx
    00002d0f: 	movd	%xmm1, %eax
    00002d13: 	cmovnsl	%ecx, %edx
    00002d16: 	andl	$-0x40, %edx
    00002d19: 	cmpb	%al, %dl
    00002d1b: 	je	.Ltmp3828 # Offset: 11547
    00002d1d: 	movl	current_test(%rip), %edx
    00002d23: 	leaq	DATAat0x571d0(%rip), %rsi
    00002d2a: 	movl	$0x1, %edi
    00002d2f: 	xorl	%eax, %eax
    00002d31: 	callq	__printf_chk@PLT # Offset: 11569
    00002d36: 	movl	iterations(%rip), %esi
.Ltmp3828:
    00002d3c: 	addl	$0x1, 0x30(%rsp)
    00002d41: 	movl	0x30(%rsp), %eax
    00002d45: 	cmpl	%esi, %eax
    00002d47: 	jl	.Ltmp3829 # Offset: 11591
.Ltmp3826:
    00002d4d: 	movq	%r12, %rsi
    00002d50: 	movq	%r15, %rdi
    00002d53: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11603
    00002d58: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002d5f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002d66: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002d6d: 	je	.Ltmp3830 # Offset: 11629
.Ltmp4007:
    00002d73: 	movq	-0x20(%rax), %rbx
    00002d77: 	callq	clock@PLT # Offset: 11639
    00002d7c: 	pxor	%xmm0, %xmm0
    00002d80: 	movq	%rax, end_time(%rip)
    00002d87: 	movq	%rbx, %rdi
    00002d8a: 	subq	start_time(%rip), %rax
    00002d91: 	cvtsi2sd	%rax, %xmm0
    00002d96: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002d9e: 	callq	_Z13record_resultdPKc # Offset: 11678
    00002da3: 	movq	0xc0(%rsp), %rdi
    00002dab: 	cmpq	%r13, %rdi
    00002dae: 	je	.Ltmp3831 # Offset: 11694
    00002db0: 	movq	0xd0(%rsp), %rax
    00002db8: 	leaq	0x1(%rax), %rsi
    00002dbc: 	callq	_ZdlPvm@PLT # Offset: 11708
.Ltmp3831:
    00002dc1: 	leaq	0xa0(%rsp), %rdi
    00002dc9: 	leaq	DATAat0x57542(%rip), %rdx
    00002dd0: 	movq	%r14, %rsi
    00002dd3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11731
    00002dd8: 	movl	iterations(%rip), %edx
    00002dde: 	xorl	%r8d, %r8d
    00002de1: 	xorl	%ecx, %ecx
    00002de3: 	movl	$0x1f40, %esi
    00002de8: 	movq	0xa0(%rsp), %rdi
    00002df0: 	callq	_Z9summarizePKciiii # Offset: 11760
    00002df5: 	leaq	DATAat0x5755d(%rip), %rdx
    00002dfc: 	movq	%r14, %rsi
    00002dff: 	movq	%r12, %rdi
    00002e02: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11778
    00002e07: 	callq	clock@PLT # Offset: 11783
    00002e0c: 	movl	iterations(%rip), %ecx
    00002e12: 	movq	%rax, start_time(%rip)
    00002e19: 	testl	%ecx, %ecx
    00002e1b: 	jle	.Ltmp3832 # Offset: 11803
    00002e21: 	movdqa	DATAat0x57f20(%rip), %xmm3
    00002e29: 	movl	$0x0, 0x10(%rsp)
    00002e31: 	leaq	0x2020(%rsp), %rbx
    00002e39: 	movaps	%xmm3, (%rsp)
    00002e3d: 	nopl	(%rax) # Size: 3
.Ltmp3835:
    00002e40: 	movq	%rbp, %rax
    00002e43: 	pxor	%xmm0, %xmm0
    00002e47: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3833:
    00002e50: 	movdqa	(%rsp), %xmm1
    00002e55: 	pand	(%rax), %xmm1
    00002e59: 	addq	$0x10, %rax
    00002e5d: 	paddb	%xmm1, %xmm0
    00002e61: 	cmpq	%rax, %rbx
    00002e64: 	jne	.Ltmp3833 # Offset: 11876
    00002e66: 	cvttsd2si	init_value(%rip), %edx
    00002e6e: 	movdqa	%xmm0, %xmm1
    00002e72: 	psrldq	$0x8, %xmm1
    00002e77: 	paddb	%xmm1, %xmm0
    00002e7b: 	pxor	%xmm1, %xmm1
    00002e7f: 	psadbw	%xmm1, %xmm0
    00002e83: 	andl	$0x1, %edx
    00002e86: 	movd	%xmm0, %eax
    00002e8a: 	shll	$0x6, %edx
    00002e8d: 	cmpb	%al, %dl
    00002e8f: 	je	.Ltmp3834 # Offset: 11919
    00002e91: 	movl	current_test(%rip), %edx
    00002e97: 	leaq	DATAat0x571d0(%rip), %rsi
    00002e9e: 	movl	$0x1, %edi
    00002ea3: 	xorl	%eax, %eax
    00002ea5: 	callq	__printf_chk@PLT # Offset: 11941
    00002eaa: 	movl	iterations(%rip), %ecx
.Ltmp3834:
    00002eb0: 	addl	$0x1, 0x10(%rsp)
    00002eb5: 	movl	0x10(%rsp), %eax
    00002eb9: 	cmpl	%ecx, %eax
    00002ebb: 	jl	.Ltmp3835 # Offset: 11963
.Ltmp3832:
    00002ebd: 	movq	%r12, %rsi
    00002ec0: 	movq	%r15, %rdi
    00002ec3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11971
    00002ec8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002ecf: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002ed6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002edd: 	je	.Ltmp3836 # Offset: 11997
.Ltmp4006:
    00002ee3: 	movq	-0x20(%rax), %rbx
    00002ee7: 	callq	clock@PLT # Offset: 12007
    00002eec: 	pxor	%xmm0, %xmm0
    00002ef0: 	movq	%rax, end_time(%rip)
    00002ef7: 	movq	%rbx, %rdi
    00002efa: 	subq	start_time(%rip), %rax
    00002f01: 	cvtsi2sd	%rax, %xmm0
    00002f06: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002f0e: 	callq	_Z13record_resultdPKc # Offset: 12046
    00002f13: 	movq	0xc0(%rsp), %rdi
    00002f1b: 	cmpq	%r13, %rdi
    00002f1e: 	je	.Ltmp3837 # Offset: 12062
    00002f20: 	movq	0xd0(%rsp), %rax
    00002f28: 	leaq	0x1(%rax), %rsi
    00002f2c: 	callq	_ZdlPvm@PLT # Offset: 12076
.Ltmp3837:
    00002f31: 	leaq	DATAat0x57564(%rip), %rdx
    00002f38: 	movq	%r14, %rsi
    00002f3b: 	movq	%r12, %rdi
    00002f3e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12094
    00002f43: 	callq	clock@PLT # Offset: 12099
    00002f48: 	movl	iterations(%rip), %edi
    00002f4e: 	movl	$0x0, (%rsp)
    00002f55: 	leaq	0x2020(%rsp), %rbx
    00002f5d: 	movq	%rax, start_time(%rip)
    00002f64: 	testl	%edi, %edi
    00002f66: 	jle	.Ltmp3838 # Offset: 12134
    00002f68: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3845:
    00002f70: 	movq	%rbp, %rax
    00002f73: 	xorl	%esi, %esi
    00002f75: 	nopl	(%rax) # Size: 3
.Ltmp3841:
    00002f78: 	movzbl	(%rax), %edx
    00002f7b: 	movl	%edx, %ecx
    00002f7d: 	andl	$0x1, %ecx
    00002f80: 	testb	%dl, %dl
    00002f82: 	jns	.Ltmp3839 # Offset: 12162
    00002f84: 	testb	%cl, %cl
    00002f86: 	jne	.Ltmp3840 # Offset: 12166
.Ltmp3839:
    00002f8c: 	addq	$0x1, %rax
    00002f90: 	addl	%ecx, %esi
    00002f92: 	cmpq	%rbx, %rax
    00002f95: 	jne	.Ltmp3841 # Offset: 12181
.Ltmp3985:
    00002f97: 	cvttsd2si	init_value(%rip), %edx
    00002f9f: 	movl	%edx, %eax
    00002fa1: 	andl	$0x1, %eax
    00002fa4: 	testb	%dl, %dl
    00002fa6: 	jns	.Ltmp3842 # Offset: 12198
    00002fa8: 	testb	%al, %al
    00002faa: 	jne	.Ltmp3843 # Offset: 12202
.Ltmp3842:
    00002fb0: 	shll	$0x6, %eax
.Ltmp4034:
    00002fb3: 	cmpb	%al, %sil
    00002fb6: 	je	.Ltmp3844 # Offset: 12214
    00002fb8: 	movl	current_test(%rip), %edx
    00002fbe: 	leaq	DATAat0x571d0(%rip), %rsi
    00002fc5: 	movl	$0x1, %edi
    00002fca: 	xorl	%eax, %eax
    00002fcc: 	callq	__printf_chk@PLT # Offset: 12236
    00002fd1: 	movl	iterations(%rip), %edi
.Ltmp3844:
    00002fd7: 	addl	$0x1, (%rsp)
    00002fdb: 	movl	(%rsp), %eax
    00002fde: 	cmpl	%edi, %eax
    00002fe0: 	jl	.Ltmp3845 # Offset: 12256
.Ltmp3838:
    00002fe2: 	movq	%r12, %rsi
    00002fe5: 	movq	%r15, %rdi
    00002fe8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12264
    00002fed: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002ff4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002ffb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003002: 	je	.Ltmp3846 # Offset: 12290
.Ltmp4005:
    00003008: 	movq	-0x20(%rax), %rbx
    0000300c: 	callq	clock@PLT # Offset: 12300
    00003011: 	pxor	%xmm0, %xmm0
    00003015: 	movq	%rax, end_time(%rip)
    0000301c: 	movq	%rbx, %rdi
    0000301f: 	subq	start_time(%rip), %rax
    00003026: 	cvtsi2sd	%rax, %xmm0
    0000302b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003033: 	callq	_Z13record_resultdPKc # Offset: 12339
    00003038: 	movq	0xc0(%rsp), %rdi
    00003040: 	cmpq	%r13, %rdi
    00003043: 	je	.Ltmp3847 # Offset: 12355
    00003045: 	movq	0xd0(%rsp), %rax
    0000304d: 	leaq	0x1(%rax), %rsi
    00003051: 	callq	_ZdlPvm@PLT # Offset: 12369
.Ltmp3847:
    00003056: 	leaq	DATAat0x57575(%rip), %rdx
    0000305d: 	movq	%r14, %rsi
    00003060: 	movq	%r12, %rdi
    00003063: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12387
    00003068: 	callq	clock@PLT # Offset: 12392
    0000306d: 	movl	iterations(%rip), %esi
    00003073: 	movl	$0x0, (%rsp)
    0000307a: 	leaq	0x2020(%rsp), %rbx
    00003082: 	movq	%rax, start_time(%rip)
    00003089: 	testl	%esi, %esi
    0000308b: 	jle	.Ltmp3848 # Offset: 12427
    0000308d: 	nopl	(%rax) # Size: 3
.Ltmp3853:
    00003090: 	movq	%rbp, %rdx
    00003093: 	xorl	%ecx, %ecx
    00003095: 	nopl	(%rax) # Size: 3
.Ltmp3850:
    00003098: 	movzbl	(%rdx), %eax
    0000309b: 	testb	%al, %al
    0000309d: 	jns	.Ltmp3849 # Offset: 12445
    000030a3: 	testb	$0x1, %al
    000030a5: 	je	.Ltmp3849 # Offset: 12453
    000030ab: 	addq	$0x1, %rdx
    000030af: 	subl	$0x1, %ecx
    000030b2: 	cmpq	%rbx, %rdx
    000030b5: 	jne	.Ltmp3850 # Offset: 12469
    000030b7: 	cvttsd2si	init_value(%rip), %eax
    000030bf: 	testb	%al, %al
    000030c1: 	jns	.Ltmp3851 # Offset: 12481
.Ltmp3979:
    000030c7: 	movl	$0xffffffc0, %edx
    000030cc: 	testb	$0x1, %al
    000030ce: 	je	.Ltmp3851 # Offset: 12494
.Ltmp3980:
    000030d4: 	cmpb	%dl, %cl
    000030d6: 	je	.Ltmp3852 # Offset: 12502
    000030d8: 	movl	current_test(%rip), %edx
    000030de: 	leaq	DATAat0x571d0(%rip), %rsi
    000030e5: 	movl	$0x1, %edi
    000030ea: 	xorl	%eax, %eax
    000030ec: 	callq	__printf_chk@PLT # Offset: 12524
    000030f1: 	movl	iterations(%rip), %esi
.Ltmp3852:
    000030f7: 	addl	$0x1, (%rsp)
    000030fb: 	movl	(%rsp), %eax
    000030fe: 	cmpl	%esi, %eax
    00003100: 	jl	.Ltmp3853 # Offset: 12544
.Ltmp3848:
    00003102: 	movq	%r12, %rsi
    00003105: 	movq	%r15, %rdi
    00003108: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12552
    0000310d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003114: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000311b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003122: 	je	.Ltmp3854 # Offset: 12578
.Ltmp4004:
    00003128: 	movq	-0x20(%rax), %rbx
    0000312c: 	callq	clock@PLT # Offset: 12588
    00003131: 	pxor	%xmm0, %xmm0
    00003135: 	movq	%rax, end_time(%rip)
    0000313c: 	movq	%rbx, %rdi
    0000313f: 	subq	start_time(%rip), %rax
    00003146: 	cvtsi2sd	%rax, %xmm0
    0000314b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003153: 	callq	_Z13record_resultdPKc # Offset: 12627
    00003158: 	movq	0xc0(%rsp), %rdi
    00003160: 	cmpq	%r13, %rdi
    00003163: 	je	.Ltmp3855 # Offset: 12643
    00003165: 	movq	0xd0(%rsp), %rax
    0000316d: 	leaq	0x1(%rax), %rsi
    00003171: 	callq	_ZdlPvm@PLT # Offset: 12657
.Ltmp3855:
    00003176: 	leaq	DATAat0x57587(%rip), %rdx
    0000317d: 	movq	%r14, %rsi
    00003180: 	movq	%r12, %rdi
    00003183: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12675
    00003188: 	callq	clock@PLT # Offset: 12680
    0000318d: 	movl	iterations(%rip), %esi
    00003193: 	movq	%rax, start_time(%rip)
    0000319a: 	testl	%esi, %esi
    0000319c: 	jle	.Ltmp3856 # Offset: 12700
    000031a2: 	movdqa	DATAat0x57f20(%rip), %xmm7
    000031aa: 	movl	$0x0, 0x10(%rsp)
    000031b2: 	leaq	0x2020(%rsp), %rbx
    000031ba: 	movaps	%xmm7, (%rsp)
    000031be: 	nop # Size: 2
.Ltmp3859:
    000031c0: 	pxor	%xmm2, %xmm2
    000031c4: 	movq	%rbp, %rax
    000031c7: 	movdqa	%xmm2, %xmm3
    000031cb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3857:
    000031d0: 	movdqa	%xmm3, %xmm1
    000031d4: 	movdqa	(%rsp), %xmm6
    000031d9: 	movdqa	(%rax), %xmm0
    000031dd: 	addq	$0x10, %rax
    000031e1: 	pcmpgtb	-0x10(%rax), %xmm1
    000031e6: 	pand	%xmm6, %xmm1
    000031ea: 	paddb	%xmm1, %xmm0
    000031ee: 	pand	%xmm6, %xmm0
    000031f2: 	psubb	%xmm1, %xmm0
    000031f6: 	paddb	%xmm0, %xmm2
    000031fa: 	cmpq	%rax, %rbx
    000031fd: 	jne	.Ltmp3857 # Offset: 12797
    000031ff: 	cvttsd2si	init_value(%rip), %edx
    00003207: 	movdqa	%xmm2, %xmm0
    0000320b: 	psrldq	$0x8, %xmm0
    00003210: 	paddb	%xmm0, %xmm2
    00003214: 	psadbw	%xmm3, %xmm2
    00003218: 	movl	%edx, %ecx
    0000321a: 	movd	%xmm2, %eax
    0000321e: 	shrb	$0x7, %cl
    00003221: 	addl	%ecx, %edx
    00003223: 	andl	$0x1, %edx
    00003226: 	subl	%ecx, %edx
    00003228: 	shll	$0x6, %edx
    0000322b: 	cmpb	%al, %dl
    0000322d: 	je	.Ltmp3858 # Offset: 12845
    0000322f: 	movl	current_test(%rip), %edx
    00003235: 	leaq	DATAat0x571d0(%rip), %rsi
    0000323c: 	movl	$0x1, %edi
    00003241: 	xorl	%eax, %eax
    00003243: 	callq	__printf_chk@PLT # Offset: 12867
    00003248: 	movl	iterations(%rip), %esi
.Ltmp3858:
    0000324e: 	addl	$0x1, 0x10(%rsp)
    00003253: 	movl	0x10(%rsp), %eax
    00003257: 	cmpl	%esi, %eax
    00003259: 	jl	.Ltmp3859 # Offset: 12889
.Ltmp3856:
    0000325f: 	movq	%r12, %rsi
    00003262: 	movq	%r15, %rdi
    00003265: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12901
    0000326a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003271: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003278: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000327f: 	je	.Ltmp3860 # Offset: 12927
.Ltmp4003:
    00003285: 	movq	-0x20(%rax), %rbx
    00003289: 	callq	clock@PLT # Offset: 12937
    0000328e: 	pxor	%xmm0, %xmm0
    00003292: 	movq	%rax, end_time(%rip)
    00003299: 	movq	%rbx, %rdi
    0000329c: 	subq	start_time(%rip), %rax
    000032a3: 	cvtsi2sd	%rax, %xmm0
    000032a8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000032b0: 	callq	_Z13record_resultdPKc # Offset: 12976
    000032b5: 	movq	0xc0(%rsp), %rdi
    000032bd: 	cmpq	%r13, %rdi
    000032c0: 	je	.Ltmp3861 # Offset: 12992
    000032c2: 	movq	0xd0(%rsp), %rax
    000032ca: 	leaq	0x1(%rax), %rsi
    000032ce: 	callq	_ZdlPvm@PLT # Offset: 13006
.Ltmp3861:
    000032d3: 	leaq	DATAat0x5759e(%rip), %rdx
    000032da: 	movq	%r14, %rsi
    000032dd: 	movq	%r12, %rdi
    000032e0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13024
    000032e5: 	movq	%r12, %rdx
    000032e8: 	movl	$0x2, %esi
    000032ed: 	movq	%rbp, %rdi
    000032f0: 	callq	"_Z14test_variable1Ia25custom_remainder_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 13040
    000032f5: 	movq	0xc0(%rsp), %rdi
    000032fd: 	cmpq	%r13, %rdi
    00003300: 	je	.Ltmp3862 # Offset: 13056
    00003302: 	movq	0xd0(%rsp), %rax
    0000330a: 	leaq	0x1(%rax), %rsi
    0000330e: 	callq	_ZdlPvm@PLT # Offset: 13070
.Ltmp3862:
    00003313: 	leaq	DATAat0x575b7(%rip), %rdx
    0000331a: 	movq	%r14, %rsi
    0000331d: 	movq	%r12, %rdi
    00003320: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13088
    00003325: 	callq	clock@PLT # Offset: 13093
    0000332a: 	movl	iterations(%rip), %esi
    00003330: 	movq	%rax, start_time(%rip)
    00003337: 	testl	%esi, %esi
    00003339: 	jle	.Ltmp3863 # Offset: 13113
    0000333f: 	movdqa	DATAat0x57f20(%rip), %xmm3
    00003347: 	movl	$0x0, 0x10(%rsp)
    0000334f: 	leaq	0x2020(%rsp), %rbx
    00003357: 	movaps	%xmm3, (%rsp)
    0000335b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3866:
    00003360: 	pxor	%xmm2, %xmm2
    00003364: 	movq	%rbp, %rax
    00003367: 	movdqa	%xmm2, %xmm3
    0000336b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3864:
    00003370: 	movdqa	%xmm3, %xmm1
    00003374: 	movdqa	(%rsp), %xmm5
    00003379: 	movdqa	(%rax), %xmm0
    0000337d: 	addq	$0x10, %rax
    00003381: 	pcmpgtb	-0x10(%rax), %xmm1
    00003386: 	pand	%xmm5, %xmm1
    0000338a: 	paddb	%xmm1, %xmm0
    0000338e: 	pand	%xmm5, %xmm0
    00003392: 	psubb	%xmm1, %xmm0
    00003396: 	paddb	%xmm0, %xmm2
    0000339a: 	cmpq	%rbx, %rax
    0000339d: 	jne	.Ltmp3864 # Offset: 13213
    0000339f: 	cvttsd2si	init_value(%rip), %edx
    000033a7: 	movdqa	%xmm2, %xmm0
    000033ab: 	psrldq	$0x8, %xmm0
    000033b0: 	paddb	%xmm0, %xmm2
    000033b4: 	psadbw	%xmm3, %xmm2
    000033b8: 	movl	%edx, %ecx
    000033ba: 	movd	%xmm2, %eax
    000033be: 	shrb	$0x7, %cl
    000033c1: 	addl	%ecx, %edx
    000033c3: 	andl	$0x1, %edx
    000033c6: 	subl	%ecx, %edx
    000033c8: 	shll	$0x6, %edx
    000033cb: 	cmpb	%al, %dl
    000033cd: 	je	.Ltmp3865 # Offset: 13261
    000033cf: 	movl	current_test(%rip), %edx
    000033d5: 	leaq	DATAat0x571d0(%rip), %rsi
    000033dc: 	movl	$0x1, %edi
    000033e1: 	xorl	%eax, %eax
    000033e3: 	callq	__printf_chk@PLT # Offset: 13283
    000033e8: 	movl	iterations(%rip), %esi
.Ltmp3865:
    000033ee: 	addl	$0x1, 0x10(%rsp)
    000033f3: 	movl	0x10(%rsp), %eax
    000033f7: 	cmpl	%esi, %eax
    000033f9: 	jl	.Ltmp3866 # Offset: 13305
.Ltmp3863:
    000033ff: 	movq	%r12, %rsi
    00003402: 	movq	%r15, %rdi
    00003405: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13317
    0000340a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003411: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003418: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000341f: 	je	.Ltmp3867 # Offset: 13343
.Ltmp4002:
    00003425: 	movq	-0x20(%rax), %rbx
    00003429: 	callq	clock@PLT # Offset: 13353
    0000342e: 	pxor	%xmm0, %xmm0
    00003432: 	movq	%rax, end_time(%rip)
    00003439: 	movq	%rbx, %rdi
    0000343c: 	subq	start_time(%rip), %rax
    00003443: 	cvtsi2sd	%rax, %xmm0
    00003448: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003450: 	callq	_Z13record_resultdPKc # Offset: 13392
    00003455: 	movq	0xc0(%rsp), %rdi
    0000345d: 	cmpq	%r13, %rdi
    00003460: 	je	.Ltmp3868 # Offset: 13408
    00003462: 	movq	0xd0(%rsp), %rax
    0000346a: 	leaq	0x1(%rax), %rsi
    0000346e: 	callq	_ZdlPvm@PLT # Offset: 13422
.Ltmp3868:
    00003473: 	leaq	DATAat0x575d0(%rip), %rdx
    0000347a: 	movq	%r14, %rsi
    0000347d: 	movq	%r12, %rdi
    00003480: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13440
    00003485: 	callq	clock@PLT # Offset: 13445
    0000348a: 	movl	iterations(%rip), %ecx
    00003490: 	movq	%rax, start_time(%rip)
    00003497: 	testl	%ecx, %ecx
    00003499: 	jle	.Ltmp3869 # Offset: 13465
    0000349f: 	movdqa	DATAat0x57c10(%rip), %xmm7
    000034a7: 	movl	$0x0, 0x10(%rsp)
    000034af: 	leaq	0x2020(%rsp), %rbx
    000034b7: 	movaps	%xmm7, (%rsp)
    000034bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3872:
    000034c0: 	movq	%rbp, %rax
    000034c3: 	pxor	%xmm0, %xmm0
    000034c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3870:
    000034d0: 	movdqa	(%rsp), %xmm1
    000034d5: 	pand	(%rax), %xmm1
    000034d9: 	addq	$0x10, %rax
    000034dd: 	paddb	%xmm1, %xmm0
    000034e1: 	cmpq	%rax, %rbx
    000034e4: 	jne	.Ltmp3870 # Offset: 13540
    000034e6: 	movdqa	%xmm0, %xmm1
    000034ea: 	cvttsd2si	init_value(%rip), %edx
    000034f2: 	psrldq	$0x8, %xmm1
    000034f7: 	paddb	%xmm1, %xmm0
    000034fb: 	pxor	%xmm1, %xmm1
    000034ff: 	psadbw	%xmm1, %xmm0
    00003503: 	movd	%xmm0, %eax
    00003507: 	shll	$0x6, %edx
    0000350a: 	cmpb	%al, %dl
    0000350c: 	je	.Ltmp3871 # Offset: 13580
    0000350e: 	movl	current_test(%rip), %edx
    00003514: 	leaq	DATAat0x571d0(%rip), %rsi
    0000351b: 	movl	$0x1, %edi
    00003520: 	xorl	%eax, %eax
    00003522: 	callq	__printf_chk@PLT # Offset: 13602
    00003527: 	movl	iterations(%rip), %ecx
.Ltmp3871:
    0000352d: 	addl	$0x1, 0x10(%rsp)
    00003532: 	movl	0x10(%rsp), %eax
    00003536: 	cmpl	%ecx, %eax
    00003538: 	jl	.Ltmp3872 # Offset: 13624
.Ltmp3869:
    0000353a: 	movq	%r12, %rsi
    0000353d: 	movq	%r15, %rdi
    00003540: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13632
    00003545: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000354c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003553: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000355a: 	je	.Ltmp3873 # Offset: 13658
.Ltmp4001:
    00003560: 	movq	-0x20(%rax), %rbx
    00003564: 	callq	clock@PLT # Offset: 13668
    00003569: 	pxor	%xmm0, %xmm0
    0000356d: 	movq	%rax, end_time(%rip)
    00003574: 	movq	%rbx, %rdi
    00003577: 	subq	start_time(%rip), %rax
    0000357e: 	cvtsi2sd	%rax, %xmm0
    00003583: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000358b: 	callq	_Z13record_resultdPKc # Offset: 13707
    00003590: 	movq	0xc0(%rsp), %rdi
    00003598: 	cmpq	%r13, %rdi
    0000359b: 	je	.Ltmp3874 # Offset: 13723
    0000359d: 	movq	0xd0(%rsp), %rax
    000035a5: 	leaq	0x1(%rax), %rsi
    000035a9: 	callq	_ZdlPvm@PLT # Offset: 13737
.Ltmp3874:
    000035ae: 	leaq	DATAat0x575d7(%rip), %rdx
    000035b5: 	movq	%r14, %rsi
    000035b8: 	movq	%r12, %rdi
    000035bb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13755
    000035c0: 	movq	%r12, %rsi
    000035c3: 	movq	%rbp, %rdi
    000035c6: 	callq	"_Z13test_constantIa13and_remainderIaLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 13766
    000035cb: 	movq	0xc0(%rsp), %rdi
    000035d3: 	cmpq	%r13, %rdi
    000035d6: 	je	.Ltmp3875 # Offset: 13782
    000035d8: 	movq	0xd0(%rsp), %rax
    000035e0: 	leaq	0x1(%rax), %rsi
    000035e4: 	callq	_ZdlPvm@PLT # Offset: 13796
.Ltmp3875:
    000035e9: 	leaq	DATAat0x575e8(%rip), %rdx
    000035f0: 	movq	%r14, %rsi
    000035f3: 	movq	%r12, %rdi
    000035f6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13814
    000035fb: 	movq	%r12, %rsi
    000035fe: 	movq	%rbp, %rdi
    00003601: 	callq	"_Z13test_constantIa14and_remainder2IaLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 13825
    00003606: 	movq	0xc0(%rsp), %rdi
    0000360e: 	cmpq	%r13, %rdi
    00003611: 	je	.Ltmp3876 # Offset: 13841
    00003613: 	movq	0xd0(%rsp), %rax
    0000361b: 	leaq	0x1(%rax), %rsi
    0000361f: 	callq	_ZdlPvm@PLT # Offset: 13855
.Ltmp3876:
    00003624: 	leaq	DATAat0x575fa(%rip), %rdx
    0000362b: 	movq	%r14, %rsi
    0000362e: 	movq	%r12, %rdi
    00003631: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13873
    00003636: 	callq	clock@PLT # Offset: 13878
    0000363b: 	movl	iterations(%rip), %ecx
    00003641: 	movq	%rax, start_time(%rip)
    00003648: 	testl	%ecx, %ecx
    0000364a: 	jle	.Ltmp3877 # Offset: 13898
    00003650: 	movdqa	DATAat0x57c10(%rip), %xmm3
    00003658: 	movl	$0x0, 0x10(%rsp)
    00003660: 	leaq	0x2020(%rsp), %rbx
    00003668: 	movaps	%xmm3, (%rsp)
    0000366c: 	nopl	(%rax) # Size: 4
.Ltmp3880:
    00003670: 	pxor	%xmm2, %xmm2
    00003674: 	movq	%rbp, %rax
    00003677: 	movdqa	%xmm2, %xmm3
    0000367b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3878:
    00003680: 	movdqa	%xmm3, %xmm1
    00003684: 	movdqa	(%rsp), %xmm7
    00003689: 	movdqa	(%rax), %xmm0
    0000368d: 	addq	$0x10, %rax
    00003691: 	pcmpgtb	-0x10(%rax), %xmm1
    00003696: 	pand	%xmm7, %xmm1
    0000369a: 	paddb	%xmm1, %xmm0
    0000369e: 	pand	%xmm7, %xmm0
    000036a2: 	psubb	%xmm1, %xmm0
    000036a6: 	paddb	%xmm0, %xmm2
    000036aa: 	cmpq	%rbx, %rax
    000036ad: 	jne	.Ltmp3878 # Offset: 13997
    000036af: 	movdqa	%xmm2, %xmm0
    000036b3: 	cvttsd2si	init_value(%rip), %edx
    000036bb: 	psrldq	$0x8, %xmm0
    000036c0: 	paddb	%xmm0, %xmm2
    000036c4: 	psadbw	%xmm3, %xmm2
    000036c8: 	movd	%xmm2, %eax
    000036cc: 	shll	$0x6, %edx
    000036cf: 	cmpb	%al, %dl
    000036d1: 	je	.Ltmp3879 # Offset: 14033
    000036d3: 	movl	current_test(%rip), %edx
    000036d9: 	leaq	DATAat0x571d0(%rip), %rsi
    000036e0: 	movl	$0x1, %edi
    000036e5: 	xorl	%eax, %eax
    000036e7: 	callq	__printf_chk@PLT # Offset: 14055
    000036ec: 	movl	iterations(%rip), %ecx
.Ltmp3879:
    000036f2: 	addl	$0x1, 0x10(%rsp)
    000036f7: 	movl	0x10(%rsp), %eax
    000036fb: 	cmpl	%ecx, %eax
    000036fd: 	jl	.Ltmp3880 # Offset: 14077
.Ltmp3877:
    00003703: 	movq	%r12, %rsi
    00003706: 	movq	%r15, %rdi
    00003709: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14089
    0000370e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003715: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000371c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003723: 	je	.Ltmp3881 # Offset: 14115
.Ltmp4000:
    00003729: 	movq	-0x20(%rax), %rbx
    0000372d: 	callq	clock@PLT # Offset: 14125
    00003732: 	pxor	%xmm0, %xmm0
    00003736: 	movq	%rax, end_time(%rip)
    0000373d: 	movq	%rbx, %rdi
    00003740: 	subq	start_time(%rip), %rax
    00003747: 	cvtsi2sd	%rax, %xmm0
    0000374c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003754: 	callq	_Z13record_resultdPKc # Offset: 14164
    00003759: 	movq	0xc0(%rsp), %rdi
    00003761: 	cmpq	%r13, %rdi
    00003764: 	je	.Ltmp3882 # Offset: 14180
    00003766: 	movq	0xd0(%rsp), %rax
    0000376e: 	leaq	0x1(%rax), %rsi
    00003772: 	callq	_ZdlPvm@PLT # Offset: 14194
.Ltmp3882:
    00003777: 	leaq	DATAat0x57611(%rip), %rdx
    0000377e: 	movq	%r14, %rsi
    00003781: 	movq	%r12, %rdi
    00003784: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14212
    00003789: 	movq	%r12, %rdx
    0000378c: 	movl	$0x4, %esi
    00003791: 	movq	%rbp, %rdi
    00003794: 	callq	"_Z14test_variable1Ia25custom_remainder_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 14228
    00003799: 	movq	0xc0(%rsp), %rdi
    000037a1: 	cmpq	%r13, %rdi
    000037a4: 	je	.Ltmp3883 # Offset: 14244
    000037a6: 	movq	0xd0(%rsp), %rax
    000037ae: 	leaq	0x1(%rax), %rsi
    000037b2: 	callq	_ZdlPvm@PLT # Offset: 14258
.Ltmp3883:
    000037b7: 	leaq	DATAat0x5762a(%rip), %rdx
    000037be: 	movq	%r14, %rsi
    000037c1: 	movq	%r12, %rdi
    000037c4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14276
    000037c9: 	callq	clock@PLT # Offset: 14281
    000037ce: 	movl	iterations(%rip), %ecx
    000037d4: 	movq	%rax, start_time(%rip)
    000037db: 	testl	%ecx, %ecx
    000037dd: 	jle	.Ltmp3884 # Offset: 14301
    000037e3: 	movdqa	DATAat0x57c10(%rip), %xmm7
    000037eb: 	movl	$0x0, 0x10(%rsp)
    000037f3: 	leaq	0x2020(%rsp), %rbx
    000037fb: 	movaps	%xmm7, (%rsp)
    000037ff: 	nop # Size: 1
.Ltmp3887:
    00003800: 	pxor	%xmm2, %xmm2
    00003804: 	movq	%rbp, %rax
    00003807: 	movdqa	%xmm2, %xmm3
    0000380b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3885:
    00003810: 	movdqa	%xmm3, %xmm1
    00003814: 	movdqa	(%rsp), %xmm4
    00003819: 	movdqa	(%rax), %xmm0
    0000381d: 	addq	$0x10, %rax
    00003821: 	pcmpgtb	-0x10(%rax), %xmm1
    00003826: 	pand	%xmm4, %xmm1
    0000382a: 	paddb	%xmm1, %xmm0
    0000382e: 	pand	%xmm4, %xmm0
    00003832: 	psubb	%xmm1, %xmm0
    00003836: 	paddb	%xmm0, %xmm2
    0000383a: 	cmpq	%rbx, %rax
    0000383d: 	jne	.Ltmp3885 # Offset: 14397
    0000383f: 	movdqa	%xmm2, %xmm0
    00003843: 	cvttsd2si	init_value(%rip), %edx
    0000384b: 	psrldq	$0x8, %xmm0
    00003850: 	paddb	%xmm0, %xmm2
    00003854: 	psadbw	%xmm3, %xmm2
    00003858: 	movd	%xmm2, %eax
    0000385c: 	shll	$0x6, %edx
    0000385f: 	cmpb	%al, %dl
    00003861: 	je	.Ltmp3886 # Offset: 14433
    00003863: 	movl	current_test(%rip), %edx
    00003869: 	leaq	DATAat0x571d0(%rip), %rsi
    00003870: 	movl	$0x1, %edi
    00003875: 	xorl	%eax, %eax
    00003877: 	callq	__printf_chk@PLT # Offset: 14455
    0000387c: 	movl	iterations(%rip), %ecx
.Ltmp3886:
    00003882: 	addl	$0x1, 0x10(%rsp)
    00003887: 	movl	0x10(%rsp), %eax
    0000388b: 	cmpl	%ecx, %eax
    0000388d: 	jl	.Ltmp3887 # Offset: 14477
.Ltmp3884:
    00003893: 	movq	%r12, %rsi
    00003896: 	movq	%r15, %rdi
    00003899: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14489
    0000389e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000038a5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000038ac: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000038b3: 	je	.Ltmp3888 # Offset: 14515
.Ltmp3999:
    000038b9: 	movq	-0x20(%rax), %rbx
    000038bd: 	callq	clock@PLT # Offset: 14525
    000038c2: 	pxor	%xmm0, %xmm0
    000038c6: 	movq	%rax, end_time(%rip)
    000038cd: 	movq	%rbx, %rdi
    000038d0: 	subq	start_time(%rip), %rax
    000038d7: 	cvtsi2sd	%rax, %xmm0
    000038dc: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000038e4: 	callq	_Z13record_resultdPKc # Offset: 14564
    000038e9: 	movq	0xc0(%rsp), %rdi
    000038f1: 	cmpq	%r13, %rdi
    000038f4: 	je	.Ltmp3889 # Offset: 14580
    000038f6: 	movq	0xd0(%rsp), %rax
    000038fe: 	leaq	0x1(%rax), %rsi
    00003902: 	callq	_ZdlPvm@PLT # Offset: 14594
.Ltmp3889:
    00003907: 	leaq	DATAat0x57643(%rip), %rdx
    0000390e: 	movq	%r14, %rsi
    00003911: 	movq	%r12, %rdi
    00003914: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14612
    00003919: 	callq	clock@PLT # Offset: 14617
    0000391e: 	movl	iterations(%rip), %ecx
    00003924: 	movq	%rax, start_time(%rip)
    0000392b: 	testl	%ecx, %ecx
    0000392d: 	jle	.Ltmp3890 # Offset: 14637
    00003933: 	movdqa	DATAat0x57bf0(%rip), %xmm3
    0000393b: 	movl	$0x0, (%rsp)
    00003942: 	leaq	0x2020(%rsp), %rbx
    0000394a: 	movaps	%xmm3, 0x10(%rsp)
    0000394f: 	nop # Size: 1
.Ltmp3893:
    00003950: 	movq	%rbp, %rax
    00003953: 	pxor	%xmm0, %xmm0
    00003957: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3891:
    00003960: 	movdqa	0x10(%rsp), %xmm1
    00003966: 	pand	(%rax), %xmm1
    0000396a: 	addq	$0x10, %rax
    0000396e: 	paddb	%xmm1, %xmm0
    00003972: 	cmpq	%rbx, %rax
    00003975: 	jne	.Ltmp3891 # Offset: 14709
    00003977: 	movdqa	%xmm0, %xmm1
    0000397b: 	cvttsd2si	init_value(%rip), %edx
    00003983: 	psrldq	$0x8, %xmm1
    00003988: 	paddb	%xmm1, %xmm0
    0000398c: 	pxor	%xmm1, %xmm1
    00003990: 	psadbw	%xmm1, %xmm0
    00003994: 	movd	%xmm0, %eax
    00003998: 	shll	$0x6, %edx
    0000399b: 	cmpb	%al, %dl
    0000399d: 	je	.Ltmp3892 # Offset: 14749
    0000399f: 	movl	current_test(%rip), %edx
    000039a5: 	leaq	DATAat0x571d0(%rip), %rsi
    000039ac: 	movl	$0x1, %edi
    000039b1: 	xorl	%eax, %eax
    000039b3: 	callq	__printf_chk@PLT # Offset: 14771
    000039b8: 	movl	iterations(%rip), %ecx
.Ltmp3892:
    000039be: 	addl	$0x1, (%rsp)
    000039c2: 	movl	(%rsp), %eax
    000039c5: 	cmpl	%ecx, %eax
    000039c7: 	jl	.Ltmp3893 # Offset: 14791
.Ltmp3890:
    000039c9: 	movq	%r12, %rsi
    000039cc: 	movq	%r15, %rdi
    000039cf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14799
    000039d4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000039db: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000039e2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000039e9: 	je	.Ltmp3894 # Offset: 14825
.Ltmp3998:
    000039ef: 	movq	-0x20(%rax), %rbx
    000039f3: 	callq	clock@PLT # Offset: 14835
    000039f8: 	pxor	%xmm0, %xmm0
    000039fc: 	movq	%rax, end_time(%rip)
    00003a03: 	movq	%rbx, %rdi
    00003a06: 	subq	start_time(%rip), %rax
    00003a0d: 	cvtsi2sd	%rax, %xmm0
    00003a12: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003a1a: 	callq	_Z13record_resultdPKc # Offset: 14874
    00003a1f: 	movq	0xc0(%rsp), %rdi
    00003a27: 	cmpq	%r13, %rdi
    00003a2a: 	je	.Ltmp3895 # Offset: 14890
    00003a2c: 	movq	0xd0(%rsp), %rax
    00003a34: 	leaq	0x1(%rax), %rsi
    00003a38: 	callq	_ZdlPvm@PLT # Offset: 14904
.Ltmp3895:
    00003a3d: 	leaq	DATAat0x5764a(%rip), %rdx
    00003a44: 	movq	%r14, %rsi
    00003a47: 	movq	%r12, %rdi
    00003a4a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14922
    00003a4f: 	movq	%r12, %rsi
    00003a52: 	movq	%rbp, %rdi
    00003a55: 	callq	"_Z13test_constantIa13and_remainderIaLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 14933
    00003a5a: 	movq	0xc0(%rsp), %rdi
    00003a62: 	cmpq	%r13, %rdi
    00003a65: 	je	.Ltmp3896 # Offset: 14949
    00003a67: 	movq	0xd0(%rsp), %rax
    00003a6f: 	leaq	0x1(%rax), %rsi
    00003a73: 	callq	_ZdlPvm@PLT # Offset: 14963
.Ltmp3896:
    00003a78: 	leaq	DATAat0x5765b(%rip), %rdx
    00003a7f: 	movq	%r14, %rsi
    00003a82: 	movq	%r12, %rdi
    00003a85: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14981
    00003a8a: 	movq	%r12, %rsi
    00003a8d: 	movq	%rbp, %rdi
    00003a90: 	callq	"_Z13test_constantIa14and_remainder2IaLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 14992
    00003a95: 	movq	0xc0(%rsp), %rdi
    00003a9d: 	cmpq	%r13, %rdi
    00003aa0: 	je	.Ltmp3897 # Offset: 15008
    00003aa2: 	movq	0xd0(%rsp), %rax
    00003aaa: 	leaq	0x1(%rax), %rsi
    00003aae: 	callq	_ZdlPvm@PLT # Offset: 15022
.Ltmp3897:
    00003ab3: 	leaq	DATAat0x5766d(%rip), %rdx
    00003aba: 	movq	%r14, %rsi
    00003abd: 	movq	%r12, %rdi
    00003ac0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15040
    00003ac5: 	callq	clock@PLT # Offset: 15045
    00003aca: 	movl	iterations(%rip), %ecx
    00003ad0: 	movq	%rax, start_time(%rip)
    00003ad7: 	testl	%ecx, %ecx
    00003ad9: 	jle	.Ltmp3898 # Offset: 15065
    00003adf: 	movdqa	DATAat0x57bf0(%rip), %xmm7
    00003ae7: 	movl	$0x0, (%rsp)
    00003aee: 	leaq	0x2020(%rsp), %rbx
    00003af6: 	movaps	%xmm7, 0x10(%rsp)
    00003afb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3901:
    00003b00: 	pxor	%xmm2, %xmm2
    00003b04: 	movq	%rbp, %rax
    00003b07: 	movdqa	%xmm2, %xmm3
    00003b0b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3899:
    00003b10: 	movdqa	%xmm3, %xmm1
    00003b14: 	movdqa	0x10(%rsp), %xmm6
    00003b1a: 	movdqa	(%rax), %xmm0
    00003b1e: 	addq	$0x10, %rax
    00003b22: 	pcmpgtb	-0x10(%rax), %xmm1
    00003b27: 	pand	%xmm6, %xmm1
    00003b2b: 	paddb	%xmm1, %xmm0
    00003b2f: 	pand	%xmm6, %xmm0
    00003b33: 	psubb	%xmm1, %xmm0
    00003b37: 	paddb	%xmm0, %xmm2
    00003b3b: 	cmpq	%rbx, %rax
    00003b3e: 	jne	.Ltmp3899 # Offset: 15166
    00003b40: 	movdqa	%xmm2, %xmm0
    00003b44: 	cvttsd2si	init_value(%rip), %edx
    00003b4c: 	psrldq	$0x8, %xmm0
    00003b51: 	paddb	%xmm0, %xmm2
    00003b55: 	psadbw	%xmm3, %xmm2
    00003b59: 	movd	%xmm2, %eax
    00003b5d: 	shll	$0x6, %edx
    00003b60: 	cmpb	%al, %dl
    00003b62: 	je	.Ltmp3900 # Offset: 15202
    00003b64: 	movl	current_test(%rip), %edx
    00003b6a: 	leaq	DATAat0x571d0(%rip), %rsi
    00003b71: 	movl	$0x1, %edi
    00003b76: 	xorl	%eax, %eax
    00003b78: 	callq	__printf_chk@PLT # Offset: 15224
    00003b7d: 	movl	iterations(%rip), %ecx
.Ltmp3900:
    00003b83: 	addl	$0x1, (%rsp)
    00003b87: 	movl	(%rsp), %eax
    00003b8a: 	cmpl	%ecx, %eax
    00003b8c: 	jl	.Ltmp3901 # Offset: 15244
.Ltmp3898:
    00003b92: 	movq	%r12, %rsi
    00003b95: 	movq	%r15, %rdi
    00003b98: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15256
    00003b9d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003ba4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003bab: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003bb2: 	je	.Ltmp3902 # Offset: 15282
.Ltmp3997:
    00003bb8: 	movq	-0x20(%rax), %rbx
    00003bbc: 	callq	clock@PLT # Offset: 15292
    00003bc1: 	pxor	%xmm0, %xmm0
    00003bc5: 	movq	%rax, end_time(%rip)
    00003bcc: 	movq	%rbx, %rdi
    00003bcf: 	subq	start_time(%rip), %rax
    00003bd6: 	cvtsi2sd	%rax, %xmm0
    00003bdb: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003be3: 	callq	_Z13record_resultdPKc # Offset: 15331
    00003be8: 	movq	0xc0(%rsp), %rdi
    00003bf0: 	cmpq	%r13, %rdi
    00003bf3: 	je	.Ltmp3903 # Offset: 15347
    00003bf5: 	movq	0xd0(%rsp), %rax
    00003bfd: 	leaq	0x1(%rax), %rsi
    00003c01: 	callq	_ZdlPvm@PLT # Offset: 15361
.Ltmp3903:
    00003c06: 	leaq	DATAat0x57684(%rip), %rdx
    00003c0d: 	movq	%r14, %rsi
    00003c10: 	movq	%r12, %rdi
    00003c13: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15379
    00003c18: 	movq	%r12, %rdx
    00003c1b: 	movl	$0x8, %esi
    00003c20: 	movq	%rbp, %rdi
    00003c23: 	callq	"_Z14test_variable1Ia25custom_remainder_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 15395
    00003c28: 	movq	0xc0(%rsp), %rdi
    00003c30: 	cmpq	%r13, %rdi
    00003c33: 	je	.Ltmp3904 # Offset: 15411
    00003c35: 	movq	0xd0(%rsp), %rax
    00003c3d: 	leaq	0x1(%rax), %rsi
    00003c41: 	callq	_ZdlPvm@PLT # Offset: 15425
.Ltmp3904:
    00003c46: 	leaq	DATAat0x5769d(%rip), %rdx
    00003c4d: 	movq	%r14, %rsi
    00003c50: 	movq	%r12, %rdi
    00003c53: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15443
    00003c58: 	callq	clock@PLT # Offset: 15448
    00003c5d: 	movl	iterations(%rip), %ecx
    00003c63: 	movq	%rax, start_time(%rip)
    00003c6a: 	testl	%ecx, %ecx
    00003c6c: 	jle	.Ltmp3905 # Offset: 15468
    00003c72: 	movdqa	DATAat0x57bf0(%rip), %xmm3
    00003c7a: 	movl	$0x0, (%rsp)
    00003c81: 	leaq	0x2020(%rsp), %rbx
    00003c89: 	movaps	%xmm3, 0x10(%rsp)
    00003c8e: 	nop # Size: 2
.Ltmp3908:
    00003c90: 	pxor	%xmm2, %xmm2
    00003c94: 	movq	%rbp, %rax
    00003c97: 	movdqa	%xmm2, %xmm3
    00003c9b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3906:
    00003ca0: 	movdqa	%xmm3, %xmm1
    00003ca4: 	movdqa	0x10(%rsp), %xmm5
    00003caa: 	movdqa	(%rax), %xmm0
    00003cae: 	addq	$0x10, %rax
    00003cb2: 	pcmpgtb	-0x10(%rax), %xmm1
    00003cb7: 	pand	%xmm5, %xmm1
    00003cbb: 	paddb	%xmm1, %xmm0
    00003cbf: 	pand	%xmm5, %xmm0
    00003cc3: 	psubb	%xmm1, %xmm0
    00003cc7: 	paddb	%xmm0, %xmm2
    00003ccb: 	cmpq	%rax, %rbx
    00003cce: 	jne	.Ltmp3906 # Offset: 15566
    00003cd0: 	movdqa	%xmm2, %xmm0
    00003cd4: 	cvttsd2si	init_value(%rip), %edx
    00003cdc: 	psrldq	$0x8, %xmm0
    00003ce1: 	paddb	%xmm0, %xmm2
    00003ce5: 	psadbw	%xmm3, %xmm2
    00003ce9: 	movd	%xmm2, %eax
    00003ced: 	shll	$0x6, %edx
    00003cf0: 	cmpb	%al, %dl
    00003cf2: 	je	.Ltmp3907 # Offset: 15602
    00003cf4: 	movl	current_test(%rip), %edx
    00003cfa: 	leaq	DATAat0x571d0(%rip), %rsi
    00003d01: 	movl	$0x1, %edi
    00003d06: 	xorl	%eax, %eax
    00003d08: 	callq	__printf_chk@PLT # Offset: 15624
    00003d0d: 	movl	iterations(%rip), %ecx
.Ltmp3907:
    00003d13: 	addl	$0x1, (%rsp)
    00003d17: 	movl	(%rsp), %eax
    00003d1a: 	cmpl	%ecx, %eax
    00003d1c: 	jl	.Ltmp3908 # Offset: 15644
.Ltmp3905:
    00003d22: 	movq	%r12, %rsi
    00003d25: 	movq	%r15, %rdi
    00003d28: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15656
    00003d2d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003d34: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003d3b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003d42: 	je	.Ltmp3909 # Offset: 15682
.Ltmp3996:
    00003d48: 	movq	-0x20(%rax), %rbx
    00003d4c: 	callq	clock@PLT # Offset: 15692
    00003d51: 	pxor	%xmm0, %xmm0
    00003d55: 	movq	%rax, end_time(%rip)
    00003d5c: 	movq	%rbx, %rdi
    00003d5f: 	subq	start_time(%rip), %rax
    00003d66: 	cvtsi2sd	%rax, %xmm0
    00003d6b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003d73: 	callq	_Z13record_resultdPKc # Offset: 15731
    00003d78: 	movq	0xc0(%rsp), %rdi
    00003d80: 	cmpq	%r13, %rdi
    00003d83: 	je	.Ltmp3910 # Offset: 15747
    00003d85: 	movq	0xd0(%rsp), %rax
    00003d8d: 	leaq	0x1(%rax), %rsi
    00003d91: 	callq	_ZdlPvm@PLT # Offset: 15761
.Ltmp3910:
    00003d96: 	leaq	DATAat0x576b6(%rip), %rdx
    00003d9d: 	movq	%r14, %rsi
    00003da0: 	movq	%r12, %rdi
    00003da3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15779
    00003da8: 	callq	clock@PLT # Offset: 15784
    00003dad: 	movl	iterations(%rip), %ecx
    00003db3: 	movq	%rax, start_time(%rip)
    00003dba: 	testl	%ecx, %ecx
    00003dbc: 	jle	.Ltmp3911 # Offset: 15804
    00003dc2: 	movdqa	DATAat0x57db0(%rip), %xmm7
    00003dca: 	movl	$0x0, 0x10(%rsp)
    00003dd2: 	leaq	0x2020(%rsp), %rbx
    00003dda: 	movaps	%xmm7, (%rsp)
    00003dde: 	nop # Size: 2
.Ltmp3914:
    00003de0: 	movq	%rbp, %rax
    00003de3: 	pxor	%xmm0, %xmm0
    00003de7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3912:
    00003df0: 	movdqa	(%rsp), %xmm1
    00003df5: 	pand	(%rax), %xmm1
    00003df9: 	addq	$0x10, %rax
    00003dfd: 	paddb	%xmm1, %xmm0
    00003e01: 	cmpq	%rbx, %rax
    00003e04: 	jne	.Ltmp3912 # Offset: 15876
    00003e06: 	movdqa	%xmm0, %xmm1
    00003e0a: 	cvttsd2si	init_value(%rip), %edx
    00003e12: 	psrldq	$0x8, %xmm1
    00003e17: 	paddb	%xmm1, %xmm0
    00003e1b: 	pxor	%xmm1, %xmm1
    00003e1f: 	psadbw	%xmm1, %xmm0
    00003e23: 	movd	%xmm0, %eax
    00003e27: 	shll	$0x6, %edx
    00003e2a: 	cmpb	%al, %dl
    00003e2c: 	je	.Ltmp3913 # Offset: 15916
    00003e2e: 	movl	current_test(%rip), %edx
    00003e34: 	leaq	DATAat0x571d0(%rip), %rsi
    00003e3b: 	movl	$0x1, %edi
    00003e40: 	xorl	%eax, %eax
    00003e42: 	callq	__printf_chk@PLT # Offset: 15938
    00003e47: 	movl	iterations(%rip), %ecx
.Ltmp3913:
    00003e4d: 	addl	$0x1, 0x10(%rsp)
    00003e52: 	movl	0x10(%rsp), %eax
    00003e56: 	cmpl	%ecx, %eax
    00003e58: 	jl	.Ltmp3914 # Offset: 15960
.Ltmp3911:
    00003e5a: 	movq	%r12, %rsi
    00003e5d: 	movq	%r15, %rdi
    00003e60: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15968
    00003e65: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003e6c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003e73: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003e7a: 	je	.Ltmp3915 # Offset: 15994
.Ltmp3995:
    00003e80: 	movq	-0x20(%rax), %rbx
    00003e84: 	callq	clock@PLT # Offset: 16004
    00003e89: 	pxor	%xmm0, %xmm0
    00003e8d: 	movq	%rax, end_time(%rip)
    00003e94: 	movq	%rbx, %rdi
    00003e97: 	subq	start_time(%rip), %rax
    00003e9e: 	cvtsi2sd	%rax, %xmm0
    00003ea3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003eab: 	callq	_Z13record_resultdPKc # Offset: 16043
    00003eb0: 	movq	0xc0(%rsp), %rdi
    00003eb8: 	cmpq	%r13, %rdi
    00003ebb: 	je	.Ltmp3916 # Offset: 16059
    00003ebd: 	movq	0xd0(%rsp), %rax
    00003ec5: 	leaq	0x1(%rax), %rsi
    00003ec9: 	callq	_ZdlPvm@PLT # Offset: 16073
.Ltmp3916:
    00003ece: 	leaq	DATAat0x576be(%rip), %rdx
    00003ed5: 	movq	%r14, %rsi
    00003ed8: 	movq	%r12, %rdi
    00003edb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16091
    00003ee0: 	movq	%r12, %rsi
    00003ee3: 	movq	%rbp, %rdi
    00003ee6: 	callq	"_Z13test_constantIa13and_remainderIaLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 16102
    00003eeb: 	movq	0xc0(%rsp), %rdi
    00003ef3: 	cmpq	%r13, %rdi
    00003ef6: 	je	.Ltmp3917 # Offset: 16118
    00003ef8: 	movq	0xd0(%rsp), %rax
    00003f00: 	leaq	0x1(%rax), %rsi
    00003f04: 	callq	_ZdlPvm@PLT # Offset: 16132
.Ltmp3917:
    00003f09: 	leaq	DATAat0x576d0(%rip), %rdx
    00003f10: 	movq	%r14, %rsi
    00003f13: 	movq	%r12, %rdi
    00003f16: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16150
    00003f1b: 	movq	%r12, %rsi
    00003f1e: 	movq	%rbp, %rdi
    00003f21: 	callq	"_Z13test_constantIa14and_remainder2IaLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 16161
    00003f26: 	movq	0xc0(%rsp), %rdi
    00003f2e: 	cmpq	%r13, %rdi
    00003f31: 	je	.Ltmp3918 # Offset: 16177
    00003f33: 	movq	0xd0(%rsp), %rax
    00003f3b: 	leaq	0x1(%rax), %rsi
    00003f3f: 	callq	_ZdlPvm@PLT # Offset: 16191
.Ltmp3918:
    00003f44: 	leaq	DATAat0x576e3(%rip), %rdx
    00003f4b: 	movq	%r14, %rsi
    00003f4e: 	movq	%r12, %rdi
    00003f51: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16209
    00003f56: 	callq	clock@PLT # Offset: 16214
    00003f5b: 	movl	iterations(%rip), %ecx
    00003f61: 	movq	%rax, start_time(%rip)
    00003f68: 	testl	%ecx, %ecx
    00003f6a: 	jle	.Ltmp3919 # Offset: 16234
    00003f70: 	movdqa	DATAat0x57db0(%rip), %xmm3
    00003f78: 	movl	$0x0, 0x10(%rsp)
    00003f80: 	leaq	0x2020(%rsp), %rbx
    00003f88: 	movaps	%xmm3, (%rsp)
    00003f8c: 	nopl	(%rax) # Size: 4
.Ltmp3922:
    00003f90: 	pxor	%xmm2, %xmm2
    00003f94: 	movq	%rbp, %rax
    00003f97: 	movdqa	%xmm2, %xmm3
    00003f9b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3920:
    00003fa0: 	movdqa	%xmm3, %xmm1
    00003fa4: 	movdqa	(%rsp), %xmm7
    00003fa9: 	movdqa	(%rax), %xmm0
    00003fad: 	addq	$0x10, %rax
    00003fb1: 	pcmpgtb	-0x10(%rax), %xmm1
    00003fb6: 	pand	%xmm7, %xmm1
    00003fba: 	paddb	%xmm1, %xmm0
    00003fbe: 	pand	%xmm7, %xmm0
    00003fc2: 	psubb	%xmm1, %xmm0
    00003fc6: 	paddb	%xmm0, %xmm2
    00003fca: 	cmpq	%rax, %rbx
    00003fcd: 	jne	.Ltmp3920 # Offset: 16333
    00003fcf: 	movdqa	%xmm2, %xmm0
    00003fd3: 	cvttsd2si	init_value(%rip), %edx
    00003fdb: 	psrldq	$0x8, %xmm0
    00003fe0: 	paddb	%xmm0, %xmm2
    00003fe4: 	psadbw	%xmm3, %xmm2
    00003fe8: 	movd	%xmm2, %eax
    00003fec: 	shll	$0x6, %edx
    00003fef: 	cmpb	%al, %dl
    00003ff1: 	je	.Ltmp3921 # Offset: 16369
    00003ff3: 	movl	current_test(%rip), %edx
    00003ff9: 	leaq	DATAat0x571d0(%rip), %rsi
    00004000: 	movl	$0x1, %edi
    00004005: 	xorl	%eax, %eax
    00004007: 	callq	__printf_chk@PLT # Offset: 16391
    0000400c: 	movl	iterations(%rip), %ecx
.Ltmp3921:
    00004012: 	addl	$0x1, 0x10(%rsp)
    00004017: 	movl	0x10(%rsp), %eax
    0000401b: 	cmpl	%ecx, %eax
    0000401d: 	jl	.Ltmp3922 # Offset: 16413
.Ltmp3919:
    00004023: 	movq	%r12, %rsi
    00004026: 	movq	%r15, %rdi
    00004029: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16425
    0000402e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004035: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000403c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004043: 	je	.Ltmp3923 # Offset: 16451
.Ltmp3994:
    00004049: 	movq	-0x20(%rax), %rbx
    0000404d: 	callq	clock@PLT # Offset: 16461
    00004052: 	pxor	%xmm0, %xmm0
    00004056: 	movq	%rax, end_time(%rip)
    0000405d: 	movq	%rbx, %rdi
    00004060: 	subq	start_time(%rip), %rax
    00004067: 	cvtsi2sd	%rax, %xmm0
    0000406c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004074: 	callq	_Z13record_resultdPKc # Offset: 16500
    00004079: 	movq	0xc0(%rsp), %rdi
    00004081: 	cmpq	%r13, %rdi
    00004084: 	je	.Ltmp3924 # Offset: 16516
    00004086: 	movq	0xd0(%rsp), %rax
    0000408e: 	leaq	0x1(%rax), %rsi
    00004092: 	callq	_ZdlPvm@PLT # Offset: 16530
.Ltmp3924:
    00004097: 	leaq	DATAat0x576fb(%rip), %rdx
    0000409e: 	movq	%r14, %rsi
    000040a1: 	movq	%r12, %rdi
    000040a4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16548
    000040a9: 	movq	%r12, %rdx
    000040ac: 	movl	$0x10, %esi
    000040b1: 	movq	%rbp, %rdi
    000040b4: 	callq	"_Z14test_variable1Ia25custom_remainder_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 16564
    000040b9: 	movq	0xc0(%rsp), %rdi
    000040c1: 	cmpq	%r13, %rdi
    000040c4: 	je	.Ltmp3925 # Offset: 16580
    000040c6: 	movq	0xd0(%rsp), %rax
    000040ce: 	leaq	0x1(%rax), %rsi
    000040d2: 	callq	_ZdlPvm@PLT # Offset: 16594
.Ltmp3925:
    000040d7: 	leaq	DATAat0x57715(%rip), %rdx
    000040de: 	movq	%r14, %rsi
    000040e1: 	movq	%r12, %rdi
    000040e4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16612
    000040e9: 	callq	clock@PLT # Offset: 16617
    000040ee: 	movl	iterations(%rip), %ecx
    000040f4: 	movq	%rax, start_time(%rip)
    000040fb: 	testl	%ecx, %ecx
    000040fd: 	jle	.Ltmp3926 # Offset: 16637
    00004103: 	movdqa	DATAat0x57db0(%rip), %xmm7
    0000410b: 	movl	$0x0, 0x10(%rsp)
    00004113: 	leaq	0x2020(%rsp), %rbx
    0000411b: 	movaps	%xmm7, (%rsp)
    0000411f: 	nop # Size: 1
.Ltmp3929:
    00004120: 	pxor	%xmm2, %xmm2
    00004124: 	movq	%rbp, %rax
    00004127: 	movdqa	%xmm2, %xmm3
    0000412b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3927:
    00004130: 	movdqa	%xmm3, %xmm1
    00004134: 	movdqa	(%rsp), %xmm4
    00004139: 	movdqa	(%rax), %xmm0
    0000413d: 	addq	$0x10, %rax
    00004141: 	pcmpgtb	-0x10(%rax), %xmm1
    00004146: 	pand	%xmm4, %xmm1
    0000414a: 	paddb	%xmm1, %xmm0
    0000414e: 	pand	%xmm4, %xmm0
    00004152: 	psubb	%xmm1, %xmm0
    00004156: 	paddb	%xmm0, %xmm2
    0000415a: 	cmpq	%rbx, %rax
    0000415d: 	jne	.Ltmp3927 # Offset: 16733
    0000415f: 	movdqa	%xmm2, %xmm0
    00004163: 	cvttsd2si	init_value(%rip), %edx
    0000416b: 	psrldq	$0x8, %xmm0
    00004170: 	paddb	%xmm0, %xmm2
    00004174: 	psadbw	%xmm3, %xmm2
    00004178: 	movd	%xmm2, %eax
    0000417c: 	shll	$0x6, %edx
    0000417f: 	cmpb	%al, %dl
    00004181: 	je	.Ltmp3928 # Offset: 16769
    00004183: 	movl	current_test(%rip), %edx
    00004189: 	leaq	DATAat0x571d0(%rip), %rsi
    00004190: 	movl	$0x1, %edi
    00004195: 	xorl	%eax, %eax
    00004197: 	callq	__printf_chk@PLT # Offset: 16791
    0000419c: 	movl	iterations(%rip), %ecx
.Ltmp3928:
    000041a2: 	addl	$0x1, 0x10(%rsp)
    000041a7: 	movl	0x10(%rsp), %eax
    000041ab: 	cmpl	%ecx, %eax
    000041ad: 	jl	.Ltmp3929 # Offset: 16813
.Ltmp3926:
    000041b3: 	movq	%r12, %rsi
    000041b6: 	movq	%r15, %rdi
    000041b9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16825
    000041be: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000041c5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000041cc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000041d3: 	je	.Ltmp3930 # Offset: 16851
.Ltmp3993:
    000041d9: 	movq	-0x20(%rax), %rbx
    000041dd: 	callq	clock@PLT # Offset: 16861
    000041e2: 	pxor	%xmm0, %xmm0
    000041e6: 	movq	%rax, end_time(%rip)
    000041ed: 	movq	%rbx, %rdi
    000041f0: 	subq	start_time(%rip), %rax
    000041f7: 	cvtsi2sd	%rax, %xmm0
    000041fc: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004204: 	callq	_Z13record_resultdPKc # Offset: 16900
    00004209: 	movq	0xc0(%rsp), %rdi
    00004211: 	cmpq	%r13, %rdi
    00004214: 	je	.Ltmp3931 # Offset: 16916
    00004216: 	movq	0xd0(%rsp), %rax
    0000421e: 	leaq	0x1(%rax), %rsi
    00004222: 	callq	_ZdlPvm@PLT # Offset: 16930
.Ltmp3931:
    00004227: 	leaq	DATAat0x5772f(%rip), %rdx
    0000422e: 	movq	%r14, %rsi
    00004231: 	movq	%r12, %rdi
    00004234: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16948
    00004239: 	callq	clock@PLT # Offset: 16953
    0000423e: 	movl	iterations(%rip), %ecx
    00004244: 	movq	%rax, start_time(%rip)
    0000424b: 	testl	%ecx, %ecx
    0000424d: 	jle	.Ltmp3932 # Offset: 16973
    00004253: 	movdqa	DATAat0x57d40(%rip), %xmm3
    0000425b: 	movl	$0x0, 0x10(%rsp)
    00004263: 	leaq	0x2020(%rsp), %rbx
    0000426b: 	movaps	%xmm3, (%rsp)
    0000426f: 	nop # Size: 1
.Ltmp3935:
    00004270: 	movq	%rbp, %rax
    00004273: 	pxor	%xmm0, %xmm0
    00004277: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3933:
    00004280: 	movdqa	(%rsp), %xmm1
    00004285: 	pand	(%rax), %xmm1
    00004289: 	addq	$0x10, %rax
    0000428d: 	paddb	%xmm1, %xmm0
    00004291: 	cmpq	%rbx, %rax
    00004294: 	jne	.Ltmp3933 # Offset: 17044
    00004296: 	movdqa	%xmm0, %xmm1
    0000429a: 	cvttsd2si	init_value(%rip), %edx
    000042a2: 	psrldq	$0x8, %xmm1
    000042a7: 	paddb	%xmm1, %xmm0
    000042ab: 	pxor	%xmm1, %xmm1
    000042af: 	psadbw	%xmm1, %xmm0
    000042b3: 	movd	%xmm0, %eax
    000042b7: 	shll	$0x6, %edx
    000042ba: 	cmpb	%al, %dl
    000042bc: 	je	.Ltmp3934 # Offset: 17084
    000042be: 	movl	current_test(%rip), %edx
    000042c4: 	leaq	DATAat0x571d0(%rip), %rsi
    000042cb: 	movl	$0x1, %edi
    000042d0: 	xorl	%eax, %eax
    000042d2: 	callq	__printf_chk@PLT # Offset: 17106
    000042d7: 	movl	iterations(%rip), %ecx
.Ltmp3934:
    000042dd: 	addl	$0x1, 0x10(%rsp)
    000042e2: 	movl	0x10(%rsp), %eax
    000042e6: 	cmpl	%ecx, %eax
    000042e8: 	jl	.Ltmp3935 # Offset: 17128
.Ltmp3932:
    000042ea: 	movq	%r12, %rsi
    000042ed: 	movq	%r15, %rdi
    000042f0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17136
    000042f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000042fc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004303: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000430a: 	je	.Ltmp3936 # Offset: 17162
.Ltmp3992:
    00004310: 	movq	-0x20(%rax), %rbx
    00004314: 	callq	clock@PLT # Offset: 17172
    00004319: 	pxor	%xmm0, %xmm0
    0000431d: 	movq	%rax, end_time(%rip)
    00004324: 	movq	%rbx, %rdi
    00004327: 	subq	start_time(%rip), %rax
    0000432e: 	cvtsi2sd	%rax, %xmm0
    00004333: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000433b: 	callq	_Z13record_resultdPKc # Offset: 17211
    00004340: 	movq	0xc0(%rsp), %rdi
    00004348: 	cmpq	%r13, %rdi
    0000434b: 	je	.Ltmp3937 # Offset: 17227
    0000434d: 	movq	0xd0(%rsp), %rax
    00004355: 	leaq	0x1(%rax), %rsi
    00004359: 	callq	_ZdlPvm@PLT # Offset: 17241
.Ltmp3937:
    0000435e: 	leaq	DATAat0x57737(%rip), %rdx
    00004365: 	movq	%r14, %rsi
    00004368: 	movq	%r12, %rdi
    0000436b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17259
    00004370: 	movq	%r12, %rsi
    00004373: 	movq	%rbp, %rdi
    00004376: 	callq	"_Z13test_constantIa13and_remainderIaLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 17270
    0000437b: 	movq	0xc0(%rsp), %rdi
    00004383: 	cmpq	%r13, %rdi
    00004386: 	je	.Ltmp3938 # Offset: 17286
    00004388: 	movq	0xd0(%rsp), %rax
    00004390: 	leaq	0x1(%rax), %rsi
    00004394: 	callq	_ZdlPvm@PLT # Offset: 17300
.Ltmp3938:
    00004399: 	leaq	DATAat0x57749(%rip), %rdx
    000043a0: 	movq	%r14, %rsi
    000043a3: 	movq	%r12, %rdi
    000043a6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17318
    000043ab: 	movq	%r12, %rsi
    000043ae: 	movq	%rbp, %rdi
    000043b1: 	callq	"_Z13test_constantIa14and_remainder2IaLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 17329
    000043b6: 	movq	0xc0(%rsp), %rdi
    000043be: 	cmpq	%r13, %rdi
    000043c1: 	je	.Ltmp3939 # Offset: 17345
    000043c3: 	movq	0xd0(%rsp), %rax
    000043cb: 	leaq	0x1(%rax), %rsi
    000043cf: 	callq	_ZdlPvm@PLT # Offset: 17359
.Ltmp3939:
    000043d4: 	leaq	DATAat0x5775c(%rip), %rdx
    000043db: 	movq	%r14, %rsi
    000043de: 	movq	%r12, %rdi
    000043e1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17377
    000043e6: 	callq	clock@PLT # Offset: 17382
    000043eb: 	movl	iterations(%rip), %ecx
    000043f1: 	movq	%rax, start_time(%rip)
    000043f8: 	testl	%ecx, %ecx
    000043fa: 	jle	.Ltmp3940 # Offset: 17402
    00004400: 	movdqa	DATAat0x57d40(%rip), %xmm7
    00004408: 	movl	$0x0, 0x10(%rsp)
    00004410: 	leaq	0x2020(%rsp), %rbx
    00004418: 	movaps	%xmm7, (%rsp)
    0000441c: 	nopl	(%rax) # Size: 4
.Ltmp3943:
    00004420: 	pxor	%xmm2, %xmm2
    00004424: 	movq	%rbp, %rax
    00004427: 	movdqa	%xmm2, %xmm3
    0000442b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3941:
    00004430: 	movdqa	%xmm3, %xmm1
    00004434: 	movdqa	(%rsp), %xmm6
    00004439: 	movdqa	(%rax), %xmm0
    0000443d: 	addq	$0x10, %rax
    00004441: 	pcmpgtb	-0x10(%rax), %xmm1
    00004446: 	pand	%xmm6, %xmm1
    0000444a: 	paddb	%xmm1, %xmm0
    0000444e: 	pand	%xmm6, %xmm0
    00004452: 	psubb	%xmm1, %xmm0
    00004456: 	paddb	%xmm0, %xmm2
    0000445a: 	cmpq	%rax, %rbx
    0000445d: 	jne	.Ltmp3941 # Offset: 17501
    0000445f: 	movdqa	%xmm2, %xmm0
    00004463: 	cvttsd2si	init_value(%rip), %edx
    0000446b: 	psrldq	$0x8, %xmm0
    00004470: 	paddb	%xmm0, %xmm2
    00004474: 	psadbw	%xmm3, %xmm2
    00004478: 	movd	%xmm2, %eax
    0000447c: 	shll	$0x6, %edx
    0000447f: 	cmpb	%al, %dl
    00004481: 	je	.Ltmp3942 # Offset: 17537
    00004483: 	movl	current_test(%rip), %edx
    00004489: 	leaq	DATAat0x571d0(%rip), %rsi
    00004490: 	movl	$0x1, %edi
    00004495: 	xorl	%eax, %eax
    00004497: 	callq	__printf_chk@PLT # Offset: 17559
    0000449c: 	movl	iterations(%rip), %ecx
.Ltmp3942:
    000044a2: 	addl	$0x1, 0x10(%rsp)
    000044a7: 	movl	0x10(%rsp), %eax
    000044ab: 	cmpl	%ecx, %eax
    000044ad: 	jl	.Ltmp3943 # Offset: 17581
.Ltmp3940:
    000044b3: 	movq	%r12, %rsi
    000044b6: 	movq	%r15, %rdi
    000044b9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17593
    000044be: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000044c5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000044cc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000044d3: 	je	.Ltmp3944 # Offset: 17619
.Ltmp3991:
    000044d9: 	movq	-0x20(%rax), %rbx
    000044dd: 	callq	clock@PLT # Offset: 17629
    000044e2: 	pxor	%xmm0, %xmm0
    000044e6: 	movq	%rax, end_time(%rip)
    000044ed: 	movq	%rbx, %rdi
    000044f0: 	subq	start_time(%rip), %rax
    000044f7: 	cvtsi2sd	%rax, %xmm0
    000044fc: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004504: 	callq	_Z13record_resultdPKc # Offset: 17668
    00004509: 	movq	0xc0(%rsp), %rdi
    00004511: 	cmpq	%r13, %rdi
    00004514: 	je	.Ltmp3945 # Offset: 17684
    00004516: 	movq	0xd0(%rsp), %rax
    0000451e: 	leaq	0x1(%rax), %rsi
    00004522: 	callq	_ZdlPvm@PLT # Offset: 17698
.Ltmp3945:
    00004527: 	leaq	DATAat0x57774(%rip), %rdx
    0000452e: 	movq	%r14, %rsi
    00004531: 	movq	%r12, %rdi
    00004534: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17716
    00004539: 	movq	%r12, %rdx
    0000453c: 	movl	$0x20, %esi
    00004541: 	movq	%rbp, %rdi
    00004544: 	callq	"_Z14test_variable1Ia25custom_remainder_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 17732
    00004549: 	movq	0xc0(%rsp), %rdi
    00004551: 	cmpq	%r13, %rdi
    00004554: 	je	.Ltmp3946 # Offset: 17748
    00004556: 	movq	0xd0(%rsp), %rax
    0000455e: 	leaq	0x1(%rax), %rsi
    00004562: 	callq	_ZdlPvm@PLT # Offset: 17762
.Ltmp3946:
    00004567: 	leaq	DATAat0x5778e(%rip), %rdx
    0000456e: 	movq	%r14, %rsi
    00004571: 	movq	%r12, %rdi
    00004574: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17780
    00004579: 	callq	clock@PLT # Offset: 17785
    0000457e: 	movl	iterations(%rip), %ecx
    00004584: 	movq	%rax, start_time(%rip)
    0000458b: 	testl	%ecx, %ecx
    0000458d: 	jle	.Ltmp3947 # Offset: 17805
    00004593: 	movdqa	DATAat0x57d40(%rip), %xmm6
    0000459b: 	movl	$0x0, 0x10(%rsp)
    000045a3: 	leaq	0x2020(%rsp), %rbx
    000045ab: 	movaps	%xmm6, (%rsp)
    000045af: 	nop # Size: 1
.Ltmp3950:
    000045b0: 	pxor	%xmm2, %xmm2
    000045b4: 	movq	%rbp, %rax
    000045b7: 	movdqa	%xmm2, %xmm3
    000045bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3948:
    000045c0: 	movdqa	%xmm3, %xmm1
    000045c4: 	movdqa	(%rsp), %xmm5
    000045c9: 	movdqa	(%rax), %xmm0
    000045cd: 	addq	$0x10, %rax
    000045d1: 	pcmpgtb	-0x10(%rax), %xmm1
    000045d6: 	pand	%xmm5, %xmm1
    000045da: 	paddb	%xmm1, %xmm0
    000045de: 	pand	%xmm5, %xmm0
    000045e2: 	psubb	%xmm1, %xmm0
    000045e6: 	paddb	%xmm0, %xmm2
    000045ea: 	cmpq	%rbx, %rax
    000045ed: 	jne	.Ltmp3948 # Offset: 17901
    000045ef: 	movdqa	%xmm2, %xmm0
    000045f3: 	cvttsd2si	init_value(%rip), %edx
    000045fb: 	psrldq	$0x8, %xmm0
    00004600: 	paddb	%xmm0, %xmm2
    00004604: 	psadbw	%xmm3, %xmm2
    00004608: 	movd	%xmm2, %eax
    0000460c: 	shll	$0x6, %edx
    0000460f: 	cmpb	%al, %dl
    00004611: 	je	.Ltmp3949 # Offset: 17937
    00004613: 	movl	current_test(%rip), %edx
    00004619: 	leaq	DATAat0x571d0(%rip), %rsi
    00004620: 	movl	$0x1, %edi
    00004625: 	xorl	%eax, %eax
    00004627: 	callq	__printf_chk@PLT # Offset: 17959
    0000462c: 	movl	iterations(%rip), %ecx
.Ltmp3949:
    00004632: 	addl	$0x1, 0x10(%rsp)
    00004637: 	movl	0x10(%rsp), %eax
    0000463b: 	cmpl	%ecx, %eax
    0000463d: 	jl	.Ltmp3950 # Offset: 17981
.Ltmp3947:
    00004643: 	movq	%r12, %rsi
    00004646: 	movq	%r15, %rdi
    00004649: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17993
    0000464e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004655: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000465c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004663: 	je	.Ltmp3951 # Offset: 18019
.Ltmp3990:
    00004669: 	movq	-0x20(%rax), %rbx
    0000466d: 	callq	clock@PLT # Offset: 18029
    00004672: 	pxor	%xmm0, %xmm0
    00004676: 	movq	%rax, end_time(%rip)
    0000467d: 	movq	%rbx, %rdi
    00004680: 	subq	start_time(%rip), %rax
    00004687: 	cvtsi2sd	%rax, %xmm0
    0000468c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004694: 	callq	_Z13record_resultdPKc # Offset: 18068
    00004699: 	movq	0xc0(%rsp), %rdi
    000046a1: 	cmpq	%r13, %rdi
    000046a4: 	je	.Ltmp3952 # Offset: 18084
    000046a6: 	movq	0xd0(%rsp), %rax
    000046ae: 	leaq	0x1(%rax), %rsi
    000046b2: 	callq	_ZdlPvm@PLT # Offset: 18098
.Ltmp3952:
    000046b7: 	leaq	DATAat0x577a8(%rip), %rdx
    000046be: 	movq	%r14, %rsi
    000046c1: 	movq	%r12, %rdi
    000046c4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18116
    000046c9: 	callq	clock@PLT # Offset: 18121
    000046ce: 	movl	iterations(%rip), %ecx
    000046d4: 	movq	%rax, start_time(%rip)
    000046db: 	testl	%ecx, %ecx
    000046dd: 	jle	.Ltmp3953 # Offset: 18141
    000046e3: 	movdqa	DATAat0x57d10(%rip), %xmm3
    000046eb: 	movl	$0x0, (%rsp)
    000046f2: 	leaq	0x2020(%rsp), %rbx
    000046fa: 	movaps	%xmm3, 0x10(%rsp)
    000046ff: 	nop # Size: 1
.Ltmp3956:
    00004700: 	movq	%rbp, %rax
    00004703: 	pxor	%xmm0, %xmm0
    00004707: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3954:
    00004710: 	movdqa	0x10(%rsp), %xmm1
    00004716: 	pand	(%rax), %xmm1
    0000471a: 	addq	$0x10, %rax
    0000471e: 	paddb	%xmm1, %xmm0
    00004722: 	cmpq	%rax, %rbx
    00004725: 	jne	.Ltmp3954 # Offset: 18213
    00004727: 	movdqa	%xmm0, %xmm1
    0000472b: 	cvttsd2si	init_value(%rip), %edx
    00004733: 	psrldq	$0x8, %xmm1
    00004738: 	paddb	%xmm1, %xmm0
    0000473c: 	pxor	%xmm1, %xmm1
    00004740: 	psadbw	%xmm1, %xmm0
    00004744: 	movd	%xmm0, %eax
    00004748: 	shll	$0x6, %edx
    0000474b: 	cmpb	%al, %dl
    0000474d: 	je	.Ltmp3955 # Offset: 18253
    0000474f: 	movl	current_test(%rip), %edx
    00004755: 	leaq	DATAat0x571d0(%rip), %rsi
    0000475c: 	movl	$0x1, %edi
    00004761: 	xorl	%eax, %eax
    00004763: 	callq	__printf_chk@PLT # Offset: 18275
    00004768: 	movl	iterations(%rip), %ecx
.Ltmp3955:
    0000476e: 	addl	$0x1, (%rsp)
    00004772: 	movl	(%rsp), %eax
    00004775: 	cmpl	%ecx, %eax
    00004777: 	jl	.Ltmp3956 # Offset: 18295
.Ltmp3953:
    00004779: 	movq	%r12, %rsi
    0000477c: 	movq	%r15, %rdi
    0000477f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18303
    00004784: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000478b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004792: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004799: 	je	.Ltmp3957 # Offset: 18329
.Ltmp3989:
    0000479f: 	movq	-0x20(%rax), %rbx
    000047a3: 	callq	clock@PLT # Offset: 18339
    000047a8: 	pxor	%xmm0, %xmm0
    000047ac: 	movq	%rax, end_time(%rip)
    000047b3: 	movq	%rbx, %rdi
    000047b6: 	subq	start_time(%rip), %rax
    000047bd: 	cvtsi2sd	%rax, %xmm0
    000047c2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000047ca: 	callq	_Z13record_resultdPKc # Offset: 18378
    000047cf: 	movq	0xc0(%rsp), %rdi
    000047d7: 	cmpq	%r13, %rdi
    000047da: 	je	.Ltmp3958 # Offset: 18394
    000047dc: 	movq	0xd0(%rsp), %rax
    000047e4: 	leaq	0x1(%rax), %rsi
    000047e8: 	callq	_ZdlPvm@PLT # Offset: 18408
.Ltmp3958:
    000047ed: 	leaq	DATAat0x577b0(%rip), %rdx
    000047f4: 	movq	%r14, %rsi
    000047f7: 	movq	%r12, %rdi
    000047fa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18426
    000047ff: 	movq	%r12, %rsi
    00004802: 	movq	%rbp, %rdi
    00004805: 	callq	"_Z13test_constantIa13and_remainderIaLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 18437
    0000480a: 	movq	0xc0(%rsp), %rdi
    00004812: 	cmpq	%r13, %rdi
    00004815: 	je	.Ltmp3959 # Offset: 18453
    00004817: 	movq	0xd0(%rsp), %rax
    0000481f: 	leaq	0x1(%rax), %rsi
    00004823: 	callq	_ZdlPvm@PLT # Offset: 18467
.Ltmp3959:
    00004828: 	leaq	DATAat0x577c2(%rip), %rdx
    0000482f: 	movq	%r14, %rsi
    00004832: 	movq	%r12, %rdi
    00004835: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18485
    0000483a: 	movq	%r12, %rsi
    0000483d: 	movq	%rbp, %rdi
    00004840: 	callq	"_Z13test_constantIa14and_remainder2IaLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 18496
    00004845: 	movq	0xc0(%rsp), %rdi
    0000484d: 	cmpq	%r13, %rdi
    00004850: 	je	.Ltmp3960 # Offset: 18512
    00004852: 	movq	0xd0(%rsp), %rax
    0000485a: 	leaq	0x1(%rax), %rsi
    0000485e: 	callq	_ZdlPvm@PLT # Offset: 18526
.Ltmp3960:
    00004863: 	leaq	DATAat0x577d5(%rip), %rdx
    0000486a: 	movq	%r14, %rsi
    0000486d: 	movq	%r12, %rdi
    00004870: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18544
    00004875: 	callq	clock@PLT # Offset: 18549
    0000487a: 	movl	iterations(%rip), %ecx
    00004880: 	movq	%rax, start_time(%rip)
    00004887: 	testl	%ecx, %ecx
    00004889: 	jle	.Ltmp3961 # Offset: 18569
    0000488f: 	movdqa	DATAat0x57d10(%rip), %xmm7
    00004897: 	movl	$0x0, (%rsp)
    0000489e: 	leaq	0x2020(%rsp), %rbx
    000048a6: 	movaps	%xmm7, 0x10(%rsp)
    000048ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3964:
    000048b0: 	pxor	%xmm2, %xmm2
    000048b4: 	movq	%rbp, %rax
    000048b7: 	movdqa	%xmm2, %xmm3
    000048bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3962:
    000048c0: 	movdqa	%xmm3, %xmm1
    000048c4: 	movdqa	0x10(%rsp), %xmm7
    000048ca: 	movdqa	(%rax), %xmm0
    000048ce: 	addq	$0x10, %rax
    000048d2: 	pcmpgtb	-0x10(%rax), %xmm1
    000048d7: 	pand	%xmm7, %xmm1
    000048db: 	paddb	%xmm1, %xmm0
    000048df: 	pand	%xmm7, %xmm0
    000048e3: 	psubb	%xmm1, %xmm0
    000048e7: 	paddb	%xmm0, %xmm2
    000048eb: 	cmpq	%rbx, %rax
    000048ee: 	jne	.Ltmp3962 # Offset: 18670
    000048f0: 	movdqa	%xmm2, %xmm0
    000048f4: 	cvttsd2si	init_value(%rip), %edx
    000048fc: 	psrldq	$0x8, %xmm0
    00004901: 	paddb	%xmm0, %xmm2
    00004905: 	psadbw	%xmm3, %xmm2
    00004909: 	movd	%xmm2, %eax
    0000490d: 	shll	$0x6, %edx
    00004910: 	cmpb	%al, %dl
    00004912: 	je	.Ltmp3963 # Offset: 18706
    00004914: 	movl	current_test(%rip), %edx
    0000491a: 	leaq	DATAat0x571d0(%rip), %rsi
    00004921: 	movl	$0x1, %edi
    00004926: 	xorl	%eax, %eax
    00004928: 	callq	__printf_chk@PLT # Offset: 18728
    0000492d: 	movl	iterations(%rip), %ecx
.Ltmp3963:
    00004933: 	addl	$0x1, (%rsp)
    00004937: 	movl	(%rsp), %eax
    0000493a: 	cmpl	%ecx, %eax
    0000493c: 	jl	.Ltmp3964 # Offset: 18748
.Ltmp3961:
    00004942: 	movq	%r12, %rsi
    00004945: 	movq	%r15, %rdi
    00004948: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18760
    0000494d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004954: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000495b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004962: 	je	.Ltmp3965 # Offset: 18786
.Ltmp3988:
    00004968: 	movq	-0x20(%rax), %rbx
    0000496c: 	callq	clock@PLT # Offset: 18796
    00004971: 	pxor	%xmm0, %xmm0
    00004975: 	movq	%rax, end_time(%rip)
    0000497c: 	movq	%rbx, %rdi
    0000497f: 	subq	start_time(%rip), %rax
    00004986: 	cvtsi2sd	%rax, %xmm0
    0000498b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004993: 	callq	_Z13record_resultdPKc # Offset: 18835
    00004998: 	movq	0xc0(%rsp), %rdi
    000049a0: 	cmpq	%r13, %rdi
    000049a3: 	je	.Ltmp3966 # Offset: 18851
    000049a5: 	movq	0xd0(%rsp), %rax
    000049ad: 	leaq	0x1(%rax), %rsi
    000049b1: 	callq	_ZdlPvm@PLT # Offset: 18865
.Ltmp3966:
    000049b6: 	leaq	DATAat0x577ed(%rip), %rdx
    000049bd: 	movq	%r14, %rsi
    000049c0: 	movq	%r12, %rdi
    000049c3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18883
    000049c8: 	movq	%r12, %rdx
    000049cb: 	movl	$0x40, %esi
    000049d0: 	movq	%rbp, %rdi
    000049d3: 	callq	"_Z14test_variable1Ia25custom_remainder_variableIaEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 18899
    000049d8: 	movq	0xc0(%rsp), %rdi
    000049e0: 	cmpq	%r13, %rdi
    000049e3: 	je	.Ltmp3967 # Offset: 18915
    000049e5: 	movq	0xd0(%rsp), %rax
    000049ed: 	leaq	0x1(%rax), %rsi
    000049f1: 	callq	_ZdlPvm@PLT # Offset: 18929
.Ltmp3967:
    000049f6: 	leaq	DATAat0x57807(%rip), %rdx
    000049fd: 	movq	%r14, %rsi
    00004a00: 	movq	%r12, %rdi
    00004a03: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18947
    00004a08: 	callq	clock@PLT # Offset: 18952
    00004a0d: 	movl	iterations(%rip), %ecx
    00004a13: 	movq	%rax, start_time(%rip)
    00004a1a: 	testl	%ecx, %ecx
    00004a1c: 	jle	.Ltmp3968 # Offset: 18972
    00004a22: 	movdqa	DATAat0x57d10(%rip), %xmm6
    00004a2a: 	movl	$0x0, (%rsp)
    00004a31: 	leaq	0x2020(%rsp), %rbx
    00004a39: 	movaps	%xmm6, 0x10(%rsp)
    00004a3e: 	nop # Size: 2
.Ltmp3971:
    00004a40: 	pxor	%xmm2, %xmm2
    00004a44: 	movq	%rbp, %rax
    00004a47: 	movdqa	%xmm2, %xmm3
    00004a4b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3969:
    00004a50: 	movdqa	%xmm3, %xmm1
    00004a54: 	movdqa	0x10(%rsp), %xmm4
    00004a5a: 	movdqa	(%rax), %xmm0
    00004a5e: 	addq	$0x10, %rax
    00004a62: 	pcmpgtb	-0x10(%rax), %xmm1
    00004a67: 	pand	%xmm4, %xmm1
    00004a6b: 	paddb	%xmm1, %xmm0
    00004a6f: 	pand	%xmm4, %xmm0
    00004a73: 	psubb	%xmm1, %xmm0
    00004a77: 	paddb	%xmm0, %xmm2
    00004a7b: 	cmpq	%rbx, %rax
    00004a7e: 	jne	.Ltmp3969 # Offset: 19070
    00004a80: 	movdqa	%xmm2, %xmm0
    00004a84: 	cvttsd2si	init_value(%rip), %edx
    00004a8c: 	psrldq	$0x8, %xmm0
    00004a91: 	paddb	%xmm0, %xmm2
    00004a95: 	psadbw	%xmm3, %xmm2
    00004a99: 	movd	%xmm2, %eax
    00004a9d: 	shll	$0x6, %edx
    00004aa0: 	cmpb	%al, %dl
    00004aa2: 	je	.Ltmp3970 # Offset: 19106
    00004aa4: 	movl	current_test(%rip), %edx
    00004aaa: 	leaq	DATAat0x571d0(%rip), %rsi
    00004ab1: 	movl	$0x1, %edi
    00004ab6: 	xorl	%eax, %eax
    00004ab8: 	callq	__printf_chk@PLT # Offset: 19128
    00004abd: 	movl	iterations(%rip), %ecx
.Ltmp3970:
    00004ac3: 	addl	$0x1, (%rsp)
    00004ac7: 	movl	(%rsp), %eax
    00004aca: 	cmpl	%ecx, %eax
    00004acc: 	jl	.Ltmp3971 # Offset: 19148
.Ltmp3968:
    00004ad2: 	movq	%r12, %rsi
    00004ad5: 	movq	%r15, %rdi
    00004ad8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19160
    00004add: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004ae4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004aeb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004af2: 	je	.Ltmp3972 # Offset: 19186
.Ltmp3987:
    00004af8: 	movq	-0x20(%rax), %rbp
    00004afc: 	callq	clock@PLT # Offset: 19196
    00004b01: 	pxor	%xmm0, %xmm0
    00004b05: 	movq	%rax, end_time(%rip)
    00004b0c: 	movq	%rbp, %rdi
    00004b0f: 	subq	start_time(%rip), %rax
    00004b16: 	cvtsi2sd	%rax, %xmm0
    00004b1b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004b23: 	callq	_Z13record_resultdPKc # Offset: 19235
    00004b28: 	movq	0xc0(%rsp), %rdi
    00004b30: 	cmpq	%r13, %rdi
    00004b33: 	je	.Ltmp3973 # Offset: 19251
    00004b35: 	movq	0xd0(%rsp), %rax
    00004b3d: 	leaq	0x1(%rax), %rsi
    00004b41: 	callq	_ZdlPvm@PLT # Offset: 19265
.Ltmp3973:
    00004b46: 	leaq	DATAat0x579a4(%rip), %rdx
    00004b4d: 	movq	%r14, %rsi
    00004b50: 	movq	%r12, %rdi
    00004b53: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19283
    00004b58: 	movl	iterations(%rip), %edx
    00004b5e: 	xorl	%r8d, %r8d
    00004b61: 	xorl	%ecx, %ecx
    00004b63: 	movl	$0x1f40, %esi
    00004b68: 	movq	0xc0(%rsp), %rdi
    00004b70: 	callq	_Z9summarizePKciiii # Offset: 19312
    00004b75: 	movq	0xc0(%rsp), %rdi
    00004b7d: 	cmpq	%r13, %rdi
    00004b80: 	je	.Ltmp3974 # Offset: 19328
    00004b82: 	movq	0xd0(%rsp), %rax
    00004b8a: 	leaq	0x1(%rax), %rsi
    00004b8e: 	callq	_ZdlPvm@PLT # Offset: 19342
.Ltmp3974:
    00004b93: 	movq	0xa0(%rsp), %rdi
    00004b9b: 	leaq	0xb0(%rsp), %rax
    00004ba3: 	cmpq	%rax, %rdi
    00004ba6: 	je	.Ltmp3975 # Offset: 19366
    00004ba8: 	movq	0xb0(%rsp), %rax
    00004bb0: 	leaq	0x1(%rax), %rsi
    00004bb4: 	callq	_ZdlPvm@PLT # Offset: 19380
.Ltmp3975:
    00004bb9: 	movq	0x80(%rsp), %rdi
    00004bc1: 	leaq	0x90(%rsp), %rax
    00004bc9: 	cmpq	%rax, %rdi
    00004bcc: 	je	.Ltmp3976 # Offset: 19404
    00004bce: 	movq	0x90(%rsp), %rax
    00004bd6: 	leaq	0x1(%rax), %rsi
    00004bda: 	callq	_ZdlPvm@PLT # Offset: 19418
.Ltmp3976:
    00004bdf: 	movq	0x60(%rsp), %rdi
    00004be4: 	leaq	0x70(%rsp), %rax
    00004be9: 	cmpq	%rax, %rdi
    00004bec: 	je	.Ltmp3977 # Offset: 19436
    00004bee: 	movq	0x70(%rsp), %rax
    00004bf3: 	leaq	0x1(%rax), %rsi
    00004bf7: 	callq	_ZdlPvm@PLT # Offset: 19447
.Ltmp3977:
    00004bfc: 	movq	0x2028(%rsp), %rax
    00004c04: 	subq	%fs:0x28, %rax
    00004c0d: 	jne	.Ltmp3978 # Offset: 19469
    00004c13: 	addq	$0x2038, %rsp
    00004c1a: 	popq	%rbx
    00004c1b: 	popq	%rbp
    00004c1c: 	popq	%r12
    00004c1e: 	popq	%r13
    00004c20: 	popq	%r14
    00004c22: 	popq	%r15
    00004c24: 	retq # Offset: 19492
    00004c25: 	nopl	(%rax) # Size: 3
.Ltmp3849:
    00004c28: 	andl	$0x1, %eax
    00004c2b: 	addq	$0x1, %rdx
    00004c2f: 	addl	%eax, %ecx
    00004c31: 	cmpq	%rdx, %rbx
    00004c34: 	jne	.Ltmp3850 # Offset: 19508
    00004c3a: 	cvttsd2si	init_value(%rip), %eax
    00004c42: 	testb	%al, %al
    00004c44: 	js	.Ltmp3979 # Offset: 19524
.Ltmp3851:
    00004c4a: 	andl	$0x1, %eax
    00004c4d: 	shll	$0x6, %eax
    00004c50: 	movl	%eax, %edx
    00004c52: 	jmp	.Ltmp3980 # Offset: 19538
    00004c57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3695:
    00004c60: 	movl	current_test(%rip), %edx
    00004c66: 	leaq	DATAat0x571d0(%rip), %rsi
    00004c6d: 	movl	$0x1, %edi
    00004c72: 	xorl	%eax, %eax
    00004c74: 	callq	__printf_chk@PLT # Offset: 19572
    00004c79: 	movl	iterations(%rip), %edx
    00004c7f: 	jmp	.Ltmp3981 # Offset: 19583
    00004c84: 	nopl	(%rax) # Size: 4
.Ltmp3688:
    00004c88: 	movl	current_test(%rip), %edx
    00004c8e: 	leaq	DATAat0x571d0(%rip), %rsi
    00004c95: 	movl	$0x1, %edi
    00004c9a: 	xorl	%eax, %eax
    00004c9c: 	callq	__printf_chk@PLT # Offset: 19612
    00004ca1: 	movl	iterations(%rip), %edx
    00004ca7: 	jmp	.Ltmp3982 # Offset: 19623
    00004cac: 	nopl	(%rax) # Size: 4
.Ltmp3682:
    00004cb0: 	movl	current_test(%rip), %edx
    00004cb6: 	leaq	DATAat0x571d0(%rip), %rsi
    00004cbd: 	movl	$0x1, %edi
    00004cc2: 	xorl	%eax, %eax
    00004cc4: 	callq	__printf_chk@PLT # Offset: 19652
    00004cc9: 	movl	iterations(%rip), %edx
    00004ccf: 	jmp	.Ltmp3983 # Offset: 19663
    00004cd4: 	nopl	(%rax) # Size: 4
.Ltmp3675:
    00004cd8: 	movl	current_test(%rip), %edx
    00004cde: 	leaq	DATAat0x571d0(%rip), %rsi
    00004ce5: 	movl	$0x1, %edi
    00004cea: 	xorl	%eax, %eax
    00004cec: 	callq	__printf_chk@PLT # Offset: 19692
    00004cf1: 	movl	iterations(%rip), %edx
    00004cf7: 	jmp	.Ltmp3984 # Offset: 19703
    00004cfc: 	nopl	(%rax) # Size: 4
.Ltmp3840:
    00004d00: 	addq	$0x1, %rax
    00004d04: 	subl	$0x1, %esi
    00004d07: 	cmpq	%rbx, %rax
    00004d0a: 	jne	.Ltmp3841 # Offset: 19722
    00004d10: 	jmp	.Ltmp3985 # Offset: 19728
.Ltmp3651:
    00004d15: 	movq	-0x8(%rdx), %rax
    00004d19: 	addq	$0x200, %rax
    00004d1f: 	jmp	.Ltmp3986 # Offset: 19743
.Ltmp3972:
    00004d24: 	movq	-0x8(%rdx), %rax
    00004d28: 	addq	$0x200, %rax
    00004d2e: 	jmp	.Ltmp3987 # Offset: 19758
.Ltmp3965:
    00004d33: 	movq	-0x8(%rdx), %rax
    00004d37: 	addq	$0x200, %rax
    00004d3d: 	jmp	.Ltmp3988 # Offset: 19773
.Ltmp3957:
    00004d42: 	movq	-0x8(%rdx), %rax
    00004d46: 	addq	$0x200, %rax
    00004d4c: 	jmp	.Ltmp3989 # Offset: 19788
.Ltmp3951:
    00004d51: 	movq	-0x8(%rdx), %rax
    00004d55: 	addq	$0x200, %rax
    00004d5b: 	jmp	.Ltmp3990 # Offset: 19803
.Ltmp3944:
    00004d60: 	movq	-0x8(%rdx), %rax
    00004d64: 	addq	$0x200, %rax
    00004d6a: 	jmp	.Ltmp3991 # Offset: 19818
.Ltmp3936:
    00004d6f: 	movq	-0x8(%rdx), %rax
    00004d73: 	addq	$0x200, %rax
    00004d79: 	jmp	.Ltmp3992 # Offset: 19833
.Ltmp3930:
    00004d7e: 	movq	-0x8(%rdx), %rax
    00004d82: 	addq	$0x200, %rax
    00004d88: 	jmp	.Ltmp3993 # Offset: 19848
.Ltmp3923:
    00004d8d: 	movq	-0x8(%rdx), %rax
    00004d91: 	addq	$0x200, %rax
    00004d97: 	jmp	.Ltmp3994 # Offset: 19863
.Ltmp3915:
    00004d9c: 	movq	-0x8(%rdx), %rax
    00004da0: 	addq	$0x200, %rax
    00004da6: 	jmp	.Ltmp3995 # Offset: 19878
.Ltmp3909:
    00004dab: 	movq	-0x8(%rdx), %rax
    00004daf: 	addq	$0x200, %rax
    00004db5: 	jmp	.Ltmp3996 # Offset: 19893
.Ltmp3902:
    00004dba: 	movq	-0x8(%rdx), %rax
    00004dbe: 	addq	$0x200, %rax
    00004dc4: 	jmp	.Ltmp3997 # Offset: 19908
.Ltmp3894:
    00004dc9: 	movq	-0x8(%rdx), %rax
    00004dcd: 	addq	$0x200, %rax
    00004dd3: 	jmp	.Ltmp3998 # Offset: 19923
.Ltmp3888:
    00004dd8: 	movq	-0x8(%rdx), %rax
    00004ddc: 	addq	$0x200, %rax
    00004de2: 	jmp	.Ltmp3999 # Offset: 19938
.Ltmp3881:
    00004de7: 	movq	-0x8(%rdx), %rax
    00004deb: 	addq	$0x200, %rax
    00004df1: 	jmp	.Ltmp4000 # Offset: 19953
.Ltmp3873:
    00004df6: 	movq	-0x8(%rdx), %rax
    00004dfa: 	addq	$0x200, %rax
    00004e00: 	jmp	.Ltmp4001 # Offset: 19968
.Ltmp3867:
    00004e05: 	movq	-0x8(%rdx), %rax
    00004e09: 	addq	$0x200, %rax
    00004e0f: 	jmp	.Ltmp4002 # Offset: 19983
.Ltmp3860:
    00004e14: 	movq	-0x8(%rdx), %rax
    00004e18: 	addq	$0x200, %rax
    00004e1e: 	jmp	.Ltmp4003 # Offset: 19998
.Ltmp3854:
    00004e23: 	movq	-0x8(%rdx), %rax
    00004e27: 	addq	$0x200, %rax
    00004e2d: 	jmp	.Ltmp4004 # Offset: 20013
.Ltmp3846:
    00004e32: 	movq	-0x8(%rdx), %rax
    00004e36: 	addq	$0x200, %rax
    00004e3c: 	jmp	.Ltmp4005 # Offset: 20028
.Ltmp3836:
    00004e41: 	movq	-0x8(%rdx), %rax
    00004e45: 	addq	$0x200, %rax
    00004e4b: 	jmp	.Ltmp4006 # Offset: 20043
.Ltmp3830:
    00004e50: 	movq	-0x8(%rdx), %rax
    00004e54: 	addq	$0x200, %rax
    00004e5a: 	jmp	.Ltmp4007 # Offset: 20058
.Ltmp3822:
    00004e5f: 	movq	-0x8(%rdx), %rax
    00004e63: 	addq	$0x200, %rax
    00004e69: 	jmp	.Ltmp4008 # Offset: 20073
.Ltmp3816:
    00004e6e: 	movq	-0x8(%rdx), %rax
    00004e72: 	addq	$0x200, %rax
    00004e78: 	jmp	.Ltmp4009 # Offset: 20088
.Ltmp3809:
    00004e7d: 	movq	-0x8(%rdx), %rax
    00004e81: 	addq	$0x200, %rax
    00004e87: 	jmp	.Ltmp4010 # Offset: 20103
.Ltmp3802:
    00004e8c: 	movq	-0x8(%rdx), %rax
    00004e90: 	addq	$0x200, %rax
    00004e96: 	jmp	.Ltmp4011 # Offset: 20118
.Ltmp3796:
    00004e9b: 	movq	-0x8(%rdx), %rax
    00004e9f: 	addq	$0x200, %rax
    00004ea5: 	jmp	.Ltmp4012 # Offset: 20133
.Ltmp3789:
    00004eaa: 	movq	-0x8(%rdx), %rax
    00004eae: 	addq	$0x200, %rax
    00004eb4: 	jmp	.Ltmp4013 # Offset: 20148
.Ltmp3783:
    00004eb9: 	movq	-0x8(%rdx), %rax
    00004ebd: 	addq	$0x200, %rax
    00004ec3: 	jmp	.Ltmp4014 # Offset: 20163
.Ltmp3776:
    00004ec8: 	movq	-0x8(%rdx), %rax
    00004ecc: 	addq	$0x200, %rax
    00004ed2: 	jmp	.Ltmp4015 # Offset: 20178
.Ltmp3770:
    00004ed7: 	movq	-0x8(%rdx), %rax
    00004edb: 	addq	$0x200, %rax
    00004ee1: 	jmp	.Ltmp4016 # Offset: 20193
.Ltmp3763:
    00004ee6: 	movq	-0x8(%rdx), %rax
    00004eea: 	addq	$0x200, %rax
    00004ef0: 	jmp	.Ltmp4017 # Offset: 20208
.Ltmp3756:
    00004ef5: 	movq	-0x8(%rdx), %rax
    00004ef9: 	addq	$0x200, %rax
    00004eff: 	jmp	.Ltmp4018 # Offset: 20223
.Ltmp3750:
    00004f04: 	movq	-0x8(%rdx), %rax
    00004f08: 	addq	$0x200, %rax
    00004f0e: 	jmp	.Ltmp4019 # Offset: 20238
.Ltmp3744:
    00004f13: 	movq	-0x8(%rdx), %rax
    00004f17: 	addq	$0x200, %rax
    00004f1d: 	jmp	.Ltmp4020 # Offset: 20253
.Ltmp3737:
    00004f22: 	movq	-0x8(%rdx), %rax
    00004f26: 	addq	$0x200, %rax
    00004f2c: 	jmp	.Ltmp4021 # Offset: 20268
.Ltmp3731:
    00004f31: 	movq	-0x8(%rdx), %rax
    00004f35: 	addq	$0x200, %rax
    00004f3b: 	jmp	.Ltmp4022 # Offset: 20283
.Ltmp3725:
    00004f40: 	movq	-0x8(%rdx), %rax
    00004f44: 	addq	$0x200, %rax
    00004f4a: 	jmp	.Ltmp4023 # Offset: 20298
.Ltmp3718:
    00004f4f: 	movq	-0x8(%rdx), %rax
    00004f53: 	addq	$0x200, %rax
    00004f59: 	jmp	.Ltmp4024 # Offset: 20313
.Ltmp3712:
    00004f5e: 	movq	-0x8(%rdx), %rax
    00004f62: 	addq	$0x200, %rax
    00004f68: 	jmp	.Ltmp4025 # Offset: 20328
.Ltmp3704:
    00004f6d: 	movq	-0x8(%rdx), %rax
    00004f71: 	addq	$0x200, %rax
    00004f77: 	jmp	.Ltmp4026 # Offset: 20343
.Ltmp3697:
    00004f7c: 	movq	-0x8(%rdx), %rax
    00004f80: 	addq	$0x200, %rax
    00004f86: 	jmp	.Ltmp4027 # Offset: 20358
.Ltmp3690:
    00004f8b: 	movq	-0x8(%rdx), %rax
    00004f8f: 	addq	$0x200, %rax
    00004f95: 	jmp	.Ltmp4028 # Offset: 20373
.Ltmp3684:
    00004f9a: 	movq	-0x8(%rdx), %rax
    00004f9e: 	addq	$0x200, %rax
    00004fa4: 	jmp	.Ltmp4029 # Offset: 20388
.Ltmp3677:
    00004fa9: 	movq	-0x8(%rdx), %rax
    00004fad: 	addq	$0x200, %rax
    00004fb3: 	jmp	.Ltmp4030 # Offset: 20403
.Ltmp3670:
    00004fb8: 	movq	-0x8(%rdx), %rax
    00004fbc: 	addq	$0x200, %rax
    00004fc2: 	jmp	.Ltmp4031 # Offset: 20418
.Ltmp3663:
    00004fc7: 	movq	-0x8(%rdx), %rax
    00004fcb: 	addq	$0x200, %rax
    00004fd1: 	jmp	.Ltmp4032 # Offset: 20433
.Ltmp3657:
    00004fd6: 	movq	-0x8(%rdx), %rax
    00004fda: 	addq	$0x200, %rax
    00004fe0: 	jmp	.Ltmp4033 # Offset: 20448
.Ltmp3843:
    00004fe5: 	movl	$0xffffffc0, %eax
    00004fea: 	jmp	.Ltmp4034 # Offset: 20458
.Ltmp3978:
    00004fef: 	callq	__stack_chk_fail@PLT # Offset: 20463
    00004ff4: 	endbr64
.Ltmp4036:
    00004ff8: 	movq	%rax, %rbx
    00004ffb: 	jmp	.Ltmp4035 # Offset: 20475
    00004ffd: 	endbr64
    00005001: 	jmp	.Ltmp4036 # Offset: 20481
    00005003: 	endbr64
    00005007: 	jmp	.Ltmp4036 # Offset: 20487
    00005009: 	endbr64
    0000500d: 	jmp	.Ltmp4036 # Offset: 20493
    0000500f: 	endbr64
    00005013: 	jmp	.Ltmp4036 # Offset: 20499
    00005015: 	endbr64
    00005019: 	jmp	.Ltmp4036 # Offset: 20505
    0000501b: 	endbr64
    0000501f: 	jmp	.Ltmp4036 # Offset: 20511
    00005021: 	endbr64
    00005025: 	jmp	.Ltmp4036 # Offset: 20517
    00005027: 	endbr64
    0000502b: 	jmp	.Ltmp4036 # Offset: 20523
    0000502d: 	endbr64
    00005031: 	jmp	.Ltmp4036 # Offset: 20529
    00005033: 	endbr64
    00005037: 	jmp	.Ltmp4036 # Offset: 20535
    00005039: 	endbr64
    0000503d: 	jmp	.Ltmp4036 # Offset: 20541
    0000503f: 	endbr64
    00005043: 	jmp	.Ltmp4036 # Offset: 20547
    00005045: 	endbr64
    00005049: 	jmp	.Ltmp4036 # Offset: 20553
    0000504b: 	endbr64
    0000504f: 	jmp	.Ltmp4036 # Offset: 20559
    00005051: 	endbr64
    00005055: 	jmp	.Ltmp4036 # Offset: 20565
    00005057: 	endbr64
    0000505b: 	jmp	.Ltmp4036 # Offset: 20571
    0000505d: 	endbr64
    00005061: 	jmp	.Ltmp4036 # Offset: 20577
    00005063: 	endbr64
    00005067: 	jmp	.Ltmp4036 # Offset: 20583
.Ltmp4035:
    00005069: 	movq	0xc0(%rsp), %rdi
    00005071: 	cmpq	%r13, %rdi
    00005074: 	je	.Ltmp4037 # Offset: 20596
    00005076: 	movq	0xd0(%rsp), %rax
    0000507e: 	leaq	0x1(%rax), %rsi
    00005082: 	callq	_ZdlPvm@PLT # Offset: 20610
.Ltmp4037:
    00005087: 	movq	0xa0(%rsp), %rdi
    0000508f: 	leaq	0xb0(%rsp), %rax
    00005097: 	cmpq	%rax, %rdi
    0000509a: 	je	.Ltmp4038 # Offset: 20634
    0000509c: 	movq	0xb0(%rsp), %rax
    000050a4: 	leaq	0x1(%rax), %rsi
    000050a8: 	callq	_ZdlPvm@PLT # Offset: 20648
.Ltmp4038:
    000050ad: 	movq	0x80(%rsp), %rdi
    000050b5: 	leaq	0x90(%rsp), %rax
    000050bd: 	cmpq	%rax, %rdi
    000050c0: 	je	.Ltmp4039 # Offset: 20672
    000050c2: 	movq	0x90(%rsp), %rax
    000050ca: 	leaq	0x1(%rax), %rsi
    000050ce: 	callq	_ZdlPvm@PLT # Offset: 20686
.Ltmp4039:
    000050d3: 	movq	%rbx, %rbp
.Ltmp4045:
    000050d6: 	movq	0x60(%rsp), %rdi
    000050db: 	leaq	0x70(%rsp), %rax
    000050e0: 	cmpq	%rax, %rdi
    000050e3: 	je	.Ltmp4040 # Offset: 20707
    000050e5: 	movq	0x70(%rsp), %rax
    000050ea: 	leaq	0x1(%rax), %rsi
    000050ee: 	callq	_ZdlPvm@PLT # Offset: 20718
.Ltmp4040:
    000050f3: 	movq	%rbp, %rdi
    000050f6: 	callq	_Unwind_Resume@PLT # Offset: 20726
    000050fb: 	endbr64
    000050ff: 	jmp	.Ltmp4036 # Offset: 20735
    00005104: 	endbr64
.Ltmp4042:
    00005108: 	movq	%rax, %rbp
    0000510b: 	jmp	.Ltmp4041 # Offset: 20747
    00005110: 	endbr64
    00005114: 	jmp	.Ltmp4042 # Offset: 20756
    00005116: 	endbr64
    0000511a: 	jmp	.Ltmp4042 # Offset: 20762
    0000511c: 	endbr64
    00005120: 	jmp	.Ltmp4042 # Offset: 20768
    00005122: 	endbr64
    00005126: 	jmp	.Ltmp4042 # Offset: 20774
    00005128: 	endbr64
    0000512c: 	jmp	.Ltmp4042 # Offset: 20780
    0000512e: 	endbr64
    00005132: 	jmp	.Ltmp4042 # Offset: 20786
    00005134: 	endbr64
    00005138: 	jmp	.Ltmp4036 # Offset: 20792
    0000513d: 	endbr64
    00005141: 	jmp	.Ltmp4036 # Offset: 20801
    00005146: 	endbr64
    0000514a: 	jmp	.Ltmp4036 # Offset: 20810
    0000514f: 	endbr64
    00005153: 	jmp	.Ltmp4036 # Offset: 20819
    00005158: 	endbr64
    0000515c: 	jmp	.Ltmp4036 # Offset: 20828
    00005161: 	endbr64
    00005165: 	jmp	.Ltmp4036 # Offset: 20837
    0000516a: 	endbr64
    0000516e: 	jmp	.Ltmp4036 # Offset: 20846
    00005173: 	endbr64
    00005177: 	jmp	.Ltmp4036 # Offset: 20855
    0000517c: 	endbr64
    00005180: 	jmp	.Ltmp4042 # Offset: 20864
    00005182: 	endbr64
    00005186: 	jmp	.Ltmp4042 # Offset: 20870
    00005188: 	endbr64
    0000518c: 	jmp	.Ltmp4042 # Offset: 20876
    00005191: 	endbr64
    00005195: 	jmp	.Ltmp4036 # Offset: 20885
    0000519a: 	endbr64
.Ltmp4044:
    0000519e: 	movq	%rax, %rbx
    000051a1: 	jmp	.Ltmp4043 # Offset: 20897
    000051a3: 	endbr64
    000051a7: 	jmp	.Ltmp4044 # Offset: 20903
    000051a9: 	endbr64
    000051ad: 	jmp	.Ltmp4044 # Offset: 20909
    000051af: 	endbr64
    000051b3: 	jmp	.Ltmp4044 # Offset: 20915
    000051b5: 	endbr64
    000051b9: 	jmp	.Ltmp4042 # Offset: 20921
    000051be: 	endbr64
    000051c2: 	jmp	.Ltmp4042 # Offset: 20930
    000051c7: 	endbr64
    000051cb: 	jmp	.Ltmp4042 # Offset: 20939
.Ltmp4043:
    000051d0: 	movq	0xc0(%rsp), %rdi
    000051d8: 	cmpq	%r13, %rdi
    000051db: 	je	.Ltmp4038 # Offset: 20955
    000051e1: 	movq	0xd0(%rsp), %rax
    000051e9: 	leaq	0x1(%rax), %rsi
    000051ed: 	callq	_ZdlPvm@PLT # Offset: 20973
    000051f2: 	jmp	.Ltmp4038 # Offset: 20978
    000051f7: 	endbr64
    000051fb: 	jmp	.Ltmp4036 # Offset: 20987
    00005200: 	endbr64
    00005204: 	jmp	.Ltmp4036 # Offset: 20996
    00005209: 	endbr64
    0000520d: 	jmp	.Ltmp4036 # Offset: 21005
    00005212: 	endbr64
    00005216: 	jmp	.Ltmp4036 # Offset: 21014
    0000521b: 	endbr64
    0000521f: 	jmp	.Ltmp4036 # Offset: 21023
    00005224: 	endbr64
    00005228: 	jmp	.Ltmp4036 # Offset: 21032
    0000522d: 	endbr64
    00005231: 	movq	%rax, %rbx
    00005234: 	jmp	.Ltmp4037 # Offset: 21044
    00005239: 	endbr64
    0000523d: 	jmp	.Ltmp4042 # Offset: 21053
    00005242: 	endbr64
    00005246: 	jmp	.Ltmp4042 # Offset: 21062
    0000524b: 	endbr64
    0000524f: 	jmp	.Ltmp4042 # Offset: 21071
    00005254: 	endbr64
    00005258: 	jmp	.Ltmp4042 # Offset: 21080
    0000525d: 	endbr64
    00005261: 	jmp	.Ltmp4044 # Offset: 21089
    00005266: 	endbr64
    0000526a: 	jmp	.Ltmp4044 # Offset: 21098
    0000526f: 	endbr64
    00005273: 	jmp	.Ltmp4044 # Offset: 21107
    00005278: 	endbr64
    0000527c: 	jmp	.Ltmp4044 # Offset: 21116
    00005281: 	endbr64
    00005285: 	jmp	.Ltmp4042 # Offset: 21125
    0000528a: 	endbr64
    0000528e: 	jmp	.Ltmp4042 # Offset: 21134
    00005293: 	endbr64
    00005297: 	jmp	.Ltmp4044 # Offset: 21143
    0000529c: 	endbr64
    000052a0: 	jmp	.Ltmp4044 # Offset: 21152
    000052a5: 	endbr64
    000052a9: 	jmp	.Ltmp4042 # Offset: 21161
    000052ae: 	endbr64
    000052b2: 	movq	%rax, %rbp
    000052b5: 	jmp	.Ltmp4045 # Offset: 21173
    000052ba: 	endbr64
    000052be: 	jmp	.Ltmp4036 # Offset: 21182
    000052c3: 	endbr64
    000052c7: 	jmp	.Ltmp4042 # Offset: 21191
    000052cc: 	endbr64
    000052d0: 	jmp	.Ltmp4044 # Offset: 21200
    000052d5: 	endbr64
    000052d9: 	movq	%rax, %rbx
    000052dc: 	jmp	.Ltmp4038 # Offset: 21212
    000052e1: 	endbr64
    000052e5: 	jmp	.Ltmp4042 # Offset: 21221
    000052ea: 	endbr64
    000052ee: 	jmp	.Ltmp4042 # Offset: 21230
    000052f3: 	endbr64
    000052f7: 	jmp	.Ltmp4044 # Offset: 21239
    000052fc: 	endbr64
    00005300: 	jmp	.Ltmp4044 # Offset: 21248
    00005305: 	endbr64
    00005309: 	jmp	.Ltmp4036 # Offset: 21257
    0000530e: 	endbr64
    00005312: 	jmp	.Ltmp4042 # Offset: 21266
    00005317: 	endbr64
    0000531b: 	jmp	.Ltmp4042 # Offset: 21275
    00005320: 	endbr64
    00005324: 	jmp	.Ltmp4042 # Offset: 21284
    00005329: 	endbr64
    0000532d: 	jmp	.Ltmp4042 # Offset: 21293
    00005332: 	endbr64
    00005336: 	jmp	.Ltmp4042 # Offset: 21302
    0000533b: 	endbr64
    0000533f: 	jmp	.Ltmp4042 # Offset: 21311
    00005344: 	endbr64
    00005348: 	jmp	.Ltmp4042 # Offset: 21320
.Ltmp4041:
    0000534d: 	movq	0xc0(%rsp), %rdi
    00005355: 	cmpq	%r13, %rdi
    00005358: 	je	.Ltmp4045 # Offset: 21336
    0000535e: 	movq	0xd0(%rsp), %rax
    00005366: 	leaq	0x1(%rax), %rsi
    0000536a: 	callq	_ZdlPvm@PLT # Offset: 21354
    0000536f: 	jmp	.Ltmp4045 # Offset: 21359
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIaEvv"

Binary Function "_Z13test_constantIm26custom_multiply_shiftadd_2ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 191
  State       : disassembled
  Address     : 0x30070
  Size        : 0x36e
  MaxSize     : 0x370
  Offset      : 0x30070
  Section     : .text
  Orc Section : .local.text._Z13test_constantIm26custom_multiply_shiftadd_2ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0190:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp4046 # Offset: 65
    00000047: 	movl	%r15d, %eax
    0000004a: 	movl	%r15d, %ebx
    0000004d: 	leaq	DATAat0x571d0(%rip), %rbp
    00000054: 	xorl	%r12d, %r12d
    00000057: 	shrl	%eax
    00000059: 	movsd	DATAat0x57bd8(%rip), %xmm5
    00000061: 	movsd	init_value(%rip), %xmm4
    00000069: 	andl	$-0x2, %ebx
    0000006c: 	subl	$0x1, %eax
    0000006f: 	shlq	$0x4, %rax
    00000073: 	leaq	0x10(%r13,%rax), %r14
    00000078: 	nopl	(%rax,%rax) # Size: 8
.Ltmp4052:
    00000080: 	xorl	%r9d, %r9d
    00000083: 	testl	%r15d, %r15d
    00000086: 	jle	.Ltmp4047 # Offset: 134
    0000008c: 	cmpl	$0x1, %r15d
    00000090: 	je	.Ltmp4048 # Offset: 144
    00000096: 	movq	%r13, %rax
    00000099: 	pxor	%xmm1, %xmm1
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp4049:
    000000a0: 	movdqu	(%rax), %xmm2
    000000a4: 	addq	$0x10, %rax
    000000a8: 	movdqa	%xmm2, %xmm0
    000000ac: 	psllq	$0x6, %xmm0
    000000b1: 	movdqa	%xmm0, %xmm3
    000000b5: 	movdqa	%xmm2, %xmm0
    000000b9: 	psllq	$0x1, %xmm0
    000000be: 	paddq	%xmm1, %xmm3
    000000c2: 	movdqa	%xmm2, %xmm1
    000000c6: 	paddq	%xmm2, %xmm0
    000000ca: 	psllq	$0x3, %xmm1
    000000cf: 	movdqa	%xmm0, %xmm2
    000000d3: 	psllq	$0x1, %xmm0
    000000d8: 	psllq	$0x4, %xmm2
    000000dd: 	paddq	%xmm2, %xmm1
    000000e1: 	paddq	%xmm1, %xmm0
    000000e5: 	psubq	%xmm0, %xmm3
    000000e9: 	movdqa	%xmm3, %xmm1
    000000ed: 	cmpq	%rax, %r14
    000000f0: 	jne	.Ltmp4049 # Offset: 240
    000000f2: 	movdqa	%xmm3, %xmm0
    000000f6: 	movslq	%ebx, %rax
    000000f9: 	psrldq	$0x8, %xmm0
    000000fe: 	paddq	%xmm0, %xmm1
    00000102: 	movq	%xmm1, %r9
    00000107: 	cmpl	%ebx, %r15d
    0000010a: 	je	.Ltmp4047 # Offset: 266
.Ltmp4061:
    0000010c: 	movq	(%r13,%rax,8), %rdx
    00000111: 	movq	%rdx, %rax
    00000114: 	leaq	(%rdx,%rdx), %rdi
    00000118: 	shlq	$0x6, %rax
    0000011c: 	addq	%r9, %rax
    0000011f: 	leaq	(%rdi,%rdx), %r9
    00000123: 	shlq	$0x4, %r9
    00000127: 	subq	%r9, %rax
    0000012a: 	leaq	(,%rdx,8), %r9
    00000132: 	shlq	$0x2, %rdx
    00000136: 	subq	%r9, %rax
    00000139: 	subq	%rdx, %rax
    0000013c: 	subq	%rdi, %rax
    0000013f: 	movq	%rax, %r9
.Ltmp4047:
    00000142: 	comisd	%xmm5, %xmm4
    00000146: 	jae	.Ltmp4050 # Offset: 326
    0000014c: 	cvttsd2si	%xmm4, %rax
.Ltmp4060:
    00000151: 	leaq	(%rax,%rax), %rdi
    00000155: 	movq	%rax, %rdx
    00000158: 	leaq	(%rdi,%rax), %r10
    0000015c: 	shlq	$0x6, %rdx
    00000160: 	shlq	$0x4, %r10
    00000164: 	leaq	(%r10,%rax,8), %r10
    00000168: 	shlq	$0x2, %rax
    0000016c: 	subq	%r10, %rdx
    0000016f: 	subq	%rax, %rdx
    00000172: 	movq	%rdx, %rax
    00000175: 	subq	%rdi, %rax
    00000178: 	imulq	$0x1f40, %rax, %rax
    0000017f: 	cmpq	%r9, %rax
    00000182: 	je	.Ltmp4051 # Offset: 386
    00000184: 	movl	current_test(%rip), %edx
    0000018a: 	movq	%rbp, %rsi
    0000018d: 	movl	$0x1, %edi
    00000192: 	xorl	%eax, %eax
    00000194: 	addl	$0x1, %r12d
    00000198: 	callq	__printf_chk@PLT # Offset: 408
    0000019d: 	movl	iterations(%rip), %esi
    000001a3: 	cmpl	%esi, %r12d
    000001a6: 	jge	.Ltmp4046 # Offset: 422
    000001a8: 	movq	DATAat0x57bd8(%rip), %rax
    000001af: 	movsd	init_value(%rip), %xmm4
    000001b7: 	movq	%rax, %xmm5
    000001bc: 	jmp	.Ltmp4052 # Offset: 444
    000001c1: 	nopl	(%rax) # Size: 7
.Ltmp4051:
    000001c8: 	addl	$0x1, %r12d
    000001cc: 	cmpl	%esi, %r12d
    000001cf: 	jl	.Ltmp4052 # Offset: 463
.Ltmp4046:
    000001d5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001dc: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001e3: 	subq	$0x20, %rax
    000001e7: 	cmpq	%rax, %rbx
    000001ea: 	je	.Ltmp4053 # Offset: 490
    000001f0: 	movq	0x8(%rsp), %rax
    000001f5: 	leaq	0x10(%rbx), %rdi
    000001f9: 	movq	%rdi, (%rbx)
    000001fc: 	movq	(%rax), %rbp
    000001ff: 	movq	0x8(%rax), %r12
    00000203: 	movq	%rbp, %rax
    00000206: 	addq	%r12, %rax
    00000209: 	je	.Ltmp4054 # Offset: 521
    0000020b: 	testq	%rbp, %rbp
    0000020e: 	je	.Ltmp4055 # Offset: 526
.Ltmp4054:
    00000214: 	movq	%r12, 0x10(%rsp)
    00000219: 	cmpq	$0xf, %r12
    0000021d: 	ja	.Ltmp4056 # Offset: 541
    00000223: 	cmpq	$0x1, %r12
    00000227: 	jne	.Ltmp4057 # Offset: 551
    0000022d: 	movzbl	(%rbp), %eax
    00000231: 	movb	%al, 0x10(%rbx)
.Ltmp4062:
    00000234: 	movq	%r12, 0x8(%rbx)
    00000238: 	movb	$0x0, (%rdi,%r12)
    0000023d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000244: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000024b: 	addq	$0x20, %rax
    0000024f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000256: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000025d: 	je	.Ltmp4058 # Offset: 605
.Ltmp4063:
    00000263: 	movq	-0x20(%rax), %rbp
    00000267: 	callq	clock@PLT # Offset: 615
    0000026c: 	movq	%rax, end_time(%rip)
    00000273: 	movq	0x18(%rsp), %rdx
    00000278: 	subq	%fs:0x28, %rdx
    00000281: 	jne	.Ltmp4059 # Offset: 641
    00000287: 	subq	start_time(%rip), %rax
    0000028e: 	pxor	%xmm0, %xmm0
    00000292: 	movq	%rbp, %rdi
    00000295: 	cvtsi2sd	%rax, %xmm0
    0000029a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002a2: 	addq	$0x28, %rsp
    000002a6: 	popq	%rbx
    000002a7: 	popq	%rbp
    000002a8: 	popq	%r12
    000002aa: 	popq	%r13
    000002ac: 	popq	%r14
    000002ae: 	popq	%r15
    000002b0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 688
    000002b5: 	nopl	(%rax) # Size: 3
.Ltmp4050:
    000002b8: 	movabsq	$-0x8000000000000000, %rcx
    000002c2: 	movapd	%xmm4, %xmm0
    000002c6: 	subsd	%xmm5, %xmm0
    000002ca: 	cvttsd2si	%xmm0, %rax
    000002cf: 	xorq	%rcx, %rax
    000002d2: 	jmp	.Ltmp4060 # Offset: 722
.Ltmp4048:
    000002d7: 	xorl	%eax, %eax
    000002d9: 	xorl	%r9d, %r9d
    000002dc: 	jmp	.Ltmp4061 # Offset: 732
.Ltmp4056:
    000002e1: 	movq	%rbx, %rdi
    000002e4: 	leaq	0x10(%rsp), %rsi
    000002e9: 	xorl	%edx, %edx
    000002eb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 747
    000002f0: 	movq	%rax, (%rbx)
    000002f3: 	movq	%rax, %rdi
    000002f6: 	movq	0x10(%rsp), %rax
    000002fb: 	movq	%rax, 0x10(%rbx)
.Ltmp4064:
    000002ff: 	movq	%r12, %rdx
    00000302: 	movq	%rbp, %rsi
    00000305: 	callq	memcpy@PLT # Offset: 773
    0000030a: 	movq	0x10(%rsp), %r12
    0000030f: 	movq	(%rbx), %rdi
    00000312: 	jmp	.Ltmp4062 # Offset: 786
.Ltmp4053:
    00000317: 	movq	0x8(%rsp), %rsi
    0000031c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000323: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 803
    00000328: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000032f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000336: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000033d: 	jne	.Ltmp4063 # Offset: 829
.Ltmp4058:
    00000343: 	movq	-0x8(%rdx), %rax
    00000347: 	addq	$0x200, %rax
    0000034d: 	jmp	.Ltmp4063 # Offset: 845
.Ltmp4057:
    00000352: 	testq	%r12, %r12
    00000355: 	je	.Ltmp4062 # Offset: 853
    0000035b: 	jmp	.Ltmp4064 # Offset: 859
.Ltmp4059:
    0000035d: 	callq	__stack_chk_fail@PLT # Offset: 861
.Ltmp4055:
    00000362: 	leaq	DATAat0x57008(%rip), %rdi
    00000369: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 873
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIm26custom_multiply_shiftadd_2ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIt27custom_multiply_shiftadd_42ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 192
  State       : disassembled
  Address     : 0x303e0
  Size        : 0x415
  MaxSize     : 0x420
  Offset      : 0x303e0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIt27custom_multiply_shiftadd_42ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0191:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp4065 # Offset: 67
    00000049: 	leal	-0x1(%r13), %eax
    0000004d: 	movl	%r13d, %ebp
    00000050: 	leaq	DATAat0x571d0(%rip), %r12
    00000057: 	xorl	%r15d, %r15d
    0000005a: 	movl	%eax, 0x4(%rsp)
    0000005e: 	movl	%r13d, %eax
    00000061: 	cvttsd2si	init_value(%rip), %edi
    00000069: 	andl	$-0x8, %ebp
    0000006c: 	shrl	$0x3, %eax
    0000006f: 	subl	$0x1, %eax
    00000072: 	shlq	$0x4, %rax
    00000076: 	leaq	0x10(%r14,%rax), %rbx
    0000007b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4071:
    00000080: 	xorl	%edx, %edx
    00000082: 	testl	%r13d, %r13d
    00000085: 	jle	.Ltmp4066 # Offset: 133
    0000008b: 	cmpl	$0x6, 0x4(%rsp)
    00000090: 	jbe	.Ltmp4067 # Offset: 144
    00000096: 	movq	%r14, %rax
    00000099: 	pxor	%xmm2, %xmm2
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp4068:
    000000a0: 	movdqu	(%rax), %xmm1
    000000a4: 	addq	$0x10, %rax
    000000a8: 	movdqa	%xmm1, %xmm0
    000000ac: 	psllw	$0x2, %xmm0
    000000b1: 	movdqa	%xmm0, %xmm3
    000000b5: 	paddw	%xmm1, %xmm3
    000000b9: 	psllw	$0x1, %xmm1
    000000be: 	movdqa	%xmm3, %xmm4
    000000c2: 	psllw	$0x3, %xmm3
    000000c7: 	psubw	%xmm1, %xmm2
    000000cb: 	psllw	$0x4, %xmm4
    000000d0: 	paddw	%xmm4, %xmm0
    000000d4: 	psubw	%xmm3, %xmm0
    000000d8: 	paddw	%xmm0, %xmm2
    000000dc: 	cmpq	%rbx, %rax
    000000df: 	jne	.Ltmp4068 # Offset: 223
    000000e1: 	movdqa	%xmm2, %xmm0
    000000e5: 	psrldq	$0x8, %xmm0
    000000ea: 	paddw	%xmm0, %xmm2
    000000ee: 	movdqa	%xmm2, %xmm0
    000000f2: 	psrldq	$0x4, %xmm0
    000000f7: 	paddw	%xmm0, %xmm2
    000000fb: 	movdqa	%xmm2, %xmm0
    000000ff: 	psrldq	$0x2, %xmm0
    00000104: 	paddw	%xmm0, %xmm2
    00000108: 	pextrw	$0x0, %xmm2, %edx
    0000010d: 	cmpl	%ebp, %r13d
    00000110: 	je	.Ltmp4066 # Offset: 272
    00000116: 	movl	%ebp, %esi
    00000118: 	movl	%ebp, %eax
.Ltmp4079:
    0000011a: 	movl	%r13d, %ecx
    0000011d: 	subl	%esi, %ecx
    0000011f: 	leal	-0x1(%rcx), %r8d
    00000123: 	cmpl	$0x2, %r8d
    00000127: 	jbe	.Ltmp4069 # Offset: 295
    00000129: 	movq	(%r14,%rsi,2), %xmm1
    0000012f: 	movdqa	%xmm1, %xmm0
    00000133: 	psllw	$0x2, %xmm0
    00000138: 	movdqa	%xmm0, %xmm2
    0000013c: 	paddw	%xmm1, %xmm2
    00000140: 	psllw	$0x1, %xmm1
    00000145: 	movdqa	%xmm2, %xmm3
    00000149: 	psllw	$0x3, %xmm2
    0000014e: 	psllw	$0x4, %xmm3
    00000153: 	paddw	%xmm3, %xmm0
    00000157: 	psubw	%xmm2, %xmm0
    0000015b: 	psubw	%xmm1, %xmm0
    0000015f: 	pextrw	$0x1, %xmm0, %esi
    00000164: 	pextrw	$0x0, %xmm0, %r8d
    0000016a: 	addl	%r8d, %esi
    0000016d: 	addl	%edx, %esi
    0000016f: 	pextrw	$0x2, %xmm0, %edx
    00000174: 	addl	%edx, %esi
    00000176: 	pextrw	$0x3, %xmm0, %edx
    0000017b: 	addl	%esi, %edx
    0000017d: 	movl	%ecx, %esi
    0000017f: 	andl	$-0x4, %esi
    00000182: 	addl	%esi, %eax
    00000184: 	cmpl	%ecx, %esi
    00000186: 	je	.Ltmp4066 # Offset: 390
.Ltmp4069:
    0000018c: 	movslq	%eax, %rcx
    0000018f: 	movzwl	(%r14,%rcx,2), %esi
    00000194: 	leaq	(%rcx,%rcx), %r8
    00000198: 	leal	(,%rsi,4), %ecx
    0000019f: 	leal	(%rcx,%rsi), %r10d
    000001a3: 	shll	$0x4, %r10d
    000001a7: 	addl	%r10d, %ecx
    000001aa: 	addl	%edx, %ecx
    000001ac: 	movl	%esi, %edx
    000001ae: 	shll	$0x5, %edx
    000001b1: 	subl	%edx, %ecx
    000001b3: 	leal	(,%rsi,8), %edx
    000001ba: 	addl	%esi, %esi
    000001bc: 	subl	%edx, %ecx
    000001be: 	movl	%ecx, %edx
    000001c0: 	leal	0x1(%rax), %ecx
    000001c3: 	subl	%esi, %edx
    000001c5: 	cmpl	%ecx, %r13d
    000001c8: 	jle	.Ltmp4066 # Offset: 456
    000001ca: 	movzwl	0x2(%r14,%r8), %esi
    000001d0: 	addl	$0x2, %eax
    000001d3: 	leal	(,%rsi,4), %ecx
    000001da: 	leal	(%rcx,%rsi), %r10d
    000001de: 	shll	$0x4, %r10d
    000001e2: 	addl	%r10d, %ecx
    000001e5: 	movl	%esi, %r10d
    000001e8: 	shll	$0x5, %r10d
    000001ec: 	subl	%r10d, %ecx
    000001ef: 	leal	(,%rsi,8), %r10d
    000001f7: 	addl	%esi, %esi
    000001f9: 	subl	%r10d, %ecx
    000001fc: 	subl	%esi, %ecx
    000001fe: 	addl	%ecx, %edx
    00000200: 	cmpl	%eax, %r13d
    00000203: 	jle	.Ltmp4066 # Offset: 515
    00000205: 	movzwl	0x4(%r14,%r8), %ecx
    0000020b: 	leal	(,%rcx,4), %eax
    00000212: 	leal	(%rax,%rcx), %esi
    00000215: 	shll	$0x4, %esi
    00000218: 	addl	%esi, %eax
    0000021a: 	movl	%ecx, %esi
    0000021c: 	shll	$0x5, %esi
    0000021f: 	subl	%esi, %eax
    00000221: 	leal	(,%rcx,8), %esi
    00000228: 	addl	%ecx, %ecx
    0000022a: 	subl	%esi, %eax
    0000022c: 	subl	%ecx, %eax
    0000022e: 	addl	%eax, %edx
.Ltmp4066:
    00000230: 	leal	(,%rdi,4), %eax
    00000237: 	leal	(%rax,%rdi), %ecx
    0000023a: 	shll	$0x4, %ecx
    0000023d: 	addl	%ecx, %eax
    0000023f: 	movl	%edi, %ecx
    00000241: 	shll	$0x5, %ecx
    00000244: 	subl	%ecx, %eax
    00000246: 	leal	(,%rdi,8), %ecx
    0000024d: 	subl	%ecx, %eax
    0000024f: 	leal	(%rdi,%rdi), %ecx
    00000252: 	subl	%ecx, %eax
    00000254: 	imulw	$0x1f40, %ax, %ax
    00000259: 	cmpw	%dx, %ax
    0000025c: 	je	.Ltmp4070 # Offset: 604
    0000025e: 	movl	current_test(%rip), %edx
    00000264: 	movq	%r12, %rsi
    00000267: 	movl	$0x1, %edi
    0000026c: 	xorl	%eax, %eax
    0000026e: 	addl	$0x1, %r15d
    00000272: 	callq	__printf_chk@PLT # Offset: 626
    00000277: 	movl	iterations(%rip), %r9d
    0000027e: 	cmpl	%r9d, %r15d
    00000281: 	jge	.Ltmp4065 # Offset: 641
    00000283: 	cvttsd2si	init_value(%rip), %edi
    0000028b: 	jmp	.Ltmp4071 # Offset: 651
.Ltmp4070:
    00000290: 	addl	$0x1, %r15d
    00000294: 	cmpl	%r9d, %r15d
    00000297: 	jl	.Ltmp4071 # Offset: 663
.Ltmp4065:
    0000029d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002a4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002ab: 	subq	$0x20, %rax
    000002af: 	cmpq	%rax, %rbx
    000002b2: 	je	.Ltmp4072 # Offset: 690
    000002b8: 	movq	0x8(%rsp), %rax
    000002bd: 	leaq	0x10(%rbx), %rdi
    000002c1: 	movq	%rdi, (%rbx)
    000002c4: 	movq	(%rax), %rbp
    000002c7: 	movq	0x8(%rax), %r12
    000002cb: 	movq	%rbp, %rax
    000002ce: 	addq	%r12, %rax
    000002d1: 	je	.Ltmp4073 # Offset: 721
    000002d3: 	testq	%rbp, %rbp
    000002d6: 	je	.Ltmp4074 # Offset: 726
.Ltmp4073:
    000002dc: 	movq	%r12, 0x10(%rsp)
    000002e1: 	cmpq	$0xf, %r12
    000002e5: 	ja	.Ltmp4075 # Offset: 741
    000002eb: 	cmpq	$0x1, %r12
    000002ef: 	jne	.Ltmp4076 # Offset: 751
    000002f5: 	movzbl	(%rbp), %eax
    000002f9: 	movb	%al, 0x10(%rbx)
.Ltmp4080:
    000002fc: 	movq	%r12, 0x8(%rbx)
    00000300: 	movb	$0x0, (%rdi,%r12)
    00000305: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000030c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000313: 	addq	$0x20, %rax
    00000317: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000031e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000325: 	je	.Ltmp4077 # Offset: 805
.Ltmp4081:
    0000032b: 	movq	-0x20(%rax), %rbp
    0000032f: 	callq	clock@PLT # Offset: 815
    00000334: 	movq	%rax, end_time(%rip)
    0000033b: 	movq	0x18(%rsp), %rdx
    00000340: 	subq	%fs:0x28, %rdx
    00000349: 	jne	.Ltmp4078 # Offset: 841
    0000034f: 	subq	start_time(%rip), %rax
    00000356: 	pxor	%xmm0, %xmm0
    0000035a: 	movq	%rbp, %rdi
    0000035d: 	cvtsi2sd	%rax, %xmm0
    00000362: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000036a: 	addq	$0x28, %rsp
    0000036e: 	popq	%rbx
    0000036f: 	popq	%rbp
    00000370: 	popq	%r12
    00000372: 	popq	%r13
    00000374: 	popq	%r14
    00000376: 	popq	%r15
    00000378: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 888
.Ltmp4067:
    0000037d: 	xorl	%esi, %esi
    0000037f: 	xorl	%eax, %eax
    00000381: 	xorl	%edx, %edx
    00000383: 	jmp	.Ltmp4079 # Offset: 899
.Ltmp4075:
    00000388: 	movq	%rbx, %rdi
    0000038b: 	leaq	0x10(%rsp), %rsi
    00000390: 	xorl	%edx, %edx
    00000392: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 914
    00000397: 	movq	%rax, (%rbx)
    0000039a: 	movq	%rax, %rdi
    0000039d: 	movq	0x10(%rsp), %rax
    000003a2: 	movq	%rax, 0x10(%rbx)
.Ltmp4082:
    000003a6: 	movq	%r12, %rdx
    000003a9: 	movq	%rbp, %rsi
    000003ac: 	callq	memcpy@PLT # Offset: 940
    000003b1: 	movq	0x10(%rsp), %r12
    000003b6: 	movq	(%rbx), %rdi
    000003b9: 	jmp	.Ltmp4080 # Offset: 953
.Ltmp4072:
    000003be: 	movq	0x8(%rsp), %rsi
    000003c3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003ca: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 970
    000003cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003d6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003dd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003e4: 	jne	.Ltmp4081 # Offset: 996
.Ltmp4077:
    000003ea: 	movq	-0x8(%rdx), %rax
    000003ee: 	addq	$0x200, %rax
    000003f4: 	jmp	.Ltmp4081 # Offset: 1012
.Ltmp4076:
    000003f9: 	testq	%r12, %r12
    000003fc: 	je	.Ltmp4080 # Offset: 1020
    00000402: 	jmp	.Ltmp4082 # Offset: 1026
.Ltmp4078:
    00000404: 	callq	__stack_chk_fail@PLT # Offset: 1028
.Ltmp4074:
    00000409: 	leaq	DATAat0x57008(%rip), %rdi
    00000410: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1040
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIt27custom_multiply_shiftadd_42ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIj26custom_multiply_shiftadd_2IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 193
  State       : disassembled
  Address     : 0x30800
  Size        : 0x395
  MaxSize     : 0x3a0
  Offset      : 0x30800
  Section     : .text
  Orc Section : .local.text._Z13test_constantIj26custom_multiply_shiftadd_2IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0192:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp4083 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movl	%r15d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r15d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm4
    00000067: 	andl	$-0x4, %ebx
    0000006a: 	shrl	$0x2, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r13,%rax), %r14
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp4089:
    00000080: 	xorl	%ecx, %ecx
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp4084 # Offset: 133
    0000008b: 	cmpl	$0x2, 0x4(%rsp)
    00000090: 	jbe	.Ltmp4085 # Offset: 144
    00000096: 	movq	%r13, %rax
    00000099: 	pxor	%xmm0, %xmm0
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp4086:
    000000a0: 	movdqu	(%rax), %xmm3
    000000a4: 	addq	$0x10, %rax
    000000a8: 	movdqa	%xmm3, %xmm1
    000000ac: 	movdqa	%xmm3, %xmm2
    000000b0: 	pslld	$0x6, %xmm1
    000000b5: 	pslld	$0x3, %xmm2
    000000ba: 	paddd	%xmm1, %xmm0
    000000be: 	movdqa	%xmm3, %xmm1
    000000c2: 	pslld	$0x1, %xmm1
    000000c7: 	paddd	%xmm3, %xmm1
    000000cb: 	movdqa	%xmm1, %xmm3
    000000cf: 	pslld	$0x1, %xmm1
    000000d4: 	pslld	$0x4, %xmm3
    000000d9: 	paddd	%xmm3, %xmm2
    000000dd: 	paddd	%xmm2, %xmm1
    000000e1: 	psubd	%xmm1, %xmm0
    000000e5: 	cmpq	%rax, %r14
    000000e8: 	jne	.Ltmp4086 # Offset: 232
    000000ea: 	movdqa	%xmm0, %xmm1
    000000ee: 	psrldq	$0x8, %xmm1
    000000f3: 	paddd	%xmm1, %xmm0
    000000f7: 	movdqa	%xmm0, %xmm1
    000000fb: 	psrldq	$0x4, %xmm1
    00000100: 	paddd	%xmm1, %xmm0
    00000104: 	movd	%xmm0, %ecx
    00000108: 	cmpl	%r15d, %ebx
    0000010b: 	je	.Ltmp4084 # Offset: 267
    00000111: 	movl	%ebx, %edi
    00000113: 	movl	%ebx, %eax
.Ltmp4097:
    00000115: 	movl	%r15d, %edx
    00000118: 	subl	%edi, %edx
    0000011a: 	cmpl	$0x1, %edx
    0000011d: 	je	.Ltmp4087 # Offset: 285
    0000011f: 	movq	(%r13,%rdi,4), %xmm2
    00000126: 	movdqa	%xmm2, %xmm1
    0000012a: 	movdqa	%xmm2, %xmm0
    0000012e: 	movdqa	%xmm2, %xmm3
    00000132: 	pslld	$0x1, %xmm1
    00000137: 	pslld	$0x6, %xmm0
    0000013c: 	movdqa	%xmm2, %xmm5
    00000140: 	pslld	$0x2, %xmm3
    00000145: 	pslld	$0x3, %xmm5
    0000014a: 	psubd	%xmm1, %xmm0
    0000014e: 	paddd	%xmm5, %xmm3
    00000152: 	paddd	%xmm2, %xmm1
    00000156: 	psubd	%xmm3, %xmm0
    0000015a: 	pslld	$0x4, %xmm1
    0000015f: 	psubd	%xmm1, %xmm0
    00000163: 	movd	%xmm0, %r8d
    00000168: 	pshufd	$0xe5, %xmm0, %xmm6
    0000016d: 	movd	%xmm6, %edi
    00000171: 	addl	%r8d, %edi
    00000174: 	addl	%edi, %ecx
    00000176: 	movl	%edx, %edi
    00000178: 	andl	$-0x2, %edi
    0000017b: 	addl	%edi, %eax
    0000017d: 	cmpl	%edx, %edi
    0000017f: 	je	.Ltmp4084 # Offset: 383
.Ltmp4087:
    00000181: 	cltq
    00000183: 	movl	(%r13,%rax,4), %edx
    00000188: 	movl	%edx, %eax
    0000018a: 	leal	(%rdx,%rdx), %edi
    0000018d: 	shll	$0x6, %eax
    00000190: 	addl	%ecx, %eax
    00000192: 	leal	(%rdi,%rdx), %ecx
    00000195: 	shll	$0x4, %ecx
    00000198: 	subl	%ecx, %eax
    0000019a: 	leal	(,%rdx,8), %ecx
    000001a1: 	shll	$0x2, %edx
    000001a4: 	subl	%ecx, %eax
    000001a6: 	subl	%edx, %eax
    000001a8: 	subl	%edi, %eax
    000001aa: 	movl	%eax, %ecx
.Ltmp4084:
    000001ac: 	cvttsd2si	%xmm4, %rdx
    000001b1: 	leal	(%rdx,%rdx), %edi
    000001b4: 	movl	%edx, %eax
    000001b6: 	leal	(%rdi,%rdx), %r8d
    000001ba: 	shll	$0x6, %eax
    000001bd: 	shll	$0x4, %r8d
    000001c1: 	leal	(%r8,%rdx,8), %r8d
    000001c5: 	shll	$0x2, %edx
    000001c8: 	subl	%r8d, %eax
    000001cb: 	subl	%edx, %eax
    000001cd: 	subl	%edi, %eax
    000001cf: 	imull	$0x1f40, %eax, %eax
    000001d5: 	cmpl	%ecx, %eax
    000001d7: 	je	.Ltmp4088 # Offset: 471
    000001d9: 	movl	current_test(%rip), %edx
    000001df: 	movq	%rbp, %rsi
    000001e2: 	movl	$0x1, %edi
    000001e7: 	xorl	%eax, %eax
    000001e9: 	addl	$0x1, %r12d
    000001ed: 	callq	__printf_chk@PLT # Offset: 493
    000001f2: 	movl	iterations(%rip), %esi
    000001f8: 	cmpl	%esi, %r12d
    000001fb: 	jge	.Ltmp4083 # Offset: 507
    000001fd: 	movsd	init_value(%rip), %xmm4
    00000205: 	jmp	.Ltmp4089 # Offset: 517
    0000020a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4088:
    00000210: 	addl	$0x1, %r12d
    00000214: 	cmpl	%esi, %r12d
    00000217: 	jl	.Ltmp4089 # Offset: 535
.Ltmp4083:
    0000021d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000224: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000022b: 	subq	$0x20, %rax
    0000022f: 	cmpq	%rax, %rbx
    00000232: 	je	.Ltmp4090 # Offset: 562
    00000238: 	movq	0x8(%rsp), %rax
    0000023d: 	leaq	0x10(%rbx), %rdi
    00000241: 	movq	%rdi, (%rbx)
    00000244: 	movq	(%rax), %rbp
    00000247: 	movq	0x8(%rax), %r12
    0000024b: 	movq	%rbp, %rax
    0000024e: 	addq	%r12, %rax
    00000251: 	je	.Ltmp4091 # Offset: 593
    00000253: 	testq	%rbp, %rbp
    00000256: 	je	.Ltmp4092 # Offset: 598
.Ltmp4091:
    0000025c: 	movq	%r12, 0x10(%rsp)
    00000261: 	cmpq	$0xf, %r12
    00000265: 	ja	.Ltmp4093 # Offset: 613
    0000026b: 	cmpq	$0x1, %r12
    0000026f: 	jne	.Ltmp4094 # Offset: 623
    00000275: 	movzbl	(%rbp), %eax
    00000279: 	movb	%al, 0x10(%rbx)
.Ltmp4098:
    0000027c: 	movq	%r12, 0x8(%rbx)
    00000280: 	movb	$0x0, (%rdi,%r12)
    00000285: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000028c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000293: 	addq	$0x20, %rax
    00000297: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000029e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002a5: 	je	.Ltmp4095 # Offset: 677
.Ltmp4099:
    000002ab: 	movq	-0x20(%rax), %rbp
    000002af: 	callq	clock@PLT # Offset: 687
    000002b4: 	movq	%rax, end_time(%rip)
    000002bb: 	movq	0x18(%rsp), %rdx
    000002c0: 	subq	%fs:0x28, %rdx
    000002c9: 	jne	.Ltmp4096 # Offset: 713
    000002cf: 	subq	start_time(%rip), %rax
    000002d6: 	pxor	%xmm0, %xmm0
    000002da: 	movq	%rbp, %rdi
    000002dd: 	cvtsi2sd	%rax, %xmm0
    000002e2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002ea: 	addq	$0x28, %rsp
    000002ee: 	popq	%rbx
    000002ef: 	popq	%rbp
    000002f0: 	popq	%r12
    000002f2: 	popq	%r13
    000002f4: 	popq	%r14
    000002f6: 	popq	%r15
    000002f8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 760
.Ltmp4085:
    000002fd: 	xorl	%edi, %edi
    000002ff: 	xorl	%eax, %eax
    00000301: 	xorl	%ecx, %ecx
    00000303: 	jmp	.Ltmp4097 # Offset: 771
.Ltmp4093:
    00000308: 	movq	%rbx, %rdi
    0000030b: 	leaq	0x10(%rsp), %rsi
    00000310: 	xorl	%edx, %edx
    00000312: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 786
    00000317: 	movq	%rax, (%rbx)
    0000031a: 	movq	%rax, %rdi
    0000031d: 	movq	0x10(%rsp), %rax
    00000322: 	movq	%rax, 0x10(%rbx)
.Ltmp4100:
    00000326: 	movq	%r12, %rdx
    00000329: 	movq	%rbp, %rsi
    0000032c: 	callq	memcpy@PLT # Offset: 812
    00000331: 	movq	0x10(%rsp), %r12
    00000336: 	movq	(%rbx), %rdi
    00000339: 	jmp	.Ltmp4098 # Offset: 825
.Ltmp4090:
    0000033e: 	movq	0x8(%rsp), %rsi
    00000343: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000034a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 842
    0000034f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000356: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000035d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000364: 	jne	.Ltmp4099 # Offset: 868
.Ltmp4095:
    0000036a: 	movq	-0x8(%rdx), %rax
    0000036e: 	addq	$0x200, %rax
    00000374: 	jmp	.Ltmp4099 # Offset: 884
.Ltmp4094:
    00000379: 	testq	%r12, %r12
    0000037c: 	je	.Ltmp4098 # Offset: 892
    00000382: 	jmp	.Ltmp4100 # Offset: 898
.Ltmp4096:
    00000384: 	callq	__stack_chk_fail@PLT # Offset: 900
.Ltmp4092:
    00000389: 	leaq	DATAat0x57008(%rip), %rdi
    00000390: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 912
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIj26custom_multiply_shiftadd_2IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIm27custom_multiply_shiftadd_42ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 194
  State       : disassembled
  Address     : 0x30ba0
  Size        : 0x365
  MaxSize     : 0x370
  Offset      : 0x30ba0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIm27custom_multiply_shiftadd_42ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0193:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp4101 # Offset: 65
    00000047: 	movl	%r15d, %eax
    0000004a: 	movl	%r15d, %ebx
    0000004d: 	leaq	DATAat0x571d0(%rip), %rbp
    00000054: 	xorl	%r12d, %r12d
    00000057: 	shrl	%eax
    00000059: 	movsd	DATAat0x57bd8(%rip), %xmm6
    00000061: 	movsd	init_value(%rip), %xmm5
    00000069: 	andl	$-0x2, %ebx
    0000006c: 	subl	$0x1, %eax
    0000006f: 	shlq	$0x4, %rax
    00000073: 	leaq	0x10(%r13,%rax), %r14
    00000078: 	nopl	(%rax,%rax) # Size: 8
.Ltmp4107:
    00000080: 	xorl	%edi, %edi
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp4102 # Offset: 133
    0000008b: 	cmpl	$0x1, %r15d
    0000008f: 	je	.Ltmp4103 # Offset: 143
    00000095: 	movq	%r13, %rax
    00000098: 	pxor	%xmm3, %xmm3
    0000009c: 	nopl	(%rax) # Size: 4
.Ltmp4104:
    000000a0: 	movdqu	(%rax), %xmm1
    000000a4: 	addq	$0x10, %rax
    000000a8: 	movdqa	%xmm1, %xmm0
    000000ac: 	psllq	$0x2, %xmm0
    000000b1: 	movdqa	%xmm0, %xmm2
    000000b5: 	paddq	%xmm1, %xmm2
    000000b9: 	psllq	$0x1, %xmm1
    000000be: 	movdqa	%xmm2, %xmm4
    000000c2: 	psllq	$0x3, %xmm2
    000000c7: 	psubq	%xmm1, %xmm3
    000000cb: 	psllq	$0x4, %xmm4
    000000d0: 	paddq	%xmm4, %xmm0
    000000d4: 	psubq	%xmm2, %xmm0
    000000d8: 	paddq	%xmm0, %xmm3
    000000dc: 	cmpq	%rax, %r14
    000000df: 	jne	.Ltmp4104 # Offset: 223
    000000e1: 	movdqa	%xmm3, %xmm0
    000000e5: 	movslq	%ebx, %rax
    000000e8: 	psrldq	$0x8, %xmm0
    000000ed: 	paddq	%xmm0, %xmm3
    000000f1: 	movq	%xmm3, %rdi
    000000f6: 	cmpl	%ebx, %r15d
    000000f9: 	je	.Ltmp4102 # Offset: 249
.Ltmp4116:
    000000fb: 	movq	(%r13,%rax,8), %rdx
    00000100: 	leaq	(,%rdx,4), %rax
    00000108: 	leaq	(%rax,%rdx), %r9
    0000010c: 	shlq	$0x4, %r9
    00000110: 	addq	%r9, %rax
    00000113: 	addq	%rdi, %rax
    00000116: 	movq	%rdx, %rdi
    00000119: 	shlq	$0x5, %rdi
    0000011d: 	subq	%rdi, %rax
    00000120: 	leaq	(,%rdx,8), %rdi
    00000128: 	addq	%rdx, %rdx
    0000012b: 	subq	%rdi, %rax
    0000012e: 	subq	%rdx, %rax
    00000131: 	movq	%rax, %rdi
.Ltmp4102:
    00000134: 	comisd	%xmm6, %xmm5
    00000138: 	jae	.Ltmp4105 # Offset: 312
    0000013e: 	cvttsd2si	%xmm5, %rdx
.Ltmp4115:
    00000143: 	leaq	(,%rdx,4), %rax
    0000014b: 	leaq	(%rax,%rdx), %r9
    0000014f: 	shlq	$0x4, %r9
    00000153: 	addq	%r9, %rax
    00000156: 	movq	%rdx, %r9
    00000159: 	shlq	$0x5, %r9
    0000015d: 	subq	%r9, %rax
    00000160: 	leaq	(,%rdx,8), %r9
    00000168: 	addq	%rdx, %rdx
    0000016b: 	subq	%r9, %rax
    0000016e: 	subq	%rdx, %rax
    00000171: 	imulq	$0x1f40, %rax, %rax
    00000178: 	cmpq	%rdi, %rax
    0000017b: 	je	.Ltmp4106 # Offset: 379
    0000017d: 	movl	current_test(%rip), %edx
    00000183: 	movq	%rbp, %rsi
    00000186: 	movl	$0x1, %edi
    0000018b: 	xorl	%eax, %eax
    0000018d: 	addl	$0x1, %r12d
    00000191: 	callq	__printf_chk@PLT # Offset: 401
    00000196: 	movl	iterations(%rip), %esi
    0000019c: 	cmpl	%esi, %r12d
    0000019f: 	jge	.Ltmp4101 # Offset: 415
    000001a1: 	movq	DATAat0x57bd8(%rip), %rax
    000001a8: 	movsd	init_value(%rip), %xmm5
    000001b0: 	movq	%rax, %xmm6
    000001b5: 	jmp	.Ltmp4107 # Offset: 437
    000001ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4106:
    000001c0: 	addl	$0x1, %r12d
    000001c4: 	cmpl	%esi, %r12d
    000001c7: 	jl	.Ltmp4107 # Offset: 455
.Ltmp4101:
    000001cd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001d4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001db: 	subq	$0x20, %rax
    000001df: 	cmpq	%rax, %rbx
    000001e2: 	je	.Ltmp4108 # Offset: 482
    000001e8: 	movq	0x8(%rsp), %rax
    000001ed: 	leaq	0x10(%rbx), %rdi
    000001f1: 	movq	%rdi, (%rbx)
    000001f4: 	movq	(%rax), %rbp
    000001f7: 	movq	0x8(%rax), %r12
    000001fb: 	movq	%rbp, %rax
    000001fe: 	addq	%r12, %rax
    00000201: 	je	.Ltmp4109 # Offset: 513
    00000203: 	testq	%rbp, %rbp
    00000206: 	je	.Ltmp4110 # Offset: 518
.Ltmp4109:
    0000020c: 	movq	%r12, 0x10(%rsp)
    00000211: 	cmpq	$0xf, %r12
    00000215: 	ja	.Ltmp4111 # Offset: 533
    0000021b: 	cmpq	$0x1, %r12
    0000021f: 	jne	.Ltmp4112 # Offset: 543
    00000225: 	movzbl	(%rbp), %eax
    00000229: 	movb	%al, 0x10(%rbx)
.Ltmp4117:
    0000022c: 	movq	%r12, 0x8(%rbx)
    00000230: 	movb	$0x0, (%rdi,%r12)
    00000235: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000023c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000243: 	addq	$0x20, %rax
    00000247: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000024e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000255: 	je	.Ltmp4113 # Offset: 597
.Ltmp4118:
    0000025b: 	movq	-0x20(%rax), %rbp
    0000025f: 	callq	clock@PLT # Offset: 607
    00000264: 	movq	%rax, end_time(%rip)
    0000026b: 	movq	0x18(%rsp), %rdx
    00000270: 	subq	%fs:0x28, %rdx
    00000279: 	jne	.Ltmp4114 # Offset: 633
    0000027f: 	subq	start_time(%rip), %rax
    00000286: 	pxor	%xmm0, %xmm0
    0000028a: 	movq	%rbp, %rdi
    0000028d: 	cvtsi2sd	%rax, %xmm0
    00000292: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000029a: 	addq	$0x28, %rsp
    0000029e: 	popq	%rbx
    0000029f: 	popq	%rbp
    000002a0: 	popq	%r12
    000002a2: 	popq	%r13
    000002a4: 	popq	%r14
    000002a6: 	popq	%r15
    000002a8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 680
    000002ad: 	nopl	(%rax) # Size: 3
.Ltmp4105:
    000002b0: 	movabsq	$-0x8000000000000000, %rax
    000002ba: 	movapd	%xmm5, %xmm0
    000002be: 	subsd	%xmm6, %xmm0
    000002c2: 	cvttsd2si	%xmm0, %rdx
    000002c7: 	xorq	%rax, %rdx
    000002ca: 	jmp	.Ltmp4115 # Offset: 714
.Ltmp4103:
    000002cf: 	xorl	%eax, %eax
    000002d1: 	xorl	%edi, %edi
    000002d3: 	jmp	.Ltmp4116 # Offset: 723
.Ltmp4111:
    000002d8: 	movq	%rbx, %rdi
    000002db: 	leaq	0x10(%rsp), %rsi
    000002e0: 	xorl	%edx, %edx
    000002e2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 738
    000002e7: 	movq	%rax, (%rbx)
    000002ea: 	movq	%rax, %rdi
    000002ed: 	movq	0x10(%rsp), %rax
    000002f2: 	movq	%rax, 0x10(%rbx)
.Ltmp4119:
    000002f6: 	movq	%r12, %rdx
    000002f9: 	movq	%rbp, %rsi
    000002fc: 	callq	memcpy@PLT # Offset: 764
    00000301: 	movq	0x10(%rsp), %r12
    00000306: 	movq	(%rbx), %rdi
    00000309: 	jmp	.Ltmp4117 # Offset: 777
.Ltmp4108:
    0000030e: 	movq	0x8(%rsp), %rsi
    00000313: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000031a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 794
    0000031f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000326: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000032d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000334: 	jne	.Ltmp4118 # Offset: 820
.Ltmp4113:
    0000033a: 	movq	-0x8(%rdx), %rax
    0000033e: 	addq	$0x200, %rax
    00000344: 	jmp	.Ltmp4118 # Offset: 836
.Ltmp4112:
    00000349: 	testq	%r12, %r12
    0000034c: 	je	.Ltmp4117 # Offset: 844
    00000352: 	jmp	.Ltmp4119 # Offset: 850
.Ltmp4114:
    00000354: 	callq	__stack_chk_fail@PLT # Offset: 852
.Ltmp4110:
    00000359: 	leaq	DATAat0x57008(%rip), %rdi
    00000360: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 864
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIm27custom_multiply_shiftadd_42ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeImEvv" after disassembly {
  Number      : 195
  State       : disassembled
  Address     : 0x30f10
  Size        : 0x72d4
  MaxSize     : 0x72e0
  Offset      : 0x30f10
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeImEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0194:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp4120:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp4120 # Offset: 37
    00000027: 	subq	$0xad8, %rsp
    0000002e: 	leaq	DATAat0x57a2f(%rip), %rsi
    00000035: 	leaq	"_ZL7gLabels/1"(%rip), %r15
    0000003c: 	movq	%fs:0x28, %rax
    00000045: 	movq	%rax, 0xfac8(%rsp)
    0000004d: 	xorl	%eax, %eax
    0000004f: 	leaq	0x40(%rsp), %r14
    00000054: 	movq	%r14, %rdi
    00000057: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 87
    0000005c: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm2
    00000064: 	leaq	0x20(%rsp), %rsi
    00000069: 	movq	%r15, %rdi
    0000006c: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    00000074: 	movaps	%xmm2, 0x20(%rsp)
    00000079: 	movaps	%xmm3, 0x30(%rsp)
    0000007e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 126
    00000083: 	movsd	init_value(%rip), %xmm0
    0000008b: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00000093: 	jae	.Ltmp4121 # Offset: 147
    00000099: 	cvttsd2si	%xmm0, %rax
.Ltmp4670:
    0000009e: 	movq	%rax, %xmm0
    000000a3: 	leaq	0xc0(%rsp), %rbp
    000000ab: 	leaq	0xfac0(%rsp), %rbx
    000000b3: 	punpcklqdq	%xmm0, %xmm0
    000000b7: 	movq	%rbp, %rax
    000000ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4122:
    000000c0: 	movaps	%xmm0, (%rax)
    000000c3: 	addq	$0x10, %rax
    000000c7: 	cmpq	%rax, %rbx
    000000ca: 	jne	.Ltmp4122 # Offset: 202
    000000cc: 	leaq	0xa0(%rsp), %r12
    000000d4: 	leaq	DATAat0x57a2f(%rip), %rsi
    000000db: 	movq	%r12, %rdi
    000000de: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 222
    000000e3: 	movq	0xa0(%rsp), %rdi
    000000eb: 	leaq	0xb0(%rsp), %r13
    000000f3: 	cmpq	%r13, %rdi
    000000f6: 	je	.Ltmp4123 # Offset: 246
    000000f8: 	movq	0xb0(%rsp), %rax
    00000100: 	leaq	0x1(%rax), %rsi
    00000104: 	callq	_ZdlPvm@PLT # Offset: 260
.Ltmp4123:
    00000109: 	leaq	DATAat0x57a2f(%rip), %rsi
    00000110: 	movq	%r12, %rdi
    00000113: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 275
    00000118: 	movq	0xa0(%rsp), %rdi
    00000120: 	cmpq	%r13, %rdi
    00000123: 	je	.Ltmp4124 # Offset: 291
    00000125: 	movq	0xb0(%rsp), %rax
    0000012d: 	leaq	0x1(%rax), %rsi
    00000131: 	callq	_ZdlPvm@PLT # Offset: 305
.Ltmp4124:
    00000136: 	leaq	DATAat0x57a2f(%rip), %rsi
    0000013d: 	movq	%r12, %rdi
    00000140: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 320
    00000145: 	movq	0xa0(%rsp), %rdi
    0000014d: 	cmpq	%r13, %rdi
    00000150: 	je	.Ltmp4125 # Offset: 336
    00000152: 	movq	0xb0(%rsp), %rax
    0000015a: 	leaq	0x1(%rax), %rsi
    0000015e: 	callq	_ZdlPvm@PLT # Offset: 350
.Ltmp4125:
    00000163: 	leaq	DATAat0x57a2f(%rip), %rsi
    0000016a: 	movq	%r12, %rdi
    0000016d: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 365
    00000172: 	movq	0xa0(%rsp), %rdi
    0000017a: 	cmpq	%r13, %rdi
    0000017d: 	je	.Ltmp4126 # Offset: 381
    0000017f: 	movq	0xb0(%rsp), %rax
    00000187: 	leaq	0x1(%rax), %rsi
    0000018b: 	callq	_ZdlPvm@PLT # Offset: 395
.Ltmp4126:
    00000190: 	leaq	DATAat0x57a2f(%rip), %rsi
    00000197: 	movq	%r12, %rdi
    0000019a: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 410
    0000019f: 	movq	0xa0(%rsp), %rdi
    000001a7: 	cmpq	%r13, %rdi
    000001aa: 	je	.Ltmp4127 # Offset: 426
    000001ac: 	movq	0xb0(%rsp), %rax
    000001b4: 	leaq	0x1(%rax), %rsi
    000001b8: 	callq	_ZdlPvm@PLT # Offset: 440
.Ltmp4127:
    000001bd: 	leaq	DATAat0x57a2f(%rip), %rsi
    000001c4: 	movq	%r12, %rdi
    000001c7: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 455
    000001cc: 	movq	0xa0(%rsp), %rdi
    000001d4: 	cmpq	%r13, %rdi
    000001d7: 	je	.Ltmp4128 # Offset: 471
    000001d9: 	movq	0xb0(%rsp), %rax
    000001e1: 	leaq	0x1(%rax), %rsi
    000001e5: 	callq	_ZdlPvm@PLT # Offset: 485
.Ltmp4128:
    000001ea: 	leaq	DATAat0x57a2f(%rip), %rsi
    000001f1: 	movq	%r12, %rdi
    000001f4: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 500
    000001f9: 	movq	0xa0(%rsp), %rdi
    00000201: 	cmpq	%r13, %rdi
    00000204: 	je	.Ltmp4129 # Offset: 516
    00000206: 	movq	0xb0(%rsp), %rax
    0000020e: 	leaq	0x1(%rax), %rsi
    00000212: 	callq	_ZdlPvm@PLT # Offset: 530
.Ltmp4129:
    00000217: 	leaq	DATAat0x57a2f(%rip), %rsi
    0000021e: 	movq	%r12, %rdi
    00000221: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 545
    00000226: 	movq	0xa0(%rsp), %rdi
    0000022e: 	cmpq	%r13, %rdi
    00000231: 	je	.Ltmp4130 # Offset: 561
    00000233: 	movq	0xb0(%rsp), %rax
    0000023b: 	leaq	0x1(%rax), %rsi
    0000023f: 	callq	_ZdlPvm@PLT # Offset: 575
.Ltmp4130:
    00000244: 	leaq	DATAat0x57a2f(%rip), %rsi
    0000024b: 	movq	%r12, %rdi
    0000024e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 590
    00000253: 	movq	0xa0(%rsp), %rdi
    0000025b: 	cmpq	%r13, %rdi
    0000025e: 	je	.Ltmp4131 # Offset: 606
    00000260: 	movq	0xb0(%rsp), %rax
    00000268: 	leaq	0x1(%rax), %rsi
    0000026c: 	callq	_ZdlPvm@PLT # Offset: 620
.Ltmp4131:
    00000271: 	leaq	DATAat0x57a2f(%rip), %rsi
    00000278: 	movq	%r12, %rdi
    0000027b: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 635
    00000280: 	movq	0xa0(%rsp), %rdi
    00000288: 	cmpq	%r13, %rdi
    0000028b: 	je	.Ltmp4132 # Offset: 651
    0000028d: 	movq	0xb0(%rsp), %rax
    00000295: 	leaq	0x1(%rax), %rsi
    00000299: 	callq	_ZdlPvm@PLT # Offset: 665
.Ltmp4132:
    0000029e: 	leaq	DATAat0x57a2f(%rip), %rsi
    000002a5: 	movq	%r12, %rdi
    000002a8: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 680
    000002ad: 	movq	0xa0(%rsp), %rdi
    000002b5: 	cmpq	%r13, %rdi
    000002b8: 	je	.Ltmp4133 # Offset: 696
    000002ba: 	movq	0xb0(%rsp), %rax
    000002c2: 	leaq	0x1(%rax), %rsi
    000002c6: 	callq	_ZdlPvm@PLT # Offset: 710
.Ltmp4133:
    000002cb: 	leaq	DATAat0x571e0(%rip), %rdx
    000002d2: 	movq	%r14, %rsi
    000002d5: 	movq	%r12, %rdi
    000002d8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 728
    000002dd: 	movq	%r12, %rdx
    000002e0: 	movl	$0x1f40, %esi
    000002e5: 	movq	%rbp, %rdi
    000002e8: 	callq	_Z13test_constantIm10shift_leftImLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 744
    000002ed: 	movq	0xa0(%rsp), %rdi
    000002f5: 	cmpq	%r13, %rdi
    000002f8: 	je	.Ltmp4134 # Offset: 760
    000002fa: 	movq	0xb0(%rsp), %rax
    00000302: 	leaq	0x1(%rax), %rsi
    00000306: 	callq	_ZdlPvm@PLT # Offset: 774
.Ltmp4134:
    0000030b: 	leaq	DATAat0x571f1(%rip), %rdx
    00000312: 	movq	%r14, %rsi
    00000315: 	movq	%r12, %rdi
    00000318: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 792
    0000031d: 	callq	clock@PLT # Offset: 797
    00000322: 	movl	iterations(%rip), %esi
    00000328: 	movl	$0x0, (%rsp)
    0000032f: 	movq	%rax, start_time(%rip)
    00000336: 	testl	%esi, %esi
    00000338: 	jle	.Ltmp4135 # Offset: 824
    0000033a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4139:
    00000340: 	movq	%rbp, %rax
    00000343: 	xorl	%edx, %edx
    00000345: 	nopl	(%rax) # Size: 3
.Ltmp4136:
    00000348: 	movq	(%rax), %rcx
    0000034b: 	addq	$0x8, %rax
    0000034f: 	leaq	(%rdx,%rcx,2), %rdx
    00000353: 	cmpq	%rbx, %rax
    00000356: 	jne	.Ltmp4136 # Offset: 854
    00000358: 	movsd	init_value(%rip), %xmm0
    00000360: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00000368: 	jae	.Ltmp4137 # Offset: 872
    0000036e: 	cvttsd2si	%xmm0, %rax
.Ltmp4669:
    00000373: 	imulq	$0x3e80, %rax, %rax
    0000037a: 	cmpq	%rax, %rdx
    0000037d: 	je	.Ltmp4138 # Offset: 893
    0000037f: 	movl	current_test(%rip), %edx
    00000385: 	leaq	DATAat0x571d0(%rip), %rsi
    0000038c: 	movl	$0x1, %edi
    00000391: 	xorl	%eax, %eax
    00000393: 	callq	__printf_chk@PLT # Offset: 915
    00000398: 	movl	iterations(%rip), %esi
.Ltmp4138:
    0000039e: 	addl	$0x1, (%rsp)
    000003a2: 	movl	(%rsp), %eax
    000003a5: 	cmpl	%esi, %eax
    000003a7: 	jl	.Ltmp4139 # Offset: 935
.Ltmp4135:
    000003a9: 	movq	%r12, %rsi
    000003ac: 	movq	%r15, %rdi
    000003af: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 943
    000003b4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003bb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000003c2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003c9: 	je	.Ltmp4140 # Offset: 969
.Ltmp4671:
    000003cf: 	movq	-0x20(%rax), %rdi
    000003d3: 	movq	%rdi, (%rsp)
    000003d7: 	callq	clock@PLT # Offset: 983
    000003dc: 	movq	(%rsp), %rdi
    000003e0: 	pxor	%xmm0, %xmm0
    000003e4: 	movq	%rax, end_time(%rip)
    000003eb: 	subq	start_time(%rip), %rax
    000003f2: 	cvtsi2sd	%rax, %xmm0
    000003f7: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003ff: 	callq	_Z13record_resultdPKc # Offset: 1023
    00000404: 	movq	0xa0(%rsp), %rdi
    0000040c: 	cmpq	%r13, %rdi
    0000040f: 	je	.Ltmp4141 # Offset: 1039
    00000411: 	movq	0xb0(%rsp), %rax
    00000419: 	leaq	0x1(%rax), %rsi
    0000041d: 	callq	_ZdlPvm@PLT # Offset: 1053
.Ltmp4141:
    00000422: 	leaq	DATAat0x571fb(%rip), %rdx
    00000429: 	movq	%r14, %rsi
    0000042c: 	movq	%r12, %rdi
    0000042f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1071
    00000434: 	callq	clock@PLT # Offset: 1076
    00000439: 	movl	iterations(%rip), %esi
    0000043f: 	movl	$0x0, (%rsp)
    00000446: 	movq	%rax, start_time(%rip)
    0000044d: 	testl	%esi, %esi
    0000044f: 	jle	.Ltmp4142 # Offset: 1103
    00000451: 	nopl	(%rax) # Size: 7
.Ltmp4146:
    00000458: 	movq	%rbp, %rax
    0000045b: 	xorl	%edx, %edx
    0000045d: 	nopl	(%rax) # Size: 3
.Ltmp4143:
    00000460: 	movq	(%rax), %rcx
    00000463: 	addq	$0x8, %rax
    00000467: 	leaq	(%rdx,%rcx,2), %rdx
    0000046b: 	cmpq	%rax, %rbx
    0000046e: 	jne	.Ltmp4143 # Offset: 1134
    00000470: 	movsd	init_value(%rip), %xmm0
    00000478: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00000480: 	jae	.Ltmp4144 # Offset: 1152
    00000486: 	cvttsd2si	%xmm0, %rax
.Ltmp4668:
    0000048b: 	imulq	$0x3e80, %rax, %rax
    00000492: 	cmpq	%rax, %rdx
    00000495: 	je	.Ltmp4145 # Offset: 1173
    00000497: 	movl	current_test(%rip), %edx
    0000049d: 	leaq	DATAat0x571d0(%rip), %rsi
    000004a4: 	movl	$0x1, %edi
    000004a9: 	xorl	%eax, %eax
    000004ab: 	callq	__printf_chk@PLT # Offset: 1195
    000004b0: 	movl	iterations(%rip), %esi
.Ltmp4145:
    000004b6: 	addl	$0x1, (%rsp)
    000004ba: 	movl	(%rsp), %eax
    000004bd: 	cmpl	%esi, %eax
    000004bf: 	jl	.Ltmp4146 # Offset: 1215
.Ltmp4142:
    000004c1: 	movq	%r12, %rsi
    000004c4: 	movq	%r15, %rdi
    000004c7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1223
    000004cc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004d3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000004da: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004e1: 	je	.Ltmp4147 # Offset: 1249
.Ltmp4732:
    000004e7: 	movq	-0x20(%rax), %rdi
    000004eb: 	movq	%rdi, (%rsp)
    000004ef: 	callq	clock@PLT # Offset: 1263
    000004f4: 	movq	(%rsp), %rdi
    000004f8: 	pxor	%xmm0, %xmm0
    000004fc: 	movq	%rax, end_time(%rip)
    00000503: 	subq	start_time(%rip), %rax
    0000050a: 	cvtsi2sd	%rax, %xmm0
    0000050f: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000517: 	callq	_Z13record_resultdPKc # Offset: 1303
    0000051c: 	movq	0xa0(%rsp), %rdi
    00000524: 	cmpq	%r13, %rdi
    00000527: 	je	.Ltmp4148 # Offset: 1319
    00000529: 	movq	0xb0(%rsp), %rax
    00000531: 	leaq	0x1(%rax), %rsi
    00000535: 	callq	_ZdlPvm@PLT # Offset: 1333
.Ltmp4148:
    0000053a: 	leaq	DATAat0x57211(%rip), %rdx
    00000541: 	movq	%r14, %rsi
    00000544: 	movq	%r12, %rdi
    00000547: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1351
    0000054c: 	movq	%r12, %rcx
    0000054f: 	movl	$0x2, %edx
    00000554: 	movl	$0x1f40, %esi
    00000559: 	movq	%rbp, %rdi
    0000055c: 	callq	_Z14test_variable1Im24custom_multiply_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1372
    00000561: 	movq	0xa0(%rsp), %rdi
    00000569: 	cmpq	%r13, %rdi
    0000056c: 	je	.Ltmp4149 # Offset: 1388
    0000056e: 	movq	0xb0(%rsp), %rax
    00000576: 	leaq	0x1(%rax), %rsi
    0000057a: 	callq	_ZdlPvm@PLT # Offset: 1402
.Ltmp4149:
    0000057f: 	leaq	DATAat0x57229(%rip), %rdx
    00000586: 	movq	%r14, %rsi
    00000589: 	movq	%r12, %rdi
    0000058c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1420
    00000591: 	callq	clock@PLT # Offset: 1425
    00000596: 	movl	iterations(%rip), %esi
    0000059c: 	movl	$0x0, (%rsp)
    000005a3: 	movq	%rax, start_time(%rip)
    000005aa: 	testl	%esi, %esi
    000005ac: 	jle	.Ltmp4150 # Offset: 1452
    000005ae: 	nop # Size: 2
.Ltmp4154:
    000005b0: 	movq	%rbp, %rax
    000005b3: 	xorl	%edx, %edx
    000005b5: 	nopl	(%rax) # Size: 3
.Ltmp4151:
    000005b8: 	movq	(%rax), %rcx
    000005bb: 	addq	$0x8, %rax
    000005bf: 	leaq	(%rdx,%rcx,2), %rdx
    000005c3: 	cmpq	%rbx, %rax
    000005c6: 	jne	.Ltmp4151 # Offset: 1478
    000005c8: 	movsd	init_value(%rip), %xmm0
    000005d0: 	comisd	DATAat0x57bd8(%rip), %xmm0
    000005d8: 	jae	.Ltmp4152 # Offset: 1496
    000005de: 	cvttsd2si	%xmm0, %rax
.Ltmp4667:
    000005e3: 	imulq	$0x3e80, %rax, %rax
    000005ea: 	cmpq	%rax, %rdx
    000005ed: 	je	.Ltmp4153 # Offset: 1517
    000005ef: 	movl	current_test(%rip), %edx
    000005f5: 	leaq	DATAat0x571d0(%rip), %rsi
    000005fc: 	movl	$0x1, %edi
    00000601: 	xorl	%eax, %eax
    00000603: 	callq	__printf_chk@PLT # Offset: 1539
    00000608: 	movl	iterations(%rip), %esi
.Ltmp4153:
    0000060e: 	addl	$0x1, (%rsp)
    00000612: 	movl	(%rsp), %eax
    00000615: 	cmpl	%esi, %eax
    00000617: 	jl	.Ltmp4154 # Offset: 1559
.Ltmp4150:
    00000619: 	movq	%r12, %rsi
    0000061c: 	movq	%r15, %rdi
    0000061f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1567
    00000624: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000062b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000632: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000639: 	je	.Ltmp4155 # Offset: 1593
.Ltmp4731:
    0000063f: 	movq	-0x20(%rax), %rdi
    00000643: 	movq	%rdi, (%rsp)
    00000647: 	callq	clock@PLT # Offset: 1607
    0000064c: 	movq	(%rsp), %rdi
    00000650: 	pxor	%xmm0, %xmm0
    00000654: 	movq	%rax, end_time(%rip)
    0000065b: 	subq	start_time(%rip), %rax
    00000662: 	cvtsi2sd	%rax, %xmm0
    00000667: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000066f: 	callq	_Z13record_resultdPKc # Offset: 1647
    00000674: 	movq	0xa0(%rsp), %rdi
    0000067c: 	cmpq	%r13, %rdi
    0000067f: 	je	.Ltmp4156 # Offset: 1663
    00000681: 	movq	0xb0(%rsp), %rax
    00000689: 	leaq	0x1(%rax), %rsi
    0000068d: 	callq	_ZdlPvm@PLT # Offset: 1677
.Ltmp4156:
    00000692: 	leaq	DATAat0x57241(%rip), %rdx
    00000699: 	movq	%r14, %rsi
    0000069c: 	movq	%r12, %rdi
    0000069f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1695
    000006a4: 	movq	%r12, %rdx
    000006a7: 	movl	$0x1f40, %esi
    000006ac: 	movq	%rbp, %rdi
    000006af: 	callq	_Z13test_constantIm26custom_multiply_shiftadd_2ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1711
    000006b4: 	movq	0xa0(%rsp), %rdi
    000006bc: 	cmpq	%r13, %rdi
    000006bf: 	je	.Ltmp4157 # Offset: 1727
    000006c1: 	movq	0xb0(%rsp), %rax
    000006c9: 	leaq	0x1(%rax), %rsi
    000006cd: 	callq	_ZdlPvm@PLT # Offset: 1741
.Ltmp4157:
    000006d2: 	leaq	DATAat0x57251(%rip), %rdx
    000006d9: 	movq	%r14, %rsi
    000006dc: 	movq	%r12, %rdi
    000006df: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1759
    000006e4: 	callq	clock@PLT # Offset: 1764
    000006e9: 	movl	iterations(%rip), %ecx
    000006ef: 	movl	$0x0, (%rsp)
    000006f6: 	movq	%rax, start_time(%rip)
    000006fd: 	testl	%ecx, %ecx
    000006ff: 	jle	.Ltmp4158 # Offset: 1791
    00000705: 	nopl	(%rax) # Size: 3
.Ltmp4162:
    00000708: 	movq	%rbp, %rax
    0000070b: 	pxor	%xmm1, %xmm1
    0000070f: 	nop # Size: 1
.Ltmp4159:
    00000710: 	movdqa	(%rax), %xmm0
    00000714: 	addq	$0x10, %rax
    00000718: 	psllq	$0x3, %xmm0
    0000071d: 	paddq	%xmm0, %xmm1
    00000721: 	cmpq	%rax, %rbx
    00000724: 	jne	.Ltmp4159 # Offset: 1828
    00000726: 	movsd	init_value(%rip), %xmm0
    0000072e: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00000736: 	jae	.Ltmp4160 # Offset: 1846
    0000073c: 	cvttsd2si	%xmm0, %rax
.Ltmp4666:
    00000741: 	shlq	$0x3, %rax
    00000745: 	movdqa	%xmm1, %xmm0
    00000749: 	imulq	$0x1f40, %rax, %rdx
    00000750: 	psrldq	$0x8, %xmm0
    00000755: 	paddq	%xmm0, %xmm1
    00000759: 	movq	%xmm1, %rax
    0000075e: 	cmpq	%rax, %rdx
    00000761: 	je	.Ltmp4161 # Offset: 1889
    00000763: 	movl	current_test(%rip), %edx
    00000769: 	leaq	DATAat0x571d0(%rip), %rsi
    00000770: 	movl	$0x1, %edi
    00000775: 	xorl	%eax, %eax
    00000777: 	callq	__printf_chk@PLT # Offset: 1911
    0000077c: 	movl	iterations(%rip), %ecx
.Ltmp4161:
    00000782: 	addl	$0x1, (%rsp)
    00000786: 	movl	(%rsp), %eax
    00000789: 	cmpl	%ecx, %eax
    0000078b: 	jl	.Ltmp4162 # Offset: 1931
.Ltmp4158:
    00000791: 	movq	%r12, %rsi
    00000794: 	movq	%r15, %rdi
    00000797: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1943
    0000079c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007a3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007aa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007b1: 	je	.Ltmp4163 # Offset: 1969
.Ltmp4730:
    000007b7: 	movq	-0x20(%rax), %rdi
    000007bb: 	movq	%rdi, (%rsp)
    000007bf: 	callq	clock@PLT # Offset: 1983
    000007c4: 	movq	(%rsp), %rdi
    000007c8: 	pxor	%xmm0, %xmm0
    000007cc: 	movq	%rax, end_time(%rip)
    000007d3: 	subq	start_time(%rip), %rax
    000007da: 	cvtsi2sd	%rax, %xmm0
    000007df: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000007e7: 	callq	_Z13record_resultdPKc # Offset: 2023
    000007ec: 	movq	0xa0(%rsp), %rdi
    000007f4: 	cmpq	%r13, %rdi
    000007f7: 	je	.Ltmp4164 # Offset: 2039
    000007f9: 	movq	0xb0(%rsp), %rax
    00000801: 	leaq	0x1(%rax), %rsi
    00000805: 	callq	_ZdlPvm@PLT # Offset: 2053
.Ltmp4164:
    0000080a: 	leaq	DATAat0x57262(%rip), %rdx
    00000811: 	movq	%r14, %rsi
    00000814: 	movq	%r12, %rdi
    00000817: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2071
    0000081c: 	movq	%r12, %rcx
    0000081f: 	movl	$0x8, %edx
    00000824: 	movl	$0x1f40, %esi
    00000829: 	movq	%rbp, %rdi
    0000082c: 	callq	_Z14test_variable1Im24custom_multiply_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2092
    00000831: 	movq	0xa0(%rsp), %rdi
    00000839: 	cmpq	%r13, %rdi
    0000083c: 	je	.Ltmp4165 # Offset: 2108
    0000083e: 	movq	0xb0(%rsp), %rax
    00000846: 	leaq	0x1(%rax), %rsi
    0000084a: 	callq	_ZdlPvm@PLT # Offset: 2122
.Ltmp4165:
    0000084f: 	leaq	DATAat0x5727a(%rip), %rdx
    00000856: 	movq	%r14, %rsi
    00000859: 	movq	%r12, %rdi
    0000085c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2140
    00000861: 	callq	clock@PLT # Offset: 2145
    00000866: 	movl	iterations(%rip), %esi
    0000086c: 	movl	$0x0, (%rsp)
    00000873: 	movq	%rax, start_time(%rip)
    0000087a: 	testl	%esi, %esi
    0000087c: 	jle	.Ltmp4166 # Offset: 2172
    0000087e: 	nop # Size: 2
.Ltmp4170:
    00000880: 	movq	%rbp, %rax
    00000883: 	xorl	%edx, %edx
    00000885: 	nopl	(%rax) # Size: 3
.Ltmp4167:
    00000888: 	movq	(%rax), %rcx
    0000088b: 	addq	$0x8, %rax
    0000088f: 	leaq	(%rdx,%rcx,8), %rdx
    00000893: 	cmpq	%rbx, %rax
    00000896: 	jne	.Ltmp4167 # Offset: 2198
    00000898: 	movsd	init_value(%rip), %xmm0
    000008a0: 	comisd	DATAat0x57bd8(%rip), %xmm0
    000008a8: 	jae	.Ltmp4168 # Offset: 2216
    000008ae: 	cvttsd2si	%xmm0, %rax
.Ltmp4665:
    000008b3: 	imulq	$0xfa00, %rax, %rax
    000008ba: 	cmpq	%rax, %rdx
    000008bd: 	je	.Ltmp4169 # Offset: 2237
    000008bf: 	movl	current_test(%rip), %edx
    000008c5: 	leaq	DATAat0x571d0(%rip), %rsi
    000008cc: 	movl	$0x1, %edi
    000008d1: 	xorl	%eax, %eax
    000008d3: 	callq	__printf_chk@PLT # Offset: 2259
    000008d8: 	movl	iterations(%rip), %esi
.Ltmp4169:
    000008de: 	addl	$0x1, (%rsp)
    000008e2: 	movl	(%rsp), %eax
    000008e5: 	cmpl	%esi, %eax
    000008e7: 	jl	.Ltmp4170 # Offset: 2279
.Ltmp4166:
    000008e9: 	movq	%r12, %rsi
    000008ec: 	movq	%r15, %rdi
    000008ef: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2287
    000008f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008fb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000902: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000909: 	je	.Ltmp4171 # Offset: 2313
.Ltmp4729:
    0000090f: 	movq	-0x20(%rax), %rdi
    00000913: 	movq	%rdi, (%rsp)
    00000917: 	callq	clock@PLT # Offset: 2327
    0000091c: 	movq	(%rsp), %rdi
    00000920: 	pxor	%xmm0, %xmm0
    00000924: 	movq	%rax, end_time(%rip)
    0000092b: 	subq	start_time(%rip), %rax
    00000932: 	cvtsi2sd	%rax, %xmm0
    00000937: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000093f: 	callq	_Z13record_resultdPKc # Offset: 2367
    00000944: 	movq	0xa0(%rsp), %rdi
    0000094c: 	cmpq	%r13, %rdi
    0000094f: 	je	.Ltmp4172 # Offset: 2383
    00000951: 	movq	0xb0(%rsp), %rax
    00000959: 	leaq	0x1(%rax), %rsi
    0000095d: 	callq	_ZdlPvm@PLT # Offset: 2397
.Ltmp4172:
    00000962: 	leaq	DATAat0x57292(%rip), %rdx
    00000969: 	movq	%r14, %rsi
    0000096c: 	movq	%r12, %rdi
    0000096f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2415
    00000974: 	callq	clock@PLT # Offset: 2420
    00000979: 	movl	iterations(%rip), %ecx
    0000097f: 	movl	$0x0, (%rsp)
    00000986: 	movq	%rax, start_time(%rip)
    0000098d: 	testl	%ecx, %ecx
    0000098f: 	jle	.Ltmp4173 # Offset: 2447
    00000995: 	nopl	(%rax) # Size: 3
.Ltmp4177:
    00000998: 	movq	%rbp, %rax
    0000099b: 	pxor	%xmm1, %xmm1
    0000099f: 	nop # Size: 1
.Ltmp4174:
    000009a0: 	movdqa	(%rax), %xmm0
    000009a4: 	addq	$0x10, %rax
    000009a8: 	psllq	$0x6, %xmm0
    000009ad: 	paddq	%xmm0, %xmm1
    000009b1: 	cmpq	%rax, %rbx
    000009b4: 	jne	.Ltmp4174 # Offset: 2484
    000009b6: 	movsd	init_value(%rip), %xmm0
    000009be: 	comisd	DATAat0x57bd8(%rip), %xmm0
    000009c6: 	jae	.Ltmp4175 # Offset: 2502
    000009cc: 	cvttsd2si	%xmm0, %rax
.Ltmp4664:
    000009d1: 	shlq	$0x6, %rax
    000009d5: 	movdqa	%xmm1, %xmm0
    000009d9: 	imulq	$0x1f40, %rax, %rdx
    000009e0: 	psrldq	$0x8, %xmm0
    000009e5: 	paddq	%xmm0, %xmm1
    000009e9: 	movq	%xmm1, %rax
    000009ee: 	cmpq	%rax, %rdx
    000009f1: 	je	.Ltmp4176 # Offset: 2545
    000009f3: 	movl	current_test(%rip), %edx
    000009f9: 	leaq	DATAat0x571d0(%rip), %rsi
    00000a00: 	movl	$0x1, %edi
    00000a05: 	xorl	%eax, %eax
    00000a07: 	callq	__printf_chk@PLT # Offset: 2567
    00000a0c: 	movl	iterations(%rip), %ecx
.Ltmp4176:
    00000a12: 	addl	$0x1, (%rsp)
    00000a16: 	movl	(%rsp), %eax
    00000a19: 	cmpl	%ecx, %eax
    00000a1b: 	jl	.Ltmp4177 # Offset: 2587
.Ltmp4173:
    00000a21: 	movq	%r12, %rsi
    00000a24: 	movq	%r15, %rdi
    00000a27: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2599
    00000a2c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a33: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a3a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a41: 	je	.Ltmp4178 # Offset: 2625
.Ltmp4728:
    00000a47: 	movq	-0x20(%rax), %rdi
    00000a4b: 	movq	%rdi, (%rsp)
    00000a4f: 	callq	clock@PLT # Offset: 2639
    00000a54: 	movq	(%rsp), %rdi
    00000a58: 	pxor	%xmm0, %xmm0
    00000a5c: 	movq	%rax, end_time(%rip)
    00000a63: 	subq	start_time(%rip), %rax
    00000a6a: 	cvtsi2sd	%rax, %xmm0
    00000a6f: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000a77: 	callq	_Z13record_resultdPKc # Offset: 2679
    00000a7c: 	movq	0xa0(%rsp), %rdi
    00000a84: 	cmpq	%r13, %rdi
    00000a87: 	je	.Ltmp4179 # Offset: 2695
    00000a89: 	movq	0xb0(%rsp), %rax
    00000a91: 	leaq	0x1(%rax), %rsi
    00000a95: 	callq	_ZdlPvm@PLT # Offset: 2709
.Ltmp4179:
    00000a9a: 	leaq	DATAat0x572a3(%rip), %rdx
    00000aa1: 	movq	%r14, %rsi
    00000aa4: 	movq	%r12, %rdi
    00000aa7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2727
    00000aac: 	movq	%r12, %rcx
    00000aaf: 	movl	$0x40, %edx
    00000ab4: 	movl	$0x1f40, %esi
    00000ab9: 	movq	%rbp, %rdi
    00000abc: 	callq	_Z14test_variable1Im24custom_multiply_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2748
    00000ac1: 	movq	0xa0(%rsp), %rdi
    00000ac9: 	cmpq	%r13, %rdi
    00000acc: 	je	.Ltmp4180 # Offset: 2764
    00000ace: 	movq	0xb0(%rsp), %rax
    00000ad6: 	leaq	0x1(%rax), %rsi
    00000ada: 	callq	_ZdlPvm@PLT # Offset: 2778
.Ltmp4180:
    00000adf: 	leaq	DATAat0x572bc(%rip), %rdx
    00000ae6: 	movq	%r14, %rsi
    00000ae9: 	movq	%r12, %rdi
    00000aec: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2796
    00000af1: 	callq	clock@PLT # Offset: 2801
    00000af6: 	movl	iterations(%rip), %esi
    00000afc: 	movl	$0x0, (%rsp)
    00000b03: 	movq	%rax, start_time(%rip)
    00000b0a: 	testl	%esi, %esi
    00000b0c: 	jle	.Ltmp4181 # Offset: 2828
    00000b0e: 	nop # Size: 2
.Ltmp4185:
    00000b10: 	movq	%rbp, %rax
    00000b13: 	xorl	%ecx, %ecx
    00000b15: 	nopl	(%rax) # Size: 3
.Ltmp4182:
    00000b18: 	movq	(%rax), %rdx
    00000b1b: 	addq	$0x8, %rax
    00000b1f: 	shlq	$0x6, %rdx
    00000b23: 	addq	%rdx, %rcx
    00000b26: 	cmpq	%rbx, %rax
    00000b29: 	jne	.Ltmp4182 # Offset: 2857
    00000b2b: 	movsd	init_value(%rip), %xmm0
    00000b33: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00000b3b: 	jae	.Ltmp4183 # Offset: 2875
    00000b41: 	cvttsd2si	%xmm0, %rax
.Ltmp4663:
    00000b46: 	imulq	$0x7d000, %rax, %rax
    00000b4d: 	cmpq	%rax, %rcx
    00000b50: 	je	.Ltmp4184 # Offset: 2896
    00000b52: 	movl	current_test(%rip), %edx
    00000b58: 	leaq	DATAat0x571d0(%rip), %rsi
    00000b5f: 	movl	$0x1, %edi
    00000b64: 	xorl	%eax, %eax
    00000b66: 	callq	__printf_chk@PLT # Offset: 2918
    00000b6b: 	movl	iterations(%rip), %esi
.Ltmp4184:
    00000b71: 	addl	$0x1, (%rsp)
    00000b75: 	movl	(%rsp), %eax
    00000b78: 	cmpl	%esi, %eax
    00000b7a: 	jl	.Ltmp4185 # Offset: 2938
.Ltmp4181:
    00000b7c: 	movq	%r12, %rsi
    00000b7f: 	movq	%r15, %rdi
    00000b82: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2946
    00000b87: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b8e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b95: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b9c: 	je	.Ltmp4186 # Offset: 2972
.Ltmp4727:
    00000ba2: 	movq	-0x20(%rax), %rdi
    00000ba6: 	movq	%rdi, (%rsp)
    00000baa: 	callq	clock@PLT # Offset: 2986
    00000baf: 	movq	(%rsp), %rdi
    00000bb3: 	pxor	%xmm0, %xmm0
    00000bb7: 	movq	%rax, end_time(%rip)
    00000bbe: 	subq	start_time(%rip), %rax
    00000bc5: 	cvtsi2sd	%rax, %xmm0
    00000bca: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000bd2: 	callq	_Z13record_resultdPKc # Offset: 3026
    00000bd7: 	movq	0xa0(%rsp), %rdi
    00000bdf: 	cmpq	%r13, %rdi
    00000be2: 	je	.Ltmp4187 # Offset: 3042
    00000be4: 	movq	0xb0(%rsp), %rax
    00000bec: 	leaq	0x1(%rax), %rsi
    00000bf0: 	callq	_ZdlPvm@PLT # Offset: 3056
.Ltmp4187:
    00000bf5: 	leaq	DATAat0x572d5(%rip), %rdx
    00000bfc: 	movq	%r14, %rsi
    00000bff: 	movq	%r12, %rdi
    00000c02: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3074
    00000c07: 	movq	%r12, %rcx
    00000c0a: 	movl	$0x2a, %edx
    00000c0f: 	movl	$0x1f40, %esi
    00000c14: 	movq	%rbp, %rdi
    00000c17: 	callq	_Z14test_variable1Im24custom_multiply_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3095
    00000c1c: 	movq	0xa0(%rsp), %rdi
    00000c24: 	cmpq	%r13, %rdi
    00000c27: 	je	.Ltmp4188 # Offset: 3111
    00000c29: 	movq	0xb0(%rsp), %rax
    00000c31: 	leaq	0x1(%rax), %rsi
    00000c35: 	callq	_ZdlPvm@PLT # Offset: 3125
.Ltmp4188:
    00000c3a: 	leaq	DATAat0x572ee(%rip), %rdx
    00000c41: 	movq	%r14, %rsi
    00000c44: 	movq	%r12, %rdi
    00000c47: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3143
    00000c4c: 	callq	clock@PLT # Offset: 3148
    00000c51: 	movl	iterations(%rip), %edi
    00000c57: 	movl	$0x0, (%rsp)
    00000c5e: 	movq	%rax, start_time(%rip)
    00000c65: 	testl	%edi, %edi
    00000c67: 	jle	.Ltmp4189 # Offset: 3175
    00000c69: 	nopl	(%rax) # Size: 7
.Ltmp4193:
    00000c70: 	movq	%rbp, %rax
    00000c73: 	xorl	%ecx, %ecx
    00000c75: 	nopl	(%rax) # Size: 3
.Ltmp4190:
    00000c78: 	movq	(%rax), %rdx
    00000c7b: 	addq	$0x8, %rax
    00000c7f: 	leaq	(%rdx,%rdx,4), %rsi
    00000c83: 	leaq	(%rdx,%rsi,4), %rdx
    00000c87: 	leaq	(%rcx,%rdx,2), %rcx
    00000c8b: 	cmpq	%rax, %rbx
    00000c8e: 	jne	.Ltmp4190 # Offset: 3214
    00000c90: 	movsd	init_value(%rip), %xmm0
    00000c98: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00000ca0: 	jae	.Ltmp4191 # Offset: 3232
    00000ca6: 	cvttsd2si	%xmm0, %rax
.Ltmp4662:
    00000cab: 	imulq	$0x52080, %rax, %rax
    00000cb2: 	cmpq	%rax, %rcx
    00000cb5: 	je	.Ltmp4192 # Offset: 3253
    00000cb7: 	movl	current_test(%rip), %edx
    00000cbd: 	leaq	DATAat0x571d0(%rip), %rsi
    00000cc4: 	movl	$0x1, %edi
    00000cc9: 	xorl	%eax, %eax
    00000ccb: 	callq	__printf_chk@PLT # Offset: 3275
    00000cd0: 	movl	iterations(%rip), %edi
.Ltmp4192:
    00000cd6: 	addl	$0x1, (%rsp)
    00000cda: 	movl	(%rsp), %eax
    00000cdd: 	cmpl	%edi, %eax
    00000cdf: 	jl	.Ltmp4193 # Offset: 3295
.Ltmp4189:
    00000ce1: 	movq	%r12, %rsi
    00000ce4: 	movq	%r15, %rdi
    00000ce7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3303
    00000cec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000cf3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000cfa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d01: 	je	.Ltmp4194 # Offset: 3329
.Ltmp4726:
    00000d07: 	movq	-0x20(%rax), %rdi
    00000d0b: 	movq	%rdi, (%rsp)
    00000d0f: 	callq	clock@PLT # Offset: 3343
    00000d14: 	movq	(%rsp), %rdi
    00000d18: 	pxor	%xmm0, %xmm0
    00000d1c: 	movq	%rax, end_time(%rip)
    00000d23: 	subq	start_time(%rip), %rax
    00000d2a: 	cvtsi2sd	%rax, %xmm0
    00000d2f: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000d37: 	callq	_Z13record_resultdPKc # Offset: 3383
    00000d3c: 	movq	0xa0(%rsp), %rdi
    00000d44: 	cmpq	%r13, %rdi
    00000d47: 	je	.Ltmp4195 # Offset: 3399
    00000d49: 	movq	0xb0(%rsp), %rax
    00000d51: 	leaq	0x1(%rax), %rsi
    00000d55: 	callq	_ZdlPvm@PLT # Offset: 3413
.Ltmp4195:
    00000d5a: 	leaq	DATAat0x57307(%rip), %rdx
    00000d61: 	movq	%r14, %rsi
    00000d64: 	movq	%r12, %rdi
    00000d67: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3431
    00000d6c: 	movq	%r12, %rdx
    00000d6f: 	movl	$0x1f40, %esi
    00000d74: 	movq	%rbp, %rdi
    00000d77: 	callq	_Z13test_constantIm27custom_multiply_shiftadd_42ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3447
    00000d7c: 	movq	0xa0(%rsp), %rdi
    00000d84: 	cmpq	%r13, %rdi
    00000d87: 	je	.Ltmp4196 # Offset: 3463
    00000d89: 	movq	0xb0(%rsp), %rax
    00000d91: 	leaq	0x1(%rax), %rsi
    00000d95: 	callq	_ZdlPvm@PLT # Offset: 3477
.Ltmp4196:
    00000d9a: 	leaq	DATAat0x57318(%rip), %rdx
    00000da1: 	movq	%r14, %rsi
    00000da4: 	movq	%r12, %rdi
    00000da7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3495
    00000dac: 	movq	%r12, %rcx
    00000daf: 	movl	$0x3f, %edx
    00000db4: 	movl	$0x1f40, %esi
    00000db9: 	movq	%rbp, %rdi
    00000dbc: 	callq	_Z14test_variable1Im24custom_multiply_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3516
    00000dc1: 	movq	0xa0(%rsp), %rdi
    00000dc9: 	cmpq	%r13, %rdi
    00000dcc: 	je	.Ltmp4197 # Offset: 3532
    00000dce: 	movq	0xb0(%rsp), %rax
    00000dd6: 	leaq	0x1(%rax), %rsi
    00000dda: 	callq	_ZdlPvm@PLT # Offset: 3546
.Ltmp4197:
    00000ddf: 	leaq	DATAat0x57331(%rip), %rdx
    00000de6: 	movq	%r14, %rsi
    00000de9: 	movq	%r12, %rdi
    00000dec: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3564
    00000df1: 	callq	clock@PLT # Offset: 3569
    00000df6: 	movl	iterations(%rip), %edi
    00000dfc: 	movl	$0x0, (%rsp)
    00000e03: 	movq	%rax, start_time(%rip)
    00000e0a: 	testl	%edi, %edi
    00000e0c: 	jle	.Ltmp4198 # Offset: 3596
    00000e0e: 	nop # Size: 2
.Ltmp4202:
    00000e10: 	movq	%rbp, %rax
    00000e13: 	xorl	%esi, %esi
    00000e15: 	nopl	(%rax) # Size: 3
.Ltmp4199:
    00000e18: 	movq	(%rax), %rcx
    00000e1b: 	addq	$0x8, %rax
    00000e1f: 	movq	%rcx, %rdx
    00000e22: 	shlq	$0x6, %rdx
    00000e26: 	subq	%rcx, %rdx
    00000e29: 	addq	%rdx, %rsi
    00000e2c: 	cmpq	%rbx, %rax
    00000e2f: 	jne	.Ltmp4199 # Offset: 3631
    00000e31: 	movsd	init_value(%rip), %xmm0
    00000e39: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00000e41: 	jae	.Ltmp4200 # Offset: 3649
    00000e47: 	cvttsd2si	%xmm0, %rax
.Ltmp4661:
    00000e4c: 	imulq	$0x7b0c0, %rax, %rax
    00000e53: 	cmpq	%rax, %rsi
    00000e56: 	je	.Ltmp4201 # Offset: 3670
    00000e58: 	movl	current_test(%rip), %edx
    00000e5e: 	leaq	DATAat0x571d0(%rip), %rsi
    00000e65: 	movl	$0x1, %edi
    00000e6a: 	xorl	%eax, %eax
    00000e6c: 	callq	__printf_chk@PLT # Offset: 3692
    00000e71: 	movl	iterations(%rip), %edi
.Ltmp4201:
    00000e77: 	addl	$0x1, (%rsp)
    00000e7b: 	movl	(%rsp), %eax
    00000e7e: 	cmpl	%edi, %eax
    00000e80: 	jl	.Ltmp4202 # Offset: 3712
.Ltmp4198:
    00000e82: 	movq	%r12, %rsi
    00000e85: 	movq	%r15, %rdi
    00000e88: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3720
    00000e8d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e94: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e9b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ea2: 	je	.Ltmp4203 # Offset: 3746
.Ltmp4725:
    00000ea8: 	movq	-0x20(%rax), %rdi
    00000eac: 	movq	%rdi, (%rsp)
    00000eb0: 	callq	clock@PLT # Offset: 3760
    00000eb5: 	movq	(%rsp), %rdi
    00000eb9: 	pxor	%xmm0, %xmm0
    00000ebd: 	movq	%rax, end_time(%rip)
    00000ec4: 	subq	start_time(%rip), %rax
    00000ecb: 	cvtsi2sd	%rax, %xmm0
    00000ed0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000ed8: 	callq	_Z13record_resultdPKc # Offset: 3800
    00000edd: 	movq	0xa0(%rsp), %rdi
    00000ee5: 	cmpq	%r13, %rdi
    00000ee8: 	je	.Ltmp4204 # Offset: 3816
    00000eea: 	movq	0xb0(%rsp), %rax
    00000ef2: 	leaq	0x1(%rax), %rsi
    00000ef6: 	callq	_ZdlPvm@PLT # Offset: 3830
.Ltmp4204:
    00000efb: 	leaq	DATAat0x5734a(%rip), %rdx
    00000f02: 	movq	%r14, %rsi
    00000f05: 	movq	%r12, %rdi
    00000f08: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3848
    00000f0d: 	movq	%r12, %rdx
    00000f10: 	movl	$0x1f40, %esi
    00000f15: 	movq	%rbp, %rdi
    00000f18: 	callq	_Z13test_constantIm27custom_multiply_shiftadd_63ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3864
    00000f1d: 	movq	0xa0(%rsp), %rdi
    00000f25: 	cmpq	%r13, %rdi
    00000f28: 	je	.Ltmp4205 # Offset: 3880
    00000f2a: 	movq	0xb0(%rsp), %rax
    00000f32: 	leaq	0x1(%rax), %rsi
    00000f36: 	callq	_ZdlPvm@PLT # Offset: 3894
.Ltmp4205:
    00000f3b: 	leaq	DATAat0x5735b(%rip), %rdx
    00000f42: 	movq	%r14, %rsi
    00000f45: 	movq	%r12, %rdi
    00000f48: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3912
    00000f4d: 	movq	%r12, %rcx
    00000f50: 	movl	$0x43, %edx
    00000f55: 	movl	$0x1f40, %esi
    00000f5a: 	movq	%rbp, %rdi
    00000f5d: 	callq	_Z14test_variable1Im24custom_multiply_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3933
    00000f62: 	movq	0xa0(%rsp), %rdi
    00000f6a: 	cmpq	%r13, %rdi
    00000f6d: 	je	.Ltmp4206 # Offset: 3949
    00000f6f: 	movq	0xb0(%rsp), %rax
    00000f77: 	leaq	0x1(%rax), %rsi
    00000f7b: 	callq	_ZdlPvm@PLT # Offset: 3963
.Ltmp4206:
    00000f80: 	leaq	DATAat0x57374(%rip), %rdx
    00000f87: 	movq	%r14, %rsi
    00000f8a: 	movq	%r12, %rdi
    00000f8d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3981
    00000f92: 	callq	clock@PLT # Offset: 3986
    00000f97: 	movl	iterations(%rip), %edi
    00000f9d: 	movl	$0x0, (%rsp)
    00000fa4: 	movq	%rax, start_time(%rip)
    00000fab: 	testl	%edi, %edi
    00000fad: 	jle	.Ltmp4207 # Offset: 4013
    00000faf: 	nop # Size: 1
.Ltmp4211:
    00000fb0: 	movq	%rbp, %rax
    00000fb3: 	xorl	%esi, %esi
    00000fb5: 	nopl	(%rax) # Size: 3
.Ltmp4208:
    00000fb8: 	movq	(%rax), %rdx
    00000fbb: 	addq	$0x8, %rax
    00000fbf: 	movq	%rdx, %rcx
    00000fc2: 	shlq	$0x5, %rcx
    00000fc6: 	addq	%rdx, %rcx
    00000fc9: 	leaq	(%rdx,%rcx,2), %rdx
    00000fcd: 	addq	%rdx, %rsi
    00000fd0: 	cmpq	%rax, %rbx
    00000fd3: 	jne	.Ltmp4208 # Offset: 4051
    00000fd5: 	movsd	init_value(%rip), %xmm0
    00000fdd: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00000fe5: 	jae	.Ltmp4209 # Offset: 4069
    00000feb: 	cvttsd2si	%xmm0, %rax
.Ltmp4660:
    00000ff0: 	imulq	$0x82dc0, %rax, %rax
    00000ff7: 	cmpq	%rax, %rsi
    00000ffa: 	je	.Ltmp4210 # Offset: 4090
    00000ffc: 	movl	current_test(%rip), %edx
    00001002: 	leaq	DATAat0x571d0(%rip), %rsi
    00001009: 	movl	$0x1, %edi
    0000100e: 	xorl	%eax, %eax
    00001010: 	callq	__printf_chk@PLT # Offset: 4112
    00001015: 	movl	iterations(%rip), %edi
.Ltmp4210:
    0000101b: 	addl	$0x1, (%rsp)
    0000101f: 	movl	(%rsp), %eax
    00001022: 	cmpl	%edi, %eax
    00001024: 	jl	.Ltmp4211 # Offset: 4132
.Ltmp4207:
    00001026: 	movq	%r12, %rsi
    00001029: 	movq	%r15, %rdi
    0000102c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4140
    00001031: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001038: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000103f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001046: 	je	.Ltmp4212 # Offset: 4166
.Ltmp4724:
    0000104c: 	movq	-0x20(%rax), %rdi
    00001050: 	movq	%rdi, (%rsp)
    00001054: 	callq	clock@PLT # Offset: 4180
    00001059: 	movq	(%rsp), %rdi
    0000105d: 	pxor	%xmm0, %xmm0
    00001061: 	movq	%rax, end_time(%rip)
    00001068: 	subq	start_time(%rip), %rax
    0000106f: 	cvtsi2sd	%rax, %xmm0
    00001074: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000107c: 	callq	_Z13record_resultdPKc # Offset: 4220
    00001081: 	movq	0xa0(%rsp), %rdi
    00001089: 	cmpq	%r13, %rdi
    0000108c: 	je	.Ltmp4213 # Offset: 4236
    0000108e: 	movq	0xb0(%rsp), %rax
    00001096: 	leaq	0x1(%rax), %rsi
    0000109a: 	callq	_ZdlPvm@PLT # Offset: 4250
.Ltmp4213:
    0000109f: 	leaq	DATAat0x5738d(%rip), %rdx
    000010a6: 	movq	%r14, %rsi
    000010a9: 	movq	%r12, %rdi
    000010ac: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4268
    000010b1: 	callq	clock@PLT # Offset: 4273
    000010b6: 	movl	iterations(%rip), %edi
    000010bc: 	movl	$0x0, (%rsp)
    000010c3: 	movq	%rax, start_time(%rip)
    000010ca: 	testl	%edi, %edi
    000010cc: 	jle	.Ltmp4214 # Offset: 4300
    000010ce: 	nop # Size: 2
.Ltmp4218:
    000010d0: 	movq	%rbp, %rax
    000010d3: 	xorl	%esi, %esi
    000010d5: 	nopl	(%rax) # Size: 3
.Ltmp4215:
    000010d8: 	movq	(%rax), %rdx
    000010db: 	addq	$0x8, %rax
    000010df: 	movq	%rdx, %rcx
    000010e2: 	shlq	$0x5, %rcx
    000010e6: 	addq	%rdx, %rcx
    000010e9: 	leaq	(%rdx,%rcx,2), %rdx
    000010ed: 	addq	%rdx, %rsi
    000010f0: 	cmpq	%rbx, %rax
    000010f3: 	jne	.Ltmp4215 # Offset: 4339
    000010f5: 	movsd	init_value(%rip), %xmm0
    000010fd: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00001105: 	jae	.Ltmp4216 # Offset: 4357
    0000110b: 	cvttsd2si	%xmm0, %rax
.Ltmp4659:
    00001110: 	imulq	$0x82dc0, %rax, %rax
    00001117: 	cmpq	%rax, %rsi
    0000111a: 	je	.Ltmp4217 # Offset: 4378
    0000111c: 	movl	current_test(%rip), %edx
    00001122: 	leaq	DATAat0x571d0(%rip), %rsi
    00001129: 	movl	$0x1, %edi
    0000112e: 	xorl	%eax, %eax
    00001130: 	callq	__printf_chk@PLT # Offset: 4400
    00001135: 	movl	iterations(%rip), %edi
.Ltmp4217:
    0000113b: 	addl	$0x1, (%rsp)
    0000113f: 	movl	(%rsp), %eax
    00001142: 	cmpl	%edi, %eax
    00001144: 	jl	.Ltmp4218 # Offset: 4420
.Ltmp4214:
    00001146: 	movq	%r12, %rsi
    00001149: 	movq	%r15, %rdi
    0000114c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4428
    00001151: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001158: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000115f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001166: 	je	.Ltmp4219 # Offset: 4454
.Ltmp4723:
    0000116c: 	movq	-0x20(%rax), %rdi
    00001170: 	movq	%rdi, (%rsp)
    00001174: 	callq	clock@PLT # Offset: 4468
    00001179: 	movq	(%rsp), %rdi
    0000117d: 	pxor	%xmm0, %xmm0
    00001181: 	movq	%rax, end_time(%rip)
    00001188: 	subq	start_time(%rip), %rax
    0000118f: 	cvtsi2sd	%rax, %xmm0
    00001194: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000119c: 	callq	_Z13record_resultdPKc # Offset: 4508
    000011a1: 	movq	0xa0(%rsp), %rdi
    000011a9: 	cmpq	%r13, %rdi
    000011ac: 	je	.Ltmp4220 # Offset: 4524
    000011ae: 	movq	0xb0(%rsp), %rax
    000011b6: 	leaq	0x1(%rax), %rsi
    000011ba: 	callq	_ZdlPvm@PLT # Offset: 4538
.Ltmp4220:
    000011bf: 	leaq	DATAat0x5739e(%rip), %rdx
    000011c6: 	movq	%r14, %rsi
    000011c9: 	movq	%r12, %rdi
    000011cc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4556
    000011d1: 	callq	clock@PLT # Offset: 4561
    000011d6: 	movl	iterations(%rip), %edi
    000011dc: 	movl	$0x0, (%rsp)
    000011e3: 	movq	%rax, start_time(%rip)
    000011ea: 	testl	%edi, %edi
    000011ec: 	jle	.Ltmp4221 # Offset: 4588
    000011ee: 	nop # Size: 2
.Ltmp4225:
    000011f0: 	movq	%rbp, %rax
    000011f3: 	xorl	%esi, %esi
    000011f5: 	nopl	(%rax) # Size: 3
.Ltmp4222:
    000011f8: 	movq	(%rax), %rdx
    000011fb: 	addq	$0x8, %rax
    000011ff: 	movq	%rdx, %rcx
    00001202: 	shlq	$0x5, %rcx
    00001206: 	addq	%rdx, %rcx
    00001209: 	leaq	(%rdx,%rcx,2), %rdx
    0000120d: 	addq	%rdx, %rsi
    00001210: 	cmpq	%rax, %rbx
    00001213: 	jne	.Ltmp4222 # Offset: 4627
    00001215: 	movsd	init_value(%rip), %xmm0
    0000121d: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00001225: 	jae	.Ltmp4223 # Offset: 4645
    0000122b: 	cvttsd2si	%xmm0, %rax
.Ltmp4658:
    00001230: 	imulq	$0x82dc0, %rax, %rax
    00001237: 	cmpq	%rax, %rsi
    0000123a: 	je	.Ltmp4224 # Offset: 4666
    0000123c: 	movl	current_test(%rip), %edx
    00001242: 	leaq	DATAat0x571d0(%rip), %rsi
    00001249: 	movl	$0x1, %edi
    0000124e: 	xorl	%eax, %eax
    00001250: 	callq	__printf_chk@PLT # Offset: 4688
    00001255: 	movl	iterations(%rip), %edi
.Ltmp4224:
    0000125b: 	addl	$0x1, (%rsp)
    0000125f: 	movl	(%rsp), %eax
    00001262: 	cmpl	%edi, %eax
    00001264: 	jl	.Ltmp4225 # Offset: 4708
.Ltmp4221:
    00001266: 	movq	%r12, %rsi
    00001269: 	movq	%r15, %rdi
    0000126c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4716
    00001271: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001278: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000127f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001286: 	je	.Ltmp4226 # Offset: 4742
.Ltmp4722:
    0000128c: 	movq	-0x20(%rax), %rdi
    00001290: 	movq	%rdi, (%rsp)
    00001294: 	callq	clock@PLT # Offset: 4756
    00001299: 	movq	(%rsp), %rdi
    0000129d: 	pxor	%xmm0, %xmm0
    000012a1: 	movq	%rax, end_time(%rip)
    000012a8: 	subq	start_time(%rip), %rax
    000012af: 	cvtsi2sd	%rax, %xmm0
    000012b4: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000012bc: 	callq	_Z13record_resultdPKc # Offset: 4796
    000012c1: 	movq	0xa0(%rsp), %rdi
    000012c9: 	cmpq	%r13, %rdi
    000012cc: 	je	.Ltmp4227 # Offset: 4812
    000012ce: 	movq	0xb0(%rsp), %rax
    000012d6: 	leaq	0x1(%rax), %rsi
    000012da: 	callq	_ZdlPvm@PLT # Offset: 4826
.Ltmp4227:
    000012df: 	leaq	DATAat0x573ad(%rip), %rdx
    000012e6: 	movq	%r14, %rsi
    000012e9: 	movq	%r12, %rdi
    000012ec: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4844
    000012f1: 	movq	%r12, %rcx
    000012f4: 	movl	$0x53, %edx
    000012f9: 	movl	$0x1f40, %esi
    000012fe: 	movq	%rbp, %rdi
    00001301: 	callq	_Z14test_variable1Im24custom_multiply_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4865
    00001306: 	movq	0xa0(%rsp), %rdi
    0000130e: 	cmpq	%r13, %rdi
    00001311: 	je	.Ltmp4228 # Offset: 4881
    00001313: 	movq	0xb0(%rsp), %rax
    0000131b: 	leaq	0x1(%rax), %rsi
    0000131f: 	callq	_ZdlPvm@PLT # Offset: 4895
.Ltmp4228:
    00001324: 	leaq	DATAat0x573c6(%rip), %rdx
    0000132b: 	movq	%r14, %rsi
    0000132e: 	movq	%r12, %rdi
    00001331: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4913
    00001336: 	callq	clock@PLT # Offset: 4918
    0000133b: 	movl	iterations(%rip), %edi
    00001341: 	movl	$0x0, (%rsp)
    00001348: 	movq	%rax, start_time(%rip)
    0000134f: 	testl	%edi, %edi
    00001351: 	jle	.Ltmp4229 # Offset: 4945
    00001353: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4233:
    00001358: 	movq	%rbp, %rdx
    0000135b: 	xorl	%ecx, %ecx
    0000135d: 	nopl	(%rax) # Size: 3
.Ltmp4230:
    00001360: 	movq	(%rdx), %rax
    00001363: 	addq	$0x8, %rdx
    00001367: 	leaq	(%rax,%rax,4), %rsi
    0000136b: 	leaq	(%rax,%rsi,8), %rsi
    0000136f: 	leaq	(%rax,%rsi,2), %rax
    00001373: 	addq	%rax, %rcx
    00001376: 	cmpq	%rbx, %rdx
    00001379: 	jne	.Ltmp4230 # Offset: 4985
    0000137b: 	movsd	init_value(%rip), %xmm0
    00001383: 	comisd	DATAat0x57bd8(%rip), %xmm0
    0000138b: 	jae	.Ltmp4231 # Offset: 5003
    00001391: 	cvttsd2si	%xmm0, %rax
.Ltmp4657:
    00001396: 	imulq	$0xa21c0, %rax, %rax
    0000139d: 	cmpq	%rax, %rcx
    000013a0: 	je	.Ltmp4232 # Offset: 5024
    000013a2: 	movl	current_test(%rip), %edx
    000013a8: 	leaq	DATAat0x571d0(%rip), %rsi
    000013af: 	movl	$0x1, %edi
    000013b4: 	xorl	%eax, %eax
    000013b6: 	callq	__printf_chk@PLT # Offset: 5046
    000013bb: 	movl	iterations(%rip), %edi
.Ltmp4232:
    000013c1: 	addl	$0x1, (%rsp)
    000013c5: 	movl	(%rsp), %eax
    000013c8: 	cmpl	%edi, %eax
    000013ca: 	jl	.Ltmp4233 # Offset: 5066
.Ltmp4229:
    000013cc: 	movq	%r12, %rsi
    000013cf: 	movq	%r15, %rdi
    000013d2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5074
    000013d7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013de: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000013e5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013ec: 	je	.Ltmp4234 # Offset: 5100
.Ltmp4721:
    000013f2: 	movq	-0x20(%rax), %rdi
    000013f6: 	movq	%rdi, (%rsp)
    000013fa: 	callq	clock@PLT # Offset: 5114
    000013ff: 	movq	(%rsp), %rdi
    00001403: 	pxor	%xmm0, %xmm0
    00001407: 	movq	%rax, end_time(%rip)
    0000140e: 	subq	start_time(%rip), %rax
    00001415: 	cvtsi2sd	%rax, %xmm0
    0000141a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001422: 	callq	_Z13record_resultdPKc # Offset: 5154
    00001427: 	movq	0xa0(%rsp), %rdi
    0000142f: 	cmpq	%r13, %rdi
    00001432: 	je	.Ltmp4235 # Offset: 5170
    00001434: 	movq	0xb0(%rsp), %rax
    0000143c: 	leaq	0x1(%rax), %rsi
    00001440: 	callq	_ZdlPvm@PLT # Offset: 5184
.Ltmp4235:
    00001445: 	leaq	DATAat0x573df(%rip), %rdx
    0000144c: 	movq	%r14, %rsi
    0000144f: 	movq	%r12, %rdi
    00001452: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5202
    00001457: 	movq	%r12, %rdx
    0000145a: 	movl	$0x1f40, %esi
    0000145f: 	movq	%rbp, %rdi
    00001462: 	callq	_Z13test_constantIm27custom_multiply_shiftadd_83ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5218
    00001467: 	movq	0xa0(%rsp), %rdi
    0000146f: 	cmpq	%r13, %rdi
    00001472: 	je	.Ltmp4236 # Offset: 5234
    00001474: 	movq	0xb0(%rsp), %rax
    0000147c: 	leaq	0x1(%rax), %rsi
    00001480: 	callq	_ZdlPvm@PLT # Offset: 5248
.Ltmp4236:
    00001485: 	leaq	DATAat0x573f0(%rip), %rdx
    0000148c: 	movq	%r14, %rsi
    0000148f: 	movq	%r12, %rdi
    00001492: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5266
    00001497: 	callq	clock@PLT # Offset: 5271
    0000149c: 	movl	iterations(%rip), %edi
    000014a2: 	movl	$0x0, (%rsp)
    000014a9: 	movq	%rax, start_time(%rip)
    000014b0: 	testl	%edi, %edi
    000014b2: 	jle	.Ltmp4237 # Offset: 5298
    000014b4: 	nopl	(%rax) # Size: 4
.Ltmp4241:
    000014b8: 	movq	%rbp, %rdx
    000014bb: 	xorl	%ecx, %ecx
    000014bd: 	nopl	(%rax) # Size: 3
.Ltmp4238:
    000014c0: 	movq	(%rdx), %rax
    000014c3: 	addq	$0x8, %rdx
    000014c7: 	leaq	(%rax,%rax,4), %rsi
    000014cb: 	leaq	(%rax,%rsi,8), %rsi
    000014cf: 	leaq	(%rax,%rsi,2), %rax
    000014d3: 	addq	%rax, %rcx
    000014d6: 	cmpq	%rdx, %rbx
    000014d9: 	jne	.Ltmp4238 # Offset: 5337
    000014db: 	movsd	init_value(%rip), %xmm0
    000014e3: 	comisd	DATAat0x57bd8(%rip), %xmm0
    000014eb: 	jae	.Ltmp4239 # Offset: 5355
    000014f1: 	cvttsd2si	%xmm0, %rax
.Ltmp4656:
    000014f6: 	imulq	$0xa21c0, %rax, %rax
    000014fd: 	cmpq	%rax, %rcx
    00001500: 	je	.Ltmp4240 # Offset: 5376
    00001502: 	movl	current_test(%rip), %edx
    00001508: 	leaq	DATAat0x571d0(%rip), %rsi
    0000150f: 	movl	$0x1, %edi
    00001514: 	xorl	%eax, %eax
    00001516: 	callq	__printf_chk@PLT # Offset: 5398
    0000151b: 	movl	iterations(%rip), %edi
.Ltmp4240:
    00001521: 	addl	$0x1, (%rsp)
    00001525: 	movl	(%rsp), %eax
    00001528: 	cmpl	%edi, %eax
    0000152a: 	jl	.Ltmp4241 # Offset: 5418
.Ltmp4237:
    0000152c: 	movq	%r12, %rsi
    0000152f: 	movq	%r15, %rdi
    00001532: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5426
    00001537: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000153e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001545: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000154c: 	je	.Ltmp4242 # Offset: 5452
.Ltmp4720:
    00001552: 	movq	-0x20(%rax), %rdi
    00001556: 	movq	%rdi, (%rsp)
    0000155a: 	callq	clock@PLT # Offset: 5466
    0000155f: 	movq	(%rsp), %rdi
    00001563: 	pxor	%xmm0, %xmm0
    00001567: 	movq	%rax, end_time(%rip)
    0000156e: 	subq	start_time(%rip), %rax
    00001575: 	cvtsi2sd	%rax, %xmm0
    0000157a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001582: 	callq	_Z13record_resultdPKc # Offset: 5506
    00001587: 	movq	0xa0(%rsp), %rdi
    0000158f: 	cmpq	%r13, %rdi
    00001592: 	je	.Ltmp4243 # Offset: 5522
    00001594: 	movq	0xb0(%rsp), %rax
    0000159c: 	leaq	0x1(%rax), %rsi
    000015a0: 	callq	_ZdlPvm@PLT # Offset: 5536
.Ltmp4243:
    000015a5: 	leaq	DATAat0x573ff(%rip), %rdx
    000015ac: 	movq	%r14, %rsi
    000015af: 	movq	%r12, %rdi
    000015b2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5554
    000015b7: 	movq	%r12, %rcx
    000015ba: 	movl	$0x7e, %edx
    000015bf: 	movl	$0x1f40, %esi
    000015c4: 	movq	%rbp, %rdi
    000015c7: 	callq	_Z14test_variable1Im24custom_multiply_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5575
    000015cc: 	movq	0xa0(%rsp), %rdi
    000015d4: 	cmpq	%r13, %rdi
    000015d7: 	je	.Ltmp4244 # Offset: 5591
    000015d9: 	movq	0xb0(%rsp), %rax
    000015e1: 	leaq	0x1(%rax), %rsi
    000015e5: 	callq	_ZdlPvm@PLT # Offset: 5605
.Ltmp4244:
    000015ea: 	leaq	DATAat0x57419(%rip), %rdx
    000015f1: 	movq	%r14, %rsi
    000015f4: 	movq	%r12, %rdi
    000015f7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5623
    000015fc: 	callq	clock@PLT # Offset: 5628
    00001601: 	movl	iterations(%rip), %edi
    00001607: 	movl	$0x0, (%rsp)
    0000160e: 	movq	%rax, start_time(%rip)
    00001615: 	testl	%edi, %edi
    00001617: 	jle	.Ltmp4245 # Offset: 5655
    00001619: 	nopl	(%rax) # Size: 7
.Ltmp4249:
    00001620: 	movq	%rbp, %rax
    00001623: 	xorl	%esi, %esi
    00001625: 	nopl	(%rax) # Size: 3
.Ltmp4246:
    00001628: 	movq	(%rax), %rcx
    0000162b: 	addq	$0x8, %rax
    0000162f: 	movq	%rcx, %rdx
    00001632: 	shlq	$0x6, %rdx
    00001636: 	subq	%rcx, %rdx
    00001639: 	leaq	(%rsi,%rdx,2), %rsi
    0000163d: 	cmpq	%rbx, %rax
    00001640: 	jne	.Ltmp4246 # Offset: 5696
    00001642: 	movsd	init_value(%rip), %xmm0
    0000164a: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00001652: 	jae	.Ltmp4247 # Offset: 5714
    00001658: 	cvttsd2si	%xmm0, %rax
.Ltmp4655:
    0000165d: 	imulq	$0xf6180, %rax, %rax
    00001664: 	cmpq	%rax, %rsi
    00001667: 	je	.Ltmp4248 # Offset: 5735
    00001669: 	movl	current_test(%rip), %edx
    0000166f: 	leaq	DATAat0x571d0(%rip), %rsi
    00001676: 	movl	$0x1, %edi
    0000167b: 	xorl	%eax, %eax
    0000167d: 	callq	__printf_chk@PLT # Offset: 5757
    00001682: 	movl	iterations(%rip), %edi
.Ltmp4248:
    00001688: 	addl	$0x1, (%rsp)
    0000168c: 	movl	(%rsp), %eax
    0000168f: 	cmpl	%edi, %eax
    00001691: 	jl	.Ltmp4249 # Offset: 5777
.Ltmp4245:
    00001693: 	movq	%r12, %rsi
    00001696: 	movq	%r15, %rdi
    00001699: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5785
    0000169e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016a5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000016ac: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016b3: 	je	.Ltmp4250 # Offset: 5811
.Ltmp4719:
    000016b9: 	movq	-0x20(%rax), %rdi
    000016bd: 	movq	%rdi, (%rsp)
    000016c1: 	callq	clock@PLT # Offset: 5825
    000016c6: 	movq	(%rsp), %rdi
    000016ca: 	pxor	%xmm0, %xmm0
    000016ce: 	movq	%rax, end_time(%rip)
    000016d5: 	subq	start_time(%rip), %rax
    000016dc: 	cvtsi2sd	%rax, %xmm0
    000016e1: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000016e9: 	callq	_Z13record_resultdPKc # Offset: 5865
    000016ee: 	movq	0xa0(%rsp), %rdi
    000016f6: 	cmpq	%r13, %rdi
    000016f9: 	je	.Ltmp4251 # Offset: 5881
    000016fb: 	movq	0xb0(%rsp), %rax
    00001703: 	leaq	0x1(%rax), %rsi
    00001707: 	callq	_ZdlPvm@PLT # Offset: 5895
.Ltmp4251:
    0000170c: 	leaq	DATAat0x57433(%rip), %rdx
    00001713: 	movq	%r14, %rsi
    00001716: 	movq	%r12, %rdi
    00001719: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5913
    0000171e: 	movq	%r12, %rdx
    00001721: 	movl	$0x1f40, %esi
    00001726: 	movq	%rbp, %rdi
    00001729: 	callq	_Z13test_constantIm28custom_multiply_shiftadd_126ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5929
    0000172e: 	movq	0xa0(%rsp), %rdi
    00001736: 	cmpq	%r13, %rdi
    00001739: 	je	.Ltmp4252 # Offset: 5945
    0000173b: 	movq	0xb0(%rsp), %rax
    00001743: 	leaq	0x1(%rax), %rsi
    00001747: 	callq	_ZdlPvm@PLT # Offset: 5959
.Ltmp4252:
    0000174c: 	leaq	DATAat0x57445(%rip), %rdx
    00001753: 	movq	%r14, %rsi
    00001756: 	movq	%r12, %rdi
    00001759: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5977
    0000175e: 	callq	clock@PLT # Offset: 5982
    00001763: 	movl	iterations(%rip), %edi
    00001769: 	movl	$0x0, (%rsp)
    00001770: 	movq	%rax, start_time(%rip)
    00001777: 	testl	%edi, %edi
    00001779: 	jle	.Ltmp4253 # Offset: 6009
    0000177b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4257:
    00001780: 	movq	%rbp, %rax
    00001783: 	xorl	%esi, %esi
    00001785: 	nopl	(%rax) # Size: 3
.Ltmp4254:
    00001788: 	movq	(%rax), %rcx
    0000178b: 	addq	$0x8, %rax
    0000178f: 	movq	%rcx, %rdx
    00001792: 	shlq	$0x6, %rdx
    00001796: 	subq	%rcx, %rdx
    00001799: 	leaq	(%rsi,%rdx,2), %rsi
    0000179d: 	cmpq	%rax, %rbx
    000017a0: 	jne	.Ltmp4254 # Offset: 6048
    000017a2: 	movsd	init_value(%rip), %xmm0
    000017aa: 	comisd	DATAat0x57bd8(%rip), %xmm0
    000017b2: 	jae	.Ltmp4255 # Offset: 6066
    000017b8: 	cvttsd2si	%xmm0, %rax
.Ltmp4654:
    000017bd: 	imulq	$0xf6180, %rax, %rax
    000017c4: 	cmpq	%rax, %rsi
    000017c7: 	je	.Ltmp4256 # Offset: 6087
    000017c9: 	movl	current_test(%rip), %edx
    000017cf: 	leaq	DATAat0x571d0(%rip), %rsi
    000017d6: 	movl	$0x1, %edi
    000017db: 	xorl	%eax, %eax
    000017dd: 	callq	__printf_chk@PLT # Offset: 6109
    000017e2: 	movl	iterations(%rip), %edi
.Ltmp4256:
    000017e8: 	addl	$0x1, (%rsp)
    000017ec: 	movl	(%rsp), %eax
    000017ef: 	cmpl	%edi, %eax
    000017f1: 	jl	.Ltmp4257 # Offset: 6129
.Ltmp4253:
    000017f3: 	movq	%r12, %rsi
    000017f6: 	movq	%r15, %rdi
    000017f9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6137
    000017fe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001805: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000180c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001813: 	je	.Ltmp4258 # Offset: 6163
.Ltmp4718:
    00001819: 	movq	-0x20(%rax), %rdi
    0000181d: 	movq	%rdi, (%rsp)
    00001821: 	callq	clock@PLT # Offset: 6177
    00001826: 	movq	(%rsp), %rdi
    0000182a: 	pxor	%xmm0, %xmm0
    0000182e: 	movq	%rax, end_time(%rip)
    00001835: 	subq	start_time(%rip), %rax
    0000183c: 	cvtsi2sd	%rax, %xmm0
    00001841: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001849: 	callq	_Z13record_resultdPKc # Offset: 6217
    0000184e: 	movq	0xa0(%rsp), %rdi
    00001856: 	cmpq	%r13, %rdi
    00001859: 	je	.Ltmp4259 # Offset: 6233
    0000185b: 	movq	0xb0(%rsp), %rax
    00001863: 	leaq	0x1(%rax), %rsi
    00001867: 	callq	_ZdlPvm@PLT # Offset: 6247
.Ltmp4259:
    0000186c: 	leaq	0x60(%rsp), %rdi
    00001871: 	leaq	DATAat0x57455(%rip), %rdx
    00001878: 	movq	%r14, %rsi
    0000187b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6267
    00001880: 	movl	iterations(%rip), %edx
    00001886: 	movq	0x60(%rsp), %rdi
    0000188b: 	xorl	%r8d, %r8d
    0000188e: 	xorl	%ecx, %ecx
    00001890: 	movl	$0x1f40, %esi
    00001895: 	callq	_Z9summarizePKciiii # Offset: 6293
    0000189a: 	leaq	DATAat0x57472(%rip), %rdx
    000018a1: 	movq	%r14, %rsi
    000018a4: 	movq	%r12, %rdi
    000018a7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6311
    000018ac: 	movq	%r12, %rdx
    000018af: 	movl	$0x1f40, %esi
    000018b4: 	movq	%rbp, %rdi
    000018b7: 	callq	_Z13test_constantIm11shift_rightImLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 6327
    000018bc: 	movq	0xa0(%rsp), %rdi
    000018c4: 	cmpq	%r13, %rdi
    000018c7: 	je	.Ltmp4260 # Offset: 6343
    000018c9: 	movq	0xb0(%rsp), %rax
    000018d1: 	leaq	0x1(%rax), %rsi
    000018d5: 	callq	_ZdlPvm@PLT # Offset: 6357
.Ltmp4260:
    000018da: 	leaq	DATAat0x579c8(%rip), %rdx
    000018e1: 	movq	%r14, %rsi
    000018e4: 	movq	%r12, %rdi
    000018e7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6375
    000018ec: 	callq	clock@PLT # Offset: 6380
    000018f1: 	movl	iterations(%rip), %ecx
    000018f7: 	movl	$0x0, (%rsp)
    000018fe: 	movq	%rax, start_time(%rip)
    00001905: 	testl	%ecx, %ecx
    00001907: 	jle	.Ltmp4261 # Offset: 6407
    0000190d: 	nopl	(%rax) # Size: 3
.Ltmp4265:
    00001910: 	movq	%rbp, %rax
    00001913: 	pxor	%xmm1, %xmm1
    00001917: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4262:
    00001920: 	movdqa	(%rax), %xmm0
    00001924: 	addq	$0x10, %rax
    00001928: 	psrlq	$0x1, %xmm0
    0000192d: 	paddq	%xmm0, %xmm1
    00001931: 	cmpq	%rbx, %rax
    00001934: 	jne	.Ltmp4262 # Offset: 6452
    00001936: 	movsd	init_value(%rip), %xmm0
    0000193e: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00001946: 	jae	.Ltmp4263 # Offset: 6470
    0000194c: 	cvttsd2si	%xmm0, %rax
.Ltmp4653:
    00001951: 	shrq	%rax
    00001954: 	movdqa	%xmm1, %xmm0
    00001958: 	imulq	$0x1f40, %rax, %rdx
    0000195f: 	psrldq	$0x8, %xmm0
    00001964: 	paddq	%xmm0, %xmm1
    00001968: 	movq	%xmm1, %rax
    0000196d: 	cmpq	%rax, %rdx
    00001970: 	je	.Ltmp4264 # Offset: 6512
    00001972: 	movl	current_test(%rip), %edx
    00001978: 	leaq	DATAat0x571d0(%rip), %rsi
    0000197f: 	movl	$0x1, %edi
    00001984: 	xorl	%eax, %eax
    00001986: 	callq	__printf_chk@PLT # Offset: 6534
    0000198b: 	movl	iterations(%rip), %ecx
.Ltmp4264:
    00001991: 	addl	$0x1, (%rsp)
    00001995: 	movl	(%rsp), %eax
    00001998: 	cmpl	%ecx, %eax
    0000199a: 	jl	.Ltmp4265 # Offset: 6554
.Ltmp4261:
    000019a0: 	movq	%r12, %rsi
    000019a3: 	movq	%r15, %rdi
    000019a6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6566
    000019ab: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019b2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000019b9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000019c0: 	je	.Ltmp4266 # Offset: 6592
.Ltmp4717:
    000019c6: 	movq	-0x20(%rax), %rdi
    000019ca: 	movq	%rdi, (%rsp)
    000019ce: 	callq	clock@PLT # Offset: 6606
    000019d3: 	movq	(%rsp), %rdi
    000019d7: 	pxor	%xmm0, %xmm0
    000019db: 	movq	%rax, end_time(%rip)
    000019e2: 	subq	start_time(%rip), %rax
    000019e9: 	cvtsi2sd	%rax, %xmm0
    000019ee: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000019f6: 	callq	_Z13record_resultdPKc # Offset: 6646
    000019fb: 	movq	0xa0(%rsp), %rdi
    00001a03: 	cmpq	%r13, %rdi
    00001a06: 	je	.Ltmp4267 # Offset: 6662
    00001a08: 	movq	0xb0(%rsp), %rax
    00001a10: 	leaq	0x1(%rax), %rsi
    00001a14: 	callq	_ZdlPvm@PLT # Offset: 6676
.Ltmp4267:
    00001a19: 	leaq	DATAat0x57484(%rip), %rdx
    00001a20: 	movq	%r14, %rsi
    00001a23: 	movq	%r12, %rdi
    00001a26: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6694
    00001a2b: 	callq	clock@PLT # Offset: 6699
    00001a30: 	movl	iterations(%rip), %ecx
    00001a36: 	movl	$0x0, (%rsp)
    00001a3d: 	movq	%rax, start_time(%rip)
    00001a44: 	testl	%ecx, %ecx
    00001a46: 	jle	.Ltmp4268 # Offset: 6726
    00001a4c: 	nopl	(%rax) # Size: 4
.Ltmp4272:
    00001a50: 	movq	%rbp, %rax
    00001a53: 	pxor	%xmm1, %xmm1
    00001a57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4269:
    00001a60: 	movdqa	(%rax), %xmm0
    00001a64: 	addq	$0x10, %rax
    00001a68: 	psrlq	$0x1, %xmm0
    00001a6d: 	paddq	%xmm0, %xmm1
    00001a71: 	cmpq	%rax, %rbx
    00001a74: 	jne	.Ltmp4269 # Offset: 6772
    00001a76: 	movsd	init_value(%rip), %xmm0
    00001a7e: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00001a86: 	jae	.Ltmp4270 # Offset: 6790
    00001a8c: 	cvttsd2si	%xmm0, %rax
.Ltmp4652:
    00001a91: 	shrq	%rax
    00001a94: 	movdqa	%xmm1, %xmm0
    00001a98: 	imulq	$0x1f40, %rax, %rdx
    00001a9f: 	psrldq	$0x8, %xmm0
    00001aa4: 	paddq	%xmm0, %xmm1
    00001aa8: 	movq	%xmm1, %rax
    00001aad: 	cmpq	%rax, %rdx
    00001ab0: 	je	.Ltmp4271 # Offset: 6832
    00001ab2: 	movl	current_test(%rip), %edx
    00001ab8: 	leaq	DATAat0x571d0(%rip), %rsi
    00001abf: 	movl	$0x1, %edi
    00001ac4: 	xorl	%eax, %eax
    00001ac6: 	callq	__printf_chk@PLT # Offset: 6854
    00001acb: 	movl	iterations(%rip), %ecx
.Ltmp4271:
    00001ad1: 	addl	$0x1, (%rsp)
    00001ad5: 	movl	(%rsp), %eax
    00001ad8: 	cmpl	%ecx, %eax
    00001ada: 	jl	.Ltmp4272 # Offset: 6874
.Ltmp4268:
    00001ae0: 	movq	%r12, %rsi
    00001ae3: 	movq	%r15, %rdi
    00001ae6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6886
    00001aeb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001af2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001af9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b00: 	je	.Ltmp4273 # Offset: 6912
.Ltmp4716:
    00001b06: 	movq	-0x20(%rax), %rdi
    00001b0a: 	movq	%rdi, (%rsp)
    00001b0e: 	callq	clock@PLT # Offset: 6926
    00001b13: 	movq	(%rsp), %rdi
    00001b17: 	pxor	%xmm0, %xmm0
    00001b1b: 	movq	%rax, end_time(%rip)
    00001b22: 	subq	start_time(%rip), %rax
    00001b29: 	cvtsi2sd	%rax, %xmm0
    00001b2e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001b36: 	callq	_Z13record_resultdPKc # Offset: 6966
    00001b3b: 	movq	0xa0(%rsp), %rdi
    00001b43: 	cmpq	%r13, %rdi
    00001b46: 	je	.Ltmp4274 # Offset: 6982
    00001b48: 	movq	0xb0(%rsp), %rax
    00001b50: 	leaq	0x1(%rax), %rsi
    00001b54: 	callq	_ZdlPvm@PLT # Offset: 6996
.Ltmp4274:
    00001b59: 	leaq	DATAat0x57498(%rip), %rdx
    00001b60: 	movq	%r14, %rsi
    00001b63: 	movq	%r12, %rdi
    00001b66: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7014
    00001b6b: 	movq	%r12, %rcx
    00001b6e: 	movl	$0x2, %edx
    00001b73: 	movl	$0x1f40, %esi
    00001b78: 	movq	%rbp, %rdi
    00001b7b: 	callq	_Z14test_variable1Im22custom_divide_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7035
    00001b80: 	movq	0xa0(%rsp), %rdi
    00001b88: 	cmpq	%r13, %rdi
    00001b8b: 	je	.Ltmp4275 # Offset: 7051
    00001b8d: 	movq	0xb0(%rsp), %rax
    00001b95: 	leaq	0x1(%rax), %rsi
    00001b99: 	callq	_ZdlPvm@PLT # Offset: 7065
.Ltmp4275:
    00001b9e: 	leaq	DATAat0x574ae(%rip), %rdx
    00001ba5: 	movq	%r14, %rsi
    00001ba8: 	movq	%r12, %rdi
    00001bab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7083
    00001bb0: 	callq	clock@PLT # Offset: 7088
    00001bb5: 	movl	iterations(%rip), %ecx
    00001bbb: 	movl	$0x0, (%rsp)
    00001bc2: 	movq	%rax, start_time(%rip)
    00001bc9: 	testl	%ecx, %ecx
    00001bcb: 	jle	.Ltmp4276 # Offset: 7115
    00001bd1: 	nopl	(%rax) # Size: 7
.Ltmp4280:
    00001bd8: 	movq	%rbp, %rax
    00001bdb: 	pxor	%xmm1, %xmm1
    00001bdf: 	nop # Size: 1
.Ltmp4277:
    00001be0: 	movdqa	(%rax), %xmm0
    00001be4: 	addq	$0x10, %rax
    00001be8: 	psrlq	$0x1, %xmm0
    00001bed: 	paddq	%xmm0, %xmm1
    00001bf1: 	cmpq	%rbx, %rax
    00001bf4: 	jne	.Ltmp4277 # Offset: 7156
    00001bf6: 	movsd	init_value(%rip), %xmm0
    00001bfe: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00001c06: 	jae	.Ltmp4278 # Offset: 7174
    00001c0c: 	cvttsd2si	%xmm0, %rax
.Ltmp4651:
    00001c11: 	shrq	%rax
    00001c14: 	movdqa	%xmm1, %xmm0
    00001c18: 	imulq	$0x1f40, %rax, %rdx
    00001c1f: 	psrldq	$0x8, %xmm0
    00001c24: 	paddq	%xmm0, %xmm1
    00001c28: 	movq	%xmm1, %rax
    00001c2d: 	cmpq	%rax, %rdx
    00001c30: 	je	.Ltmp4279 # Offset: 7216
    00001c32: 	movl	current_test(%rip), %edx
    00001c38: 	leaq	DATAat0x571d0(%rip), %rsi
    00001c3f: 	movl	$0x1, %edi
    00001c44: 	xorl	%eax, %eax
    00001c46: 	callq	__printf_chk@PLT # Offset: 7238
    00001c4b: 	movl	iterations(%rip), %ecx
.Ltmp4279:
    00001c51: 	addl	$0x1, (%rsp)
    00001c55: 	movl	(%rsp), %eax
    00001c58: 	cmpl	%ecx, %eax
    00001c5a: 	jl	.Ltmp4280 # Offset: 7258
.Ltmp4276:
    00001c60: 	movq	%r12, %rsi
    00001c63: 	movq	%r15, %rdi
    00001c66: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7270
    00001c6b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c72: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c79: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c80: 	je	.Ltmp4281 # Offset: 7296
.Ltmp4715:
    00001c86: 	movq	-0x20(%rax), %rdi
    00001c8a: 	movq	%rdi, (%rsp)
    00001c8e: 	callq	clock@PLT # Offset: 7310
    00001c93: 	movq	(%rsp), %rdi
    00001c97: 	pxor	%xmm0, %xmm0
    00001c9b: 	movq	%rax, end_time(%rip)
    00001ca2: 	subq	start_time(%rip), %rax
    00001ca9: 	cvtsi2sd	%rax, %xmm0
    00001cae: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001cb6: 	callq	_Z13record_resultdPKc # Offset: 7350
    00001cbb: 	movq	0xa0(%rsp), %rdi
    00001cc3: 	cmpq	%r13, %rdi
    00001cc6: 	je	.Ltmp4282 # Offset: 7366
    00001cc8: 	movq	0xb0(%rsp), %rax
    00001cd0: 	leaq	0x1(%rax), %rsi
    00001cd4: 	callq	_ZdlPvm@PLT # Offset: 7380
.Ltmp4282:
    00001cd9: 	leaq	DATAat0x574c4(%rip), %rdx
    00001ce0: 	movq	%r14, %rsi
    00001ce3: 	movq	%r12, %rdi
    00001ce6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7398
    00001ceb: 	callq	clock@PLT # Offset: 7403
    00001cf0: 	movl	iterations(%rip), %ecx
    00001cf6: 	movl	$0x0, (%rsp)
    00001cfd: 	movq	%rax, start_time(%rip)
    00001d04: 	testl	%ecx, %ecx
    00001d06: 	jle	.Ltmp4283 # Offset: 7430
    00001d0c: 	nopl	(%rax) # Size: 4
.Ltmp4287:
    00001d10: 	movq	%rbp, %rax
    00001d13: 	pxor	%xmm1, %xmm1
    00001d17: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4284:
    00001d20: 	movdqa	(%rax), %xmm0
    00001d24: 	addq	$0x10, %rax
    00001d28: 	psrlq	$0x3, %xmm0
    00001d2d: 	paddq	%xmm0, %xmm1
    00001d31: 	cmpq	%rax, %rbx
    00001d34: 	jne	.Ltmp4284 # Offset: 7476
    00001d36: 	movsd	init_value(%rip), %xmm0
    00001d3e: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00001d46: 	jae	.Ltmp4285 # Offset: 7494
    00001d4c: 	cvttsd2si	%xmm0, %rax
.Ltmp4650:
    00001d51: 	shrq	$0x3, %rax
    00001d55: 	movdqa	%xmm1, %xmm0
    00001d59: 	imulq	$0x1f40, %rax, %rdx
    00001d60: 	psrldq	$0x8, %xmm0
    00001d65: 	paddq	%xmm0, %xmm1
    00001d69: 	movq	%xmm1, %rax
    00001d6e: 	cmpq	%rax, %rdx
    00001d71: 	je	.Ltmp4286 # Offset: 7537
    00001d73: 	movl	current_test(%rip), %edx
    00001d79: 	leaq	DATAat0x571d0(%rip), %rsi
    00001d80: 	movl	$0x1, %edi
    00001d85: 	xorl	%eax, %eax
    00001d87: 	callq	__printf_chk@PLT # Offset: 7559
    00001d8c: 	movl	iterations(%rip), %ecx
.Ltmp4286:
    00001d92: 	addl	$0x1, (%rsp)
    00001d96: 	movl	(%rsp), %eax
    00001d99: 	cmpl	%ecx, %eax
    00001d9b: 	jl	.Ltmp4287 # Offset: 7579
.Ltmp4283:
    00001da1: 	movq	%r12, %rsi
    00001da4: 	movq	%r15, %rdi
    00001da7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7591
    00001dac: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001db3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001dba: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001dc1: 	je	.Ltmp4288 # Offset: 7617
.Ltmp4714:
    00001dc7: 	movq	-0x20(%rax), %rdi
    00001dcb: 	movq	%rdi, (%rsp)
    00001dcf: 	callq	clock@PLT # Offset: 7631
    00001dd4: 	movq	(%rsp), %rdi
    00001dd8: 	pxor	%xmm0, %xmm0
    00001ddc: 	movq	%rax, end_time(%rip)
    00001de3: 	subq	start_time(%rip), %rax
    00001dea: 	cvtsi2sd	%rax, %xmm0
    00001def: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001df7: 	callq	_Z13record_resultdPKc # Offset: 7671
    00001dfc: 	movq	0xa0(%rsp), %rdi
    00001e04: 	cmpq	%r13, %rdi
    00001e07: 	je	.Ltmp4289 # Offset: 7687
    00001e09: 	movq	0xb0(%rsp), %rax
    00001e11: 	leaq	0x1(%rax), %rsi
    00001e15: 	callq	_ZdlPvm@PLT # Offset: 7701
.Ltmp4289:
    00001e1a: 	leaq	DATAat0x579e8(%rip), %rdx
    00001e21: 	movq	%r14, %rsi
    00001e24: 	movq	%r12, %rdi
    00001e27: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7719
    00001e2c: 	callq	clock@PLT # Offset: 7724
    00001e31: 	movl	iterations(%rip), %ecx
    00001e37: 	movl	$0x0, (%rsp)
    00001e3e: 	movq	%rax, start_time(%rip)
    00001e45: 	testl	%ecx, %ecx
    00001e47: 	jle	.Ltmp4290 # Offset: 7751
    00001e4d: 	nopl	(%rax) # Size: 3
.Ltmp4294:
    00001e50: 	movq	%rbp, %rax
    00001e53: 	pxor	%xmm1, %xmm1
    00001e57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4291:
    00001e60: 	movdqa	(%rax), %xmm0
    00001e64: 	addq	$0x10, %rax
    00001e68: 	psrlq	$0x3, %xmm0
    00001e6d: 	paddq	%xmm0, %xmm1
    00001e71: 	cmpq	%rbx, %rax
    00001e74: 	jne	.Ltmp4291 # Offset: 7796
    00001e76: 	movsd	init_value(%rip), %xmm0
    00001e7e: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00001e86: 	jae	.Ltmp4292 # Offset: 7814
    00001e8c: 	cvttsd2si	%xmm0, %rax
.Ltmp4649:
    00001e91: 	shrq	$0x3, %rax
    00001e95: 	movdqa	%xmm1, %xmm0
    00001e99: 	imulq	$0x1f40, %rax, %rdx
    00001ea0: 	psrldq	$0x8, %xmm0
    00001ea5: 	paddq	%xmm0, %xmm1
    00001ea9: 	movq	%xmm1, %rax
    00001eae: 	cmpq	%rax, %rdx
    00001eb1: 	je	.Ltmp4293 # Offset: 7857
    00001eb3: 	movl	current_test(%rip), %edx
    00001eb9: 	leaq	DATAat0x571d0(%rip), %rsi
    00001ec0: 	movl	$0x1, %edi
    00001ec5: 	xorl	%eax, %eax
    00001ec7: 	callq	__printf_chk@PLT # Offset: 7879
    00001ecc: 	movl	iterations(%rip), %ecx
.Ltmp4293:
    00001ed2: 	addl	$0x1, (%rsp)
    00001ed6: 	movl	(%rsp), %eax
    00001ed9: 	cmpl	%ecx, %eax
    00001edb: 	jl	.Ltmp4294 # Offset: 7899
.Ltmp4290:
    00001ee1: 	movq	%r12, %rsi
    00001ee4: 	movq	%r15, %rdi
    00001ee7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7911
    00001eec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ef3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001efa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f01: 	je	.Ltmp4295 # Offset: 7937
.Ltmp4713:
    00001f07: 	movq	-0x20(%rax), %rdi
    00001f0b: 	movq	%rdi, (%rsp)
    00001f0f: 	callq	clock@PLT # Offset: 7951
    00001f14: 	movq	(%rsp), %rdi
    00001f18: 	pxor	%xmm0, %xmm0
    00001f1c: 	movq	%rax, end_time(%rip)
    00001f23: 	subq	start_time(%rip), %rax
    00001f2a: 	cvtsi2sd	%rax, %xmm0
    00001f2f: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001f37: 	callq	_Z13record_resultdPKc # Offset: 7991
    00001f3c: 	movq	0xa0(%rsp), %rdi
    00001f44: 	cmpq	%r13, %rdi
    00001f47: 	je	.Ltmp4296 # Offset: 8007
    00001f49: 	movq	0xb0(%rsp), %rax
    00001f51: 	leaq	0x1(%rax), %rsi
    00001f55: 	callq	_ZdlPvm@PLT # Offset: 8021
.Ltmp4296:
    00001f5a: 	leaq	DATAat0x574d6(%rip), %rdx
    00001f61: 	movq	%r14, %rsi
    00001f64: 	movq	%r12, %rdi
    00001f67: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8039
    00001f6c: 	movq	%r12, %rcx
    00001f6f: 	movl	$0x8, %edx
    00001f74: 	movl	$0x1f40, %esi
    00001f79: 	movq	%rbp, %rdi
    00001f7c: 	callq	_Z14test_variable1Im22custom_divide_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 8060
    00001f81: 	movq	0xa0(%rsp), %rdi
    00001f89: 	cmpq	%r13, %rdi
    00001f8c: 	je	.Ltmp4297 # Offset: 8076
    00001f8e: 	movq	0xb0(%rsp), %rax
    00001f96: 	leaq	0x1(%rax), %rsi
    00001f9a: 	callq	_ZdlPvm@PLT # Offset: 8090
.Ltmp4297:
    00001f9f: 	leaq	DATAat0x574ec(%rip), %rdx
    00001fa6: 	movq	%r14, %rsi
    00001fa9: 	movq	%r12, %rdi
    00001fac: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8108
    00001fb1: 	callq	clock@PLT # Offset: 8113
    00001fb6: 	movl	iterations(%rip), %ecx
    00001fbc: 	movl	$0x0, (%rsp)
    00001fc3: 	movq	%rax, start_time(%rip)
    00001fca: 	testl	%ecx, %ecx
    00001fcc: 	jle	.Ltmp4298 # Offset: 8140
    00001fd2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4302:
    00001fd8: 	movq	%rbp, %rax
    00001fdb: 	pxor	%xmm1, %xmm1
    00001fdf: 	nop # Size: 1
.Ltmp4299:
    00001fe0: 	movdqa	(%rax), %xmm0
    00001fe4: 	addq	$0x10, %rax
    00001fe8: 	psrlq	$0x3, %xmm0
    00001fed: 	paddq	%xmm0, %xmm1
    00001ff1: 	cmpq	%rax, %rbx
    00001ff4: 	jne	.Ltmp4299 # Offset: 8180
    00001ff6: 	movsd	init_value(%rip), %xmm0
    00001ffe: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00002006: 	jae	.Ltmp4300 # Offset: 8198
    0000200c: 	cvttsd2si	%xmm0, %rax
.Ltmp4648:
    00002011: 	shrq	$0x3, %rax
    00002015: 	movdqa	%xmm1, %xmm0
    00002019: 	imulq	$0x1f40, %rax, %rdx
    00002020: 	psrldq	$0x8, %xmm0
    00002025: 	paddq	%xmm0, %xmm1
    00002029: 	movq	%xmm1, %rax
    0000202e: 	cmpq	%rax, %rdx
    00002031: 	je	.Ltmp4301 # Offset: 8241
    00002033: 	movl	current_test(%rip), %edx
    00002039: 	leaq	DATAat0x571d0(%rip), %rsi
    00002040: 	movl	$0x1, %edi
    00002045: 	xorl	%eax, %eax
    00002047: 	callq	__printf_chk@PLT # Offset: 8263
    0000204c: 	movl	iterations(%rip), %ecx
.Ltmp4301:
    00002052: 	addl	$0x1, (%rsp)
    00002056: 	movl	(%rsp), %eax
    00002059: 	cmpl	%ecx, %eax
    0000205b: 	jl	.Ltmp4302 # Offset: 8283
.Ltmp4298:
    00002061: 	movq	%r12, %rsi
    00002064: 	movq	%r15, %rdi
    00002067: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8295
    0000206c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002073: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000207a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002081: 	je	.Ltmp4303 # Offset: 8321
.Ltmp4712:
    00002087: 	movq	-0x20(%rax), %rdi
    0000208b: 	movq	%rdi, (%rsp)
    0000208f: 	callq	clock@PLT # Offset: 8335
    00002094: 	movq	(%rsp), %rdi
    00002098: 	pxor	%xmm0, %xmm0
    0000209c: 	movq	%rax, end_time(%rip)
    000020a3: 	subq	start_time(%rip), %rax
    000020aa: 	cvtsi2sd	%rax, %xmm0
    000020af: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000020b7: 	callq	_Z13record_resultdPKc # Offset: 8375
    000020bc: 	movq	0xa0(%rsp), %rdi
    000020c4: 	cmpq	%r13, %rdi
    000020c7: 	je	.Ltmp4304 # Offset: 8391
    000020c9: 	movq	0xb0(%rsp), %rax
    000020d1: 	leaq	0x1(%rax), %rsi
    000020d5: 	callq	_ZdlPvm@PLT # Offset: 8405
.Ltmp4304:
    000020da: 	leaq	DATAat0x57502(%rip), %rdx
    000020e1: 	movq	%r14, %rsi
    000020e4: 	movq	%r12, %rdi
    000020e7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8423
    000020ec: 	callq	clock@PLT # Offset: 8428
    000020f1: 	movl	iterations(%rip), %ecx
    000020f7: 	movl	$0x0, (%rsp)
    000020fe: 	movq	%rax, start_time(%rip)
    00002105: 	testl	%ecx, %ecx
    00002107: 	jle	.Ltmp4305 # Offset: 8455
    0000210d: 	nopl	(%rax) # Size: 3
.Ltmp4309:
    00002110: 	movq	%rbp, %rax
    00002113: 	pxor	%xmm1, %xmm1
    00002117: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4306:
    00002120: 	movdqa	(%rax), %xmm0
    00002124: 	addq	$0x10, %rax
    00002128: 	psrlq	$0x6, %xmm0
    0000212d: 	paddq	%xmm0, %xmm1
    00002131: 	cmpq	%rbx, %rax
    00002134: 	jne	.Ltmp4306 # Offset: 8500
    00002136: 	movsd	init_value(%rip), %xmm0
    0000213e: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00002146: 	jae	.Ltmp4307 # Offset: 8518
    0000214c: 	cvttsd2si	%xmm0, %rax
.Ltmp4647:
    00002151: 	shrq	$0x6, %rax
    00002155: 	movdqa	%xmm1, %xmm0
    00002159: 	imulq	$0x1f40, %rax, %rdx
    00002160: 	psrldq	$0x8, %xmm0
    00002165: 	paddq	%xmm0, %xmm1
    00002169: 	movq	%xmm1, %rax
    0000216e: 	cmpq	%rax, %rdx
    00002171: 	je	.Ltmp4308 # Offset: 8561
    00002173: 	movl	current_test(%rip), %edx
    00002179: 	leaq	DATAat0x571d0(%rip), %rsi
    00002180: 	movl	$0x1, %edi
    00002185: 	xorl	%eax, %eax
    00002187: 	callq	__printf_chk@PLT # Offset: 8583
    0000218c: 	movl	iterations(%rip), %ecx
.Ltmp4308:
    00002192: 	addl	$0x1, (%rsp)
    00002196: 	movl	(%rsp), %eax
    00002199: 	cmpl	%ecx, %eax
    0000219b: 	jl	.Ltmp4309 # Offset: 8603
.Ltmp4305:
    000021a1: 	movq	%r12, %rsi
    000021a4: 	movq	%r15, %rdi
    000021a7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8615
    000021ac: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000021b3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000021ba: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000021c1: 	je	.Ltmp4310 # Offset: 8641
.Ltmp4711:
    000021c7: 	movq	-0x20(%rax), %rdi
    000021cb: 	movq	%rdi, (%rsp)
    000021cf: 	callq	clock@PLT # Offset: 8655
    000021d4: 	movq	(%rsp), %rdi
    000021d8: 	pxor	%xmm0, %xmm0
    000021dc: 	movq	%rax, end_time(%rip)
    000021e3: 	subq	start_time(%rip), %rax
    000021ea: 	cvtsi2sd	%rax, %xmm0
    000021ef: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000021f7: 	callq	_Z13record_resultdPKc # Offset: 8695
    000021fc: 	movq	0xa0(%rsp), %rdi
    00002204: 	cmpq	%r13, %rdi
    00002207: 	je	.Ltmp4311 # Offset: 8711
    00002209: 	movq	0xb0(%rsp), %rax
    00002211: 	leaq	0x1(%rax), %rsi
    00002215: 	callq	_ZdlPvm@PLT # Offset: 8725
.Ltmp4311:
    0000221a: 	leaq	DATAat0x57a08(%rip), %rdx
    00002221: 	movq	%r14, %rsi
    00002224: 	movq	%r12, %rdi
    00002227: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8743
    0000222c: 	movq	%r12, %rdx
    0000222f: 	movl	$0x1f40, %esi
    00002234: 	movq	%rbp, %rdi
    00002237: 	callq	_Z13test_constantIm24shift_divide_toward_zeroImLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 8759
    0000223c: 	movq	0xa0(%rsp), %rdi
    00002244: 	cmpq	%r13, %rdi
    00002247: 	je	.Ltmp4312 # Offset: 8775
    00002249: 	movq	0xb0(%rsp), %rax
    00002251: 	leaq	0x1(%rax), %rsi
    00002255: 	callq	_ZdlPvm@PLT # Offset: 8789
.Ltmp4312:
    0000225a: 	leaq	DATAat0x57514(%rip), %rdx
    00002261: 	movq	%r14, %rsi
    00002264: 	movq	%r12, %rdi
    00002267: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8807
    0000226c: 	movq	%r12, %rcx
    0000226f: 	movl	$0x40, %edx
    00002274: 	movl	$0x1f40, %esi
    00002279: 	movq	%rbp, %rdi
    0000227c: 	callq	_Z14test_variable1Im22custom_divide_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 8828
    00002281: 	movq	0xa0(%rsp), %rdi
    00002289: 	cmpq	%r13, %rdi
    0000228c: 	je	.Ltmp4313 # Offset: 8844
    0000228e: 	movq	0xb0(%rsp), %rax
    00002296: 	leaq	0x1(%rax), %rsi
    0000229a: 	callq	_ZdlPvm@PLT # Offset: 8858
.Ltmp4313:
    0000229f: 	leaq	DATAat0x5752b(%rip), %rdx
    000022a6: 	movq	%r14, %rsi
    000022a9: 	movq	%r12, %rdi
    000022ac: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8876
    000022b1: 	callq	clock@PLT # Offset: 8881
    000022b6: 	movl	iterations(%rip), %ecx
    000022bc: 	movl	$0x0, (%rsp)
    000022c3: 	movq	%rax, start_time(%rip)
    000022ca: 	testl	%ecx, %ecx
    000022cc: 	jle	.Ltmp4314 # Offset: 8908
    000022d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4318:
    000022d8: 	movq	%rbp, %rax
    000022db: 	pxor	%xmm1, %xmm1
    000022df: 	nop # Size: 1
.Ltmp4315:
    000022e0: 	movdqa	(%rax), %xmm0
    000022e4: 	addq	$0x10, %rax
    000022e8: 	psrlq	$0x6, %xmm0
    000022ed: 	paddq	%xmm0, %xmm1
    000022f1: 	cmpq	%rax, %rbx
    000022f4: 	jne	.Ltmp4315 # Offset: 8948
    000022f6: 	movsd	init_value(%rip), %xmm0
    000022fe: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00002306: 	jae	.Ltmp4316 # Offset: 8966
    0000230c: 	cvttsd2si	%xmm0, %rax
.Ltmp4646:
    00002311: 	shrq	$0x6, %rax
    00002315: 	movdqa	%xmm1, %xmm0
    00002319: 	imulq	$0x1f40, %rax, %rdx
    00002320: 	psrldq	$0x8, %xmm0
    00002325: 	paddq	%xmm0, %xmm1
    00002329: 	movq	%xmm1, %rax
    0000232e: 	cmpq	%rax, %rdx
    00002331: 	je	.Ltmp4317 # Offset: 9009
    00002333: 	movl	current_test(%rip), %edx
    00002339: 	leaq	DATAat0x571d0(%rip), %rsi
    00002340: 	movl	$0x1, %edi
    00002345: 	xorl	%eax, %eax
    00002347: 	callq	__printf_chk@PLT # Offset: 9031
    0000234c: 	movl	iterations(%rip), %ecx
.Ltmp4317:
    00002352: 	addl	$0x1, (%rsp)
    00002356: 	movl	(%rsp), %eax
    00002359: 	cmpl	%ecx, %eax
    0000235b: 	jl	.Ltmp4318 # Offset: 9051
.Ltmp4314:
    00002361: 	movq	%r12, %rsi
    00002364: 	movq	%r15, %rdi
    00002367: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9063
    0000236c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002373: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000237a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002381: 	je	.Ltmp4319 # Offset: 9089
.Ltmp4710:
    00002387: 	movq	-0x20(%rax), %rdi
    0000238b: 	movq	%rdi, (%rsp)
    0000238f: 	callq	clock@PLT # Offset: 9103
    00002394: 	movq	(%rsp), %rdi
    00002398: 	pxor	%xmm0, %xmm0
    0000239c: 	movq	%rax, end_time(%rip)
    000023a3: 	subq	start_time(%rip), %rax
    000023aa: 	cvtsi2sd	%rax, %xmm0
    000023af: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000023b7: 	callq	_Z13record_resultdPKc # Offset: 9143
    000023bc: 	movq	0xa0(%rsp), %rdi
    000023c4: 	cmpq	%r13, %rdi
    000023c7: 	je	.Ltmp4320 # Offset: 9159
    000023c9: 	movq	0xb0(%rsp), %rax
    000023d1: 	leaq	0x1(%rax), %rsi
    000023d5: 	callq	_ZdlPvm@PLT # Offset: 9173
.Ltmp4320:
    000023da: 	leaq	0x80(%rsp), %rdi
    000023e2: 	leaq	DATAat0x57542(%rip), %rdx
    000023e9: 	movq	%r14, %rsi
    000023ec: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9196
    000023f1: 	movl	iterations(%rip), %edx
    000023f7: 	xorl	%r8d, %r8d
    000023fa: 	xorl	%ecx, %ecx
    000023fc: 	movl	$0x1f40, %esi
    00002401: 	movq	0x80(%rsp), %rdi
    00002409: 	callq	_Z9summarizePKciiii # Offset: 9225
    0000240e: 	leaq	DATAat0x5755d(%rip), %rdx
    00002415: 	movq	%r14, %rsi
    00002418: 	movq	%r12, %rdi
    0000241b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9243
    00002420: 	callq	clock@PLT # Offset: 9248
    00002425: 	movl	iterations(%rip), %ecx
    0000242b: 	movq	%rax, start_time(%rip)
    00002432: 	testl	%ecx, %ecx
    00002434: 	jle	.Ltmp4321 # Offset: 9268
    0000243a: 	movdqa	DATAat0x57f50(%rip), %xmm4
    00002442: 	movl	$0x0, 0x1c(%rsp)
    0000244a: 	movaps	%xmm4, (%rsp)
    0000244e: 	nop # Size: 2
.Ltmp4325:
    00002450: 	movq	%rbp, %rax
    00002453: 	pxor	%xmm0, %xmm0
    00002457: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4322:
    00002460: 	movdqa	(%rsp), %xmm1
    00002465: 	pand	(%rax), %xmm1
    00002469: 	addq	$0x10, %rax
    0000246d: 	paddq	%xmm1, %xmm0
    00002471: 	cmpq	%rbx, %rax
    00002474: 	jne	.Ltmp4322 # Offset: 9332
    00002476: 	movsd	init_value(%rip), %xmm1
    0000247e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00002486: 	jae	.Ltmp4323 # Offset: 9350
    0000248c: 	cvttsd2si	%xmm1, %rdx
.Ltmp4645:
    00002491: 	movdqa	%xmm0, %xmm1
    00002495: 	andl	$0x1, %edx
    00002498: 	psrldq	$0x8, %xmm1
    0000249d: 	negq	%rdx
    000024a0: 	paddq	%xmm1, %xmm0
    000024a4: 	andl	$0x1f40, %edx
    000024aa: 	movq	%xmm0, %rax
    000024af: 	cmpq	%rax, %rdx
    000024b2: 	je	.Ltmp4324 # Offset: 9394
    000024b4: 	movl	current_test(%rip), %edx
    000024ba: 	leaq	DATAat0x571d0(%rip), %rsi
    000024c1: 	movl	$0x1, %edi
    000024c6: 	xorl	%eax, %eax
    000024c8: 	callq	__printf_chk@PLT # Offset: 9416
    000024cd: 	movl	iterations(%rip), %ecx
.Ltmp4324:
    000024d3: 	addl	$0x1, 0x1c(%rsp)
    000024d8: 	movl	0x1c(%rsp), %eax
    000024dc: 	cmpl	%ecx, %eax
    000024de: 	jl	.Ltmp4325 # Offset: 9438
.Ltmp4321:
    000024e4: 	movq	%r12, %rsi
    000024e7: 	movq	%r15, %rdi
    000024ea: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9450
    000024ef: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000024f6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000024fd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002504: 	je	.Ltmp4326 # Offset: 9476
.Ltmp4709:
    0000250a: 	movq	-0x20(%rax), %rdi
    0000250e: 	movq	%rdi, (%rsp)
    00002512: 	callq	clock@PLT # Offset: 9490
    00002517: 	movq	(%rsp), %rdi
    0000251b: 	pxor	%xmm0, %xmm0
    0000251f: 	movq	%rax, end_time(%rip)
    00002526: 	subq	start_time(%rip), %rax
    0000252d: 	cvtsi2sd	%rax, %xmm0
    00002532: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000253a: 	callq	_Z13record_resultdPKc # Offset: 9530
    0000253f: 	movq	0xa0(%rsp), %rdi
    00002547: 	cmpq	%r13, %rdi
    0000254a: 	je	.Ltmp4327 # Offset: 9546
    0000254c: 	movq	0xb0(%rsp), %rax
    00002554: 	leaq	0x1(%rax), %rsi
    00002558: 	callq	_ZdlPvm@PLT # Offset: 9560
.Ltmp4327:
    0000255d: 	leaq	DATAat0x57564(%rip), %rdx
    00002564: 	movq	%r14, %rsi
    00002567: 	movq	%r12, %rdi
    0000256a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9578
    0000256f: 	callq	clock@PLT # Offset: 9583
    00002574: 	movl	iterations(%rip), %ecx
    0000257a: 	movq	%rax, start_time(%rip)
    00002581: 	testl	%ecx, %ecx
    00002583: 	jle	.Ltmp4328 # Offset: 9603
    00002589: 	movdqa	DATAat0x57f50(%rip), %xmm5
    00002591: 	movl	$0x0, 0x1c(%rsp)
    00002599: 	movaps	%xmm5, (%rsp)
    0000259d: 	nopl	(%rax) # Size: 3
.Ltmp4332:
    000025a0: 	movq	%rbp, %rax
    000025a3: 	pxor	%xmm0, %xmm0
    000025a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4329:
    000025b0: 	movdqa	(%rsp), %xmm1
    000025b5: 	pand	(%rax), %xmm1
    000025b9: 	addq	$0x10, %rax
    000025bd: 	paddq	%xmm1, %xmm0
    000025c1: 	cmpq	%rax, %rbx
    000025c4: 	jne	.Ltmp4329 # Offset: 9668
    000025c6: 	movsd	init_value(%rip), %xmm1
    000025ce: 	comisd	DATAat0x57bd8(%rip), %xmm1
    000025d6: 	jae	.Ltmp4330 # Offset: 9686
    000025dc: 	cvttsd2si	%xmm1, %rdx
.Ltmp4644:
    000025e1: 	movdqa	%xmm0, %xmm1
    000025e5: 	andl	$0x1, %edx
    000025e8: 	psrldq	$0x8, %xmm1
    000025ed: 	negq	%rdx
    000025f0: 	paddq	%xmm1, %xmm0
    000025f4: 	andl	$0x1f40, %edx
    000025fa: 	movq	%xmm0, %rax
    000025ff: 	cmpq	%rax, %rdx
    00002602: 	je	.Ltmp4331 # Offset: 9730
    00002604: 	movl	current_test(%rip), %edx
    0000260a: 	leaq	DATAat0x571d0(%rip), %rsi
    00002611: 	movl	$0x1, %edi
    00002616: 	xorl	%eax, %eax
    00002618: 	callq	__printf_chk@PLT # Offset: 9752
    0000261d: 	movl	iterations(%rip), %ecx
.Ltmp4331:
    00002623: 	addl	$0x1, 0x1c(%rsp)
    00002628: 	movl	0x1c(%rsp), %eax
    0000262c: 	cmpl	%ecx, %eax
    0000262e: 	jl	.Ltmp4332 # Offset: 9774
.Ltmp4328:
    00002634: 	movq	%r12, %rsi
    00002637: 	movq	%r15, %rdi
    0000263a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9786
    0000263f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002646: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000264d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002654: 	je	.Ltmp4333 # Offset: 9812
.Ltmp4708:
    0000265a: 	movq	-0x20(%rax), %rdi
    0000265e: 	movq	%rdi, (%rsp)
    00002662: 	callq	clock@PLT # Offset: 9826
    00002667: 	movq	(%rsp), %rdi
    0000266b: 	pxor	%xmm0, %xmm0
    0000266f: 	movq	%rax, end_time(%rip)
    00002676: 	subq	start_time(%rip), %rax
    0000267d: 	cvtsi2sd	%rax, %xmm0
    00002682: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000268a: 	callq	_Z13record_resultdPKc # Offset: 9866
    0000268f: 	movq	0xa0(%rsp), %rdi
    00002697: 	cmpq	%r13, %rdi
    0000269a: 	je	.Ltmp4334 # Offset: 9882
    0000269c: 	movq	0xb0(%rsp), %rax
    000026a4: 	leaq	0x1(%rax), %rsi
    000026a8: 	callq	_ZdlPvm@PLT # Offset: 9896
.Ltmp4334:
    000026ad: 	leaq	DATAat0x57575(%rip), %rdx
    000026b4: 	movq	%r14, %rsi
    000026b7: 	movq	%r12, %rdi
    000026ba: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9914
    000026bf: 	callq	clock@PLT # Offset: 9919
    000026c4: 	movl	iterations(%rip), %ecx
    000026ca: 	movq	%rax, start_time(%rip)
    000026d1: 	testl	%ecx, %ecx
    000026d3: 	jle	.Ltmp4335 # Offset: 9939
    000026d9: 	movdqa	DATAat0x57f50(%rip), %xmm6
    000026e1: 	movl	$0x0, 0x1c(%rsp)
    000026e9: 	movaps	%xmm6, (%rsp)
    000026ed: 	nopl	(%rax) # Size: 3
.Ltmp4339:
    000026f0: 	movq	%rbp, %rax
    000026f3: 	pxor	%xmm0, %xmm0
    000026f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4336:
    00002700: 	movdqa	(%rsp), %xmm1
    00002705: 	pand	(%rax), %xmm1
    00002709: 	addq	$0x10, %rax
    0000270d: 	paddq	%xmm1, %xmm0
    00002711: 	cmpq	%rbx, %rax
    00002714: 	jne	.Ltmp4336 # Offset: 10004
    00002716: 	movsd	init_value(%rip), %xmm1
    0000271e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00002726: 	jae	.Ltmp4337 # Offset: 10022
    0000272c: 	cvttsd2si	%xmm1, %rdx
.Ltmp4643:
    00002731: 	movdqa	%xmm0, %xmm1
    00002735: 	andl	$0x1, %edx
    00002738: 	psrldq	$0x8, %xmm1
    0000273d: 	negq	%rdx
    00002740: 	paddq	%xmm1, %xmm0
    00002744: 	andl	$0x1f40, %edx
    0000274a: 	movq	%xmm0, %rax
    0000274f: 	cmpq	%rax, %rdx
    00002752: 	je	.Ltmp4338 # Offset: 10066
    00002754: 	movl	current_test(%rip), %edx
    0000275a: 	leaq	DATAat0x571d0(%rip), %rsi
    00002761: 	movl	$0x1, %edi
    00002766: 	xorl	%eax, %eax
    00002768: 	callq	__printf_chk@PLT # Offset: 10088
    0000276d: 	movl	iterations(%rip), %ecx
.Ltmp4338:
    00002773: 	addl	$0x1, 0x1c(%rsp)
    00002778: 	movl	0x1c(%rsp), %eax
    0000277c: 	cmpl	%ecx, %eax
    0000277e: 	jl	.Ltmp4339 # Offset: 10110
.Ltmp4335:
    00002784: 	movq	%r12, %rsi
    00002787: 	movq	%r15, %rdi
    0000278a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10122
    0000278f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002796: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000279d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000027a4: 	je	.Ltmp4340 # Offset: 10148
.Ltmp4707:
    000027aa: 	movq	-0x20(%rax), %rdi
    000027ae: 	movq	%rdi, (%rsp)
    000027b2: 	callq	clock@PLT # Offset: 10162
    000027b7: 	movq	(%rsp), %rdi
    000027bb: 	pxor	%xmm0, %xmm0
    000027bf: 	movq	%rax, end_time(%rip)
    000027c6: 	subq	start_time(%rip), %rax
    000027cd: 	cvtsi2sd	%rax, %xmm0
    000027d2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000027da: 	callq	_Z13record_resultdPKc # Offset: 10202
    000027df: 	movq	0xa0(%rsp), %rdi
    000027e7: 	cmpq	%r13, %rdi
    000027ea: 	je	.Ltmp4341 # Offset: 10218
    000027ec: 	movq	0xb0(%rsp), %rax
    000027f4: 	leaq	0x1(%rax), %rsi
    000027f8: 	callq	_ZdlPvm@PLT # Offset: 10232
.Ltmp4341:
    000027fd: 	leaq	DATAat0x57587(%rip), %rdx
    00002804: 	movq	%r14, %rsi
    00002807: 	movq	%r12, %rdi
    0000280a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10250
    0000280f: 	callq	clock@PLT # Offset: 10255
    00002814: 	movl	iterations(%rip), %ecx
    0000281a: 	movq	%rax, start_time(%rip)
    00002821: 	testl	%ecx, %ecx
    00002823: 	jle	.Ltmp4342 # Offset: 10275
    00002829: 	movdqa	DATAat0x57f50(%rip), %xmm7
    00002831: 	movl	$0x0, 0x1c(%rsp)
    00002839: 	movaps	%xmm7, (%rsp)
    0000283d: 	nopl	(%rax) # Size: 3
.Ltmp4346:
    00002840: 	movq	%rbp, %rax
    00002843: 	pxor	%xmm0, %xmm0
    00002847: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4343:
    00002850: 	movdqa	(%rsp), %xmm1
    00002855: 	pand	(%rax), %xmm1
    00002859: 	addq	$0x10, %rax
    0000285d: 	paddq	%xmm1, %xmm0
    00002861: 	cmpq	%rax, %rbx
    00002864: 	jne	.Ltmp4343 # Offset: 10340
    00002866: 	movsd	init_value(%rip), %xmm1
    0000286e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00002876: 	jae	.Ltmp4344 # Offset: 10358
    0000287c: 	cvttsd2si	%xmm1, %rdx
.Ltmp4642:
    00002881: 	movdqa	%xmm0, %xmm1
    00002885: 	andl	$0x1, %edx
    00002888: 	psrldq	$0x8, %xmm1
    0000288d: 	negq	%rdx
    00002890: 	paddq	%xmm1, %xmm0
    00002894: 	andl	$0x1f40, %edx
    0000289a: 	movq	%xmm0, %rax
    0000289f: 	cmpq	%rax, %rdx
    000028a2: 	je	.Ltmp4345 # Offset: 10402
    000028a4: 	movl	current_test(%rip), %edx
    000028aa: 	leaq	DATAat0x571d0(%rip), %rsi
    000028b1: 	movl	$0x1, %edi
    000028b6: 	xorl	%eax, %eax
    000028b8: 	callq	__printf_chk@PLT # Offset: 10424
    000028bd: 	movl	iterations(%rip), %ecx
.Ltmp4345:
    000028c3: 	addl	$0x1, 0x1c(%rsp)
    000028c8: 	movl	0x1c(%rsp), %eax
    000028cc: 	cmpl	%ecx, %eax
    000028ce: 	jl	.Ltmp4346 # Offset: 10446
.Ltmp4342:
    000028d4: 	movq	%r12, %rsi
    000028d7: 	movq	%r15, %rdi
    000028da: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10458
    000028df: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000028e6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000028ed: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000028f4: 	je	.Ltmp4347 # Offset: 10484
.Ltmp4706:
    000028fa: 	movq	-0x20(%rax), %rdi
    000028fe: 	movq	%rdi, (%rsp)
    00002902: 	callq	clock@PLT # Offset: 10498
    00002907: 	movq	(%rsp), %rdi
    0000290b: 	pxor	%xmm0, %xmm0
    0000290f: 	movq	%rax, end_time(%rip)
    00002916: 	subq	start_time(%rip), %rax
    0000291d: 	cvtsi2sd	%rax, %xmm0
    00002922: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000292a: 	callq	_Z13record_resultdPKc # Offset: 10538
    0000292f: 	movq	0xa0(%rsp), %rdi
    00002937: 	cmpq	%r13, %rdi
    0000293a: 	je	.Ltmp4348 # Offset: 10554
    0000293c: 	movq	0xb0(%rsp), %rax
    00002944: 	leaq	0x1(%rax), %rsi
    00002948: 	callq	_ZdlPvm@PLT # Offset: 10568
.Ltmp4348:
    0000294d: 	leaq	DATAat0x5759e(%rip), %rdx
    00002954: 	movq	%r14, %rsi
    00002957: 	movq	%r12, %rdi
    0000295a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10586
    0000295f: 	movq	%r12, %rcx
    00002962: 	movl	$0x2, %edx
    00002967: 	movl	$0x1f40, %esi
    0000296c: 	movq	%rbp, %rdi
    0000296f: 	callq	_Z14test_variable1Im25custom_remainder_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10607
    00002974: 	movq	0xa0(%rsp), %rdi
    0000297c: 	cmpq	%r13, %rdi
    0000297f: 	je	.Ltmp4349 # Offset: 10623
    00002981: 	movq	0xb0(%rsp), %rax
    00002989: 	leaq	0x1(%rax), %rsi
    0000298d: 	callq	_ZdlPvm@PLT # Offset: 10637
.Ltmp4349:
    00002992: 	leaq	DATAat0x575b7(%rip), %rdx
    00002999: 	movq	%r14, %rsi
    0000299c: 	movq	%r12, %rdi
    0000299f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10655
    000029a4: 	callq	clock@PLT # Offset: 10660
    000029a9: 	movl	iterations(%rip), %ecx
    000029af: 	movq	%rax, start_time(%rip)
    000029b6: 	testl	%ecx, %ecx
    000029b8: 	jle	.Ltmp4350 # Offset: 10680
    000029be: 	movdqa	DATAat0x57f50(%rip), %xmm4
    000029c6: 	movl	$0x0, 0x1c(%rsp)
    000029ce: 	movaps	%xmm4, (%rsp)
    000029d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4354:
    000029d8: 	movq	%rbp, %rax
    000029db: 	pxor	%xmm0, %xmm0
    000029df: 	nop # Size: 1
.Ltmp4351:
    000029e0: 	movdqa	(%rsp), %xmm1
    000029e5: 	pand	(%rax), %xmm1
    000029e9: 	addq	$0x10, %rax
    000029ed: 	paddq	%xmm1, %xmm0
    000029f1: 	cmpq	%rbx, %rax
    000029f4: 	jne	.Ltmp4351 # Offset: 10740
    000029f6: 	movsd	init_value(%rip), %xmm1
    000029fe: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00002a06: 	jae	.Ltmp4352 # Offset: 10758
    00002a0c: 	cvttsd2si	%xmm1, %rdx
.Ltmp4641:
    00002a11: 	movdqa	%xmm0, %xmm1
    00002a15: 	andl	$0x1, %edx
    00002a18: 	psrldq	$0x8, %xmm1
    00002a1d: 	negq	%rdx
    00002a20: 	paddq	%xmm1, %xmm0
    00002a24: 	andl	$0x1f40, %edx
    00002a2a: 	movq	%xmm0, %rax
    00002a2f: 	cmpq	%rax, %rdx
    00002a32: 	je	.Ltmp4353 # Offset: 10802
    00002a34: 	movl	current_test(%rip), %edx
    00002a3a: 	leaq	DATAat0x571d0(%rip), %rsi
    00002a41: 	movl	$0x1, %edi
    00002a46: 	xorl	%eax, %eax
    00002a48: 	callq	__printf_chk@PLT # Offset: 10824
    00002a4d: 	movl	iterations(%rip), %ecx
.Ltmp4353:
    00002a53: 	addl	$0x1, 0x1c(%rsp)
    00002a58: 	movl	0x1c(%rsp), %eax
    00002a5c: 	cmpl	%ecx, %eax
    00002a5e: 	jl	.Ltmp4354 # Offset: 10846
.Ltmp4350:
    00002a64: 	movq	%r12, %rsi
    00002a67: 	movq	%r15, %rdi
    00002a6a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10858
    00002a6f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002a76: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002a7d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002a84: 	je	.Ltmp4355 # Offset: 10884
.Ltmp4705:
    00002a8a: 	movq	-0x20(%rax), %rdi
    00002a8e: 	movq	%rdi, (%rsp)
    00002a92: 	callq	clock@PLT # Offset: 10898
    00002a97: 	movq	(%rsp), %rdi
    00002a9b: 	pxor	%xmm0, %xmm0
    00002a9f: 	movq	%rax, end_time(%rip)
    00002aa6: 	subq	start_time(%rip), %rax
    00002aad: 	cvtsi2sd	%rax, %xmm0
    00002ab2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002aba: 	callq	_Z13record_resultdPKc # Offset: 10938
    00002abf: 	movq	0xa0(%rsp), %rdi
    00002ac7: 	cmpq	%r13, %rdi
    00002aca: 	je	.Ltmp4356 # Offset: 10954
    00002acc: 	movq	0xb0(%rsp), %rax
    00002ad4: 	leaq	0x1(%rax), %rsi
    00002ad8: 	callq	_ZdlPvm@PLT # Offset: 10968
.Ltmp4356:
    00002add: 	leaq	DATAat0x575d0(%rip), %rdx
    00002ae4: 	movq	%r14, %rsi
    00002ae7: 	movq	%r12, %rdi
    00002aea: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10986
    00002aef: 	callq	clock@PLT # Offset: 10991
    00002af4: 	movl	iterations(%rip), %ecx
    00002afa: 	movq	%rax, start_time(%rip)
    00002b01: 	testl	%ecx, %ecx
    00002b03: 	jle	.Ltmp4357 # Offset: 11011
    00002b09: 	movdqa	DATAat0x57c80(%rip), %xmm5
    00002b11: 	movl	$0x0, 0x1c(%rsp)
    00002b19: 	movaps	%xmm5, (%rsp)
    00002b1d: 	nopl	(%rax) # Size: 3
.Ltmp4361:
    00002b20: 	movq	%rbp, %rax
    00002b23: 	pxor	%xmm0, %xmm0
    00002b27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4358:
    00002b30: 	movdqa	(%rsp), %xmm1
    00002b35: 	pand	(%rax), %xmm1
    00002b39: 	addq	$0x10, %rax
    00002b3d: 	paddq	%xmm1, %xmm0
    00002b41: 	cmpq	%rax, %rbx
    00002b44: 	jne	.Ltmp4358 # Offset: 11076
    00002b46: 	movsd	init_value(%rip), %xmm1
    00002b4e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00002b56: 	jae	.Ltmp4359 # Offset: 11094
    00002b5c: 	cvttsd2si	%xmm1, %rax
.Ltmp4640:
    00002b61: 	andl	$0x3, %eax
    00002b64: 	movdqa	%xmm0, %xmm1
    00002b68: 	imulq	$0x1f40, %rax, %rdx
    00002b6f: 	psrldq	$0x8, %xmm1
    00002b74: 	paddq	%xmm1, %xmm0
    00002b78: 	movq	%xmm0, %rax
    00002b7d: 	cmpq	%rax, %rdx
    00002b80: 	je	.Ltmp4360 # Offset: 11136
    00002b82: 	movl	current_test(%rip), %edx
    00002b88: 	leaq	DATAat0x571d0(%rip), %rsi
    00002b8f: 	movl	$0x1, %edi
    00002b94: 	xorl	%eax, %eax
    00002b96: 	callq	__printf_chk@PLT # Offset: 11158
    00002b9b: 	movl	iterations(%rip), %ecx
.Ltmp4360:
    00002ba1: 	addl	$0x1, 0x1c(%rsp)
    00002ba6: 	movl	0x1c(%rsp), %eax
    00002baa: 	cmpl	%ecx, %eax
    00002bac: 	jl	.Ltmp4361 # Offset: 11180
.Ltmp4357:
    00002bb2: 	movq	%r12, %rsi
    00002bb5: 	movq	%r15, %rdi
    00002bb8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11192
    00002bbd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002bc4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002bcb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002bd2: 	je	.Ltmp4362 # Offset: 11218
.Ltmp4704:
    00002bd8: 	movq	-0x20(%rax), %rdi
    00002bdc: 	movq	%rdi, (%rsp)
    00002be0: 	callq	clock@PLT # Offset: 11232
    00002be5: 	movq	(%rsp), %rdi
    00002be9: 	pxor	%xmm0, %xmm0
    00002bed: 	movq	%rax, end_time(%rip)
    00002bf4: 	subq	start_time(%rip), %rax
    00002bfb: 	cvtsi2sd	%rax, %xmm0
    00002c00: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002c08: 	callq	_Z13record_resultdPKc # Offset: 11272
    00002c0d: 	movq	0xa0(%rsp), %rdi
    00002c15: 	cmpq	%r13, %rdi
    00002c18: 	je	.Ltmp4363 # Offset: 11288
    00002c1a: 	movq	0xb0(%rsp), %rax
    00002c22: 	leaq	0x1(%rax), %rsi
    00002c26: 	callq	_ZdlPvm@PLT # Offset: 11302
.Ltmp4363:
    00002c2b: 	leaq	DATAat0x575d7(%rip), %rdx
    00002c32: 	movq	%r14, %rsi
    00002c35: 	movq	%r12, %rdi
    00002c38: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11320
    00002c3d: 	callq	clock@PLT # Offset: 11325
    00002c42: 	movl	iterations(%rip), %ecx
    00002c48: 	movq	%rax, start_time(%rip)
    00002c4f: 	testl	%ecx, %ecx
    00002c51: 	jle	.Ltmp4364 # Offset: 11345
    00002c57: 	movdqa	DATAat0x57c80(%rip), %xmm6
    00002c5f: 	movl	$0x0, 0x1c(%rsp)
    00002c67: 	movaps	%xmm6, (%rsp)
    00002c6b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4368:
    00002c70: 	movq	%rbp, %rax
    00002c73: 	pxor	%xmm0, %xmm0
    00002c77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4365:
    00002c80: 	movdqa	(%rsp), %xmm1
    00002c85: 	pand	(%rax), %xmm1
    00002c89: 	addq	$0x10, %rax
    00002c8d: 	paddq	%xmm1, %xmm0
    00002c91: 	cmpq	%rbx, %rax
    00002c94: 	jne	.Ltmp4365 # Offset: 11412
    00002c96: 	movsd	init_value(%rip), %xmm1
    00002c9e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00002ca6: 	jae	.Ltmp4366 # Offset: 11430
    00002cac: 	cvttsd2si	%xmm1, %rax
.Ltmp4639:
    00002cb1: 	andl	$0x3, %eax
    00002cb4: 	movdqa	%xmm0, %xmm1
    00002cb8: 	imulq	$0x1f40, %rax, %rdx
    00002cbf: 	psrldq	$0x8, %xmm1
    00002cc4: 	paddq	%xmm1, %xmm0
    00002cc8: 	movq	%xmm0, %rax
    00002ccd: 	cmpq	%rax, %rdx
    00002cd0: 	je	.Ltmp4367 # Offset: 11472
    00002cd2: 	movl	current_test(%rip), %edx
    00002cd8: 	leaq	DATAat0x571d0(%rip), %rsi
    00002cdf: 	movl	$0x1, %edi
    00002ce4: 	xorl	%eax, %eax
    00002ce6: 	callq	__printf_chk@PLT # Offset: 11494
    00002ceb: 	movl	iterations(%rip), %ecx
.Ltmp4367:
    00002cf1: 	addl	$0x1, 0x1c(%rsp)
    00002cf6: 	movl	0x1c(%rsp), %eax
    00002cfa: 	cmpl	%ecx, %eax
    00002cfc: 	jl	.Ltmp4368 # Offset: 11516
.Ltmp4364:
    00002d02: 	movq	%r12, %rsi
    00002d05: 	movq	%r15, %rdi
    00002d08: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11528
    00002d0d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002d14: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002d1b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002d22: 	je	.Ltmp4369 # Offset: 11554
.Ltmp4703:
    00002d28: 	movq	-0x20(%rax), %rdi
    00002d2c: 	movq	%rdi, (%rsp)
    00002d30: 	callq	clock@PLT # Offset: 11568
    00002d35: 	movq	(%rsp), %rdi
    00002d39: 	pxor	%xmm0, %xmm0
    00002d3d: 	movq	%rax, end_time(%rip)
    00002d44: 	subq	start_time(%rip), %rax
    00002d4b: 	cvtsi2sd	%rax, %xmm0
    00002d50: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002d58: 	callq	_Z13record_resultdPKc # Offset: 11608
    00002d5d: 	movq	0xa0(%rsp), %rdi
    00002d65: 	cmpq	%r13, %rdi
    00002d68: 	je	.Ltmp4370 # Offset: 11624
    00002d6a: 	movq	0xb0(%rsp), %rax
    00002d72: 	leaq	0x1(%rax), %rsi
    00002d76: 	callq	_ZdlPvm@PLT # Offset: 11638
.Ltmp4370:
    00002d7b: 	leaq	DATAat0x575e8(%rip), %rdx
    00002d82: 	movq	%r14, %rsi
    00002d85: 	movq	%r12, %rdi
    00002d88: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11656
    00002d8d: 	movq	%r12, %rdx
    00002d90: 	movl	$0x1f40, %esi
    00002d95: 	movq	%rbp, %rdi
    00002d98: 	callq	_Z13test_constantIm14and_remainder2ImLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11672
    00002d9d: 	movq	0xa0(%rsp), %rdi
    00002da5: 	cmpq	%r13, %rdi
    00002da8: 	je	.Ltmp4371 # Offset: 11688
    00002daa: 	movq	0xb0(%rsp), %rax
    00002db2: 	leaq	0x1(%rax), %rsi
    00002db6: 	callq	_ZdlPvm@PLT # Offset: 11702
.Ltmp4371:
    00002dbb: 	leaq	DATAat0x575fa(%rip), %rdx
    00002dc2: 	movq	%r14, %rsi
    00002dc5: 	movq	%r12, %rdi
    00002dc8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11720
    00002dcd: 	callq	clock@PLT # Offset: 11725
    00002dd2: 	movl	iterations(%rip), %ecx
    00002dd8: 	movq	%rax, start_time(%rip)
    00002ddf: 	testl	%ecx, %ecx
    00002de1: 	jle	.Ltmp4372 # Offset: 11745
    00002de7: 	movdqa	DATAat0x57c80(%rip), %xmm7
    00002def: 	movl	$0x0, 0x1c(%rsp)
    00002df7: 	movaps	%xmm7, (%rsp)
    00002dfb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4376:
    00002e00: 	movq	%rbp, %rax
    00002e03: 	pxor	%xmm0, %xmm0
    00002e07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4373:
    00002e10: 	movdqa	(%rsp), %xmm1
    00002e15: 	pand	(%rax), %xmm1
    00002e19: 	addq	$0x10, %rax
    00002e1d: 	paddq	%xmm1, %xmm0
    00002e21: 	cmpq	%rax, %rbx
    00002e24: 	jne	.Ltmp4373 # Offset: 11812
    00002e26: 	movsd	init_value(%rip), %xmm1
    00002e2e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00002e36: 	jae	.Ltmp4374 # Offset: 11830
    00002e3c: 	cvttsd2si	%xmm1, %rax
.Ltmp4638:
    00002e41: 	andl	$0x3, %eax
    00002e44: 	movdqa	%xmm0, %xmm1
    00002e48: 	imulq	$0x1f40, %rax, %rdx
    00002e4f: 	psrldq	$0x8, %xmm1
    00002e54: 	paddq	%xmm1, %xmm0
    00002e58: 	movq	%xmm0, %rax
    00002e5d: 	cmpq	%rax, %rdx
    00002e60: 	je	.Ltmp4375 # Offset: 11872
    00002e62: 	movl	current_test(%rip), %edx
    00002e68: 	leaq	DATAat0x571d0(%rip), %rsi
    00002e6f: 	movl	$0x1, %edi
    00002e74: 	xorl	%eax, %eax
    00002e76: 	callq	__printf_chk@PLT # Offset: 11894
    00002e7b: 	movl	iterations(%rip), %ecx
.Ltmp4375:
    00002e81: 	addl	$0x1, 0x1c(%rsp)
    00002e86: 	movl	0x1c(%rsp), %eax
    00002e8a: 	cmpl	%ecx, %eax
    00002e8c: 	jl	.Ltmp4376 # Offset: 11916
.Ltmp4372:
    00002e92: 	movq	%r12, %rsi
    00002e95: 	movq	%r15, %rdi
    00002e98: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11928
    00002e9d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002ea4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002eab: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002eb2: 	je	.Ltmp4377 # Offset: 11954
.Ltmp4702:
    00002eb8: 	movq	-0x20(%rax), %rdi
    00002ebc: 	movq	%rdi, (%rsp)
    00002ec0: 	callq	clock@PLT # Offset: 11968
    00002ec5: 	movq	(%rsp), %rdi
    00002ec9: 	pxor	%xmm0, %xmm0
    00002ecd: 	movq	%rax, end_time(%rip)
    00002ed4: 	subq	start_time(%rip), %rax
    00002edb: 	cvtsi2sd	%rax, %xmm0
    00002ee0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002ee8: 	callq	_Z13record_resultdPKc # Offset: 12008
    00002eed: 	movq	0xa0(%rsp), %rdi
    00002ef5: 	cmpq	%r13, %rdi
    00002ef8: 	je	.Ltmp4378 # Offset: 12024
    00002efa: 	movq	0xb0(%rsp), %rax
    00002f02: 	leaq	0x1(%rax), %rsi
    00002f06: 	callq	_ZdlPvm@PLT # Offset: 12038
.Ltmp4378:
    00002f0b: 	leaq	DATAat0x57611(%rip), %rdx
    00002f12: 	movq	%r14, %rsi
    00002f15: 	movq	%r12, %rdi
    00002f18: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12056
    00002f1d: 	movq	%r12, %rcx
    00002f20: 	movl	$0x4, %edx
    00002f25: 	movl	$0x1f40, %esi
    00002f2a: 	movq	%rbp, %rdi
    00002f2d: 	callq	_Z14test_variable1Im25custom_remainder_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 12077
    00002f32: 	movq	0xa0(%rsp), %rdi
    00002f3a: 	cmpq	%r13, %rdi
    00002f3d: 	je	.Ltmp4379 # Offset: 12093
    00002f3f: 	movq	0xb0(%rsp), %rax
    00002f47: 	leaq	0x1(%rax), %rsi
    00002f4b: 	callq	_ZdlPvm@PLT # Offset: 12107
.Ltmp4379:
    00002f50: 	leaq	DATAat0x5762a(%rip), %rdx
    00002f57: 	movq	%r14, %rsi
    00002f5a: 	movq	%r12, %rdi
    00002f5d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12125
    00002f62: 	callq	clock@PLT # Offset: 12130
    00002f67: 	movl	iterations(%rip), %ecx
    00002f6d: 	movq	%rax, start_time(%rip)
    00002f74: 	testl	%ecx, %ecx
    00002f76: 	jle	.Ltmp4380 # Offset: 12150
    00002f7c: 	movdqa	DATAat0x57c80(%rip), %xmm2
    00002f84: 	movl	$0x0, 0x1c(%rsp)
    00002f8c: 	movaps	%xmm2, (%rsp)
.Ltmp4384:
    00002f90: 	movq	%rbp, %rax
    00002f93: 	pxor	%xmm0, %xmm0
    00002f97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4381:
    00002fa0: 	movdqa	(%rsp), %xmm1
    00002fa5: 	pand	(%rax), %xmm1
    00002fa9: 	addq	$0x10, %rax
    00002fad: 	paddq	%xmm1, %xmm0
    00002fb1: 	cmpq	%rbx, %rax
    00002fb4: 	jne	.Ltmp4381 # Offset: 12212
    00002fb6: 	movsd	init_value(%rip), %xmm1
    00002fbe: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00002fc6: 	jae	.Ltmp4382 # Offset: 12230
    00002fcc: 	cvttsd2si	%xmm1, %rax
.Ltmp4637:
    00002fd1: 	andl	$0x3, %eax
    00002fd4: 	movdqa	%xmm0, %xmm1
    00002fd8: 	imulq	$0x1f40, %rax, %rdx
    00002fdf: 	psrldq	$0x8, %xmm1
    00002fe4: 	paddq	%xmm1, %xmm0
    00002fe8: 	movq	%xmm0, %rax
    00002fed: 	cmpq	%rax, %rdx
    00002ff0: 	je	.Ltmp4383 # Offset: 12272
    00002ff2: 	movl	current_test(%rip), %edx
    00002ff8: 	leaq	DATAat0x571d0(%rip), %rsi
    00002fff: 	movl	$0x1, %edi
    00003004: 	xorl	%eax, %eax
    00003006: 	callq	__printf_chk@PLT # Offset: 12294
    0000300b: 	movl	iterations(%rip), %ecx
.Ltmp4383:
    00003011: 	addl	$0x1, 0x1c(%rsp)
    00003016: 	movl	0x1c(%rsp), %eax
    0000301a: 	cmpl	%ecx, %eax
    0000301c: 	jl	.Ltmp4384 # Offset: 12316
.Ltmp4380:
    00003022: 	movq	%r12, %rsi
    00003025: 	movq	%r15, %rdi
    00003028: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12328
    0000302d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003034: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000303b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003042: 	je	.Ltmp4385 # Offset: 12354
.Ltmp4701:
    00003048: 	movq	-0x20(%rax), %rdi
    0000304c: 	movq	%rdi, (%rsp)
    00003050: 	callq	clock@PLT # Offset: 12368
    00003055: 	movq	(%rsp), %rdi
    00003059: 	pxor	%xmm0, %xmm0
    0000305d: 	movq	%rax, end_time(%rip)
    00003064: 	subq	start_time(%rip), %rax
    0000306b: 	cvtsi2sd	%rax, %xmm0
    00003070: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003078: 	callq	_Z13record_resultdPKc # Offset: 12408
    0000307d: 	movq	0xa0(%rsp), %rdi
    00003085: 	cmpq	%r13, %rdi
    00003088: 	je	.Ltmp4386 # Offset: 12424
    0000308a: 	movq	0xb0(%rsp), %rax
    00003092: 	leaq	0x1(%rax), %rsi
    00003096: 	callq	_ZdlPvm@PLT # Offset: 12438
.Ltmp4386:
    0000309b: 	leaq	DATAat0x57643(%rip), %rdx
    000030a2: 	movq	%r14, %rsi
    000030a5: 	movq	%r12, %rdi
    000030a8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12456
    000030ad: 	movq	%r12, %rdx
    000030b0: 	movl	$0x1f40, %esi
    000030b5: 	movq	%rbp, %rdi
    000030b8: 	callq	_Z13test_constantIm12and_constantImLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 12472
    000030bd: 	movq	0xa0(%rsp), %rdi
    000030c5: 	cmpq	%r13, %rdi
    000030c8: 	je	.Ltmp4387 # Offset: 12488
    000030ca: 	movq	0xb0(%rsp), %rax
    000030d2: 	leaq	0x1(%rax), %rsi
    000030d6: 	callq	_ZdlPvm@PLT # Offset: 12502
.Ltmp4387:
    000030db: 	leaq	DATAat0x5764a(%rip), %rdx
    000030e2: 	movq	%r14, %rsi
    000030e5: 	movq	%r12, %rdi
    000030e8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12520
    000030ed: 	movq	%r12, %rdx
    000030f0: 	movl	$0x1f40, %esi
    000030f5: 	movq	%rbp, %rdi
    000030f8: 	callq	_Z13test_constantIm13and_remainderImLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 12536
    000030fd: 	movq	0xa0(%rsp), %rdi
    00003105: 	cmpq	%r13, %rdi
    00003108: 	je	.Ltmp4388 # Offset: 12552
    0000310a: 	movq	0xb0(%rsp), %rax
    00003112: 	leaq	0x1(%rax), %rsi
    00003116: 	callq	_ZdlPvm@PLT # Offset: 12566
.Ltmp4388:
    0000311b: 	leaq	DATAat0x5765b(%rip), %rdx
    00003122: 	movq	%r14, %rsi
    00003125: 	movq	%r12, %rdi
    00003128: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12584
    0000312d: 	callq	clock@PLT # Offset: 12589
    00003132: 	movl	iterations(%rip), %ecx
    00003138: 	movq	%rax, start_time(%rip)
    0000313f: 	testl	%ecx, %ecx
    00003141: 	jle	.Ltmp4389 # Offset: 12609
    00003147: 	movdqa	DATAat0x57c40(%rip), %xmm3
    0000314f: 	movl	$0x0, 0x1c(%rsp)
    00003157: 	movaps	%xmm3, (%rsp)
    0000315b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4393:
    00003160: 	movq	%rbp, %rax
    00003163: 	pxor	%xmm0, %xmm0
    00003167: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4390:
    00003170: 	movdqa	(%rsp), %xmm1
    00003175: 	pand	(%rax), %xmm1
    00003179: 	addq	$0x10, %rax
    0000317d: 	paddq	%xmm1, %xmm0
    00003181: 	cmpq	%rax, %rbx
    00003184: 	jne	.Ltmp4390 # Offset: 12676
    00003186: 	movsd	init_value(%rip), %xmm1
    0000318e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00003196: 	jae	.Ltmp4391 # Offset: 12694
    0000319c: 	cvttsd2si	%xmm1, %rax
.Ltmp4636:
    000031a1: 	andl	$0x7, %eax
    000031a4: 	movdqa	%xmm0, %xmm1
    000031a8: 	imulq	$0x1f40, %rax, %rdx
    000031af: 	psrldq	$0x8, %xmm1
    000031b4: 	paddq	%xmm1, %xmm0
    000031b8: 	movq	%xmm0, %rax
    000031bd: 	cmpq	%rax, %rdx
    000031c0: 	je	.Ltmp4392 # Offset: 12736
    000031c2: 	movl	current_test(%rip), %edx
    000031c8: 	leaq	DATAat0x571d0(%rip), %rsi
    000031cf: 	movl	$0x1, %edi
    000031d4: 	xorl	%eax, %eax
    000031d6: 	callq	__printf_chk@PLT # Offset: 12758
    000031db: 	movl	iterations(%rip), %ecx
.Ltmp4392:
    000031e1: 	addl	$0x1, 0x1c(%rsp)
    000031e6: 	movl	0x1c(%rsp), %eax
    000031ea: 	cmpl	%ecx, %eax
    000031ec: 	jl	.Ltmp4393 # Offset: 12780
.Ltmp4389:
    000031f2: 	movq	%r12, %rsi
    000031f5: 	movq	%r15, %rdi
    000031f8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12792
    000031fd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003204: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000320b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003212: 	je	.Ltmp4394 # Offset: 12818
.Ltmp4700:
    00003218: 	movq	-0x20(%rax), %rdi
    0000321c: 	movq	%rdi, (%rsp)
    00003220: 	callq	clock@PLT # Offset: 12832
    00003225: 	movq	(%rsp), %rdi
    00003229: 	pxor	%xmm0, %xmm0
    0000322d: 	movq	%rax, end_time(%rip)
    00003234: 	subq	start_time(%rip), %rax
    0000323b: 	cvtsi2sd	%rax, %xmm0
    00003240: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003248: 	callq	_Z13record_resultdPKc # Offset: 12872
    0000324d: 	movq	0xa0(%rsp), %rdi
    00003255: 	cmpq	%r13, %rdi
    00003258: 	je	.Ltmp4395 # Offset: 12888
    0000325a: 	movq	0xb0(%rsp), %rax
    00003262: 	leaq	0x1(%rax), %rsi
    00003266: 	callq	_ZdlPvm@PLT # Offset: 12902
.Ltmp4395:
    0000326b: 	leaq	DATAat0x5766d(%rip), %rdx
    00003272: 	movq	%r14, %rsi
    00003275: 	movq	%r12, %rdi
    00003278: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12920
    0000327d: 	callq	clock@PLT # Offset: 12925
    00003282: 	movl	iterations(%rip), %ecx
    00003288: 	movq	%rax, start_time(%rip)
    0000328f: 	testl	%ecx, %ecx
    00003291: 	jle	.Ltmp4396 # Offset: 12945
    00003297: 	movdqa	DATAat0x57c40(%rip), %xmm4
    0000329f: 	movl	$0x0, 0x1c(%rsp)
    000032a7: 	movaps	%xmm4, (%rsp)
    000032ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4400:
    000032b0: 	movq	%rbp, %rax
    000032b3: 	pxor	%xmm0, %xmm0
    000032b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4397:
    000032c0: 	movdqa	(%rsp), %xmm1
    000032c5: 	pand	(%rax), %xmm1
    000032c9: 	addq	$0x10, %rax
    000032cd: 	paddq	%xmm1, %xmm0
    000032d1: 	cmpq	%rbx, %rax
    000032d4: 	jne	.Ltmp4397 # Offset: 13012
    000032d6: 	movsd	init_value(%rip), %xmm1
    000032de: 	comisd	DATAat0x57bd8(%rip), %xmm1
    000032e6: 	jae	.Ltmp4398 # Offset: 13030
    000032ec: 	cvttsd2si	%xmm1, %rax
.Ltmp4635:
    000032f1: 	andl	$0x7, %eax
    000032f4: 	movdqa	%xmm0, %xmm1
    000032f8: 	imulq	$0x1f40, %rax, %rdx
    000032ff: 	psrldq	$0x8, %xmm1
    00003304: 	paddq	%xmm1, %xmm0
    00003308: 	movq	%xmm0, %rax
    0000330d: 	cmpq	%rax, %rdx
    00003310: 	je	.Ltmp4399 # Offset: 13072
    00003312: 	movl	current_test(%rip), %edx
    00003318: 	leaq	DATAat0x571d0(%rip), %rsi
    0000331f: 	movl	$0x1, %edi
    00003324: 	xorl	%eax, %eax
    00003326: 	callq	__printf_chk@PLT # Offset: 13094
    0000332b: 	movl	iterations(%rip), %ecx
.Ltmp4399:
    00003331: 	addl	$0x1, 0x1c(%rsp)
    00003336: 	movl	0x1c(%rsp), %eax
    0000333a: 	cmpl	%ecx, %eax
    0000333c: 	jl	.Ltmp4400 # Offset: 13116
.Ltmp4396:
    00003342: 	movq	%r12, %rsi
    00003345: 	movq	%r15, %rdi
    00003348: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13128
    0000334d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003354: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000335b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003362: 	je	.Ltmp4401 # Offset: 13154
.Ltmp4699:
    00003368: 	movq	-0x20(%rax), %rdi
    0000336c: 	movq	%rdi, (%rsp)
    00003370: 	callq	clock@PLT # Offset: 13168
    00003375: 	movq	(%rsp), %rdi
    00003379: 	pxor	%xmm0, %xmm0
    0000337d: 	movq	%rax, end_time(%rip)
    00003384: 	subq	start_time(%rip), %rax
    0000338b: 	cvtsi2sd	%rax, %xmm0
    00003390: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003398: 	callq	_Z13record_resultdPKc # Offset: 13208
    0000339d: 	movq	0xa0(%rsp), %rdi
    000033a5: 	cmpq	%r13, %rdi
    000033a8: 	je	.Ltmp4402 # Offset: 13224
    000033aa: 	movq	0xb0(%rsp), %rax
    000033b2: 	leaq	0x1(%rax), %rsi
    000033b6: 	callq	_ZdlPvm@PLT # Offset: 13238
.Ltmp4402:
    000033bb: 	leaq	DATAat0x57684(%rip), %rdx
    000033c2: 	movq	%r14, %rsi
    000033c5: 	movq	%r12, %rdi
    000033c8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13256
    000033cd: 	movq	%r12, %rcx
    000033d0: 	movl	$0x8, %edx
    000033d5: 	movl	$0x1f40, %esi
    000033da: 	movq	%rbp, %rdi
    000033dd: 	callq	_Z14test_variable1Im25custom_remainder_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 13277
    000033e2: 	movq	0xa0(%rsp), %rdi
    000033ea: 	cmpq	%r13, %rdi
    000033ed: 	je	.Ltmp4403 # Offset: 13293
    000033ef: 	movq	0xb0(%rsp), %rax
    000033f7: 	leaq	0x1(%rax), %rsi
    000033fb: 	callq	_ZdlPvm@PLT # Offset: 13307
.Ltmp4403:
    00003400: 	leaq	DATAat0x5769d(%rip), %rdx
    00003407: 	movq	%r14, %rsi
    0000340a: 	movq	%r12, %rdi
    0000340d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13325
    00003412: 	callq	clock@PLT # Offset: 13330
    00003417: 	movl	iterations(%rip), %ecx
    0000341d: 	movq	%rax, start_time(%rip)
    00003424: 	testl	%ecx, %ecx
    00003426: 	jle	.Ltmp4404 # Offset: 13350
    0000342c: 	movdqa	DATAat0x57c40(%rip), %xmm5
    00003434: 	movl	$0x0, 0x1c(%rsp)
    0000343c: 	movaps	%xmm5, (%rsp)
.Ltmp4408:
    00003440: 	movq	%rbp, %rax
    00003443: 	pxor	%xmm0, %xmm0
    00003447: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4405:
    00003450: 	movdqa	(%rsp), %xmm1
    00003455: 	pand	(%rax), %xmm1
    00003459: 	addq	$0x10, %rax
    0000345d: 	paddq	%xmm1, %xmm0
    00003461: 	cmpq	%rax, %rbx
    00003464: 	jne	.Ltmp4405 # Offset: 13412
    00003466: 	movsd	init_value(%rip), %xmm1
    0000346e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00003476: 	jae	.Ltmp4406 # Offset: 13430
    0000347c: 	cvttsd2si	%xmm1, %rax
.Ltmp4634:
    00003481: 	andl	$0x7, %eax
    00003484: 	movdqa	%xmm0, %xmm1
    00003488: 	imulq	$0x1f40, %rax, %rdx
    0000348f: 	psrldq	$0x8, %xmm1
    00003494: 	paddq	%xmm1, %xmm0
    00003498: 	movq	%xmm0, %rax
    0000349d: 	cmpq	%rax, %rdx
    000034a0: 	je	.Ltmp4407 # Offset: 13472
    000034a2: 	movl	current_test(%rip), %edx
    000034a8: 	leaq	DATAat0x571d0(%rip), %rsi
    000034af: 	movl	$0x1, %edi
    000034b4: 	xorl	%eax, %eax
    000034b6: 	callq	__printf_chk@PLT # Offset: 13494
    000034bb: 	movl	iterations(%rip), %ecx
.Ltmp4407:
    000034c1: 	addl	$0x1, 0x1c(%rsp)
    000034c6: 	movl	0x1c(%rsp), %eax
    000034ca: 	cmpl	%ecx, %eax
    000034cc: 	jl	.Ltmp4408 # Offset: 13516
.Ltmp4404:
    000034d2: 	movq	%r12, %rsi
    000034d5: 	movq	%r15, %rdi
    000034d8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13528
    000034dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000034e4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000034eb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000034f2: 	je	.Ltmp4409 # Offset: 13554
.Ltmp4698:
    000034f8: 	movq	-0x20(%rax), %rdi
    000034fc: 	movq	%rdi, (%rsp)
    00003500: 	callq	clock@PLT # Offset: 13568
    00003505: 	movq	(%rsp), %rdi
    00003509: 	pxor	%xmm0, %xmm0
    0000350d: 	movq	%rax, end_time(%rip)
    00003514: 	subq	start_time(%rip), %rax
    0000351b: 	cvtsi2sd	%rax, %xmm0
    00003520: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003528: 	callq	_Z13record_resultdPKc # Offset: 13608
    0000352d: 	movq	0xa0(%rsp), %rdi
    00003535: 	cmpq	%r13, %rdi
    00003538: 	je	.Ltmp4410 # Offset: 13624
    0000353a: 	movq	0xb0(%rsp), %rax
    00003542: 	leaq	0x1(%rax), %rsi
    00003546: 	callq	_ZdlPvm@PLT # Offset: 13638
.Ltmp4410:
    0000354b: 	leaq	DATAat0x576b6(%rip), %rdx
    00003552: 	movq	%r14, %rsi
    00003555: 	movq	%r12, %rdi
    00003558: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13656
    0000355d: 	callq	clock@PLT # Offset: 13661
    00003562: 	movl	iterations(%rip), %ecx
    00003568: 	movq	%rax, start_time(%rip)
    0000356f: 	testl	%ecx, %ecx
    00003571: 	jle	.Ltmp4411 # Offset: 13681
    00003577: 	movdqa	DATAat0x57ca0(%rip), %xmm6
    0000357f: 	movl	$0x0, 0x1c(%rsp)
    00003587: 	movaps	%xmm6, (%rsp)
    0000358b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4415:
    00003590: 	movq	%rbp, %rax
    00003593: 	pxor	%xmm0, %xmm0
    00003597: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4412:
    000035a0: 	movdqa	(%rsp), %xmm1
    000035a5: 	pand	(%rax), %xmm1
    000035a9: 	addq	$0x10, %rax
    000035ad: 	paddq	%xmm1, %xmm0
    000035b1: 	cmpq	%rbx, %rax
    000035b4: 	jne	.Ltmp4412 # Offset: 13748
    000035b6: 	movsd	init_value(%rip), %xmm1
    000035be: 	comisd	DATAat0x57bd8(%rip), %xmm1
    000035c6: 	jae	.Ltmp4413 # Offset: 13766
    000035cc: 	cvttsd2si	%xmm1, %rax
.Ltmp4633:
    000035d1: 	andl	$0xf, %eax
    000035d4: 	movdqa	%xmm0, %xmm1
    000035d8: 	imulq	$0x1f40, %rax, %rdx
    000035df: 	psrldq	$0x8, %xmm1
    000035e4: 	paddq	%xmm1, %xmm0
    000035e8: 	movq	%xmm0, %rax
    000035ed: 	cmpq	%rax, %rdx
    000035f0: 	je	.Ltmp4414 # Offset: 13808
    000035f2: 	movl	current_test(%rip), %edx
    000035f8: 	leaq	DATAat0x571d0(%rip), %rsi
    000035ff: 	movl	$0x1, %edi
    00003604: 	xorl	%eax, %eax
    00003606: 	callq	__printf_chk@PLT # Offset: 13830
    0000360b: 	movl	iterations(%rip), %ecx
.Ltmp4414:
    00003611: 	addl	$0x1, 0x1c(%rsp)
    00003616: 	movl	0x1c(%rsp), %eax
    0000361a: 	cmpl	%ecx, %eax
    0000361c: 	jl	.Ltmp4415 # Offset: 13852
.Ltmp4411:
    00003622: 	movq	%r12, %rsi
    00003625: 	movq	%r15, %rdi
    00003628: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13864
    0000362d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003634: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000363b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003642: 	je	.Ltmp4416 # Offset: 13890
.Ltmp4697:
    00003648: 	movq	-0x20(%rax), %rdi
    0000364c: 	movq	%rdi, (%rsp)
    00003650: 	callq	clock@PLT # Offset: 13904
    00003655: 	movq	(%rsp), %rdi
    00003659: 	pxor	%xmm0, %xmm0
    0000365d: 	movq	%rax, end_time(%rip)
    00003664: 	subq	start_time(%rip), %rax
    0000366b: 	cvtsi2sd	%rax, %xmm0
    00003670: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003678: 	callq	_Z13record_resultdPKc # Offset: 13944
    0000367d: 	movq	0xa0(%rsp), %rdi
    00003685: 	cmpq	%r13, %rdi
    00003688: 	je	.Ltmp4417 # Offset: 13960
    0000368a: 	movq	0xb0(%rsp), %rax
    00003692: 	leaq	0x1(%rax), %rsi
    00003696: 	callq	_ZdlPvm@PLT # Offset: 13974
.Ltmp4417:
    0000369b: 	leaq	DATAat0x576be(%rip), %rdx
    000036a2: 	movq	%r14, %rsi
    000036a5: 	movq	%r12, %rdi
    000036a8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13992
    000036ad: 	callq	clock@PLT # Offset: 13997
    000036b2: 	movl	iterations(%rip), %ecx
    000036b8: 	movq	%rax, start_time(%rip)
    000036bf: 	testl	%ecx, %ecx
    000036c1: 	jle	.Ltmp4418 # Offset: 14017
    000036c7: 	movdqa	DATAat0x57ca0(%rip), %xmm7
    000036cf: 	movl	$0x0, 0x1c(%rsp)
    000036d7: 	movaps	%xmm7, (%rsp)
    000036db: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4422:
    000036e0: 	movq	%rbp, %rax
    000036e3: 	pxor	%xmm0, %xmm0
    000036e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4419:
    000036f0: 	movdqa	(%rsp), %xmm1
    000036f5: 	pand	(%rax), %xmm1
    000036f9: 	addq	$0x10, %rax
    000036fd: 	paddq	%xmm1, %xmm0
    00003701: 	cmpq	%rax, %rbx
    00003704: 	jne	.Ltmp4419 # Offset: 14084
    00003706: 	movsd	init_value(%rip), %xmm1
    0000370e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00003716: 	jae	.Ltmp4420 # Offset: 14102
    0000371c: 	cvttsd2si	%xmm1, %rax
.Ltmp4632:
    00003721: 	andl	$0xf, %eax
    00003724: 	movdqa	%xmm0, %xmm1
    00003728: 	imulq	$0x1f40, %rax, %rdx
    0000372f: 	psrldq	$0x8, %xmm1
    00003734: 	paddq	%xmm1, %xmm0
    00003738: 	movq	%xmm0, %rax
    0000373d: 	cmpq	%rax, %rdx
    00003740: 	je	.Ltmp4421 # Offset: 14144
    00003742: 	movl	current_test(%rip), %edx
    00003748: 	leaq	DATAat0x571d0(%rip), %rsi
    0000374f: 	movl	$0x1, %edi
    00003754: 	xorl	%eax, %eax
    00003756: 	callq	__printf_chk@PLT # Offset: 14166
    0000375b: 	movl	iterations(%rip), %ecx
.Ltmp4421:
    00003761: 	addl	$0x1, 0x1c(%rsp)
    00003766: 	movl	0x1c(%rsp), %eax
    0000376a: 	cmpl	%ecx, %eax
    0000376c: 	jl	.Ltmp4422 # Offset: 14188
.Ltmp4418:
    00003772: 	movq	%r12, %rsi
    00003775: 	movq	%r15, %rdi
    00003778: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14200
    0000377d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003784: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000378b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003792: 	je	.Ltmp4423 # Offset: 14226
.Ltmp4696:
    00003798: 	movq	-0x20(%rax), %rdi
    0000379c: 	movq	%rdi, (%rsp)
    000037a0: 	callq	clock@PLT # Offset: 14240
    000037a5: 	movq	(%rsp), %rdi
    000037a9: 	pxor	%xmm0, %xmm0
    000037ad: 	movq	%rax, end_time(%rip)
    000037b4: 	subq	start_time(%rip), %rax
    000037bb: 	cvtsi2sd	%rax, %xmm0
    000037c0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000037c8: 	callq	_Z13record_resultdPKc # Offset: 14280
    000037cd: 	movq	0xa0(%rsp), %rdi
    000037d5: 	cmpq	%r13, %rdi
    000037d8: 	je	.Ltmp4424 # Offset: 14296
    000037da: 	movq	0xb0(%rsp), %rax
    000037e2: 	leaq	0x1(%rax), %rsi
    000037e6: 	callq	_ZdlPvm@PLT # Offset: 14310
.Ltmp4424:
    000037eb: 	leaq	DATAat0x576d0(%rip), %rdx
    000037f2: 	movq	%r14, %rsi
    000037f5: 	movq	%r12, %rdi
    000037f8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14328
    000037fd: 	callq	clock@PLT # Offset: 14333
    00003802: 	movl	iterations(%rip), %ecx
    00003808: 	movq	%rax, start_time(%rip)
    0000380f: 	testl	%ecx, %ecx
    00003811: 	jle	.Ltmp4425 # Offset: 14353
    00003817: 	movdqa	DATAat0x57ca0(%rip), %xmm2
    0000381f: 	movl	$0x0, 0x1c(%rsp)
    00003827: 	movaps	%xmm2, (%rsp)
    0000382b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4429:
    00003830: 	movq	%rbp, %rax
    00003833: 	pxor	%xmm0, %xmm0
    00003837: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4426:
    00003840: 	movdqa	(%rsp), %xmm1
    00003845: 	pand	(%rax), %xmm1
    00003849: 	addq	$0x10, %rax
    0000384d: 	paddq	%xmm1, %xmm0
    00003851: 	cmpq	%rbx, %rax
    00003854: 	jne	.Ltmp4426 # Offset: 14420
    00003856: 	movsd	init_value(%rip), %xmm1
    0000385e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00003866: 	jae	.Ltmp4427 # Offset: 14438
    0000386c: 	cvttsd2si	%xmm1, %rax
.Ltmp4631:
    00003871: 	andl	$0xf, %eax
    00003874: 	movdqa	%xmm0, %xmm1
    00003878: 	imulq	$0x1f40, %rax, %rdx
    0000387f: 	psrldq	$0x8, %xmm1
    00003884: 	paddq	%xmm1, %xmm0
    00003888: 	movq	%xmm0, %rax
    0000388d: 	cmpq	%rax, %rdx
    00003890: 	je	.Ltmp4428 # Offset: 14480
    00003892: 	movl	current_test(%rip), %edx
    00003898: 	leaq	DATAat0x571d0(%rip), %rsi
    0000389f: 	movl	$0x1, %edi
    000038a4: 	xorl	%eax, %eax
    000038a6: 	callq	__printf_chk@PLT # Offset: 14502
    000038ab: 	movl	iterations(%rip), %ecx
.Ltmp4428:
    000038b1: 	addl	$0x1, 0x1c(%rsp)
    000038b6: 	movl	0x1c(%rsp), %eax
    000038ba: 	cmpl	%ecx, %eax
    000038bc: 	jl	.Ltmp4429 # Offset: 14524
.Ltmp4425:
    000038c2: 	movq	%r12, %rsi
    000038c5: 	movq	%r15, %rdi
    000038c8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14536
    000038cd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000038d4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000038db: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000038e2: 	je	.Ltmp4430 # Offset: 14562
.Ltmp4695:
    000038e8: 	movq	-0x20(%rax), %rdi
    000038ec: 	movq	%rdi, (%rsp)
    000038f0: 	callq	clock@PLT # Offset: 14576
    000038f5: 	movq	(%rsp), %rdi
    000038f9: 	pxor	%xmm0, %xmm0
    000038fd: 	movq	%rax, end_time(%rip)
    00003904: 	subq	start_time(%rip), %rax
    0000390b: 	cvtsi2sd	%rax, %xmm0
    00003910: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003918: 	callq	_Z13record_resultdPKc # Offset: 14616
    0000391d: 	movq	0xa0(%rsp), %rdi
    00003925: 	cmpq	%r13, %rdi
    00003928: 	je	.Ltmp4431 # Offset: 14632
    0000392a: 	movq	0xb0(%rsp), %rax
    00003932: 	leaq	0x1(%rax), %rsi
    00003936: 	callq	_ZdlPvm@PLT # Offset: 14646
.Ltmp4431:
    0000393b: 	leaq	DATAat0x576e3(%rip), %rdx
    00003942: 	movq	%r14, %rsi
    00003945: 	movq	%r12, %rdi
    00003948: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14664
    0000394d: 	callq	clock@PLT # Offset: 14669
    00003952: 	movl	iterations(%rip), %ecx
    00003958: 	movq	%rax, start_time(%rip)
    0000395f: 	testl	%ecx, %ecx
    00003961: 	jle	.Ltmp4432 # Offset: 14689
    00003967: 	movdqa	DATAat0x57ca0(%rip), %xmm3
    0000396f: 	movl	$0x0, 0x1c(%rsp)
    00003977: 	movaps	%xmm3, (%rsp)
    0000397b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4436:
    00003980: 	movq	%rbp, %rax
    00003983: 	pxor	%xmm0, %xmm0
    00003987: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4433:
    00003990: 	movdqa	(%rsp), %xmm1
    00003995: 	pand	(%rax), %xmm1
    00003999: 	addq	$0x10, %rax
    0000399d: 	paddq	%xmm1, %xmm0
    000039a1: 	cmpq	%rax, %rbx
    000039a4: 	jne	.Ltmp4433 # Offset: 14756
    000039a6: 	movsd	init_value(%rip), %xmm1
    000039ae: 	comisd	DATAat0x57bd8(%rip), %xmm1
    000039b6: 	jae	.Ltmp4434 # Offset: 14774
    000039bc: 	cvttsd2si	%xmm1, %rax
.Ltmp4630:
    000039c1: 	andl	$0xf, %eax
    000039c4: 	movdqa	%xmm0, %xmm1
    000039c8: 	imulq	$0x1f40, %rax, %rdx
    000039cf: 	psrldq	$0x8, %xmm1
    000039d4: 	paddq	%xmm1, %xmm0
    000039d8: 	movq	%xmm0, %rax
    000039dd: 	cmpq	%rax, %rdx
    000039e0: 	je	.Ltmp4435 # Offset: 14816
    000039e2: 	movl	current_test(%rip), %edx
    000039e8: 	leaq	DATAat0x571d0(%rip), %rsi
    000039ef: 	movl	$0x1, %edi
    000039f4: 	xorl	%eax, %eax
    000039f6: 	callq	__printf_chk@PLT # Offset: 14838
    000039fb: 	movl	iterations(%rip), %ecx
.Ltmp4435:
    00003a01: 	addl	$0x1, 0x1c(%rsp)
    00003a06: 	movl	0x1c(%rsp), %eax
    00003a0a: 	cmpl	%ecx, %eax
    00003a0c: 	jl	.Ltmp4436 # Offset: 14860
.Ltmp4432:
    00003a12: 	movq	%r12, %rsi
    00003a15: 	movq	%r15, %rdi
    00003a18: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14872
    00003a1d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003a24: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003a2b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003a32: 	je	.Ltmp4437 # Offset: 14898
.Ltmp4694:
    00003a38: 	movq	-0x20(%rax), %rdi
    00003a3c: 	movq	%rdi, (%rsp)
    00003a40: 	callq	clock@PLT # Offset: 14912
    00003a45: 	movq	(%rsp), %rdi
    00003a49: 	pxor	%xmm0, %xmm0
    00003a4d: 	movq	%rax, end_time(%rip)
    00003a54: 	subq	start_time(%rip), %rax
    00003a5b: 	cvtsi2sd	%rax, %xmm0
    00003a60: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003a68: 	callq	_Z13record_resultdPKc # Offset: 14952
    00003a6d: 	movq	0xa0(%rsp), %rdi
    00003a75: 	cmpq	%r13, %rdi
    00003a78: 	je	.Ltmp4438 # Offset: 14968
    00003a7a: 	movq	0xb0(%rsp), %rax
    00003a82: 	leaq	0x1(%rax), %rsi
    00003a86: 	callq	_ZdlPvm@PLT # Offset: 14982
.Ltmp4438:
    00003a8b: 	leaq	DATAat0x576fb(%rip), %rdx
    00003a92: 	movq	%r14, %rsi
    00003a95: 	movq	%r12, %rdi
    00003a98: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15000
    00003a9d: 	movq	%r12, %rcx
    00003aa0: 	movl	$0x10, %edx
    00003aa5: 	movl	$0x1f40, %esi
    00003aaa: 	movq	%rbp, %rdi
    00003aad: 	callq	_Z14test_variable1Im25custom_remainder_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 15021
    00003ab2: 	movq	0xa0(%rsp), %rdi
    00003aba: 	cmpq	%r13, %rdi
    00003abd: 	je	.Ltmp4439 # Offset: 15037
    00003abf: 	movq	0xb0(%rsp), %rax
    00003ac7: 	leaq	0x1(%rax), %rsi
    00003acb: 	callq	_ZdlPvm@PLT # Offset: 15051
.Ltmp4439:
    00003ad0: 	leaq	DATAat0x57715(%rip), %rdx
    00003ad7: 	movq	%r14, %rsi
    00003ada: 	movq	%r12, %rdi
    00003add: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15069
    00003ae2: 	movq	%r12, %rdx
    00003ae5: 	movl	$0x1f40, %esi
    00003aea: 	movq	%rbp, %rdi
    00003aed: 	callq	_Z13test_constantIm16custom_remainderImLi16EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 15085
    00003af2: 	movq	0xa0(%rsp), %rdi
    00003afa: 	cmpq	%r13, %rdi
    00003afd: 	je	.Ltmp4440 # Offset: 15101
    00003aff: 	movq	0xb0(%rsp), %rax
    00003b07: 	leaq	0x1(%rax), %rsi
    00003b0b: 	callq	_ZdlPvm@PLT # Offset: 15115
.Ltmp4440:
    00003b10: 	leaq	DATAat0x5772f(%rip), %rdx
    00003b17: 	movq	%r14, %rsi
    00003b1a: 	movq	%r12, %rdi
    00003b1d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15133
    00003b22: 	callq	clock@PLT # Offset: 15138
    00003b27: 	movl	iterations(%rip), %ecx
    00003b2d: 	movq	%rax, start_time(%rip)
    00003b34: 	testl	%ecx, %ecx
    00003b36: 	jle	.Ltmp4441 # Offset: 15158
    00003b3c: 	movdqa	DATAat0x57c60(%rip), %xmm4
    00003b44: 	movl	$0x0, 0x1c(%rsp)
    00003b4c: 	movaps	%xmm4, (%rsp)
.Ltmp4445:
    00003b50: 	movq	%rbp, %rax
    00003b53: 	pxor	%xmm0, %xmm0
    00003b57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4442:
    00003b60: 	movdqa	(%rsp), %xmm1
    00003b65: 	pand	(%rax), %xmm1
    00003b69: 	addq	$0x10, %rax
    00003b6d: 	paddq	%xmm1, %xmm0
    00003b71: 	cmpq	%rbx, %rax
    00003b74: 	jne	.Ltmp4442 # Offset: 15220
    00003b76: 	movsd	init_value(%rip), %xmm1
    00003b7e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00003b86: 	jae	.Ltmp4443 # Offset: 15238
    00003b8c: 	cvttsd2si	%xmm1, %rax
.Ltmp4629:
    00003b91: 	andl	$0x1f, %eax
    00003b94: 	movdqa	%xmm0, %xmm1
    00003b98: 	imulq	$0x1f40, %rax, %rdx
    00003b9f: 	psrldq	$0x8, %xmm1
    00003ba4: 	paddq	%xmm1, %xmm0
    00003ba8: 	movq	%xmm0, %rax
    00003bad: 	cmpq	%rax, %rdx
    00003bb0: 	je	.Ltmp4444 # Offset: 15280
    00003bb2: 	movl	current_test(%rip), %edx
    00003bb8: 	leaq	DATAat0x571d0(%rip), %rsi
    00003bbf: 	movl	$0x1, %edi
    00003bc4: 	xorl	%eax, %eax
    00003bc6: 	callq	__printf_chk@PLT # Offset: 15302
    00003bcb: 	movl	iterations(%rip), %ecx
.Ltmp4444:
    00003bd1: 	addl	$0x1, 0x1c(%rsp)
    00003bd6: 	movl	0x1c(%rsp), %eax
    00003bda: 	cmpl	%ecx, %eax
    00003bdc: 	jl	.Ltmp4445 # Offset: 15324
.Ltmp4441:
    00003be2: 	movq	%r12, %rsi
    00003be5: 	movq	%r15, %rdi
    00003be8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15336
    00003bed: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003bf4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003bfb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003c02: 	je	.Ltmp4446 # Offset: 15362
.Ltmp4693:
    00003c08: 	movq	-0x20(%rax), %rdi
    00003c0c: 	movq	%rdi, (%rsp)
    00003c10: 	callq	clock@PLT # Offset: 15376
    00003c15: 	movq	(%rsp), %rdi
    00003c19: 	pxor	%xmm0, %xmm0
    00003c1d: 	movq	%rax, end_time(%rip)
    00003c24: 	subq	start_time(%rip), %rax
    00003c2b: 	cvtsi2sd	%rax, %xmm0
    00003c30: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003c38: 	callq	_Z13record_resultdPKc # Offset: 15416
    00003c3d: 	movq	0xa0(%rsp), %rdi
    00003c45: 	cmpq	%r13, %rdi
    00003c48: 	je	.Ltmp4447 # Offset: 15432
    00003c4a: 	movq	0xb0(%rsp), %rax
    00003c52: 	leaq	0x1(%rax), %rsi
    00003c56: 	callq	_ZdlPvm@PLT # Offset: 15446
.Ltmp4447:
    00003c5b: 	leaq	DATAat0x57737(%rip), %rdx
    00003c62: 	movq	%r14, %rsi
    00003c65: 	movq	%r12, %rdi
    00003c68: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15464
    00003c6d: 	movq	%r12, %rdx
    00003c70: 	movl	$0x1f40, %esi
    00003c75: 	movq	%rbp, %rdi
    00003c78: 	callq	_Z13test_constantIm13and_remainderImLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 15480
    00003c7d: 	movq	0xa0(%rsp), %rdi
    00003c85: 	cmpq	%r13, %rdi
    00003c88: 	je	.Ltmp4448 # Offset: 15496
    00003c8a: 	movq	0xb0(%rsp), %rax
    00003c92: 	leaq	0x1(%rax), %rsi
    00003c96: 	callq	_ZdlPvm@PLT # Offset: 15510
.Ltmp4448:
    00003c9b: 	leaq	DATAat0x57749(%rip), %rdx
    00003ca2: 	movq	%r14, %rsi
    00003ca5: 	movq	%r12, %rdi
    00003ca8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15528
    00003cad: 	callq	clock@PLT # Offset: 15533
    00003cb2: 	movl	iterations(%rip), %ecx
    00003cb8: 	movq	%rax, start_time(%rip)
    00003cbf: 	testl	%ecx, %ecx
    00003cc1: 	jle	.Ltmp4449 # Offset: 15553
    00003cc7: 	movdqa	DATAat0x57c60(%rip), %xmm5
    00003ccf: 	movl	$0x0, 0x1c(%rsp)
    00003cd7: 	movaps	%xmm5, (%rsp)
    00003cdb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4453:
    00003ce0: 	movq	%rbp, %rax
    00003ce3: 	pxor	%xmm0, %xmm0
    00003ce7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4450:
    00003cf0: 	movdqa	(%rsp), %xmm1
    00003cf5: 	pand	(%rax), %xmm1
    00003cf9: 	addq	$0x10, %rax
    00003cfd: 	paddq	%xmm1, %xmm0
    00003d01: 	cmpq	%rax, %rbx
    00003d04: 	jne	.Ltmp4450 # Offset: 15620
    00003d06: 	movsd	init_value(%rip), %xmm1
    00003d0e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00003d16: 	jae	.Ltmp4451 # Offset: 15638
    00003d1c: 	cvttsd2si	%xmm1, %rax
.Ltmp4628:
    00003d21: 	andl	$0x1f, %eax
    00003d24: 	movdqa	%xmm0, %xmm1
    00003d28: 	imulq	$0x1f40, %rax, %rdx
    00003d2f: 	psrldq	$0x8, %xmm1
    00003d34: 	paddq	%xmm1, %xmm0
    00003d38: 	movq	%xmm0, %rax
    00003d3d: 	cmpq	%rax, %rdx
    00003d40: 	je	.Ltmp4452 # Offset: 15680
    00003d42: 	movl	current_test(%rip), %edx
    00003d48: 	leaq	DATAat0x571d0(%rip), %rsi
    00003d4f: 	movl	$0x1, %edi
    00003d54: 	xorl	%eax, %eax
    00003d56: 	callq	__printf_chk@PLT # Offset: 15702
    00003d5b: 	movl	iterations(%rip), %ecx
.Ltmp4452:
    00003d61: 	addl	$0x1, 0x1c(%rsp)
    00003d66: 	movl	0x1c(%rsp), %eax
    00003d6a: 	cmpl	%ecx, %eax
    00003d6c: 	jl	.Ltmp4453 # Offset: 15724
.Ltmp4449:
    00003d72: 	movq	%r12, %rsi
    00003d75: 	movq	%r15, %rdi
    00003d78: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15736
    00003d7d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003d84: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003d8b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003d92: 	je	.Ltmp4454 # Offset: 15762
.Ltmp4692:
    00003d98: 	movq	-0x20(%rax), %rdi
    00003d9c: 	movq	%rdi, (%rsp)
    00003da0: 	callq	clock@PLT # Offset: 15776
    00003da5: 	movq	(%rsp), %rdi
    00003da9: 	pxor	%xmm0, %xmm0
    00003dad: 	movq	%rax, end_time(%rip)
    00003db4: 	subq	start_time(%rip), %rax
    00003dbb: 	cvtsi2sd	%rax, %xmm0
    00003dc0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003dc8: 	callq	_Z13record_resultdPKc # Offset: 15816
    00003dcd: 	movq	0xa0(%rsp), %rdi
    00003dd5: 	cmpq	%r13, %rdi
    00003dd8: 	je	.Ltmp4455 # Offset: 15832
    00003dda: 	movq	0xb0(%rsp), %rax
    00003de2: 	leaq	0x1(%rax), %rsi
    00003de6: 	callq	_ZdlPvm@PLT # Offset: 15846
.Ltmp4455:
    00003deb: 	leaq	DATAat0x5775c(%rip), %rdx
    00003df2: 	movq	%r14, %rsi
    00003df5: 	movq	%r12, %rdi
    00003df8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15864
    00003dfd: 	movq	%r12, %rdx
    00003e00: 	movl	$0x1f40, %esi
    00003e05: 	movq	%rbp, %rdi
    00003e08: 	callq	_Z13test_constantIm25custom_remainder_inline32ImEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 15880
    00003e0d: 	movq	0xa0(%rsp), %rdi
    00003e15: 	cmpq	%r13, %rdi
    00003e18: 	je	.Ltmp4456 # Offset: 15896
    00003e1a: 	movq	0xb0(%rsp), %rax
    00003e22: 	leaq	0x1(%rax), %rsi
    00003e26: 	callq	_ZdlPvm@PLT # Offset: 15910
.Ltmp4456:
    00003e2b: 	leaq	DATAat0x57774(%rip), %rdx
    00003e32: 	movq	%r14, %rsi
    00003e35: 	movq	%r12, %rdi
    00003e38: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15928
    00003e3d: 	movq	%r12, %rcx
    00003e40: 	movl	$0x20, %edx
    00003e45: 	movl	$0x1f40, %esi
    00003e4a: 	movq	%rbp, %rdi
    00003e4d: 	callq	_Z14test_variable1Im25custom_remainder_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 15949
    00003e52: 	movq	0xa0(%rsp), %rdi
    00003e5a: 	cmpq	%r13, %rdi
    00003e5d: 	je	.Ltmp4457 # Offset: 15965
    00003e5f: 	movq	0xb0(%rsp), %rax
    00003e67: 	leaq	0x1(%rax), %rsi
    00003e6b: 	callq	_ZdlPvm@PLT # Offset: 15979
.Ltmp4457:
    00003e70: 	leaq	DATAat0x5778e(%rip), %rdx
    00003e77: 	movq	%r14, %rsi
    00003e7a: 	movq	%r12, %rdi
    00003e7d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15997
    00003e82: 	callq	clock@PLT # Offset: 16002
    00003e87: 	movl	iterations(%rip), %ecx
    00003e8d: 	movq	%rax, start_time(%rip)
    00003e94: 	testl	%ecx, %ecx
    00003e96: 	jle	.Ltmp4458 # Offset: 16022
    00003e9c: 	movdqa	DATAat0x57c60(%rip), %xmm6
    00003ea4: 	movl	$0x0, 0x1c(%rsp)
    00003eac: 	movaps	%xmm6, (%rsp)
.Ltmp4462:
    00003eb0: 	movq	%rbp, %rax
    00003eb3: 	pxor	%xmm0, %xmm0
    00003eb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4459:
    00003ec0: 	movdqa	(%rsp), %xmm1
    00003ec5: 	pand	(%rax), %xmm1
    00003ec9: 	addq	$0x10, %rax
    00003ecd: 	paddq	%xmm1, %xmm0
    00003ed1: 	cmpq	%rbx, %rax
    00003ed4: 	jne	.Ltmp4459 # Offset: 16084
    00003ed6: 	movsd	init_value(%rip), %xmm1
    00003ede: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00003ee6: 	jae	.Ltmp4460 # Offset: 16102
    00003eec: 	cvttsd2si	%xmm1, %rax
.Ltmp4627:
    00003ef1: 	andl	$0x1f, %eax
    00003ef4: 	movdqa	%xmm0, %xmm1
    00003ef8: 	imulq	$0x1f40, %rax, %rdx
    00003eff: 	psrldq	$0x8, %xmm1
    00003f04: 	paddq	%xmm1, %xmm0
    00003f08: 	movq	%xmm0, %rax
    00003f0d: 	cmpq	%rax, %rdx
    00003f10: 	je	.Ltmp4461 # Offset: 16144
    00003f12: 	movl	current_test(%rip), %edx
    00003f18: 	leaq	DATAat0x571d0(%rip), %rsi
    00003f1f: 	movl	$0x1, %edi
    00003f24: 	xorl	%eax, %eax
    00003f26: 	callq	__printf_chk@PLT # Offset: 16166
    00003f2b: 	movl	iterations(%rip), %ecx
.Ltmp4461:
    00003f31: 	addl	$0x1, 0x1c(%rsp)
    00003f36: 	movl	0x1c(%rsp), %eax
    00003f3a: 	cmpl	%ecx, %eax
    00003f3c: 	jl	.Ltmp4462 # Offset: 16188
.Ltmp4458:
    00003f42: 	movq	%r12, %rsi
    00003f45: 	movq	%r15, %rdi
    00003f48: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16200
    00003f4d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003f54: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003f5b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003f62: 	je	.Ltmp4463 # Offset: 16226
.Ltmp4691:
    00003f68: 	movq	-0x20(%rax), %rdi
    00003f6c: 	movq	%rdi, (%rsp)
    00003f70: 	callq	clock@PLT # Offset: 16240
    00003f75: 	movq	(%rsp), %rdi
    00003f79: 	pxor	%xmm0, %xmm0
    00003f7d: 	movq	%rax, end_time(%rip)
    00003f84: 	subq	start_time(%rip), %rax
    00003f8b: 	cvtsi2sd	%rax, %xmm0
    00003f90: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003f98: 	callq	_Z13record_resultdPKc # Offset: 16280
    00003f9d: 	movq	0xa0(%rsp), %rdi
    00003fa5: 	cmpq	%r13, %rdi
    00003fa8: 	je	.Ltmp4464 # Offset: 16296
    00003faa: 	movq	0xb0(%rsp), %rax
    00003fb2: 	leaq	0x1(%rax), %rsi
    00003fb6: 	callq	_ZdlPvm@PLT # Offset: 16310
.Ltmp4464:
    00003fbb: 	leaq	DATAat0x577a8(%rip), %rdx
    00003fc2: 	movq	%r14, %rsi
    00003fc5: 	movq	%r12, %rdi
    00003fc8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16328
    00003fcd: 	callq	clock@PLT # Offset: 16333
    00003fd2: 	movl	iterations(%rip), %ecx
    00003fd8: 	movq	%rax, start_time(%rip)
    00003fdf: 	testl	%ecx, %ecx
    00003fe1: 	jle	.Ltmp4465 # Offset: 16353
    00003fe7: 	movdqa	DATAat0x57f60(%rip), %xmm7
    00003fef: 	movl	$0x0, 0x1c(%rsp)
    00003ff7: 	movaps	%xmm7, (%rsp)
    00003ffb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4469:
    00004000: 	movq	%rbp, %rax
    00004003: 	pxor	%xmm0, %xmm0
    00004007: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4466:
    00004010: 	movdqa	(%rsp), %xmm1
    00004015: 	pand	(%rax), %xmm1
    00004019: 	addq	$0x10, %rax
    0000401d: 	paddq	%xmm1, %xmm0
    00004021: 	cmpq	%rax, %rbx
    00004024: 	jne	.Ltmp4466 # Offset: 16420
    00004026: 	movsd	init_value(%rip), %xmm1
    0000402e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00004036: 	jae	.Ltmp4467 # Offset: 16438
    0000403c: 	cvttsd2si	%xmm1, %rax
.Ltmp4626:
    00004041: 	andl	$0x3f, %eax
    00004044: 	movdqa	%xmm0, %xmm1
    00004048: 	imulq	$0x1f40, %rax, %rdx
    0000404f: 	psrldq	$0x8, %xmm1
    00004054: 	paddq	%xmm1, %xmm0
    00004058: 	movq	%xmm0, %rax
    0000405d: 	cmpq	%rax, %rdx
    00004060: 	je	.Ltmp4468 # Offset: 16480
    00004062: 	movl	current_test(%rip), %edx
    00004068: 	leaq	DATAat0x571d0(%rip), %rsi
    0000406f: 	movl	$0x1, %edi
    00004074: 	xorl	%eax, %eax
    00004076: 	callq	__printf_chk@PLT # Offset: 16502
    0000407b: 	movl	iterations(%rip), %ecx
.Ltmp4468:
    00004081: 	addl	$0x1, 0x1c(%rsp)
    00004086: 	movl	0x1c(%rsp), %eax
    0000408a: 	cmpl	%ecx, %eax
    0000408c: 	jl	.Ltmp4469 # Offset: 16524
.Ltmp4465:
    00004092: 	movq	%r12, %rsi
    00004095: 	movq	%r15, %rdi
    00004098: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16536
    0000409d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000040a4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000040ab: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000040b2: 	je	.Ltmp4470 # Offset: 16562
.Ltmp4690:
    000040b8: 	movq	-0x20(%rax), %rdi
    000040bc: 	movq	%rdi, (%rsp)
    000040c0: 	callq	clock@PLT # Offset: 16576
    000040c5: 	movq	(%rsp), %rdi
    000040c9: 	pxor	%xmm0, %xmm0
    000040cd: 	movq	%rax, end_time(%rip)
    000040d4: 	subq	start_time(%rip), %rax
    000040db: 	cvtsi2sd	%rax, %xmm0
    000040e0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000040e8: 	callq	_Z13record_resultdPKc # Offset: 16616
    000040ed: 	movq	0xa0(%rsp), %rdi
    000040f5: 	cmpq	%r13, %rdi
    000040f8: 	je	.Ltmp4471 # Offset: 16632
    000040fa: 	movq	0xb0(%rsp), %rax
    00004102: 	leaq	0x1(%rax), %rsi
    00004106: 	callq	_ZdlPvm@PLT # Offset: 16646
.Ltmp4471:
    0000410b: 	leaq	DATAat0x577b0(%rip), %rdx
    00004112: 	movq	%r14, %rsi
    00004115: 	movq	%r12, %rdi
    00004118: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16664
    0000411d: 	callq	clock@PLT # Offset: 16669
    00004122: 	movl	iterations(%rip), %ecx
    00004128: 	movq	%rax, start_time(%rip)
    0000412f: 	testl	%ecx, %ecx
    00004131: 	jle	.Ltmp4472 # Offset: 16689
    00004137: 	movdqa	DATAat0x57f60(%rip), %xmm2
    0000413f: 	movl	$0x0, 0x1c(%rsp)
    00004147: 	movaps	%xmm2, (%rsp)
    0000414b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4476:
    00004150: 	movq	%rbp, %rax
    00004153: 	pxor	%xmm0, %xmm0
    00004157: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4473:
    00004160: 	movdqa	(%rsp), %xmm1
    00004165: 	pand	(%rax), %xmm1
    00004169: 	addq	$0x10, %rax
    0000416d: 	paddq	%xmm1, %xmm0
    00004171: 	cmpq	%rbx, %rax
    00004174: 	jne	.Ltmp4473 # Offset: 16756
    00004176: 	movsd	init_value(%rip), %xmm1
    0000417e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00004186: 	jae	.Ltmp4474 # Offset: 16774
    0000418c: 	cvttsd2si	%xmm1, %rax
.Ltmp4625:
    00004191: 	andl	$0x3f, %eax
    00004194: 	movdqa	%xmm0, %xmm1
    00004198: 	imulq	$0x1f40, %rax, %rdx
    0000419f: 	psrldq	$0x8, %xmm1
    000041a4: 	paddq	%xmm1, %xmm0
    000041a8: 	movq	%xmm0, %rax
    000041ad: 	cmpq	%rax, %rdx
    000041b0: 	je	.Ltmp4475 # Offset: 16816
    000041b2: 	movl	current_test(%rip), %edx
    000041b8: 	leaq	DATAat0x571d0(%rip), %rsi
    000041bf: 	movl	$0x1, %edi
    000041c4: 	xorl	%eax, %eax
    000041c6: 	callq	__printf_chk@PLT # Offset: 16838
    000041cb: 	movl	iterations(%rip), %ecx
.Ltmp4475:
    000041d1: 	addl	$0x1, 0x1c(%rsp)
    000041d6: 	movl	0x1c(%rsp), %eax
    000041da: 	cmpl	%ecx, %eax
    000041dc: 	jl	.Ltmp4476 # Offset: 16860
.Ltmp4472:
    000041e2: 	movq	%r12, %rsi
    000041e5: 	movq	%r15, %rdi
    000041e8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16872
    000041ed: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000041f4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000041fb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004202: 	je	.Ltmp4477 # Offset: 16898
.Ltmp4689:
    00004208: 	movq	-0x20(%rax), %rdi
    0000420c: 	movq	%rdi, (%rsp)
    00004210: 	callq	clock@PLT # Offset: 16912
    00004215: 	movq	(%rsp), %rdi
    00004219: 	pxor	%xmm0, %xmm0
    0000421d: 	movq	%rax, end_time(%rip)
    00004224: 	subq	start_time(%rip), %rax
    0000422b: 	cvtsi2sd	%rax, %xmm0
    00004230: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004238: 	callq	_Z13record_resultdPKc # Offset: 16952
    0000423d: 	movq	0xa0(%rsp), %rdi
    00004245: 	cmpq	%r13, %rdi
    00004248: 	je	.Ltmp4478 # Offset: 16968
    0000424a: 	movq	0xb0(%rsp), %rax
    00004252: 	leaq	0x1(%rax), %rsi
    00004256: 	callq	_ZdlPvm@PLT # Offset: 16982
.Ltmp4478:
    0000425b: 	leaq	DATAat0x577c2(%rip), %rdx
    00004262: 	movq	%r14, %rsi
    00004265: 	movq	%r12, %rdi
    00004268: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17000
    0000426d: 	callq	clock@PLT # Offset: 17005
    00004272: 	movl	iterations(%rip), %ecx
    00004278: 	movq	%rax, start_time(%rip)
    0000427f: 	testl	%ecx, %ecx
    00004281: 	jle	.Ltmp4479 # Offset: 17025
    00004287: 	movdqa	DATAat0x57f60(%rip), %xmm3
    0000428f: 	movl	$0x0, 0x1c(%rsp)
    00004297: 	movaps	%xmm3, (%rsp)
    0000429b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4483:
    000042a0: 	movq	%rbp, %rax
    000042a3: 	pxor	%xmm0, %xmm0
    000042a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4480:
    000042b0: 	movdqa	(%rsp), %xmm1
    000042b5: 	pand	(%rax), %xmm1
    000042b9: 	addq	$0x10, %rax
    000042bd: 	paddq	%xmm1, %xmm0
    000042c1: 	cmpq	%rax, %rbx
    000042c4: 	jne	.Ltmp4480 # Offset: 17092
    000042c6: 	movsd	init_value(%rip), %xmm1
    000042ce: 	comisd	DATAat0x57bd8(%rip), %xmm1
    000042d6: 	jae	.Ltmp4481 # Offset: 17110
    000042dc: 	cvttsd2si	%xmm1, %rax
.Ltmp4624:
    000042e1: 	andl	$0x3f, %eax
    000042e4: 	movdqa	%xmm0, %xmm1
    000042e8: 	imulq	$0x1f40, %rax, %rdx
    000042ef: 	psrldq	$0x8, %xmm1
    000042f4: 	paddq	%xmm1, %xmm0
    000042f8: 	movq	%xmm0, %rax
    000042fd: 	cmpq	%rax, %rdx
    00004300: 	je	.Ltmp4482 # Offset: 17152
    00004302: 	movl	current_test(%rip), %edx
    00004308: 	leaq	DATAat0x571d0(%rip), %rsi
    0000430f: 	movl	$0x1, %edi
    00004314: 	xorl	%eax, %eax
    00004316: 	callq	__printf_chk@PLT # Offset: 17174
    0000431b: 	movl	iterations(%rip), %ecx
.Ltmp4482:
    00004321: 	addl	$0x1, 0x1c(%rsp)
    00004326: 	movl	0x1c(%rsp), %eax
    0000432a: 	cmpl	%ecx, %eax
    0000432c: 	jl	.Ltmp4483 # Offset: 17196
.Ltmp4479:
    00004332: 	movq	%r12, %rsi
    00004335: 	movq	%r15, %rdi
    00004338: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17208
    0000433d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004344: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000434b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004352: 	je	.Ltmp4484 # Offset: 17234
.Ltmp4688:
    00004358: 	movq	-0x20(%rax), %rdi
    0000435c: 	movq	%rdi, (%rsp)
    00004360: 	callq	clock@PLT # Offset: 17248
    00004365: 	movq	(%rsp), %rdi
    00004369: 	pxor	%xmm0, %xmm0
    0000436d: 	movq	%rax, end_time(%rip)
    00004374: 	subq	start_time(%rip), %rax
    0000437b: 	cvtsi2sd	%rax, %xmm0
    00004380: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004388: 	callq	_Z13record_resultdPKc # Offset: 17288
    0000438d: 	movq	0xa0(%rsp), %rdi
    00004395: 	cmpq	%r13, %rdi
    00004398: 	je	.Ltmp4485 # Offset: 17304
    0000439a: 	movq	0xb0(%rsp), %rax
    000043a2: 	leaq	0x1(%rax), %rsi
    000043a6: 	callq	_ZdlPvm@PLT # Offset: 17318
.Ltmp4485:
    000043ab: 	leaq	DATAat0x577d5(%rip), %rdx
    000043b2: 	movq	%r14, %rsi
    000043b5: 	movq	%r12, %rdi
    000043b8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17336
    000043bd: 	callq	clock@PLT # Offset: 17341
    000043c2: 	movl	iterations(%rip), %ecx
    000043c8: 	movq	%rax, start_time(%rip)
    000043cf: 	testl	%ecx, %ecx
    000043d1: 	jle	.Ltmp4486 # Offset: 17361
    000043d7: 	movdqa	DATAat0x57f60(%rip), %xmm4
    000043df: 	movl	$0x0, 0x1c(%rsp)
    000043e7: 	movaps	%xmm4, (%rsp)
    000043eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4490:
    000043f0: 	movq	%rbp, %rax
    000043f3: 	pxor	%xmm0, %xmm0
    000043f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4487:
    00004400: 	movdqa	(%rsp), %xmm1
    00004405: 	pand	(%rax), %xmm1
    00004409: 	addq	$0x10, %rax
    0000440d: 	paddq	%xmm1, %xmm0
    00004411: 	cmpq	%rbx, %rax
    00004414: 	jne	.Ltmp4487 # Offset: 17428
    00004416: 	movsd	init_value(%rip), %xmm1
    0000441e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00004426: 	jae	.Ltmp4488 # Offset: 17446
    0000442c: 	cvttsd2si	%xmm1, %rax
.Ltmp4623:
    00004431: 	andl	$0x3f, %eax
    00004434: 	movdqa	%xmm0, %xmm1
    00004438: 	imulq	$0x1f40, %rax, %rdx
    0000443f: 	psrldq	$0x8, %xmm1
    00004444: 	paddq	%xmm1, %xmm0
    00004448: 	movq	%xmm0, %rax
    0000444d: 	cmpq	%rax, %rdx
    00004450: 	je	.Ltmp4489 # Offset: 17488
    00004452: 	movl	current_test(%rip), %edx
    00004458: 	leaq	DATAat0x571d0(%rip), %rsi
    0000445f: 	movl	$0x1, %edi
    00004464: 	xorl	%eax, %eax
    00004466: 	callq	__printf_chk@PLT # Offset: 17510
    0000446b: 	movl	iterations(%rip), %ecx
.Ltmp4489:
    00004471: 	addl	$0x1, 0x1c(%rsp)
    00004476: 	movl	0x1c(%rsp), %eax
    0000447a: 	cmpl	%ecx, %eax
    0000447c: 	jl	.Ltmp4490 # Offset: 17532
.Ltmp4486:
    00004482: 	movq	%r12, %rsi
    00004485: 	movq	%r15, %rdi
    00004488: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17544
    0000448d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004494: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000449b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000044a2: 	je	.Ltmp4491 # Offset: 17570
.Ltmp4687:
    000044a8: 	movq	-0x20(%rax), %rdi
    000044ac: 	movq	%rdi, (%rsp)
    000044b0: 	callq	clock@PLT # Offset: 17584
    000044b5: 	movq	(%rsp), %rdi
    000044b9: 	pxor	%xmm0, %xmm0
    000044bd: 	movq	%rax, end_time(%rip)
    000044c4: 	subq	start_time(%rip), %rax
    000044cb: 	cvtsi2sd	%rax, %xmm0
    000044d0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000044d8: 	callq	_Z13record_resultdPKc # Offset: 17624
    000044dd: 	movq	0xa0(%rsp), %rdi
    000044e5: 	cmpq	%r13, %rdi
    000044e8: 	je	.Ltmp4492 # Offset: 17640
    000044ea: 	movq	0xb0(%rsp), %rax
    000044f2: 	leaq	0x1(%rax), %rsi
    000044f6: 	callq	_ZdlPvm@PLT # Offset: 17654
.Ltmp4492:
    000044fb: 	leaq	DATAat0x577ed(%rip), %rdx
    00004502: 	movq	%r14, %rsi
    00004505: 	movq	%r12, %rdi
    00004508: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17672
    0000450d: 	movq	%r12, %rcx
    00004510: 	movl	$0x40, %edx
    00004515: 	movl	$0x1f40, %esi
    0000451a: 	movq	%rbp, %rdi
    0000451d: 	callq	_Z14test_variable1Im25custom_remainder_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 17693
    00004522: 	movq	0xa0(%rsp), %rdi
    0000452a: 	cmpq	%r13, %rdi
    0000452d: 	je	.Ltmp4493 # Offset: 17709
    0000452f: 	movq	0xb0(%rsp), %rax
    00004537: 	leaq	0x1(%rax), %rsi
    0000453b: 	callq	_ZdlPvm@PLT # Offset: 17723
.Ltmp4493:
    00004540: 	leaq	DATAat0x57807(%rip), %rdx
    00004547: 	movq	%r14, %rsi
    0000454a: 	movq	%r12, %rdi
    0000454d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17741
    00004552: 	callq	clock@PLT # Offset: 17746
    00004557: 	movl	iterations(%rip), %ecx
    0000455d: 	movq	%rax, start_time(%rip)
    00004564: 	testl	%ecx, %ecx
    00004566: 	jle	.Ltmp4494 # Offset: 17766
    0000456c: 	movdqa	DATAat0x57f60(%rip), %xmm5
    00004574: 	movl	$0x0, 0x1c(%rsp)
    0000457c: 	movaps	%xmm5, (%rsp)
.Ltmp4498:
    00004580: 	movq	%rbp, %rax
    00004583: 	pxor	%xmm0, %xmm0
    00004587: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4495:
    00004590: 	movdqa	(%rsp), %xmm1
    00004595: 	pand	(%rax), %xmm1
    00004599: 	addq	$0x10, %rax
    0000459d: 	paddq	%xmm1, %xmm0
    000045a1: 	cmpq	%rax, %rbx
    000045a4: 	jne	.Ltmp4495 # Offset: 17828
    000045a6: 	movsd	init_value(%rip), %xmm1
    000045ae: 	comisd	DATAat0x57bd8(%rip), %xmm1
    000045b6: 	jae	.Ltmp4496 # Offset: 17846
    000045bc: 	cvttsd2si	%xmm1, %rax
.Ltmp4622:
    000045c1: 	andl	$0x3f, %eax
    000045c4: 	movdqa	%xmm0, %xmm1
    000045c8: 	imulq	$0x1f40, %rax, %rdx
    000045cf: 	psrldq	$0x8, %xmm1
    000045d4: 	paddq	%xmm1, %xmm0
    000045d8: 	movq	%xmm0, %rax
    000045dd: 	cmpq	%rax, %rdx
    000045e0: 	je	.Ltmp4497 # Offset: 17888
    000045e2: 	movl	current_test(%rip), %edx
    000045e8: 	leaq	DATAat0x571d0(%rip), %rsi
    000045ef: 	movl	$0x1, %edi
    000045f4: 	xorl	%eax, %eax
    000045f6: 	callq	__printf_chk@PLT # Offset: 17910
    000045fb: 	movl	iterations(%rip), %ecx
.Ltmp4497:
    00004601: 	addl	$0x1, 0x1c(%rsp)
    00004606: 	movl	0x1c(%rsp), %eax
    0000460a: 	cmpl	%ecx, %eax
    0000460c: 	jl	.Ltmp4498 # Offset: 17932
.Ltmp4494:
    00004612: 	movq	%r12, %rsi
    00004615: 	movq	%r15, %rdi
    00004618: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17944
    0000461d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004624: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000462b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004632: 	je	.Ltmp4499 # Offset: 17970
.Ltmp4686:
    00004638: 	movq	-0x20(%rax), %rdi
    0000463c: 	movq	%rdi, (%rsp)
    00004640: 	callq	clock@PLT # Offset: 17984
    00004645: 	movq	(%rsp), %rdi
    00004649: 	pxor	%xmm0, %xmm0
    0000464d: 	movq	%rax, end_time(%rip)
    00004654: 	subq	start_time(%rip), %rax
    0000465b: 	cvtsi2sd	%rax, %xmm0
    00004660: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004668: 	callq	_Z13record_resultdPKc # Offset: 18024
    0000466d: 	movq	0xa0(%rsp), %rdi
    00004675: 	cmpq	%r13, %rdi
    00004678: 	je	.Ltmp4500 # Offset: 18040
    0000467a: 	movq	0xb0(%rsp), %rax
    00004682: 	leaq	0x1(%rax), %rsi
    00004686: 	callq	_ZdlPvm@PLT # Offset: 18054
.Ltmp4500:
    0000468b: 	leaq	DATAat0x57821(%rip), %rdx
    00004692: 	movq	%r14, %rsi
    00004695: 	movq	%r12, %rdi
    00004698: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18072
    0000469d: 	callq	clock@PLT # Offset: 18077
    000046a2: 	movl	iterations(%rip), %ecx
    000046a8: 	movq	%rax, start_time(%rip)
    000046af: 	testl	%ecx, %ecx
    000046b1: 	jle	.Ltmp4501 # Offset: 18097
    000046b7: 	movdqa	DATAat0x57f70(%rip), %xmm6
    000046bf: 	movl	$0x0, 0x1c(%rsp)
    000046c7: 	movaps	%xmm6, (%rsp)
    000046cb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4505:
    000046d0: 	movq	%rbp, %rax
    000046d3: 	pxor	%xmm0, %xmm0
    000046d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4502:
    000046e0: 	movdqa	(%rsp), %xmm1
    000046e5: 	pand	(%rax), %xmm1
    000046e9: 	addq	$0x10, %rax
    000046ed: 	paddq	%xmm1, %xmm0
    000046f1: 	cmpq	%rbx, %rax
    000046f4: 	jne	.Ltmp4502 # Offset: 18164
    000046f6: 	movsd	init_value(%rip), %xmm1
    000046fe: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00004706: 	jae	.Ltmp4503 # Offset: 18182
    0000470c: 	cvttsd2si	%xmm1, %rax
.Ltmp4621:
    00004711: 	andl	$0x7f, %eax
    00004714: 	movdqa	%xmm0, %xmm1
    00004718: 	imulq	$0x1f40, %rax, %rdx
    0000471f: 	psrldq	$0x8, %xmm1
    00004724: 	paddq	%xmm1, %xmm0
    00004728: 	movq	%xmm0, %rax
    0000472d: 	cmpq	%rax, %rdx
    00004730: 	je	.Ltmp4504 # Offset: 18224
    00004732: 	movl	current_test(%rip), %edx
    00004738: 	leaq	DATAat0x571d0(%rip), %rsi
    0000473f: 	movl	$0x1, %edi
    00004744: 	xorl	%eax, %eax
    00004746: 	callq	__printf_chk@PLT # Offset: 18246
    0000474b: 	movl	iterations(%rip), %ecx
.Ltmp4504:
    00004751: 	addl	$0x1, 0x1c(%rsp)
    00004756: 	movl	0x1c(%rsp), %eax
    0000475a: 	cmpl	%ecx, %eax
    0000475c: 	jl	.Ltmp4505 # Offset: 18268
.Ltmp4501:
    00004762: 	movq	%r12, %rsi
    00004765: 	movq	%r15, %rdi
    00004768: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18280
    0000476d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004774: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000477b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004782: 	je	.Ltmp4506 # Offset: 18306
.Ltmp4685:
    00004788: 	movq	-0x20(%rax), %rdi
    0000478c: 	movq	%rdi, (%rsp)
    00004790: 	callq	clock@PLT # Offset: 18320
    00004795: 	movq	(%rsp), %rdi
    00004799: 	pxor	%xmm0, %xmm0
    0000479d: 	movq	%rax, end_time(%rip)
    000047a4: 	subq	start_time(%rip), %rax
    000047ab: 	cvtsi2sd	%rax, %xmm0
    000047b0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000047b8: 	callq	_Z13record_resultdPKc # Offset: 18360
    000047bd: 	movq	0xa0(%rsp), %rdi
    000047c5: 	cmpq	%r13, %rdi
    000047c8: 	je	.Ltmp4507 # Offset: 18376
    000047ca: 	movq	0xb0(%rsp), %rax
    000047d2: 	leaq	0x1(%rax), %rsi
    000047d6: 	callq	_ZdlPvm@PLT # Offset: 18390
.Ltmp4507:
    000047db: 	leaq	DATAat0x5782a(%rip), %rdx
    000047e2: 	movq	%r14, %rsi
    000047e5: 	movq	%r12, %rdi
    000047e8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18408
    000047ed: 	callq	clock@PLT # Offset: 18413
    000047f2: 	movl	iterations(%rip), %ecx
    000047f8: 	movq	%rax, start_time(%rip)
    000047ff: 	testl	%ecx, %ecx
    00004801: 	jle	.Ltmp4508 # Offset: 18433
    00004807: 	movdqa	DATAat0x57f70(%rip), %xmm7
    0000480f: 	movl	$0x0, 0x1c(%rsp)
    00004817: 	movaps	%xmm7, (%rsp)
    0000481b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4512:
    00004820: 	movq	%rbp, %rax
    00004823: 	pxor	%xmm0, %xmm0
    00004827: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4509:
    00004830: 	movdqa	(%rsp), %xmm1
    00004835: 	pand	(%rax), %xmm1
    00004839: 	addq	$0x10, %rax
    0000483d: 	paddq	%xmm1, %xmm0
    00004841: 	cmpq	%rax, %rbx
    00004844: 	jne	.Ltmp4509 # Offset: 18500
    00004846: 	movsd	init_value(%rip), %xmm1
    0000484e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00004856: 	jae	.Ltmp4510 # Offset: 18518
    0000485c: 	cvttsd2si	%xmm1, %rax
.Ltmp4620:
    00004861: 	andl	$0x7f, %eax
    00004864: 	movdqa	%xmm0, %xmm1
    00004868: 	imulq	$0x1f40, %rax, %rdx
    0000486f: 	psrldq	$0x8, %xmm1
    00004874: 	paddq	%xmm1, %xmm0
    00004878: 	movq	%xmm0, %rax
    0000487d: 	cmpq	%rax, %rdx
    00004880: 	je	.Ltmp4511 # Offset: 18560
    00004882: 	movl	current_test(%rip), %edx
    00004888: 	leaq	DATAat0x571d0(%rip), %rsi
    0000488f: 	movl	$0x1, %edi
    00004894: 	xorl	%eax, %eax
    00004896: 	callq	__printf_chk@PLT # Offset: 18582
    0000489b: 	movl	iterations(%rip), %ecx
.Ltmp4511:
    000048a1: 	addl	$0x1, 0x1c(%rsp)
    000048a6: 	movl	0x1c(%rsp), %eax
    000048aa: 	cmpl	%ecx, %eax
    000048ac: 	jl	.Ltmp4512 # Offset: 18604
.Ltmp4508:
    000048b2: 	movq	%r12, %rsi
    000048b5: 	movq	%r15, %rdi
    000048b8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18616
    000048bd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000048c4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000048cb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000048d2: 	je	.Ltmp4513 # Offset: 18642
.Ltmp4684:
    000048d8: 	movq	-0x20(%rax), %rdi
    000048dc: 	movq	%rdi, (%rsp)
    000048e0: 	callq	clock@PLT # Offset: 18656
    000048e5: 	movq	(%rsp), %rdi
    000048e9: 	pxor	%xmm0, %xmm0
    000048ed: 	movq	%rax, end_time(%rip)
    000048f4: 	subq	start_time(%rip), %rax
    000048fb: 	cvtsi2sd	%rax, %xmm0
    00004900: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004908: 	callq	_Z13record_resultdPKc # Offset: 18696
    0000490d: 	movq	0xa0(%rsp), %rdi
    00004915: 	cmpq	%r13, %rdi
    00004918: 	je	.Ltmp4514 # Offset: 18712
    0000491a: 	movq	0xb0(%rsp), %rax
    00004922: 	leaq	0x1(%rax), %rsi
    00004926: 	callq	_ZdlPvm@PLT # Offset: 18726
.Ltmp4514:
    0000492b: 	leaq	DATAat0x5783d(%rip), %rdx
    00004932: 	movq	%r14, %rsi
    00004935: 	movq	%r12, %rdi
    00004938: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18744
    0000493d: 	callq	clock@PLT # Offset: 18749
    00004942: 	movl	iterations(%rip), %ecx
    00004948: 	movq	%rax, start_time(%rip)
    0000494f: 	testl	%ecx, %ecx
    00004951: 	jle	.Ltmp4515 # Offset: 18769
    00004957: 	movdqa	DATAat0x57f70(%rip), %xmm2
    0000495f: 	movl	$0x0, 0x1c(%rsp)
    00004967: 	movaps	%xmm2, (%rsp)
    0000496b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4519:
    00004970: 	movq	%rbp, %rax
    00004973: 	pxor	%xmm0, %xmm0
    00004977: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4516:
    00004980: 	movdqa	(%rsp), %xmm1
    00004985: 	pand	(%rax), %xmm1
    00004989: 	addq	$0x10, %rax
    0000498d: 	paddq	%xmm1, %xmm0
    00004991: 	cmpq	%rbx, %rax
    00004994: 	jne	.Ltmp4516 # Offset: 18836
    00004996: 	movsd	init_value(%rip), %xmm1
    0000499e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    000049a6: 	jae	.Ltmp4517 # Offset: 18854
    000049ac: 	cvttsd2si	%xmm1, %rax
.Ltmp4619:
    000049b1: 	andl	$0x7f, %eax
    000049b4: 	movdqa	%xmm0, %xmm1
    000049b8: 	imulq	$0x1f40, %rax, %rdx
    000049bf: 	psrldq	$0x8, %xmm1
    000049c4: 	paddq	%xmm1, %xmm0
    000049c8: 	movq	%xmm0, %rax
    000049cd: 	cmpq	%rax, %rdx
    000049d0: 	je	.Ltmp4518 # Offset: 18896
    000049d2: 	movl	current_test(%rip), %edx
    000049d8: 	leaq	DATAat0x571d0(%rip), %rsi
    000049df: 	movl	$0x1, %edi
    000049e4: 	xorl	%eax, %eax
    000049e6: 	callq	__printf_chk@PLT # Offset: 18918
    000049eb: 	movl	iterations(%rip), %ecx
.Ltmp4518:
    000049f1: 	addl	$0x1, 0x1c(%rsp)
    000049f6: 	movl	0x1c(%rsp), %eax
    000049fa: 	cmpl	%ecx, %eax
    000049fc: 	jl	.Ltmp4519 # Offset: 18940
.Ltmp4515:
    00004a02: 	movq	%r12, %rsi
    00004a05: 	movq	%r15, %rdi
    00004a08: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18952
    00004a0d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004a14: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004a1b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004a22: 	je	.Ltmp4520 # Offset: 18978
.Ltmp4683:
    00004a28: 	movq	-0x20(%rax), %rdi
    00004a2c: 	movq	%rdi, (%rsp)
    00004a30: 	callq	clock@PLT # Offset: 18992
    00004a35: 	movq	(%rsp), %rdi
    00004a39: 	pxor	%xmm0, %xmm0
    00004a3d: 	movq	%rax, end_time(%rip)
    00004a44: 	subq	start_time(%rip), %rax
    00004a4b: 	cvtsi2sd	%rax, %xmm0
    00004a50: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004a58: 	callq	_Z13record_resultdPKc # Offset: 19032
    00004a5d: 	movq	0xa0(%rsp), %rdi
    00004a65: 	cmpq	%r13, %rdi
    00004a68: 	je	.Ltmp4521 # Offset: 19048
    00004a6a: 	movq	0xb0(%rsp), %rax
    00004a72: 	leaq	0x1(%rax), %rsi
    00004a76: 	callq	_ZdlPvm@PLT # Offset: 19062
.Ltmp4521:
    00004a7b: 	leaq	DATAat0x57851(%rip), %rdx
    00004a82: 	movq	%r14, %rsi
    00004a85: 	movq	%r12, %rdi
    00004a88: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19080
    00004a8d: 	callq	clock@PLT # Offset: 19085
    00004a92: 	movl	iterations(%rip), %ecx
    00004a98: 	movq	%rax, start_time(%rip)
    00004a9f: 	testl	%ecx, %ecx
    00004aa1: 	jle	.Ltmp4522 # Offset: 19105
    00004aa7: 	movdqa	DATAat0x57f70(%rip), %xmm3
    00004aaf: 	movl	$0x0, 0x1c(%rsp)
    00004ab7: 	movaps	%xmm3, (%rsp)
    00004abb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4526:
    00004ac0: 	movq	%rbp, %rax
    00004ac3: 	pxor	%xmm0, %xmm0
    00004ac7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4523:
    00004ad0: 	movdqa	(%rsp), %xmm1
    00004ad5: 	pand	(%rax), %xmm1
    00004ad9: 	addq	$0x10, %rax
    00004add: 	paddq	%xmm1, %xmm0
    00004ae1: 	cmpq	%rax, %rbx
    00004ae4: 	jne	.Ltmp4523 # Offset: 19172
    00004ae6: 	movsd	init_value(%rip), %xmm1
    00004aee: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00004af6: 	jae	.Ltmp4524 # Offset: 19190
    00004afc: 	cvttsd2si	%xmm1, %rax
.Ltmp4618:
    00004b01: 	andl	$0x7f, %eax
    00004b04: 	movdqa	%xmm0, %xmm1
    00004b08: 	imulq	$0x1f40, %rax, %rdx
    00004b0f: 	psrldq	$0x8, %xmm1
    00004b14: 	paddq	%xmm1, %xmm0
    00004b18: 	movq	%xmm0, %rax
    00004b1d: 	cmpq	%rax, %rdx
    00004b20: 	je	.Ltmp4525 # Offset: 19232
    00004b22: 	movl	current_test(%rip), %edx
    00004b28: 	leaq	DATAat0x571d0(%rip), %rsi
    00004b2f: 	movl	$0x1, %edi
    00004b34: 	xorl	%eax, %eax
    00004b36: 	callq	__printf_chk@PLT # Offset: 19254
    00004b3b: 	movl	iterations(%rip), %ecx
.Ltmp4525:
    00004b41: 	addl	$0x1, 0x1c(%rsp)
    00004b46: 	movl	0x1c(%rsp), %eax
    00004b4a: 	cmpl	%ecx, %eax
    00004b4c: 	jl	.Ltmp4526 # Offset: 19276
.Ltmp4522:
    00004b52: 	movq	%r12, %rsi
    00004b55: 	movq	%r15, %rdi
    00004b58: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19288
    00004b5d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004b64: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004b6b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004b72: 	je	.Ltmp4527 # Offset: 19314
.Ltmp4682:
    00004b78: 	movq	-0x20(%rax), %rdi
    00004b7c: 	movq	%rdi, (%rsp)
    00004b80: 	callq	clock@PLT # Offset: 19328
    00004b85: 	movq	(%rsp), %rdi
    00004b89: 	pxor	%xmm0, %xmm0
    00004b8d: 	movq	%rax, end_time(%rip)
    00004b94: 	subq	start_time(%rip), %rax
    00004b9b: 	cvtsi2sd	%rax, %xmm0
    00004ba0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004ba8: 	callq	_Z13record_resultdPKc # Offset: 19368
    00004bad: 	movq	0xa0(%rsp), %rdi
    00004bb5: 	cmpq	%r13, %rdi
    00004bb8: 	je	.Ltmp4528 # Offset: 19384
    00004bba: 	movq	0xb0(%rsp), %rax
    00004bc2: 	leaq	0x1(%rax), %rsi
    00004bc6: 	callq	_ZdlPvm@PLT # Offset: 19398
.Ltmp4528:
    00004bcb: 	leaq	DATAat0x5786a(%rip), %rdx
    00004bd2: 	movq	%r14, %rsi
    00004bd5: 	movq	%r12, %rdi
    00004bd8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19416
    00004bdd: 	movq	%r12, %rcx
    00004be0: 	movl	$0x80, %edx
    00004be5: 	movl	$0x1f40, %esi
    00004bea: 	movq	%rbp, %rdi
    00004bed: 	callq	_Z14test_variable1Im25custom_remainder_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 19437
    00004bf2: 	movq	0xa0(%rsp), %rdi
    00004bfa: 	cmpq	%r13, %rdi
    00004bfd: 	je	.Ltmp4529 # Offset: 19453
    00004bff: 	movq	0xb0(%rsp), %rax
    00004c07: 	leaq	0x1(%rax), %rsi
    00004c0b: 	callq	_ZdlPvm@PLT # Offset: 19467
.Ltmp4529:
    00004c10: 	leaq	DATAat0x57885(%rip), %rdx
    00004c17: 	movq	%r14, %rsi
    00004c1a: 	movq	%r12, %rdi
    00004c1d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19485
    00004c22: 	callq	clock@PLT # Offset: 19490
    00004c27: 	movl	iterations(%rip), %ecx
    00004c2d: 	movq	%rax, start_time(%rip)
    00004c34: 	testl	%ecx, %ecx
    00004c36: 	jle	.Ltmp4530 # Offset: 19510
    00004c3c: 	movdqa	DATAat0x57f70(%rip), %xmm4
    00004c44: 	movl	$0x0, 0x1c(%rsp)
    00004c4c: 	movaps	%xmm4, (%rsp)
.Ltmp4534:
    00004c50: 	movq	%rbp, %rax
    00004c53: 	pxor	%xmm0, %xmm0
    00004c57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4531:
    00004c60: 	movdqa	(%rsp), %xmm1
    00004c65: 	pand	(%rax), %xmm1
    00004c69: 	addq	$0x10, %rax
    00004c6d: 	paddq	%xmm1, %xmm0
    00004c71: 	cmpq	%rbx, %rax
    00004c74: 	jne	.Ltmp4531 # Offset: 19572
    00004c76: 	movsd	init_value(%rip), %xmm1
    00004c7e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00004c86: 	jae	.Ltmp4532 # Offset: 19590
    00004c8c: 	cvttsd2si	%xmm1, %rax
.Ltmp4617:
    00004c91: 	andl	$0x7f, %eax
    00004c94: 	movdqa	%xmm0, %xmm1
    00004c98: 	imulq	$0x1f40, %rax, %rdx
    00004c9f: 	psrldq	$0x8, %xmm1
    00004ca4: 	paddq	%xmm1, %xmm0
    00004ca8: 	movq	%xmm0, %rax
    00004cad: 	cmpq	%rax, %rdx
    00004cb0: 	je	.Ltmp4533 # Offset: 19632
    00004cb2: 	movl	current_test(%rip), %edx
    00004cb8: 	leaq	DATAat0x571d0(%rip), %rsi
    00004cbf: 	movl	$0x1, %edi
    00004cc4: 	xorl	%eax, %eax
    00004cc6: 	callq	__printf_chk@PLT # Offset: 19654
    00004ccb: 	movl	iterations(%rip), %ecx
.Ltmp4533:
    00004cd1: 	addl	$0x1, 0x1c(%rsp)
    00004cd6: 	movl	0x1c(%rsp), %eax
    00004cda: 	cmpl	%ecx, %eax
    00004cdc: 	jl	.Ltmp4534 # Offset: 19676
.Ltmp4530:
    00004ce2: 	movq	%r12, %rsi
    00004ce5: 	movq	%r15, %rdi
    00004ce8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19688
    00004ced: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004cf4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004cfb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004d02: 	je	.Ltmp4535 # Offset: 19714
.Ltmp4681:
    00004d08: 	movq	-0x20(%rax), %rdi
    00004d0c: 	movq	%rdi, (%rsp)
    00004d10: 	callq	clock@PLT # Offset: 19728
    00004d15: 	movq	(%rsp), %rdi
    00004d19: 	pxor	%xmm0, %xmm0
    00004d1d: 	movq	%rax, end_time(%rip)
    00004d24: 	subq	start_time(%rip), %rax
    00004d2b: 	cvtsi2sd	%rax, %xmm0
    00004d30: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004d38: 	callq	_Z13record_resultdPKc # Offset: 19768
    00004d3d: 	movq	0xa0(%rsp), %rdi
    00004d45: 	cmpq	%r13, %rdi
    00004d48: 	je	.Ltmp4536 # Offset: 19784
    00004d4a: 	movq	0xb0(%rsp), %rax
    00004d52: 	leaq	0x1(%rax), %rsi
    00004d56: 	callq	_ZdlPvm@PLT # Offset: 19798
.Ltmp4536:
    00004d5b: 	leaq	DATAat0x578a0(%rip), %rdx
    00004d62: 	movq	%r14, %rsi
    00004d65: 	movq	%r12, %rdi
    00004d68: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19816
    00004d6d: 	callq	clock@PLT # Offset: 19821
    00004d72: 	movl	iterations(%rip), %ecx
    00004d78: 	movq	%rax, start_time(%rip)
    00004d7f: 	testl	%ecx, %ecx
    00004d81: 	jle	.Ltmp4537 # Offset: 19841
    00004d87: 	movdqa	DATAat0x57c50(%rip), %xmm5
    00004d8f: 	movl	$0x0, 0x1c(%rsp)
    00004d97: 	movaps	%xmm5, (%rsp)
    00004d9b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4541:
    00004da0: 	movq	%rbp, %rax
    00004da3: 	pxor	%xmm0, %xmm0
    00004da7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4538:
    00004db0: 	movdqa	(%rsp), %xmm1
    00004db5: 	pand	(%rax), %xmm1
    00004db9: 	addq	$0x10, %rax
    00004dbd: 	paddq	%xmm1, %xmm0
    00004dc1: 	cmpq	%rax, %rbx
    00004dc4: 	jne	.Ltmp4538 # Offset: 19908
    00004dc6: 	movsd	init_value(%rip), %xmm1
    00004dce: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00004dd6: 	jae	.Ltmp4539 # Offset: 19926
    00004ddc: 	cvttsd2si	%xmm1, %rax
.Ltmp4616:
    00004de1: 	movzbl	%al, %eax
    00004de4: 	movdqa	%xmm0, %xmm1
    00004de8: 	imulq	$0x1f40, %rax, %rdx
    00004def: 	psrldq	$0x8, %xmm1
    00004df4: 	paddq	%xmm1, %xmm0
    00004df8: 	movq	%xmm0, %rax
    00004dfd: 	cmpq	%rax, %rdx
    00004e00: 	je	.Ltmp4540 # Offset: 19968
    00004e02: 	movl	current_test(%rip), %edx
    00004e08: 	leaq	DATAat0x571d0(%rip), %rsi
    00004e0f: 	movl	$0x1, %edi
    00004e14: 	xorl	%eax, %eax
    00004e16: 	callq	__printf_chk@PLT # Offset: 19990
    00004e1b: 	movl	iterations(%rip), %ecx
.Ltmp4540:
    00004e21: 	addl	$0x1, 0x1c(%rsp)
    00004e26: 	movl	0x1c(%rsp), %eax
    00004e2a: 	cmpl	%ecx, %eax
    00004e2c: 	jl	.Ltmp4541 # Offset: 20012
.Ltmp4537:
    00004e32: 	movq	%r12, %rsi
    00004e35: 	movq	%r15, %rdi
    00004e38: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 20024
    00004e3d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004e44: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004e4b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004e52: 	je	.Ltmp4542 # Offset: 20050
.Ltmp4680:
    00004e58: 	movq	-0x20(%rax), %rdi
    00004e5c: 	movq	%rdi, (%rsp)
    00004e60: 	callq	clock@PLT # Offset: 20064
    00004e65: 	movq	(%rsp), %rdi
    00004e69: 	pxor	%xmm0, %xmm0
    00004e6d: 	movq	%rax, end_time(%rip)
    00004e74: 	subq	start_time(%rip), %rax
    00004e7b: 	cvtsi2sd	%rax, %xmm0
    00004e80: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004e88: 	callq	_Z13record_resultdPKc # Offset: 20104
    00004e8d: 	movq	0xa0(%rsp), %rdi
    00004e95: 	cmpq	%r13, %rdi
    00004e98: 	je	.Ltmp4543 # Offset: 20120
    00004e9a: 	movq	0xb0(%rsp), %rax
    00004ea2: 	leaq	0x1(%rax), %rsi
    00004ea6: 	callq	_ZdlPvm@PLT # Offset: 20134
.Ltmp4543:
    00004eab: 	leaq	DATAat0x578a9(%rip), %rdx
    00004eb2: 	movq	%r14, %rsi
    00004eb5: 	movq	%r12, %rdi
    00004eb8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20152
    00004ebd: 	callq	clock@PLT # Offset: 20157
    00004ec2: 	movl	iterations(%rip), %ecx
    00004ec8: 	movq	%rax, start_time(%rip)
    00004ecf: 	testl	%ecx, %ecx
    00004ed1: 	jle	.Ltmp4544 # Offset: 20177
    00004ed7: 	movdqa	DATAat0x57c50(%rip), %xmm6
    00004edf: 	movl	$0x0, 0x1c(%rsp)
    00004ee7: 	movaps	%xmm6, (%rsp)
    00004eeb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4548:
    00004ef0: 	movq	%rbp, %rax
    00004ef3: 	pxor	%xmm0, %xmm0
    00004ef7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4545:
    00004f00: 	movdqa	(%rsp), %xmm1
    00004f05: 	pand	(%rax), %xmm1
    00004f09: 	addq	$0x10, %rax
    00004f0d: 	paddq	%xmm1, %xmm0
    00004f11: 	cmpq	%rbx, %rax
    00004f14: 	jne	.Ltmp4545 # Offset: 20244
    00004f16: 	movsd	init_value(%rip), %xmm1
    00004f1e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00004f26: 	jae	.Ltmp4546 # Offset: 20262
    00004f2c: 	cvttsd2si	%xmm1, %rax
.Ltmp4615:
    00004f31: 	movzbl	%al, %eax
    00004f34: 	movdqa	%xmm0, %xmm1
    00004f38: 	imulq	$0x1f40, %rax, %rdx
    00004f3f: 	psrldq	$0x8, %xmm1
    00004f44: 	paddq	%xmm1, %xmm0
    00004f48: 	movq	%xmm0, %rax
    00004f4d: 	cmpq	%rax, %rdx
    00004f50: 	je	.Ltmp4547 # Offset: 20304
    00004f52: 	movl	current_test(%rip), %edx
    00004f58: 	leaq	DATAat0x571d0(%rip), %rsi
    00004f5f: 	movl	$0x1, %edi
    00004f64: 	xorl	%eax, %eax
    00004f66: 	callq	__printf_chk@PLT # Offset: 20326
    00004f6b: 	movl	iterations(%rip), %ecx
.Ltmp4547:
    00004f71: 	addl	$0x1, 0x1c(%rsp)
    00004f76: 	movl	0x1c(%rsp), %eax
    00004f7a: 	cmpl	%ecx, %eax
    00004f7c: 	jl	.Ltmp4548 # Offset: 20348
.Ltmp4544:
    00004f82: 	movq	%r12, %rsi
    00004f85: 	movq	%r15, %rdi
    00004f88: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 20360
    00004f8d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004f94: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004f9b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004fa2: 	je	.Ltmp4549 # Offset: 20386
.Ltmp4679:
    00004fa8: 	movq	-0x20(%rax), %rdi
    00004fac: 	movq	%rdi, (%rsp)
    00004fb0: 	callq	clock@PLT # Offset: 20400
    00004fb5: 	movq	(%rsp), %rdi
    00004fb9: 	pxor	%xmm0, %xmm0
    00004fbd: 	movq	%rax, end_time(%rip)
    00004fc4: 	subq	start_time(%rip), %rax
    00004fcb: 	cvtsi2sd	%rax, %xmm0
    00004fd0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004fd8: 	callq	_Z13record_resultdPKc # Offset: 20440
    00004fdd: 	movq	0xa0(%rsp), %rdi
    00004fe5: 	cmpq	%r13, %rdi
    00004fe8: 	je	.Ltmp4550 # Offset: 20456
    00004fea: 	movq	0xb0(%rsp), %rax
    00004ff2: 	leaq	0x1(%rax), %rsi
    00004ff6: 	callq	_ZdlPvm@PLT # Offset: 20470
.Ltmp4550:
    00004ffb: 	leaq	DATAat0x578bc(%rip), %rdx
    00005002: 	movq	%r14, %rsi
    00005005: 	movq	%r12, %rdi
    00005008: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20488
    0000500d: 	callq	clock@PLT # Offset: 20493
    00005012: 	movl	iterations(%rip), %ecx
    00005018: 	movq	%rax, start_time(%rip)
    0000501f: 	testl	%ecx, %ecx
    00005021: 	jle	.Ltmp4551 # Offset: 20513
    00005027: 	movdqa	DATAat0x57c50(%rip), %xmm7
    0000502f: 	movl	$0x0, 0x1c(%rsp)
    00005037: 	movaps	%xmm7, (%rsp)
    0000503b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4555:
    00005040: 	movq	%rbp, %rax
    00005043: 	pxor	%xmm0, %xmm0
    00005047: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4552:
    00005050: 	movdqa	(%rsp), %xmm1
    00005055: 	pand	(%rax), %xmm1
    00005059: 	addq	$0x10, %rax
    0000505d: 	paddq	%xmm1, %xmm0
    00005061: 	cmpq	%rax, %rbx
    00005064: 	jne	.Ltmp4552 # Offset: 20580
    00005066: 	movsd	init_value(%rip), %xmm1
    0000506e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00005076: 	jae	.Ltmp4553 # Offset: 20598
    0000507c: 	cvttsd2si	%xmm1, %rax
.Ltmp4614:
    00005081: 	movzbl	%al, %eax
    00005084: 	movdqa	%xmm0, %xmm1
    00005088: 	imulq	$0x1f40, %rax, %rdx
    0000508f: 	psrldq	$0x8, %xmm1
    00005094: 	paddq	%xmm1, %xmm0
    00005098: 	movq	%xmm0, %rax
    0000509d: 	cmpq	%rax, %rdx
    000050a0: 	je	.Ltmp4554 # Offset: 20640
    000050a2: 	movl	current_test(%rip), %edx
    000050a8: 	leaq	DATAat0x571d0(%rip), %rsi
    000050af: 	movl	$0x1, %edi
    000050b4: 	xorl	%eax, %eax
    000050b6: 	callq	__printf_chk@PLT # Offset: 20662
    000050bb: 	movl	iterations(%rip), %ecx
.Ltmp4554:
    000050c1: 	addl	$0x1, 0x1c(%rsp)
    000050c6: 	movl	0x1c(%rsp), %eax
    000050ca: 	cmpl	%ecx, %eax
    000050cc: 	jl	.Ltmp4555 # Offset: 20684
.Ltmp4551:
    000050d2: 	movq	%r12, %rsi
    000050d5: 	movq	%r15, %rdi
    000050d8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 20696
    000050dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000050e4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000050eb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000050f2: 	je	.Ltmp4556 # Offset: 20722
.Ltmp4678:
    000050f8: 	movq	-0x20(%rax), %rdi
    000050fc: 	movq	%rdi, (%rsp)
    00005100: 	callq	clock@PLT # Offset: 20736
    00005105: 	movq	(%rsp), %rdi
    00005109: 	pxor	%xmm0, %xmm0
    0000510d: 	movq	%rax, end_time(%rip)
    00005114: 	subq	start_time(%rip), %rax
    0000511b: 	cvtsi2sd	%rax, %xmm0
    00005120: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00005128: 	callq	_Z13record_resultdPKc # Offset: 20776
    0000512d: 	movq	0xa0(%rsp), %rdi
    00005135: 	cmpq	%r13, %rdi
    00005138: 	je	.Ltmp4557 # Offset: 20792
    0000513a: 	movq	0xb0(%rsp), %rax
    00005142: 	leaq	0x1(%rax), %rsi
    00005146: 	callq	_ZdlPvm@PLT # Offset: 20806
.Ltmp4557:
    0000514b: 	leaq	DATAat0x578d0(%rip), %rdx
    00005152: 	movq	%r14, %rsi
    00005155: 	movq	%r12, %rdi
    00005158: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20824
    0000515d: 	callq	clock@PLT # Offset: 20829
    00005162: 	movl	iterations(%rip), %ecx
    00005168: 	movq	%rax, start_time(%rip)
    0000516f: 	testl	%ecx, %ecx
    00005171: 	jle	.Ltmp4558 # Offset: 20849
    00005177: 	movdqa	DATAat0x57c50(%rip), %xmm2
    0000517f: 	movl	$0x0, 0x1c(%rsp)
    00005187: 	movaps	%xmm2, (%rsp)
    0000518b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4562:
    00005190: 	movq	%rbp, %rax
    00005193: 	pxor	%xmm0, %xmm0
    00005197: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4559:
    000051a0: 	movdqa	(%rsp), %xmm1
    000051a5: 	pand	(%rax), %xmm1
    000051a9: 	addq	$0x10, %rax
    000051ad: 	paddq	%xmm1, %xmm0
    000051b1: 	cmpq	%rbx, %rax
    000051b4: 	jne	.Ltmp4559 # Offset: 20916
    000051b6: 	movsd	init_value(%rip), %xmm1
    000051be: 	comisd	DATAat0x57bd8(%rip), %xmm1
    000051c6: 	jae	.Ltmp4560 # Offset: 20934
    000051cc: 	cvttsd2si	%xmm1, %rax
.Ltmp4613:
    000051d1: 	movzbl	%al, %eax
    000051d4: 	movdqa	%xmm0, %xmm1
    000051d8: 	imulq	$0x1f40, %rax, %rdx
    000051df: 	psrldq	$0x8, %xmm1
    000051e4: 	paddq	%xmm1, %xmm0
    000051e8: 	movq	%xmm0, %rax
    000051ed: 	cmpq	%rax, %rdx
    000051f0: 	je	.Ltmp4561 # Offset: 20976
    000051f2: 	movl	current_test(%rip), %edx
    000051f8: 	leaq	DATAat0x571d0(%rip), %rsi
    000051ff: 	movl	$0x1, %edi
    00005204: 	xorl	%eax, %eax
    00005206: 	callq	__printf_chk@PLT # Offset: 20998
    0000520b: 	movl	iterations(%rip), %ecx
.Ltmp4561:
    00005211: 	addl	$0x1, 0x1c(%rsp)
    00005216: 	movl	0x1c(%rsp), %eax
    0000521a: 	cmpl	%ecx, %eax
    0000521c: 	jl	.Ltmp4562 # Offset: 21020
.Ltmp4558:
    00005222: 	movq	%r12, %rsi
    00005225: 	movq	%r15, %rdi
    00005228: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 21032
    0000522d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005234: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000523b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005242: 	je	.Ltmp4563 # Offset: 21058
.Ltmp4677:
    00005248: 	movq	-0x20(%rax), %rdi
    0000524c: 	movq	%rdi, (%rsp)
    00005250: 	callq	clock@PLT # Offset: 21072
    00005255: 	movq	(%rsp), %rdi
    00005259: 	pxor	%xmm0, %xmm0
    0000525d: 	movq	%rax, end_time(%rip)
    00005264: 	subq	start_time(%rip), %rax
    0000526b: 	cvtsi2sd	%rax, %xmm0
    00005270: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00005278: 	callq	_Z13record_resultdPKc # Offset: 21112
    0000527d: 	movq	0xa0(%rsp), %rdi
    00005285: 	cmpq	%r13, %rdi
    00005288: 	je	.Ltmp4564 # Offset: 21128
    0000528a: 	movq	0xb0(%rsp), %rax
    00005292: 	leaq	0x1(%rax), %rsi
    00005296: 	callq	_ZdlPvm@PLT # Offset: 21142
.Ltmp4564:
    0000529b: 	leaq	DATAat0x578e9(%rip), %rdx
    000052a2: 	movq	%r14, %rsi
    000052a5: 	movq	%r12, %rdi
    000052a8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21160
    000052ad: 	movq	%r12, %rcx
    000052b0: 	movl	$0x100, %edx
    000052b5: 	movl	$0x1f40, %esi
    000052ba: 	movq	%rbp, %rdi
    000052bd: 	callq	_Z14test_variable1Im25custom_remainder_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 21181
    000052c2: 	movq	0xa0(%rsp), %rdi
    000052ca: 	cmpq	%r13, %rdi
    000052cd: 	je	.Ltmp4565 # Offset: 21197
    000052cf: 	movq	0xb0(%rsp), %rax
    000052d7: 	leaq	0x1(%rax), %rsi
    000052db: 	callq	_ZdlPvm@PLT # Offset: 21211
.Ltmp4565:
    000052e0: 	leaq	DATAat0x57904(%rip), %rdx
    000052e7: 	movq	%r14, %rsi
    000052ea: 	movq	%r12, %rdi
    000052ed: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21229
    000052f2: 	movq	%r12, %rdx
    000052f5: 	movl	$0x1f40, %esi
    000052fa: 	movq	%rbp, %rdi
    000052fd: 	callq	_Z13test_constantIm16custom_remainderImLi256EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 21245
    00005302: 	movq	0xa0(%rsp), %rdi
    0000530a: 	cmpq	%r13, %rdi
    0000530d: 	je	.Ltmp4566 # Offset: 21261
    0000530f: 	movq	0xb0(%rsp), %rax
    00005317: 	leaq	0x1(%rax), %rsi
    0000531b: 	callq	_ZdlPvm@PLT # Offset: 21275
.Ltmp4566:
    00005320: 	leaq	DATAat0x5791f(%rip), %rdx
    00005327: 	movq	%r14, %rsi
    0000532a: 	movq	%r12, %rdi
    0000532d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21293
    00005332: 	callq	clock@PLT # Offset: 21298
    00005337: 	movl	iterations(%rip), %ecx
    0000533d: 	movq	%rax, start_time(%rip)
    00005344: 	testl	%ecx, %ecx
    00005346: 	jle	.Ltmp4567 # Offset: 21318
    0000534c: 	movdqa	DATAat0x57f80(%rip), %xmm3
    00005354: 	movl	$0x0, 0x1c(%rsp)
    0000535c: 	movaps	%xmm3, (%rsp)
.Ltmp4571:
    00005360: 	movq	%rbp, %rax
    00005363: 	pxor	%xmm0, %xmm0
    00005367: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4568:
    00005370: 	movdqa	(%rsp), %xmm1
    00005375: 	pand	(%rax), %xmm1
    00005379: 	addq	$0x10, %rax
    0000537d: 	paddq	%xmm1, %xmm0
    00005381: 	cmpq	%rax, %rbx
    00005384: 	jne	.Ltmp4568 # Offset: 21380
    00005386: 	movsd	init_value(%rip), %xmm1
    0000538e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00005396: 	jae	.Ltmp4569 # Offset: 21398
    0000539c: 	cvttsd2si	%xmm1, %rax
.Ltmp4612:
    000053a1: 	andl	$0x3ff, %eax
    000053a6: 	movdqa	%xmm0, %xmm1
    000053aa: 	imulq	$0x1f40, %rax, %rdx
    000053b1: 	psrldq	$0x8, %xmm1
    000053b6: 	paddq	%xmm1, %xmm0
    000053ba: 	movq	%xmm0, %rax
    000053bf: 	cmpq	%rax, %rdx
    000053c2: 	je	.Ltmp4570 # Offset: 21442
    000053c4: 	movl	current_test(%rip), %edx
    000053ca: 	leaq	DATAat0x571d0(%rip), %rsi
    000053d1: 	movl	$0x1, %edi
    000053d6: 	xorl	%eax, %eax
    000053d8: 	callq	__printf_chk@PLT # Offset: 21464
    000053dd: 	movl	iterations(%rip), %ecx
.Ltmp4570:
    000053e3: 	addl	$0x1, 0x1c(%rsp)
    000053e8: 	movl	0x1c(%rsp), %eax
    000053ec: 	cmpl	%ecx, %eax
    000053ee: 	jl	.Ltmp4571 # Offset: 21486
.Ltmp4567:
    000053f4: 	movq	%r12, %rsi
    000053f7: 	movq	%r15, %rdi
    000053fa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 21498
    000053ff: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005406: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000540d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005414: 	je	.Ltmp4572 # Offset: 21524
.Ltmp4676:
    0000541a: 	movq	-0x20(%rax), %rdi
    0000541e: 	movq	%rdi, (%rsp)
    00005422: 	callq	clock@PLT # Offset: 21538
    00005427: 	movq	(%rsp), %rdi
    0000542b: 	pxor	%xmm0, %xmm0
    0000542f: 	movq	%rax, end_time(%rip)
    00005436: 	subq	start_time(%rip), %rax
    0000543d: 	cvtsi2sd	%rax, %xmm0
    00005442: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000544a: 	callq	_Z13record_resultdPKc # Offset: 21578
    0000544f: 	movq	0xa0(%rsp), %rdi
    00005457: 	cmpq	%r13, %rdi
    0000545a: 	je	.Ltmp4573 # Offset: 21594
    0000545c: 	movq	0xb0(%rsp), %rax
    00005464: 	leaq	0x1(%rax), %rsi
    00005468: 	callq	_ZdlPvm@PLT # Offset: 21608
.Ltmp4573:
    0000546d: 	leaq	DATAat0x57929(%rip), %rdx
    00005474: 	movq	%r14, %rsi
    00005477: 	movq	%r12, %rdi
    0000547a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21626
    0000547f: 	callq	clock@PLT # Offset: 21631
    00005484: 	movl	iterations(%rip), %ecx
    0000548a: 	movq	%rax, start_time(%rip)
    00005491: 	testl	%ecx, %ecx
    00005493: 	jle	.Ltmp4574 # Offset: 21651
    00005499: 	movdqa	DATAat0x57f80(%rip), %xmm4
    000054a1: 	movl	$0x0, 0x1c(%rsp)
    000054a9: 	movaps	%xmm4, (%rsp)
    000054ad: 	nopl	(%rax) # Size: 3
.Ltmp4578:
    000054b0: 	movq	%rbp, %rax
    000054b3: 	pxor	%xmm0, %xmm0
    000054b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4575:
    000054c0: 	movdqa	(%rsp), %xmm1
    000054c5: 	pand	(%rax), %xmm1
    000054c9: 	addq	$0x10, %rax
    000054cd: 	paddq	%xmm1, %xmm0
    000054d1: 	cmpq	%rbx, %rax
    000054d4: 	jne	.Ltmp4575 # Offset: 21716
    000054d6: 	movsd	init_value(%rip), %xmm1
    000054de: 	comisd	DATAat0x57bd8(%rip), %xmm1
    000054e6: 	jae	.Ltmp4576 # Offset: 21734
    000054ec: 	cvttsd2si	%xmm1, %rax
.Ltmp4611:
    000054f1: 	andl	$0x3ff, %eax
    000054f6: 	movdqa	%xmm0, %xmm1
    000054fa: 	imulq	$0x1f40, %rax, %rdx
    00005501: 	psrldq	$0x8, %xmm1
    00005506: 	paddq	%xmm1, %xmm0
    0000550a: 	movq	%xmm0, %rax
    0000550f: 	cmpq	%rax, %rdx
    00005512: 	je	.Ltmp4577 # Offset: 21778
    00005514: 	movl	current_test(%rip), %edx
    0000551a: 	leaq	DATAat0x571d0(%rip), %rsi
    00005521: 	movl	$0x1, %edi
    00005526: 	xorl	%eax, %eax
    00005528: 	callq	__printf_chk@PLT # Offset: 21800
    0000552d: 	movl	iterations(%rip), %ecx
.Ltmp4577:
    00005533: 	addl	$0x1, 0x1c(%rsp)
    00005538: 	movl	0x1c(%rsp), %eax
    0000553c: 	cmpl	%ecx, %eax
    0000553e: 	jl	.Ltmp4578 # Offset: 21822
.Ltmp4574:
    00005544: 	movq	%r12, %rsi
    00005547: 	movq	%r15, %rdi
    0000554a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 21834
    0000554f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005556: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000555d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005564: 	je	.Ltmp4579 # Offset: 21860
.Ltmp4675:
    0000556a: 	movq	-0x20(%rax), %rdi
    0000556e: 	movq	%rdi, (%rsp)
    00005572: 	callq	clock@PLT # Offset: 21874
    00005577: 	movq	(%rsp), %rdi
    0000557b: 	pxor	%xmm0, %xmm0
    0000557f: 	movq	%rax, end_time(%rip)
    00005586: 	subq	start_time(%rip), %rax
    0000558d: 	cvtsi2sd	%rax, %xmm0
    00005592: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000559a: 	callq	_Z13record_resultdPKc # Offset: 21914
    0000559f: 	movq	0xa0(%rsp), %rdi
    000055a7: 	cmpq	%r13, %rdi
    000055aa: 	je	.Ltmp4580 # Offset: 21930
    000055ac: 	movq	0xb0(%rsp), %rax
    000055b4: 	leaq	0x1(%rax), %rsi
    000055b8: 	callq	_ZdlPvm@PLT # Offset: 21944
.Ltmp4580:
    000055bd: 	leaq	DATAat0x5793d(%rip), %rdx
    000055c4: 	movq	%r14, %rsi
    000055c7: 	movq	%r12, %rdi
    000055ca: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21962
    000055cf: 	callq	clock@PLT # Offset: 21967
    000055d4: 	movl	iterations(%rip), %ecx
    000055da: 	movq	%rax, start_time(%rip)
    000055e1: 	testl	%ecx, %ecx
    000055e3: 	jle	.Ltmp4581 # Offset: 21987
    000055e9: 	movdqa	DATAat0x57f80(%rip), %xmm5
    000055f1: 	movl	$0x0, 0x1c(%rsp)
    000055f9: 	movaps	%xmm5, (%rsp)
    000055fd: 	nopl	(%rax) # Size: 3
.Ltmp4585:
    00005600: 	movq	%rbp, %rax
    00005603: 	pxor	%xmm0, %xmm0
    00005607: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4582:
    00005610: 	movdqa	(%rsp), %xmm1
    00005615: 	pand	(%rax), %xmm1
    00005619: 	addq	$0x10, %rax
    0000561d: 	paddq	%xmm1, %xmm0
    00005621: 	cmpq	%rax, %rbx
    00005624: 	jne	.Ltmp4582 # Offset: 22052
    00005626: 	movsd	init_value(%rip), %xmm1
    0000562e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00005636: 	jae	.Ltmp4583 # Offset: 22070
    0000563c: 	cvttsd2si	%xmm1, %rax
.Ltmp4610:
    00005641: 	andl	$0x3ff, %eax
    00005646: 	movdqa	%xmm0, %xmm1
    0000564a: 	imulq	$0x1f40, %rax, %rdx
    00005651: 	psrldq	$0x8, %xmm1
    00005656: 	paddq	%xmm1, %xmm0
    0000565a: 	movq	%xmm0, %rax
    0000565f: 	cmpq	%rax, %rdx
    00005662: 	je	.Ltmp4584 # Offset: 22114
    00005664: 	movl	current_test(%rip), %edx
    0000566a: 	leaq	DATAat0x571d0(%rip), %rsi
    00005671: 	movl	$0x1, %edi
    00005676: 	xorl	%eax, %eax
    00005678: 	callq	__printf_chk@PLT # Offset: 22136
    0000567d: 	movl	iterations(%rip), %ecx
.Ltmp4584:
    00005683: 	addl	$0x1, 0x1c(%rsp)
    00005688: 	movl	0x1c(%rsp), %eax
    0000568c: 	cmpl	%ecx, %eax
    0000568e: 	jl	.Ltmp4585 # Offset: 22158
.Ltmp4581:
    00005694: 	movq	%r12, %rsi
    00005697: 	movq	%r15, %rdi
    0000569a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 22170
    0000569f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000056a6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000056ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000056b4: 	je	.Ltmp4586 # Offset: 22196
.Ltmp4674:
    000056ba: 	movq	-0x20(%rax), %rdi
    000056be: 	movq	%rdi, (%rsp)
    000056c2: 	callq	clock@PLT # Offset: 22210
    000056c7: 	movq	(%rsp), %rdi
    000056cb: 	pxor	%xmm0, %xmm0
    000056cf: 	movq	%rax, end_time(%rip)
    000056d6: 	subq	start_time(%rip), %rax
    000056dd: 	cvtsi2sd	%rax, %xmm0
    000056e2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000056ea: 	callq	_Z13record_resultdPKc # Offset: 22250
    000056ef: 	movq	0xa0(%rsp), %rdi
    000056f7: 	cmpq	%r13, %rdi
    000056fa: 	je	.Ltmp4587 # Offset: 22266
    000056fc: 	movq	0xb0(%rsp), %rax
    00005704: 	leaq	0x1(%rax), %rsi
    00005708: 	callq	_ZdlPvm@PLT # Offset: 22280
.Ltmp4587:
    0000570d: 	leaq	DATAat0x57952(%rip), %rdx
    00005714: 	movq	%r14, %rsi
    00005717: 	movq	%r12, %rdi
    0000571a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22298
    0000571f: 	callq	clock@PLT # Offset: 22303
    00005724: 	movl	iterations(%rip), %ecx
    0000572a: 	movq	%rax, start_time(%rip)
    00005731: 	testl	%ecx, %ecx
    00005733: 	jle	.Ltmp4588 # Offset: 22323
    00005739: 	movdqa	DATAat0x57f80(%rip), %xmm6
    00005741: 	movl	$0x0, 0x1c(%rsp)
    00005749: 	movaps	%xmm6, (%rsp)
    0000574d: 	nopl	(%rax) # Size: 3
.Ltmp4592:
    00005750: 	movq	%rbp, %rax
    00005753: 	pxor	%xmm0, %xmm0
    00005757: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4589:
    00005760: 	movdqa	(%rsp), %xmm1
    00005765: 	pand	(%rax), %xmm1
    00005769: 	addq	$0x10, %rax
    0000576d: 	paddq	%xmm1, %xmm0
    00005771: 	cmpq	%rbx, %rax
    00005774: 	jne	.Ltmp4589 # Offset: 22388
    00005776: 	movsd	init_value(%rip), %xmm1
    0000577e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00005786: 	jae	.Ltmp4590 # Offset: 22406
    0000578c: 	cvttsd2si	%xmm1, %rax
.Ltmp4609:
    00005791: 	andl	$0x3ff, %eax
    00005796: 	movdqa	%xmm0, %xmm1
    0000579a: 	imulq	$0x1f40, %rax, %rdx
    000057a1: 	psrldq	$0x8, %xmm1
    000057a6: 	paddq	%xmm1, %xmm0
    000057aa: 	movq	%xmm0, %rax
    000057af: 	cmpq	%rax, %rdx
    000057b2: 	je	.Ltmp4591 # Offset: 22450
    000057b4: 	movl	current_test(%rip), %edx
    000057ba: 	leaq	DATAat0x571d0(%rip), %rsi
    000057c1: 	movl	$0x1, %edi
    000057c6: 	xorl	%eax, %eax
    000057c8: 	callq	__printf_chk@PLT # Offset: 22472
    000057cd: 	movl	iterations(%rip), %ecx
.Ltmp4591:
    000057d3: 	addl	$0x1, 0x1c(%rsp)
    000057d8: 	movl	0x1c(%rsp), %eax
    000057dc: 	cmpl	%ecx, %eax
    000057de: 	jl	.Ltmp4592 # Offset: 22494
.Ltmp4588:
    000057e4: 	movq	%r12, %rsi
    000057e7: 	movq	%r15, %rdi
    000057ea: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 22506
    000057ef: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000057f6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000057fd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005804: 	je	.Ltmp4593 # Offset: 22532
.Ltmp4673:
    0000580a: 	movq	-0x20(%rax), %rdi
    0000580e: 	movq	%rdi, (%rsp)
    00005812: 	callq	clock@PLT # Offset: 22546
    00005817: 	movq	(%rsp), %rdi
    0000581b: 	pxor	%xmm0, %xmm0
    0000581f: 	movq	%rax, end_time(%rip)
    00005826: 	subq	start_time(%rip), %rax
    0000582d: 	cvtsi2sd	%rax, %xmm0
    00005832: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000583a: 	callq	_Z13record_resultdPKc # Offset: 22586
    0000583f: 	movq	0xa0(%rsp), %rdi
    00005847: 	cmpq	%r13, %rdi
    0000584a: 	je	.Ltmp4594 # Offset: 22602
    0000584c: 	movq	0xb0(%rsp), %rax
    00005854: 	leaq	0x1(%rax), %rsi
    00005858: 	callq	_ZdlPvm@PLT # Offset: 22616
.Ltmp4594:
    0000585d: 	leaq	DATAat0x5796c(%rip), %rdx
    00005864: 	movq	%r14, %rsi
    00005867: 	movq	%r12, %rdi
    0000586a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22634
    0000586f: 	movq	%r12, %rcx
    00005872: 	movl	$0x400, %edx
    00005877: 	movl	$0x1f40, %esi
    0000587c: 	movq	%rbp, %rdi
    0000587f: 	callq	_Z14test_variable1Im25custom_remainder_variableImEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 22655
    00005884: 	movq	0xa0(%rsp), %rdi
    0000588c: 	cmpq	%r13, %rdi
    0000588f: 	je	.Ltmp4595 # Offset: 22671
    00005891: 	movq	0xb0(%rsp), %rax
    00005899: 	leaq	0x1(%rax), %rsi
    0000589d: 	callq	_ZdlPvm@PLT # Offset: 22685
.Ltmp4595:
    000058a2: 	leaq	DATAat0x57988(%rip), %rdx
    000058a9: 	movq	%r14, %rsi
    000058ac: 	movq	%r12, %rdi
    000058af: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22703
    000058b4: 	callq	clock@PLT # Offset: 22708
    000058b9: 	movl	iterations(%rip), %ecx
    000058bf: 	movq	%rax, start_time(%rip)
    000058c6: 	testl	%ecx, %ecx
    000058c8: 	jle	.Ltmp4596 # Offset: 22728
    000058ce: 	movdqa	DATAat0x57f80(%rip), %xmm7
    000058d6: 	movl	$0x0, 0x1c(%rsp)
    000058de: 	movaps	%xmm7, (%rsp)
    000058e2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4600:
    000058e8: 	movq	%rbp, %rax
    000058eb: 	pxor	%xmm0, %xmm0
    000058ef: 	nop # Size: 1
.Ltmp4597:
    000058f0: 	movdqa	(%rsp), %xmm1
    000058f5: 	pand	(%rax), %xmm1
    000058f9: 	addq	$0x10, %rax
    000058fd: 	paddq	%xmm1, %xmm0
    00005901: 	cmpq	%rbx, %rax
    00005904: 	jne	.Ltmp4597 # Offset: 22788
    00005906: 	movsd	init_value(%rip), %xmm1
    0000590e: 	comisd	DATAat0x57bd8(%rip), %xmm1
    00005916: 	jae	.Ltmp4598 # Offset: 22806
    0000591c: 	cvttsd2si	%xmm1, %rax
.Ltmp4608:
    00005921: 	andl	$0x3ff, %eax
    00005926: 	movdqa	%xmm0, %xmm1
    0000592a: 	imulq	$0x1f40, %rax, %rdx
    00005931: 	psrldq	$0x8, %xmm1
    00005936: 	paddq	%xmm1, %xmm0
    0000593a: 	movq	%xmm0, %rax
    0000593f: 	cmpq	%rax, %rdx
    00005942: 	je	.Ltmp4599 # Offset: 22850
    00005944: 	movl	current_test(%rip), %edx
    0000594a: 	leaq	DATAat0x571d0(%rip), %rsi
    00005951: 	movl	$0x1, %edi
    00005956: 	xorl	%eax, %eax
    00005958: 	callq	__printf_chk@PLT # Offset: 22872
    0000595d: 	movl	iterations(%rip), %ecx
.Ltmp4599:
    00005963: 	addl	$0x1, 0x1c(%rsp)
    00005968: 	movl	0x1c(%rsp), %eax
    0000596c: 	cmpl	%ecx, %eax
    0000596e: 	jl	.Ltmp4600 # Offset: 22894
.Ltmp4596:
    00005974: 	movq	%r12, %rsi
    00005977: 	movq	%r15, %rdi
    0000597a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 22906
    0000597f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005986: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000598d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005994: 	je	.Ltmp4601 # Offset: 22932
.Ltmp4672:
    0000599a: 	movq	-0x20(%rax), %rbp
    0000599e: 	callq	clock@PLT # Offset: 22942
    000059a3: 	pxor	%xmm0, %xmm0
    000059a7: 	movq	%rax, end_time(%rip)
    000059ae: 	movq	%rbp, %rdi
    000059b1: 	subq	start_time(%rip), %rax
    000059b8: 	cvtsi2sd	%rax, %xmm0
    000059bd: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000059c5: 	callq	_Z13record_resultdPKc # Offset: 22981
    000059ca: 	movq	0xa0(%rsp), %rdi
    000059d2: 	cmpq	%r13, %rdi
    000059d5: 	je	.Ltmp4602 # Offset: 22997
    000059d7: 	movq	0xb0(%rsp), %rax
    000059df: 	leaq	0x1(%rax), %rsi
    000059e3: 	callq	_ZdlPvm@PLT # Offset: 23011
.Ltmp4602:
    000059e8: 	leaq	DATAat0x579a4(%rip), %rdx
    000059ef: 	movq	%r14, %rsi
    000059f2: 	movq	%r12, %rdi
    000059f5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 23029
    000059fa: 	movl	iterations(%rip), %edx
    00005a00: 	xorl	%r8d, %r8d
    00005a03: 	xorl	%ecx, %ecx
    00005a05: 	movl	$0x1f40, %esi
    00005a0a: 	movq	0xa0(%rsp), %rdi
    00005a12: 	callq	_Z9summarizePKciiii # Offset: 23058
    00005a17: 	movq	0xa0(%rsp), %rdi
    00005a1f: 	cmpq	%r13, %rdi
    00005a22: 	je	.Ltmp4603 # Offset: 23074
    00005a24: 	movq	0xb0(%rsp), %rax
    00005a2c: 	leaq	0x1(%rax), %rsi
    00005a30: 	callq	_ZdlPvm@PLT # Offset: 23088
.Ltmp4603:
    00005a35: 	movq	0x80(%rsp), %rdi
    00005a3d: 	leaq	0x90(%rsp), %rax
    00005a45: 	cmpq	%rax, %rdi
    00005a48: 	je	.Ltmp4604 # Offset: 23112
    00005a4a: 	movq	0x90(%rsp), %rax
    00005a52: 	leaq	0x1(%rax), %rsi
    00005a56: 	callq	_ZdlPvm@PLT # Offset: 23126
.Ltmp4604:
    00005a5b: 	movq	0x60(%rsp), %rdi
    00005a60: 	leaq	0x70(%rsp), %rax
    00005a65: 	cmpq	%rax, %rdi
    00005a68: 	je	.Ltmp4605 # Offset: 23144
    00005a6a: 	movq	0x70(%rsp), %rax
    00005a6f: 	leaq	0x1(%rax), %rsi
    00005a73: 	callq	_ZdlPvm@PLT # Offset: 23155
.Ltmp4605:
    00005a78: 	movq	0x40(%rsp), %rdi
    00005a7d: 	leaq	0x50(%rsp), %rax
    00005a82: 	cmpq	%rax, %rdi
    00005a85: 	je	.Ltmp4606 # Offset: 23173
    00005a87: 	movq	0x50(%rsp), %rax
    00005a8c: 	leaq	0x1(%rax), %rsi
    00005a90: 	callq	_ZdlPvm@PLT # Offset: 23184
.Ltmp4606:
    00005a95: 	movq	0xfac8(%rsp), %rax
    00005a9d: 	subq	%fs:0x28, %rax
    00005aa6: 	jne	.Ltmp4607 # Offset: 23206
    00005aac: 	addq	$0xfad8, %rsp
    00005ab3: 	popq	%rbx
    00005ab4: 	popq	%rbp
    00005ab5: 	popq	%r12
    00005ab7: 	popq	%r13
    00005ab9: 	popq	%r14
    00005abb: 	popq	%r15
    00005abd: 	retq # Offset: 23229
    00005abe: 	nop # Size: 2
.Ltmp4598:
    00005ac0: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005ac8: 	movabsq	$-0x8000000000000000, %rdi
    00005ad2: 	cvttsd2si	%xmm1, %rax
    00005ad7: 	xorq	%rdi, %rax
    00005ada: 	jmp	.Ltmp4608 # Offset: 23258
    00005adf: 	nop # Size: 1
.Ltmp4590:
    00005ae0: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005ae8: 	movabsq	$-0x8000000000000000, %rdi
    00005af2: 	cvttsd2si	%xmm1, %rax
    00005af7: 	xorq	%rdi, %rax
    00005afa: 	jmp	.Ltmp4609 # Offset: 23290
    00005aff: 	nop # Size: 1
.Ltmp4583:
    00005b00: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005b08: 	movabsq	$-0x8000000000000000, %rdi
    00005b12: 	cvttsd2si	%xmm1, %rax
    00005b17: 	xorq	%rdi, %rax
    00005b1a: 	jmp	.Ltmp4610 # Offset: 23322
    00005b1f: 	nop # Size: 1
.Ltmp4576:
    00005b20: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005b28: 	movabsq	$-0x8000000000000000, %rdi
    00005b32: 	cvttsd2si	%xmm1, %rax
    00005b37: 	xorq	%rdi, %rax
    00005b3a: 	jmp	.Ltmp4611 # Offset: 23354
    00005b3f: 	nop # Size: 1
.Ltmp4569:
    00005b40: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005b48: 	movabsq	$-0x8000000000000000, %rdi
    00005b52: 	cvttsd2si	%xmm1, %rax
    00005b57: 	xorq	%rdi, %rax
    00005b5a: 	jmp	.Ltmp4612 # Offset: 23386
    00005b5f: 	nop # Size: 1
.Ltmp4560:
    00005b60: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005b68: 	movabsq	$-0x8000000000000000, %rdi
    00005b72: 	cvttsd2si	%xmm1, %rax
    00005b77: 	xorq	%rdi, %rax
    00005b7a: 	jmp	.Ltmp4613 # Offset: 23418
    00005b7f: 	nop # Size: 1
.Ltmp4553:
    00005b80: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005b88: 	movabsq	$-0x8000000000000000, %rdi
    00005b92: 	cvttsd2si	%xmm1, %rax
    00005b97: 	xorq	%rdi, %rax
    00005b9a: 	jmp	.Ltmp4614 # Offset: 23450
    00005b9f: 	nop # Size: 1
.Ltmp4546:
    00005ba0: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005ba8: 	movabsq	$-0x8000000000000000, %rdi
    00005bb2: 	cvttsd2si	%xmm1, %rax
    00005bb7: 	xorq	%rdi, %rax
    00005bba: 	jmp	.Ltmp4615 # Offset: 23482
    00005bbf: 	nop # Size: 1
.Ltmp4539:
    00005bc0: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005bc8: 	movabsq	$-0x8000000000000000, %rdi
    00005bd2: 	cvttsd2si	%xmm1, %rax
    00005bd7: 	xorq	%rdi, %rax
    00005bda: 	jmp	.Ltmp4616 # Offset: 23514
    00005bdf: 	nop # Size: 1
.Ltmp4532:
    00005be0: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005be8: 	movabsq	$-0x8000000000000000, %rdi
    00005bf2: 	cvttsd2si	%xmm1, %rax
    00005bf7: 	xorq	%rdi, %rax
    00005bfa: 	jmp	.Ltmp4617 # Offset: 23546
    00005bff: 	nop # Size: 1
.Ltmp4524:
    00005c00: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005c08: 	movabsq	$-0x8000000000000000, %rdi
    00005c12: 	cvttsd2si	%xmm1, %rax
    00005c17: 	xorq	%rdi, %rax
    00005c1a: 	jmp	.Ltmp4618 # Offset: 23578
    00005c1f: 	nop # Size: 1
.Ltmp4517:
    00005c20: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005c28: 	movabsq	$-0x8000000000000000, %rdi
    00005c32: 	cvttsd2si	%xmm1, %rax
    00005c37: 	xorq	%rdi, %rax
    00005c3a: 	jmp	.Ltmp4619 # Offset: 23610
    00005c3f: 	nop # Size: 1
.Ltmp4510:
    00005c40: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005c48: 	movabsq	$-0x8000000000000000, %rdi
    00005c52: 	cvttsd2si	%xmm1, %rax
    00005c57: 	xorq	%rdi, %rax
    00005c5a: 	jmp	.Ltmp4620 # Offset: 23642
    00005c5f: 	nop # Size: 1
.Ltmp4503:
    00005c60: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005c68: 	movabsq	$-0x8000000000000000, %rdi
    00005c72: 	cvttsd2si	%xmm1, %rax
    00005c77: 	xorq	%rdi, %rax
    00005c7a: 	jmp	.Ltmp4621 # Offset: 23674
    00005c7f: 	nop # Size: 1
.Ltmp4496:
    00005c80: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005c88: 	movabsq	$-0x8000000000000000, %rdi
    00005c92: 	cvttsd2si	%xmm1, %rax
    00005c97: 	xorq	%rdi, %rax
    00005c9a: 	jmp	.Ltmp4622 # Offset: 23706
    00005c9f: 	nop # Size: 1
.Ltmp4488:
    00005ca0: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005ca8: 	movabsq	$-0x8000000000000000, %rdi
    00005cb2: 	cvttsd2si	%xmm1, %rax
    00005cb7: 	xorq	%rdi, %rax
    00005cba: 	jmp	.Ltmp4623 # Offset: 23738
    00005cbf: 	nop # Size: 1
.Ltmp4481:
    00005cc0: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005cc8: 	movabsq	$-0x8000000000000000, %rdi
    00005cd2: 	cvttsd2si	%xmm1, %rax
    00005cd7: 	xorq	%rdi, %rax
    00005cda: 	jmp	.Ltmp4624 # Offset: 23770
    00005cdf: 	nop # Size: 1
.Ltmp4474:
    00005ce0: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005ce8: 	movabsq	$-0x8000000000000000, %rdi
    00005cf2: 	cvttsd2si	%xmm1, %rax
    00005cf7: 	xorq	%rdi, %rax
    00005cfa: 	jmp	.Ltmp4625 # Offset: 23802
    00005cff: 	nop # Size: 1
.Ltmp4467:
    00005d00: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005d08: 	movabsq	$-0x8000000000000000, %rdi
    00005d12: 	cvttsd2si	%xmm1, %rax
    00005d17: 	xorq	%rdi, %rax
    00005d1a: 	jmp	.Ltmp4626 # Offset: 23834
    00005d1f: 	nop # Size: 1
.Ltmp4460:
    00005d20: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005d28: 	movabsq	$-0x8000000000000000, %rdi
    00005d32: 	cvttsd2si	%xmm1, %rax
    00005d37: 	xorq	%rdi, %rax
    00005d3a: 	jmp	.Ltmp4627 # Offset: 23866
    00005d3f: 	nop # Size: 1
.Ltmp4451:
    00005d40: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005d48: 	movabsq	$-0x8000000000000000, %rdi
    00005d52: 	cvttsd2si	%xmm1, %rax
    00005d57: 	xorq	%rdi, %rax
    00005d5a: 	jmp	.Ltmp4628 # Offset: 23898
    00005d5f: 	nop # Size: 1
.Ltmp4443:
    00005d60: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005d68: 	movabsq	$-0x8000000000000000, %rdi
    00005d72: 	cvttsd2si	%xmm1, %rax
    00005d77: 	xorq	%rdi, %rax
    00005d7a: 	jmp	.Ltmp4629 # Offset: 23930
    00005d7f: 	nop # Size: 1
.Ltmp4434:
    00005d80: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005d88: 	movabsq	$-0x8000000000000000, %rdi
    00005d92: 	cvttsd2si	%xmm1, %rax
    00005d97: 	xorq	%rdi, %rax
    00005d9a: 	jmp	.Ltmp4630 # Offset: 23962
    00005d9f: 	nop # Size: 1
.Ltmp4427:
    00005da0: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005da8: 	movabsq	$-0x8000000000000000, %rdi
    00005db2: 	cvttsd2si	%xmm1, %rax
    00005db7: 	xorq	%rdi, %rax
    00005dba: 	jmp	.Ltmp4631 # Offset: 23994
    00005dbf: 	nop # Size: 1
.Ltmp4420:
    00005dc0: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005dc8: 	movabsq	$-0x8000000000000000, %rdi
    00005dd2: 	cvttsd2si	%xmm1, %rax
    00005dd7: 	xorq	%rdi, %rax
    00005dda: 	jmp	.Ltmp4632 # Offset: 24026
    00005ddf: 	nop # Size: 1
.Ltmp4413:
    00005de0: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005de8: 	movabsq	$-0x8000000000000000, %rdi
    00005df2: 	cvttsd2si	%xmm1, %rax
    00005df7: 	xorq	%rdi, %rax
    00005dfa: 	jmp	.Ltmp4633 # Offset: 24058
    00005dff: 	nop # Size: 1
.Ltmp4406:
    00005e00: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005e08: 	movabsq	$-0x8000000000000000, %rdi
    00005e12: 	cvttsd2si	%xmm1, %rax
    00005e17: 	xorq	%rdi, %rax
    00005e1a: 	jmp	.Ltmp4634 # Offset: 24090
    00005e1f: 	nop # Size: 1
.Ltmp4398:
    00005e20: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005e28: 	movabsq	$-0x8000000000000000, %rdi
    00005e32: 	cvttsd2si	%xmm1, %rax
    00005e37: 	xorq	%rdi, %rax
    00005e3a: 	jmp	.Ltmp4635 # Offset: 24122
    00005e3f: 	nop # Size: 1
.Ltmp4391:
    00005e40: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005e48: 	movabsq	$-0x8000000000000000, %rdi
    00005e52: 	cvttsd2si	%xmm1, %rax
    00005e57: 	xorq	%rdi, %rax
    00005e5a: 	jmp	.Ltmp4636 # Offset: 24154
    00005e5f: 	nop # Size: 1
.Ltmp4382:
    00005e60: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005e68: 	movabsq	$-0x8000000000000000, %rdi
    00005e72: 	cvttsd2si	%xmm1, %rax
    00005e77: 	xorq	%rdi, %rax
    00005e7a: 	jmp	.Ltmp4637 # Offset: 24186
    00005e7f: 	nop # Size: 1
.Ltmp4374:
    00005e80: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005e88: 	movabsq	$-0x8000000000000000, %rdi
    00005e92: 	cvttsd2si	%xmm1, %rax
    00005e97: 	xorq	%rdi, %rax
    00005e9a: 	jmp	.Ltmp4638 # Offset: 24218
    00005e9f: 	nop # Size: 1
.Ltmp4366:
    00005ea0: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005ea8: 	movabsq	$-0x8000000000000000, %rdi
    00005eb2: 	cvttsd2si	%xmm1, %rax
    00005eb7: 	xorq	%rdi, %rax
    00005eba: 	jmp	.Ltmp4639 # Offset: 24250
    00005ebf: 	nop # Size: 1
.Ltmp4359:
    00005ec0: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005ec8: 	movabsq	$-0x8000000000000000, %rdi
    00005ed2: 	cvttsd2si	%xmm1, %rax
    00005ed7: 	xorq	%rdi, %rax
    00005eda: 	jmp	.Ltmp4640 # Offset: 24282
    00005edf: 	nop # Size: 1
.Ltmp4352:
    00005ee0: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005ee8: 	movabsq	$-0x8000000000000000, %rax
    00005ef2: 	cvttsd2si	%xmm1, %rdx
    00005ef7: 	xorq	%rax, %rdx
    00005efa: 	jmp	.Ltmp4641 # Offset: 24314
    00005eff: 	nop # Size: 1
.Ltmp4344:
    00005f00: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005f08: 	movabsq	$-0x8000000000000000, %rax
    00005f12: 	cvttsd2si	%xmm1, %rdx
    00005f17: 	xorq	%rax, %rdx
    00005f1a: 	jmp	.Ltmp4642 # Offset: 24346
    00005f1f: 	nop # Size: 1
.Ltmp4337:
    00005f20: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005f28: 	movabsq	$-0x8000000000000000, %rax
    00005f32: 	cvttsd2si	%xmm1, %rdx
    00005f37: 	xorq	%rax, %rdx
    00005f3a: 	jmp	.Ltmp4643 # Offset: 24378
    00005f3f: 	nop # Size: 1
.Ltmp4330:
    00005f40: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005f48: 	movabsq	$-0x8000000000000000, %rax
    00005f52: 	cvttsd2si	%xmm1, %rdx
    00005f57: 	xorq	%rax, %rdx
    00005f5a: 	jmp	.Ltmp4644 # Offset: 24410
    00005f5f: 	nop # Size: 1
.Ltmp4323:
    00005f60: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00005f68: 	movabsq	$-0x8000000000000000, %rax
    00005f72: 	cvttsd2si	%xmm1, %rdx
    00005f77: 	xorq	%rax, %rdx
    00005f7a: 	jmp	.Ltmp4645 # Offset: 24442
    00005f7f: 	nop # Size: 1
.Ltmp4316:
    00005f80: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00005f88: 	movabsq	$-0x8000000000000000, %rdi
    00005f92: 	cvttsd2si	%xmm0, %rax
    00005f97: 	xorq	%rdi, %rax
    00005f9a: 	jmp	.Ltmp4646 # Offset: 24474
    00005f9f: 	nop # Size: 1
.Ltmp4307:
    00005fa0: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00005fa8: 	movabsq	$-0x8000000000000000, %rdi
    00005fb2: 	cvttsd2si	%xmm0, %rax
    00005fb7: 	xorq	%rdi, %rax
    00005fba: 	jmp	.Ltmp4647 # Offset: 24506
    00005fbf: 	nop # Size: 1
.Ltmp4300:
    00005fc0: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00005fc8: 	movabsq	$-0x8000000000000000, %rdi
    00005fd2: 	cvttsd2si	%xmm0, %rax
    00005fd7: 	xorq	%rdi, %rax
    00005fda: 	jmp	.Ltmp4648 # Offset: 24538
    00005fdf: 	nop # Size: 1
.Ltmp4292:
    00005fe0: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00005fe8: 	movabsq	$-0x8000000000000000, %rdi
    00005ff2: 	cvttsd2si	%xmm0, %rax
    00005ff7: 	xorq	%rdi, %rax
    00005ffa: 	jmp	.Ltmp4649 # Offset: 24570
    00005fff: 	nop # Size: 1
.Ltmp4285:
    00006000: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00006008: 	movabsq	$-0x8000000000000000, %rdi
    00006012: 	cvttsd2si	%xmm0, %rax
    00006017: 	xorq	%rdi, %rax
    0000601a: 	jmp	.Ltmp4650 # Offset: 24602
    0000601f: 	nop # Size: 1
.Ltmp4278:
    00006020: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00006028: 	movabsq	$-0x8000000000000000, %rdi
    00006032: 	cvttsd2si	%xmm0, %rax
    00006037: 	xorq	%rdi, %rax
    0000603a: 	jmp	.Ltmp4651 # Offset: 24634
    0000603f: 	nop # Size: 1
.Ltmp4270:
    00006040: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00006048: 	movabsq	$-0x8000000000000000, %rdi
    00006052: 	cvttsd2si	%xmm0, %rax
    00006057: 	xorq	%rdi, %rax
    0000605a: 	jmp	.Ltmp4652 # Offset: 24666
    0000605f: 	nop # Size: 1
.Ltmp4263:
    00006060: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00006068: 	movabsq	$-0x8000000000000000, %rdi
    00006072: 	cvttsd2si	%xmm0, %rax
    00006077: 	xorq	%rdi, %rax
    0000607a: 	jmp	.Ltmp4653 # Offset: 24698
    0000607f: 	nop # Size: 1
.Ltmp4255:
    00006080: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00006088: 	movabsq	$-0x8000000000000000, %rcx
    00006092: 	cvttsd2si	%xmm0, %rax
    00006097: 	xorq	%rcx, %rax
    0000609a: 	jmp	.Ltmp4654 # Offset: 24730
    0000609f: 	nop # Size: 1
.Ltmp4247:
    000060a0: 	subsd	DATAat0x57bd8(%rip), %xmm0
    000060a8: 	movabsq	$-0x8000000000000000, %rcx
    000060b2: 	cvttsd2si	%xmm0, %rax
    000060b7: 	xorq	%rcx, %rax
    000060ba: 	jmp	.Ltmp4655 # Offset: 24762
    000060bf: 	nop # Size: 1
.Ltmp4239:
    000060c0: 	subsd	DATAat0x57bd8(%rip), %xmm0
    000060c8: 	movabsq	$-0x8000000000000000, %rsi
    000060d2: 	cvttsd2si	%xmm0, %rax
    000060d7: 	xorq	%rsi, %rax
    000060da: 	jmp	.Ltmp4656 # Offset: 24794
    000060df: 	nop # Size: 1
.Ltmp4231:
    000060e0: 	subsd	DATAat0x57bd8(%rip), %xmm0
    000060e8: 	movabsq	$-0x8000000000000000, %rsi
    000060f2: 	cvttsd2si	%xmm0, %rax
    000060f7: 	xorq	%rsi, %rax
    000060fa: 	jmp	.Ltmp4657 # Offset: 24826
    000060ff: 	nop # Size: 1
.Ltmp4223:
    00006100: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00006108: 	movabsq	$-0x8000000000000000, %rcx
    00006112: 	cvttsd2si	%xmm0, %rax
    00006117: 	xorq	%rcx, %rax
    0000611a: 	jmp	.Ltmp4658 # Offset: 24858
    0000611f: 	nop # Size: 1
.Ltmp4216:
    00006120: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00006128: 	movabsq	$-0x8000000000000000, %rcx
    00006132: 	cvttsd2si	%xmm0, %rax
    00006137: 	xorq	%rcx, %rax
    0000613a: 	jmp	.Ltmp4659 # Offset: 24890
    0000613f: 	nop # Size: 1
.Ltmp4209:
    00006140: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00006148: 	movabsq	$-0x8000000000000000, %rcx
    00006152: 	cvttsd2si	%xmm0, %rax
    00006157: 	xorq	%rcx, %rax
    0000615a: 	jmp	.Ltmp4660 # Offset: 24922
    0000615f: 	nop # Size: 1
.Ltmp4200:
    00006160: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00006168: 	movabsq	$-0x8000000000000000, %rcx
    00006172: 	cvttsd2si	%xmm0, %rax
    00006177: 	xorq	%rcx, %rax
    0000617a: 	jmp	.Ltmp4661 # Offset: 24954
    0000617f: 	nop # Size: 1
.Ltmp4191:
    00006180: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00006188: 	movabsq	$-0x8000000000000000, %rsi
    00006192: 	cvttsd2si	%xmm0, %rax
    00006197: 	xorq	%rsi, %rax
    0000619a: 	jmp	.Ltmp4662 # Offset: 24986
    0000619f: 	nop # Size: 1
.Ltmp4183:
    000061a0: 	subsd	DATAat0x57bd8(%rip), %xmm0
    000061a8: 	movabsq	$-0x8000000000000000, %rdi
    000061b2: 	cvttsd2si	%xmm0, %rax
    000061b7: 	xorq	%rdi, %rax
    000061ba: 	jmp	.Ltmp4663 # Offset: 25018
    000061bf: 	nop # Size: 1
.Ltmp4175:
    000061c0: 	subsd	DATAat0x57bd8(%rip), %xmm0
    000061c8: 	movabsq	$-0x8000000000000000, %rdi
    000061d2: 	cvttsd2si	%xmm0, %rax
    000061d7: 	xorq	%rdi, %rax
    000061da: 	jmp	.Ltmp4664 # Offset: 25050
    000061df: 	nop # Size: 1
.Ltmp4168:
    000061e0: 	subsd	DATAat0x57bd8(%rip), %xmm0
    000061e8: 	movabsq	$-0x8000000000000000, %rdi
    000061f2: 	cvttsd2si	%xmm0, %rax
    000061f7: 	xorq	%rdi, %rax
    000061fa: 	jmp	.Ltmp4665 # Offset: 25082
    000061ff: 	nop # Size: 1
.Ltmp4160:
    00006200: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00006208: 	movabsq	$-0x8000000000000000, %rdi
    00006212: 	cvttsd2si	%xmm0, %rax
    00006217: 	xorq	%rdi, %rax
    0000621a: 	jmp	.Ltmp4666 # Offset: 25114
    0000621f: 	nop # Size: 1
.Ltmp4152:
    00006220: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00006228: 	movabsq	$-0x8000000000000000, %rdi
    00006232: 	cvttsd2si	%xmm0, %rax
    00006237: 	xorq	%rdi, %rax
    0000623a: 	jmp	.Ltmp4667 # Offset: 25146
    0000623f: 	nop # Size: 1
.Ltmp4144:
    00006240: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00006248: 	movabsq	$-0x8000000000000000, %rdi
    00006252: 	cvttsd2si	%xmm0, %rax
    00006257: 	xorq	%rdi, %rax
    0000625a: 	jmp	.Ltmp4668 # Offset: 25178
    0000625f: 	nop # Size: 1
.Ltmp4137:
    00006260: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00006268: 	movabsq	$-0x8000000000000000, %rdi
    00006272: 	cvttsd2si	%xmm0, %rax
    00006277: 	xorq	%rdi, %rax
    0000627a: 	jmp	.Ltmp4669 # Offset: 25210
.Ltmp4121:
    0000627f: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00006287: 	cvttsd2si	%xmm0, %rax
    0000628c: 	btcq	$0x3f, %rax
    00006291: 	jmp	.Ltmp4670 # Offset: 25233
.Ltmp4140:
    00006296: 	movq	-0x8(%rdx), %rax
    0000629a: 	addq	$0x200, %rax
    000062a0: 	jmp	.Ltmp4671 # Offset: 25248
.Ltmp4601:
    000062a5: 	movq	-0x8(%rdx), %rax
    000062a9: 	addq	$0x200, %rax
    000062af: 	jmp	.Ltmp4672 # Offset: 25263
.Ltmp4593:
    000062b4: 	movq	-0x8(%rdx), %rax
    000062b8: 	addq	$0x200, %rax
    000062be: 	jmp	.Ltmp4673 # Offset: 25278
.Ltmp4586:
    000062c3: 	movq	-0x8(%rdx), %rax
    000062c7: 	addq	$0x200, %rax
    000062cd: 	jmp	.Ltmp4674 # Offset: 25293
.Ltmp4579:
    000062d2: 	movq	-0x8(%rdx), %rax
    000062d6: 	addq	$0x200, %rax
    000062dc: 	jmp	.Ltmp4675 # Offset: 25308
.Ltmp4572:
    000062e1: 	movq	-0x8(%rdx), %rax
    000062e5: 	addq	$0x200, %rax
    000062eb: 	jmp	.Ltmp4676 # Offset: 25323
.Ltmp4563:
    000062f0: 	movq	-0x8(%rdx), %rax
    000062f4: 	addq	$0x200, %rax
    000062fa: 	jmp	.Ltmp4677 # Offset: 25338
.Ltmp4556:
    000062ff: 	movq	-0x8(%rdx), %rax
    00006303: 	addq	$0x200, %rax
    00006309: 	jmp	.Ltmp4678 # Offset: 25353
.Ltmp4549:
    0000630e: 	movq	-0x8(%rdx), %rax
    00006312: 	addq	$0x200, %rax
    00006318: 	jmp	.Ltmp4679 # Offset: 25368
.Ltmp4542:
    0000631d: 	movq	-0x8(%rdx), %rax
    00006321: 	addq	$0x200, %rax
    00006327: 	jmp	.Ltmp4680 # Offset: 25383
.Ltmp4535:
    0000632c: 	movq	-0x8(%rdx), %rax
    00006330: 	addq	$0x200, %rax
    00006336: 	jmp	.Ltmp4681 # Offset: 25398
.Ltmp4527:
    0000633b: 	movq	-0x8(%rdx), %rax
    0000633f: 	addq	$0x200, %rax
    00006345: 	jmp	.Ltmp4682 # Offset: 25413
.Ltmp4520:
    0000634a: 	movq	-0x8(%rdx), %rax
    0000634e: 	addq	$0x200, %rax
    00006354: 	jmp	.Ltmp4683 # Offset: 25428
.Ltmp4513:
    00006359: 	movq	-0x8(%rdx), %rax
    0000635d: 	addq	$0x200, %rax
    00006363: 	jmp	.Ltmp4684 # Offset: 25443
.Ltmp4506:
    00006368: 	movq	-0x8(%rdx), %rax
    0000636c: 	addq	$0x200, %rax
    00006372: 	jmp	.Ltmp4685 # Offset: 25458
.Ltmp4499:
    00006377: 	movq	-0x8(%rdx), %rax
    0000637b: 	addq	$0x200, %rax
    00006381: 	jmp	.Ltmp4686 # Offset: 25473
.Ltmp4491:
    00006386: 	movq	-0x8(%rdx), %rax
    0000638a: 	addq	$0x200, %rax
    00006390: 	jmp	.Ltmp4687 # Offset: 25488
.Ltmp4484:
    00006395: 	movq	-0x8(%rdx), %rax
    00006399: 	addq	$0x200, %rax
    0000639f: 	jmp	.Ltmp4688 # Offset: 25503
.Ltmp4477:
    000063a4: 	movq	-0x8(%rdx), %rax
    000063a8: 	addq	$0x200, %rax
    000063ae: 	jmp	.Ltmp4689 # Offset: 25518
.Ltmp4470:
    000063b3: 	movq	-0x8(%rdx), %rax
    000063b7: 	addq	$0x200, %rax
    000063bd: 	jmp	.Ltmp4690 # Offset: 25533
.Ltmp4463:
    000063c2: 	movq	-0x8(%rdx), %rax
    000063c6: 	addq	$0x200, %rax
    000063cc: 	jmp	.Ltmp4691 # Offset: 25548
.Ltmp4454:
    000063d1: 	movq	-0x8(%rdx), %rax
    000063d5: 	addq	$0x200, %rax
    000063db: 	jmp	.Ltmp4692 # Offset: 25563
.Ltmp4446:
    000063e0: 	movq	-0x8(%rdx), %rax
    000063e4: 	addq	$0x200, %rax
    000063ea: 	jmp	.Ltmp4693 # Offset: 25578
.Ltmp4437:
    000063ef: 	movq	-0x8(%rdx), %rax
    000063f3: 	addq	$0x200, %rax
    000063f9: 	jmp	.Ltmp4694 # Offset: 25593
.Ltmp4430:
    000063fe: 	movq	-0x8(%rdx), %rax
    00006402: 	addq	$0x200, %rax
    00006408: 	jmp	.Ltmp4695 # Offset: 25608
.Ltmp4423:
    0000640d: 	movq	-0x8(%rdx), %rax
    00006411: 	addq	$0x200, %rax
    00006417: 	jmp	.Ltmp4696 # Offset: 25623
.Ltmp4416:
    0000641c: 	movq	-0x8(%rdx), %rax
    00006420: 	addq	$0x200, %rax
    00006426: 	jmp	.Ltmp4697 # Offset: 25638
.Ltmp4409:
    0000642b: 	movq	-0x8(%rdx), %rax
    0000642f: 	addq	$0x200, %rax
    00006435: 	jmp	.Ltmp4698 # Offset: 25653
.Ltmp4401:
    0000643a: 	movq	-0x8(%rdx), %rax
    0000643e: 	addq	$0x200, %rax
    00006444: 	jmp	.Ltmp4699 # Offset: 25668
.Ltmp4394:
    00006449: 	movq	-0x8(%rdx), %rax
    0000644d: 	addq	$0x200, %rax
    00006453: 	jmp	.Ltmp4700 # Offset: 25683
.Ltmp4385:
    00006458: 	movq	-0x8(%rdx), %rax
    0000645c: 	addq	$0x200, %rax
    00006462: 	jmp	.Ltmp4701 # Offset: 25698
.Ltmp4377:
    00006467: 	movq	-0x8(%rdx), %rax
    0000646b: 	addq	$0x200, %rax
    00006471: 	jmp	.Ltmp4702 # Offset: 25713
.Ltmp4369:
    00006476: 	movq	-0x8(%rdx), %rax
    0000647a: 	addq	$0x200, %rax
    00006480: 	jmp	.Ltmp4703 # Offset: 25728
.Ltmp4362:
    00006485: 	movq	-0x8(%rdx), %rax
    00006489: 	addq	$0x200, %rax
    0000648f: 	jmp	.Ltmp4704 # Offset: 25743
.Ltmp4355:
    00006494: 	movq	-0x8(%rdx), %rax
    00006498: 	addq	$0x200, %rax
    0000649e: 	jmp	.Ltmp4705 # Offset: 25758
.Ltmp4347:
    000064a3: 	movq	-0x8(%rdx), %rax
    000064a7: 	addq	$0x200, %rax
    000064ad: 	jmp	.Ltmp4706 # Offset: 25773
.Ltmp4340:
    000064b2: 	movq	-0x8(%rdx), %rax
    000064b6: 	addq	$0x200, %rax
    000064bc: 	jmp	.Ltmp4707 # Offset: 25788
.Ltmp4333:
    000064c1: 	movq	-0x8(%rdx), %rax
    000064c5: 	addq	$0x200, %rax
    000064cb: 	jmp	.Ltmp4708 # Offset: 25803
.Ltmp4326:
    000064d0: 	movq	-0x8(%rdx), %rax
    000064d4: 	addq	$0x200, %rax
    000064da: 	jmp	.Ltmp4709 # Offset: 25818
.Ltmp4319:
    000064df: 	movq	-0x8(%rdx), %rax
    000064e3: 	addq	$0x200, %rax
    000064e9: 	jmp	.Ltmp4710 # Offset: 25833
.Ltmp4310:
    000064ee: 	movq	-0x8(%rdx), %rax
    000064f2: 	addq	$0x200, %rax
    000064f8: 	jmp	.Ltmp4711 # Offset: 25848
.Ltmp4303:
    000064fd: 	movq	-0x8(%rdx), %rax
    00006501: 	addq	$0x200, %rax
    00006507: 	jmp	.Ltmp4712 # Offset: 25863
.Ltmp4295:
    0000650c: 	movq	-0x8(%rdx), %rax
    00006510: 	addq	$0x200, %rax
    00006516: 	jmp	.Ltmp4713 # Offset: 25878
.Ltmp4288:
    0000651b: 	movq	-0x8(%rdx), %rax
    0000651f: 	addq	$0x200, %rax
    00006525: 	jmp	.Ltmp4714 # Offset: 25893
.Ltmp4281:
    0000652a: 	movq	-0x8(%rdx), %rax
    0000652e: 	addq	$0x200, %rax
    00006534: 	jmp	.Ltmp4715 # Offset: 25908
.Ltmp4273:
    00006539: 	movq	-0x8(%rdx), %rax
    0000653d: 	addq	$0x200, %rax
    00006543: 	jmp	.Ltmp4716 # Offset: 25923
.Ltmp4266:
    00006548: 	movq	-0x8(%rdx), %rax
    0000654c: 	addq	$0x200, %rax
    00006552: 	jmp	.Ltmp4717 # Offset: 25938
.Ltmp4258:
    00006557: 	movq	-0x8(%rdx), %rax
    0000655b: 	addq	$0x200, %rax
    00006561: 	jmp	.Ltmp4718 # Offset: 25953
.Ltmp4250:
    00006566: 	movq	-0x8(%rdx), %rax
    0000656a: 	addq	$0x200, %rax
    00006570: 	jmp	.Ltmp4719 # Offset: 25968
.Ltmp4242:
    00006575: 	movq	-0x8(%rdx), %rax
    00006579: 	addq	$0x200, %rax
    0000657f: 	jmp	.Ltmp4720 # Offset: 25983
.Ltmp4234:
    00006584: 	movq	-0x8(%rdx), %rax
    00006588: 	addq	$0x200, %rax
    0000658e: 	jmp	.Ltmp4721 # Offset: 25998
.Ltmp4226:
    00006593: 	movq	-0x8(%rdx), %rax
    00006597: 	addq	$0x200, %rax
    0000659d: 	jmp	.Ltmp4722 # Offset: 26013
.Ltmp4219:
    000065a2: 	movq	-0x8(%rdx), %rax
    000065a6: 	addq	$0x200, %rax
    000065ac: 	jmp	.Ltmp4723 # Offset: 26028
.Ltmp4212:
    000065b1: 	movq	-0x8(%rdx), %rax
    000065b5: 	addq	$0x200, %rax
    000065bb: 	jmp	.Ltmp4724 # Offset: 26043
.Ltmp4203:
    000065c0: 	movq	-0x8(%rdx), %rax
    000065c4: 	addq	$0x200, %rax
    000065ca: 	jmp	.Ltmp4725 # Offset: 26058
.Ltmp4194:
    000065cf: 	movq	-0x8(%rdx), %rax
    000065d3: 	addq	$0x200, %rax
    000065d9: 	jmp	.Ltmp4726 # Offset: 26073
.Ltmp4186:
    000065de: 	movq	-0x8(%rdx), %rax
    000065e2: 	addq	$0x200, %rax
    000065e8: 	jmp	.Ltmp4727 # Offset: 26088
.Ltmp4178:
    000065ed: 	movq	-0x8(%rdx), %rax
    000065f1: 	addq	$0x200, %rax
    000065f7: 	jmp	.Ltmp4728 # Offset: 26103
.Ltmp4171:
    000065fc: 	movq	-0x8(%rdx), %rax
    00006600: 	addq	$0x200, %rax
    00006606: 	jmp	.Ltmp4729 # Offset: 26118
.Ltmp4163:
    0000660b: 	movq	-0x8(%rdx), %rax
    0000660f: 	addq	$0x200, %rax
    00006615: 	jmp	.Ltmp4730 # Offset: 26133
.Ltmp4155:
    0000661a: 	movq	-0x8(%rdx), %rax
    0000661e: 	addq	$0x200, %rax
    00006624: 	jmp	.Ltmp4731 # Offset: 26148
.Ltmp4147:
    00006629: 	movq	-0x8(%rdx), %rax
    0000662d: 	addq	$0x200, %rax
    00006633: 	jmp	.Ltmp4732 # Offset: 26163
.Ltmp4607:
    00006638: 	callq	__stack_chk_fail@PLT # Offset: 26168
    0000663d: 	endbr64
    00006641: 	movq	%rax, %rbx
    00006644: 	jmp	.Ltmp4733 # Offset: 26180
    00006646: 	endbr64
.Ltmp4735:
    0000664a: 	movq	%rax, %rbp
    0000664d: 	jmp	.Ltmp4734 # Offset: 26189
    00006652: 	endbr64
    00006656: 	jmp	.Ltmp4735 # Offset: 26198
    00006658: 	endbr64
    0000665c: 	jmp	.Ltmp4735 # Offset: 26204
.Ltmp4733:
    0000665e: 	movq	0xa0(%rsp), %rdi
    00006666: 	cmpq	%r13, %rdi
    00006669: 	je	.Ltmp4736 # Offset: 26217
    0000666b: 	movq	0xb0(%rsp), %rax
    00006673: 	leaq	0x1(%rax), %rsi
    00006677: 	callq	_ZdlPvm@PLT # Offset: 26231
.Ltmp4736:
    0000667c: 	movq	0x80(%rsp), %rdi
    00006684: 	leaq	0x90(%rsp), %rax
    0000668c: 	cmpq	%rax, %rdi
    0000668f: 	je	.Ltmp4737 # Offset: 26255
    00006691: 	movq	0x90(%rsp), %rax
    00006699: 	leaq	0x1(%rax), %rsi
    0000669d: 	callq	_ZdlPvm@PLT # Offset: 26269
.Ltmp4737:
    000066a2: 	movq	0x60(%rsp), %rdi
    000066a7: 	leaq	0x70(%rsp), %rax
    000066ac: 	cmpq	%rax, %rdi
    000066af: 	je	.Ltmp4738 # Offset: 26287
    000066b1: 	movq	0x70(%rsp), %rax
    000066b6: 	leaq	0x1(%rax), %rsi
    000066ba: 	callq	_ZdlPvm@PLT # Offset: 26298
.Ltmp4738:
    000066bf: 	movq	%rbx, %rbp
.Ltmp4740:
    000066c2: 	movq	0x40(%rsp), %rdi
    000066c7: 	leaq	0x50(%rsp), %rax
    000066cc: 	cmpq	%rax, %rdi
    000066cf: 	je	.Ltmp4739 # Offset: 26319
    000066d1: 	movq	0x50(%rsp), %rax
    000066d6: 	leaq	0x1(%rax), %rsi
    000066da: 	callq	_ZdlPvm@PLT # Offset: 26330
.Ltmp4739:
    000066df: 	movq	%rbp, %rdi
    000066e2: 	callq	_Unwind_Resume@PLT # Offset: 26338
    000066e7: 	endbr64
    000066eb: 	jmp	.Ltmp4735 # Offset: 26347
.Ltmp4734:
    000066f0: 	movq	0xa0(%rsp), %rdi
    000066f8: 	cmpq	%r13, %rdi
    000066fb: 	je	.Ltmp4740 # Offset: 26363
    000066fd: 	movq	0xb0(%rsp), %rax
    00006705: 	leaq	0x1(%rax), %rsi
    00006709: 	callq	_ZdlPvm@PLT # Offset: 26377
    0000670e: 	jmp	.Ltmp4740 # Offset: 26382
    00006710: 	endbr64
    00006714: 	jmp	.Ltmp4735 # Offset: 26388
    00006719: 	endbr64
    0000671d: 	jmp	.Ltmp4735 # Offset: 26397
    00006722: 	endbr64
    00006726: 	jmp	.Ltmp4735 # Offset: 26406
    0000672b: 	endbr64
    0000672f: 	movq	%rax, %rbx
    00006732: 	jmp	.Ltmp4741 # Offset: 26418
    00006734: 	endbr64
    00006738: 	movq	%rax, %rbx
    0000673b: 	jmp	.Ltmp4742 # Offset: 26427
    0000673d: 	endbr64
    00006741: 	jmp	.Ltmp4735 # Offset: 26433
    00006746: 	endbr64
    0000674a: 	movq	%rax, %rbx
    0000674d: 	jmp	.Ltmp4743 # Offset: 26445
.Ltmp4741:
    0000674f: 	movq	0xa0(%rsp), %rdi
    00006757: 	cmpq	%r13, %rdi
    0000675a: 	je	.Ltmp4736 # Offset: 26458
    00006760: 	movq	0xb0(%rsp), %rax
    00006768: 	leaq	0x1(%rax), %rsi
    0000676c: 	callq	_ZdlPvm@PLT # Offset: 26476
    00006771: 	jmp	.Ltmp4736 # Offset: 26481
.Ltmp4743:
    00006776: 	movq	0xa0(%rsp), %rdi
    0000677e: 	cmpq	%r13, %rdi
    00006781: 	je	.Ltmp4736 # Offset: 26497
    00006787: 	movq	0xb0(%rsp), %rax
    0000678f: 	leaq	0x1(%rax), %rsi
    00006793: 	callq	_ZdlPvm@PLT # Offset: 26515
    00006798: 	jmp	.Ltmp4736 # Offset: 26520
    0000679d: 	endbr64
    000067a1: 	movq	%rax, %rbp
    000067a4: 	jmp	.Ltmp4740 # Offset: 26532
.Ltmp4742:
    000067a9: 	movq	0xa0(%rsp), %rdi
    000067b1: 	cmpq	%r13, %rdi
    000067b4: 	je	.Ltmp4736 # Offset: 26548
    000067ba: 	movq	0xb0(%rsp), %rax
    000067c2: 	leaq	0x1(%rax), %rsi
    000067c6: 	callq	_ZdlPvm@PLT # Offset: 26566
    000067cb: 	jmp	.Ltmp4736 # Offset: 26571
    000067d0: 	endbr64
    000067d4: 	movq	%rax, %rbx
    000067d7: 	jmp	.Ltmp4744 # Offset: 26583
    000067d9: 	endbr64
    000067dd: 	movq	%rax, %rbx
    000067e0: 	jmp	.Ltmp4745 # Offset: 26592
    000067e5: 	endbr64
    000067e9: 	movq	%rax, %rbx
    000067ec: 	jmp	.Ltmp4746 # Offset: 26604
    000067f1: 	endbr64
    000067f5: 	movq	%rax, %rbx
    000067f8: 	jmp	.Ltmp4747 # Offset: 26616
    000067fd: 	endbr64
    00006801: 	movq	%rax, %rbx
    00006804: 	jmp	.Ltmp4748 # Offset: 26628
    00006806: 	endbr64
    0000680a: 	movq	%rax, %rbx
    0000680d: 	jmp	.Ltmp4749 # Offset: 26637
    00006812: 	endbr64
    00006816: 	movq	%rax, %rbx
    00006819: 	jmp	.Ltmp4750 # Offset: 26649
    0000681e: 	endbr64
    00006822: 	movq	%rax, %rbx
    00006825: 	jmp	.Ltmp4751 # Offset: 26661
.Ltmp4744:
    0000682a: 	movq	0xa0(%rsp), %rdi
    00006832: 	cmpq	%r13, %rdi
    00006835: 	je	.Ltmp4736 # Offset: 26677
    0000683b: 	movq	0xb0(%rsp), %rax
    00006843: 	leaq	0x1(%rax), %rsi
    00006847: 	callq	_ZdlPvm@PLT # Offset: 26695
    0000684c: 	jmp	.Ltmp4736 # Offset: 26700
.Ltmp4748:
    00006851: 	movq	0xa0(%rsp), %rdi
    00006859: 	cmpq	%r13, %rdi
    0000685c: 	je	.Ltmp4736 # Offset: 26716
    00006862: 	movq	0xb0(%rsp), %rax
    0000686a: 	leaq	0x1(%rax), %rsi
    0000686e: 	callq	_ZdlPvm@PLT # Offset: 26734
    00006873: 	jmp	.Ltmp4736 # Offset: 26739
.Ltmp4746:
    00006878: 	movq	0xa0(%rsp), %rdi
    00006880: 	cmpq	%r13, %rdi
    00006883: 	je	.Ltmp4736 # Offset: 26755
    00006889: 	movq	0xb0(%rsp), %rax
    00006891: 	leaq	0x1(%rax), %rsi
    00006895: 	callq	_ZdlPvm@PLT # Offset: 26773
    0000689a: 	jmp	.Ltmp4736 # Offset: 26778
.Ltmp4750:
    0000689f: 	movq	0xa0(%rsp), %rdi
    000068a7: 	cmpq	%r13, %rdi
    000068aa: 	je	.Ltmp4736 # Offset: 26794
    000068b0: 	movq	0xb0(%rsp), %rax
    000068b8: 	leaq	0x1(%rax), %rsi
    000068bc: 	callq	_ZdlPvm@PLT # Offset: 26812
    000068c1: 	jmp	.Ltmp4736 # Offset: 26817
.Ltmp4745:
    000068c6: 	movq	0xa0(%rsp), %rdi
    000068ce: 	cmpq	%r13, %rdi
    000068d1: 	je	.Ltmp4736 # Offset: 26833
    000068d7: 	movq	0xb0(%rsp), %rax
    000068df: 	leaq	0x1(%rax), %rsi
    000068e3: 	callq	_ZdlPvm@PLT # Offset: 26851
    000068e8: 	jmp	.Ltmp4736 # Offset: 26856
.Ltmp4749:
    000068ed: 	movq	0xa0(%rsp), %rdi
    000068f5: 	cmpq	%r13, %rdi
    000068f8: 	je	.Ltmp4736 # Offset: 26872
    000068fe: 	movq	0xb0(%rsp), %rax
    00006906: 	leaq	0x1(%rax), %rsi
    0000690a: 	callq	_ZdlPvm@PLT # Offset: 26890
    0000690f: 	jmp	.Ltmp4736 # Offset: 26895
.Ltmp4747:
    00006914: 	movq	0xa0(%rsp), %rdi
    0000691c: 	cmpq	%r13, %rdi
    0000691f: 	je	.Ltmp4736 # Offset: 26911
    00006925: 	movq	0xb0(%rsp), %rax
    0000692d: 	leaq	0x1(%rax), %rsi
    00006931: 	callq	_ZdlPvm@PLT # Offset: 26929
    00006936: 	jmp	.Ltmp4736 # Offset: 26934
.Ltmp4751:
    0000693b: 	movq	0xa0(%rsp), %rdi
    00006943: 	cmpq	%r13, %rdi
    00006946: 	je	.Ltmp4736 # Offset: 26950
    0000694c: 	movq	0xb0(%rsp), %rax
    00006954: 	leaq	0x1(%rax), %rsi
    00006958: 	callq	_ZdlPvm@PLT # Offset: 26968
    0000695d: 	jmp	.Ltmp4736 # Offset: 26973
    00006962: 	endbr64
    00006966: 	movq	%rax, %rbx
    00006969: 	jmp	.Ltmp4752 # Offset: 26985
    0000696b: 	endbr64
    0000696f: 	movq	%rax, %rbx
    00006972: 	jmp	.Ltmp4753 # Offset: 26994
.Ltmp4752:
    00006974: 	movq	0xa0(%rsp), %rdi
    0000697c: 	cmpq	%r13, %rdi
    0000697f: 	je	.Ltmp4736 # Offset: 27007
    00006985: 	movq	0xb0(%rsp), %rax
    0000698d: 	leaq	0x1(%rax), %rsi
    00006991: 	callq	_ZdlPvm@PLT # Offset: 27025
    00006996: 	jmp	.Ltmp4736 # Offset: 27030
.Ltmp4753:
    0000699b: 	movq	0xa0(%rsp), %rdi
    000069a3: 	cmpq	%r13, %rdi
    000069a6: 	je	.Ltmp4736 # Offset: 27046
    000069ac: 	movq	0xb0(%rsp), %rax
    000069b4: 	leaq	0x1(%rax), %rsi
    000069b8: 	callq	_ZdlPvm@PLT # Offset: 27064
    000069bd: 	jmp	.Ltmp4736 # Offset: 27069
    000069c2: 	endbr64
    000069c6: 	movq	%rax, %rbx
    000069c9: 	jmp	.Ltmp4754 # Offset: 27081
    000069cb: 	endbr64
    000069cf: 	movq	%rax, %rbx
    000069d2: 	jmp	.Ltmp4755 # Offset: 27090
.Ltmp4754:
    000069d4: 	movq	0xa0(%rsp), %rdi
    000069dc: 	cmpq	%r13, %rdi
    000069df: 	je	.Ltmp4736 # Offset: 27103
    000069e5: 	movq	0xb0(%rsp), %rax
    000069ed: 	leaq	0x1(%rax), %rsi
    000069f1: 	callq	_ZdlPvm@PLT # Offset: 27121
    000069f6: 	jmp	.Ltmp4736 # Offset: 27126
.Ltmp4755:
    000069fb: 	movq	0xa0(%rsp), %rdi
    00006a03: 	cmpq	%r13, %rdi
    00006a06: 	je	.Ltmp4736 # Offset: 27142
    00006a0c: 	movq	0xb0(%rsp), %rax
    00006a14: 	leaq	0x1(%rax), %rsi
    00006a18: 	callq	_ZdlPvm@PLT # Offset: 27160
    00006a1d: 	jmp	.Ltmp4736 # Offset: 27165
    00006a22: 	endbr64
    00006a26: 	movq	%rax, %rbx
    00006a29: 	jmp	.Ltmp4756 # Offset: 27177
    00006a2b: 	endbr64
    00006a2f: 	movq	%rax, %rbx
    00006a32: 	jmp	.Ltmp4757 # Offset: 27186
.Ltmp4756:
    00006a34: 	movq	0xa0(%rsp), %rdi
    00006a3c: 	cmpq	%r13, %rdi
    00006a3f: 	je	.Ltmp4736 # Offset: 27199
    00006a45: 	movq	0xb0(%rsp), %rax
    00006a4d: 	leaq	0x1(%rax), %rsi
    00006a51: 	callq	_ZdlPvm@PLT # Offset: 27217
    00006a56: 	jmp	.Ltmp4736 # Offset: 27222
.Ltmp4757:
    00006a5b: 	movq	0xa0(%rsp), %rdi
    00006a63: 	cmpq	%r13, %rdi
    00006a66: 	je	.Ltmp4736 # Offset: 27238
    00006a6c: 	movq	0xb0(%rsp), %rax
    00006a74: 	leaq	0x1(%rax), %rsi
    00006a78: 	callq	_ZdlPvm@PLT # Offset: 27256
    00006a7d: 	jmp	.Ltmp4736 # Offset: 27261
    00006a82: 	endbr64
    00006a86: 	movq	%rax, %rbx
    00006a89: 	jmp	.Ltmp4758 # Offset: 27273
    00006a8b: 	endbr64
    00006a8f: 	movq	%rax, %rbx
    00006a92: 	jmp	.Ltmp4759 # Offset: 27282
.Ltmp4758:
    00006a94: 	movq	0xa0(%rsp), %rdi
    00006a9c: 	cmpq	%r13, %rdi
    00006a9f: 	je	.Ltmp4736 # Offset: 27295
    00006aa5: 	movq	0xb0(%rsp), %rax
    00006aad: 	leaq	0x1(%rax), %rsi
    00006ab1: 	callq	_ZdlPvm@PLT # Offset: 27313
    00006ab6: 	jmp	.Ltmp4736 # Offset: 27318
.Ltmp4759:
    00006abb: 	movq	0xa0(%rsp), %rdi
    00006ac3: 	cmpq	%r13, %rdi
    00006ac6: 	je	.Ltmp4736 # Offset: 27334
    00006acc: 	movq	0xb0(%rsp), %rax
    00006ad4: 	leaq	0x1(%rax), %rsi
    00006ad8: 	callq	_ZdlPvm@PLT # Offset: 27352
    00006add: 	jmp	.Ltmp4736 # Offset: 27357
    00006ae2: 	endbr64
    00006ae6: 	movq	%rax, %rbx
    00006ae9: 	jmp	.Ltmp4760 # Offset: 27369
    00006aeb: 	endbr64
    00006aef: 	movq	%rax, %rbx
    00006af2: 	jmp	.Ltmp4761 # Offset: 27378
.Ltmp4760:
    00006af4: 	movq	0xa0(%rsp), %rdi
    00006afc: 	cmpq	%r13, %rdi
    00006aff: 	je	.Ltmp4736 # Offset: 27391
    00006b05: 	movq	0xb0(%rsp), %rax
    00006b0d: 	leaq	0x1(%rax), %rsi
    00006b11: 	callq	_ZdlPvm@PLT # Offset: 27409
    00006b16: 	jmp	.Ltmp4736 # Offset: 27414
.Ltmp4761:
    00006b1b: 	movq	0xa0(%rsp), %rdi
    00006b23: 	cmpq	%r13, %rdi
    00006b26: 	je	.Ltmp4736 # Offset: 27430
    00006b2c: 	movq	0xb0(%rsp), %rax
    00006b34: 	leaq	0x1(%rax), %rsi
    00006b38: 	callq	_ZdlPvm@PLT # Offset: 27448
    00006b3d: 	jmp	.Ltmp4736 # Offset: 27453
    00006b42: 	endbr64
    00006b46: 	movq	%rax, %rbx
    00006b49: 	jmp	.Ltmp4762 # Offset: 27465
    00006b4b: 	endbr64
    00006b4f: 	movq	%rax, %rbx
    00006b52: 	jmp	.Ltmp4763 # Offset: 27474
.Ltmp4762:
    00006b54: 	movq	0xa0(%rsp), %rdi
    00006b5c: 	cmpq	%r13, %rdi
    00006b5f: 	je	.Ltmp4736 # Offset: 27487
    00006b65: 	movq	0xb0(%rsp), %rax
    00006b6d: 	leaq	0x1(%rax), %rsi
    00006b71: 	callq	_ZdlPvm@PLT # Offset: 27505
    00006b76: 	jmp	.Ltmp4736 # Offset: 27510
.Ltmp4763:
    00006b7b: 	movq	0xa0(%rsp), %rdi
    00006b83: 	cmpq	%r13, %rdi
    00006b86: 	je	.Ltmp4736 # Offset: 27526
    00006b8c: 	movq	0xb0(%rsp), %rax
    00006b94: 	leaq	0x1(%rax), %rsi
    00006b98: 	callq	_ZdlPvm@PLT # Offset: 27544
    00006b9d: 	jmp	.Ltmp4736 # Offset: 27549
    00006ba2: 	endbr64
    00006ba6: 	movq	%rax, %rbx
    00006ba9: 	jmp	.Ltmp4764 # Offset: 27561
    00006bab: 	endbr64
    00006baf: 	movq	%rax, %rbx
    00006bb2: 	jmp	.Ltmp4765 # Offset: 27570
.Ltmp4764:
    00006bb4: 	movq	0xa0(%rsp), %rdi
    00006bbc: 	cmpq	%r13, %rdi
    00006bbf: 	je	.Ltmp4736 # Offset: 27583
    00006bc5: 	movq	0xb0(%rsp), %rax
    00006bcd: 	leaq	0x1(%rax), %rsi
    00006bd1: 	callq	_ZdlPvm@PLT # Offset: 27601
    00006bd6: 	jmp	.Ltmp4736 # Offset: 27606
.Ltmp4765:
    00006bdb: 	movq	0xa0(%rsp), %rdi
    00006be3: 	cmpq	%r13, %rdi
    00006be6: 	je	.Ltmp4736 # Offset: 27622
    00006bec: 	movq	0xb0(%rsp), %rax
    00006bf4: 	leaq	0x1(%rax), %rsi
    00006bf8: 	callq	_ZdlPvm@PLT # Offset: 27640
    00006bfd: 	jmp	.Ltmp4736 # Offset: 27645
    00006c02: 	endbr64
    00006c06: 	movq	%rax, %rbx
    00006c09: 	jmp	.Ltmp4766 # Offset: 27657
    00006c0b: 	endbr64
    00006c0f: 	movq	%rax, %rbx
    00006c12: 	jmp	.Ltmp4767 # Offset: 27666
.Ltmp4766:
    00006c14: 	movq	0xa0(%rsp), %rdi
    00006c1c: 	cmpq	%r13, %rdi
    00006c1f: 	je	.Ltmp4736 # Offset: 27679
    00006c25: 	movq	0xb0(%rsp), %rax
    00006c2d: 	leaq	0x1(%rax), %rsi
    00006c31: 	callq	_ZdlPvm@PLT # Offset: 27697
    00006c36: 	jmp	.Ltmp4736 # Offset: 27702
.Ltmp4767:
    00006c3b: 	movq	0xa0(%rsp), %rdi
    00006c43: 	cmpq	%r13, %rdi
    00006c46: 	je	.Ltmp4736 # Offset: 27718
    00006c4c: 	movq	0xb0(%rsp), %rax
    00006c54: 	leaq	0x1(%rax), %rsi
    00006c58: 	callq	_ZdlPvm@PLT # Offset: 27736
    00006c5d: 	jmp	.Ltmp4736 # Offset: 27741
    00006c62: 	endbr64
    00006c66: 	jmp	.Ltmp4735 # Offset: 27750
    00006c6b: 	endbr64
    00006c6f: 	jmp	.Ltmp4735 # Offset: 27759
    00006c74: 	endbr64
    00006c78: 	jmp	.Ltmp4735 # Offset: 27768
    00006c7d: 	endbr64
    00006c81: 	jmp	.Ltmp4735 # Offset: 27777
    00006c86: 	endbr64
    00006c8a: 	jmp	.Ltmp4735 # Offset: 27786
    00006c8f: 	endbr64
    00006c93: 	jmp	.Ltmp4735 # Offset: 27795
    00006c98: 	endbr64
    00006c9c: 	jmp	.Ltmp4735 # Offset: 27804
    00006ca1: 	endbr64
    00006ca5: 	jmp	.Ltmp4735 # Offset: 27813
    00006caa: 	endbr64
    00006cae: 	jmp	.Ltmp4735 # Offset: 27822
    00006cb3: 	endbr64
    00006cb7: 	jmp	.Ltmp4735 # Offset: 27831
    00006cbc: 	endbr64
    00006cc0: 	jmp	.Ltmp4735 # Offset: 27840
    00006cc5: 	endbr64
    00006cc9: 	jmp	.Ltmp4735 # Offset: 27849
    00006cce: 	endbr64
    00006cd2: 	jmp	.Ltmp4735 # Offset: 27858
    00006cd7: 	endbr64
    00006cdb: 	jmp	.Ltmp4735 # Offset: 27867
    00006ce0: 	endbr64
    00006ce4: 	jmp	.Ltmp4735 # Offset: 27876
    00006ce9: 	endbr64
    00006ced: 	jmp	.Ltmp4735 # Offset: 27885
    00006cf2: 	endbr64
    00006cf6: 	movq	%rax, %rbx
    00006cf9: 	jmp	.Ltmp4768 # Offset: 27897
    00006cfb: 	endbr64
    00006cff: 	movq	%rax, %rbx
    00006d02: 	jmp	.Ltmp4769 # Offset: 27906
.Ltmp4768:
    00006d04: 	movq	0xa0(%rsp), %rdi
    00006d0c: 	cmpq	%r13, %rdi
    00006d0f: 	je	.Ltmp4736 # Offset: 27919
    00006d15: 	movq	0xb0(%rsp), %rax
    00006d1d: 	leaq	0x1(%rax), %rsi
    00006d21: 	callq	_ZdlPvm@PLT # Offset: 27937
    00006d26: 	jmp	.Ltmp4736 # Offset: 27942
.Ltmp4769:
    00006d2b: 	movq	0xa0(%rsp), %rdi
    00006d33: 	cmpq	%r13, %rdi
    00006d36: 	je	.Ltmp4736 # Offset: 27958
    00006d3c: 	movq	0xb0(%rsp), %rax
    00006d44: 	leaq	0x1(%rax), %rsi
    00006d48: 	callq	_ZdlPvm@PLT # Offset: 27976
    00006d4d: 	jmp	.Ltmp4736 # Offset: 27981
    00006d52: 	endbr64
    00006d56: 	movq	%rax, %rbx
    00006d59: 	jmp	.Ltmp4770 # Offset: 27993
    00006d5b: 	endbr64
    00006d5f: 	movq	%rax, %rbx
    00006d62: 	jmp	.Ltmp4771 # Offset: 28002
.Ltmp4770:
    00006d64: 	movq	0xa0(%rsp), %rdi
    00006d6c: 	cmpq	%r13, %rdi
    00006d6f: 	je	.Ltmp4736 # Offset: 28015
    00006d75: 	movq	0xb0(%rsp), %rax
    00006d7d: 	leaq	0x1(%rax), %rsi
    00006d81: 	callq	_ZdlPvm@PLT # Offset: 28033
    00006d86: 	jmp	.Ltmp4736 # Offset: 28038
.Ltmp4771:
    00006d8b: 	movq	0xa0(%rsp), %rdi
    00006d93: 	cmpq	%r13, %rdi
    00006d96: 	je	.Ltmp4736 # Offset: 28054
    00006d9c: 	movq	0xb0(%rsp), %rax
    00006da4: 	leaq	0x1(%rax), %rsi
    00006da8: 	callq	_ZdlPvm@PLT # Offset: 28072
    00006dad: 	jmp	.Ltmp4736 # Offset: 28077
    00006db2: 	endbr64
    00006db6: 	movq	%rax, %rbx
    00006db9: 	jmp	.Ltmp4772 # Offset: 28089
    00006dbb: 	endbr64
    00006dbf: 	movq	%rax, %rbx
    00006dc2: 	jmp	.Ltmp4773 # Offset: 28098
.Ltmp4772:
    00006dc4: 	movq	0xa0(%rsp), %rdi
    00006dcc: 	cmpq	%r13, %rdi
    00006dcf: 	je	.Ltmp4736 # Offset: 28111
    00006dd5: 	movq	0xb0(%rsp), %rax
    00006ddd: 	leaq	0x1(%rax), %rsi
    00006de1: 	callq	_ZdlPvm@PLT # Offset: 28129
    00006de6: 	jmp	.Ltmp4736 # Offset: 28134
.Ltmp4773:
    00006deb: 	movq	0xa0(%rsp), %rdi
    00006df3: 	cmpq	%r13, %rdi
    00006df6: 	je	.Ltmp4736 # Offset: 28150
    00006dfc: 	movq	0xb0(%rsp), %rax
    00006e04: 	leaq	0x1(%rax), %rsi
    00006e08: 	callq	_ZdlPvm@PLT # Offset: 28168
    00006e0d: 	jmp	.Ltmp4736 # Offset: 28173
    00006e12: 	endbr64
    00006e16: 	movq	%rax, %rbx
    00006e19: 	jmp	.Ltmp4774 # Offset: 28185
    00006e1b: 	endbr64
    00006e1f: 	movq	%rax, %rbx
    00006e22: 	jmp	.Ltmp4775 # Offset: 28194
.Ltmp4774:
    00006e24: 	movq	0xa0(%rsp), %rdi
    00006e2c: 	cmpq	%r13, %rdi
    00006e2f: 	je	.Ltmp4736 # Offset: 28207
    00006e35: 	movq	0xb0(%rsp), %rax
    00006e3d: 	leaq	0x1(%rax), %rsi
    00006e41: 	callq	_ZdlPvm@PLT # Offset: 28225
    00006e46: 	jmp	.Ltmp4736 # Offset: 28230
.Ltmp4775:
    00006e4b: 	movq	0xa0(%rsp), %rdi
    00006e53: 	cmpq	%r13, %rdi
    00006e56: 	je	.Ltmp4736 # Offset: 28246
    00006e5c: 	movq	0xb0(%rsp), %rax
    00006e64: 	leaq	0x1(%rax), %rsi
    00006e68: 	callq	_ZdlPvm@PLT # Offset: 28264
    00006e6d: 	jmp	.Ltmp4736 # Offset: 28269
    00006e72: 	endbr64
    00006e76: 	movq	%rax, %rbx
    00006e79: 	jmp	.Ltmp4776 # Offset: 28281
    00006e7b: 	endbr64
    00006e7f: 	movq	%rax, %rbx
    00006e82: 	jmp	.Ltmp4777 # Offset: 28290
.Ltmp4776:
    00006e84: 	movq	0xa0(%rsp), %rdi
    00006e8c: 	cmpq	%r13, %rdi
    00006e8f: 	je	.Ltmp4736 # Offset: 28303
    00006e95: 	movq	0xb0(%rsp), %rax
    00006e9d: 	leaq	0x1(%rax), %rsi
    00006ea1: 	callq	_ZdlPvm@PLT # Offset: 28321
    00006ea6: 	jmp	.Ltmp4736 # Offset: 28326
.Ltmp4777:
    00006eab: 	movq	0xa0(%rsp), %rdi
    00006eb3: 	cmpq	%r13, %rdi
    00006eb6: 	je	.Ltmp4736 # Offset: 28342
    00006ebc: 	movq	0xb0(%rsp), %rax
    00006ec4: 	leaq	0x1(%rax), %rsi
    00006ec8: 	callq	_ZdlPvm@PLT # Offset: 28360
    00006ecd: 	jmp	.Ltmp4736 # Offset: 28365
    00006ed2: 	endbr64
    00006ed6: 	movq	%rax, %rbx
    00006ed9: 	jmp	.Ltmp4778 # Offset: 28377
    00006edb: 	endbr64
    00006edf: 	movq	%rax, %rbx
    00006ee2: 	jmp	.Ltmp4779 # Offset: 28386
.Ltmp4778:
    00006ee4: 	movq	0xa0(%rsp), %rdi
    00006eec: 	cmpq	%r13, %rdi
    00006eef: 	je	.Ltmp4736 # Offset: 28399
    00006ef5: 	movq	0xb0(%rsp), %rax
    00006efd: 	leaq	0x1(%rax), %rsi
    00006f01: 	callq	_ZdlPvm@PLT # Offset: 28417
    00006f06: 	jmp	.Ltmp4736 # Offset: 28422
.Ltmp4779:
    00006f0b: 	movq	0xa0(%rsp), %rdi
    00006f13: 	cmpq	%r13, %rdi
    00006f16: 	je	.Ltmp4736 # Offset: 28438
    00006f1c: 	movq	0xb0(%rsp), %rax
    00006f24: 	leaq	0x1(%rax), %rsi
    00006f28: 	callq	_ZdlPvm@PLT # Offset: 28456
    00006f2d: 	jmp	.Ltmp4736 # Offset: 28461
    00006f32: 	endbr64
    00006f36: 	movq	%rax, %rbx
    00006f39: 	jmp	.Ltmp4780 # Offset: 28473
    00006f3b: 	endbr64
    00006f3f: 	movq	%rax, %rbx
    00006f42: 	jmp	.Ltmp4781 # Offset: 28482
.Ltmp4780:
    00006f44: 	movq	0xa0(%rsp), %rdi
    00006f4c: 	cmpq	%r13, %rdi
    00006f4f: 	je	.Ltmp4736 # Offset: 28495
    00006f55: 	movq	0xb0(%rsp), %rax
    00006f5d: 	leaq	0x1(%rax), %rsi
    00006f61: 	callq	_ZdlPvm@PLT # Offset: 28513
    00006f66: 	jmp	.Ltmp4736 # Offset: 28518
.Ltmp4781:
    00006f6b: 	movq	0xa0(%rsp), %rdi
    00006f73: 	cmpq	%r13, %rdi
    00006f76: 	je	.Ltmp4736 # Offset: 28534
    00006f7c: 	movq	0xb0(%rsp), %rax
    00006f84: 	leaq	0x1(%rax), %rsi
    00006f88: 	callq	_ZdlPvm@PLT # Offset: 28552
    00006f8d: 	jmp	.Ltmp4736 # Offset: 28557
    00006f92: 	endbr64
    00006f96: 	movq	%rax, %rbx
    00006f99: 	jmp	.Ltmp4782 # Offset: 28569
    00006f9b: 	endbr64
    00006f9f: 	movq	%rax, %rbx
    00006fa2: 	jmp	.Ltmp4783 # Offset: 28578
.Ltmp4782:
    00006fa4: 	movq	0xa0(%rsp), %rdi
    00006fac: 	cmpq	%r13, %rdi
    00006faf: 	je	.Ltmp4736 # Offset: 28591
    00006fb5: 	movq	0xb0(%rsp), %rax
    00006fbd: 	leaq	0x1(%rax), %rsi
    00006fc1: 	callq	_ZdlPvm@PLT # Offset: 28609
    00006fc6: 	jmp	.Ltmp4736 # Offset: 28614
.Ltmp4783:
    00006fcb: 	movq	0xa0(%rsp), %rdi
    00006fd3: 	cmpq	%r13, %rdi
    00006fd6: 	je	.Ltmp4736 # Offset: 28630
    00006fdc: 	movq	0xb0(%rsp), %rax
    00006fe4: 	leaq	0x1(%rax), %rsi
    00006fe8: 	callq	_ZdlPvm@PLT # Offset: 28648
    00006fed: 	jmp	.Ltmp4736 # Offset: 28653
    00006ff2: 	endbr64
    00006ff6: 	jmp	.Ltmp4735 # Offset: 28662
    00006ffb: 	endbr64
    00006fff: 	jmp	.Ltmp4735 # Offset: 28671
    00007004: 	endbr64
    00007008: 	jmp	.Ltmp4735 # Offset: 28680
    0000700d: 	endbr64
    00007011: 	jmp	.Ltmp4735 # Offset: 28689
    00007016: 	endbr64
.Ltmp4785:
    0000701a: 	movq	%rax, %rbx
    0000701d: 	jmp	.Ltmp4784 # Offset: 28701
    0000701f: 	endbr64
    00007023: 	jmp	.Ltmp4785 # Offset: 28707
    00007025: 	endbr64
    00007029: 	jmp	.Ltmp4785 # Offset: 28713
    0000702b: 	endbr64
    0000702f: 	jmp	.Ltmp4785 # Offset: 28719
.Ltmp4784:
    00007031: 	movq	0xa0(%rsp), %rdi
    00007039: 	cmpq	%r13, %rdi
    0000703c: 	je	.Ltmp4737 # Offset: 28732
    00007042: 	movq	0xb0(%rsp), %rax
    0000704a: 	leaq	0x1(%rax), %rsi
    0000704e: 	callq	_ZdlPvm@PLT # Offset: 28750
    00007053: 	jmp	.Ltmp4737 # Offset: 28755
    00007058: 	endbr64
    0000705c: 	jmp	.Ltmp4785 # Offset: 28764
    0000705e: 	endbr64
    00007062: 	jmp	.Ltmp4785 # Offset: 28770
    00007064: 	endbr64
    00007068: 	jmp	.Ltmp4785 # Offset: 28776
    0000706a: 	endbr64
    0000706e: 	jmp	.Ltmp4785 # Offset: 28782
    00007070: 	endbr64
    00007074: 	jmp	.Ltmp4785 # Offset: 28788
    00007076: 	endbr64
    0000707a: 	jmp	.Ltmp4735 # Offset: 28794
    0000707f: 	endbr64
    00007083: 	jmp	.Ltmp4735 # Offset: 28803
    00007088: 	endbr64
    0000708c: 	movq	%rax, %rbx
    0000708f: 	jmp	.Ltmp4737 # Offset: 28815
    00007094: 	endbr64
    00007098: 	movq	%rax, %rbx
    0000709b: 	jmp	.Ltmp4786 # Offset: 28827
    0000709d: 	endbr64
    000070a1: 	movq	%rax, %rbx
    000070a4: 	jmp	.Ltmp4787 # Offset: 28836
.Ltmp4786:
    000070a6: 	movq	0xa0(%rsp), %rdi
    000070ae: 	cmpq	%r13, %rdi
    000070b1: 	je	.Ltmp4736 # Offset: 28849
    000070b7: 	movq	0xb0(%rsp), %rax
    000070bf: 	leaq	0x1(%rax), %rsi
    000070c3: 	callq	_ZdlPvm@PLT # Offset: 28867
    000070c8: 	jmp	.Ltmp4736 # Offset: 28872
.Ltmp4787:
    000070cd: 	movq	0xa0(%rsp), %rdi
    000070d5: 	cmpq	%r13, %rdi
    000070d8: 	je	.Ltmp4736 # Offset: 28888
    000070de: 	movq	0xb0(%rsp), %rax
    000070e6: 	leaq	0x1(%rax), %rsi
    000070ea: 	callq	_ZdlPvm@PLT # Offset: 28906
    000070ef: 	jmp	.Ltmp4736 # Offset: 28911
    000070f4: 	endbr64
    000070f8: 	movq	%rax, %rbx
    000070fb: 	jmp	.Ltmp4788 # Offset: 28923
    000070fd: 	endbr64
    00007101: 	movq	%rax, %rbx
    00007104: 	jmp	.Ltmp4789 # Offset: 28932
.Ltmp4788:
    00007106: 	movq	0xa0(%rsp), %rdi
    0000710e: 	cmpq	%r13, %rdi
    00007111: 	je	.Ltmp4736 # Offset: 28945
    00007117: 	movq	0xb0(%rsp), %rax
    0000711f: 	leaq	0x1(%rax), %rsi
    00007123: 	callq	_ZdlPvm@PLT # Offset: 28963
    00007128: 	jmp	.Ltmp4736 # Offset: 28968
.Ltmp4789:
    0000712d: 	movq	0xa0(%rsp), %rdi
    00007135: 	cmpq	%r13, %rdi
    00007138: 	je	.Ltmp4736 # Offset: 28984
    0000713e: 	movq	0xb0(%rsp), %rax
    00007146: 	leaq	0x1(%rax), %rsi
    0000714a: 	callq	_ZdlPvm@PLT # Offset: 29002
    0000714f: 	jmp	.Ltmp4736 # Offset: 29007
    00007154: 	endbr64
    00007158: 	movq	%rax, %rbx
    0000715b: 	jmp	.Ltmp4790 # Offset: 29019
    0000715d: 	endbr64
    00007161: 	movq	%rax, %rbx
    00007164: 	jmp	.Ltmp4791 # Offset: 29028
.Ltmp4790:
    00007166: 	movq	0xa0(%rsp), %rdi
    0000716e: 	cmpq	%r13, %rdi
    00007171: 	je	.Ltmp4736 # Offset: 29041
    00007177: 	movq	0xb0(%rsp), %rax
    0000717f: 	leaq	0x1(%rax), %rsi
    00007183: 	callq	_ZdlPvm@PLT # Offset: 29059
    00007188: 	jmp	.Ltmp4736 # Offset: 29064
.Ltmp4791:
    0000718d: 	movq	0xa0(%rsp), %rdi
    00007195: 	cmpq	%r13, %rdi
    00007198: 	je	.Ltmp4736 # Offset: 29080
    0000719e: 	movq	0xb0(%rsp), %rax
    000071a6: 	leaq	0x1(%rax), %rsi
    000071aa: 	callq	_ZdlPvm@PLT # Offset: 29098
    000071af: 	jmp	.Ltmp4736 # Offset: 29103
    000071b4: 	endbr64
    000071b8: 	movq	%rax, %rbx
    000071bb: 	jmp	.Ltmp4792 # Offset: 29115
    000071bd: 	endbr64
    000071c1: 	movq	%rax, %rbx
    000071c4: 	jmp	.Ltmp4793 # Offset: 29124
.Ltmp4792:
    000071c6: 	movq	0xa0(%rsp), %rdi
    000071ce: 	cmpq	%r13, %rdi
    000071d1: 	je	.Ltmp4736 # Offset: 29137
    000071d7: 	movq	0xb0(%rsp), %rax
    000071df: 	leaq	0x1(%rax), %rsi
    000071e3: 	callq	_ZdlPvm@PLT # Offset: 29155
    000071e8: 	jmp	.Ltmp4736 # Offset: 29160
.Ltmp4793:
    000071ed: 	movq	0xa0(%rsp), %rdi
    000071f5: 	cmpq	%r13, %rdi
    000071f8: 	je	.Ltmp4736 # Offset: 29176
    000071fe: 	movq	0xb0(%rsp), %rax
    00007206: 	leaq	0x1(%rax), %rsi
    0000720a: 	callq	_ZdlPvm@PLT # Offset: 29194
    0000720f: 	jmp	.Ltmp4736 # Offset: 29199
    00007214: 	endbr64
    00007218: 	jmp	.Ltmp4785 # Offset: 29208
    0000721d: 	endbr64
    00007221: 	jmp	.Ltmp4785 # Offset: 29217
    00007226: 	endbr64
    0000722a: 	jmp	.Ltmp4785 # Offset: 29226
    0000722f: 	endbr64
    00007233: 	jmp	.Ltmp4785 # Offset: 29235
    00007238: 	endbr64
    0000723c: 	movq	%rax, %rbx
    0000723f: 	jmp	.Ltmp4794 # Offset: 29247
    00007241: 	endbr64
    00007245: 	movq	%rax, %rbx
    00007248: 	jmp	.Ltmp4736 # Offset: 29256
.Ltmp4794:
    0000724d: 	movq	0xa0(%rsp), %rdi
    00007255: 	cmpq	%r13, %rdi
    00007258: 	je	.Ltmp4736 # Offset: 29272
    0000725e: 	movq	0xb0(%rsp), %rax
    00007266: 	leaq	0x1(%rax), %rsi
    0000726a: 	callq	_ZdlPvm@PLT # Offset: 29290
    0000726f: 	jmp	.Ltmp4736 # Offset: 29295
    00007274: 	endbr64
    00007278: 	movq	%rax, %rbx
    0000727b: 	jmp	.Ltmp4795 # Offset: 29307
    0000727d: 	endbr64
    00007281: 	movq	%rax, %rbx
    00007284: 	jmp	.Ltmp4796 # Offset: 29316
.Ltmp4795:
    00007286: 	movq	0xa0(%rsp), %rdi
    0000728e: 	cmpq	%r13, %rdi
    00007291: 	je	.Ltmp4736 # Offset: 29329
    00007297: 	movq	0xb0(%rsp), %rax
    0000729f: 	leaq	0x1(%rax), %rsi
    000072a3: 	callq	_ZdlPvm@PLT # Offset: 29347
    000072a8: 	jmp	.Ltmp4736 # Offset: 29352
.Ltmp4796:
    000072ad: 	movq	0xa0(%rsp), %rdi
    000072b5: 	cmpq	%r13, %rdi
    000072b8: 	je	.Ltmp4736 # Offset: 29368
    000072be: 	movq	0xb0(%rsp), %rax
    000072c6: 	leaq	0x1(%rax), %rsi
    000072ca: 	callq	_ZdlPvm@PLT # Offset: 29386
    000072cf: 	jmp	.Ltmp4736 # Offset: 29391
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeImEvv"

Binary Function "_Z13test_constantIi27custom_multiply_shiftadd_42IiEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 196
  State       : disassembled
  Address     : 0x381f0
  Size        : 0x365
  MaxSize     : 0x370
  Offset      : 0x381f0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi27custom_multiply_shiftadd_42IiEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0195:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %edi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%edi, %edi
    00000041: 	jle	.Ltmp4797 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movl	%r15d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r15d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm3
    00000067: 	andl	$-0x4, %ebx
    0000006a: 	shrl	$0x2, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r13,%rax), %r14
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp4803:
    00000080: 	xorl	%edx, %edx
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp4798 # Offset: 133
    0000008b: 	cmpl	$0x2, 0x4(%rsp)
    00000090: 	jbe	.Ltmp4799 # Offset: 144
    00000096: 	movq	%r13, %rax
    00000099: 	pxor	%xmm2, %xmm2
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp4800:
    000000a0: 	movdqu	(%rax), %xmm1
    000000a4: 	addq	$0x10, %rax
    000000a8: 	movdqa	%xmm1, %xmm0
    000000ac: 	movdqa	%xmm1, %xmm4
    000000b0: 	pslld	$0x5, %xmm4
    000000b5: 	pslld	$0x6, %xmm0
    000000ba: 	psubd	%xmm4, %xmm0
    000000be: 	movdqa	%xmm1, %xmm4
    000000c2: 	pslld	$0x4, %xmm4
    000000c7: 	paddd	%xmm4, %xmm0
    000000cb: 	movdqa	%xmm1, %xmm4
    000000cf: 	pslld	$0x3, %xmm4
    000000d4: 	psubd	%xmm4, %xmm0
    000000d8: 	movdqa	%xmm1, %xmm4
    000000dc: 	pslld	$0x2, %xmm4
    000000e1: 	pslld	$0x1, %xmm1
    000000e6: 	paddd	%xmm4, %xmm0
    000000ea: 	psubd	%xmm1, %xmm0
    000000ee: 	paddd	%xmm0, %xmm2
    000000f2: 	cmpq	%rax, %r14
    000000f5: 	jne	.Ltmp4800 # Offset: 245
    000000f7: 	movdqa	%xmm2, %xmm0
    000000fb: 	psrldq	$0x8, %xmm0
    00000100: 	paddd	%xmm0, %xmm2
    00000104: 	movdqa	%xmm2, %xmm0
    00000108: 	psrldq	$0x4, %xmm0
    0000010d: 	paddd	%xmm0, %xmm2
    00000111: 	movd	%xmm2, %edx
    00000115: 	cmpl	%r15d, %ebx
    00000118: 	je	.Ltmp4798 # Offset: 280
    0000011e: 	movl	%ebx, %esi
    00000120: 	movl	%ebx, %eax
.Ltmp4811:
    00000122: 	movl	%r15d, %ecx
    00000125: 	subl	%esi, %ecx
    00000127: 	cmpl	$0x1, %ecx
    0000012a: 	je	.Ltmp4801 # Offset: 298
    0000012c: 	movq	(%r13,%rsi,4), %xmm1
    00000133: 	movdqa	%xmm1, %xmm0
    00000137: 	movdqa	%xmm1, %xmm2
    0000013b: 	pslld	$0x5, %xmm2
    00000140: 	pslld	$0x6, %xmm0
    00000145: 	psubd	%xmm2, %xmm0
    00000149: 	movdqa	%xmm1, %xmm2
    0000014d: 	pslld	$0x4, %xmm2
    00000152: 	paddd	%xmm2, %xmm0
    00000156: 	movdqa	%xmm1, %xmm2
    0000015a: 	pslld	$0x3, %xmm2
    0000015f: 	psubd	%xmm2, %xmm0
    00000163: 	movdqa	%xmm1, %xmm2
    00000167: 	pslld	$0x2, %xmm2
    0000016c: 	pslld	$0x1, %xmm1
    00000171: 	paddd	%xmm2, %xmm0
    00000175: 	psubd	%xmm1, %xmm0
    00000179: 	movd	%xmm0, %esi
    0000017d: 	pshufd	$0xe5, %xmm0, %xmm5
    00000182: 	movd	%xmm5, %r8d
    00000187: 	addl	%r8d, %esi
    0000018a: 	addl	%esi, %edx
    0000018c: 	movl	%ecx, %esi
    0000018e: 	andl	$-0x2, %esi
    00000191: 	addl	%esi, %eax
    00000193: 	cmpl	%ecx, %esi
    00000195: 	je	.Ltmp4798 # Offset: 405
.Ltmp4801:
    00000197: 	cltq
    00000199: 	imull	$0x2a, (%r13,%rax,4), %eax
    0000019f: 	addl	%eax, %edx
.Ltmp4798:
    000001a1: 	cvttsd2si	%xmm3, %eax
    000001a5: 	imull	$0x52080, %eax, %eax
    000001ab: 	cmpl	%edx, %eax
    000001ad: 	je	.Ltmp4802 # Offset: 429
    000001af: 	movl	current_test(%rip), %edx
    000001b5: 	movl	$0x1, %edi
    000001ba: 	movq	%rbp, %rsi
    000001bd: 	xorl	%eax, %eax
    000001bf: 	addl	$0x1, %r12d
    000001c3: 	callq	__printf_chk@PLT # Offset: 451
    000001c8: 	movl	iterations(%rip), %edi
    000001ce: 	cmpl	%edi, %r12d
    000001d1: 	jge	.Ltmp4797 # Offset: 465
    000001d3: 	movsd	init_value(%rip), %xmm3
    000001db: 	jmp	.Ltmp4803 # Offset: 475
.Ltmp4802:
    000001e0: 	addl	$0x1, %r12d
    000001e4: 	cmpl	%edi, %r12d
    000001e7: 	jl	.Ltmp4803 # Offset: 487
.Ltmp4797:
    000001ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001fb: 	subq	$0x20, %rax
    000001ff: 	cmpq	%rax, %rbx
    00000202: 	je	.Ltmp4804 # Offset: 514
    00000208: 	movq	0x8(%rsp), %rax
    0000020d: 	leaq	0x10(%rbx), %rdi
    00000211: 	movq	%rdi, (%rbx)
    00000214: 	movq	(%rax), %rbp
    00000217: 	movq	0x8(%rax), %r12
    0000021b: 	movq	%rbp, %rax
    0000021e: 	addq	%r12, %rax
    00000221: 	je	.Ltmp4805 # Offset: 545
    00000223: 	testq	%rbp, %rbp
    00000226: 	je	.Ltmp4806 # Offset: 550
.Ltmp4805:
    0000022c: 	movq	%r12, 0x10(%rsp)
    00000231: 	cmpq	$0xf, %r12
    00000235: 	ja	.Ltmp4807 # Offset: 565
    0000023b: 	cmpq	$0x1, %r12
    0000023f: 	jne	.Ltmp4808 # Offset: 575
    00000245: 	movzbl	(%rbp), %eax
    00000249: 	movb	%al, 0x10(%rbx)
.Ltmp4812:
    0000024c: 	movq	%r12, 0x8(%rbx)
    00000250: 	movb	$0x0, (%rdi,%r12)
    00000255: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000025c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000263: 	addq	$0x20, %rax
    00000267: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000026e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000275: 	je	.Ltmp4809 # Offset: 629
.Ltmp4813:
    0000027b: 	movq	-0x20(%rax), %rbp
    0000027f: 	callq	clock@PLT # Offset: 639
    00000284: 	movq	%rax, end_time(%rip)
    0000028b: 	movq	0x18(%rsp), %rdx
    00000290: 	subq	%fs:0x28, %rdx
    00000299: 	jne	.Ltmp4810 # Offset: 665
    0000029f: 	subq	start_time(%rip), %rax
    000002a6: 	pxor	%xmm0, %xmm0
    000002aa: 	movq	%rbp, %rdi
    000002ad: 	cvtsi2sd	%rax, %xmm0
    000002b2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002ba: 	addq	$0x28, %rsp
    000002be: 	popq	%rbx
    000002bf: 	popq	%rbp
    000002c0: 	popq	%r12
    000002c2: 	popq	%r13
    000002c4: 	popq	%r14
    000002c6: 	popq	%r15
    000002c8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 712
.Ltmp4799:
    000002cd: 	xorl	%esi, %esi
    000002cf: 	xorl	%eax, %eax
    000002d1: 	xorl	%edx, %edx
    000002d3: 	jmp	.Ltmp4811 # Offset: 723
.Ltmp4807:
    000002d8: 	movq	%rbx, %rdi
    000002db: 	leaq	0x10(%rsp), %rsi
    000002e0: 	xorl	%edx, %edx
    000002e2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 738
    000002e7: 	movq	%rax, (%rbx)
    000002ea: 	movq	%rax, %rdi
    000002ed: 	movq	0x10(%rsp), %rax
    000002f2: 	movq	%rax, 0x10(%rbx)
.Ltmp4814:
    000002f6: 	movq	%r12, %rdx
    000002f9: 	movq	%rbp, %rsi
    000002fc: 	callq	memcpy@PLT # Offset: 764
    00000301: 	movq	0x10(%rsp), %r12
    00000306: 	movq	(%rbx), %rdi
    00000309: 	jmp	.Ltmp4812 # Offset: 777
.Ltmp4804:
    0000030e: 	movq	0x8(%rsp), %rsi
    00000313: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000031a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 794
    0000031f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000326: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000032d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000334: 	jne	.Ltmp4813 # Offset: 820
.Ltmp4809:
    0000033a: 	movq	-0x8(%rdx), %rax
    0000033e: 	addq	$0x200, %rax
    00000344: 	jmp	.Ltmp4813 # Offset: 836
.Ltmp4808:
    00000349: 	testq	%r12, %r12
    0000034c: 	je	.Ltmp4812 # Offset: 844
    00000352: 	jmp	.Ltmp4814 # Offset: 850
.Ltmp4810:
    00000354: 	callq	__stack_chk_fail@PLT # Offset: 852
.Ltmp4806:
    00000359: 	leaq	DATAat0x57008(%rip), %rdi
    00000360: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 864
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi27custom_multiply_shiftadd_42IiEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIt26custom_multiply_shiftadd_2ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 197
  State       : disassembled
  Address     : 0x38560
  Size        : 0x41d
  MaxSize     : 0x420
  Offset      : 0x38560
  Section     : .text
  Orc Section : .local.text._Z13test_constantIt26custom_multiply_shiftadd_2ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0196:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movl	%esi, %ebp
    00000012: 	pushq	%rbx
    00000013: 	subq	$0x28, %rsp
    00000017: 	movq	%rdx, 0x8(%rsp)
    0000001c: 	movq	%fs:0x28, %rax
    00000025: 	movq	%rax, 0x18(%rsp)
    0000002a: 	xorl	%eax, %eax
    0000002c: 	callq	clock@PLT # Offset: 44
    00000031: 	movl	iterations(%rip), %r9d
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%r9d, %r9d
    00000042: 	jle	.Ltmp4815 # Offset: 66
    00000048: 	leal	-0x1(%rbp), %eax
    0000004b: 	movl	%ebp, %r15d
    0000004e: 	leaq	DATAat0x571d0(%rip), %r12
    00000055: 	xorl	%r14d, %r14d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%ebp, %eax
    0000005e: 	cvttsd2si	init_value(%rip), %ecx
    00000066: 	andl	$-0x8, %r15d
    0000006a: 	shrl	$0x3, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r13,%rax), %rbx
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp4821:
    00000080: 	xorl	%edx, %edx
    00000082: 	testl	%ebp, %ebp
    00000084: 	jle	.Ltmp4816 # Offset: 132
    0000008a: 	cmpl	$0x6, 0x4(%rsp)
    0000008f: 	jbe	.Ltmp4817 # Offset: 143
    00000095: 	movq	%r13, %rax
    00000098: 	pxor	%xmm0, %xmm0
    0000009c: 	nopl	(%rax) # Size: 4
.Ltmp4818:
    000000a0: 	movdqu	(%rax), %xmm3
    000000a4: 	addq	$0x10, %rax
    000000a8: 	movdqa	%xmm3, %xmm1
    000000ac: 	movdqa	%xmm3, %xmm2
    000000b0: 	psllw	$0x6, %xmm1
    000000b5: 	psllw	$0x3, %xmm2
    000000ba: 	paddw	%xmm1, %xmm0
    000000be: 	movdqa	%xmm3, %xmm1
    000000c2: 	psllw	$0x1, %xmm1
    000000c7: 	paddw	%xmm3, %xmm1
    000000cb: 	movdqa	%xmm1, %xmm3
    000000cf: 	psllw	$0x1, %xmm1
    000000d4: 	psllw	$0x4, %xmm3
    000000d9: 	paddw	%xmm3, %xmm2
    000000dd: 	paddw	%xmm2, %xmm1
    000000e1: 	psubw	%xmm1, %xmm0
    000000e5: 	cmpq	%rbx, %rax
    000000e8: 	jne	.Ltmp4818 # Offset: 232
    000000ea: 	movdqa	%xmm0, %xmm1
    000000ee: 	psrldq	$0x8, %xmm1
    000000f3: 	paddw	%xmm1, %xmm0
    000000f7: 	movdqa	%xmm0, %xmm1
    000000fb: 	psrldq	$0x4, %xmm1
    00000100: 	paddw	%xmm1, %xmm0
    00000104: 	movdqa	%xmm0, %xmm1
    00000108: 	psrldq	$0x2, %xmm1
    0000010d: 	paddw	%xmm1, %xmm0
    00000111: 	pextrw	$0x0, %xmm0, %edx
    00000116: 	cmpl	%r15d, %ebp
    00000119: 	je	.Ltmp4816 # Offset: 281
    0000011f: 	movl	%r15d, %eax
    00000122: 	movl	%r15d, %esi
.Ltmp4829:
    00000125: 	movl	%ebp, %edi
    00000127: 	subl	%eax, %edi
    00000129: 	leal	-0x1(%rdi), %r8d
    0000012d: 	cmpl	$0x2, %r8d
    00000131: 	jbe	.Ltmp4819 # Offset: 305
    00000133: 	movq	(%r13,%rax,2), %xmm3
    0000013a: 	movdqa	%xmm3, %xmm1
    0000013e: 	movdqa	%xmm3, %xmm0
    00000142: 	movdqa	%xmm3, %xmm2
    00000146: 	psllw	$0x1, %xmm1
    0000014b: 	psllw	$0x3, %xmm2
    00000150: 	paddw	%xmm3, %xmm1
    00000154: 	psllw	$0x6, %xmm0
    00000159: 	movdqa	%xmm1, %xmm3
    0000015d: 	psllw	$0x1, %xmm1
    00000162: 	psllw	$0x4, %xmm3
    00000167: 	paddw	%xmm3, %xmm2
    0000016b: 	paddw	%xmm2, %xmm1
    0000016f: 	psubw	%xmm1, %xmm0
    00000173: 	pextrw	$0x1, %xmm0, %eax
    00000178: 	pextrw	$0x0, %xmm0, %r8d
    0000017e: 	addl	%r8d, %eax
    00000181: 	addl	%edx, %eax
    00000183: 	pextrw	$0x2, %xmm0, %edx
    00000188: 	addl	%edx, %eax
    0000018a: 	pextrw	$0x3, %xmm0, %edx
    0000018f: 	addl	%eax, %edx
    00000191: 	movl	%edi, %eax
    00000193: 	andl	$-0x4, %eax
    00000196: 	addl	%eax, %esi
    00000198: 	cmpl	%edi, %eax
    0000019a: 	je	.Ltmp4816 # Offset: 410
.Ltmp4819:
    000001a0: 	movslq	%esi, %rax
    000001a3: 	movzwl	(%r13,%rax,2), %r10d
    000001a9: 	leaq	(%rax,%rax), %rdi
    000001ad: 	movl	%r10d, %eax
    000001b0: 	leal	(%r10,%r10), %r8d
    000001b4: 	shll	$0x6, %eax
    000001b7: 	addl	%edx, %eax
    000001b9: 	leal	(%r8,%r10), %edx
    000001bd: 	shll	$0x4, %edx
    000001c0: 	subl	%edx, %eax
    000001c2: 	leal	(,%r10,8), %edx
    000001ca: 	shll	$0x2, %r10d
    000001ce: 	subl	%edx, %eax
    000001d0: 	subl	%r10d, %eax
    000001d3: 	subl	%r8d, %eax
    000001d6: 	movl	%eax, %edx
    000001d8: 	leal	0x1(%rsi), %eax
    000001db: 	cmpl	%eax, %ebp
    000001dd: 	jle	.Ltmp4816 # Offset: 477
    000001df: 	movzwl	0x2(%r13,%rdi), %eax
    000001e5: 	addl	$0x2, %esi
    000001e8: 	leal	(%rax,%rax), %r8d
    000001ec: 	movl	%eax, %r10d
    000001ef: 	leal	(%r8,%rax), %r11d
    000001f3: 	shll	$0x6, %r10d
    000001f7: 	shll	$0x4, %r11d
    000001fb: 	leal	(%r11,%rax,8), %r11d
    000001ff: 	shll	$0x2, %eax
    00000202: 	subl	%r11d, %r10d
    00000205: 	subl	%eax, %r10d
    00000208: 	movl	%r10d, %eax
    0000020b: 	subl	%r8d, %eax
    0000020e: 	addl	%eax, %edx
    00000210: 	cmpl	%esi, %ebp
    00000212: 	jle	.Ltmp4816 # Offset: 530
    00000214: 	movzwl	0x4(%r13,%rdi), %esi
    0000021a: 	leal	(%rsi,%rsi), %edi
    0000021d: 	movl	%esi, %eax
    0000021f: 	leal	(%rdi,%rsi), %r8d
    00000223: 	shll	$0x6, %eax
    00000226: 	shll	$0x4, %r8d
    0000022a: 	leal	(%r8,%rsi,8), %r8d
    0000022e: 	shll	$0x2, %esi
    00000231: 	subl	%r8d, %eax
    00000234: 	subl	%esi, %eax
    00000236: 	subl	%edi, %eax
    00000238: 	addl	%eax, %edx
.Ltmp4816:
    0000023a: 	leal	(%rcx,%rcx), %edi
    0000023d: 	movl	%ecx, %eax
    0000023f: 	leal	(%rdi,%rcx), %esi
    00000242: 	shll	$0x6, %eax
    00000245: 	shll	$0x4, %esi
    00000248: 	leal	(%rsi,%rcx,8), %esi
    0000024b: 	subl	%esi, %eax
    0000024d: 	leal	(,%rcx,4), %esi
    00000254: 	subl	%esi, %eax
    00000256: 	subl	%edi, %eax
    00000258: 	imulw	$0x1f40, %ax, %ax
    0000025d: 	cmpw	%dx, %ax
    00000260: 	je	.Ltmp4820 # Offset: 608
    00000262: 	movl	current_test(%rip), %edx
    00000268: 	movq	%r12, %rsi
    0000026b: 	movl	$0x1, %edi
    00000270: 	xorl	%eax, %eax
    00000272: 	addl	$0x1, %r14d
    00000276: 	callq	__printf_chk@PLT # Offset: 630
    0000027b: 	movl	iterations(%rip), %r9d
    00000282: 	cmpl	%r14d, %r9d
    00000285: 	jle	.Ltmp4815 # Offset: 645
    00000287: 	cvttsd2si	init_value(%rip), %ecx
    0000028f: 	jmp	.Ltmp4821 # Offset: 655
    00000294: 	nopl	(%rax) # Size: 4
.Ltmp4820:
    00000298: 	addl	$0x1, %r14d
    0000029c: 	cmpl	%r9d, %r14d
    0000029f: 	jl	.Ltmp4821 # Offset: 671
.Ltmp4815:
    000002a5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002ac: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002b3: 	subq	$0x20, %rax
    000002b7: 	cmpq	%rax, %rbx
    000002ba: 	je	.Ltmp4822 # Offset: 698
    000002c0: 	movq	0x8(%rsp), %rax
    000002c5: 	leaq	0x10(%rbx), %rdi
    000002c9: 	movq	%rdi, (%rbx)
    000002cc: 	movq	(%rax), %rbp
    000002cf: 	movq	0x8(%rax), %r12
    000002d3: 	movq	%rbp, %rax
    000002d6: 	addq	%r12, %rax
    000002d9: 	je	.Ltmp4823 # Offset: 729
    000002db: 	testq	%rbp, %rbp
    000002de: 	je	.Ltmp4824 # Offset: 734
.Ltmp4823:
    000002e4: 	movq	%r12, 0x10(%rsp)
    000002e9: 	cmpq	$0xf, %r12
    000002ed: 	ja	.Ltmp4825 # Offset: 749
    000002f3: 	cmpq	$0x1, %r12
    000002f7: 	jne	.Ltmp4826 # Offset: 759
    000002fd: 	movzbl	(%rbp), %eax
    00000301: 	movb	%al, 0x10(%rbx)
.Ltmp4830:
    00000304: 	movq	%r12, 0x8(%rbx)
    00000308: 	movb	$0x0, (%rdi,%r12)
    0000030d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000314: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000031b: 	addq	$0x20, %rax
    0000031f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000326: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000032d: 	je	.Ltmp4827 # Offset: 813
.Ltmp4831:
    00000333: 	movq	-0x20(%rax), %rbp
    00000337: 	callq	clock@PLT # Offset: 823
    0000033c: 	movq	%rax, end_time(%rip)
    00000343: 	movq	0x18(%rsp), %rdx
    00000348: 	subq	%fs:0x28, %rdx
    00000351: 	jne	.Ltmp4828 # Offset: 849
    00000357: 	subq	start_time(%rip), %rax
    0000035e: 	pxor	%xmm0, %xmm0
    00000362: 	movq	%rbp, %rdi
    00000365: 	cvtsi2sd	%rax, %xmm0
    0000036a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000372: 	addq	$0x28, %rsp
    00000376: 	popq	%rbx
    00000377: 	popq	%rbp
    00000378: 	popq	%r12
    0000037a: 	popq	%r13
    0000037c: 	popq	%r14
    0000037e: 	popq	%r15
    00000380: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 896
.Ltmp4817:
    00000385: 	xorl	%eax, %eax
    00000387: 	xorl	%esi, %esi
    00000389: 	xorl	%edx, %edx
    0000038b: 	jmp	.Ltmp4829 # Offset: 907
.Ltmp4825:
    00000390: 	movq	%rbx, %rdi
    00000393: 	leaq	0x10(%rsp), %rsi
    00000398: 	xorl	%edx, %edx
    0000039a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 922
    0000039f: 	movq	%rax, (%rbx)
    000003a2: 	movq	%rax, %rdi
    000003a5: 	movq	0x10(%rsp), %rax
    000003aa: 	movq	%rax, 0x10(%rbx)
.Ltmp4832:
    000003ae: 	movq	%r12, %rdx
    000003b1: 	movq	%rbp, %rsi
    000003b4: 	callq	memcpy@PLT # Offset: 948
    000003b9: 	movq	0x10(%rsp), %r12
    000003be: 	movq	(%rbx), %rdi
    000003c1: 	jmp	.Ltmp4830 # Offset: 961
.Ltmp4822:
    000003c6: 	movq	0x8(%rsp), %rsi
    000003cb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003d2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 978
    000003d7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003de: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003e5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003ec: 	jne	.Ltmp4831 # Offset: 1004
.Ltmp4827:
    000003f2: 	movq	-0x8(%rdx), %rax
    000003f6: 	addq	$0x200, %rax
    000003fc: 	jmp	.Ltmp4831 # Offset: 1020
.Ltmp4826:
    00000401: 	testq	%r12, %r12
    00000404: 	je	.Ltmp4830 # Offset: 1028
    0000040a: 	jmp	.Ltmp4832 # Offset: 1034
.Ltmp4828:
    0000040c: 	callq	__stack_chk_fail@PLT # Offset: 1036
.Ltmp4824:
    00000411: 	leaq	DATAat0x57008(%rip), %rdi
    00000418: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1048
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIt26custom_multiply_shiftadd_2ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeItEvv" after disassembly {
  Number      : 198
  State       : disassembled
  Address     : 0x38980
  Size        : 0x6dd9
  MaxSize     : 0x6de0
  Offset      : 0x38980
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeItEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0197:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0x1000, %rsp
    0000002d: 	orq	$0x0, (%rsp)
    00000032: 	subq	$0xf58, %rsp
    00000039: 	leaq	DATAat0x57a38(%rip), %rsi
    00000040: 	leaq	"_ZL7gLabels/1"(%rip), %r15
    00000047: 	movq	%fs:0x28, %rax
    00000050: 	movq	%rax, 0x3f48(%rsp)
    00000058: 	xorl	%eax, %eax
    0000005a: 	leaq	0x40(%rsp), %r14
    0000005f: 	leaq	0xc0(%rsp), %rbp
    00000067: 	movq	%r14, %rdi
    0000006a: 	leaq	0x3f40(%rsp), %rbx
    00000072: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 114
    00000077: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm3
    0000007f: 	leaq	0x20(%rsp), %rsi
    00000084: 	movq	%r15, %rdi
    00000087: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    0000008f: 	movaps	%xmm3, 0x20(%rsp)
    00000094: 	movaps	%xmm4, 0x30(%rsp)
    00000099: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 153
    0000009e: 	cvttsd2si	init_value(%rip), %eax
    000000a6: 	movd	%eax, %xmm0
    000000aa: 	movq	%rbp, %rax
    000000ad: 	punpcklwd	%xmm0, %xmm0
    000000b1: 	pshufd	$0x0, %xmm0, %xmm0
    000000b6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4833:
    000000c0: 	movaps	%xmm0, (%rax)
    000000c3: 	addq	$0x10, %rax
    000000c7: 	cmpq	%rbx, %rax
    000000ca: 	jne	.Ltmp4833 # Offset: 202
    000000cc: 	leaq	0xa0(%rsp), %r12
    000000d4: 	leaq	DATAat0x57a38(%rip), %rsi
    000000db: 	movq	%r12, %rdi
    000000de: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 222
    000000e3: 	movq	0xa0(%rsp), %rdi
    000000eb: 	leaq	0xb0(%rsp), %r13
    000000f3: 	cmpq	%r13, %rdi
    000000f6: 	je	.Ltmp4834 # Offset: 246
    000000f8: 	movq	0xb0(%rsp), %rax
    00000100: 	leaq	0x1(%rax), %rsi
    00000104: 	callq	_ZdlPvm@PLT # Offset: 260
.Ltmp4834:
    00000109: 	leaq	DATAat0x57a38(%rip), %rsi
    00000110: 	movq	%r12, %rdi
    00000113: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 275
    00000118: 	movq	0xa0(%rsp), %rdi
    00000120: 	cmpq	%r13, %rdi
    00000123: 	je	.Ltmp4835 # Offset: 291
    00000125: 	movq	0xb0(%rsp), %rax
    0000012d: 	leaq	0x1(%rax), %rsi
    00000131: 	callq	_ZdlPvm@PLT # Offset: 305
.Ltmp4835:
    00000136: 	leaq	DATAat0x57a38(%rip), %rsi
    0000013d: 	movq	%r12, %rdi
    00000140: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 320
    00000145: 	movq	0xa0(%rsp), %rdi
    0000014d: 	cmpq	%r13, %rdi
    00000150: 	je	.Ltmp4836 # Offset: 336
    00000152: 	movq	0xb0(%rsp), %rax
    0000015a: 	leaq	0x1(%rax), %rsi
    0000015e: 	callq	_ZdlPvm@PLT # Offset: 350
.Ltmp4836:
    00000163: 	leaq	DATAat0x57a38(%rip), %rsi
    0000016a: 	movq	%r12, %rdi
    0000016d: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 365
    00000172: 	movq	0xa0(%rsp), %rdi
    0000017a: 	cmpq	%r13, %rdi
    0000017d: 	je	.Ltmp4837 # Offset: 381
    0000017f: 	movq	0xb0(%rsp), %rax
    00000187: 	leaq	0x1(%rax), %rsi
    0000018b: 	callq	_ZdlPvm@PLT # Offset: 395
.Ltmp4837:
    00000190: 	leaq	DATAat0x57a38(%rip), %rsi
    00000197: 	movq	%r12, %rdi
    0000019a: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 410
    0000019f: 	movq	0xa0(%rsp), %rdi
    000001a7: 	cmpq	%r13, %rdi
    000001aa: 	je	.Ltmp4838 # Offset: 426
    000001ac: 	movq	0xb0(%rsp), %rax
    000001b4: 	leaq	0x1(%rax), %rsi
    000001b8: 	callq	_ZdlPvm@PLT # Offset: 440
.Ltmp4838:
    000001bd: 	leaq	DATAat0x57a38(%rip), %rsi
    000001c4: 	movq	%r12, %rdi
    000001c7: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 455
    000001cc: 	movq	0xa0(%rsp), %rdi
    000001d4: 	cmpq	%r13, %rdi
    000001d7: 	je	.Ltmp4839 # Offset: 471
    000001d9: 	movq	0xb0(%rsp), %rax
    000001e1: 	leaq	0x1(%rax), %rsi
    000001e5: 	callq	_ZdlPvm@PLT # Offset: 485
.Ltmp4839:
    000001ea: 	leaq	DATAat0x57a38(%rip), %rsi
    000001f1: 	movq	%r12, %rdi
    000001f4: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 500
    000001f9: 	movq	0xa0(%rsp), %rdi
    00000201: 	cmpq	%r13, %rdi
    00000204: 	je	.Ltmp4840 # Offset: 516
    00000206: 	movq	0xb0(%rsp), %rax
    0000020e: 	leaq	0x1(%rax), %rsi
    00000212: 	callq	_ZdlPvm@PLT # Offset: 530
.Ltmp4840:
    00000217: 	leaq	DATAat0x57a38(%rip), %rsi
    0000021e: 	movq	%r12, %rdi
    00000221: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 545
    00000226: 	movq	0xa0(%rsp), %rdi
    0000022e: 	cmpq	%r13, %rdi
    00000231: 	je	.Ltmp4841 # Offset: 561
    00000233: 	movq	0xb0(%rsp), %rax
    0000023b: 	leaq	0x1(%rax), %rsi
    0000023f: 	callq	_ZdlPvm@PLT # Offset: 575
.Ltmp4841:
    00000244: 	leaq	DATAat0x57a38(%rip), %rsi
    0000024b: 	movq	%r12, %rdi
    0000024e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 590
    00000253: 	movq	0xa0(%rsp), %rdi
    0000025b: 	cmpq	%r13, %rdi
    0000025e: 	je	.Ltmp4842 # Offset: 606
    00000260: 	movq	0xb0(%rsp), %rax
    00000268: 	leaq	0x1(%rax), %rsi
    0000026c: 	callq	_ZdlPvm@PLT # Offset: 620
.Ltmp4842:
    00000271: 	leaq	DATAat0x57a38(%rip), %rsi
    00000278: 	movq	%r12, %rdi
    0000027b: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 635
    00000280: 	movq	0xa0(%rsp), %rdi
    00000288: 	cmpq	%r13, %rdi
    0000028b: 	je	.Ltmp4843 # Offset: 651
    0000028d: 	movq	0xb0(%rsp), %rax
    00000295: 	leaq	0x1(%rax), %rsi
    00000299: 	callq	_ZdlPvm@PLT # Offset: 665
.Ltmp4843:
    0000029e: 	leaq	DATAat0x57a38(%rip), %rsi
    000002a5: 	movq	%r12, %rdi
    000002a8: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 680
    000002ad: 	movq	0xa0(%rsp), %rdi
    000002b5: 	cmpq	%r13, %rdi
    000002b8: 	je	.Ltmp4844 # Offset: 696
    000002ba: 	movq	0xb0(%rsp), %rax
    000002c2: 	leaq	0x1(%rax), %rsi
    000002c6: 	callq	_ZdlPvm@PLT # Offset: 710
.Ltmp4844:
    000002cb: 	leaq	DATAat0x571e0(%rip), %rdx
    000002d2: 	movq	%r14, %rsi
    000002d5: 	movq	%r12, %rdi
    000002d8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 728
    000002dd: 	callq	clock@PLT # Offset: 733
    000002e2: 	movl	iterations(%rip), %ecx
    000002e8: 	movl	$0x0, (%rsp)
    000002ef: 	movq	%rax, start_time(%rip)
    000002f6: 	testl	%ecx, %ecx
    000002f8: 	jle	.Ltmp4845 # Offset: 760
    000002fe: 	nop # Size: 2
.Ltmp4848:
    00000300: 	movq	%rbp, %rax
    00000303: 	pxor	%xmm1, %xmm1
    00000307: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4846:
    00000310: 	movdqa	(%rax), %xmm0
    00000314: 	addq	$0x10, %rax
    00000318: 	psllw	$0x1, %xmm0
    0000031d: 	paddw	%xmm0, %xmm1
    00000321: 	cmpq	%rbx, %rax
    00000324: 	jne	.Ltmp4846 # Offset: 804
    00000326: 	movdqa	%xmm1, %xmm0
    0000032a: 	cvttsd2si	init_value(%rip), %eax
    00000332: 	psrldq	$0x8, %xmm0
    00000337: 	paddw	%xmm0, %xmm1
    0000033b: 	movdqa	%xmm1, %xmm0
    0000033f: 	psrldq	$0x4, %xmm0
    00000344: 	addl	%eax, %eax
    00000346: 	imulw	$0x1f40, %ax, %ax
    0000034b: 	paddw	%xmm0, %xmm1
    0000034f: 	movdqa	%xmm1, %xmm0
    00000353: 	psrldq	$0x2, %xmm0
    00000358: 	paddw	%xmm0, %xmm1
    0000035c: 	pextrw	$0x0, %xmm1, %edx
    00000361: 	cmpw	%dx, %ax
    00000364: 	je	.Ltmp4847 # Offset: 868
    00000366: 	movl	current_test(%rip), %edx
    0000036c: 	leaq	DATAat0x571d0(%rip), %rsi
    00000373: 	movl	$0x1, %edi
    00000378: 	xorl	%eax, %eax
    0000037a: 	callq	__printf_chk@PLT # Offset: 890
    0000037f: 	movl	iterations(%rip), %ecx
.Ltmp4847:
    00000385: 	addl	$0x1, (%rsp)
    00000389: 	movl	(%rsp), %eax
    0000038c: 	cmpl	%ecx, %eax
    0000038e: 	jl	.Ltmp4848 # Offset: 910
.Ltmp4845:
    00000394: 	movq	%r12, %rsi
    00000397: 	movq	%r15, %rdi
    0000039a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 922
    0000039f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003a6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000003ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003b4: 	je	.Ltmp4849 # Offset: 948
.Ltmp5257:
    000003ba: 	movq	-0x20(%rax), %rdi
    000003be: 	movq	%rdi, (%rsp)
    000003c2: 	callq	clock@PLT # Offset: 962
    000003c7: 	movq	(%rsp), %rdi
    000003cb: 	pxor	%xmm0, %xmm0
    000003cf: 	movq	%rax, end_time(%rip)
    000003d6: 	subq	start_time(%rip), %rax
    000003dd: 	cvtsi2sd	%rax, %xmm0
    000003e2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003ea: 	callq	_Z13record_resultdPKc # Offset: 1002
    000003ef: 	movq	0xa0(%rsp), %rdi
    000003f7: 	cmpq	%r13, %rdi
    000003fa: 	je	.Ltmp4850 # Offset: 1018
    000003fc: 	movq	0xb0(%rsp), %rax
    00000404: 	leaq	0x1(%rax), %rsi
    00000408: 	callq	_ZdlPvm@PLT # Offset: 1032
.Ltmp4850:
    0000040d: 	leaq	DATAat0x571f1(%rip), %rdx
    00000414: 	movq	%r14, %rsi
    00000417: 	movq	%r12, %rdi
    0000041a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1050
    0000041f: 	callq	clock@PLT # Offset: 1055
    00000424: 	movl	iterations(%rip), %ecx
    0000042a: 	movl	$0x0, (%rsp)
    00000431: 	movq	%rax, start_time(%rip)
    00000438: 	testl	%ecx, %ecx
    0000043a: 	jle	.Ltmp4851 # Offset: 1082
.Ltmp4854:
    00000440: 	movq	%rbp, %rax
    00000443: 	pxor	%xmm1, %xmm1
    00000447: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4852:
    00000450: 	movdqa	(%rax), %xmm0
    00000454: 	addq	$0x10, %rax
    00000458: 	psllw	$0x1, %xmm0
    0000045d: 	paddw	%xmm0, %xmm1
    00000461: 	cmpq	%rbx, %rax
    00000464: 	jne	.Ltmp4852 # Offset: 1124
    00000466: 	movdqa	%xmm1, %xmm0
    0000046a: 	cvttsd2si	init_value(%rip), %eax
    00000472: 	psrldq	$0x8, %xmm0
    00000477: 	paddw	%xmm0, %xmm1
    0000047b: 	movdqa	%xmm1, %xmm0
    0000047f: 	psrldq	$0x4, %xmm0
    00000484: 	imulw	$0x3e80, %ax, %ax
    00000489: 	paddw	%xmm0, %xmm1
    0000048d: 	movdqa	%xmm1, %xmm0
    00000491: 	psrldq	$0x2, %xmm0
    00000496: 	paddw	%xmm0, %xmm1
    0000049a: 	pextrw	$0x0, %xmm1, %edx
    0000049f: 	cmpw	%dx, %ax
    000004a2: 	je	.Ltmp4853 # Offset: 1186
    000004a4: 	movl	current_test(%rip), %edx
    000004aa: 	leaq	DATAat0x571d0(%rip), %rsi
    000004b1: 	movl	$0x1, %edi
    000004b6: 	xorl	%eax, %eax
    000004b8: 	callq	__printf_chk@PLT # Offset: 1208
    000004bd: 	movl	iterations(%rip), %ecx
.Ltmp4853:
    000004c3: 	addl	$0x1, (%rsp)
    000004c7: 	movl	(%rsp), %eax
    000004ca: 	cmpl	%ecx, %eax
    000004cc: 	jl	.Ltmp4854 # Offset: 1228
.Ltmp4851:
    000004d2: 	movq	%r12, %rsi
    000004d5: 	movq	%r15, %rdi
    000004d8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1240
    000004dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004e4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000004eb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004f2: 	je	.Ltmp4855 # Offset: 1266
.Ltmp5318:
    000004f8: 	movq	-0x20(%rax), %rdi
    000004fc: 	movq	%rdi, (%rsp)
    00000500: 	callq	clock@PLT # Offset: 1280
    00000505: 	movq	(%rsp), %rdi
    00000509: 	pxor	%xmm0, %xmm0
    0000050d: 	movq	%rax, end_time(%rip)
    00000514: 	subq	start_time(%rip), %rax
    0000051b: 	cvtsi2sd	%rax, %xmm0
    00000520: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000528: 	callq	_Z13record_resultdPKc # Offset: 1320
    0000052d: 	movq	0xa0(%rsp), %rdi
    00000535: 	cmpq	%r13, %rdi
    00000538: 	je	.Ltmp4856 # Offset: 1336
    0000053a: 	movq	0xb0(%rsp), %rax
    00000542: 	leaq	0x1(%rax), %rsi
    00000546: 	callq	_ZdlPvm@PLT # Offset: 1350
.Ltmp4856:
    0000054b: 	leaq	DATAat0x571fb(%rip), %rdx
    00000552: 	movq	%r14, %rsi
    00000555: 	movq	%r12, %rdi
    00000558: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1368
    0000055d: 	callq	clock@PLT # Offset: 1373
    00000562: 	movl	iterations(%rip), %ecx
    00000568: 	movl	$0x0, (%rsp)
    0000056f: 	movq	%rax, start_time(%rip)
    00000576: 	testl	%ecx, %ecx
    00000578: 	jle	.Ltmp4857 # Offset: 1400
    0000057e: 	nop # Size: 2
.Ltmp4860:
    00000580: 	movq	%rbp, %rax
    00000583: 	pxor	%xmm1, %xmm1
    00000587: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4858:
    00000590: 	movdqa	(%rax), %xmm0
    00000594: 	addq	$0x10, %rax
    00000598: 	psllw	$0x1, %xmm0
    0000059d: 	paddw	%xmm0, %xmm1
    000005a1: 	cmpq	%rbx, %rax
    000005a4: 	jne	.Ltmp4858 # Offset: 1444
    000005a6: 	movdqa	%xmm1, %xmm0
    000005aa: 	cvttsd2si	init_value(%rip), %eax
    000005b2: 	psrldq	$0x8, %xmm0
    000005b7: 	paddw	%xmm0, %xmm1
    000005bb: 	movdqa	%xmm1, %xmm0
    000005bf: 	psrldq	$0x4, %xmm0
    000005c4: 	imulw	$0x3e80, %ax, %ax
    000005c9: 	paddw	%xmm0, %xmm1
    000005cd: 	movdqa	%xmm1, %xmm0
    000005d1: 	psrldq	$0x2, %xmm0
    000005d6: 	paddw	%xmm0, %xmm1
    000005da: 	pextrw	$0x0, %xmm1, %edx
    000005df: 	cmpw	%dx, %ax
    000005e2: 	je	.Ltmp4859 # Offset: 1506
    000005e4: 	movl	current_test(%rip), %edx
    000005ea: 	leaq	DATAat0x571d0(%rip), %rsi
    000005f1: 	movl	$0x1, %edi
    000005f6: 	xorl	%eax, %eax
    000005f8: 	callq	__printf_chk@PLT # Offset: 1528
    000005fd: 	movl	iterations(%rip), %ecx
.Ltmp4859:
    00000603: 	addl	$0x1, (%rsp)
    00000607: 	movl	(%rsp), %eax
    0000060a: 	cmpl	%ecx, %eax
    0000060c: 	jl	.Ltmp4860 # Offset: 1548
.Ltmp4857:
    00000612: 	movq	%r12, %rsi
    00000615: 	movq	%r15, %rdi
    00000618: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1560
    0000061d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000624: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000062b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000632: 	je	.Ltmp4861 # Offset: 1586
.Ltmp5317:
    00000638: 	movq	-0x20(%rax), %rdi
    0000063c: 	movq	%rdi, (%rsp)
    00000640: 	callq	clock@PLT # Offset: 1600
    00000645: 	movq	(%rsp), %rdi
    00000649: 	pxor	%xmm0, %xmm0
    0000064d: 	movq	%rax, end_time(%rip)
    00000654: 	subq	start_time(%rip), %rax
    0000065b: 	cvtsi2sd	%rax, %xmm0
    00000660: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000668: 	callq	_Z13record_resultdPKc # Offset: 1640
    0000066d: 	movq	0xa0(%rsp), %rdi
    00000675: 	cmpq	%r13, %rdi
    00000678: 	je	.Ltmp4862 # Offset: 1656
    0000067a: 	movq	0xb0(%rsp), %rax
    00000682: 	leaq	0x1(%rax), %rsi
    00000686: 	callq	_ZdlPvm@PLT # Offset: 1670
.Ltmp4862:
    0000068b: 	leaq	DATAat0x57211(%rip), %rdx
    00000692: 	movq	%r14, %rsi
    00000695: 	movq	%r12, %rdi
    00000698: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1688
    0000069d: 	movq	%r12, %rcx
    000006a0: 	movl	$0x2, %edx
    000006a5: 	movl	$0x1f40, %esi
    000006aa: 	movq	%rbp, %rdi
    000006ad: 	callq	_Z14test_variable1It24custom_multiply_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1709
    000006b2: 	movq	0xa0(%rsp), %rdi
    000006ba: 	cmpq	%r13, %rdi
    000006bd: 	je	.Ltmp4863 # Offset: 1725
    000006bf: 	movq	0xb0(%rsp), %rax
    000006c7: 	leaq	0x1(%rax), %rsi
    000006cb: 	callq	_ZdlPvm@PLT # Offset: 1739
.Ltmp4863:
    000006d0: 	leaq	DATAat0x57229(%rip), %rdx
    000006d7: 	movq	%r14, %rsi
    000006da: 	movq	%r12, %rdi
    000006dd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1757
    000006e2: 	callq	clock@PLT # Offset: 1762
    000006e7: 	movl	iterations(%rip), %ecx
    000006ed: 	movl	$0x0, (%rsp)
    000006f4: 	movq	%rax, start_time(%rip)
    000006fb: 	testl	%ecx, %ecx
    000006fd: 	jle	.Ltmp4864 # Offset: 1789
    00000703: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4867:
    00000708: 	movq	%rbp, %rax
    0000070b: 	pxor	%xmm1, %xmm1
    0000070f: 	nop # Size: 1
.Ltmp4865:
    00000710: 	movdqa	(%rax), %xmm0
    00000714: 	addq	$0x10, %rax
    00000718: 	psllw	$0x1, %xmm0
    0000071d: 	paddw	%xmm0, %xmm1
    00000721: 	cmpq	%rax, %rbx
    00000724: 	jne	.Ltmp4865 # Offset: 1828
    00000726: 	movdqa	%xmm1, %xmm0
    0000072a: 	cvttsd2si	init_value(%rip), %eax
    00000732: 	psrldq	$0x8, %xmm0
    00000737: 	paddw	%xmm0, %xmm1
    0000073b: 	movdqa	%xmm1, %xmm0
    0000073f: 	psrldq	$0x4, %xmm0
    00000744: 	imulw	$0x3e80, %ax, %ax
    00000749: 	paddw	%xmm0, %xmm1
    0000074d: 	movdqa	%xmm1, %xmm0
    00000751: 	psrldq	$0x2, %xmm0
    00000756: 	paddw	%xmm0, %xmm1
    0000075a: 	pextrw	$0x0, %xmm1, %edx
    0000075f: 	cmpw	%dx, %ax
    00000762: 	je	.Ltmp4866 # Offset: 1890
    00000764: 	movl	current_test(%rip), %edx
    0000076a: 	leaq	DATAat0x571d0(%rip), %rsi
    00000771: 	movl	$0x1, %edi
    00000776: 	xorl	%eax, %eax
    00000778: 	callq	__printf_chk@PLT # Offset: 1912
    0000077d: 	movl	iterations(%rip), %ecx
.Ltmp4866:
    00000783: 	addl	$0x1, (%rsp)
    00000787: 	movl	(%rsp), %eax
    0000078a: 	cmpl	%ecx, %eax
    0000078c: 	jl	.Ltmp4867 # Offset: 1932
.Ltmp4864:
    00000792: 	movq	%r12, %rsi
    00000795: 	movq	%r15, %rdi
    00000798: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1944
    0000079d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007a4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007ab: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007b2: 	je	.Ltmp4868 # Offset: 1970
.Ltmp5316:
    000007b8: 	movq	-0x20(%rax), %rdi
    000007bc: 	movq	%rdi, (%rsp)
    000007c0: 	callq	clock@PLT # Offset: 1984
    000007c5: 	movq	(%rsp), %rdi
    000007c9: 	pxor	%xmm0, %xmm0
    000007cd: 	movq	%rax, end_time(%rip)
    000007d4: 	subq	start_time(%rip), %rax
    000007db: 	cvtsi2sd	%rax, %xmm0
    000007e0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000007e8: 	callq	_Z13record_resultdPKc # Offset: 2024
    000007ed: 	movq	0xa0(%rsp), %rdi
    000007f5: 	cmpq	%r13, %rdi
    000007f8: 	je	.Ltmp4869 # Offset: 2040
    000007fa: 	movq	0xb0(%rsp), %rax
    00000802: 	leaq	0x1(%rax), %rsi
    00000806: 	callq	_ZdlPvm@PLT # Offset: 2054
.Ltmp4869:
    0000080b: 	leaq	DATAat0x57241(%rip), %rdx
    00000812: 	movq	%r14, %rsi
    00000815: 	movq	%r12, %rdi
    00000818: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2072
    0000081d: 	movq	%r12, %rdx
    00000820: 	movl	$0x1f40, %esi
    00000825: 	movq	%rbp, %rdi
    00000828: 	callq	_Z13test_constantIt26custom_multiply_shiftadd_2ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2088
    0000082d: 	movq	0xa0(%rsp), %rdi
    00000835: 	cmpq	%r13, %rdi
    00000838: 	je	.Ltmp4870 # Offset: 2104
    0000083a: 	movq	0xb0(%rsp), %rax
    00000842: 	leaq	0x1(%rax), %rsi
    00000846: 	callq	_ZdlPvm@PLT # Offset: 2118
.Ltmp4870:
    0000084b: 	leaq	DATAat0x57251(%rip), %rdx
    00000852: 	movq	%r14, %rsi
    00000855: 	movq	%r12, %rdi
    00000858: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2136
    0000085d: 	movq	%r12, %rdx
    00000860: 	movl	$0x1f40, %esi
    00000865: 	movq	%rbp, %rdi
    00000868: 	callq	_Z13test_constantIt10shift_leftItLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2152
    0000086d: 	movq	0xa0(%rsp), %rdi
    00000875: 	cmpq	%r13, %rdi
    00000878: 	je	.Ltmp4871 # Offset: 2168
    0000087a: 	movq	0xb0(%rsp), %rax
    00000882: 	leaq	0x1(%rax), %rsi
    00000886: 	callq	_ZdlPvm@PLT # Offset: 2182
.Ltmp4871:
    0000088b: 	leaq	DATAat0x57262(%rip), %rdx
    00000892: 	movq	%r14, %rsi
    00000895: 	movq	%r12, %rdi
    00000898: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2200
    0000089d: 	movq	%r12, %rcx
    000008a0: 	movl	$0x8, %edx
    000008a5: 	movl	$0x1f40, %esi
    000008aa: 	movq	%rbp, %rdi
    000008ad: 	callq	_Z14test_variable1It24custom_multiply_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2221
    000008b2: 	movq	0xa0(%rsp), %rdi
    000008ba: 	cmpq	%r13, %rdi
    000008bd: 	je	.Ltmp4872 # Offset: 2237
    000008bf: 	movq	0xb0(%rsp), %rax
    000008c7: 	leaq	0x1(%rax), %rsi
    000008cb: 	callq	_ZdlPvm@PLT # Offset: 2251
.Ltmp4872:
    000008d0: 	leaq	DATAat0x5727a(%rip), %rdx
    000008d7: 	movq	%r14, %rsi
    000008da: 	movq	%r12, %rdi
    000008dd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2269
    000008e2: 	callq	clock@PLT # Offset: 2274
    000008e7: 	movl	iterations(%rip), %ecx
    000008ed: 	movl	$0x0, (%rsp)
    000008f4: 	movq	%rax, start_time(%rip)
    000008fb: 	testl	%ecx, %ecx
    000008fd: 	jle	.Ltmp4873 # Offset: 2301
    00000903: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4876:
    00000908: 	movq	%rbp, %rax
    0000090b: 	pxor	%xmm1, %xmm1
    0000090f: 	nop # Size: 1
.Ltmp4874:
    00000910: 	movdqa	(%rax), %xmm0
    00000914: 	addq	$0x10, %rax
    00000918: 	psllw	$0x3, %xmm0
    0000091d: 	paddw	%xmm0, %xmm1
    00000921: 	cmpq	%rbx, %rax
    00000924: 	jne	.Ltmp4874 # Offset: 2340
    00000926: 	movdqa	%xmm1, %xmm0
    0000092a: 	cvttsd2si	init_value(%rip), %eax
    00000932: 	psrldq	$0x8, %xmm0
    00000937: 	paddw	%xmm0, %xmm1
    0000093b: 	movdqa	%xmm1, %xmm0
    0000093f: 	psrldq	$0x4, %xmm0
    00000944: 	leal	(,%rax,4), %edx
    0000094b: 	paddw	%xmm0, %xmm1
    0000094f: 	subl	%edx, %eax
    00000951: 	movdqa	%xmm1, %xmm0
    00000955: 	shll	$0x9, %eax
    00000958: 	psrldq	$0x2, %xmm0
    0000095d: 	paddw	%xmm0, %xmm1
    00000961: 	pextrw	$0x0, %xmm1, %edx
    00000966: 	cmpw	%dx, %ax
    00000969: 	je	.Ltmp4875 # Offset: 2409
    0000096b: 	movl	current_test(%rip), %edx
    00000971: 	leaq	DATAat0x571d0(%rip), %rsi
    00000978: 	movl	$0x1, %edi
    0000097d: 	xorl	%eax, %eax
    0000097f: 	callq	__printf_chk@PLT # Offset: 2431
    00000984: 	movl	iterations(%rip), %ecx
.Ltmp4875:
    0000098a: 	addl	$0x1, (%rsp)
    0000098e: 	movl	(%rsp), %eax
    00000991: 	cmpl	%ecx, %eax
    00000993: 	jl	.Ltmp4876 # Offset: 2451
.Ltmp4873:
    00000999: 	movq	%r12, %rsi
    0000099c: 	movq	%r15, %rdi
    0000099f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2463
    000009a4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000009ab: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000009b2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000009b9: 	je	.Ltmp4877 # Offset: 2489
.Ltmp5315:
    000009bf: 	movq	-0x20(%rax), %rdi
    000009c3: 	movq	%rdi, (%rsp)
    000009c7: 	callq	clock@PLT # Offset: 2503
    000009cc: 	movq	(%rsp), %rdi
    000009d0: 	pxor	%xmm0, %xmm0
    000009d4: 	movq	%rax, end_time(%rip)
    000009db: 	subq	start_time(%rip), %rax
    000009e2: 	cvtsi2sd	%rax, %xmm0
    000009e7: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000009ef: 	callq	_Z13record_resultdPKc # Offset: 2543
    000009f4: 	movq	0xa0(%rsp), %rdi
    000009fc: 	cmpq	%r13, %rdi
    000009ff: 	je	.Ltmp4878 # Offset: 2559
    00000a01: 	movq	0xb0(%rsp), %rax
    00000a09: 	leaq	0x1(%rax), %rsi
    00000a0d: 	callq	_ZdlPvm@PLT # Offset: 2573
.Ltmp4878:
    00000a12: 	leaq	DATAat0x57292(%rip), %rdx
    00000a19: 	movq	%r14, %rsi
    00000a1c: 	movq	%r12, %rdi
    00000a1f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2591
    00000a24: 	callq	clock@PLT # Offset: 2596
    00000a29: 	movl	iterations(%rip), %ecx
    00000a2f: 	movl	$0x0, (%rsp)
    00000a36: 	movq	%rax, start_time(%rip)
    00000a3d: 	testl	%ecx, %ecx
    00000a3f: 	jle	.Ltmp4879 # Offset: 2623
    00000a45: 	nopl	(%rax) # Size: 3
.Ltmp4882:
    00000a48: 	movq	%rbp, %rax
    00000a4b: 	pxor	%xmm1, %xmm1
    00000a4f: 	nop # Size: 1
.Ltmp4880:
    00000a50: 	movdqa	(%rax), %xmm0
    00000a54: 	addq	$0x10, %rax
    00000a58: 	psllw	$0x6, %xmm0
    00000a5d: 	paddw	%xmm0, %xmm1
    00000a61: 	cmpq	%rax, %rbx
    00000a64: 	jne	.Ltmp4880 # Offset: 2660
    00000a66: 	movdqa	%xmm1, %xmm0
    00000a6a: 	cvttsd2si	init_value(%rip), %eax
    00000a72: 	psrldq	$0x8, %xmm0
    00000a77: 	paddw	%xmm0, %xmm1
    00000a7b: 	movdqa	%xmm1, %xmm0
    00000a7f: 	psrldq	$0x4, %xmm0
    00000a84: 	shll	$0x6, %eax
    00000a87: 	imulw	$0x1f40, %ax, %ax
    00000a8c: 	paddw	%xmm0, %xmm1
    00000a90: 	movdqa	%xmm1, %xmm0
    00000a94: 	psrldq	$0x2, %xmm0
    00000a99: 	paddw	%xmm0, %xmm1
    00000a9d: 	pextrw	$0x0, %xmm1, %edx
    00000aa2: 	cmpw	%dx, %ax
    00000aa5: 	je	.Ltmp4881 # Offset: 2725
    00000aa7: 	movl	current_test(%rip), %edx
    00000aad: 	leaq	DATAat0x571d0(%rip), %rsi
    00000ab4: 	movl	$0x1, %edi
    00000ab9: 	xorl	%eax, %eax
    00000abb: 	callq	__printf_chk@PLT # Offset: 2747
    00000ac0: 	movl	iterations(%rip), %ecx
.Ltmp4881:
    00000ac6: 	addl	$0x1, (%rsp)
    00000aca: 	movl	(%rsp), %eax
    00000acd: 	cmpl	%ecx, %eax
    00000acf: 	jl	.Ltmp4882 # Offset: 2767
.Ltmp4879:
    00000ad5: 	movq	%r12, %rsi
    00000ad8: 	movq	%r15, %rdi
    00000adb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2779
    00000ae0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ae7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000aee: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000af5: 	je	.Ltmp4883 # Offset: 2805
.Ltmp5314:
    00000afb: 	movq	-0x20(%rax), %rdi
    00000aff: 	movq	%rdi, (%rsp)
    00000b03: 	callq	clock@PLT # Offset: 2819
    00000b08: 	movq	(%rsp), %rdi
    00000b0c: 	pxor	%xmm0, %xmm0
    00000b10: 	movq	%rax, end_time(%rip)
    00000b17: 	subq	start_time(%rip), %rax
    00000b1e: 	cvtsi2sd	%rax, %xmm0
    00000b23: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000b2b: 	callq	_Z13record_resultdPKc # Offset: 2859
    00000b30: 	movq	0xa0(%rsp), %rdi
    00000b38: 	cmpq	%r13, %rdi
    00000b3b: 	je	.Ltmp4884 # Offset: 2875
    00000b3d: 	movq	0xb0(%rsp), %rax
    00000b45: 	leaq	0x1(%rax), %rsi
    00000b49: 	callq	_ZdlPvm@PLT # Offset: 2889
.Ltmp4884:
    00000b4e: 	leaq	DATAat0x572a3(%rip), %rdx
    00000b55: 	movq	%r14, %rsi
    00000b58: 	movq	%r12, %rdi
    00000b5b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2907
    00000b60: 	movq	%r12, %rcx
    00000b63: 	movl	$0x40, %edx
    00000b68: 	movl	$0x1f40, %esi
    00000b6d: 	movq	%rbp, %rdi
    00000b70: 	callq	_Z14test_variable1It24custom_multiply_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2928
    00000b75: 	movq	0xa0(%rsp), %rdi
    00000b7d: 	cmpq	%r13, %rdi
    00000b80: 	je	.Ltmp4885 # Offset: 2944
    00000b82: 	movq	0xb0(%rsp), %rax
    00000b8a: 	leaq	0x1(%rax), %rsi
    00000b8e: 	callq	_ZdlPvm@PLT # Offset: 2958
.Ltmp4885:
    00000b93: 	leaq	DATAat0x572bc(%rip), %rdx
    00000b9a: 	movq	%r14, %rsi
    00000b9d: 	movq	%r12, %rdi
    00000ba0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2976
    00000ba5: 	callq	clock@PLT # Offset: 2981
    00000baa: 	movl	iterations(%rip), %ecx
    00000bb0: 	movl	$0x0, (%rsp)
    00000bb7: 	movq	%rax, start_time(%rip)
    00000bbe: 	testl	%ecx, %ecx
    00000bc0: 	jle	.Ltmp4886 # Offset: 3008
    00000bc6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4889:
    00000bd0: 	movq	%rbp, %rax
    00000bd3: 	pxor	%xmm1, %xmm1
    00000bd7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4887:
    00000be0: 	movdqa	(%rax), %xmm0
    00000be4: 	addq	$0x10, %rax
    00000be8: 	psllw	$0x6, %xmm0
    00000bed: 	paddw	%xmm0, %xmm1
    00000bf1: 	cmpq	%rbx, %rax
    00000bf4: 	jne	.Ltmp4887 # Offset: 3060
    00000bf6: 	movdqa	%xmm1, %xmm0
    00000bfa: 	cvttsd2si	init_value(%rip), %eax
    00000c02: 	psrldq	$0x8, %xmm0
    00000c07: 	paddw	%xmm0, %xmm1
    00000c0b: 	movdqa	%xmm1, %xmm0
    00000c0f: 	psrldq	$0x4, %xmm0
    00000c14: 	leal	(,%rax,4), %edx
    00000c1b: 	paddw	%xmm0, %xmm1
    00000c1f: 	subl	%edx, %eax
    00000c21: 	movdqa	%xmm1, %xmm0
    00000c25: 	shll	$0xc, %eax
    00000c28: 	psrldq	$0x2, %xmm0
    00000c2d: 	paddw	%xmm0, %xmm1
    00000c31: 	pextrw	$0x0, %xmm1, %edx
    00000c36: 	cmpw	%dx, %ax
    00000c39: 	je	.Ltmp4888 # Offset: 3129
    00000c3b: 	movl	current_test(%rip), %edx
    00000c41: 	leaq	DATAat0x571d0(%rip), %rsi
    00000c48: 	movl	$0x1, %edi
    00000c4d: 	xorl	%eax, %eax
    00000c4f: 	callq	__printf_chk@PLT # Offset: 3151
    00000c54: 	movl	iterations(%rip), %ecx
.Ltmp4888:
    00000c5a: 	addl	$0x1, (%rsp)
    00000c5e: 	movl	(%rsp), %eax
    00000c61: 	cmpl	%ecx, %eax
    00000c63: 	jl	.Ltmp4889 # Offset: 3171
.Ltmp4886:
    00000c69: 	movq	%r12, %rsi
    00000c6c: 	movq	%r15, %rdi
    00000c6f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3183
    00000c74: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c7b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c82: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c89: 	je	.Ltmp4890 # Offset: 3209
.Ltmp5313:
    00000c8f: 	movq	-0x20(%rax), %rdi
    00000c93: 	movq	%rdi, (%rsp)
    00000c97: 	callq	clock@PLT # Offset: 3223
    00000c9c: 	movq	(%rsp), %rdi
    00000ca0: 	pxor	%xmm0, %xmm0
    00000ca4: 	movq	%rax, end_time(%rip)
    00000cab: 	subq	start_time(%rip), %rax
    00000cb2: 	cvtsi2sd	%rax, %xmm0
    00000cb7: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000cbf: 	callq	_Z13record_resultdPKc # Offset: 3263
    00000cc4: 	movq	0xa0(%rsp), %rdi
    00000ccc: 	cmpq	%r13, %rdi
    00000ccf: 	je	.Ltmp4891 # Offset: 3279
    00000cd1: 	movq	0xb0(%rsp), %rax
    00000cd9: 	leaq	0x1(%rax), %rsi
    00000cdd: 	callq	_ZdlPvm@PLT # Offset: 3293
.Ltmp4891:
    00000ce2: 	leaq	DATAat0x572d5(%rip), %rdx
    00000ce9: 	movq	%r14, %rsi
    00000cec: 	movq	%r12, %rdi
    00000cef: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3311
    00000cf4: 	movq	%r12, %rcx
    00000cf7: 	movl	$0x2a, %edx
    00000cfc: 	movl	$0x1f40, %esi
    00000d01: 	movq	%rbp, %rdi
    00000d04: 	callq	_Z14test_variable1It24custom_multiply_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3332
    00000d09: 	movq	0xa0(%rsp), %rdi
    00000d11: 	cmpq	%r13, %rdi
    00000d14: 	je	.Ltmp4892 # Offset: 3348
    00000d16: 	movq	0xb0(%rsp), %rax
    00000d1e: 	leaq	0x1(%rax), %rsi
    00000d22: 	callq	_ZdlPvm@PLT # Offset: 3362
.Ltmp4892:
    00000d27: 	leaq	DATAat0x572ee(%rip), %rdx
    00000d2e: 	movq	%r14, %rsi
    00000d31: 	movq	%r12, %rdi
    00000d34: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3380
    00000d39: 	callq	clock@PLT # Offset: 3385
    00000d3e: 	movl	iterations(%rip), %ecx
    00000d44: 	movl	$0x0, (%rsp)
    00000d4b: 	movq	%rax, start_time(%rip)
    00000d52: 	testl	%ecx, %ecx
    00000d54: 	jle	.Ltmp4893 # Offset: 3412
    00000d5a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4896:
    00000d60: 	movq	%rbp, %rax
    00000d63: 	pxor	%xmm2, %xmm2
    00000d67: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4894:
    00000d70: 	movdqa	(%rax), %xmm1
    00000d74: 	addq	$0x10, %rax
    00000d78: 	movdqa	%xmm1, %xmm0
    00000d7c: 	psllw	$0x2, %xmm0
    00000d81: 	paddw	%xmm1, %xmm0
    00000d85: 	psllw	$0x2, %xmm0
    00000d8a: 	paddw	%xmm1, %xmm0
    00000d8e: 	psllw	$0x1, %xmm0
    00000d93: 	paddw	%xmm0, %xmm2
    00000d97: 	cmpq	%rax, %rbx
    00000d9a: 	jne	.Ltmp4894 # Offset: 3482
    00000d9c: 	movdqa	%xmm2, %xmm0
    00000da0: 	cvttsd2si	init_value(%rip), %edx
    00000da8: 	psrldq	$0x8, %xmm0
    00000dad: 	paddw	%xmm0, %xmm2
    00000db1: 	movdqa	%xmm2, %xmm0
    00000db5: 	psrldq	$0x4, %xmm0
    00000dba: 	movl	%edx, %eax
    00000dbc: 	paddw	%xmm0, %xmm2
    00000dc0: 	shll	$0x6, %eax
    00000dc3: 	movdqa	%xmm2, %xmm0
    00000dc7: 	addl	%edx, %eax
    00000dc9: 	psrldq	$0x2, %xmm0
    00000dce: 	shll	$0x7, %eax
    00000dd1: 	paddw	%xmm0, %xmm2
    00000dd5: 	pextrw	$0x0, %xmm2, %edx
    00000dda: 	cmpw	%dx, %ax
    00000ddd: 	je	.Ltmp4895 # Offset: 3549
    00000ddf: 	movl	current_test(%rip), %edx
    00000de5: 	leaq	DATAat0x571d0(%rip), %rsi
    00000dec: 	movl	$0x1, %edi
    00000df1: 	xorl	%eax, %eax
    00000df3: 	callq	__printf_chk@PLT # Offset: 3571
    00000df8: 	movl	iterations(%rip), %ecx
.Ltmp4895:
    00000dfe: 	addl	$0x1, (%rsp)
    00000e02: 	movl	(%rsp), %eax
    00000e05: 	cmpl	%ecx, %eax
    00000e07: 	jl	.Ltmp4896 # Offset: 3591
.Ltmp4893:
    00000e0d: 	movq	%r12, %rsi
    00000e10: 	movq	%r15, %rdi
    00000e13: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3603
    00000e18: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e1f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e26: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e2d: 	je	.Ltmp4897 # Offset: 3629
.Ltmp5312:
    00000e33: 	movq	-0x20(%rax), %rdi
    00000e37: 	movq	%rdi, (%rsp)
    00000e3b: 	callq	clock@PLT # Offset: 3643
    00000e40: 	movq	(%rsp), %rdi
    00000e44: 	pxor	%xmm0, %xmm0
    00000e48: 	movq	%rax, end_time(%rip)
    00000e4f: 	subq	start_time(%rip), %rax
    00000e56: 	cvtsi2sd	%rax, %xmm0
    00000e5b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000e63: 	callq	_Z13record_resultdPKc # Offset: 3683
    00000e68: 	movq	0xa0(%rsp), %rdi
    00000e70: 	cmpq	%r13, %rdi
    00000e73: 	je	.Ltmp4898 # Offset: 3699
    00000e75: 	movq	0xb0(%rsp), %rax
    00000e7d: 	leaq	0x1(%rax), %rsi
    00000e81: 	callq	_ZdlPvm@PLT # Offset: 3713
.Ltmp4898:
    00000e86: 	leaq	DATAat0x57307(%rip), %rdx
    00000e8d: 	movq	%r14, %rsi
    00000e90: 	movq	%r12, %rdi
    00000e93: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3731
    00000e98: 	movq	%r12, %rdx
    00000e9b: 	movl	$0x1f40, %esi
    00000ea0: 	movq	%rbp, %rdi
    00000ea3: 	callq	_Z13test_constantIt27custom_multiply_shiftadd_42ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3747
    00000ea8: 	movq	0xa0(%rsp), %rdi
    00000eb0: 	cmpq	%r13, %rdi
    00000eb3: 	je	.Ltmp4899 # Offset: 3763
    00000eb5: 	movq	0xb0(%rsp), %rax
    00000ebd: 	leaq	0x1(%rax), %rsi
    00000ec1: 	callq	_ZdlPvm@PLT # Offset: 3777
.Ltmp4899:
    00000ec6: 	leaq	DATAat0x57318(%rip), %rdx
    00000ecd: 	movq	%r14, %rsi
    00000ed0: 	movq	%r12, %rdi
    00000ed3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3795
    00000ed8: 	movq	%r12, %rcx
    00000edb: 	movl	$0x3f, %edx
    00000ee0: 	movl	$0x1f40, %esi
    00000ee5: 	movq	%rbp, %rdi
    00000ee8: 	callq	_Z14test_variable1It24custom_multiply_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3816
    00000eed: 	movq	0xa0(%rsp), %rdi
    00000ef5: 	cmpq	%r13, %rdi
    00000ef8: 	je	.Ltmp4900 # Offset: 3832
    00000efa: 	movq	0xb0(%rsp), %rax
    00000f02: 	leaq	0x1(%rax), %rsi
    00000f06: 	callq	_ZdlPvm@PLT # Offset: 3846
.Ltmp4900:
    00000f0b: 	leaq	DATAat0x57331(%rip), %rdx
    00000f12: 	movq	%r14, %rsi
    00000f15: 	movq	%r12, %rdi
    00000f18: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3864
    00000f1d: 	callq	clock@PLT # Offset: 3869
    00000f22: 	movl	iterations(%rip), %ecx
    00000f28: 	movl	$0x0, (%rsp)
    00000f2f: 	movq	%rax, start_time(%rip)
    00000f36: 	testl	%ecx, %ecx
    00000f38: 	jle	.Ltmp4901 # Offset: 3896
    00000f3e: 	nop # Size: 2
.Ltmp4904:
    00000f40: 	movq	%rbp, %rax
    00000f43: 	pxor	%xmm1, %xmm1
    00000f47: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4902:
    00000f50: 	movdqa	(%rax), %xmm0
    00000f54: 	addq	$0x10, %rax
    00000f58: 	psllw	$0x6, %xmm0
    00000f5d: 	psubw	-0x10(%rax), %xmm0
    00000f62: 	paddw	%xmm0, %xmm1
    00000f66: 	cmpq	%rbx, %rax
    00000f69: 	jne	.Ltmp4902 # Offset: 3945
    00000f6b: 	movdqa	%xmm1, %xmm0
    00000f6f: 	cvttsd2si	init_value(%rip), %eax
    00000f77: 	psrldq	$0x8, %xmm0
    00000f7c: 	paddw	%xmm0, %xmm1
    00000f80: 	movdqa	%xmm1, %xmm0
    00000f84: 	psrldq	$0x4, %xmm0
    00000f89: 	imulw	$0xb0c0, %ax, %ax
    00000f8e: 	paddw	%xmm0, %xmm1
    00000f92: 	movdqa	%xmm1, %xmm0
    00000f96: 	psrldq	$0x2, %xmm0
    00000f9b: 	paddw	%xmm0, %xmm1
    00000f9f: 	pextrw	$0x0, %xmm1, %edx
    00000fa4: 	cmpw	%dx, %ax
    00000fa7: 	je	.Ltmp4903 # Offset: 4007
    00000fa9: 	movl	current_test(%rip), %edx
    00000faf: 	leaq	DATAat0x571d0(%rip), %rsi
    00000fb6: 	movl	$0x1, %edi
    00000fbb: 	xorl	%eax, %eax
    00000fbd: 	callq	__printf_chk@PLT # Offset: 4029
    00000fc2: 	movl	iterations(%rip), %ecx
.Ltmp4903:
    00000fc8: 	addl	$0x1, (%rsp)
    00000fcc: 	movl	(%rsp), %eax
    00000fcf: 	cmpl	%ecx, %eax
    00000fd1: 	jl	.Ltmp4904 # Offset: 4049
.Ltmp4901:
    00000fd7: 	movq	%r12, %rsi
    00000fda: 	movq	%r15, %rdi
    00000fdd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4061
    00000fe2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000fe9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ff0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ff7: 	je	.Ltmp4905 # Offset: 4087
.Ltmp5311:
    00000ffd: 	movq	-0x20(%rax), %rdi
    00001001: 	movq	%rdi, (%rsp)
    00001005: 	callq	clock@PLT # Offset: 4101
    0000100a: 	movq	(%rsp), %rdi
    0000100e: 	pxor	%xmm0, %xmm0
    00001012: 	movq	%rax, end_time(%rip)
    00001019: 	subq	start_time(%rip), %rax
    00001020: 	cvtsi2sd	%rax, %xmm0
    00001025: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000102d: 	callq	_Z13record_resultdPKc # Offset: 4141
    00001032: 	movq	0xa0(%rsp), %rdi
    0000103a: 	cmpq	%r13, %rdi
    0000103d: 	je	.Ltmp4906 # Offset: 4157
    0000103f: 	movq	0xb0(%rsp), %rax
    00001047: 	leaq	0x1(%rax), %rsi
    0000104b: 	callq	_ZdlPvm@PLT # Offset: 4171
.Ltmp4906:
    00001050: 	leaq	DATAat0x5734a(%rip), %rdx
    00001057: 	movq	%r14, %rsi
    0000105a: 	movq	%r12, %rdi
    0000105d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4189
    00001062: 	movq	%r12, %rdx
    00001065: 	movl	$0x1f40, %esi
    0000106a: 	movq	%rbp, %rdi
    0000106d: 	callq	_Z13test_constantIt27custom_multiply_shiftadd_63ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4205
    00001072: 	movq	0xa0(%rsp), %rdi
    0000107a: 	cmpq	%r13, %rdi
    0000107d: 	je	.Ltmp4907 # Offset: 4221
    0000107f: 	movq	0xb0(%rsp), %rax
    00001087: 	leaq	0x1(%rax), %rsi
    0000108b: 	callq	_ZdlPvm@PLT # Offset: 4235
.Ltmp4907:
    00001090: 	leaq	DATAat0x5735b(%rip), %rdx
    00001097: 	movq	%r14, %rsi
    0000109a: 	movq	%r12, %rdi
    0000109d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4253
    000010a2: 	movq	%r12, %rcx
    000010a5: 	movl	$0x43, %edx
    000010aa: 	movl	$0x1f40, %esi
    000010af: 	movq	%rbp, %rdi
    000010b2: 	callq	_Z14test_variable1It24custom_multiply_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4274
    000010b7: 	movq	0xa0(%rsp), %rdi
    000010bf: 	cmpq	%r13, %rdi
    000010c2: 	je	.Ltmp4908 # Offset: 4290
    000010c4: 	movq	0xb0(%rsp), %rax
    000010cc: 	leaq	0x1(%rax), %rsi
    000010d0: 	callq	_ZdlPvm@PLT # Offset: 4304
.Ltmp4908:
    000010d5: 	leaq	DATAat0x57374(%rip), %rdx
    000010dc: 	movq	%r14, %rsi
    000010df: 	movq	%r12, %rdi
    000010e2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4322
    000010e7: 	callq	clock@PLT # Offset: 4327
    000010ec: 	movl	iterations(%rip), %ecx
    000010f2: 	movl	$0x0, (%rsp)
    000010f9: 	movq	%rax, start_time(%rip)
    00001100: 	testl	%ecx, %ecx
    00001102: 	jle	.Ltmp4909 # Offset: 4354
    00001108: 	nopl	(%rax,%rax) # Size: 8
.Ltmp4912:
    00001110: 	movq	%rbp, %rax
    00001113: 	pxor	%xmm2, %xmm2
    00001117: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4910:
    00001120: 	movdqa	(%rax), %xmm1
    00001124: 	addq	$0x10, %rax
    00001128: 	movdqa	%xmm1, %xmm0
    0000112c: 	psllw	$0x4, %xmm0
    00001131: 	paddw	%xmm1, %xmm0
    00001135: 	psllw	$0x2, %xmm0
    0000113a: 	psubw	%xmm1, %xmm0
    0000113e: 	paddw	%xmm0, %xmm2
    00001142: 	cmpq	%rax, %rbx
    00001145: 	jne	.Ltmp4910 # Offset: 4421
    00001147: 	movdqa	%xmm2, %xmm0
    0000114b: 	cvttsd2si	init_value(%rip), %eax
    00001153: 	psrldq	$0x8, %xmm0
    00001158: 	paddw	%xmm0, %xmm2
    0000115c: 	movdqa	%xmm2, %xmm0
    00001160: 	psrldq	$0x4, %xmm0
    00001165: 	imulw	$0x2dc0, %ax, %ax
    0000116a: 	paddw	%xmm0, %xmm2
    0000116e: 	movdqa	%xmm2, %xmm0
    00001172: 	psrldq	$0x2, %xmm0
    00001177: 	paddw	%xmm0, %xmm2
    0000117b: 	pextrw	$0x0, %xmm2, %edx
    00001180: 	cmpw	%dx, %ax
    00001183: 	je	.Ltmp4911 # Offset: 4483
    00001185: 	movl	current_test(%rip), %edx
    0000118b: 	leaq	DATAat0x571d0(%rip), %rsi
    00001192: 	movl	$0x1, %edi
    00001197: 	xorl	%eax, %eax
    00001199: 	callq	__printf_chk@PLT # Offset: 4505
    0000119e: 	movl	iterations(%rip), %ecx
.Ltmp4911:
    000011a4: 	addl	$0x1, (%rsp)
    000011a8: 	movl	(%rsp), %eax
    000011ab: 	cmpl	%ecx, %eax
    000011ad: 	jl	.Ltmp4912 # Offset: 4525
.Ltmp4909:
    000011b3: 	movq	%r12, %rsi
    000011b6: 	movq	%r15, %rdi
    000011b9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4537
    000011be: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011c5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011cc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011d3: 	je	.Ltmp4913 # Offset: 4563
.Ltmp5310:
    000011d9: 	movq	-0x20(%rax), %rdi
    000011dd: 	movq	%rdi, (%rsp)
    000011e1: 	callq	clock@PLT # Offset: 4577
    000011e6: 	movq	(%rsp), %rdi
    000011ea: 	pxor	%xmm0, %xmm0
    000011ee: 	movq	%rax, end_time(%rip)
    000011f5: 	subq	start_time(%rip), %rax
    000011fc: 	cvtsi2sd	%rax, %xmm0
    00001201: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001209: 	callq	_Z13record_resultdPKc # Offset: 4617
    0000120e: 	movq	0xa0(%rsp), %rdi
    00001216: 	cmpq	%r13, %rdi
    00001219: 	je	.Ltmp4914 # Offset: 4633
    0000121b: 	movq	0xb0(%rsp), %rax
    00001223: 	leaq	0x1(%rax), %rsi
    00001227: 	callq	_ZdlPvm@PLT # Offset: 4647
.Ltmp4914:
    0000122c: 	leaq	DATAat0x5738d(%rip), %rdx
    00001233: 	movq	%r14, %rsi
    00001236: 	movq	%r12, %rdi
    00001239: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4665
    0000123e: 	callq	clock@PLT # Offset: 4670
    00001243: 	movl	iterations(%rip), %ecx
    00001249: 	movl	$0x0, (%rsp)
    00001250: 	movq	%rax, start_time(%rip)
    00001257: 	testl	%ecx, %ecx
    00001259: 	jle	.Ltmp4915 # Offset: 4697
    0000125f: 	nop # Size: 1
.Ltmp4918:
    00001260: 	movq	%rbp, %rax
    00001263: 	pxor	%xmm2, %xmm2
    00001267: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4916:
    00001270: 	movdqa	(%rax), %xmm1
    00001274: 	addq	$0x10, %rax
    00001278: 	movdqa	%xmm1, %xmm0
    0000127c: 	psllw	$0x4, %xmm0
    00001281: 	paddw	%xmm1, %xmm0
    00001285: 	psllw	$0x2, %xmm0
    0000128a: 	psubw	%xmm1, %xmm0
    0000128e: 	paddw	%xmm0, %xmm2
    00001292: 	cmpq	%rbx, %rax
    00001295: 	jne	.Ltmp4916 # Offset: 4757
    00001297: 	movdqa	%xmm2, %xmm0
    0000129b: 	cvttsd2si	init_value(%rip), %eax
    000012a3: 	psrldq	$0x8, %xmm0
    000012a8: 	paddw	%xmm0, %xmm2
    000012ac: 	movdqa	%xmm2, %xmm0
    000012b0: 	psrldq	$0x4, %xmm0
    000012b5: 	imulw	$0x2dc0, %ax, %ax
    000012ba: 	paddw	%xmm0, %xmm2
    000012be: 	movdqa	%xmm2, %xmm0
    000012c2: 	psrldq	$0x2, %xmm0
    000012c7: 	paddw	%xmm0, %xmm2
    000012cb: 	pextrw	$0x0, %xmm2, %edx
    000012d0: 	cmpw	%dx, %ax
    000012d3: 	je	.Ltmp4917 # Offset: 4819
    000012d5: 	movl	current_test(%rip), %edx
    000012db: 	leaq	DATAat0x571d0(%rip), %rsi
    000012e2: 	movl	$0x1, %edi
    000012e7: 	xorl	%eax, %eax
    000012e9: 	callq	__printf_chk@PLT # Offset: 4841
    000012ee: 	movl	iterations(%rip), %ecx
.Ltmp4917:
    000012f4: 	addl	$0x1, (%rsp)
    000012f8: 	movl	(%rsp), %eax
    000012fb: 	cmpl	%ecx, %eax
    000012fd: 	jl	.Ltmp4918 # Offset: 4861
.Ltmp4915:
    00001303: 	movq	%r12, %rsi
    00001306: 	movq	%r15, %rdi
    00001309: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4873
    0000130e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001315: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000131c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001323: 	je	.Ltmp4919 # Offset: 4899
.Ltmp5309:
    00001329: 	movq	-0x20(%rax), %rdi
    0000132d: 	movq	%rdi, (%rsp)
    00001331: 	callq	clock@PLT # Offset: 4913
    00001336: 	movq	(%rsp), %rdi
    0000133a: 	pxor	%xmm0, %xmm0
    0000133e: 	movq	%rax, end_time(%rip)
    00001345: 	subq	start_time(%rip), %rax
    0000134c: 	cvtsi2sd	%rax, %xmm0
    00001351: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001359: 	callq	_Z13record_resultdPKc # Offset: 4953
    0000135e: 	movq	0xa0(%rsp), %rdi
    00001366: 	cmpq	%r13, %rdi
    00001369: 	je	.Ltmp4920 # Offset: 4969
    0000136b: 	movq	0xb0(%rsp), %rax
    00001373: 	leaq	0x1(%rax), %rsi
    00001377: 	callq	_ZdlPvm@PLT # Offset: 4983
.Ltmp4920:
    0000137c: 	leaq	DATAat0x5739e(%rip), %rdx
    00001383: 	movq	%r14, %rsi
    00001386: 	movq	%r12, %rdi
    00001389: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5001
    0000138e: 	callq	clock@PLT # Offset: 5006
    00001393: 	movl	iterations(%rip), %ecx
    00001399: 	movl	$0x0, (%rsp)
    000013a0: 	movq	%rax, start_time(%rip)
    000013a7: 	testl	%ecx, %ecx
    000013a9: 	jle	.Ltmp4921 # Offset: 5033
    000013af: 	nop # Size: 1
.Ltmp4924:
    000013b0: 	movq	%rbp, %rax
    000013b3: 	pxor	%xmm2, %xmm2
    000013b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4922:
    000013c0: 	movdqa	(%rax), %xmm1
    000013c4: 	addq	$0x10, %rax
    000013c8: 	movdqa	%xmm1, %xmm0
    000013cc: 	psllw	$0x4, %xmm0
    000013d1: 	paddw	%xmm1, %xmm0
    000013d5: 	psllw	$0x2, %xmm0
    000013da: 	psubw	%xmm1, %xmm0
    000013de: 	paddw	%xmm0, %xmm2
    000013e2: 	cmpq	%rax, %rbx
    000013e5: 	jne	.Ltmp4922 # Offset: 5093
    000013e7: 	movdqa	%xmm2, %xmm0
    000013eb: 	cvttsd2si	init_value(%rip), %eax
    000013f3: 	psrldq	$0x8, %xmm0
    000013f8: 	paddw	%xmm0, %xmm2
    000013fc: 	movdqa	%xmm2, %xmm0
    00001400: 	psrldq	$0x4, %xmm0
    00001405: 	imulw	$0x2dc0, %ax, %ax
    0000140a: 	paddw	%xmm0, %xmm2
    0000140e: 	movdqa	%xmm2, %xmm0
    00001412: 	psrldq	$0x2, %xmm0
    00001417: 	paddw	%xmm0, %xmm2
    0000141b: 	pextrw	$0x0, %xmm2, %edx
    00001420: 	cmpw	%dx, %ax
    00001423: 	je	.Ltmp4923 # Offset: 5155
    00001425: 	movl	current_test(%rip), %edx
    0000142b: 	leaq	DATAat0x571d0(%rip), %rsi
    00001432: 	movl	$0x1, %edi
    00001437: 	xorl	%eax, %eax
    00001439: 	callq	__printf_chk@PLT # Offset: 5177
    0000143e: 	movl	iterations(%rip), %ecx
.Ltmp4923:
    00001444: 	addl	$0x1, (%rsp)
    00001448: 	movl	(%rsp), %eax
    0000144b: 	cmpl	%ecx, %eax
    0000144d: 	jl	.Ltmp4924 # Offset: 5197
.Ltmp4921:
    00001453: 	movq	%r12, %rsi
    00001456: 	movq	%r15, %rdi
    00001459: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5209
    0000145e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001465: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000146c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001473: 	je	.Ltmp4925 # Offset: 5235
.Ltmp5308:
    00001479: 	movq	-0x20(%rax), %rdi
    0000147d: 	movq	%rdi, (%rsp)
    00001481: 	callq	clock@PLT # Offset: 5249
    00001486: 	movq	(%rsp), %rdi
    0000148a: 	pxor	%xmm0, %xmm0
    0000148e: 	movq	%rax, end_time(%rip)
    00001495: 	subq	start_time(%rip), %rax
    0000149c: 	cvtsi2sd	%rax, %xmm0
    000014a1: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000014a9: 	callq	_Z13record_resultdPKc # Offset: 5289
    000014ae: 	movq	0xa0(%rsp), %rdi
    000014b6: 	cmpq	%r13, %rdi
    000014b9: 	je	.Ltmp4926 # Offset: 5305
    000014bb: 	movq	0xb0(%rsp), %rax
    000014c3: 	leaq	0x1(%rax), %rsi
    000014c7: 	callq	_ZdlPvm@PLT # Offset: 5319
.Ltmp4926:
    000014cc: 	leaq	DATAat0x573ad(%rip), %rdx
    000014d3: 	movq	%r14, %rsi
    000014d6: 	movq	%r12, %rdi
    000014d9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5337
    000014de: 	movq	%r12, %rcx
    000014e1: 	movl	$0x53, %edx
    000014e6: 	movl	$0x1f40, %esi
    000014eb: 	movq	%rbp, %rdi
    000014ee: 	callq	_Z14test_variable1It24custom_multiply_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5358
    000014f3: 	movq	0xa0(%rsp), %rdi
    000014fb: 	cmpq	%r13, %rdi
    000014fe: 	je	.Ltmp4927 # Offset: 5374
    00001500: 	movq	0xb0(%rsp), %rax
    00001508: 	leaq	0x1(%rax), %rsi
    0000150c: 	callq	_ZdlPvm@PLT # Offset: 5388
.Ltmp4927:
    00001511: 	leaq	DATAat0x573c6(%rip), %rdx
    00001518: 	movq	%r14, %rsi
    0000151b: 	movq	%r12, %rdi
    0000151e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5406
    00001523: 	callq	clock@PLT # Offset: 5411
    00001528: 	movl	iterations(%rip), %ecx
    0000152e: 	movq	%rax, start_time(%rip)
    00001535: 	testl	%ecx, %ecx
    00001537: 	jle	.Ltmp4928 # Offset: 5431
    0000153d: 	movdqa	DATAat0x57f00(%rip), %xmm5
    00001545: 	movl	$0x0, 0x1c(%rsp)
    0000154d: 	movaps	%xmm5, (%rsp)
    00001551: 	nopl	(%rax) # Size: 7
.Ltmp4931:
    00001558: 	movq	%rbp, %rax
    0000155b: 	pxor	%xmm0, %xmm0
    0000155f: 	nop # Size: 1
.Ltmp4929:
    00001560: 	movdqa	(%rsp), %xmm1
    00001565: 	addq	$0x10, %rax
    00001569: 	pmullw	-0x10(%rax), %xmm1
    0000156e: 	paddw	%xmm1, %xmm0
    00001572: 	cmpq	%rbx, %rax
    00001575: 	jne	.Ltmp4929 # Offset: 5493
    00001577: 	movdqa	%xmm0, %xmm1
    0000157b: 	cvttsd2si	init_value(%rip), %eax
    00001583: 	psrldq	$0x8, %xmm1
    00001588: 	paddw	%xmm1, %xmm0
    0000158c: 	movdqa	%xmm0, %xmm1
    00001590: 	psrldq	$0x4, %xmm1
    00001595: 	imulw	$0x21c0, %ax, %ax
    0000159a: 	paddw	%xmm1, %xmm0
    0000159e: 	movdqa	%xmm0, %xmm1
    000015a2: 	psrldq	$0x2, %xmm1
    000015a7: 	paddw	%xmm1, %xmm0
    000015ab: 	pextrw	$0x0, %xmm0, %edx
    000015b0: 	cmpw	%dx, %ax
    000015b3: 	je	.Ltmp4930 # Offset: 5555
    000015b5: 	movl	current_test(%rip), %edx
    000015bb: 	leaq	DATAat0x571d0(%rip), %rsi
    000015c2: 	movl	$0x1, %edi
    000015c7: 	xorl	%eax, %eax
    000015c9: 	callq	__printf_chk@PLT # Offset: 5577
    000015ce: 	movl	iterations(%rip), %ecx
.Ltmp4930:
    000015d4: 	addl	$0x1, 0x1c(%rsp)
    000015d9: 	movl	0x1c(%rsp), %eax
    000015dd: 	cmpl	%ecx, %eax
    000015df: 	jl	.Ltmp4931 # Offset: 5599
.Ltmp4928:
    000015e5: 	movq	%r12, %rsi
    000015e8: 	movq	%r15, %rdi
    000015eb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5611
    000015f0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015f7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000015fe: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001605: 	je	.Ltmp4932 # Offset: 5637
.Ltmp5307:
    0000160b: 	movq	-0x20(%rax), %rdi
    0000160f: 	movq	%rdi, (%rsp)
    00001613: 	callq	clock@PLT # Offset: 5651
    00001618: 	movq	(%rsp), %rdi
    0000161c: 	pxor	%xmm0, %xmm0
    00001620: 	movq	%rax, end_time(%rip)
    00001627: 	subq	start_time(%rip), %rax
    0000162e: 	cvtsi2sd	%rax, %xmm0
    00001633: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000163b: 	callq	_Z13record_resultdPKc # Offset: 5691
    00001640: 	movq	0xa0(%rsp), %rdi
    00001648: 	cmpq	%r13, %rdi
    0000164b: 	je	.Ltmp4933 # Offset: 5707
    0000164d: 	movq	0xb0(%rsp), %rax
    00001655: 	leaq	0x1(%rax), %rsi
    00001659: 	callq	_ZdlPvm@PLT # Offset: 5721
.Ltmp4933:
    0000165e: 	leaq	DATAat0x573df(%rip), %rdx
    00001665: 	movq	%r14, %rsi
    00001668: 	movq	%r12, %rdi
    0000166b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5739
    00001670: 	movq	%r12, %rdx
    00001673: 	movl	$0x1f40, %esi
    00001678: 	movq	%rbp, %rdi
    0000167b: 	callq	_Z13test_constantIt27custom_multiply_shiftadd_83ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5755
    00001680: 	movq	0xa0(%rsp), %rdi
    00001688: 	cmpq	%r13, %rdi
    0000168b: 	je	.Ltmp4934 # Offset: 5771
    0000168d: 	movq	0xb0(%rsp), %rax
    00001695: 	leaq	0x1(%rax), %rsi
    00001699: 	callq	_ZdlPvm@PLT # Offset: 5785
.Ltmp4934:
    0000169e: 	leaq	DATAat0x573f0(%rip), %rdx
    000016a5: 	movq	%r14, %rsi
    000016a8: 	movq	%r12, %rdi
    000016ab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5803
    000016b0: 	callq	clock@PLT # Offset: 5808
    000016b5: 	movl	iterations(%rip), %ecx
    000016bb: 	movq	%rax, start_time(%rip)
    000016c2: 	testl	%ecx, %ecx
    000016c4: 	jle	.Ltmp4935 # Offset: 5828
    000016ca: 	movdqa	DATAat0x57f00(%rip), %xmm6
    000016d2: 	movl	$0x0, 0x1c(%rsp)
    000016da: 	movaps	%xmm6, (%rsp)
    000016de: 	nop # Size: 2
.Ltmp4938:
    000016e0: 	movq	%rbp, %rax
    000016e3: 	pxor	%xmm0, %xmm0
    000016e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4936:
    000016f0: 	movdqa	(%rsp), %xmm1
    000016f5: 	addq	$0x10, %rax
    000016f9: 	pmullw	-0x10(%rax), %xmm1
    000016fe: 	paddw	%xmm1, %xmm0
    00001702: 	cmpq	%rax, %rbx
    00001705: 	jne	.Ltmp4936 # Offset: 5893
    00001707: 	movdqa	%xmm0, %xmm1
    0000170b: 	cvttsd2si	init_value(%rip), %eax
    00001713: 	psrldq	$0x8, %xmm1
    00001718: 	paddw	%xmm1, %xmm0
    0000171c: 	movdqa	%xmm0, %xmm1
    00001720: 	psrldq	$0x4, %xmm1
    00001725: 	imulw	$0x21c0, %ax, %ax
    0000172a: 	paddw	%xmm1, %xmm0
    0000172e: 	movdqa	%xmm0, %xmm1
    00001732: 	psrldq	$0x2, %xmm1
    00001737: 	paddw	%xmm1, %xmm0
    0000173b: 	pextrw	$0x0, %xmm0, %edx
    00001740: 	cmpw	%dx, %ax
    00001743: 	je	.Ltmp4937 # Offset: 5955
    00001745: 	movl	current_test(%rip), %edx
    0000174b: 	leaq	DATAat0x571d0(%rip), %rsi
    00001752: 	movl	$0x1, %edi
    00001757: 	xorl	%eax, %eax
    00001759: 	callq	__printf_chk@PLT # Offset: 5977
    0000175e: 	movl	iterations(%rip), %ecx
.Ltmp4937:
    00001764: 	addl	$0x1, 0x1c(%rsp)
    00001769: 	movl	0x1c(%rsp), %eax
    0000176d: 	cmpl	%ecx, %eax
    0000176f: 	jl	.Ltmp4938 # Offset: 5999
.Ltmp4935:
    00001775: 	movq	%r12, %rsi
    00001778: 	movq	%r15, %rdi
    0000177b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6011
    00001780: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001787: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000178e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001795: 	je	.Ltmp4939 # Offset: 6037
.Ltmp5306:
    0000179b: 	movq	-0x20(%rax), %rdi
    0000179f: 	movq	%rdi, (%rsp)
    000017a3: 	callq	clock@PLT # Offset: 6051
    000017a8: 	movq	(%rsp), %rdi
    000017ac: 	pxor	%xmm0, %xmm0
    000017b0: 	movq	%rax, end_time(%rip)
    000017b7: 	subq	start_time(%rip), %rax
    000017be: 	cvtsi2sd	%rax, %xmm0
    000017c3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000017cb: 	callq	_Z13record_resultdPKc # Offset: 6091
    000017d0: 	movq	0xa0(%rsp), %rdi
    000017d8: 	cmpq	%r13, %rdi
    000017db: 	je	.Ltmp4940 # Offset: 6107
    000017dd: 	movq	0xb0(%rsp), %rax
    000017e5: 	leaq	0x1(%rax), %rsi
    000017e9: 	callq	_ZdlPvm@PLT # Offset: 6121
.Ltmp4940:
    000017ee: 	leaq	DATAat0x573ff(%rip), %rdx
    000017f5: 	movq	%r14, %rsi
    000017f8: 	movq	%r12, %rdi
    000017fb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6139
    00001800: 	movq	%r12, %rcx
    00001803: 	movl	$0x7e, %edx
    00001808: 	movl	$0x1f40, %esi
    0000180d: 	movq	%rbp, %rdi
    00001810: 	callq	_Z14test_variable1It24custom_multiply_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 6160
    00001815: 	movq	0xa0(%rsp), %rdi
    0000181d: 	cmpq	%r13, %rdi
    00001820: 	je	.Ltmp4941 # Offset: 6176
    00001822: 	movq	0xb0(%rsp), %rax
    0000182a: 	leaq	0x1(%rax), %rsi
    0000182e: 	callq	_ZdlPvm@PLT # Offset: 6190
.Ltmp4941:
    00001833: 	leaq	DATAat0x57419(%rip), %rdx
    0000183a: 	movq	%r14, %rsi
    0000183d: 	movq	%r12, %rdi
    00001840: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6208
    00001845: 	callq	clock@PLT # Offset: 6213
    0000184a: 	movl	iterations(%rip), %ecx
    00001850: 	movl	$0x0, (%rsp)
    00001857: 	movq	%rax, start_time(%rip)
    0000185e: 	testl	%ecx, %ecx
    00001860: 	jle	.Ltmp4942 # Offset: 6240
    00001866: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4945:
    00001870: 	movq	%rbp, %rax
    00001873: 	pxor	%xmm1, %xmm1
    00001877: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4943:
    00001880: 	movdqa	(%rax), %xmm0
    00001884: 	addq	$0x10, %rax
    00001888: 	psllw	$0x6, %xmm0
    0000188d: 	psubw	-0x10(%rax), %xmm0
    00001892: 	psllw	$0x1, %xmm0
    00001897: 	paddw	%xmm0, %xmm1
    0000189b: 	cmpq	%rbx, %rax
    0000189e: 	jne	.Ltmp4943 # Offset: 6302
    000018a0: 	movdqa	%xmm1, %xmm0
    000018a4: 	cvttsd2si	init_value(%rip), %eax
    000018ac: 	psrldq	$0x8, %xmm0
    000018b1: 	paddw	%xmm0, %xmm1
    000018b5: 	movdqa	%xmm1, %xmm0
    000018b9: 	psrldq	$0x4, %xmm0
    000018be: 	imulw	$0x6180, %ax, %ax
    000018c3: 	paddw	%xmm0, %xmm1
    000018c7: 	movdqa	%xmm1, %xmm0
    000018cb: 	psrldq	$0x2, %xmm0
    000018d0: 	paddw	%xmm0, %xmm1
    000018d4: 	pextrw	$0x0, %xmm1, %edx
    000018d9: 	cmpw	%dx, %ax
    000018dc: 	je	.Ltmp4944 # Offset: 6364
    000018de: 	movl	current_test(%rip), %edx
    000018e4: 	leaq	DATAat0x571d0(%rip), %rsi
    000018eb: 	movl	$0x1, %edi
    000018f0: 	xorl	%eax, %eax
    000018f2: 	callq	__printf_chk@PLT # Offset: 6386
    000018f7: 	movl	iterations(%rip), %ecx
.Ltmp4944:
    000018fd: 	addl	$0x1, (%rsp)
    00001901: 	movl	(%rsp), %eax
    00001904: 	cmpl	%ecx, %eax
    00001906: 	jl	.Ltmp4945 # Offset: 6406
.Ltmp4942:
    0000190c: 	movq	%r12, %rsi
    0000190f: 	movq	%r15, %rdi
    00001912: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6418
    00001917: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000191e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001925: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000192c: 	je	.Ltmp4946 # Offset: 6444
.Ltmp5305:
    00001932: 	movq	-0x20(%rax), %rdi
    00001936: 	movq	%rdi, (%rsp)
    0000193a: 	callq	clock@PLT # Offset: 6458
    0000193f: 	movq	(%rsp), %rdi
    00001943: 	pxor	%xmm0, %xmm0
    00001947: 	movq	%rax, end_time(%rip)
    0000194e: 	subq	start_time(%rip), %rax
    00001955: 	cvtsi2sd	%rax, %xmm0
    0000195a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001962: 	callq	_Z13record_resultdPKc # Offset: 6498
    00001967: 	movq	0xa0(%rsp), %rdi
    0000196f: 	cmpq	%r13, %rdi
    00001972: 	je	.Ltmp4947 # Offset: 6514
    00001974: 	movq	0xb0(%rsp), %rax
    0000197c: 	leaq	0x1(%rax), %rsi
    00001980: 	callq	_ZdlPvm@PLT # Offset: 6528
.Ltmp4947:
    00001985: 	leaq	DATAat0x57433(%rip), %rdx
    0000198c: 	movq	%r14, %rsi
    0000198f: 	movq	%r12, %rdi
    00001992: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6546
    00001997: 	movq	%r12, %rdx
    0000199a: 	movl	$0x1f40, %esi
    0000199f: 	movq	%rbp, %rdi
    000019a2: 	callq	_Z13test_constantIt28custom_multiply_shiftadd_126ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 6562
    000019a7: 	movq	0xa0(%rsp), %rdi
    000019af: 	cmpq	%r13, %rdi
    000019b2: 	je	.Ltmp4948 # Offset: 6578
    000019b4: 	movq	0xb0(%rsp), %rax
    000019bc: 	leaq	0x1(%rax), %rsi
    000019c0: 	callq	_ZdlPvm@PLT # Offset: 6592
.Ltmp4948:
    000019c5: 	leaq	DATAat0x57445(%rip), %rdx
    000019cc: 	movq	%r14, %rsi
    000019cf: 	movq	%r12, %rdi
    000019d2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6610
    000019d7: 	callq	clock@PLT # Offset: 6615
    000019dc: 	movl	iterations(%rip), %ecx
    000019e2: 	movl	$0x0, (%rsp)
    000019e9: 	movq	%rax, start_time(%rip)
    000019f0: 	testl	%ecx, %ecx
    000019f2: 	jle	.Ltmp4949 # Offset: 6642
    000019f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp4952:
    00001a00: 	movq	%rbp, %rax
    00001a03: 	pxor	%xmm1, %xmm1
    00001a07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4950:
    00001a10: 	movdqa	(%rax), %xmm0
    00001a14: 	addq	$0x10, %rax
    00001a18: 	psllw	$0x6, %xmm0
    00001a1d: 	psubw	-0x10(%rax), %xmm0
    00001a22: 	psllw	$0x1, %xmm0
    00001a27: 	paddw	%xmm0, %xmm1
    00001a2b: 	cmpq	%rax, %rbx
    00001a2e: 	jne	.Ltmp4950 # Offset: 6702
    00001a30: 	movdqa	%xmm1, %xmm0
    00001a34: 	cvttsd2si	init_value(%rip), %eax
    00001a3c: 	psrldq	$0x8, %xmm0
    00001a41: 	paddw	%xmm0, %xmm1
    00001a45: 	movdqa	%xmm1, %xmm0
    00001a49: 	psrldq	$0x4, %xmm0
    00001a4e: 	imulw	$0x6180, %ax, %ax
    00001a53: 	paddw	%xmm0, %xmm1
    00001a57: 	movdqa	%xmm1, %xmm0
    00001a5b: 	psrldq	$0x2, %xmm0
    00001a60: 	paddw	%xmm0, %xmm1
    00001a64: 	pextrw	$0x0, %xmm1, %edx
    00001a69: 	cmpw	%dx, %ax
    00001a6c: 	je	.Ltmp4951 # Offset: 6764
    00001a6e: 	movl	current_test(%rip), %edx
    00001a74: 	leaq	DATAat0x571d0(%rip), %rsi
    00001a7b: 	movl	$0x1, %edi
    00001a80: 	xorl	%eax, %eax
    00001a82: 	callq	__printf_chk@PLT # Offset: 6786
    00001a87: 	movl	iterations(%rip), %ecx
.Ltmp4951:
    00001a8d: 	addl	$0x1, (%rsp)
    00001a91: 	movl	(%rsp), %eax
    00001a94: 	cmpl	%ecx, %eax
    00001a96: 	jl	.Ltmp4952 # Offset: 6806
.Ltmp4949:
    00001a9c: 	movq	%r12, %rsi
    00001a9f: 	movq	%r15, %rdi
    00001aa2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6818
    00001aa7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001aae: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001ab5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001abc: 	je	.Ltmp4953 # Offset: 6844
.Ltmp5304:
    00001ac2: 	movq	-0x20(%rax), %rdi
    00001ac6: 	movq	%rdi, (%rsp)
    00001aca: 	callq	clock@PLT # Offset: 6858
    00001acf: 	movq	(%rsp), %rdi
    00001ad3: 	pxor	%xmm0, %xmm0
    00001ad7: 	movq	%rax, end_time(%rip)
    00001ade: 	subq	start_time(%rip), %rax
    00001ae5: 	cvtsi2sd	%rax, %xmm0
    00001aea: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001af2: 	callq	_Z13record_resultdPKc # Offset: 6898
    00001af7: 	movq	0xa0(%rsp), %rdi
    00001aff: 	cmpq	%r13, %rdi
    00001b02: 	je	.Ltmp4954 # Offset: 6914
    00001b04: 	movq	0xb0(%rsp), %rax
    00001b0c: 	leaq	0x1(%rax), %rsi
    00001b10: 	callq	_ZdlPvm@PLT # Offset: 6928
.Ltmp4954:
    00001b15: 	leaq	0x60(%rsp), %rdi
    00001b1a: 	leaq	DATAat0x57455(%rip), %rdx
    00001b21: 	movq	%r14, %rsi
    00001b24: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6948
    00001b29: 	movl	iterations(%rip), %edx
    00001b2f: 	movq	0x60(%rsp), %rdi
    00001b34: 	xorl	%r8d, %r8d
    00001b37: 	xorl	%ecx, %ecx
    00001b39: 	movl	$0x1f40, %esi
    00001b3e: 	callq	_Z9summarizePKciiii # Offset: 6974
    00001b43: 	leaq	DATAat0x57472(%rip), %rdx
    00001b4a: 	movq	%r14, %rsi
    00001b4d: 	movq	%r12, %rdi
    00001b50: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6992
    00001b55: 	callq	clock@PLT # Offset: 6997
    00001b5a: 	movl	iterations(%rip), %ecx
    00001b60: 	movl	$0x0, (%rsp)
    00001b67: 	movq	%rax, start_time(%rip)
    00001b6e: 	testl	%ecx, %ecx
    00001b70: 	jle	.Ltmp4955 # Offset: 7024
    00001b76: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4958:
    00001b80: 	movq	%rbp, %rax
    00001b83: 	pxor	%xmm1, %xmm1
    00001b87: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4956:
    00001b90: 	movdqa	(%rax), %xmm0
    00001b94: 	addq	$0x10, %rax
    00001b98: 	psrlw	$0x1, %xmm0
    00001b9d: 	paddw	%xmm0, %xmm1
    00001ba1: 	cmpq	%rbx, %rax
    00001ba4: 	jne	.Ltmp4956 # Offset: 7076
    00001ba6: 	movdqa	%xmm1, %xmm0
    00001baa: 	cvttsd2si	init_value(%rip), %eax
    00001bb2: 	psrldq	$0x8, %xmm0
    00001bb7: 	paddw	%xmm0, %xmm1
    00001bbb: 	movdqa	%xmm1, %xmm0
    00001bbf: 	psrldq	$0x4, %xmm0
    00001bc4: 	shrw	%ax
    00001bc7: 	imulw	$0x1f40, %ax, %ax
    00001bcc: 	paddw	%xmm0, %xmm1
    00001bd0: 	movdqa	%xmm1, %xmm0
    00001bd4: 	psrldq	$0x2, %xmm0
    00001bd9: 	paddw	%xmm0, %xmm1
    00001bdd: 	pextrw	$0x0, %xmm1, %edx
    00001be2: 	cmpw	%dx, %ax
    00001be5: 	je	.Ltmp4957 # Offset: 7141
    00001be7: 	movl	current_test(%rip), %edx
    00001bed: 	leaq	DATAat0x571d0(%rip), %rsi
    00001bf4: 	movl	$0x1, %edi
    00001bf9: 	xorl	%eax, %eax
    00001bfb: 	callq	__printf_chk@PLT # Offset: 7163
    00001c00: 	movl	iterations(%rip), %ecx
.Ltmp4957:
    00001c06: 	addl	$0x1, (%rsp)
    00001c0a: 	movl	(%rsp), %eax
    00001c0d: 	cmpl	%ecx, %eax
    00001c0f: 	jl	.Ltmp4958 # Offset: 7183
.Ltmp4955:
    00001c15: 	movq	%r12, %rsi
    00001c18: 	movq	%r15, %rdi
    00001c1b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7195
    00001c20: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c27: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c2e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c35: 	je	.Ltmp4959 # Offset: 7221
.Ltmp5303:
    00001c3b: 	movq	-0x20(%rax), %rdi
    00001c3f: 	movq	%rdi, (%rsp)
    00001c43: 	callq	clock@PLT # Offset: 7235
    00001c48: 	movq	(%rsp), %rdi
    00001c4c: 	pxor	%xmm0, %xmm0
    00001c50: 	movq	%rax, end_time(%rip)
    00001c57: 	subq	start_time(%rip), %rax
    00001c5e: 	cvtsi2sd	%rax, %xmm0
    00001c63: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001c6b: 	callq	_Z13record_resultdPKc # Offset: 7275
    00001c70: 	movq	0xa0(%rsp), %rdi
    00001c78: 	cmpq	%r13, %rdi
    00001c7b: 	je	.Ltmp4960 # Offset: 7291
    00001c7d: 	movq	0xb0(%rsp), %rax
    00001c85: 	leaq	0x1(%rax), %rsi
    00001c89: 	callq	_ZdlPvm@PLT # Offset: 7305
.Ltmp4960:
    00001c8e: 	leaq	DATAat0x579c8(%rip), %rdx
    00001c95: 	movq	%r14, %rsi
    00001c98: 	movq	%r12, %rdi
    00001c9b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7323
    00001ca0: 	callq	clock@PLT # Offset: 7328
    00001ca5: 	movl	iterations(%rip), %ecx
    00001cab: 	movl	$0x0, (%rsp)
    00001cb2: 	movq	%rax, start_time(%rip)
    00001cb9: 	testl	%ecx, %ecx
    00001cbb: 	jle	.Ltmp4961 # Offset: 7355
    00001cc1: 	nopl	(%rax) # Size: 7
.Ltmp4964:
    00001cc8: 	movq	%rbp, %rax
    00001ccb: 	pxor	%xmm1, %xmm1
    00001ccf: 	nop # Size: 1
.Ltmp4962:
    00001cd0: 	movdqa	(%rax), %xmm0
    00001cd4: 	addq	$0x10, %rax
    00001cd8: 	psrlw	$0x1, %xmm0
    00001cdd: 	paddw	%xmm0, %xmm1
    00001ce1: 	cmpq	%rax, %rbx
    00001ce4: 	jne	.Ltmp4962 # Offset: 7396
    00001ce6: 	movdqa	%xmm1, %xmm0
    00001cea: 	cvttsd2si	init_value(%rip), %eax
    00001cf2: 	psrldq	$0x8, %xmm0
    00001cf7: 	paddw	%xmm0, %xmm1
    00001cfb: 	movdqa	%xmm1, %xmm0
    00001cff: 	psrldq	$0x4, %xmm0
    00001d04: 	shrw	%ax
    00001d07: 	imulw	$0x1f40, %ax, %ax
    00001d0c: 	paddw	%xmm0, %xmm1
    00001d10: 	movdqa	%xmm1, %xmm0
    00001d14: 	psrldq	$0x2, %xmm0
    00001d19: 	paddw	%xmm0, %xmm1
    00001d1d: 	pextrw	$0x0, %xmm1, %edx
    00001d22: 	cmpw	%dx, %ax
    00001d25: 	je	.Ltmp4963 # Offset: 7461
    00001d27: 	movl	current_test(%rip), %edx
    00001d2d: 	leaq	DATAat0x571d0(%rip), %rsi
    00001d34: 	movl	$0x1, %edi
    00001d39: 	xorl	%eax, %eax
    00001d3b: 	callq	__printf_chk@PLT # Offset: 7483
    00001d40: 	movl	iterations(%rip), %ecx
.Ltmp4963:
    00001d46: 	addl	$0x1, (%rsp)
    00001d4a: 	movl	(%rsp), %eax
    00001d4d: 	cmpl	%ecx, %eax
    00001d4f: 	jl	.Ltmp4964 # Offset: 7503
.Ltmp4961:
    00001d55: 	movq	%r12, %rsi
    00001d58: 	movq	%r15, %rdi
    00001d5b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7515
    00001d60: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d67: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d6e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d75: 	je	.Ltmp4965 # Offset: 7541
.Ltmp5302:
    00001d7b: 	movq	-0x20(%rax), %rdi
    00001d7f: 	movq	%rdi, (%rsp)
    00001d83: 	callq	clock@PLT # Offset: 7555
    00001d88: 	movq	(%rsp), %rdi
    00001d8c: 	pxor	%xmm0, %xmm0
    00001d90: 	movq	%rax, end_time(%rip)
    00001d97: 	subq	start_time(%rip), %rax
    00001d9e: 	cvtsi2sd	%rax, %xmm0
    00001da3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001dab: 	callq	_Z13record_resultdPKc # Offset: 7595
    00001db0: 	movq	0xa0(%rsp), %rdi
    00001db8: 	cmpq	%r13, %rdi
    00001dbb: 	je	.Ltmp4966 # Offset: 7611
    00001dbd: 	movq	0xb0(%rsp), %rax
    00001dc5: 	leaq	0x1(%rax), %rsi
    00001dc9: 	callq	_ZdlPvm@PLT # Offset: 7625
.Ltmp4966:
    00001dce: 	leaq	DATAat0x57484(%rip), %rdx
    00001dd5: 	movq	%r14, %rsi
    00001dd8: 	movq	%r12, %rdi
    00001ddb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7643
    00001de0: 	movq	%r12, %rdx
    00001de3: 	movl	$0x1f40, %esi
    00001de8: 	movq	%rbp, %rdi
    00001deb: 	callq	_Z13test_constantIt21custom_divide_inline2ItEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7659
    00001df0: 	movq	0xa0(%rsp), %rdi
    00001df8: 	cmpq	%r13, %rdi
    00001dfb: 	je	.Ltmp4967 # Offset: 7675
    00001dfd: 	movq	0xb0(%rsp), %rax
    00001e05: 	leaq	0x1(%rax), %rsi
    00001e09: 	callq	_ZdlPvm@PLT # Offset: 7689
.Ltmp4967:
    00001e0e: 	leaq	DATAat0x57498(%rip), %rdx
    00001e15: 	movq	%r14, %rsi
    00001e18: 	movq	%r12, %rdi
    00001e1b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7707
    00001e20: 	movq	%r12, %rcx
    00001e23: 	movl	$0x2, %edx
    00001e28: 	movl	$0x1f40, %esi
    00001e2d: 	movq	%rbp, %rdi
    00001e30: 	callq	_Z14test_variable1It22custom_divide_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7728
    00001e35: 	movq	0xa0(%rsp), %rdi
    00001e3d: 	cmpq	%r13, %rdi
    00001e40: 	je	.Ltmp4968 # Offset: 7744
    00001e42: 	movq	0xb0(%rsp), %rax
    00001e4a: 	leaq	0x1(%rax), %rsi
    00001e4e: 	callq	_ZdlPvm@PLT # Offset: 7758
.Ltmp4968:
    00001e53: 	leaq	DATAat0x574ae(%rip), %rdx
    00001e5a: 	movq	%r14, %rsi
    00001e5d: 	movq	%r12, %rdi
    00001e60: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7776
    00001e65: 	callq	clock@PLT # Offset: 7781
    00001e6a: 	movl	iterations(%rip), %ecx
    00001e70: 	movl	$0x0, (%rsp)
    00001e77: 	movq	%rax, start_time(%rip)
    00001e7e: 	testl	%ecx, %ecx
    00001e80: 	jle	.Ltmp4969 # Offset: 7808
    00001e86: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4972:
    00001e90: 	movq	%rbp, %rax
    00001e93: 	pxor	%xmm1, %xmm1
    00001e97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4970:
    00001ea0: 	movdqa	(%rax), %xmm0
    00001ea4: 	addq	$0x10, %rax
    00001ea8: 	psrlw	$0x1, %xmm0
    00001ead: 	paddw	%xmm0, %xmm1
    00001eb1: 	cmpq	%rbx, %rax
    00001eb4: 	jne	.Ltmp4970 # Offset: 7860
    00001eb6: 	movdqa	%xmm1, %xmm0
    00001eba: 	cvttsd2si	init_value(%rip), %eax
    00001ec2: 	psrldq	$0x8, %xmm0
    00001ec7: 	paddw	%xmm0, %xmm1
    00001ecb: 	movdqa	%xmm1, %xmm0
    00001ecf: 	psrldq	$0x4, %xmm0
    00001ed4: 	shrw	%ax
    00001ed7: 	imulw	$0x1f40, %ax, %ax
    00001edc: 	paddw	%xmm0, %xmm1
    00001ee0: 	movdqa	%xmm1, %xmm0
    00001ee4: 	psrldq	$0x2, %xmm0
    00001ee9: 	paddw	%xmm0, %xmm1
    00001eed: 	pextrw	$0x0, %xmm1, %edx
    00001ef2: 	cmpw	%dx, %ax
    00001ef5: 	je	.Ltmp4971 # Offset: 7925
    00001ef7: 	movl	current_test(%rip), %edx
    00001efd: 	leaq	DATAat0x571d0(%rip), %rsi
    00001f04: 	movl	$0x1, %edi
    00001f09: 	xorl	%eax, %eax
    00001f0b: 	callq	__printf_chk@PLT # Offset: 7947
    00001f10: 	movl	iterations(%rip), %ecx
.Ltmp4971:
    00001f16: 	addl	$0x1, (%rsp)
    00001f1a: 	movl	(%rsp), %eax
    00001f1d: 	cmpl	%ecx, %eax
    00001f1f: 	jl	.Ltmp4972 # Offset: 7967
.Ltmp4969:
    00001f25: 	movq	%r12, %rsi
    00001f28: 	movq	%r15, %rdi
    00001f2b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7979
    00001f30: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f37: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f3e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f45: 	je	.Ltmp4973 # Offset: 8005
.Ltmp5301:
    00001f4b: 	movq	-0x20(%rax), %rdi
    00001f4f: 	movq	%rdi, (%rsp)
    00001f53: 	callq	clock@PLT # Offset: 8019
    00001f58: 	movq	(%rsp), %rdi
    00001f5c: 	pxor	%xmm0, %xmm0
    00001f60: 	movq	%rax, end_time(%rip)
    00001f67: 	subq	start_time(%rip), %rax
    00001f6e: 	cvtsi2sd	%rax, %xmm0
    00001f73: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001f7b: 	callq	_Z13record_resultdPKc # Offset: 8059
    00001f80: 	movq	0xa0(%rsp), %rdi
    00001f88: 	cmpq	%r13, %rdi
    00001f8b: 	je	.Ltmp4974 # Offset: 8075
    00001f8d: 	movq	0xb0(%rsp), %rax
    00001f95: 	leaq	0x1(%rax), %rsi
    00001f99: 	callq	_ZdlPvm@PLT # Offset: 8089
.Ltmp4974:
    00001f9e: 	leaq	DATAat0x574c4(%rip), %rdx
    00001fa5: 	movq	%r14, %rsi
    00001fa8: 	movq	%r12, %rdi
    00001fab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8107
    00001fb0: 	callq	clock@PLT # Offset: 8112
    00001fb5: 	movl	iterations(%rip), %ecx
    00001fbb: 	movl	$0x0, (%rsp)
    00001fc2: 	movq	%rax, start_time(%rip)
    00001fc9: 	testl	%ecx, %ecx
    00001fcb: 	jle	.Ltmp4975 # Offset: 8139
    00001fd1: 	nopl	(%rax) # Size: 7
.Ltmp4978:
    00001fd8: 	movq	%rbp, %rax
    00001fdb: 	pxor	%xmm1, %xmm1
    00001fdf: 	nop # Size: 1
.Ltmp4976:
    00001fe0: 	movdqa	(%rax), %xmm0
    00001fe4: 	addq	$0x10, %rax
    00001fe8: 	psrlw	$0x3, %xmm0
    00001fed: 	paddw	%xmm0, %xmm1
    00001ff1: 	cmpq	%rax, %rbx
    00001ff4: 	jne	.Ltmp4976 # Offset: 8180
    00001ff6: 	movdqa	%xmm1, %xmm0
    00001ffa: 	cvttsd2si	init_value(%rip), %eax
    00002002: 	psrldq	$0x8, %xmm0
    00002007: 	paddw	%xmm0, %xmm1
    0000200b: 	movdqa	%xmm1, %xmm0
    0000200f: 	psrldq	$0x4, %xmm0
    00002014: 	shrw	$0x3, %ax
    00002018: 	imulw	$0x1f40, %ax, %ax
    0000201d: 	paddw	%xmm0, %xmm1
    00002021: 	movdqa	%xmm1, %xmm0
    00002025: 	psrldq	$0x2, %xmm0
    0000202a: 	paddw	%xmm0, %xmm1
    0000202e: 	pextrw	$0x0, %xmm1, %edx
    00002033: 	cmpw	%dx, %ax
    00002036: 	je	.Ltmp4977 # Offset: 8246
    00002038: 	movl	current_test(%rip), %edx
    0000203e: 	leaq	DATAat0x571d0(%rip), %rsi
    00002045: 	movl	$0x1, %edi
    0000204a: 	xorl	%eax, %eax
    0000204c: 	callq	__printf_chk@PLT # Offset: 8268
    00002051: 	movl	iterations(%rip), %ecx
.Ltmp4977:
    00002057: 	addl	$0x1, (%rsp)
    0000205b: 	movl	(%rsp), %eax
    0000205e: 	cmpl	%ecx, %eax
    00002060: 	jl	.Ltmp4978 # Offset: 8288
.Ltmp4975:
    00002066: 	movq	%r12, %rsi
    00002069: 	movq	%r15, %rdi
    0000206c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8300
    00002071: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002078: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000207f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002086: 	je	.Ltmp4979 # Offset: 8326
.Ltmp5300:
    0000208c: 	movq	-0x20(%rax), %rdi
    00002090: 	movq	%rdi, (%rsp)
    00002094: 	callq	clock@PLT # Offset: 8340
    00002099: 	movq	(%rsp), %rdi
    0000209d: 	pxor	%xmm0, %xmm0
    000020a1: 	movq	%rax, end_time(%rip)
    000020a8: 	subq	start_time(%rip), %rax
    000020af: 	cvtsi2sd	%rax, %xmm0
    000020b4: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000020bc: 	callq	_Z13record_resultdPKc # Offset: 8380
    000020c1: 	movq	0xa0(%rsp), %rdi
    000020c9: 	cmpq	%r13, %rdi
    000020cc: 	je	.Ltmp4980 # Offset: 8396
    000020ce: 	movq	0xb0(%rsp), %rax
    000020d6: 	leaq	0x1(%rax), %rsi
    000020da: 	callq	_ZdlPvm@PLT # Offset: 8410
.Ltmp4980:
    000020df: 	leaq	DATAat0x579e8(%rip), %rdx
    000020e6: 	movq	%r14, %rsi
    000020e9: 	movq	%r12, %rdi
    000020ec: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8428
    000020f1: 	callq	clock@PLT # Offset: 8433
    000020f6: 	movl	iterations(%rip), %ecx
    000020fc: 	movl	$0x0, (%rsp)
    00002103: 	movq	%rax, start_time(%rip)
    0000210a: 	testl	%ecx, %ecx
    0000210c: 	jle	.Ltmp4981 # Offset: 8460
    00002112: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4984:
    00002118: 	movq	%rbp, %rax
    0000211b: 	pxor	%xmm1, %xmm1
    0000211f: 	nop # Size: 1
.Ltmp4982:
    00002120: 	movdqa	(%rax), %xmm0
    00002124: 	addq	$0x10, %rax
    00002128: 	psrlw	$0x3, %xmm0
    0000212d: 	paddw	%xmm0, %xmm1
    00002131: 	cmpq	%rbx, %rax
    00002134: 	jne	.Ltmp4982 # Offset: 8500
    00002136: 	movdqa	%xmm1, %xmm0
    0000213a: 	cvttsd2si	init_value(%rip), %eax
    00002142: 	psrldq	$0x8, %xmm0
    00002147: 	paddw	%xmm0, %xmm1
    0000214b: 	movdqa	%xmm1, %xmm0
    0000214f: 	psrldq	$0x4, %xmm0
    00002154: 	shrw	$0x3, %ax
    00002158: 	imulw	$0x1f40, %ax, %ax
    0000215d: 	paddw	%xmm0, %xmm1
    00002161: 	movdqa	%xmm1, %xmm0
    00002165: 	psrldq	$0x2, %xmm0
    0000216a: 	paddw	%xmm0, %xmm1
    0000216e: 	pextrw	$0x0, %xmm1, %edx
    00002173: 	cmpw	%dx, %ax
    00002176: 	je	.Ltmp4983 # Offset: 8566
    00002178: 	movl	current_test(%rip), %edx
    0000217e: 	leaq	DATAat0x571d0(%rip), %rsi
    00002185: 	movl	$0x1, %edi
    0000218a: 	xorl	%eax, %eax
    0000218c: 	callq	__printf_chk@PLT # Offset: 8588
    00002191: 	movl	iterations(%rip), %ecx
.Ltmp4983:
    00002197: 	addl	$0x1, (%rsp)
    0000219b: 	movl	(%rsp), %eax
    0000219e: 	cmpl	%ecx, %eax
    000021a0: 	jl	.Ltmp4984 # Offset: 8608
.Ltmp4981:
    000021a6: 	movq	%r12, %rsi
    000021a9: 	movq	%r15, %rdi
    000021ac: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8620
    000021b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000021b8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000021bf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000021c6: 	je	.Ltmp4985 # Offset: 8646
.Ltmp5299:
    000021cc: 	movq	-0x20(%rax), %rdi
    000021d0: 	movq	%rdi, (%rsp)
    000021d4: 	callq	clock@PLT # Offset: 8660
    000021d9: 	movq	(%rsp), %rdi
    000021dd: 	pxor	%xmm0, %xmm0
    000021e1: 	movq	%rax, end_time(%rip)
    000021e8: 	subq	start_time(%rip), %rax
    000021ef: 	cvtsi2sd	%rax, %xmm0
    000021f4: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000021fc: 	callq	_Z13record_resultdPKc # Offset: 8700
    00002201: 	movq	0xa0(%rsp), %rdi
    00002209: 	cmpq	%r13, %rdi
    0000220c: 	je	.Ltmp4986 # Offset: 8716
    0000220e: 	movq	0xb0(%rsp), %rax
    00002216: 	leaq	0x1(%rax), %rsi
    0000221a: 	callq	_ZdlPvm@PLT # Offset: 8730
.Ltmp4986:
    0000221f: 	leaq	DATAat0x574d6(%rip), %rdx
    00002226: 	movq	%r14, %rsi
    00002229: 	movq	%r12, %rdi
    0000222c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8748
    00002231: 	movq	%r12, %rcx
    00002234: 	movl	$0x8, %edx
    00002239: 	movl	$0x1f40, %esi
    0000223e: 	movq	%rbp, %rdi
    00002241: 	callq	_Z14test_variable1It22custom_divide_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 8769
    00002246: 	movq	0xa0(%rsp), %rdi
    0000224e: 	cmpq	%r13, %rdi
    00002251: 	je	.Ltmp4987 # Offset: 8785
    00002253: 	movq	0xb0(%rsp), %rax
    0000225b: 	leaq	0x1(%rax), %rsi
    0000225f: 	callq	_ZdlPvm@PLT # Offset: 8799
.Ltmp4987:
    00002264: 	leaq	DATAat0x574ec(%rip), %rdx
    0000226b: 	movq	%r14, %rsi
    0000226e: 	movq	%r12, %rdi
    00002271: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8817
    00002276: 	callq	clock@PLT # Offset: 8822
    0000227b: 	movl	iterations(%rip), %ecx
    00002281: 	movl	$0x0, (%rsp)
    00002288: 	movq	%rax, start_time(%rip)
    0000228f: 	testl	%ecx, %ecx
    00002291: 	jle	.Ltmp4988 # Offset: 8849
    00002297: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4991:
    000022a0: 	movq	%rbp, %rax
    000022a3: 	pxor	%xmm1, %xmm1
    000022a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4989:
    000022b0: 	movdqa	(%rax), %xmm0
    000022b4: 	addq	$0x10, %rax
    000022b8: 	psrlw	$0x3, %xmm0
    000022bd: 	paddw	%xmm0, %xmm1
    000022c1: 	cmpq	%rax, %rbx
    000022c4: 	jne	.Ltmp4989 # Offset: 8900
    000022c6: 	movdqa	%xmm1, %xmm0
    000022ca: 	cvttsd2si	init_value(%rip), %eax
    000022d2: 	psrldq	$0x8, %xmm0
    000022d7: 	paddw	%xmm0, %xmm1
    000022db: 	movdqa	%xmm1, %xmm0
    000022df: 	psrldq	$0x4, %xmm0
    000022e4: 	shrw	$0x3, %ax
    000022e8: 	imulw	$0x1f40, %ax, %ax
    000022ed: 	paddw	%xmm0, %xmm1
    000022f1: 	movdqa	%xmm1, %xmm0
    000022f5: 	psrldq	$0x2, %xmm0
    000022fa: 	paddw	%xmm0, %xmm1
    000022fe: 	pextrw	$0x0, %xmm1, %edx
    00002303: 	cmpw	%dx, %ax
    00002306: 	je	.Ltmp4990 # Offset: 8966
    00002308: 	movl	current_test(%rip), %edx
    0000230e: 	leaq	DATAat0x571d0(%rip), %rsi
    00002315: 	movl	$0x1, %edi
    0000231a: 	xorl	%eax, %eax
    0000231c: 	callq	__printf_chk@PLT # Offset: 8988
    00002321: 	movl	iterations(%rip), %ecx
.Ltmp4990:
    00002327: 	addl	$0x1, (%rsp)
    0000232b: 	movl	(%rsp), %eax
    0000232e: 	cmpl	%ecx, %eax
    00002330: 	jl	.Ltmp4991 # Offset: 9008
.Ltmp4988:
    00002336: 	movq	%r12, %rsi
    00002339: 	movq	%r15, %rdi
    0000233c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9020
    00002341: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002348: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000234f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002356: 	je	.Ltmp4992 # Offset: 9046
.Ltmp5298:
    0000235c: 	movq	-0x20(%rax), %rdi
    00002360: 	movq	%rdi, (%rsp)
    00002364: 	callq	clock@PLT # Offset: 9060
    00002369: 	movq	(%rsp), %rdi
    0000236d: 	pxor	%xmm0, %xmm0
    00002371: 	movq	%rax, end_time(%rip)
    00002378: 	subq	start_time(%rip), %rax
    0000237f: 	cvtsi2sd	%rax, %xmm0
    00002384: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000238c: 	callq	_Z13record_resultdPKc # Offset: 9100
    00002391: 	movq	0xa0(%rsp), %rdi
    00002399: 	cmpq	%r13, %rdi
    0000239c: 	je	.Ltmp4993 # Offset: 9116
    0000239e: 	movq	0xb0(%rsp), %rax
    000023a6: 	leaq	0x1(%rax), %rsi
    000023aa: 	callq	_ZdlPvm@PLT # Offset: 9130
.Ltmp4993:
    000023af: 	leaq	DATAat0x57502(%rip), %rdx
    000023b6: 	movq	%r14, %rsi
    000023b9: 	movq	%r12, %rdi
    000023bc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9148
    000023c1: 	callq	clock@PLT # Offset: 9153
    000023c6: 	movl	iterations(%rip), %ecx
    000023cc: 	movl	$0x0, (%rsp)
    000023d3: 	movq	%rax, start_time(%rip)
    000023da: 	testl	%ecx, %ecx
    000023dc: 	jle	.Ltmp4994 # Offset: 9180
    000023e2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4997:
    000023e8: 	movq	%rbp, %rax
    000023eb: 	pxor	%xmm1, %xmm1
    000023ef: 	nop # Size: 1
.Ltmp4995:
    000023f0: 	movdqa	(%rax), %xmm0
    000023f4: 	addq	$0x10, %rax
    000023f8: 	psrlw	$0x6, %xmm0
    000023fd: 	paddw	%xmm0, %xmm1
    00002401: 	cmpq	%rbx, %rax
    00002404: 	jne	.Ltmp4995 # Offset: 9220
    00002406: 	movdqa	%xmm1, %xmm0
    0000240a: 	cvttsd2si	init_value(%rip), %eax
    00002412: 	psrldq	$0x8, %xmm0
    00002417: 	paddw	%xmm0, %xmm1
    0000241b: 	movdqa	%xmm1, %xmm0
    0000241f: 	psrldq	$0x4, %xmm0
    00002424: 	shrw	$0x6, %ax
    00002428: 	imulw	$0x1f40, %ax, %ax
    0000242d: 	paddw	%xmm0, %xmm1
    00002431: 	movdqa	%xmm1, %xmm0
    00002435: 	psrldq	$0x2, %xmm0
    0000243a: 	paddw	%xmm0, %xmm1
    0000243e: 	pextrw	$0x0, %xmm1, %edx
    00002443: 	cmpw	%dx, %ax
    00002446: 	je	.Ltmp4996 # Offset: 9286
    00002448: 	movl	current_test(%rip), %edx
    0000244e: 	leaq	DATAat0x571d0(%rip), %rsi
    00002455: 	movl	$0x1, %edi
    0000245a: 	xorl	%eax, %eax
    0000245c: 	callq	__printf_chk@PLT # Offset: 9308
    00002461: 	movl	iterations(%rip), %ecx
.Ltmp4996:
    00002467: 	addl	$0x1, (%rsp)
    0000246b: 	movl	(%rsp), %eax
    0000246e: 	cmpl	%ecx, %eax
    00002470: 	jl	.Ltmp4997 # Offset: 9328
.Ltmp4994:
    00002476: 	movq	%r12, %rsi
    00002479: 	movq	%r15, %rdi
    0000247c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9340
    00002481: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002488: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000248f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002496: 	je	.Ltmp4998 # Offset: 9366
.Ltmp5297:
    0000249c: 	movq	-0x20(%rax), %rdi
    000024a0: 	movq	%rdi, (%rsp)
    000024a4: 	callq	clock@PLT # Offset: 9380
    000024a9: 	movq	(%rsp), %rdi
    000024ad: 	pxor	%xmm0, %xmm0
    000024b1: 	movq	%rax, end_time(%rip)
    000024b8: 	subq	start_time(%rip), %rax
    000024bf: 	cvtsi2sd	%rax, %xmm0
    000024c4: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000024cc: 	callq	_Z13record_resultdPKc # Offset: 9420
    000024d1: 	movq	0xa0(%rsp), %rdi
    000024d9: 	cmpq	%r13, %rdi
    000024dc: 	je	.Ltmp4999 # Offset: 9436
    000024de: 	movq	0xb0(%rsp), %rax
    000024e6: 	leaq	0x1(%rax), %rsi
    000024ea: 	callq	_ZdlPvm@PLT # Offset: 9450
.Ltmp4999:
    000024ef: 	leaq	DATAat0x57a08(%rip), %rdx
    000024f6: 	movq	%r14, %rsi
    000024f9: 	movq	%r12, %rdi
    000024fc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9468
    00002501: 	callq	clock@PLT # Offset: 9473
    00002506: 	movl	iterations(%rip), %ecx
    0000250c: 	movl	$0x0, (%rsp)
    00002513: 	movq	%rax, start_time(%rip)
    0000251a: 	testl	%ecx, %ecx
    0000251c: 	jle	.Ltmp5000 # Offset: 9500
    00002522: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5003:
    00002528: 	movq	%rbp, %rax
    0000252b: 	pxor	%xmm1, %xmm1
    0000252f: 	nop # Size: 1
.Ltmp5001:
    00002530: 	movdqa	(%rax), %xmm0
    00002534: 	addq	$0x10, %rax
    00002538: 	psrlw	$0x6, %xmm0
    0000253d: 	paddw	%xmm0, %xmm1
    00002541: 	cmpq	%rax, %rbx
    00002544: 	jne	.Ltmp5001 # Offset: 9540
    00002546: 	movdqa	%xmm1, %xmm0
    0000254a: 	cvttsd2si	init_value(%rip), %eax
    00002552: 	psrldq	$0x8, %xmm0
    00002557: 	paddw	%xmm0, %xmm1
    0000255b: 	movdqa	%xmm1, %xmm0
    0000255f: 	psrldq	$0x4, %xmm0
    00002564: 	shrw	$0x6, %ax
    00002568: 	imulw	$0x1f40, %ax, %ax
    0000256d: 	paddw	%xmm0, %xmm1
    00002571: 	movdqa	%xmm1, %xmm0
    00002575: 	psrldq	$0x2, %xmm0
    0000257a: 	paddw	%xmm0, %xmm1
    0000257e: 	pextrw	$0x0, %xmm1, %edx
    00002583: 	cmpw	%dx, %ax
    00002586: 	je	.Ltmp5002 # Offset: 9606
    00002588: 	movl	current_test(%rip), %edx
    0000258e: 	leaq	DATAat0x571d0(%rip), %rsi
    00002595: 	movl	$0x1, %edi
    0000259a: 	xorl	%eax, %eax
    0000259c: 	callq	__printf_chk@PLT # Offset: 9628
    000025a1: 	movl	iterations(%rip), %ecx
.Ltmp5002:
    000025a7: 	addl	$0x1, (%rsp)
    000025ab: 	movl	(%rsp), %eax
    000025ae: 	cmpl	%ecx, %eax
    000025b0: 	jl	.Ltmp5003 # Offset: 9648
.Ltmp5000:
    000025b6: 	movq	%r12, %rsi
    000025b9: 	movq	%r15, %rdi
    000025bc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9660
    000025c1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000025c8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000025cf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000025d6: 	je	.Ltmp5004 # Offset: 9686
.Ltmp5296:
    000025dc: 	movq	-0x20(%rax), %rdi
    000025e0: 	movq	%rdi, (%rsp)
    000025e4: 	callq	clock@PLT # Offset: 9700
    000025e9: 	movq	(%rsp), %rdi
    000025ed: 	pxor	%xmm0, %xmm0
    000025f1: 	movq	%rax, end_time(%rip)
    000025f8: 	subq	start_time(%rip), %rax
    000025ff: 	cvtsi2sd	%rax, %xmm0
    00002604: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000260c: 	callq	_Z13record_resultdPKc # Offset: 9740
    00002611: 	movq	0xa0(%rsp), %rdi
    00002619: 	cmpq	%r13, %rdi
    0000261c: 	je	.Ltmp5005 # Offset: 9756
    0000261e: 	movq	0xb0(%rsp), %rax
    00002626: 	leaq	0x1(%rax), %rsi
    0000262a: 	callq	_ZdlPvm@PLT # Offset: 9770
.Ltmp5005:
    0000262f: 	leaq	DATAat0x57514(%rip), %rdx
    00002636: 	movq	%r14, %rsi
    00002639: 	movq	%r12, %rdi
    0000263c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9788
    00002641: 	movq	%r12, %rcx
    00002644: 	movl	$0x40, %edx
    00002649: 	movl	$0x1f40, %esi
    0000264e: 	movq	%rbp, %rdi
    00002651: 	callq	_Z14test_variable1It22custom_divide_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 9809
    00002656: 	movq	0xa0(%rsp), %rdi
    0000265e: 	cmpq	%r13, %rdi
    00002661: 	je	.Ltmp5006 # Offset: 9825
    00002663: 	movq	0xb0(%rsp), %rax
    0000266b: 	leaq	0x1(%rax), %rsi
    0000266f: 	callq	_ZdlPvm@PLT # Offset: 9839
.Ltmp5006:
    00002674: 	leaq	DATAat0x5752b(%rip), %rdx
    0000267b: 	movq	%r14, %rsi
    0000267e: 	movq	%r12, %rdi
    00002681: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9857
    00002686: 	callq	clock@PLT # Offset: 9862
    0000268b: 	movl	iterations(%rip), %ecx
    00002691: 	movl	$0x0, (%rsp)
    00002698: 	movq	%rax, start_time(%rip)
    0000269f: 	testl	%ecx, %ecx
    000026a1: 	jle	.Ltmp5007 # Offset: 9889
    000026a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5010:
    000026b0: 	movq	%rbp, %rax
    000026b3: 	pxor	%xmm1, %xmm1
    000026b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5008:
    000026c0: 	movdqa	(%rax), %xmm0
    000026c4: 	addq	$0x10, %rax
    000026c8: 	psrlw	$0x6, %xmm0
    000026cd: 	paddw	%xmm0, %xmm1
    000026d1: 	cmpq	%rbx, %rax
    000026d4: 	jne	.Ltmp5008 # Offset: 9940
    000026d6: 	movdqa	%xmm1, %xmm0
    000026da: 	cvttsd2si	init_value(%rip), %eax
    000026e2: 	psrldq	$0x8, %xmm0
    000026e7: 	paddw	%xmm0, %xmm1
    000026eb: 	movdqa	%xmm1, %xmm0
    000026ef: 	psrldq	$0x4, %xmm0
    000026f4: 	shrw	$0x6, %ax
    000026f8: 	imulw	$0x1f40, %ax, %ax
    000026fd: 	paddw	%xmm0, %xmm1
    00002701: 	movdqa	%xmm1, %xmm0
    00002705: 	psrldq	$0x2, %xmm0
    0000270a: 	paddw	%xmm0, %xmm1
    0000270e: 	pextrw	$0x0, %xmm1, %edx
    00002713: 	cmpw	%dx, %ax
    00002716: 	je	.Ltmp5009 # Offset: 10006
    00002718: 	movl	current_test(%rip), %edx
    0000271e: 	leaq	DATAat0x571d0(%rip), %rsi
    00002725: 	movl	$0x1, %edi
    0000272a: 	xorl	%eax, %eax
    0000272c: 	callq	__printf_chk@PLT # Offset: 10028
    00002731: 	movl	iterations(%rip), %ecx
.Ltmp5009:
    00002737: 	addl	$0x1, (%rsp)
    0000273b: 	movl	(%rsp), %eax
    0000273e: 	cmpl	%ecx, %eax
    00002740: 	jl	.Ltmp5010 # Offset: 10048
.Ltmp5007:
    00002746: 	movq	%r12, %rsi
    00002749: 	movq	%r15, %rdi
    0000274c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10060
    00002751: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002758: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000275f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002766: 	je	.Ltmp5011 # Offset: 10086
.Ltmp5295:
    0000276c: 	movq	-0x20(%rax), %rdi
    00002770: 	movq	%rdi, (%rsp)
    00002774: 	callq	clock@PLT # Offset: 10100
    00002779: 	movq	(%rsp), %rdi
    0000277d: 	pxor	%xmm0, %xmm0
    00002781: 	movq	%rax, end_time(%rip)
    00002788: 	subq	start_time(%rip), %rax
    0000278f: 	cvtsi2sd	%rax, %xmm0
    00002794: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000279c: 	callq	_Z13record_resultdPKc # Offset: 10140
    000027a1: 	movq	0xa0(%rsp), %rdi
    000027a9: 	cmpq	%r13, %rdi
    000027ac: 	je	.Ltmp5012 # Offset: 10156
    000027ae: 	movq	0xb0(%rsp), %rax
    000027b6: 	leaq	0x1(%rax), %rsi
    000027ba: 	callq	_ZdlPvm@PLT # Offset: 10170
.Ltmp5012:
    000027bf: 	leaq	0x80(%rsp), %rdi
    000027c7: 	leaq	DATAat0x57542(%rip), %rdx
    000027ce: 	movq	%r14, %rsi
    000027d1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10193
    000027d6: 	movl	iterations(%rip), %edx
    000027dc: 	xorl	%r8d, %r8d
    000027df: 	xorl	%ecx, %ecx
    000027e1: 	movl	$0x1f40, %esi
    000027e6: 	movq	0x80(%rsp), %rdi
    000027ee: 	callq	_Z9summarizePKciiii # Offset: 10222
    000027f3: 	leaq	DATAat0x5755d(%rip), %rdx
    000027fa: 	movq	%r14, %rsi
    000027fd: 	movq	%r12, %rdi
    00002800: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10240
    00002805: 	callq	clock@PLT # Offset: 10245
    0000280a: 	movl	iterations(%rip), %ecx
    00002810: 	movq	%rax, start_time(%rip)
    00002817: 	testl	%ecx, %ecx
    00002819: 	jle	.Ltmp5013 # Offset: 10265
    0000281f: 	movdqa	DATAat0x57f10(%rip), %xmm7
    00002827: 	movl	$0x0, 0x1c(%rsp)
    0000282f: 	movaps	%xmm7, (%rsp)
    00002833: 	nopl	(%rax,%rax) # Size: 5
.Ltmp5016:
    00002838: 	movq	%rbp, %rax
    0000283b: 	pxor	%xmm0, %xmm0
    0000283f: 	nop # Size: 1
.Ltmp5014:
    00002840: 	movdqa	(%rsp), %xmm1
    00002845: 	pand	(%rax), %xmm1
    00002849: 	addq	$0x10, %rax
    0000284d: 	paddw	%xmm1, %xmm0
    00002851: 	cmpq	%rax, %rbx
    00002854: 	jne	.Ltmp5014 # Offset: 10324
    00002856: 	movdqa	%xmm0, %xmm1
    0000285a: 	cvttsd2si	init_value(%rip), %eax
    00002862: 	psrldq	$0x8, %xmm1
    00002867: 	paddw	%xmm1, %xmm0
    0000286b: 	movdqa	%xmm0, %xmm1
    0000286f: 	psrldq	$0x4, %xmm1
    00002874: 	andl	$0x1, %eax
    00002877: 	paddw	%xmm1, %xmm0
    0000287b: 	negl	%eax
    0000287d: 	movdqa	%xmm0, %xmm1
    00002881: 	andw	$0x1f40, %ax
    00002885: 	psrldq	$0x2, %xmm1
    0000288a: 	paddw	%xmm1, %xmm0
    0000288e: 	pextrw	$0x0, %xmm0, %edx
    00002893: 	cmpw	%dx, %ax
    00002896: 	je	.Ltmp5015 # Offset: 10390
    00002898: 	movl	current_test(%rip), %edx
    0000289e: 	leaq	DATAat0x571d0(%rip), %rsi
    000028a5: 	movl	$0x1, %edi
    000028aa: 	xorl	%eax, %eax
    000028ac: 	callq	__printf_chk@PLT # Offset: 10412
    000028b1: 	movl	iterations(%rip), %ecx
.Ltmp5015:
    000028b7: 	addl	$0x1, 0x1c(%rsp)
    000028bc: 	movl	0x1c(%rsp), %eax
    000028c0: 	cmpl	%ecx, %eax
    000028c2: 	jl	.Ltmp5016 # Offset: 10434
.Ltmp5013:
    000028c8: 	movq	%r12, %rsi
    000028cb: 	movq	%r15, %rdi
    000028ce: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10446
    000028d3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000028da: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000028e1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000028e8: 	je	.Ltmp5017 # Offset: 10472
.Ltmp5294:
    000028ee: 	movq	-0x20(%rax), %rdi
    000028f2: 	movq	%rdi, (%rsp)
    000028f6: 	callq	clock@PLT # Offset: 10486
    000028fb: 	movq	(%rsp), %rdi
    000028ff: 	pxor	%xmm0, %xmm0
    00002903: 	movq	%rax, end_time(%rip)
    0000290a: 	subq	start_time(%rip), %rax
    00002911: 	cvtsi2sd	%rax, %xmm0
    00002916: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000291e: 	callq	_Z13record_resultdPKc # Offset: 10526
    00002923: 	movq	0xa0(%rsp), %rdi
    0000292b: 	cmpq	%r13, %rdi
    0000292e: 	je	.Ltmp5018 # Offset: 10542
    00002930: 	movq	0xb0(%rsp), %rax
    00002938: 	leaq	0x1(%rax), %rsi
    0000293c: 	callq	_ZdlPvm@PLT # Offset: 10556
.Ltmp5018:
    00002941: 	leaq	DATAat0x57564(%rip), %rdx
    00002948: 	movq	%r14, %rsi
    0000294b: 	movq	%r12, %rdi
    0000294e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10574
    00002953: 	callq	clock@PLT # Offset: 10579
    00002958: 	movl	iterations(%rip), %ecx
    0000295e: 	movq	%rax, start_time(%rip)
    00002965: 	testl	%ecx, %ecx
    00002967: 	jle	.Ltmp5019 # Offset: 10599
    0000296d: 	movdqa	DATAat0x57f10(%rip), %xmm5
    00002975: 	movl	$0x0, 0x1c(%rsp)
    0000297d: 	movaps	%xmm5, (%rsp)
    00002981: 	nopl	(%rax) # Size: 7
.Ltmp5022:
    00002988: 	movq	%rbp, %rax
    0000298b: 	pxor	%xmm0, %xmm0
    0000298f: 	nop # Size: 1
.Ltmp5020:
    00002990: 	movdqa	(%rsp), %xmm1
    00002995: 	pand	(%rax), %xmm1
    00002999: 	addq	$0x10, %rax
    0000299d: 	paddw	%xmm1, %xmm0
    000029a1: 	cmpq	%rbx, %rax
    000029a4: 	jne	.Ltmp5020 # Offset: 10660
    000029a6: 	movdqa	%xmm0, %xmm1
    000029aa: 	cvttsd2si	init_value(%rip), %eax
    000029b2: 	psrldq	$0x8, %xmm1
    000029b7: 	paddw	%xmm1, %xmm0
    000029bb: 	movdqa	%xmm0, %xmm1
    000029bf: 	psrldq	$0x4, %xmm1
    000029c4: 	andl	$0x1, %eax
    000029c7: 	paddw	%xmm1, %xmm0
    000029cb: 	negl	%eax
    000029cd: 	movdqa	%xmm0, %xmm1
    000029d1: 	andw	$0x1f40, %ax
    000029d5: 	psrldq	$0x2, %xmm1
    000029da: 	paddw	%xmm1, %xmm0
    000029de: 	pextrw	$0x0, %xmm0, %edx
    000029e3: 	cmpw	%dx, %ax
    000029e6: 	je	.Ltmp5021 # Offset: 10726
    000029e8: 	movl	current_test(%rip), %edx
    000029ee: 	leaq	DATAat0x571d0(%rip), %rsi
    000029f5: 	movl	$0x1, %edi
    000029fa: 	xorl	%eax, %eax
    000029fc: 	callq	__printf_chk@PLT # Offset: 10748
    00002a01: 	movl	iterations(%rip), %ecx
.Ltmp5021:
    00002a07: 	addl	$0x1, 0x1c(%rsp)
    00002a0c: 	movl	0x1c(%rsp), %eax
    00002a10: 	cmpl	%ecx, %eax
    00002a12: 	jl	.Ltmp5022 # Offset: 10770
.Ltmp5019:
    00002a18: 	movq	%r12, %rsi
    00002a1b: 	movq	%r15, %rdi
    00002a1e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10782
    00002a23: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002a2a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002a31: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002a38: 	je	.Ltmp5023 # Offset: 10808
.Ltmp5293:
    00002a3e: 	movq	-0x20(%rax), %rdi
    00002a42: 	movq	%rdi, (%rsp)
    00002a46: 	callq	clock@PLT # Offset: 10822
    00002a4b: 	movq	(%rsp), %rdi
    00002a4f: 	pxor	%xmm0, %xmm0
    00002a53: 	movq	%rax, end_time(%rip)
    00002a5a: 	subq	start_time(%rip), %rax
    00002a61: 	cvtsi2sd	%rax, %xmm0
    00002a66: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002a6e: 	callq	_Z13record_resultdPKc # Offset: 10862
    00002a73: 	movq	0xa0(%rsp), %rdi
    00002a7b: 	cmpq	%r13, %rdi
    00002a7e: 	je	.Ltmp5024 # Offset: 10878
    00002a80: 	movq	0xb0(%rsp), %rax
    00002a88: 	leaq	0x1(%rax), %rsi
    00002a8c: 	callq	_ZdlPvm@PLT # Offset: 10892
.Ltmp5024:
    00002a91: 	leaq	DATAat0x57575(%rip), %rdx
    00002a98: 	movq	%r14, %rsi
    00002a9b: 	movq	%r12, %rdi
    00002a9e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10910
    00002aa3: 	callq	clock@PLT # Offset: 10915
    00002aa8: 	movl	iterations(%rip), %ecx
    00002aae: 	movq	%rax, start_time(%rip)
    00002ab5: 	testl	%ecx, %ecx
    00002ab7: 	jle	.Ltmp5025 # Offset: 10935
    00002abd: 	movdqa	DATAat0x57f10(%rip), %xmm6
    00002ac5: 	movl	$0x0, 0x1c(%rsp)
    00002acd: 	movaps	%xmm6, (%rsp)
    00002ad1: 	nopl	(%rax) # Size: 7
.Ltmp5028:
    00002ad8: 	movq	%rbp, %rax
    00002adb: 	pxor	%xmm0, %xmm0
    00002adf: 	nop # Size: 1
.Ltmp5026:
    00002ae0: 	movdqa	(%rsp), %xmm1
    00002ae5: 	pand	(%rax), %xmm1
    00002ae9: 	addq	$0x10, %rax
    00002aed: 	paddw	%xmm1, %xmm0
    00002af1: 	cmpq	%rax, %rbx
    00002af4: 	jne	.Ltmp5026 # Offset: 10996
    00002af6: 	movdqa	%xmm0, %xmm1
    00002afa: 	cvttsd2si	init_value(%rip), %eax
    00002b02: 	psrldq	$0x8, %xmm1
    00002b07: 	paddw	%xmm1, %xmm0
    00002b0b: 	movdqa	%xmm0, %xmm1
    00002b0f: 	psrldq	$0x4, %xmm1
    00002b14: 	andl	$0x1, %eax
    00002b17: 	paddw	%xmm1, %xmm0
    00002b1b: 	negl	%eax
    00002b1d: 	movdqa	%xmm0, %xmm1
    00002b21: 	andw	$0x1f40, %ax
    00002b25: 	psrldq	$0x2, %xmm1
    00002b2a: 	paddw	%xmm1, %xmm0
    00002b2e: 	pextrw	$0x0, %xmm0, %edx
    00002b33: 	cmpw	%dx, %ax
    00002b36: 	je	.Ltmp5027 # Offset: 11062
    00002b38: 	movl	current_test(%rip), %edx
    00002b3e: 	leaq	DATAat0x571d0(%rip), %rsi
    00002b45: 	movl	$0x1, %edi
    00002b4a: 	xorl	%eax, %eax
    00002b4c: 	callq	__printf_chk@PLT # Offset: 11084
    00002b51: 	movl	iterations(%rip), %ecx
.Ltmp5027:
    00002b57: 	addl	$0x1, 0x1c(%rsp)
    00002b5c: 	movl	0x1c(%rsp), %eax
    00002b60: 	cmpl	%ecx, %eax
    00002b62: 	jl	.Ltmp5028 # Offset: 11106
.Ltmp5025:
    00002b68: 	movq	%r12, %rsi
    00002b6b: 	movq	%r15, %rdi
    00002b6e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11118
    00002b73: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002b7a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002b81: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002b88: 	je	.Ltmp5029 # Offset: 11144
.Ltmp5292:
    00002b8e: 	movq	-0x20(%rax), %rdi
    00002b92: 	movq	%rdi, (%rsp)
    00002b96: 	callq	clock@PLT # Offset: 11158
    00002b9b: 	movq	(%rsp), %rdi
    00002b9f: 	pxor	%xmm0, %xmm0
    00002ba3: 	movq	%rax, end_time(%rip)
    00002baa: 	subq	start_time(%rip), %rax
    00002bb1: 	cvtsi2sd	%rax, %xmm0
    00002bb6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002bbe: 	callq	_Z13record_resultdPKc # Offset: 11198
    00002bc3: 	movq	0xa0(%rsp), %rdi
    00002bcb: 	cmpq	%r13, %rdi
    00002bce: 	je	.Ltmp5030 # Offset: 11214
    00002bd0: 	movq	0xb0(%rsp), %rax
    00002bd8: 	leaq	0x1(%rax), %rsi
    00002bdc: 	callq	_ZdlPvm@PLT # Offset: 11228
.Ltmp5030:
    00002be1: 	leaq	DATAat0x57587(%rip), %rdx
    00002be8: 	movq	%r14, %rsi
    00002beb: 	movq	%r12, %rdi
    00002bee: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11246
    00002bf3: 	callq	clock@PLT # Offset: 11251
    00002bf8: 	movl	iterations(%rip), %ecx
    00002bfe: 	movq	%rax, start_time(%rip)
    00002c05: 	testl	%ecx, %ecx
    00002c07: 	jle	.Ltmp5031 # Offset: 11271
    00002c0d: 	movdqa	DATAat0x57f10(%rip), %xmm7
    00002c15: 	movl	$0x0, 0x1c(%rsp)
    00002c1d: 	movaps	%xmm7, (%rsp)
    00002c21: 	nopl	(%rax) # Size: 7
.Ltmp5034:
    00002c28: 	movq	%rbp, %rax
    00002c2b: 	pxor	%xmm0, %xmm0
    00002c2f: 	nop # Size: 1
.Ltmp5032:
    00002c30: 	movdqa	(%rsp), %xmm1
    00002c35: 	pand	(%rax), %xmm1
    00002c39: 	addq	$0x10, %rax
    00002c3d: 	paddw	%xmm1, %xmm0
    00002c41: 	cmpq	%rbx, %rax
    00002c44: 	jne	.Ltmp5032 # Offset: 11332
    00002c46: 	movdqa	%xmm0, %xmm1
    00002c4a: 	cvttsd2si	init_value(%rip), %eax
    00002c52: 	psrldq	$0x8, %xmm1
    00002c57: 	paddw	%xmm1, %xmm0
    00002c5b: 	movdqa	%xmm0, %xmm1
    00002c5f: 	psrldq	$0x4, %xmm1
    00002c64: 	andl	$0x1, %eax
    00002c67: 	paddw	%xmm1, %xmm0
    00002c6b: 	negl	%eax
    00002c6d: 	movdqa	%xmm0, %xmm1
    00002c71: 	andw	$0x1f40, %ax
    00002c75: 	psrldq	$0x2, %xmm1
    00002c7a: 	paddw	%xmm1, %xmm0
    00002c7e: 	pextrw	$0x0, %xmm0, %edx
    00002c83: 	cmpw	%dx, %ax
    00002c86: 	je	.Ltmp5033 # Offset: 11398
    00002c88: 	movl	current_test(%rip), %edx
    00002c8e: 	leaq	DATAat0x571d0(%rip), %rsi
    00002c95: 	movl	$0x1, %edi
    00002c9a: 	xorl	%eax, %eax
    00002c9c: 	callq	__printf_chk@PLT # Offset: 11420
    00002ca1: 	movl	iterations(%rip), %ecx
.Ltmp5033:
    00002ca7: 	addl	$0x1, 0x1c(%rsp)
    00002cac: 	movl	0x1c(%rsp), %eax
    00002cb0: 	cmpl	%ecx, %eax
    00002cb2: 	jl	.Ltmp5034 # Offset: 11442
.Ltmp5031:
    00002cb8: 	movq	%r12, %rsi
    00002cbb: 	movq	%r15, %rdi
    00002cbe: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11454
    00002cc3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002cca: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002cd1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002cd8: 	je	.Ltmp5035 # Offset: 11480
.Ltmp5291:
    00002cde: 	movq	-0x20(%rax), %rdi
    00002ce2: 	movq	%rdi, (%rsp)
    00002ce6: 	callq	clock@PLT # Offset: 11494
    00002ceb: 	movq	(%rsp), %rdi
    00002cef: 	pxor	%xmm0, %xmm0
    00002cf3: 	movq	%rax, end_time(%rip)
    00002cfa: 	subq	start_time(%rip), %rax
    00002d01: 	cvtsi2sd	%rax, %xmm0
    00002d06: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002d0e: 	callq	_Z13record_resultdPKc # Offset: 11534
    00002d13: 	movq	0xa0(%rsp), %rdi
    00002d1b: 	cmpq	%r13, %rdi
    00002d1e: 	je	.Ltmp5036 # Offset: 11550
    00002d20: 	movq	0xb0(%rsp), %rax
    00002d28: 	leaq	0x1(%rax), %rsi
    00002d2c: 	callq	_ZdlPvm@PLT # Offset: 11564
.Ltmp5036:
    00002d31: 	leaq	DATAat0x5759e(%rip), %rdx
    00002d38: 	movq	%r14, %rsi
    00002d3b: 	movq	%r12, %rdi
    00002d3e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11582
    00002d43: 	movq	%r12, %rcx
    00002d46: 	movl	$0x2, %edx
    00002d4b: 	movl	$0x1f40, %esi
    00002d50: 	movq	%rbp, %rdi
    00002d53: 	callq	_Z14test_variable1It25custom_remainder_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11603
    00002d58: 	movq	0xa0(%rsp), %rdi
    00002d60: 	cmpq	%r13, %rdi
    00002d63: 	je	.Ltmp5037 # Offset: 11619
    00002d65: 	movq	0xb0(%rsp), %rax
    00002d6d: 	leaq	0x1(%rax), %rsi
    00002d71: 	callq	_ZdlPvm@PLT # Offset: 11633
.Ltmp5037:
    00002d76: 	leaq	DATAat0x575b7(%rip), %rdx
    00002d7d: 	movq	%r14, %rsi
    00002d80: 	movq	%r12, %rdi
    00002d83: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11651
    00002d88: 	callq	clock@PLT # Offset: 11656
    00002d8d: 	movl	iterations(%rip), %ecx
    00002d93: 	movq	%rax, start_time(%rip)
    00002d9a: 	testl	%ecx, %ecx
    00002d9c: 	jle	.Ltmp5038 # Offset: 11676
    00002da2: 	movdqa	DATAat0x57f10(%rip), %xmm3
    00002daa: 	movl	$0x0, 0x1c(%rsp)
    00002db2: 	movaps	%xmm3, (%rsp)
    00002db6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp5041:
    00002dc0: 	movq	%rbp, %rax
    00002dc3: 	pxor	%xmm0, %xmm0
    00002dc7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5039:
    00002dd0: 	movdqa	(%rsp), %xmm1
    00002dd5: 	pand	(%rax), %xmm1
    00002dd9: 	addq	$0x10, %rax
    00002ddd: 	paddw	%xmm1, %xmm0
    00002de1: 	cmpq	%rax, %rbx
    00002de4: 	jne	.Ltmp5039 # Offset: 11748
    00002de6: 	movdqa	%xmm0, %xmm1
    00002dea: 	cvttsd2si	init_value(%rip), %eax
    00002df2: 	psrldq	$0x8, %xmm1
    00002df7: 	paddw	%xmm1, %xmm0
    00002dfb: 	movdqa	%xmm0, %xmm1
    00002dff: 	psrldq	$0x4, %xmm1
    00002e04: 	andl	$0x1, %eax
    00002e07: 	paddw	%xmm1, %xmm0
    00002e0b: 	negl	%eax
    00002e0d: 	movdqa	%xmm0, %xmm1
    00002e11: 	andw	$0x1f40, %ax
    00002e15: 	psrldq	$0x2, %xmm1
    00002e1a: 	paddw	%xmm1, %xmm0
    00002e1e: 	pextrw	$0x0, %xmm0, %edx
    00002e23: 	cmpw	%dx, %ax
    00002e26: 	je	.Ltmp5040 # Offset: 11814
    00002e28: 	movl	current_test(%rip), %edx
    00002e2e: 	leaq	DATAat0x571d0(%rip), %rsi
    00002e35: 	movl	$0x1, %edi
    00002e3a: 	xorl	%eax, %eax
    00002e3c: 	callq	__printf_chk@PLT # Offset: 11836
    00002e41: 	movl	iterations(%rip), %ecx
.Ltmp5040:
    00002e47: 	addl	$0x1, 0x1c(%rsp)
    00002e4c: 	movl	0x1c(%rsp), %eax
    00002e50: 	cmpl	%ecx, %eax
    00002e52: 	jl	.Ltmp5041 # Offset: 11858
.Ltmp5038:
    00002e58: 	movq	%r12, %rsi
    00002e5b: 	movq	%r15, %rdi
    00002e5e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11870
    00002e63: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002e6a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002e71: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002e78: 	je	.Ltmp5042 # Offset: 11896
.Ltmp5290:
    00002e7e: 	movq	-0x20(%rax), %rdi
    00002e82: 	movq	%rdi, (%rsp)
    00002e86: 	callq	clock@PLT # Offset: 11910
    00002e8b: 	movq	(%rsp), %rdi
    00002e8f: 	pxor	%xmm0, %xmm0
    00002e93: 	movq	%rax, end_time(%rip)
    00002e9a: 	subq	start_time(%rip), %rax
    00002ea1: 	cvtsi2sd	%rax, %xmm0
    00002ea6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002eae: 	callq	_Z13record_resultdPKc # Offset: 11950
    00002eb3: 	movq	0xa0(%rsp), %rdi
    00002ebb: 	cmpq	%r13, %rdi
    00002ebe: 	je	.Ltmp5043 # Offset: 11966
    00002ec0: 	movq	0xb0(%rsp), %rax
    00002ec8: 	leaq	0x1(%rax), %rsi
    00002ecc: 	callq	_ZdlPvm@PLT # Offset: 11980
.Ltmp5043:
    00002ed1: 	leaq	DATAat0x575d0(%rip), %rdx
    00002ed8: 	movq	%r14, %rsi
    00002edb: 	movq	%r12, %rdi
    00002ede: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11998
    00002ee3: 	callq	clock@PLT # Offset: 12003
    00002ee8: 	movl	iterations(%rip), %ecx
    00002eee: 	movq	%rax, start_time(%rip)
    00002ef5: 	testl	%ecx, %ecx
    00002ef7: 	jle	.Ltmp5044 # Offset: 12023
    00002efd: 	movdqa	DATAat0x57e90(%rip), %xmm4
    00002f05: 	movl	$0x0, 0x1c(%rsp)
    00002f0d: 	movaps	%xmm4, (%rsp)
    00002f11: 	nopl	(%rax) # Size: 7
.Ltmp5047:
    00002f18: 	movq	%rbp, %rax
    00002f1b: 	pxor	%xmm0, %xmm0
    00002f1f: 	nop # Size: 1
.Ltmp5045:
    00002f20: 	movdqa	(%rsp), %xmm1
    00002f25: 	pand	(%rax), %xmm1
    00002f29: 	addq	$0x10, %rax
    00002f2d: 	paddw	%xmm1, %xmm0
    00002f31: 	cmpq	%rbx, %rax
    00002f34: 	jne	.Ltmp5045 # Offset: 12084
    00002f36: 	movdqa	%xmm0, %xmm1
    00002f3a: 	cvttsd2si	init_value(%rip), %eax
    00002f42: 	psrldq	$0x8, %xmm1
    00002f47: 	paddw	%xmm1, %xmm0
    00002f4b: 	movdqa	%xmm0, %xmm1
    00002f4f: 	psrldq	$0x4, %xmm1
    00002f54: 	andl	$0x3, %eax
    00002f57: 	imulw	$0x1f40, %ax, %ax
    00002f5c: 	paddw	%xmm1, %xmm0
    00002f60: 	movdqa	%xmm0, %xmm1
    00002f64: 	psrldq	$0x2, %xmm1
    00002f69: 	paddw	%xmm1, %xmm0
    00002f6d: 	pextrw	$0x0, %xmm0, %edx
    00002f72: 	cmpw	%dx, %ax
    00002f75: 	je	.Ltmp5046 # Offset: 12149
    00002f77: 	movl	current_test(%rip), %edx
    00002f7d: 	leaq	DATAat0x571d0(%rip), %rsi
    00002f84: 	movl	$0x1, %edi
    00002f89: 	xorl	%eax, %eax
    00002f8b: 	callq	__printf_chk@PLT # Offset: 12171
    00002f90: 	movl	iterations(%rip), %ecx
.Ltmp5046:
    00002f96: 	addl	$0x1, 0x1c(%rsp)
    00002f9b: 	movl	0x1c(%rsp), %eax
    00002f9f: 	cmpl	%ecx, %eax
    00002fa1: 	jl	.Ltmp5047 # Offset: 12193
.Ltmp5044:
    00002fa7: 	movq	%r12, %rsi
    00002faa: 	movq	%r15, %rdi
    00002fad: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12205
    00002fb2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002fb9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002fc0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002fc7: 	je	.Ltmp5048 # Offset: 12231
.Ltmp5289:
    00002fcd: 	movq	-0x20(%rax), %rdi
    00002fd1: 	movq	%rdi, (%rsp)
    00002fd5: 	callq	clock@PLT # Offset: 12245
    00002fda: 	movq	(%rsp), %rdi
    00002fde: 	pxor	%xmm0, %xmm0
    00002fe2: 	movq	%rax, end_time(%rip)
    00002fe9: 	subq	start_time(%rip), %rax
    00002ff0: 	cvtsi2sd	%rax, %xmm0
    00002ff5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002ffd: 	callq	_Z13record_resultdPKc # Offset: 12285
    00003002: 	movq	0xa0(%rsp), %rdi
    0000300a: 	cmpq	%r13, %rdi
    0000300d: 	je	.Ltmp5049 # Offset: 12301
    0000300f: 	movq	0xb0(%rsp), %rax
    00003017: 	leaq	0x1(%rax), %rsi
    0000301b: 	callq	_ZdlPvm@PLT # Offset: 12315
.Ltmp5049:
    00003020: 	leaq	DATAat0x575d7(%rip), %rdx
    00003027: 	movq	%r14, %rsi
    0000302a: 	movq	%r12, %rdi
    0000302d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12333
    00003032: 	callq	clock@PLT # Offset: 12338
    00003037: 	movl	iterations(%rip), %ecx
    0000303d: 	movq	%rax, start_time(%rip)
    00003044: 	testl	%ecx, %ecx
    00003046: 	jle	.Ltmp5050 # Offset: 12358
    0000304c: 	movdqa	DATAat0x57e90(%rip), %xmm5
    00003054: 	movl	$0x0, 0x1c(%rsp)
    0000305c: 	movaps	%xmm5, (%rsp)
.Ltmp5053:
    00003060: 	movq	%rbp, %rax
    00003063: 	pxor	%xmm0, %xmm0
    00003067: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5051:
    00003070: 	movdqa	(%rsp), %xmm1
    00003075: 	pand	(%rax), %xmm1
    00003079: 	addq	$0x10, %rax
    0000307d: 	paddw	%xmm1, %xmm0
    00003081: 	cmpq	%rax, %rbx
    00003084: 	jne	.Ltmp5051 # Offset: 12420
    00003086: 	movdqa	%xmm0, %xmm1
    0000308a: 	cvttsd2si	init_value(%rip), %eax
    00003092: 	psrldq	$0x8, %xmm1
    00003097: 	paddw	%xmm1, %xmm0
    0000309b: 	movdqa	%xmm0, %xmm1
    0000309f: 	psrldq	$0x4, %xmm1
    000030a4: 	andl	$0x3, %eax
    000030a7: 	imulw	$0x1f40, %ax, %ax
    000030ac: 	paddw	%xmm1, %xmm0
    000030b0: 	movdqa	%xmm0, %xmm1
    000030b4: 	psrldq	$0x2, %xmm1
    000030b9: 	paddw	%xmm1, %xmm0
    000030bd: 	pextrw	$0x0, %xmm0, %edx
    000030c2: 	cmpw	%dx, %ax
    000030c5: 	je	.Ltmp5052 # Offset: 12485
    000030c7: 	movl	current_test(%rip), %edx
    000030cd: 	leaq	DATAat0x571d0(%rip), %rsi
    000030d4: 	movl	$0x1, %edi
    000030d9: 	xorl	%eax, %eax
    000030db: 	callq	__printf_chk@PLT # Offset: 12507
    000030e0: 	movl	iterations(%rip), %ecx
.Ltmp5052:
    000030e6: 	addl	$0x1, 0x1c(%rsp)
    000030eb: 	movl	0x1c(%rsp), %eax
    000030ef: 	cmpl	%ecx, %eax
    000030f1: 	jl	.Ltmp5053 # Offset: 12529
.Ltmp5050:
    000030f7: 	movq	%r12, %rsi
    000030fa: 	movq	%r15, %rdi
    000030fd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12541
    00003102: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003109: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003110: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003117: 	je	.Ltmp5054 # Offset: 12567
.Ltmp5288:
    0000311d: 	movq	-0x20(%rax), %rdi
    00003121: 	movq	%rdi, (%rsp)
    00003125: 	callq	clock@PLT # Offset: 12581
    0000312a: 	movq	(%rsp), %rdi
    0000312e: 	pxor	%xmm0, %xmm0
    00003132: 	movq	%rax, end_time(%rip)
    00003139: 	subq	start_time(%rip), %rax
    00003140: 	cvtsi2sd	%rax, %xmm0
    00003145: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000314d: 	callq	_Z13record_resultdPKc # Offset: 12621
    00003152: 	movq	0xa0(%rsp), %rdi
    0000315a: 	cmpq	%r13, %rdi
    0000315d: 	je	.Ltmp5055 # Offset: 12637
    0000315f: 	movq	0xb0(%rsp), %rax
    00003167: 	leaq	0x1(%rax), %rsi
    0000316b: 	callq	_ZdlPvm@PLT # Offset: 12651
.Ltmp5055:
    00003170: 	leaq	DATAat0x575e8(%rip), %rdx
    00003177: 	movq	%r14, %rsi
    0000317a: 	movq	%r12, %rdi
    0000317d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12669
    00003182: 	callq	clock@PLT # Offset: 12674
    00003187: 	movl	iterations(%rip), %ecx
    0000318d: 	movq	%rax, start_time(%rip)
    00003194: 	testl	%ecx, %ecx
    00003196: 	jle	.Ltmp5056 # Offset: 12694
    0000319c: 	movdqa	DATAat0x57e90(%rip), %xmm6
    000031a4: 	movl	$0x0, 0x1c(%rsp)
    000031ac: 	movaps	%xmm6, (%rsp)
.Ltmp5059:
    000031b0: 	movq	%rbp, %rax
    000031b3: 	pxor	%xmm0, %xmm0
    000031b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5057:
    000031c0: 	movdqa	(%rsp), %xmm1
    000031c5: 	pand	(%rax), %xmm1
    000031c9: 	addq	$0x10, %rax
    000031cd: 	paddw	%xmm1, %xmm0
    000031d1: 	cmpq	%rbx, %rax
    000031d4: 	jne	.Ltmp5057 # Offset: 12756
    000031d6: 	movdqa	%xmm0, %xmm1
    000031da: 	cvttsd2si	init_value(%rip), %eax
    000031e2: 	psrldq	$0x8, %xmm1
    000031e7: 	paddw	%xmm1, %xmm0
    000031eb: 	movdqa	%xmm0, %xmm1
    000031ef: 	psrldq	$0x4, %xmm1
    000031f4: 	andl	$0x3, %eax
    000031f7: 	imulw	$0x1f40, %ax, %ax
    000031fc: 	paddw	%xmm1, %xmm0
    00003200: 	movdqa	%xmm0, %xmm1
    00003204: 	psrldq	$0x2, %xmm1
    00003209: 	paddw	%xmm1, %xmm0
    0000320d: 	pextrw	$0x0, %xmm0, %edx
    00003212: 	cmpw	%dx, %ax
    00003215: 	je	.Ltmp5058 # Offset: 12821
    00003217: 	movl	current_test(%rip), %edx
    0000321d: 	leaq	DATAat0x571d0(%rip), %rsi
    00003224: 	movl	$0x1, %edi
    00003229: 	xorl	%eax, %eax
    0000322b: 	callq	__printf_chk@PLT # Offset: 12843
    00003230: 	movl	iterations(%rip), %ecx
.Ltmp5058:
    00003236: 	addl	$0x1, 0x1c(%rsp)
    0000323b: 	movl	0x1c(%rsp), %eax
    0000323f: 	cmpl	%ecx, %eax
    00003241: 	jl	.Ltmp5059 # Offset: 12865
.Ltmp5056:
    00003247: 	movq	%r12, %rsi
    0000324a: 	movq	%r15, %rdi
    0000324d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12877
    00003252: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003259: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003260: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003267: 	je	.Ltmp5060 # Offset: 12903
.Ltmp5287:
    0000326d: 	movq	-0x20(%rax), %rdi
    00003271: 	movq	%rdi, (%rsp)
    00003275: 	callq	clock@PLT # Offset: 12917
    0000327a: 	movq	(%rsp), %rdi
    0000327e: 	pxor	%xmm0, %xmm0
    00003282: 	movq	%rax, end_time(%rip)
    00003289: 	subq	start_time(%rip), %rax
    00003290: 	cvtsi2sd	%rax, %xmm0
    00003295: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000329d: 	callq	_Z13record_resultdPKc # Offset: 12957
    000032a2: 	movq	0xa0(%rsp), %rdi
    000032aa: 	cmpq	%r13, %rdi
    000032ad: 	je	.Ltmp5061 # Offset: 12973
    000032af: 	movq	0xb0(%rsp), %rax
    000032b7: 	leaq	0x1(%rax), %rsi
    000032bb: 	callq	_ZdlPvm@PLT # Offset: 12987
.Ltmp5061:
    000032c0: 	leaq	DATAat0x575fa(%rip), %rdx
    000032c7: 	movq	%r14, %rsi
    000032ca: 	movq	%r12, %rdi
    000032cd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13005
    000032d2: 	callq	clock@PLT # Offset: 13010
    000032d7: 	movl	iterations(%rip), %ecx
    000032dd: 	movq	%rax, start_time(%rip)
    000032e4: 	testl	%ecx, %ecx
    000032e6: 	jle	.Ltmp5062 # Offset: 13030
    000032ec: 	movdqa	DATAat0x57e90(%rip), %xmm7
    000032f4: 	movl	$0x0, 0x1c(%rsp)
    000032fc: 	movaps	%xmm7, (%rsp)
.Ltmp5065:
    00003300: 	movq	%rbp, %rax
    00003303: 	pxor	%xmm0, %xmm0
    00003307: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5063:
    00003310: 	movdqa	(%rsp), %xmm1
    00003315: 	pand	(%rax), %xmm1
    00003319: 	addq	$0x10, %rax
    0000331d: 	paddw	%xmm1, %xmm0
    00003321: 	cmpq	%rax, %rbx
    00003324: 	jne	.Ltmp5063 # Offset: 13092
    00003326: 	movdqa	%xmm0, %xmm1
    0000332a: 	cvttsd2si	init_value(%rip), %eax
    00003332: 	psrldq	$0x8, %xmm1
    00003337: 	paddw	%xmm1, %xmm0
    0000333b: 	movdqa	%xmm0, %xmm1
    0000333f: 	psrldq	$0x4, %xmm1
    00003344: 	andl	$0x3, %eax
    00003347: 	imulw	$0x1f40, %ax, %ax
    0000334c: 	paddw	%xmm1, %xmm0
    00003350: 	movdqa	%xmm0, %xmm1
    00003354: 	psrldq	$0x2, %xmm1
    00003359: 	paddw	%xmm1, %xmm0
    0000335d: 	pextrw	$0x0, %xmm0, %edx
    00003362: 	cmpw	%dx, %ax
    00003365: 	je	.Ltmp5064 # Offset: 13157
    00003367: 	movl	current_test(%rip), %edx
    0000336d: 	leaq	DATAat0x571d0(%rip), %rsi
    00003374: 	movl	$0x1, %edi
    00003379: 	xorl	%eax, %eax
    0000337b: 	callq	__printf_chk@PLT # Offset: 13179
    00003380: 	movl	iterations(%rip), %ecx
.Ltmp5064:
    00003386: 	addl	$0x1, 0x1c(%rsp)
    0000338b: 	movl	0x1c(%rsp), %eax
    0000338f: 	cmpl	%ecx, %eax
    00003391: 	jl	.Ltmp5065 # Offset: 13201
.Ltmp5062:
    00003397: 	movq	%r12, %rsi
    0000339a: 	movq	%r15, %rdi
    0000339d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13213
    000033a2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000033a9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000033b0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000033b7: 	je	.Ltmp5066 # Offset: 13239
.Ltmp5286:
    000033bd: 	movq	-0x20(%rax), %rdi
    000033c1: 	movq	%rdi, (%rsp)
    000033c5: 	callq	clock@PLT # Offset: 13253
    000033ca: 	movq	(%rsp), %rdi
    000033ce: 	pxor	%xmm0, %xmm0
    000033d2: 	movq	%rax, end_time(%rip)
    000033d9: 	subq	start_time(%rip), %rax
    000033e0: 	cvtsi2sd	%rax, %xmm0
    000033e5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000033ed: 	callq	_Z13record_resultdPKc # Offset: 13293
    000033f2: 	movq	0xa0(%rsp), %rdi
    000033fa: 	cmpq	%r13, %rdi
    000033fd: 	je	.Ltmp5067 # Offset: 13309
    000033ff: 	movq	0xb0(%rsp), %rax
    00003407: 	leaq	0x1(%rax), %rsi
    0000340b: 	callq	_ZdlPvm@PLT # Offset: 13323
.Ltmp5067:
    00003410: 	leaq	DATAat0x57611(%rip), %rdx
    00003417: 	movq	%r14, %rsi
    0000341a: 	movq	%r12, %rdi
    0000341d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13341
    00003422: 	movq	%r12, %rcx
    00003425: 	movl	$0x4, %edx
    0000342a: 	movl	$0x1f40, %esi
    0000342f: 	movq	%rbp, %rdi
    00003432: 	callq	_Z14test_variable1It25custom_remainder_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 13362
    00003437: 	movq	0xa0(%rsp), %rdi
    0000343f: 	cmpq	%r13, %rdi
    00003442: 	je	.Ltmp5068 # Offset: 13378
    00003444: 	movq	0xb0(%rsp), %rax
    0000344c: 	leaq	0x1(%rax), %rsi
    00003450: 	callq	_ZdlPvm@PLT # Offset: 13392
.Ltmp5068:
    00003455: 	leaq	DATAat0x5762a(%rip), %rdx
    0000345c: 	movq	%r14, %rsi
    0000345f: 	movq	%r12, %rdi
    00003462: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13410
    00003467: 	callq	clock@PLT # Offset: 13415
    0000346c: 	movl	iterations(%rip), %ecx
    00003472: 	movq	%rax, start_time(%rip)
    00003479: 	testl	%ecx, %ecx
    0000347b: 	jle	.Ltmp5069 # Offset: 13435
    00003481: 	movdqa	DATAat0x57e90(%rip), %xmm3
    00003489: 	movl	$0x0, 0x1c(%rsp)
    00003491: 	movaps	%xmm3, (%rsp)
    00003495: 	nopl	(%rax) # Size: 3
.Ltmp5072:
    00003498: 	movq	%rbp, %rax
    0000349b: 	pxor	%xmm0, %xmm0
    0000349f: 	nop # Size: 1
.Ltmp5070:
    000034a0: 	movdqa	(%rsp), %xmm1
    000034a5: 	pand	(%rax), %xmm1
    000034a9: 	addq	$0x10, %rax
    000034ad: 	paddw	%xmm1, %xmm0
    000034b1: 	cmpq	%rbx, %rax
    000034b4: 	jne	.Ltmp5070 # Offset: 13492
    000034b6: 	movdqa	%xmm0, %xmm1
    000034ba: 	cvttsd2si	init_value(%rip), %eax
    000034c2: 	psrldq	$0x8, %xmm1
    000034c7: 	paddw	%xmm1, %xmm0
    000034cb: 	movdqa	%xmm0, %xmm1
    000034cf: 	psrldq	$0x4, %xmm1
    000034d4: 	andl	$0x3, %eax
    000034d7: 	imulw	$0x1f40, %ax, %ax
    000034dc: 	paddw	%xmm1, %xmm0
    000034e0: 	movdqa	%xmm0, %xmm1
    000034e4: 	psrldq	$0x2, %xmm1
    000034e9: 	paddw	%xmm1, %xmm0
    000034ed: 	pextrw	$0x0, %xmm0, %edx
    000034f2: 	cmpw	%dx, %ax
    000034f5: 	je	.Ltmp5071 # Offset: 13557
    000034f7: 	movl	current_test(%rip), %edx
    000034fd: 	leaq	DATAat0x571d0(%rip), %rsi
    00003504: 	movl	$0x1, %edi
    00003509: 	xorl	%eax, %eax
    0000350b: 	callq	__printf_chk@PLT # Offset: 13579
    00003510: 	movl	iterations(%rip), %ecx
.Ltmp5071:
    00003516: 	addl	$0x1, 0x1c(%rsp)
    0000351b: 	movl	0x1c(%rsp), %eax
    0000351f: 	cmpl	%ecx, %eax
    00003521: 	jl	.Ltmp5072 # Offset: 13601
.Ltmp5069:
    00003527: 	movq	%r12, %rsi
    0000352a: 	movq	%r15, %rdi
    0000352d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13613
    00003532: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003539: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003540: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003547: 	je	.Ltmp5073 # Offset: 13639
.Ltmp5285:
    0000354d: 	movq	-0x20(%rax), %rdi
    00003551: 	movq	%rdi, (%rsp)
    00003555: 	callq	clock@PLT # Offset: 13653
    0000355a: 	movq	(%rsp), %rdi
    0000355e: 	pxor	%xmm0, %xmm0
    00003562: 	movq	%rax, end_time(%rip)
    00003569: 	subq	start_time(%rip), %rax
    00003570: 	cvtsi2sd	%rax, %xmm0
    00003575: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000357d: 	callq	_Z13record_resultdPKc # Offset: 13693
    00003582: 	movq	0xa0(%rsp), %rdi
    0000358a: 	cmpq	%r13, %rdi
    0000358d: 	je	.Ltmp5074 # Offset: 13709
    0000358f: 	movq	0xb0(%rsp), %rax
    00003597: 	leaq	0x1(%rax), %rsi
    0000359b: 	callq	_ZdlPvm@PLT # Offset: 13723
.Ltmp5074:
    000035a0: 	leaq	DATAat0x57643(%rip), %rdx
    000035a7: 	movq	%r14, %rsi
    000035aa: 	movq	%r12, %rdi
    000035ad: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13741
    000035b2: 	movq	%r12, %rdx
    000035b5: 	movl	$0x1f40, %esi
    000035ba: 	movq	%rbp, %rdi
    000035bd: 	callq	_Z13test_constantIt12and_constantItLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 13757
    000035c2: 	movq	0xa0(%rsp), %rdi
    000035ca: 	cmpq	%r13, %rdi
    000035cd: 	je	.Ltmp5075 # Offset: 13773
    000035cf: 	movq	0xb0(%rsp), %rax
    000035d7: 	leaq	0x1(%rax), %rsi
    000035db: 	callq	_ZdlPvm@PLT # Offset: 13787
.Ltmp5075:
    000035e0: 	leaq	DATAat0x5764a(%rip), %rdx
    000035e7: 	movq	%r14, %rsi
    000035ea: 	movq	%r12, %rdi
    000035ed: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13805
    000035f2: 	callq	clock@PLT # Offset: 13810
    000035f7: 	movl	iterations(%rip), %ecx
    000035fd: 	movq	%rax, start_time(%rip)
    00003604: 	testl	%ecx, %ecx
    00003606: 	jle	.Ltmp5076 # Offset: 13830
    0000360c: 	movdqa	DATAat0x57cb0(%rip), %xmm4
    00003614: 	movl	$0x0, 0x1c(%rsp)
    0000361c: 	movaps	%xmm4, (%rsp)
.Ltmp5079:
    00003620: 	movq	%rbp, %rax
    00003623: 	pxor	%xmm0, %xmm0
    00003627: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5077:
    00003630: 	movdqa	(%rsp), %xmm1
    00003635: 	pand	(%rax), %xmm1
    00003639: 	addq	$0x10, %rax
    0000363d: 	paddw	%xmm1, %xmm0
    00003641: 	cmpq	%rax, %rbx
    00003644: 	jne	.Ltmp5077 # Offset: 13892
    00003646: 	movdqa	%xmm0, %xmm1
    0000364a: 	cvttsd2si	init_value(%rip), %eax
    00003652: 	psrldq	$0x8, %xmm1
    00003657: 	paddw	%xmm1, %xmm0
    0000365b: 	movdqa	%xmm0, %xmm1
    0000365f: 	psrldq	$0x4, %xmm1
    00003664: 	andl	$0x7, %eax
    00003667: 	imulw	$0x1f40, %ax, %ax
    0000366c: 	paddw	%xmm1, %xmm0
    00003670: 	movdqa	%xmm0, %xmm1
    00003674: 	psrldq	$0x2, %xmm1
    00003679: 	paddw	%xmm1, %xmm0
    0000367d: 	pextrw	$0x0, %xmm0, %edx
    00003682: 	cmpw	%dx, %ax
    00003685: 	je	.Ltmp5078 # Offset: 13957
    00003687: 	movl	current_test(%rip), %edx
    0000368d: 	leaq	DATAat0x571d0(%rip), %rsi
    00003694: 	movl	$0x1, %edi
    00003699: 	xorl	%eax, %eax
    0000369b: 	callq	__printf_chk@PLT # Offset: 13979
    000036a0: 	movl	iterations(%rip), %ecx
.Ltmp5078:
    000036a6: 	addl	$0x1, 0x1c(%rsp)
    000036ab: 	movl	0x1c(%rsp), %eax
    000036af: 	cmpl	%ecx, %eax
    000036b1: 	jl	.Ltmp5079 # Offset: 14001
.Ltmp5076:
    000036b7: 	movq	%r12, %rsi
    000036ba: 	movq	%r15, %rdi
    000036bd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14013
    000036c2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000036c9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000036d0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000036d7: 	je	.Ltmp5080 # Offset: 14039
.Ltmp5284:
    000036dd: 	movq	-0x20(%rax), %rdi
    000036e1: 	movq	%rdi, (%rsp)
    000036e5: 	callq	clock@PLT # Offset: 14053
    000036ea: 	movq	(%rsp), %rdi
    000036ee: 	pxor	%xmm0, %xmm0
    000036f2: 	movq	%rax, end_time(%rip)
    000036f9: 	subq	start_time(%rip), %rax
    00003700: 	cvtsi2sd	%rax, %xmm0
    00003705: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000370d: 	callq	_Z13record_resultdPKc # Offset: 14093
    00003712: 	movq	0xa0(%rsp), %rdi
    0000371a: 	cmpq	%r13, %rdi
    0000371d: 	je	.Ltmp5081 # Offset: 14109
    0000371f: 	movq	0xb0(%rsp), %rax
    00003727: 	leaq	0x1(%rax), %rsi
    0000372b: 	callq	_ZdlPvm@PLT # Offset: 14123
.Ltmp5081:
    00003730: 	leaq	DATAat0x5765b(%rip), %rdx
    00003737: 	movq	%r14, %rsi
    0000373a: 	movq	%r12, %rdi
    0000373d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14141
    00003742: 	callq	clock@PLT # Offset: 14146
    00003747: 	movl	iterations(%rip), %ecx
    0000374d: 	movq	%rax, start_time(%rip)
    00003754: 	testl	%ecx, %ecx
    00003756: 	jle	.Ltmp5082 # Offset: 14166
    0000375c: 	movdqa	DATAat0x57cb0(%rip), %xmm5
    00003764: 	movl	$0x0, 0x1c(%rsp)
    0000376c: 	movaps	%xmm5, (%rsp)
.Ltmp5085:
    00003770: 	movq	%rbp, %rax
    00003773: 	pxor	%xmm0, %xmm0
    00003777: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5083:
    00003780: 	movdqa	(%rsp), %xmm1
    00003785: 	pand	(%rax), %xmm1
    00003789: 	addq	$0x10, %rax
    0000378d: 	paddw	%xmm1, %xmm0
    00003791: 	cmpq	%rbx, %rax
    00003794: 	jne	.Ltmp5083 # Offset: 14228
    00003796: 	movdqa	%xmm0, %xmm1
    0000379a: 	cvttsd2si	init_value(%rip), %eax
    000037a2: 	psrldq	$0x8, %xmm1
    000037a7: 	paddw	%xmm1, %xmm0
    000037ab: 	movdqa	%xmm0, %xmm1
    000037af: 	psrldq	$0x4, %xmm1
    000037b4: 	andl	$0x7, %eax
    000037b7: 	imulw	$0x1f40, %ax, %ax
    000037bc: 	paddw	%xmm1, %xmm0
    000037c0: 	movdqa	%xmm0, %xmm1
    000037c4: 	psrldq	$0x2, %xmm1
    000037c9: 	paddw	%xmm1, %xmm0
    000037cd: 	pextrw	$0x0, %xmm0, %edx
    000037d2: 	cmpw	%dx, %ax
    000037d5: 	je	.Ltmp5084 # Offset: 14293
    000037d7: 	movl	current_test(%rip), %edx
    000037dd: 	leaq	DATAat0x571d0(%rip), %rsi
    000037e4: 	movl	$0x1, %edi
    000037e9: 	xorl	%eax, %eax
    000037eb: 	callq	__printf_chk@PLT # Offset: 14315
    000037f0: 	movl	iterations(%rip), %ecx
.Ltmp5084:
    000037f6: 	addl	$0x1, 0x1c(%rsp)
    000037fb: 	movl	0x1c(%rsp), %eax
    000037ff: 	cmpl	%ecx, %eax
    00003801: 	jl	.Ltmp5085 # Offset: 14337
.Ltmp5082:
    00003807: 	movq	%r12, %rsi
    0000380a: 	movq	%r15, %rdi
    0000380d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14349
    00003812: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003819: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003820: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003827: 	je	.Ltmp5086 # Offset: 14375
.Ltmp5283:
    0000382d: 	movq	-0x20(%rax), %rdi
    00003831: 	movq	%rdi, (%rsp)
    00003835: 	callq	clock@PLT # Offset: 14389
    0000383a: 	movq	(%rsp), %rdi
    0000383e: 	pxor	%xmm0, %xmm0
    00003842: 	movq	%rax, end_time(%rip)
    00003849: 	subq	start_time(%rip), %rax
    00003850: 	cvtsi2sd	%rax, %xmm0
    00003855: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000385d: 	callq	_Z13record_resultdPKc # Offset: 14429
    00003862: 	movq	0xa0(%rsp), %rdi
    0000386a: 	cmpq	%r13, %rdi
    0000386d: 	je	.Ltmp5087 # Offset: 14445
    0000386f: 	movq	0xb0(%rsp), %rax
    00003877: 	leaq	0x1(%rax), %rsi
    0000387b: 	callq	_ZdlPvm@PLT # Offset: 14459
.Ltmp5087:
    00003880: 	leaq	DATAat0x5766d(%rip), %rdx
    00003887: 	movq	%r14, %rsi
    0000388a: 	movq	%r12, %rdi
    0000388d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14477
    00003892: 	callq	clock@PLT # Offset: 14482
    00003897: 	movl	iterations(%rip), %ecx
    0000389d: 	movq	%rax, start_time(%rip)
    000038a4: 	testl	%ecx, %ecx
    000038a6: 	jle	.Ltmp5088 # Offset: 14502
    000038ac: 	movdqa	DATAat0x57cb0(%rip), %xmm6
    000038b4: 	movl	$0x0, 0x1c(%rsp)
    000038bc: 	movaps	%xmm6, (%rsp)
.Ltmp5091:
    000038c0: 	movq	%rbp, %rax
    000038c3: 	pxor	%xmm0, %xmm0
    000038c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5089:
    000038d0: 	movdqa	(%rsp), %xmm1
    000038d5: 	pand	(%rax), %xmm1
    000038d9: 	addq	$0x10, %rax
    000038dd: 	paddw	%xmm1, %xmm0
    000038e1: 	cmpq	%rax, %rbx
    000038e4: 	jne	.Ltmp5089 # Offset: 14564
    000038e6: 	movdqa	%xmm0, %xmm1
    000038ea: 	cvttsd2si	init_value(%rip), %eax
    000038f2: 	psrldq	$0x8, %xmm1
    000038f7: 	paddw	%xmm1, %xmm0
    000038fb: 	movdqa	%xmm0, %xmm1
    000038ff: 	psrldq	$0x4, %xmm1
    00003904: 	andl	$0x7, %eax
    00003907: 	imulw	$0x1f40, %ax, %ax
    0000390c: 	paddw	%xmm1, %xmm0
    00003910: 	movdqa	%xmm0, %xmm1
    00003914: 	psrldq	$0x2, %xmm1
    00003919: 	paddw	%xmm1, %xmm0
    0000391d: 	pextrw	$0x0, %xmm0, %edx
    00003922: 	cmpw	%dx, %ax
    00003925: 	je	.Ltmp5090 # Offset: 14629
    00003927: 	movl	current_test(%rip), %edx
    0000392d: 	leaq	DATAat0x571d0(%rip), %rsi
    00003934: 	movl	$0x1, %edi
    00003939: 	xorl	%eax, %eax
    0000393b: 	callq	__printf_chk@PLT # Offset: 14651
    00003940: 	movl	iterations(%rip), %ecx
.Ltmp5090:
    00003946: 	addl	$0x1, 0x1c(%rsp)
    0000394b: 	movl	0x1c(%rsp), %eax
    0000394f: 	cmpl	%ecx, %eax
    00003951: 	jl	.Ltmp5091 # Offset: 14673
.Ltmp5088:
    00003957: 	movq	%r12, %rsi
    0000395a: 	movq	%r15, %rdi
    0000395d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14685
    00003962: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003969: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003970: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003977: 	je	.Ltmp5092 # Offset: 14711
.Ltmp5282:
    0000397d: 	movq	-0x20(%rax), %rdi
    00003981: 	movq	%rdi, (%rsp)
    00003985: 	callq	clock@PLT # Offset: 14725
    0000398a: 	movq	(%rsp), %rdi
    0000398e: 	pxor	%xmm0, %xmm0
    00003992: 	movq	%rax, end_time(%rip)
    00003999: 	subq	start_time(%rip), %rax
    000039a0: 	cvtsi2sd	%rax, %xmm0
    000039a5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000039ad: 	callq	_Z13record_resultdPKc # Offset: 14765
    000039b2: 	movq	0xa0(%rsp), %rdi
    000039ba: 	cmpq	%r13, %rdi
    000039bd: 	je	.Ltmp5093 # Offset: 14781
    000039bf: 	movq	0xb0(%rsp), %rax
    000039c7: 	leaq	0x1(%rax), %rsi
    000039cb: 	callq	_ZdlPvm@PLT # Offset: 14795
.Ltmp5093:
    000039d0: 	leaq	DATAat0x57684(%rip), %rdx
    000039d7: 	movq	%r14, %rsi
    000039da: 	movq	%r12, %rdi
    000039dd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14813
    000039e2: 	movq	%r12, %rcx
    000039e5: 	movl	$0x8, %edx
    000039ea: 	movl	$0x1f40, %esi
    000039ef: 	movq	%rbp, %rdi
    000039f2: 	callq	_Z14test_variable1It25custom_remainder_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 14834
    000039f7: 	movq	0xa0(%rsp), %rdi
    000039ff: 	cmpq	%r13, %rdi
    00003a02: 	je	.Ltmp5094 # Offset: 14850
    00003a04: 	movq	0xb0(%rsp), %rax
    00003a0c: 	leaq	0x1(%rax), %rsi
    00003a10: 	callq	_ZdlPvm@PLT # Offset: 14864
.Ltmp5094:
    00003a15: 	leaq	DATAat0x5769d(%rip), %rdx
    00003a1c: 	movq	%r14, %rsi
    00003a1f: 	movq	%r12, %rdi
    00003a22: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14882
    00003a27: 	callq	clock@PLT # Offset: 14887
    00003a2c: 	movl	iterations(%rip), %ecx
    00003a32: 	movq	%rax, start_time(%rip)
    00003a39: 	testl	%ecx, %ecx
    00003a3b: 	jle	.Ltmp5095 # Offset: 14907
    00003a41: 	movdqa	DATAat0x57cb0(%rip), %xmm7
    00003a49: 	movl	$0x0, 0x1c(%rsp)
    00003a51: 	movaps	%xmm7, (%rsp)
    00003a55: 	nopl	(%rax) # Size: 3
.Ltmp5098:
    00003a58: 	movq	%rbp, %rax
    00003a5b: 	pxor	%xmm0, %xmm0
    00003a5f: 	nop # Size: 1
.Ltmp5096:
    00003a60: 	movdqa	(%rsp), %xmm1
    00003a65: 	pand	(%rax), %xmm1
    00003a69: 	addq	$0x10, %rax
    00003a6d: 	paddw	%xmm1, %xmm0
    00003a71: 	cmpq	%rbx, %rax
    00003a74: 	jne	.Ltmp5096 # Offset: 14964
    00003a76: 	movdqa	%xmm0, %xmm1
    00003a7a: 	cvttsd2si	init_value(%rip), %eax
    00003a82: 	psrldq	$0x8, %xmm1
    00003a87: 	paddw	%xmm1, %xmm0
    00003a8b: 	movdqa	%xmm0, %xmm1
    00003a8f: 	psrldq	$0x4, %xmm1
    00003a94: 	andl	$0x7, %eax
    00003a97: 	imulw	$0x1f40, %ax, %ax
    00003a9c: 	paddw	%xmm1, %xmm0
    00003aa0: 	movdqa	%xmm0, %xmm1
    00003aa4: 	psrldq	$0x2, %xmm1
    00003aa9: 	paddw	%xmm1, %xmm0
    00003aad: 	pextrw	$0x0, %xmm0, %edx
    00003ab2: 	cmpw	%dx, %ax
    00003ab5: 	je	.Ltmp5097 # Offset: 15029
    00003ab7: 	movl	current_test(%rip), %edx
    00003abd: 	leaq	DATAat0x571d0(%rip), %rsi
    00003ac4: 	movl	$0x1, %edi
    00003ac9: 	xorl	%eax, %eax
    00003acb: 	callq	__printf_chk@PLT # Offset: 15051
    00003ad0: 	movl	iterations(%rip), %ecx
.Ltmp5097:
    00003ad6: 	addl	$0x1, 0x1c(%rsp)
    00003adb: 	movl	0x1c(%rsp), %eax
    00003adf: 	cmpl	%ecx, %eax
    00003ae1: 	jl	.Ltmp5098 # Offset: 15073
.Ltmp5095:
    00003ae7: 	movq	%r12, %rsi
    00003aea: 	movq	%r15, %rdi
    00003aed: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15085
    00003af2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003af9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003b00: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003b07: 	je	.Ltmp5099 # Offset: 15111
.Ltmp5281:
    00003b0d: 	movq	-0x20(%rax), %rdi
    00003b11: 	movq	%rdi, (%rsp)
    00003b15: 	callq	clock@PLT # Offset: 15125
    00003b1a: 	movq	(%rsp), %rdi
    00003b1e: 	pxor	%xmm0, %xmm0
    00003b22: 	movq	%rax, end_time(%rip)
    00003b29: 	subq	start_time(%rip), %rax
    00003b30: 	cvtsi2sd	%rax, %xmm0
    00003b35: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003b3d: 	callq	_Z13record_resultdPKc # Offset: 15165
    00003b42: 	movq	0xa0(%rsp), %rdi
    00003b4a: 	cmpq	%r13, %rdi
    00003b4d: 	je	.Ltmp5100 # Offset: 15181
    00003b4f: 	movq	0xb0(%rsp), %rax
    00003b57: 	leaq	0x1(%rax), %rsi
    00003b5b: 	callq	_ZdlPvm@PLT # Offset: 15195
.Ltmp5100:
    00003b60: 	leaq	DATAat0x576b6(%rip), %rdx
    00003b67: 	movq	%r14, %rsi
    00003b6a: 	movq	%r12, %rdi
    00003b6d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15213
    00003b72: 	callq	clock@PLT # Offset: 15218
    00003b77: 	movl	iterations(%rip), %ecx
    00003b7d: 	movq	%rax, start_time(%rip)
    00003b84: 	testl	%ecx, %ecx
    00003b86: 	jle	.Ltmp5101 # Offset: 15238
    00003b8c: 	movdqa	DATAat0x57c90(%rip), %xmm3
    00003b94: 	movl	$0x0, 0x1c(%rsp)
    00003b9c: 	movaps	%xmm3, (%rsp)
.Ltmp5104:
    00003ba0: 	movq	%rbp, %rax
    00003ba3: 	pxor	%xmm0, %xmm0
    00003ba7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5102:
    00003bb0: 	movdqa	(%rsp), %xmm1
    00003bb5: 	pand	(%rax), %xmm1
    00003bb9: 	addq	$0x10, %rax
    00003bbd: 	paddw	%xmm1, %xmm0
    00003bc1: 	cmpq	%rax, %rbx
    00003bc4: 	jne	.Ltmp5102 # Offset: 15300
    00003bc6: 	movdqa	%xmm0, %xmm1
    00003bca: 	cvttsd2si	init_value(%rip), %eax
    00003bd2: 	psrldq	$0x8, %xmm1
    00003bd7: 	paddw	%xmm1, %xmm0
    00003bdb: 	movdqa	%xmm0, %xmm1
    00003bdf: 	psrldq	$0x4, %xmm1
    00003be4: 	andl	$0xf, %eax
    00003be7: 	imulw	$0x1f40, %ax, %ax
    00003bec: 	paddw	%xmm1, %xmm0
    00003bf0: 	movdqa	%xmm0, %xmm1
    00003bf4: 	psrldq	$0x2, %xmm1
    00003bf9: 	paddw	%xmm1, %xmm0
    00003bfd: 	pextrw	$0x0, %xmm0, %edx
    00003c02: 	cmpw	%dx, %ax
    00003c05: 	je	.Ltmp5103 # Offset: 15365
    00003c07: 	movl	current_test(%rip), %edx
    00003c0d: 	leaq	DATAat0x571d0(%rip), %rsi
    00003c14: 	movl	$0x1, %edi
    00003c19: 	xorl	%eax, %eax
    00003c1b: 	callq	__printf_chk@PLT # Offset: 15387
    00003c20: 	movl	iterations(%rip), %ecx
.Ltmp5103:
    00003c26: 	addl	$0x1, 0x1c(%rsp)
    00003c2b: 	movl	0x1c(%rsp), %eax
    00003c2f: 	cmpl	%ecx, %eax
    00003c31: 	jl	.Ltmp5104 # Offset: 15409
.Ltmp5101:
    00003c37: 	movq	%r12, %rsi
    00003c3a: 	movq	%r15, %rdi
    00003c3d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15421
    00003c42: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003c49: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003c50: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003c57: 	je	.Ltmp5105 # Offset: 15447
.Ltmp5280:
    00003c5d: 	movq	-0x20(%rax), %rdi
    00003c61: 	movq	%rdi, (%rsp)
    00003c65: 	callq	clock@PLT # Offset: 15461
    00003c6a: 	movq	(%rsp), %rdi
    00003c6e: 	pxor	%xmm0, %xmm0
    00003c72: 	movq	%rax, end_time(%rip)
    00003c79: 	subq	start_time(%rip), %rax
    00003c80: 	cvtsi2sd	%rax, %xmm0
    00003c85: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003c8d: 	callq	_Z13record_resultdPKc # Offset: 15501
    00003c92: 	movq	0xa0(%rsp), %rdi
    00003c9a: 	cmpq	%r13, %rdi
    00003c9d: 	je	.Ltmp5106 # Offset: 15517
    00003c9f: 	movq	0xb0(%rsp), %rax
    00003ca7: 	leaq	0x1(%rax), %rsi
    00003cab: 	callq	_ZdlPvm@PLT # Offset: 15531
.Ltmp5106:
    00003cb0: 	leaq	DATAat0x576be(%rip), %rdx
    00003cb7: 	movq	%r14, %rsi
    00003cba: 	movq	%r12, %rdi
    00003cbd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15549
    00003cc2: 	movq	%r12, %rdx
    00003cc5: 	movl	$0x1f40, %esi
    00003cca: 	movq	%rbp, %rdi
    00003ccd: 	callq	_Z13test_constantIt13and_remainderItLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 15565
    00003cd2: 	movq	0xa0(%rsp), %rdi
    00003cda: 	cmpq	%r13, %rdi
    00003cdd: 	je	.Ltmp5107 # Offset: 15581
    00003cdf: 	movq	0xb0(%rsp), %rax
    00003ce7: 	leaq	0x1(%rax), %rsi
    00003ceb: 	callq	_ZdlPvm@PLT # Offset: 15595
.Ltmp5107:
    00003cf0: 	leaq	DATAat0x576d0(%rip), %rdx
    00003cf7: 	movq	%r14, %rsi
    00003cfa: 	movq	%r12, %rdi
    00003cfd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15613
    00003d02: 	movq	%r12, %rdx
    00003d05: 	movl	$0x1f40, %esi
    00003d0a: 	movq	%rbp, %rdi
    00003d0d: 	callq	_Z13test_constantIt14and_remainder2ItLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 15629
    00003d12: 	movq	0xa0(%rsp), %rdi
    00003d1a: 	cmpq	%r13, %rdi
    00003d1d: 	je	.Ltmp5108 # Offset: 15645
    00003d1f: 	movq	0xb0(%rsp), %rax
    00003d27: 	leaq	0x1(%rax), %rsi
    00003d2b: 	callq	_ZdlPvm@PLT # Offset: 15659
.Ltmp5108:
    00003d30: 	leaq	DATAat0x576e3(%rip), %rdx
    00003d37: 	movq	%r14, %rsi
    00003d3a: 	movq	%r12, %rdi
    00003d3d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15677
    00003d42: 	callq	clock@PLT # Offset: 15682
    00003d47: 	movl	iterations(%rip), %ecx
    00003d4d: 	movq	%rax, start_time(%rip)
    00003d54: 	testl	%ecx, %ecx
    00003d56: 	jle	.Ltmp5109 # Offset: 15702
    00003d5c: 	movdqa	DATAat0x57c90(%rip), %xmm4
    00003d64: 	movl	$0x0, 0x1c(%rsp)
    00003d6c: 	movaps	%xmm4, (%rsp)
.Ltmp5112:
    00003d70: 	movq	%rbp, %rax
    00003d73: 	pxor	%xmm0, %xmm0
    00003d77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5110:
    00003d80: 	movdqa	(%rsp), %xmm1
    00003d85: 	pand	(%rax), %xmm1
    00003d89: 	addq	$0x10, %rax
    00003d8d: 	paddw	%xmm1, %xmm0
    00003d91: 	cmpq	%rbx, %rax
    00003d94: 	jne	.Ltmp5110 # Offset: 15764
    00003d96: 	movdqa	%xmm0, %xmm1
    00003d9a: 	cvttsd2si	init_value(%rip), %eax
    00003da2: 	psrldq	$0x8, %xmm1
    00003da7: 	paddw	%xmm1, %xmm0
    00003dab: 	movdqa	%xmm0, %xmm1
    00003daf: 	psrldq	$0x4, %xmm1
    00003db4: 	andl	$0xf, %eax
    00003db7: 	imulw	$0x1f40, %ax, %ax
    00003dbc: 	paddw	%xmm1, %xmm0
    00003dc0: 	movdqa	%xmm0, %xmm1
    00003dc4: 	psrldq	$0x2, %xmm1
    00003dc9: 	paddw	%xmm1, %xmm0
    00003dcd: 	pextrw	$0x0, %xmm0, %edx
    00003dd2: 	cmpw	%dx, %ax
    00003dd5: 	je	.Ltmp5111 # Offset: 15829
    00003dd7: 	movl	current_test(%rip), %edx
    00003ddd: 	leaq	DATAat0x571d0(%rip), %rsi
    00003de4: 	movl	$0x1, %edi
    00003de9: 	xorl	%eax, %eax
    00003deb: 	callq	__printf_chk@PLT # Offset: 15851
    00003df0: 	movl	iterations(%rip), %ecx
.Ltmp5111:
    00003df6: 	addl	$0x1, 0x1c(%rsp)
    00003dfb: 	movl	0x1c(%rsp), %eax
    00003dff: 	cmpl	%ecx, %eax
    00003e01: 	jl	.Ltmp5112 # Offset: 15873
.Ltmp5109:
    00003e07: 	movq	%r12, %rsi
    00003e0a: 	movq	%r15, %rdi
    00003e0d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15885
    00003e12: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003e19: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003e20: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003e27: 	je	.Ltmp5113 # Offset: 15911
.Ltmp5279:
    00003e2d: 	movq	-0x20(%rax), %rdi
    00003e31: 	movq	%rdi, (%rsp)
    00003e35: 	callq	clock@PLT # Offset: 15925
    00003e3a: 	movq	(%rsp), %rdi
    00003e3e: 	pxor	%xmm0, %xmm0
    00003e42: 	movq	%rax, end_time(%rip)
    00003e49: 	subq	start_time(%rip), %rax
    00003e50: 	cvtsi2sd	%rax, %xmm0
    00003e55: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003e5d: 	callq	_Z13record_resultdPKc # Offset: 15965
    00003e62: 	movq	0xa0(%rsp), %rdi
    00003e6a: 	cmpq	%r13, %rdi
    00003e6d: 	je	.Ltmp5114 # Offset: 15981
    00003e6f: 	movq	0xb0(%rsp), %rax
    00003e77: 	leaq	0x1(%rax), %rsi
    00003e7b: 	callq	_ZdlPvm@PLT # Offset: 15995
.Ltmp5114:
    00003e80: 	leaq	DATAat0x576fb(%rip), %rdx
    00003e87: 	movq	%r14, %rsi
    00003e8a: 	movq	%r12, %rdi
    00003e8d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16013
    00003e92: 	movq	%r12, %rcx
    00003e95: 	movl	$0x10, %edx
    00003e9a: 	movl	$0x1f40, %esi
    00003e9f: 	movq	%rbp, %rdi
    00003ea2: 	callq	_Z14test_variable1It25custom_remainder_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 16034
    00003ea7: 	movq	0xa0(%rsp), %rdi
    00003eaf: 	cmpq	%r13, %rdi
    00003eb2: 	je	.Ltmp5115 # Offset: 16050
    00003eb4: 	movq	0xb0(%rsp), %rax
    00003ebc: 	leaq	0x1(%rax), %rsi
    00003ec0: 	callq	_ZdlPvm@PLT # Offset: 16064
.Ltmp5115:
    00003ec5: 	leaq	DATAat0x57715(%rip), %rdx
    00003ecc: 	movq	%r14, %rsi
    00003ecf: 	movq	%r12, %rdi
    00003ed2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16082
    00003ed7: 	callq	clock@PLT # Offset: 16087
    00003edc: 	movl	iterations(%rip), %ecx
    00003ee2: 	movq	%rax, start_time(%rip)
    00003ee9: 	testl	%ecx, %ecx
    00003eeb: 	jle	.Ltmp5116 # Offset: 16107
    00003ef1: 	movdqa	DATAat0x57c90(%rip), %xmm5
    00003ef9: 	movl	$0x0, 0x1c(%rsp)
    00003f01: 	movaps	%xmm5, (%rsp)
    00003f05: 	nopl	(%rax) # Size: 3
.Ltmp5119:
    00003f08: 	movq	%rbp, %rax
    00003f0b: 	pxor	%xmm0, %xmm0
    00003f0f: 	nop # Size: 1
.Ltmp5117:
    00003f10: 	movdqa	(%rsp), %xmm1
    00003f15: 	pand	(%rax), %xmm1
    00003f19: 	addq	$0x10, %rax
    00003f1d: 	paddw	%xmm1, %xmm0
    00003f21: 	cmpq	%rax, %rbx
    00003f24: 	jne	.Ltmp5117 # Offset: 16164
    00003f26: 	movdqa	%xmm0, %xmm1
    00003f2a: 	cvttsd2si	init_value(%rip), %eax
    00003f32: 	psrldq	$0x8, %xmm1
    00003f37: 	paddw	%xmm1, %xmm0
    00003f3b: 	movdqa	%xmm0, %xmm1
    00003f3f: 	psrldq	$0x4, %xmm1
    00003f44: 	andl	$0xf, %eax
    00003f47: 	imulw	$0x1f40, %ax, %ax
    00003f4c: 	paddw	%xmm1, %xmm0
    00003f50: 	movdqa	%xmm0, %xmm1
    00003f54: 	psrldq	$0x2, %xmm1
    00003f59: 	paddw	%xmm1, %xmm0
    00003f5d: 	pextrw	$0x0, %xmm0, %edx
    00003f62: 	cmpw	%dx, %ax
    00003f65: 	je	.Ltmp5118 # Offset: 16229
    00003f67: 	movl	current_test(%rip), %edx
    00003f6d: 	leaq	DATAat0x571d0(%rip), %rsi
    00003f74: 	movl	$0x1, %edi
    00003f79: 	xorl	%eax, %eax
    00003f7b: 	callq	__printf_chk@PLT # Offset: 16251
    00003f80: 	movl	iterations(%rip), %ecx
.Ltmp5118:
    00003f86: 	addl	$0x1, 0x1c(%rsp)
    00003f8b: 	movl	0x1c(%rsp), %eax
    00003f8f: 	cmpl	%ecx, %eax
    00003f91: 	jl	.Ltmp5119 # Offset: 16273
.Ltmp5116:
    00003f97: 	movq	%r12, %rsi
    00003f9a: 	movq	%r15, %rdi
    00003f9d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16285
    00003fa2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003fa9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003fb0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003fb7: 	je	.Ltmp5120 # Offset: 16311
.Ltmp5278:
    00003fbd: 	movq	-0x20(%rax), %rdi
    00003fc1: 	movq	%rdi, (%rsp)
    00003fc5: 	callq	clock@PLT # Offset: 16325
    00003fca: 	movq	(%rsp), %rdi
    00003fce: 	pxor	%xmm0, %xmm0
    00003fd2: 	movq	%rax, end_time(%rip)
    00003fd9: 	subq	start_time(%rip), %rax
    00003fe0: 	cvtsi2sd	%rax, %xmm0
    00003fe5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003fed: 	callq	_Z13record_resultdPKc # Offset: 16365
    00003ff2: 	movq	0xa0(%rsp), %rdi
    00003ffa: 	cmpq	%r13, %rdi
    00003ffd: 	je	.Ltmp5121 # Offset: 16381
    00003fff: 	movq	0xb0(%rsp), %rax
    00004007: 	leaq	0x1(%rax), %rsi
    0000400b: 	callq	_ZdlPvm@PLT # Offset: 16395
.Ltmp5121:
    00004010: 	leaq	DATAat0x5772f(%rip), %rdx
    00004017: 	movq	%r14, %rsi
    0000401a: 	movq	%r12, %rdi
    0000401d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16413
    00004022: 	callq	clock@PLT # Offset: 16418
    00004027: 	movl	iterations(%rip), %ecx
    0000402d: 	movq	%rax, start_time(%rip)
    00004034: 	testl	%ecx, %ecx
    00004036: 	jle	.Ltmp5122 # Offset: 16438
    0000403c: 	movdqa	DATAat0x57e20(%rip), %xmm6
    00004044: 	movl	$0x0, 0x1c(%rsp)
    0000404c: 	movaps	%xmm6, (%rsp)
.Ltmp5125:
    00004050: 	movq	%rbp, %rax
    00004053: 	pxor	%xmm0, %xmm0
    00004057: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5123:
    00004060: 	movdqa	(%rsp), %xmm1
    00004065: 	pand	(%rax), %xmm1
    00004069: 	addq	$0x10, %rax
    0000406d: 	paddw	%xmm1, %xmm0
    00004071: 	cmpq	%rbx, %rax
    00004074: 	jne	.Ltmp5123 # Offset: 16500
    00004076: 	movdqa	%xmm0, %xmm1
    0000407a: 	cvttsd2si	init_value(%rip), %eax
    00004082: 	psrldq	$0x8, %xmm1
    00004087: 	paddw	%xmm1, %xmm0
    0000408b: 	movdqa	%xmm0, %xmm1
    0000408f: 	psrldq	$0x4, %xmm1
    00004094: 	andl	$0x1f, %eax
    00004097: 	imulw	$0x1f40, %ax, %ax
    0000409c: 	paddw	%xmm1, %xmm0
    000040a0: 	movdqa	%xmm0, %xmm1
    000040a4: 	psrldq	$0x2, %xmm1
    000040a9: 	paddw	%xmm1, %xmm0
    000040ad: 	pextrw	$0x0, %xmm0, %edx
    000040b2: 	cmpw	%dx, %ax
    000040b5: 	je	.Ltmp5124 # Offset: 16565
    000040b7: 	movl	current_test(%rip), %edx
    000040bd: 	leaq	DATAat0x571d0(%rip), %rsi
    000040c4: 	movl	$0x1, %edi
    000040c9: 	xorl	%eax, %eax
    000040cb: 	callq	__printf_chk@PLT # Offset: 16587
    000040d0: 	movl	iterations(%rip), %ecx
.Ltmp5124:
    000040d6: 	addl	$0x1, 0x1c(%rsp)
    000040db: 	movl	0x1c(%rsp), %eax
    000040df: 	cmpl	%ecx, %eax
    000040e1: 	jl	.Ltmp5125 # Offset: 16609
.Ltmp5122:
    000040e7: 	movq	%r12, %rsi
    000040ea: 	movq	%r15, %rdi
    000040ed: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16621
    000040f2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000040f9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004100: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004107: 	je	.Ltmp5126 # Offset: 16647
.Ltmp5277:
    0000410d: 	movq	-0x20(%rax), %rdi
    00004111: 	movq	%rdi, (%rsp)
    00004115: 	callq	clock@PLT # Offset: 16661
    0000411a: 	movq	(%rsp), %rdi
    0000411e: 	pxor	%xmm0, %xmm0
    00004122: 	movq	%rax, end_time(%rip)
    00004129: 	subq	start_time(%rip), %rax
    00004130: 	cvtsi2sd	%rax, %xmm0
    00004135: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000413d: 	callq	_Z13record_resultdPKc # Offset: 16701
    00004142: 	movq	0xa0(%rsp), %rdi
    0000414a: 	cmpq	%r13, %rdi
    0000414d: 	je	.Ltmp5127 # Offset: 16717
    0000414f: 	movq	0xb0(%rsp), %rax
    00004157: 	leaq	0x1(%rax), %rsi
    0000415b: 	callq	_ZdlPvm@PLT # Offset: 16731
.Ltmp5127:
    00004160: 	leaq	DATAat0x57737(%rip), %rdx
    00004167: 	movq	%r14, %rsi
    0000416a: 	movq	%r12, %rdi
    0000416d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16749
    00004172: 	callq	clock@PLT # Offset: 16754
    00004177: 	movl	iterations(%rip), %ecx
    0000417d: 	movq	%rax, start_time(%rip)
    00004184: 	testl	%ecx, %ecx
    00004186: 	jle	.Ltmp5128 # Offset: 16774
    0000418c: 	movdqa	DATAat0x57e20(%rip), %xmm7
    00004194: 	movl	$0x0, 0x1c(%rsp)
    0000419c: 	movaps	%xmm7, (%rsp)
.Ltmp5131:
    000041a0: 	movq	%rbp, %rax
    000041a3: 	pxor	%xmm0, %xmm0
    000041a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5129:
    000041b0: 	movdqa	(%rsp), %xmm1
    000041b5: 	pand	(%rax), %xmm1
    000041b9: 	addq	$0x10, %rax
    000041bd: 	paddw	%xmm1, %xmm0
    000041c1: 	cmpq	%rax, %rbx
    000041c4: 	jne	.Ltmp5129 # Offset: 16836
    000041c6: 	movdqa	%xmm0, %xmm1
    000041ca: 	cvttsd2si	init_value(%rip), %eax
    000041d2: 	psrldq	$0x8, %xmm1
    000041d7: 	paddw	%xmm1, %xmm0
    000041db: 	movdqa	%xmm0, %xmm1
    000041df: 	psrldq	$0x4, %xmm1
    000041e4: 	andl	$0x1f, %eax
    000041e7: 	imulw	$0x1f40, %ax, %ax
    000041ec: 	paddw	%xmm1, %xmm0
    000041f0: 	movdqa	%xmm0, %xmm1
    000041f4: 	psrldq	$0x2, %xmm1
    000041f9: 	paddw	%xmm1, %xmm0
    000041fd: 	pextrw	$0x0, %xmm0, %edx
    00004202: 	cmpw	%dx, %ax
    00004205: 	je	.Ltmp5130 # Offset: 16901
    00004207: 	movl	current_test(%rip), %edx
    0000420d: 	leaq	DATAat0x571d0(%rip), %rsi
    00004214: 	movl	$0x1, %edi
    00004219: 	xorl	%eax, %eax
    0000421b: 	callq	__printf_chk@PLT # Offset: 16923
    00004220: 	movl	iterations(%rip), %ecx
.Ltmp5130:
    00004226: 	addl	$0x1, 0x1c(%rsp)
    0000422b: 	movl	0x1c(%rsp), %eax
    0000422f: 	cmpl	%ecx, %eax
    00004231: 	jl	.Ltmp5131 # Offset: 16945
.Ltmp5128:
    00004237: 	movq	%r12, %rsi
    0000423a: 	movq	%r15, %rdi
    0000423d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16957
    00004242: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004249: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004250: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004257: 	je	.Ltmp5132 # Offset: 16983
.Ltmp5276:
    0000425d: 	movq	-0x20(%rax), %rdi
    00004261: 	movq	%rdi, (%rsp)
    00004265: 	callq	clock@PLT # Offset: 16997
    0000426a: 	movq	(%rsp), %rdi
    0000426e: 	pxor	%xmm0, %xmm0
    00004272: 	movq	%rax, end_time(%rip)
    00004279: 	subq	start_time(%rip), %rax
    00004280: 	cvtsi2sd	%rax, %xmm0
    00004285: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000428d: 	callq	_Z13record_resultdPKc # Offset: 17037
    00004292: 	movq	0xa0(%rsp), %rdi
    0000429a: 	cmpq	%r13, %rdi
    0000429d: 	je	.Ltmp5133 # Offset: 17053
    0000429f: 	movq	0xb0(%rsp), %rax
    000042a7: 	leaq	0x1(%rax), %rsi
    000042ab: 	callq	_ZdlPvm@PLT # Offset: 17067
.Ltmp5133:
    000042b0: 	leaq	DATAat0x57749(%rip), %rdx
    000042b7: 	movq	%r14, %rsi
    000042ba: 	movq	%r12, %rdi
    000042bd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17085
    000042c2: 	callq	clock@PLT # Offset: 17090
    000042c7: 	movl	iterations(%rip), %ecx
    000042cd: 	movq	%rax, start_time(%rip)
    000042d4: 	testl	%ecx, %ecx
    000042d6: 	jle	.Ltmp5134 # Offset: 17110
    000042dc: 	movdqa	DATAat0x57e20(%rip), %xmm3
    000042e4: 	movl	$0x0, 0x1c(%rsp)
    000042ec: 	movaps	%xmm3, (%rsp)
.Ltmp5137:
    000042f0: 	movq	%rbp, %rax
    000042f3: 	pxor	%xmm0, %xmm0
    000042f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5135:
    00004300: 	movdqa	(%rsp), %xmm1
    00004305: 	pand	(%rax), %xmm1
    00004309: 	addq	$0x10, %rax
    0000430d: 	paddw	%xmm1, %xmm0
    00004311: 	cmpq	%rbx, %rax
    00004314: 	jne	.Ltmp5135 # Offset: 17172
    00004316: 	movdqa	%xmm0, %xmm1
    0000431a: 	cvttsd2si	init_value(%rip), %eax
    00004322: 	psrldq	$0x8, %xmm1
    00004327: 	paddw	%xmm1, %xmm0
    0000432b: 	movdqa	%xmm0, %xmm1
    0000432f: 	psrldq	$0x4, %xmm1
    00004334: 	andl	$0x1f, %eax
    00004337: 	imulw	$0x1f40, %ax, %ax
    0000433c: 	paddw	%xmm1, %xmm0
    00004340: 	movdqa	%xmm0, %xmm1
    00004344: 	psrldq	$0x2, %xmm1
    00004349: 	paddw	%xmm1, %xmm0
    0000434d: 	pextrw	$0x0, %xmm0, %edx
    00004352: 	cmpw	%dx, %ax
    00004355: 	je	.Ltmp5136 # Offset: 17237
    00004357: 	movl	current_test(%rip), %edx
    0000435d: 	leaq	DATAat0x571d0(%rip), %rsi
    00004364: 	movl	$0x1, %edi
    00004369: 	xorl	%eax, %eax
    0000436b: 	callq	__printf_chk@PLT # Offset: 17259
    00004370: 	movl	iterations(%rip), %ecx
.Ltmp5136:
    00004376: 	addl	$0x1, 0x1c(%rsp)
    0000437b: 	movl	0x1c(%rsp), %eax
    0000437f: 	cmpl	%ecx, %eax
    00004381: 	jl	.Ltmp5137 # Offset: 17281
.Ltmp5134:
    00004387: 	movq	%r12, %rsi
    0000438a: 	movq	%r15, %rdi
    0000438d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17293
    00004392: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004399: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000043a0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000043a7: 	je	.Ltmp5138 # Offset: 17319
.Ltmp5275:
    000043ad: 	movq	-0x20(%rax), %rdi
    000043b1: 	movq	%rdi, (%rsp)
    000043b5: 	callq	clock@PLT # Offset: 17333
    000043ba: 	movq	(%rsp), %rdi
    000043be: 	pxor	%xmm0, %xmm0
    000043c2: 	movq	%rax, end_time(%rip)
    000043c9: 	subq	start_time(%rip), %rax
    000043d0: 	cvtsi2sd	%rax, %xmm0
    000043d5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000043dd: 	callq	_Z13record_resultdPKc # Offset: 17373
    000043e2: 	movq	0xa0(%rsp), %rdi
    000043ea: 	cmpq	%r13, %rdi
    000043ed: 	je	.Ltmp5139 # Offset: 17389
    000043ef: 	movq	0xb0(%rsp), %rax
    000043f7: 	leaq	0x1(%rax), %rsi
    000043fb: 	callq	_ZdlPvm@PLT # Offset: 17403
.Ltmp5139:
    00004400: 	leaq	DATAat0x5775c(%rip), %rdx
    00004407: 	movq	%r14, %rsi
    0000440a: 	movq	%r12, %rdi
    0000440d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17421
    00004412: 	callq	clock@PLT # Offset: 17426
    00004417: 	movl	iterations(%rip), %ecx
    0000441d: 	movq	%rax, start_time(%rip)
    00004424: 	testl	%ecx, %ecx
    00004426: 	jle	.Ltmp5140 # Offset: 17446
    0000442c: 	movdqa	DATAat0x57e20(%rip), %xmm4
    00004434: 	movl	$0x0, 0x1c(%rsp)
    0000443c: 	movaps	%xmm4, (%rsp)
.Ltmp5143:
    00004440: 	movq	%rbp, %rax
    00004443: 	pxor	%xmm0, %xmm0
    00004447: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5141:
    00004450: 	movdqa	(%rsp), %xmm1
    00004455: 	pand	(%rax), %xmm1
    00004459: 	addq	$0x10, %rax
    0000445d: 	paddw	%xmm1, %xmm0
    00004461: 	cmpq	%rax, %rbx
    00004464: 	jne	.Ltmp5141 # Offset: 17508
    00004466: 	movdqa	%xmm0, %xmm1
    0000446a: 	cvttsd2si	init_value(%rip), %eax
    00004472: 	psrldq	$0x8, %xmm1
    00004477: 	paddw	%xmm1, %xmm0
    0000447b: 	movdqa	%xmm0, %xmm1
    0000447f: 	psrldq	$0x4, %xmm1
    00004484: 	andl	$0x1f, %eax
    00004487: 	imulw	$0x1f40, %ax, %ax
    0000448c: 	paddw	%xmm1, %xmm0
    00004490: 	movdqa	%xmm0, %xmm1
    00004494: 	psrldq	$0x2, %xmm1
    00004499: 	paddw	%xmm1, %xmm0
    0000449d: 	pextrw	$0x0, %xmm0, %edx
    000044a2: 	cmpw	%dx, %ax
    000044a5: 	je	.Ltmp5142 # Offset: 17573
    000044a7: 	movl	current_test(%rip), %edx
    000044ad: 	leaq	DATAat0x571d0(%rip), %rsi
    000044b4: 	movl	$0x1, %edi
    000044b9: 	xorl	%eax, %eax
    000044bb: 	callq	__printf_chk@PLT # Offset: 17595
    000044c0: 	movl	iterations(%rip), %ecx
.Ltmp5142:
    000044c6: 	addl	$0x1, 0x1c(%rsp)
    000044cb: 	movl	0x1c(%rsp), %eax
    000044cf: 	cmpl	%ecx, %eax
    000044d1: 	jl	.Ltmp5143 # Offset: 17617
.Ltmp5140:
    000044d7: 	movq	%r12, %rsi
    000044da: 	movq	%r15, %rdi
    000044dd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17629
    000044e2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000044e9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000044f0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000044f7: 	je	.Ltmp5144 # Offset: 17655
.Ltmp5274:
    000044fd: 	movq	-0x20(%rax), %rdi
    00004501: 	movq	%rdi, (%rsp)
    00004505: 	callq	clock@PLT # Offset: 17669
    0000450a: 	movq	(%rsp), %rdi
    0000450e: 	pxor	%xmm0, %xmm0
    00004512: 	movq	%rax, end_time(%rip)
    00004519: 	subq	start_time(%rip), %rax
    00004520: 	cvtsi2sd	%rax, %xmm0
    00004525: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000452d: 	callq	_Z13record_resultdPKc # Offset: 17709
    00004532: 	movq	0xa0(%rsp), %rdi
    0000453a: 	cmpq	%r13, %rdi
    0000453d: 	je	.Ltmp5145 # Offset: 17725
    0000453f: 	movq	0xb0(%rsp), %rax
    00004547: 	leaq	0x1(%rax), %rsi
    0000454b: 	callq	_ZdlPvm@PLT # Offset: 17739
.Ltmp5145:
    00004550: 	leaq	DATAat0x57774(%rip), %rdx
    00004557: 	movq	%r14, %rsi
    0000455a: 	movq	%r12, %rdi
    0000455d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17757
    00004562: 	movq	%r12, %rcx
    00004565: 	movl	$0x20, %edx
    0000456a: 	movl	$0x1f40, %esi
    0000456f: 	movq	%rbp, %rdi
    00004572: 	callq	_Z14test_variable1It25custom_remainder_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 17778
    00004577: 	movq	0xa0(%rsp), %rdi
    0000457f: 	cmpq	%r13, %rdi
    00004582: 	je	.Ltmp5146 # Offset: 17794
    00004584: 	movq	0xb0(%rsp), %rax
    0000458c: 	leaq	0x1(%rax), %rsi
    00004590: 	callq	_ZdlPvm@PLT # Offset: 17808
.Ltmp5146:
    00004595: 	leaq	DATAat0x5778e(%rip), %rdx
    0000459c: 	movq	%r14, %rsi
    0000459f: 	movq	%r12, %rdi
    000045a2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17826
    000045a7: 	callq	clock@PLT # Offset: 17831
    000045ac: 	movl	iterations(%rip), %ecx
    000045b2: 	movq	%rax, start_time(%rip)
    000045b9: 	testl	%ecx, %ecx
    000045bb: 	jle	.Ltmp5147 # Offset: 17851
    000045c1: 	movdqa	DATAat0x57e20(%rip), %xmm5
    000045c9: 	movl	$0x0, 0x1c(%rsp)
    000045d1: 	movaps	%xmm5, (%rsp)
    000045d5: 	nopl	(%rax) # Size: 3
.Ltmp5150:
    000045d8: 	movq	%rbp, %rax
    000045db: 	pxor	%xmm0, %xmm0
    000045df: 	nop # Size: 1
.Ltmp5148:
    000045e0: 	movdqa	(%rsp), %xmm1
    000045e5: 	pand	(%rax), %xmm1
    000045e9: 	addq	$0x10, %rax
    000045ed: 	paddw	%xmm1, %xmm0
    000045f1: 	cmpq	%rbx, %rax
    000045f4: 	jne	.Ltmp5148 # Offset: 17908
    000045f6: 	movdqa	%xmm0, %xmm1
    000045fa: 	cvttsd2si	init_value(%rip), %eax
    00004602: 	psrldq	$0x8, %xmm1
    00004607: 	paddw	%xmm1, %xmm0
    0000460b: 	movdqa	%xmm0, %xmm1
    0000460f: 	psrldq	$0x4, %xmm1
    00004614: 	andl	$0x1f, %eax
    00004617: 	imulw	$0x1f40, %ax, %ax
    0000461c: 	paddw	%xmm1, %xmm0
    00004620: 	movdqa	%xmm0, %xmm1
    00004624: 	psrldq	$0x2, %xmm1
    00004629: 	paddw	%xmm1, %xmm0
    0000462d: 	pextrw	$0x0, %xmm0, %edx
    00004632: 	cmpw	%dx, %ax
    00004635: 	je	.Ltmp5149 # Offset: 17973
    00004637: 	movl	current_test(%rip), %edx
    0000463d: 	leaq	DATAat0x571d0(%rip), %rsi
    00004644: 	movl	$0x1, %edi
    00004649: 	xorl	%eax, %eax
    0000464b: 	callq	__printf_chk@PLT # Offset: 17995
    00004650: 	movl	iterations(%rip), %ecx
.Ltmp5149:
    00004656: 	addl	$0x1, 0x1c(%rsp)
    0000465b: 	movl	0x1c(%rsp), %eax
    0000465f: 	cmpl	%ecx, %eax
    00004661: 	jl	.Ltmp5150 # Offset: 18017
.Ltmp5147:
    00004667: 	movq	%r12, %rsi
    0000466a: 	movq	%r15, %rdi
    0000466d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18029
    00004672: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004679: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004680: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004687: 	je	.Ltmp5151 # Offset: 18055
.Ltmp5273:
    0000468d: 	movq	-0x20(%rax), %rdi
    00004691: 	movq	%rdi, (%rsp)
    00004695: 	callq	clock@PLT # Offset: 18069
    0000469a: 	movq	(%rsp), %rdi
    0000469e: 	pxor	%xmm0, %xmm0
    000046a2: 	movq	%rax, end_time(%rip)
    000046a9: 	subq	start_time(%rip), %rax
    000046b0: 	cvtsi2sd	%rax, %xmm0
    000046b5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000046bd: 	callq	_Z13record_resultdPKc # Offset: 18109
    000046c2: 	movq	0xa0(%rsp), %rdi
    000046ca: 	cmpq	%r13, %rdi
    000046cd: 	je	.Ltmp5152 # Offset: 18125
    000046cf: 	movq	0xb0(%rsp), %rax
    000046d7: 	leaq	0x1(%rax), %rsi
    000046db: 	callq	_ZdlPvm@PLT # Offset: 18139
.Ltmp5152:
    000046e0: 	leaq	DATAat0x577a8(%rip), %rdx
    000046e7: 	movq	%r14, %rsi
    000046ea: 	movq	%r12, %rdi
    000046ed: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18157
    000046f2: 	movq	%r12, %rdx
    000046f5: 	movl	$0x1f40, %esi
    000046fa: 	movq	%rbp, %rdi
    000046fd: 	callq	_Z13test_constantIt12and_constantItLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 18173
    00004702: 	movq	0xa0(%rsp), %rdi
    0000470a: 	cmpq	%r13, %rdi
    0000470d: 	je	.Ltmp5153 # Offset: 18189
    0000470f: 	movq	0xb0(%rsp), %rax
    00004717: 	leaq	0x1(%rax), %rsi
    0000471b: 	callq	_ZdlPvm@PLT # Offset: 18203
.Ltmp5153:
    00004720: 	leaq	DATAat0x577b0(%rip), %rdx
    00004727: 	movq	%r14, %rsi
    0000472a: 	movq	%r12, %rdi
    0000472d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18221
    00004732: 	callq	clock@PLT # Offset: 18226
    00004737: 	movl	iterations(%rip), %ecx
    0000473d: 	movq	%rax, start_time(%rip)
    00004744: 	testl	%ecx, %ecx
    00004746: 	jle	.Ltmp5154 # Offset: 18246
    0000474c: 	movdqa	DATAat0x57cc0(%rip), %xmm6
    00004754: 	movl	$0x0, 0x1c(%rsp)
    0000475c: 	movaps	%xmm6, (%rsp)
.Ltmp5157:
    00004760: 	movq	%rbp, %rax
    00004763: 	pxor	%xmm0, %xmm0
    00004767: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5155:
    00004770: 	movdqa	(%rsp), %xmm1
    00004775: 	pand	(%rax), %xmm1
    00004779: 	addq	$0x10, %rax
    0000477d: 	paddw	%xmm1, %xmm0
    00004781: 	cmpq	%rax, %rbx
    00004784: 	jne	.Ltmp5155 # Offset: 18308
    00004786: 	movdqa	%xmm0, %xmm1
    0000478a: 	cvttsd2si	init_value(%rip), %eax
    00004792: 	psrldq	$0x8, %xmm1
    00004797: 	paddw	%xmm1, %xmm0
    0000479b: 	movdqa	%xmm0, %xmm1
    0000479f: 	psrldq	$0x4, %xmm1
    000047a4: 	andl	$0x3f, %eax
    000047a7: 	imulw	$0x1f40, %ax, %ax
    000047ac: 	paddw	%xmm1, %xmm0
    000047b0: 	movdqa	%xmm0, %xmm1
    000047b4: 	psrldq	$0x2, %xmm1
    000047b9: 	paddw	%xmm1, %xmm0
    000047bd: 	pextrw	$0x0, %xmm0, %edx
    000047c2: 	cmpw	%dx, %ax
    000047c5: 	je	.Ltmp5156 # Offset: 18373
    000047c7: 	movl	current_test(%rip), %edx
    000047cd: 	leaq	DATAat0x571d0(%rip), %rsi
    000047d4: 	movl	$0x1, %edi
    000047d9: 	xorl	%eax, %eax
    000047db: 	callq	__printf_chk@PLT # Offset: 18395
    000047e0: 	movl	iterations(%rip), %ecx
.Ltmp5156:
    000047e6: 	addl	$0x1, 0x1c(%rsp)
    000047eb: 	movl	0x1c(%rsp), %eax
    000047ef: 	cmpl	%ecx, %eax
    000047f1: 	jl	.Ltmp5157 # Offset: 18417
.Ltmp5154:
    000047f7: 	movq	%r12, %rsi
    000047fa: 	movq	%r15, %rdi
    000047fd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18429
    00004802: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004809: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004810: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004817: 	je	.Ltmp5158 # Offset: 18455
.Ltmp5272:
    0000481d: 	movq	-0x20(%rax), %rdi
    00004821: 	movq	%rdi, (%rsp)
    00004825: 	callq	clock@PLT # Offset: 18469
    0000482a: 	movq	(%rsp), %rdi
    0000482e: 	pxor	%xmm0, %xmm0
    00004832: 	movq	%rax, end_time(%rip)
    00004839: 	subq	start_time(%rip), %rax
    00004840: 	cvtsi2sd	%rax, %xmm0
    00004845: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000484d: 	callq	_Z13record_resultdPKc # Offset: 18509
    00004852: 	movq	0xa0(%rsp), %rdi
    0000485a: 	cmpq	%r13, %rdi
    0000485d: 	je	.Ltmp5159 # Offset: 18525
    0000485f: 	movq	0xb0(%rsp), %rax
    00004867: 	leaq	0x1(%rax), %rsi
    0000486b: 	callq	_ZdlPvm@PLT # Offset: 18539
.Ltmp5159:
    00004870: 	leaq	DATAat0x577c2(%rip), %rdx
    00004877: 	movq	%r14, %rsi
    0000487a: 	movq	%r12, %rdi
    0000487d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18557
    00004882: 	callq	clock@PLT # Offset: 18562
    00004887: 	movl	iterations(%rip), %ecx
    0000488d: 	movq	%rax, start_time(%rip)
    00004894: 	testl	%ecx, %ecx
    00004896: 	jle	.Ltmp5160 # Offset: 18582
    0000489c: 	movdqa	DATAat0x57cc0(%rip), %xmm7
    000048a4: 	movl	$0x0, 0x1c(%rsp)
    000048ac: 	movaps	%xmm7, (%rsp)
.Ltmp5163:
    000048b0: 	movq	%rbp, %rax
    000048b3: 	pxor	%xmm0, %xmm0
    000048b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5161:
    000048c0: 	movdqa	(%rsp), %xmm1
    000048c5: 	pand	(%rax), %xmm1
    000048c9: 	addq	$0x10, %rax
    000048cd: 	paddw	%xmm1, %xmm0
    000048d1: 	cmpq	%rbx, %rax
    000048d4: 	jne	.Ltmp5161 # Offset: 18644
    000048d6: 	movdqa	%xmm0, %xmm1
    000048da: 	cvttsd2si	init_value(%rip), %eax
    000048e2: 	psrldq	$0x8, %xmm1
    000048e7: 	paddw	%xmm1, %xmm0
    000048eb: 	movdqa	%xmm0, %xmm1
    000048ef: 	psrldq	$0x4, %xmm1
    000048f4: 	andl	$0x3f, %eax
    000048f7: 	imulw	$0x1f40, %ax, %ax
    000048fc: 	paddw	%xmm1, %xmm0
    00004900: 	movdqa	%xmm0, %xmm1
    00004904: 	psrldq	$0x2, %xmm1
    00004909: 	paddw	%xmm1, %xmm0
    0000490d: 	pextrw	$0x0, %xmm0, %edx
    00004912: 	cmpw	%dx, %ax
    00004915: 	je	.Ltmp5162 # Offset: 18709
    00004917: 	movl	current_test(%rip), %edx
    0000491d: 	leaq	DATAat0x571d0(%rip), %rsi
    00004924: 	movl	$0x1, %edi
    00004929: 	xorl	%eax, %eax
    0000492b: 	callq	__printf_chk@PLT # Offset: 18731
    00004930: 	movl	iterations(%rip), %ecx
.Ltmp5162:
    00004936: 	addl	$0x1, 0x1c(%rsp)
    0000493b: 	movl	0x1c(%rsp), %eax
    0000493f: 	cmpl	%ecx, %eax
    00004941: 	jl	.Ltmp5163 # Offset: 18753
.Ltmp5160:
    00004947: 	movq	%r12, %rsi
    0000494a: 	movq	%r15, %rdi
    0000494d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18765
    00004952: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004959: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004960: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004967: 	je	.Ltmp5164 # Offset: 18791
.Ltmp5271:
    0000496d: 	movq	-0x20(%rax), %rdi
    00004971: 	movq	%rdi, (%rsp)
    00004975: 	callq	clock@PLT # Offset: 18805
    0000497a: 	movq	(%rsp), %rdi
    0000497e: 	pxor	%xmm0, %xmm0
    00004982: 	movq	%rax, end_time(%rip)
    00004989: 	subq	start_time(%rip), %rax
    00004990: 	cvtsi2sd	%rax, %xmm0
    00004995: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000499d: 	callq	_Z13record_resultdPKc # Offset: 18845
    000049a2: 	movq	0xa0(%rsp), %rdi
    000049aa: 	cmpq	%r13, %rdi
    000049ad: 	je	.Ltmp5165 # Offset: 18861
    000049af: 	movq	0xb0(%rsp), %rax
    000049b7: 	leaq	0x1(%rax), %rsi
    000049bb: 	callq	_ZdlPvm@PLT # Offset: 18875
.Ltmp5165:
    000049c0: 	leaq	DATAat0x577d5(%rip), %rdx
    000049c7: 	movq	%r14, %rsi
    000049ca: 	movq	%r12, %rdi
    000049cd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18893
    000049d2: 	callq	clock@PLT # Offset: 18898
    000049d7: 	movl	iterations(%rip), %ecx
    000049dd: 	movq	%rax, start_time(%rip)
    000049e4: 	testl	%ecx, %ecx
    000049e6: 	jle	.Ltmp5166 # Offset: 18918
    000049ec: 	movdqa	DATAat0x57cc0(%rip), %xmm3
    000049f4: 	movl	$0x0, 0x1c(%rsp)
    000049fc: 	movaps	%xmm3, (%rsp)
.Ltmp5169:
    00004a00: 	movq	%rbp, %rax
    00004a03: 	pxor	%xmm0, %xmm0
    00004a07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5167:
    00004a10: 	movdqa	(%rsp), %xmm1
    00004a15: 	pand	(%rax), %xmm1
    00004a19: 	addq	$0x10, %rax
    00004a1d: 	paddw	%xmm1, %xmm0
    00004a21: 	cmpq	%rax, %rbx
    00004a24: 	jne	.Ltmp5167 # Offset: 18980
    00004a26: 	movdqa	%xmm0, %xmm1
    00004a2a: 	cvttsd2si	init_value(%rip), %eax
    00004a32: 	psrldq	$0x8, %xmm1
    00004a37: 	paddw	%xmm1, %xmm0
    00004a3b: 	movdqa	%xmm0, %xmm1
    00004a3f: 	psrldq	$0x4, %xmm1
    00004a44: 	andl	$0x3f, %eax
    00004a47: 	imulw	$0x1f40, %ax, %ax
    00004a4c: 	paddw	%xmm1, %xmm0
    00004a50: 	movdqa	%xmm0, %xmm1
    00004a54: 	psrldq	$0x2, %xmm1
    00004a59: 	paddw	%xmm1, %xmm0
    00004a5d: 	pextrw	$0x0, %xmm0, %edx
    00004a62: 	cmpw	%dx, %ax
    00004a65: 	je	.Ltmp5168 # Offset: 19045
    00004a67: 	movl	current_test(%rip), %edx
    00004a6d: 	leaq	DATAat0x571d0(%rip), %rsi
    00004a74: 	movl	$0x1, %edi
    00004a79: 	xorl	%eax, %eax
    00004a7b: 	callq	__printf_chk@PLT # Offset: 19067
    00004a80: 	movl	iterations(%rip), %ecx
.Ltmp5168:
    00004a86: 	addl	$0x1, 0x1c(%rsp)
    00004a8b: 	movl	0x1c(%rsp), %eax
    00004a8f: 	cmpl	%ecx, %eax
    00004a91: 	jl	.Ltmp5169 # Offset: 19089
.Ltmp5166:
    00004a97: 	movq	%r12, %rsi
    00004a9a: 	movq	%r15, %rdi
    00004a9d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19101
    00004aa2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004aa9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004ab0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004ab7: 	je	.Ltmp5170 # Offset: 19127
.Ltmp5270:
    00004abd: 	movq	-0x20(%rax), %rdi
    00004ac1: 	movq	%rdi, (%rsp)
    00004ac5: 	callq	clock@PLT # Offset: 19141
    00004aca: 	movq	(%rsp), %rdi
    00004ace: 	pxor	%xmm0, %xmm0
    00004ad2: 	movq	%rax, end_time(%rip)
    00004ad9: 	subq	start_time(%rip), %rax
    00004ae0: 	cvtsi2sd	%rax, %xmm0
    00004ae5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004aed: 	callq	_Z13record_resultdPKc # Offset: 19181
    00004af2: 	movq	0xa0(%rsp), %rdi
    00004afa: 	cmpq	%r13, %rdi
    00004afd: 	je	.Ltmp5171 # Offset: 19197
    00004aff: 	movq	0xb0(%rsp), %rax
    00004b07: 	leaq	0x1(%rax), %rsi
    00004b0b: 	callq	_ZdlPvm@PLT # Offset: 19211
.Ltmp5171:
    00004b10: 	leaq	DATAat0x577ed(%rip), %rdx
    00004b17: 	movq	%r14, %rsi
    00004b1a: 	movq	%r12, %rdi
    00004b1d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19229
    00004b22: 	movq	%r12, %rcx
    00004b25: 	movl	$0x40, %edx
    00004b2a: 	movl	$0x1f40, %esi
    00004b2f: 	movq	%rbp, %rdi
    00004b32: 	callq	_Z14test_variable1It25custom_remainder_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 19250
    00004b37: 	movq	0xa0(%rsp), %rdi
    00004b3f: 	cmpq	%r13, %rdi
    00004b42: 	je	.Ltmp5172 # Offset: 19266
    00004b44: 	movq	0xb0(%rsp), %rax
    00004b4c: 	leaq	0x1(%rax), %rsi
    00004b50: 	callq	_ZdlPvm@PLT # Offset: 19280
.Ltmp5172:
    00004b55: 	leaq	DATAat0x57807(%rip), %rdx
    00004b5c: 	movq	%r14, %rsi
    00004b5f: 	movq	%r12, %rdi
    00004b62: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19298
    00004b67: 	callq	clock@PLT # Offset: 19303
    00004b6c: 	movl	iterations(%rip), %ecx
    00004b72: 	movq	%rax, start_time(%rip)
    00004b79: 	testl	%ecx, %ecx
    00004b7b: 	jle	.Ltmp5173 # Offset: 19323
    00004b81: 	movdqa	DATAat0x57cc0(%rip), %xmm4
    00004b89: 	movl	$0x0, 0x1c(%rsp)
    00004b91: 	movaps	%xmm4, (%rsp)
    00004b95: 	nopl	(%rax) # Size: 3
.Ltmp5176:
    00004b98: 	movq	%rbp, %rax
    00004b9b: 	pxor	%xmm0, %xmm0
    00004b9f: 	nop # Size: 1
.Ltmp5174:
    00004ba0: 	movdqa	(%rsp), %xmm1
    00004ba5: 	pand	(%rax), %xmm1
    00004ba9: 	addq	$0x10, %rax
    00004bad: 	paddw	%xmm1, %xmm0
    00004bb1: 	cmpq	%rbx, %rax
    00004bb4: 	jne	.Ltmp5174 # Offset: 19380
    00004bb6: 	movdqa	%xmm0, %xmm1
    00004bba: 	cvttsd2si	init_value(%rip), %eax
    00004bc2: 	psrldq	$0x8, %xmm1
    00004bc7: 	paddw	%xmm1, %xmm0
    00004bcb: 	movdqa	%xmm0, %xmm1
    00004bcf: 	psrldq	$0x4, %xmm1
    00004bd4: 	andl	$0x3f, %eax
    00004bd7: 	imulw	$0x1f40, %ax, %ax
    00004bdc: 	paddw	%xmm1, %xmm0
    00004be0: 	movdqa	%xmm0, %xmm1
    00004be4: 	psrldq	$0x2, %xmm1
    00004be9: 	paddw	%xmm1, %xmm0
    00004bed: 	pextrw	$0x0, %xmm0, %edx
    00004bf2: 	cmpw	%dx, %ax
    00004bf5: 	je	.Ltmp5175 # Offset: 19445
    00004bf7: 	movl	current_test(%rip), %edx
    00004bfd: 	leaq	DATAat0x571d0(%rip), %rsi
    00004c04: 	movl	$0x1, %edi
    00004c09: 	xorl	%eax, %eax
    00004c0b: 	callq	__printf_chk@PLT # Offset: 19467
    00004c10: 	movl	iterations(%rip), %ecx
.Ltmp5175:
    00004c16: 	addl	$0x1, 0x1c(%rsp)
    00004c1b: 	movl	0x1c(%rsp), %eax
    00004c1f: 	cmpl	%ecx, %eax
    00004c21: 	jl	.Ltmp5176 # Offset: 19489
.Ltmp5173:
    00004c27: 	movq	%r12, %rsi
    00004c2a: 	movq	%r15, %rdi
    00004c2d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19501
    00004c32: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004c39: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004c40: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004c47: 	je	.Ltmp5177 # Offset: 19527
.Ltmp5269:
    00004c4d: 	movq	-0x20(%rax), %rdi
    00004c51: 	movq	%rdi, (%rsp)
    00004c55: 	callq	clock@PLT # Offset: 19541
    00004c5a: 	movq	(%rsp), %rdi
    00004c5e: 	pxor	%xmm0, %xmm0
    00004c62: 	movq	%rax, end_time(%rip)
    00004c69: 	subq	start_time(%rip), %rax
    00004c70: 	cvtsi2sd	%rax, %xmm0
    00004c75: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004c7d: 	callq	_Z13record_resultdPKc # Offset: 19581
    00004c82: 	movq	0xa0(%rsp), %rdi
    00004c8a: 	cmpq	%r13, %rdi
    00004c8d: 	je	.Ltmp5178 # Offset: 19597
    00004c8f: 	movq	0xb0(%rsp), %rax
    00004c97: 	leaq	0x1(%rax), %rsi
    00004c9b: 	callq	_ZdlPvm@PLT # Offset: 19611
.Ltmp5178:
    00004ca0: 	leaq	DATAat0x57821(%rip), %rdx
    00004ca7: 	movq	%r14, %rsi
    00004caa: 	movq	%r12, %rdi
    00004cad: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19629
    00004cb2: 	callq	clock@PLT # Offset: 19634
    00004cb7: 	movl	iterations(%rip), %ecx
    00004cbd: 	movq	%rax, start_time(%rip)
    00004cc4: 	testl	%ecx, %ecx
    00004cc6: 	jle	.Ltmp5179 # Offset: 19654
    00004ccc: 	movdqa	DATAat0x57c30(%rip), %xmm5
    00004cd4: 	movl	$0x0, 0x1c(%rsp)
    00004cdc: 	movaps	%xmm5, (%rsp)
.Ltmp5182:
    00004ce0: 	movq	%rbp, %rax
    00004ce3: 	pxor	%xmm0, %xmm0
    00004ce7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5180:
    00004cf0: 	movdqa	(%rsp), %xmm1
    00004cf5: 	pand	(%rax), %xmm1
    00004cf9: 	addq	$0x10, %rax
    00004cfd: 	paddw	%xmm1, %xmm0
    00004d01: 	cmpq	%rax, %rbx
    00004d04: 	jne	.Ltmp5180 # Offset: 19716
    00004d06: 	movdqa	%xmm0, %xmm1
    00004d0a: 	cvttsd2si	init_value(%rip), %eax
    00004d12: 	psrldq	$0x8, %xmm1
    00004d17: 	paddw	%xmm1, %xmm0
    00004d1b: 	movdqa	%xmm0, %xmm1
    00004d1f: 	psrldq	$0x4, %xmm1
    00004d24: 	andl	$0x7f, %eax
    00004d27: 	imulw	$0x1f40, %ax, %ax
    00004d2c: 	paddw	%xmm1, %xmm0
    00004d30: 	movdqa	%xmm0, %xmm1
    00004d34: 	psrldq	$0x2, %xmm1
    00004d39: 	paddw	%xmm1, %xmm0
    00004d3d: 	pextrw	$0x0, %xmm0, %edx
    00004d42: 	cmpw	%dx, %ax
    00004d45: 	je	.Ltmp5181 # Offset: 19781
    00004d47: 	movl	current_test(%rip), %edx
    00004d4d: 	leaq	DATAat0x571d0(%rip), %rsi
    00004d54: 	movl	$0x1, %edi
    00004d59: 	xorl	%eax, %eax
    00004d5b: 	callq	__printf_chk@PLT # Offset: 19803
    00004d60: 	movl	iterations(%rip), %ecx
.Ltmp5181:
    00004d66: 	addl	$0x1, 0x1c(%rsp)
    00004d6b: 	movl	0x1c(%rsp), %eax
    00004d6f: 	cmpl	%ecx, %eax
    00004d71: 	jl	.Ltmp5182 # Offset: 19825
.Ltmp5179:
    00004d77: 	movq	%r12, %rsi
    00004d7a: 	movq	%r15, %rdi
    00004d7d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19837
    00004d82: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004d89: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004d90: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004d97: 	je	.Ltmp5183 # Offset: 19863
.Ltmp5268:
    00004d9d: 	movq	-0x20(%rax), %rdi
    00004da1: 	movq	%rdi, (%rsp)
    00004da5: 	callq	clock@PLT # Offset: 19877
    00004daa: 	movq	(%rsp), %rdi
    00004dae: 	pxor	%xmm0, %xmm0
    00004db2: 	movq	%rax, end_time(%rip)
    00004db9: 	subq	start_time(%rip), %rax
    00004dc0: 	cvtsi2sd	%rax, %xmm0
    00004dc5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004dcd: 	callq	_Z13record_resultdPKc # Offset: 19917
    00004dd2: 	movq	0xa0(%rsp), %rdi
    00004dda: 	cmpq	%r13, %rdi
    00004ddd: 	je	.Ltmp5184 # Offset: 19933
    00004ddf: 	movq	0xb0(%rsp), %rax
    00004de7: 	leaq	0x1(%rax), %rsi
    00004deb: 	callq	_ZdlPvm@PLT # Offset: 19947
.Ltmp5184:
    00004df0: 	leaq	DATAat0x5782a(%rip), %rdx
    00004df7: 	movq	%r14, %rsi
    00004dfa: 	movq	%r12, %rdi
    00004dfd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19965
    00004e02: 	movq	%r12, %rdx
    00004e05: 	movl	$0x1f40, %esi
    00004e0a: 	movq	%rbp, %rdi
    00004e0d: 	callq	_Z13test_constantIt13and_remainderItLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 19981
    00004e12: 	movq	0xa0(%rsp), %rdi
    00004e1a: 	cmpq	%r13, %rdi
    00004e1d: 	je	.Ltmp5185 # Offset: 19997
    00004e1f: 	movq	0xb0(%rsp), %rax
    00004e27: 	leaq	0x1(%rax), %rsi
    00004e2b: 	callq	_ZdlPvm@PLT # Offset: 20011
.Ltmp5185:
    00004e30: 	leaq	DATAat0x5783d(%rip), %rdx
    00004e37: 	movq	%r14, %rsi
    00004e3a: 	movq	%r12, %rdi
    00004e3d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20029
    00004e42: 	movq	%r12, %rdx
    00004e45: 	movl	$0x1f40, %esi
    00004e4a: 	movq	%rbp, %rdi
    00004e4d: 	callq	_Z13test_constantIt14and_remainder2ItLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 20045
    00004e52: 	movq	0xa0(%rsp), %rdi
    00004e5a: 	cmpq	%r13, %rdi
    00004e5d: 	je	.Ltmp5186 # Offset: 20061
    00004e5f: 	movq	0xb0(%rsp), %rax
    00004e67: 	leaq	0x1(%rax), %rsi
    00004e6b: 	callq	_ZdlPvm@PLT # Offset: 20075
.Ltmp5186:
    00004e70: 	leaq	DATAat0x57851(%rip), %rdx
    00004e77: 	movq	%r14, %rsi
    00004e7a: 	movq	%r12, %rdi
    00004e7d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20093
    00004e82: 	callq	clock@PLT # Offset: 20098
    00004e87: 	movl	iterations(%rip), %ecx
    00004e8d: 	movq	%rax, start_time(%rip)
    00004e94: 	testl	%ecx, %ecx
    00004e96: 	jle	.Ltmp5187 # Offset: 20118
    00004e9c: 	movdqa	DATAat0x57c30(%rip), %xmm6
    00004ea4: 	movl	$0x0, 0x1c(%rsp)
    00004eac: 	movaps	%xmm6, (%rsp)
.Ltmp5190:
    00004eb0: 	movq	%rbp, %rax
    00004eb3: 	pxor	%xmm0, %xmm0
    00004eb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5188:
    00004ec0: 	movdqa	(%rsp), %xmm1
    00004ec5: 	pand	(%rax), %xmm1
    00004ec9: 	addq	$0x10, %rax
    00004ecd: 	paddw	%xmm1, %xmm0
    00004ed1: 	cmpq	%rbx, %rax
    00004ed4: 	jne	.Ltmp5188 # Offset: 20180
    00004ed6: 	movdqa	%xmm0, %xmm1
    00004eda: 	cvttsd2si	init_value(%rip), %eax
    00004ee2: 	psrldq	$0x8, %xmm1
    00004ee7: 	paddw	%xmm1, %xmm0
    00004eeb: 	movdqa	%xmm0, %xmm1
    00004eef: 	psrldq	$0x4, %xmm1
    00004ef4: 	andl	$0x7f, %eax
    00004ef7: 	imulw	$0x1f40, %ax, %ax
    00004efc: 	paddw	%xmm1, %xmm0
    00004f00: 	movdqa	%xmm0, %xmm1
    00004f04: 	psrldq	$0x2, %xmm1
    00004f09: 	paddw	%xmm1, %xmm0
    00004f0d: 	pextrw	$0x0, %xmm0, %edx
    00004f12: 	cmpw	%dx, %ax
    00004f15: 	je	.Ltmp5189 # Offset: 20245
    00004f17: 	movl	current_test(%rip), %edx
    00004f1d: 	leaq	DATAat0x571d0(%rip), %rsi
    00004f24: 	movl	$0x1, %edi
    00004f29: 	xorl	%eax, %eax
    00004f2b: 	callq	__printf_chk@PLT # Offset: 20267
    00004f30: 	movl	iterations(%rip), %ecx
.Ltmp5189:
    00004f36: 	addl	$0x1, 0x1c(%rsp)
    00004f3b: 	movl	0x1c(%rsp), %eax
    00004f3f: 	cmpl	%ecx, %eax
    00004f41: 	jl	.Ltmp5190 # Offset: 20289
.Ltmp5187:
    00004f47: 	movq	%r12, %rsi
    00004f4a: 	movq	%r15, %rdi
    00004f4d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 20301
    00004f52: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004f59: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004f60: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004f67: 	je	.Ltmp5191 # Offset: 20327
.Ltmp5267:
    00004f6d: 	movq	-0x20(%rax), %rdi
    00004f71: 	movq	%rdi, (%rsp)
    00004f75: 	callq	clock@PLT # Offset: 20341
    00004f7a: 	movq	(%rsp), %rdi
    00004f7e: 	pxor	%xmm0, %xmm0
    00004f82: 	movq	%rax, end_time(%rip)
    00004f89: 	subq	start_time(%rip), %rax
    00004f90: 	cvtsi2sd	%rax, %xmm0
    00004f95: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004f9d: 	callq	_Z13record_resultdPKc # Offset: 20381
    00004fa2: 	movq	0xa0(%rsp), %rdi
    00004faa: 	cmpq	%r13, %rdi
    00004fad: 	je	.Ltmp5192 # Offset: 20397
    00004faf: 	movq	0xb0(%rsp), %rax
    00004fb7: 	leaq	0x1(%rax), %rsi
    00004fbb: 	callq	_ZdlPvm@PLT # Offset: 20411
.Ltmp5192:
    00004fc0: 	leaq	DATAat0x5786a(%rip), %rdx
    00004fc7: 	movq	%r14, %rsi
    00004fca: 	movq	%r12, %rdi
    00004fcd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20429
    00004fd2: 	movq	%r12, %rcx
    00004fd5: 	movl	$0x80, %edx
    00004fda: 	movl	$0x1f40, %esi
    00004fdf: 	movq	%rbp, %rdi
    00004fe2: 	callq	_Z14test_variable1It25custom_remainder_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 20450
    00004fe7: 	movq	0xa0(%rsp), %rdi
    00004fef: 	cmpq	%r13, %rdi
    00004ff2: 	je	.Ltmp5193 # Offset: 20466
    00004ff4: 	movq	0xb0(%rsp), %rax
    00004ffc: 	leaq	0x1(%rax), %rsi
    00005000: 	callq	_ZdlPvm@PLT # Offset: 20480
.Ltmp5193:
    00005005: 	leaq	DATAat0x57885(%rip), %rdx
    0000500c: 	movq	%r14, %rsi
    0000500f: 	movq	%r12, %rdi
    00005012: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20498
    00005017: 	callq	clock@PLT # Offset: 20503
    0000501c: 	movl	iterations(%rip), %ecx
    00005022: 	movq	%rax, start_time(%rip)
    00005029: 	testl	%ecx, %ecx
    0000502b: 	jle	.Ltmp5194 # Offset: 20523
    00005031: 	movdqa	DATAat0x57c30(%rip), %xmm7
    00005039: 	movl	$0x0, 0x1c(%rsp)
    00005041: 	movaps	%xmm7, (%rsp)
    00005045: 	nopl	(%rax) # Size: 3
.Ltmp5197:
    00005048: 	movq	%rbp, %rax
    0000504b: 	pxor	%xmm0, %xmm0
    0000504f: 	nop # Size: 1
.Ltmp5195:
    00005050: 	movdqa	(%rsp), %xmm1
    00005055: 	pand	(%rax), %xmm1
    00005059: 	addq	$0x10, %rax
    0000505d: 	paddw	%xmm1, %xmm0
    00005061: 	cmpq	%rax, %rbx
    00005064: 	jne	.Ltmp5195 # Offset: 20580
    00005066: 	movdqa	%xmm0, %xmm1
    0000506a: 	cvttsd2si	init_value(%rip), %eax
    00005072: 	psrldq	$0x8, %xmm1
    00005077: 	paddw	%xmm1, %xmm0
    0000507b: 	movdqa	%xmm0, %xmm1
    0000507f: 	psrldq	$0x4, %xmm1
    00005084: 	andl	$0x7f, %eax
    00005087: 	imulw	$0x1f40, %ax, %ax
    0000508c: 	paddw	%xmm1, %xmm0
    00005090: 	movdqa	%xmm0, %xmm1
    00005094: 	psrldq	$0x2, %xmm1
    00005099: 	paddw	%xmm1, %xmm0
    0000509d: 	pextrw	$0x0, %xmm0, %edx
    000050a2: 	cmpw	%dx, %ax
    000050a5: 	je	.Ltmp5196 # Offset: 20645
    000050a7: 	movl	current_test(%rip), %edx
    000050ad: 	leaq	DATAat0x571d0(%rip), %rsi
    000050b4: 	movl	$0x1, %edi
    000050b9: 	xorl	%eax, %eax
    000050bb: 	callq	__printf_chk@PLT # Offset: 20667
    000050c0: 	movl	iterations(%rip), %ecx
.Ltmp5196:
    000050c6: 	addl	$0x1, 0x1c(%rsp)
    000050cb: 	movl	0x1c(%rsp), %eax
    000050cf: 	cmpl	%ecx, %eax
    000050d1: 	jl	.Ltmp5197 # Offset: 20689
.Ltmp5194:
    000050d7: 	movq	%r12, %rsi
    000050da: 	movq	%r15, %rdi
    000050dd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 20701
    000050e2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000050e9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000050f0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000050f7: 	je	.Ltmp5198 # Offset: 20727
.Ltmp5266:
    000050fd: 	movq	-0x20(%rax), %rdi
    00005101: 	movq	%rdi, (%rsp)
    00005105: 	callq	clock@PLT # Offset: 20741
    0000510a: 	movq	(%rsp), %rdi
    0000510e: 	pxor	%xmm0, %xmm0
    00005112: 	movq	%rax, end_time(%rip)
    00005119: 	subq	start_time(%rip), %rax
    00005120: 	cvtsi2sd	%rax, %xmm0
    00005125: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000512d: 	callq	_Z13record_resultdPKc # Offset: 20781
    00005132: 	movq	0xa0(%rsp), %rdi
    0000513a: 	cmpq	%r13, %rdi
    0000513d: 	je	.Ltmp5199 # Offset: 20797
    0000513f: 	movq	0xb0(%rsp), %rax
    00005147: 	leaq	0x1(%rax), %rsi
    0000514b: 	callq	_ZdlPvm@PLT # Offset: 20811
.Ltmp5199:
    00005150: 	leaq	DATAat0x578a0(%rip), %rdx
    00005157: 	movq	%r14, %rsi
    0000515a: 	movq	%r12, %rdi
    0000515d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20829
    00005162: 	movq	%r12, %rdx
    00005165: 	movl	$0x1f40, %esi
    0000516a: 	movq	%rbp, %rdi
    0000516d: 	callq	_Z13test_constantIt12and_constantItLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 20845
    00005172: 	movq	0xa0(%rsp), %rdi
    0000517a: 	cmpq	%r13, %rdi
    0000517d: 	je	.Ltmp5200 # Offset: 20861
    0000517f: 	movq	0xb0(%rsp), %rax
    00005187: 	leaq	0x1(%rax), %rsi
    0000518b: 	callq	_ZdlPvm@PLT # Offset: 20875
.Ltmp5200:
    00005190: 	leaq	DATAat0x578a9(%rip), %rdx
    00005197: 	movq	%r14, %rsi
    0000519a: 	movq	%r12, %rdi
    0000519d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20893
    000051a2: 	callq	clock@PLT # Offset: 20898
    000051a7: 	movl	iterations(%rip), %ecx
    000051ad: 	movq	%rax, start_time(%rip)
    000051b4: 	testl	%ecx, %ecx
    000051b6: 	jle	.Ltmp5201 # Offset: 20918
    000051bc: 	movdqa	DATAat0x57be0(%rip), %xmm3
    000051c4: 	movl	$0x0, 0x1c(%rsp)
    000051cc: 	movaps	%xmm3, (%rsp)
.Ltmp5204:
    000051d0: 	movq	%rbp, %rax
    000051d3: 	pxor	%xmm0, %xmm0
    000051d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5202:
    000051e0: 	movdqa	(%rsp), %xmm1
    000051e5: 	pand	(%rax), %xmm1
    000051e9: 	addq	$0x10, %rax
    000051ed: 	paddw	%xmm1, %xmm0
    000051f1: 	cmpq	%rbx, %rax
    000051f4: 	jne	.Ltmp5202 # Offset: 20980
    000051f6: 	movdqa	%xmm0, %xmm1
    000051fa: 	cvttsd2si	init_value(%rip), %eax
    00005202: 	psrldq	$0x8, %xmm1
    00005207: 	paddw	%xmm1, %xmm0
    0000520b: 	movdqa	%xmm0, %xmm1
    0000520f: 	psrldq	$0x4, %xmm1
    00005214: 	movzbl	%al, %eax
    00005217: 	imulw	$0x1f40, %ax, %ax
    0000521c: 	paddw	%xmm1, %xmm0
    00005220: 	movdqa	%xmm0, %xmm1
    00005224: 	psrldq	$0x2, %xmm1
    00005229: 	paddw	%xmm1, %xmm0
    0000522d: 	pextrw	$0x0, %xmm0, %edx
    00005232: 	cmpw	%dx, %ax
    00005235: 	je	.Ltmp5203 # Offset: 21045
    00005237: 	movl	current_test(%rip), %edx
    0000523d: 	leaq	DATAat0x571d0(%rip), %rsi
    00005244: 	movl	$0x1, %edi
    00005249: 	xorl	%eax, %eax
    0000524b: 	callq	__printf_chk@PLT # Offset: 21067
    00005250: 	movl	iterations(%rip), %ecx
.Ltmp5203:
    00005256: 	addl	$0x1, 0x1c(%rsp)
    0000525b: 	movl	0x1c(%rsp), %eax
    0000525f: 	cmpl	%ecx, %eax
    00005261: 	jl	.Ltmp5204 # Offset: 21089
.Ltmp5201:
    00005267: 	movq	%r12, %rsi
    0000526a: 	movq	%r15, %rdi
    0000526d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 21101
    00005272: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005279: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005280: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005287: 	je	.Ltmp5205 # Offset: 21127
.Ltmp5265:
    0000528d: 	movq	-0x20(%rax), %rdi
    00005291: 	movq	%rdi, (%rsp)
    00005295: 	callq	clock@PLT # Offset: 21141
    0000529a: 	movq	(%rsp), %rdi
    0000529e: 	pxor	%xmm0, %xmm0
    000052a2: 	movq	%rax, end_time(%rip)
    000052a9: 	subq	start_time(%rip), %rax
    000052b0: 	cvtsi2sd	%rax, %xmm0
    000052b5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000052bd: 	callq	_Z13record_resultdPKc # Offset: 21181
    000052c2: 	movq	0xa0(%rsp), %rdi
    000052ca: 	cmpq	%r13, %rdi
    000052cd: 	je	.Ltmp5206 # Offset: 21197
    000052cf: 	movq	0xb0(%rsp), %rax
    000052d7: 	leaq	0x1(%rax), %rsi
    000052db: 	callq	_ZdlPvm@PLT # Offset: 21211
.Ltmp5206:
    000052e0: 	leaq	DATAat0x578bc(%rip), %rdx
    000052e7: 	movq	%r14, %rsi
    000052ea: 	movq	%r12, %rdi
    000052ed: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21229
    000052f2: 	movq	%r12, %rdx
    000052f5: 	movl	$0x1f40, %esi
    000052fa: 	movq	%rbp, %rdi
    000052fd: 	callq	_Z13test_constantIt14and_remainder2ItLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 21245
    00005302: 	movq	0xa0(%rsp), %rdi
    0000530a: 	cmpq	%r13, %rdi
    0000530d: 	je	.Ltmp5207 # Offset: 21261
    0000530f: 	movq	0xb0(%rsp), %rax
    00005317: 	leaq	0x1(%rax), %rsi
    0000531b: 	callq	_ZdlPvm@PLT # Offset: 21275
.Ltmp5207:
    00005320: 	leaq	DATAat0x578d0(%rip), %rdx
    00005327: 	movq	%r14, %rsi
    0000532a: 	movq	%r12, %rdi
    0000532d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21293
    00005332: 	callq	clock@PLT # Offset: 21298
    00005337: 	movl	iterations(%rip), %ecx
    0000533d: 	movq	%rax, start_time(%rip)
    00005344: 	testl	%ecx, %ecx
    00005346: 	jle	.Ltmp5208 # Offset: 21318
    0000534c: 	movdqa	DATAat0x57be0(%rip), %xmm4
    00005354: 	movl	$0x0, 0x1c(%rsp)
    0000535c: 	movaps	%xmm4, (%rsp)
.Ltmp5211:
    00005360: 	movq	%rbp, %rax
    00005363: 	pxor	%xmm0, %xmm0
    00005367: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5209:
    00005370: 	movdqa	(%rsp), %xmm1
    00005375: 	pand	(%rax), %xmm1
    00005379: 	addq	$0x10, %rax
    0000537d: 	paddw	%xmm1, %xmm0
    00005381: 	cmpq	%rax, %rbx
    00005384: 	jne	.Ltmp5209 # Offset: 21380
    00005386: 	movdqa	%xmm0, %xmm1
    0000538a: 	cvttsd2si	init_value(%rip), %eax
    00005392: 	psrldq	$0x8, %xmm1
    00005397: 	paddw	%xmm1, %xmm0
    0000539b: 	movdqa	%xmm0, %xmm1
    0000539f: 	psrldq	$0x4, %xmm1
    000053a4: 	movzbl	%al, %eax
    000053a7: 	imulw	$0x1f40, %ax, %ax
    000053ac: 	paddw	%xmm1, %xmm0
    000053b0: 	movdqa	%xmm0, %xmm1
    000053b4: 	psrldq	$0x2, %xmm1
    000053b9: 	paddw	%xmm1, %xmm0
    000053bd: 	pextrw	$0x0, %xmm0, %edx
    000053c2: 	cmpw	%dx, %ax
    000053c5: 	je	.Ltmp5210 # Offset: 21445
    000053c7: 	movl	current_test(%rip), %edx
    000053cd: 	leaq	DATAat0x571d0(%rip), %rsi
    000053d4: 	movl	$0x1, %edi
    000053d9: 	xorl	%eax, %eax
    000053db: 	callq	__printf_chk@PLT # Offset: 21467
    000053e0: 	movl	iterations(%rip), %ecx
.Ltmp5210:
    000053e6: 	addl	$0x1, 0x1c(%rsp)
    000053eb: 	movl	0x1c(%rsp), %eax
    000053ef: 	cmpl	%ecx, %eax
    000053f1: 	jl	.Ltmp5211 # Offset: 21489
.Ltmp5208:
    000053f7: 	movq	%r12, %rsi
    000053fa: 	movq	%r15, %rdi
    000053fd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 21501
    00005402: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005409: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005410: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005417: 	je	.Ltmp5212 # Offset: 21527
.Ltmp5264:
    0000541d: 	movq	-0x20(%rax), %rdi
    00005421: 	movq	%rdi, (%rsp)
    00005425: 	callq	clock@PLT # Offset: 21541
    0000542a: 	movq	(%rsp), %rdi
    0000542e: 	pxor	%xmm0, %xmm0
    00005432: 	movq	%rax, end_time(%rip)
    00005439: 	subq	start_time(%rip), %rax
    00005440: 	cvtsi2sd	%rax, %xmm0
    00005445: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000544d: 	callq	_Z13record_resultdPKc # Offset: 21581
    00005452: 	movq	0xa0(%rsp), %rdi
    0000545a: 	cmpq	%r13, %rdi
    0000545d: 	je	.Ltmp5213 # Offset: 21597
    0000545f: 	movq	0xb0(%rsp), %rax
    00005467: 	leaq	0x1(%rax), %rsi
    0000546b: 	callq	_ZdlPvm@PLT # Offset: 21611
.Ltmp5213:
    00005470: 	leaq	DATAat0x578e9(%rip), %rdx
    00005477: 	movq	%r14, %rsi
    0000547a: 	movq	%r12, %rdi
    0000547d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21629
    00005482: 	movq	%r12, %rcx
    00005485: 	movl	$0x100, %edx
    0000548a: 	movl	$0x1f40, %esi
    0000548f: 	movq	%rbp, %rdi
    00005492: 	callq	_Z14test_variable1It25custom_remainder_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 21650
    00005497: 	movq	0xa0(%rsp), %rdi
    0000549f: 	cmpq	%r13, %rdi
    000054a2: 	je	.Ltmp5214 # Offset: 21666
    000054a4: 	movq	0xb0(%rsp), %rax
    000054ac: 	leaq	0x1(%rax), %rsi
    000054b0: 	callq	_ZdlPvm@PLT # Offset: 21680
.Ltmp5214:
    000054b5: 	leaq	DATAat0x57904(%rip), %rdx
    000054bc: 	movq	%r14, %rsi
    000054bf: 	movq	%r12, %rdi
    000054c2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21698
    000054c7: 	callq	clock@PLT # Offset: 21703
    000054cc: 	movl	iterations(%rip), %ecx
    000054d2: 	movq	%rax, start_time(%rip)
    000054d9: 	testl	%ecx, %ecx
    000054db: 	jle	.Ltmp5215 # Offset: 21723
    000054e1: 	movdqa	DATAat0x57be0(%rip), %xmm5
    000054e9: 	movl	$0x0, 0x1c(%rsp)
    000054f1: 	movaps	%xmm5, (%rsp)
    000054f5: 	nopl	(%rax) # Size: 3
.Ltmp5218:
    000054f8: 	movq	%rbp, %rax
    000054fb: 	pxor	%xmm0, %xmm0
    000054ff: 	nop # Size: 1
.Ltmp5216:
    00005500: 	movdqa	(%rsp), %xmm1
    00005505: 	pand	(%rax), %xmm1
    00005509: 	addq	$0x10, %rax
    0000550d: 	paddw	%xmm1, %xmm0
    00005511: 	cmpq	%rbx, %rax
    00005514: 	jne	.Ltmp5216 # Offset: 21780
    00005516: 	movdqa	%xmm0, %xmm1
    0000551a: 	cvttsd2si	init_value(%rip), %eax
    00005522: 	psrldq	$0x8, %xmm1
    00005527: 	paddw	%xmm1, %xmm0
    0000552b: 	movdqa	%xmm0, %xmm1
    0000552f: 	psrldq	$0x4, %xmm1
    00005534: 	movzbl	%al, %eax
    00005537: 	imulw	$0x1f40, %ax, %ax
    0000553c: 	paddw	%xmm1, %xmm0
    00005540: 	movdqa	%xmm0, %xmm1
    00005544: 	psrldq	$0x2, %xmm1
    00005549: 	paddw	%xmm1, %xmm0
    0000554d: 	pextrw	$0x0, %xmm0, %edx
    00005552: 	cmpw	%dx, %ax
    00005555: 	je	.Ltmp5217 # Offset: 21845
    00005557: 	movl	current_test(%rip), %edx
    0000555d: 	leaq	DATAat0x571d0(%rip), %rsi
    00005564: 	movl	$0x1, %edi
    00005569: 	xorl	%eax, %eax
    0000556b: 	callq	__printf_chk@PLT # Offset: 21867
    00005570: 	movl	iterations(%rip), %ecx
.Ltmp5217:
    00005576: 	addl	$0x1, 0x1c(%rsp)
    0000557b: 	movl	0x1c(%rsp), %eax
    0000557f: 	cmpl	%ecx, %eax
    00005581: 	jl	.Ltmp5218 # Offset: 21889
.Ltmp5215:
    00005587: 	movq	%r12, %rsi
    0000558a: 	movq	%r15, %rdi
    0000558d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 21901
    00005592: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005599: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000055a0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000055a7: 	je	.Ltmp5219 # Offset: 21927
.Ltmp5263:
    000055ad: 	movq	-0x20(%rax), %rdi
    000055b1: 	movq	%rdi, (%rsp)
    000055b5: 	callq	clock@PLT # Offset: 21941
    000055ba: 	movq	(%rsp), %rdi
    000055be: 	pxor	%xmm0, %xmm0
    000055c2: 	movq	%rax, end_time(%rip)
    000055c9: 	subq	start_time(%rip), %rax
    000055d0: 	cvtsi2sd	%rax, %xmm0
    000055d5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000055dd: 	callq	_Z13record_resultdPKc # Offset: 21981
    000055e2: 	movq	0xa0(%rsp), %rdi
    000055ea: 	cmpq	%r13, %rdi
    000055ed: 	je	.Ltmp5220 # Offset: 21997
    000055ef: 	movq	0xb0(%rsp), %rax
    000055f7: 	leaq	0x1(%rax), %rsi
    000055fb: 	callq	_ZdlPvm@PLT # Offset: 22011
.Ltmp5220:
    00005600: 	leaq	DATAat0x5791f(%rip), %rdx
    00005607: 	movq	%r14, %rsi
    0000560a: 	movq	%r12, %rdi
    0000560d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22029
    00005612: 	callq	clock@PLT # Offset: 22034
    00005617: 	movl	iterations(%rip), %ecx
    0000561d: 	movq	%rax, start_time(%rip)
    00005624: 	testl	%ecx, %ecx
    00005626: 	jle	.Ltmp5221 # Offset: 22054
    0000562c: 	movdqa	DATAat0x57eb0(%rip), %xmm6
    00005634: 	movl	$0x0, 0x1c(%rsp)
    0000563c: 	movaps	%xmm6, (%rsp)
.Ltmp5224:
    00005640: 	movq	%rbp, %rax
    00005643: 	pxor	%xmm0, %xmm0
    00005647: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5222:
    00005650: 	movdqa	(%rsp), %xmm1
    00005655: 	pand	(%rax), %xmm1
    00005659: 	addq	$0x10, %rax
    0000565d: 	paddw	%xmm1, %xmm0
    00005661: 	cmpq	%rax, %rbx
    00005664: 	jne	.Ltmp5222 # Offset: 22116
    00005666: 	movdqa	%xmm0, %xmm1
    0000566a: 	cvttsd2si	init_value(%rip), %eax
    00005672: 	psrldq	$0x8, %xmm1
    00005677: 	paddw	%xmm1, %xmm0
    0000567b: 	movdqa	%xmm0, %xmm1
    0000567f: 	psrldq	$0x4, %xmm1
    00005684: 	andw	$0x3ff, %ax
    00005688: 	imulw	$0x1f40, %ax, %ax
    0000568d: 	paddw	%xmm1, %xmm0
    00005691: 	movdqa	%xmm0, %xmm1
    00005695: 	psrldq	$0x2, %xmm1
    0000569a: 	paddw	%xmm1, %xmm0
    0000569e: 	pextrw	$0x0, %xmm0, %edx
    000056a3: 	cmpw	%dx, %ax
    000056a6: 	je	.Ltmp5223 # Offset: 22182
    000056a8: 	movl	current_test(%rip), %edx
    000056ae: 	leaq	DATAat0x571d0(%rip), %rsi
    000056b5: 	movl	$0x1, %edi
    000056ba: 	xorl	%eax, %eax
    000056bc: 	callq	__printf_chk@PLT # Offset: 22204
    000056c1: 	movl	iterations(%rip), %ecx
.Ltmp5223:
    000056c7: 	addl	$0x1, 0x1c(%rsp)
    000056cc: 	movl	0x1c(%rsp), %eax
    000056d0: 	cmpl	%ecx, %eax
    000056d2: 	jl	.Ltmp5224 # Offset: 22226
.Ltmp5221:
    000056d8: 	movq	%r12, %rsi
    000056db: 	movq	%r15, %rdi
    000056de: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 22238
    000056e3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000056ea: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000056f1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000056f8: 	je	.Ltmp5225 # Offset: 22264
.Ltmp5262:
    000056fe: 	movq	-0x20(%rax), %rdi
    00005702: 	movq	%rdi, (%rsp)
    00005706: 	callq	clock@PLT # Offset: 22278
    0000570b: 	movq	(%rsp), %rdi
    0000570f: 	pxor	%xmm0, %xmm0
    00005713: 	movq	%rax, end_time(%rip)
    0000571a: 	subq	start_time(%rip), %rax
    00005721: 	cvtsi2sd	%rax, %xmm0
    00005726: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000572e: 	callq	_Z13record_resultdPKc # Offset: 22318
    00005733: 	movq	0xa0(%rsp), %rdi
    0000573b: 	cmpq	%r13, %rdi
    0000573e: 	je	.Ltmp5226 # Offset: 22334
    00005740: 	movq	0xb0(%rsp), %rax
    00005748: 	leaq	0x1(%rax), %rsi
    0000574c: 	callq	_ZdlPvm@PLT # Offset: 22348
.Ltmp5226:
    00005751: 	leaq	DATAat0x57929(%rip), %rdx
    00005758: 	movq	%r14, %rsi
    0000575b: 	movq	%r12, %rdi
    0000575e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22366
    00005763: 	callq	clock@PLT # Offset: 22371
    00005768: 	movl	iterations(%rip), %ecx
    0000576e: 	movq	%rax, start_time(%rip)
    00005775: 	testl	%ecx, %ecx
    00005777: 	jle	.Ltmp5227 # Offset: 22391
    0000577d: 	movdqa	DATAat0x57eb0(%rip), %xmm7
    00005785: 	movl	$0x0, 0x1c(%rsp)
    0000578d: 	movaps	%xmm7, (%rsp)
    00005791: 	nopl	(%rax) # Size: 7
.Ltmp5230:
    00005798: 	movq	%rbp, %rax
    0000579b: 	pxor	%xmm0, %xmm0
    0000579f: 	nop # Size: 1
.Ltmp5228:
    000057a0: 	movdqa	(%rsp), %xmm1
    000057a5: 	pand	(%rax), %xmm1
    000057a9: 	addq	$0x10, %rax
    000057ad: 	paddw	%xmm1, %xmm0
    000057b1: 	cmpq	%rbx, %rax
    000057b4: 	jne	.Ltmp5228 # Offset: 22452
    000057b6: 	movdqa	%xmm0, %xmm1
    000057ba: 	cvttsd2si	init_value(%rip), %eax
    000057c2: 	psrldq	$0x8, %xmm1
    000057c7: 	paddw	%xmm1, %xmm0
    000057cb: 	movdqa	%xmm0, %xmm1
    000057cf: 	psrldq	$0x4, %xmm1
    000057d4: 	andw	$0x3ff, %ax
    000057d8: 	imulw	$0x1f40, %ax, %ax
    000057dd: 	paddw	%xmm1, %xmm0
    000057e1: 	movdqa	%xmm0, %xmm1
    000057e5: 	psrldq	$0x2, %xmm1
    000057ea: 	paddw	%xmm1, %xmm0
    000057ee: 	pextrw	$0x0, %xmm0, %edx
    000057f3: 	cmpw	%dx, %ax
    000057f6: 	je	.Ltmp5229 # Offset: 22518
    000057f8: 	movl	current_test(%rip), %edx
    000057fe: 	leaq	DATAat0x571d0(%rip), %rsi
    00005805: 	movl	$0x1, %edi
    0000580a: 	xorl	%eax, %eax
    0000580c: 	callq	__printf_chk@PLT # Offset: 22540
    00005811: 	movl	iterations(%rip), %ecx
.Ltmp5229:
    00005817: 	addl	$0x1, 0x1c(%rsp)
    0000581c: 	movl	0x1c(%rsp), %eax
    00005820: 	cmpl	%ecx, %eax
    00005822: 	jl	.Ltmp5230 # Offset: 22562
.Ltmp5227:
    00005828: 	movq	%r12, %rsi
    0000582b: 	movq	%r15, %rdi
    0000582e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 22574
    00005833: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000583a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005841: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005848: 	je	.Ltmp5231 # Offset: 22600
.Ltmp5261:
    0000584e: 	movq	-0x20(%rax), %rdi
    00005852: 	movq	%rdi, (%rsp)
    00005856: 	callq	clock@PLT # Offset: 22614
    0000585b: 	movq	(%rsp), %rdi
    0000585f: 	pxor	%xmm0, %xmm0
    00005863: 	movq	%rax, end_time(%rip)
    0000586a: 	subq	start_time(%rip), %rax
    00005871: 	cvtsi2sd	%rax, %xmm0
    00005876: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000587e: 	callq	_Z13record_resultdPKc # Offset: 22654
    00005883: 	movq	0xa0(%rsp), %rdi
    0000588b: 	cmpq	%r13, %rdi
    0000588e: 	je	.Ltmp5232 # Offset: 22670
    00005890: 	movq	0xb0(%rsp), %rax
    00005898: 	leaq	0x1(%rax), %rsi
    0000589c: 	callq	_ZdlPvm@PLT # Offset: 22684
.Ltmp5232:
    000058a1: 	leaq	DATAat0x5793d(%rip), %rdx
    000058a8: 	movq	%r14, %rsi
    000058ab: 	movq	%r12, %rdi
    000058ae: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22702
    000058b3: 	callq	clock@PLT # Offset: 22707
    000058b8: 	movl	iterations(%rip), %ecx
    000058be: 	movq	%rax, start_time(%rip)
    000058c5: 	testl	%ecx, %ecx
    000058c7: 	jle	.Ltmp5233 # Offset: 22727
    000058cd: 	movdqa	DATAat0x57eb0(%rip), %xmm3
    000058d5: 	movl	$0x0, 0x1c(%rsp)
    000058dd: 	movaps	%xmm3, (%rsp)
    000058e1: 	nopl	(%rax) # Size: 7
.Ltmp5236:
    000058e8: 	movq	%rbp, %rax
    000058eb: 	pxor	%xmm0, %xmm0
    000058ef: 	nop # Size: 1
.Ltmp5234:
    000058f0: 	movdqa	(%rsp), %xmm1
    000058f5: 	pand	(%rax), %xmm1
    000058f9: 	addq	$0x10, %rax
    000058fd: 	paddw	%xmm1, %xmm0
    00005901: 	cmpq	%rax, %rbx
    00005904: 	jne	.Ltmp5234 # Offset: 22788
    00005906: 	movdqa	%xmm0, %xmm1
    0000590a: 	cvttsd2si	init_value(%rip), %eax
    00005912: 	psrldq	$0x8, %xmm1
    00005917: 	paddw	%xmm1, %xmm0
    0000591b: 	movdqa	%xmm0, %xmm1
    0000591f: 	psrldq	$0x4, %xmm1
    00005924: 	andw	$0x3ff, %ax
    00005928: 	imulw	$0x1f40, %ax, %ax
    0000592d: 	paddw	%xmm1, %xmm0
    00005931: 	movdqa	%xmm0, %xmm1
    00005935: 	psrldq	$0x2, %xmm1
    0000593a: 	paddw	%xmm1, %xmm0
    0000593e: 	pextrw	$0x0, %xmm0, %edx
    00005943: 	cmpw	%dx, %ax
    00005946: 	je	.Ltmp5235 # Offset: 22854
    00005948: 	movl	current_test(%rip), %edx
    0000594e: 	leaq	DATAat0x571d0(%rip), %rsi
    00005955: 	movl	$0x1, %edi
    0000595a: 	xorl	%eax, %eax
    0000595c: 	callq	__printf_chk@PLT # Offset: 22876
    00005961: 	movl	iterations(%rip), %ecx
.Ltmp5235:
    00005967: 	addl	$0x1, 0x1c(%rsp)
    0000596c: 	movl	0x1c(%rsp), %eax
    00005970: 	cmpl	%ecx, %eax
    00005972: 	jl	.Ltmp5236 # Offset: 22898
.Ltmp5233:
    00005978: 	movq	%r12, %rsi
    0000597b: 	movq	%r15, %rdi
    0000597e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 22910
    00005983: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000598a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005991: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005998: 	je	.Ltmp5237 # Offset: 22936
.Ltmp5260:
    0000599e: 	movq	-0x20(%rax), %rdi
    000059a2: 	movq	%rdi, (%rsp)
    000059a6: 	callq	clock@PLT # Offset: 22950
    000059ab: 	movq	(%rsp), %rdi
    000059af: 	pxor	%xmm0, %xmm0
    000059b3: 	movq	%rax, end_time(%rip)
    000059ba: 	subq	start_time(%rip), %rax
    000059c1: 	cvtsi2sd	%rax, %xmm0
    000059c6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000059ce: 	callq	_Z13record_resultdPKc # Offset: 22990
    000059d3: 	movq	0xa0(%rsp), %rdi
    000059db: 	cmpq	%r13, %rdi
    000059de: 	je	.Ltmp5238 # Offset: 23006
    000059e0: 	movq	0xb0(%rsp), %rax
    000059e8: 	leaq	0x1(%rax), %rsi
    000059ec: 	callq	_ZdlPvm@PLT # Offset: 23020
.Ltmp5238:
    000059f1: 	leaq	DATAat0x57952(%rip), %rdx
    000059f8: 	movq	%r14, %rsi
    000059fb: 	movq	%r12, %rdi
    000059fe: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 23038
    00005a03: 	callq	clock@PLT # Offset: 23043
    00005a08: 	movl	iterations(%rip), %ecx
    00005a0e: 	movq	%rax, start_time(%rip)
    00005a15: 	testl	%ecx, %ecx
    00005a17: 	jle	.Ltmp5239 # Offset: 23063
    00005a1d: 	movdqa	DATAat0x57eb0(%rip), %xmm4
    00005a25: 	movl	$0x0, 0x1c(%rsp)
    00005a2d: 	movaps	%xmm4, (%rsp)
    00005a31: 	nopl	(%rax) # Size: 7
.Ltmp5242:
    00005a38: 	movq	%rbp, %rax
    00005a3b: 	pxor	%xmm0, %xmm0
    00005a3f: 	nop # Size: 1
.Ltmp5240:
    00005a40: 	movdqa	(%rsp), %xmm1
    00005a45: 	pand	(%rax), %xmm1
    00005a49: 	addq	$0x10, %rax
    00005a4d: 	paddw	%xmm1, %xmm0
    00005a51: 	cmpq	%rbx, %rax
    00005a54: 	jne	.Ltmp5240 # Offset: 23124
    00005a56: 	movdqa	%xmm0, %xmm1
    00005a5a: 	cvttsd2si	init_value(%rip), %eax
    00005a62: 	psrldq	$0x8, %xmm1
    00005a67: 	paddw	%xmm1, %xmm0
    00005a6b: 	movdqa	%xmm0, %xmm1
    00005a6f: 	psrldq	$0x4, %xmm1
    00005a74: 	andw	$0x3ff, %ax
    00005a78: 	imulw	$0x1f40, %ax, %ax
    00005a7d: 	paddw	%xmm1, %xmm0
    00005a81: 	movdqa	%xmm0, %xmm1
    00005a85: 	psrldq	$0x2, %xmm1
    00005a8a: 	paddw	%xmm1, %xmm0
    00005a8e: 	pextrw	$0x0, %xmm0, %edx
    00005a93: 	cmpw	%dx, %ax
    00005a96: 	je	.Ltmp5241 # Offset: 23190
    00005a98: 	movl	current_test(%rip), %edx
    00005a9e: 	leaq	DATAat0x571d0(%rip), %rsi
    00005aa5: 	movl	$0x1, %edi
    00005aaa: 	xorl	%eax, %eax
    00005aac: 	callq	__printf_chk@PLT # Offset: 23212
    00005ab1: 	movl	iterations(%rip), %ecx
.Ltmp5241:
    00005ab7: 	addl	$0x1, 0x1c(%rsp)
    00005abc: 	movl	0x1c(%rsp), %eax
    00005ac0: 	cmpl	%ecx, %eax
    00005ac2: 	jl	.Ltmp5242 # Offset: 23234
.Ltmp5239:
    00005ac8: 	movq	%r12, %rsi
    00005acb: 	movq	%r15, %rdi
    00005ace: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 23246
    00005ad3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005ada: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005ae1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005ae8: 	je	.Ltmp5243 # Offset: 23272
.Ltmp5259:
    00005aee: 	movq	-0x20(%rax), %rdi
    00005af2: 	movq	%rdi, (%rsp)
    00005af6: 	callq	clock@PLT # Offset: 23286
    00005afb: 	movq	(%rsp), %rdi
    00005aff: 	pxor	%xmm0, %xmm0
    00005b03: 	movq	%rax, end_time(%rip)
    00005b0a: 	subq	start_time(%rip), %rax
    00005b11: 	cvtsi2sd	%rax, %xmm0
    00005b16: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00005b1e: 	callq	_Z13record_resultdPKc # Offset: 23326
    00005b23: 	movq	0xa0(%rsp), %rdi
    00005b2b: 	cmpq	%r13, %rdi
    00005b2e: 	je	.Ltmp5244 # Offset: 23342
    00005b30: 	movq	0xb0(%rsp), %rax
    00005b38: 	leaq	0x1(%rax), %rsi
    00005b3c: 	callq	_ZdlPvm@PLT # Offset: 23356
.Ltmp5244:
    00005b41: 	leaq	DATAat0x5796c(%rip), %rdx
    00005b48: 	movq	%r14, %rsi
    00005b4b: 	movq	%r12, %rdi
    00005b4e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 23374
    00005b53: 	movq	%r12, %rcx
    00005b56: 	movl	$0x400, %edx
    00005b5b: 	movl	$0x1f40, %esi
    00005b60: 	movq	%rbp, %rdi
    00005b63: 	callq	_Z14test_variable1It25custom_remainder_variableItEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 23395
    00005b68: 	movq	0xa0(%rsp), %rdi
    00005b70: 	cmpq	%r13, %rdi
    00005b73: 	je	.Ltmp5245 # Offset: 23411
    00005b75: 	movq	0xb0(%rsp), %rax
    00005b7d: 	leaq	0x1(%rax), %rsi
    00005b81: 	callq	_ZdlPvm@PLT # Offset: 23425
.Ltmp5245:
    00005b86: 	leaq	DATAat0x57988(%rip), %rdx
    00005b8d: 	movq	%r14, %rsi
    00005b90: 	movq	%r12, %rdi
    00005b93: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 23443
    00005b98: 	callq	clock@PLT # Offset: 23448
    00005b9d: 	movl	iterations(%rip), %ecx
    00005ba3: 	movq	%rax, start_time(%rip)
    00005baa: 	testl	%ecx, %ecx
    00005bac: 	jle	.Ltmp5246 # Offset: 23468
    00005bb2: 	movdqa	DATAat0x57eb0(%rip), %xmm5
    00005bba: 	movl	$0x0, 0x1c(%rsp)
    00005bc2: 	movaps	%xmm5, (%rsp)
    00005bc6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp5249:
    00005bd0: 	movq	%rbp, %rax
    00005bd3: 	pxor	%xmm0, %xmm0
    00005bd7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5247:
    00005be0: 	movdqa	(%rsp), %xmm1
    00005be5: 	pand	(%rax), %xmm1
    00005be9: 	addq	$0x10, %rax
    00005bed: 	paddw	%xmm1, %xmm0
    00005bf1: 	cmpq	%rbx, %rax
    00005bf4: 	jne	.Ltmp5247 # Offset: 23540
    00005bf6: 	movdqa	%xmm0, %xmm1
    00005bfa: 	cvttsd2si	init_value(%rip), %eax
    00005c02: 	psrldq	$0x8, %xmm1
    00005c07: 	paddw	%xmm1, %xmm0
    00005c0b: 	movdqa	%xmm0, %xmm1
    00005c0f: 	psrldq	$0x4, %xmm1
    00005c14: 	andw	$0x3ff, %ax
    00005c18: 	imulw	$0x1f40, %ax, %ax
    00005c1d: 	paddw	%xmm1, %xmm0
    00005c21: 	movdqa	%xmm0, %xmm1
    00005c25: 	psrldq	$0x2, %xmm1
    00005c2a: 	paddw	%xmm1, %xmm0
    00005c2e: 	pextrw	$0x0, %xmm0, %edx
    00005c33: 	cmpw	%dx, %ax
    00005c36: 	je	.Ltmp5248 # Offset: 23606
    00005c38: 	movl	current_test(%rip), %edx
    00005c3e: 	leaq	DATAat0x571d0(%rip), %rsi
    00005c45: 	movl	$0x1, %edi
    00005c4a: 	xorl	%eax, %eax
    00005c4c: 	callq	__printf_chk@PLT # Offset: 23628
    00005c51: 	movl	iterations(%rip), %ecx
.Ltmp5248:
    00005c57: 	addl	$0x1, 0x1c(%rsp)
    00005c5c: 	movl	0x1c(%rsp), %eax
    00005c60: 	cmpl	%ecx, %eax
    00005c62: 	jl	.Ltmp5249 # Offset: 23650
.Ltmp5246:
    00005c68: 	movq	%r12, %rsi
    00005c6b: 	movq	%r15, %rdi
    00005c6e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 23662
    00005c73: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005c7a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005c81: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005c88: 	je	.Ltmp5250 # Offset: 23688
.Ltmp5258:
    00005c8e: 	movq	-0x20(%rax), %rbp
    00005c92: 	callq	clock@PLT # Offset: 23698
    00005c97: 	pxor	%xmm0, %xmm0
    00005c9b: 	movq	%rax, end_time(%rip)
    00005ca2: 	movq	%rbp, %rdi
    00005ca5: 	subq	start_time(%rip), %rax
    00005cac: 	cvtsi2sd	%rax, %xmm0
    00005cb1: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00005cb9: 	callq	_Z13record_resultdPKc # Offset: 23737
    00005cbe: 	movq	0xa0(%rsp), %rdi
    00005cc6: 	cmpq	%r13, %rdi
    00005cc9: 	je	.Ltmp5251 # Offset: 23753
    00005ccb: 	movq	0xb0(%rsp), %rax
    00005cd3: 	leaq	0x1(%rax), %rsi
    00005cd7: 	callq	_ZdlPvm@PLT # Offset: 23767
.Ltmp5251:
    00005cdc: 	leaq	DATAat0x579a4(%rip), %rdx
    00005ce3: 	movq	%r14, %rsi
    00005ce6: 	movq	%r12, %rdi
    00005ce9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 23785
    00005cee: 	movl	iterations(%rip), %edx
    00005cf4: 	xorl	%r8d, %r8d
    00005cf7: 	xorl	%ecx, %ecx
    00005cf9: 	movl	$0x1f40, %esi
    00005cfe: 	movq	0xa0(%rsp), %rdi
    00005d06: 	callq	_Z9summarizePKciiii # Offset: 23814
    00005d0b: 	movq	0xa0(%rsp), %rdi
    00005d13: 	cmpq	%r13, %rdi
    00005d16: 	je	.Ltmp5252 # Offset: 23830
    00005d18: 	movq	0xb0(%rsp), %rax
    00005d20: 	leaq	0x1(%rax), %rsi
    00005d24: 	callq	_ZdlPvm@PLT # Offset: 23844
.Ltmp5252:
    00005d29: 	movq	0x80(%rsp), %rdi
    00005d31: 	leaq	0x90(%rsp), %rax
    00005d39: 	cmpq	%rax, %rdi
    00005d3c: 	je	.Ltmp5253 # Offset: 23868
    00005d3e: 	movq	0x90(%rsp), %rax
    00005d46: 	leaq	0x1(%rax), %rsi
    00005d4a: 	callq	_ZdlPvm@PLT # Offset: 23882
.Ltmp5253:
    00005d4f: 	movq	0x60(%rsp), %rdi
    00005d54: 	leaq	0x70(%rsp), %rax
    00005d59: 	cmpq	%rax, %rdi
    00005d5c: 	je	.Ltmp5254 # Offset: 23900
    00005d5e: 	movq	0x70(%rsp), %rax
    00005d63: 	leaq	0x1(%rax), %rsi
    00005d67: 	callq	_ZdlPvm@PLT # Offset: 23911
.Ltmp5254:
    00005d6c: 	movq	0x40(%rsp), %rdi
    00005d71: 	leaq	0x50(%rsp), %rax
    00005d76: 	cmpq	%rax, %rdi
    00005d79: 	je	.Ltmp5255 # Offset: 23929
    00005d7b: 	movq	0x50(%rsp), %rax
    00005d80: 	leaq	0x1(%rax), %rsi
    00005d84: 	callq	_ZdlPvm@PLT # Offset: 23940
.Ltmp5255:
    00005d89: 	movq	0x3f48(%rsp), %rax
    00005d91: 	subq	%fs:0x28, %rax
    00005d9a: 	jne	.Ltmp5256 # Offset: 23962
    00005da0: 	addq	$0x3f58, %rsp
    00005da7: 	popq	%rbx
    00005da8: 	popq	%rbp
    00005da9: 	popq	%r12
    00005dab: 	popq	%r13
    00005dad: 	popq	%r14
    00005daf: 	popq	%r15
    00005db1: 	retq # Offset: 23985
.Ltmp4849:
    00005db2: 	movq	-0x8(%rdx), %rax
    00005db6: 	addq	$0x200, %rax
    00005dbc: 	jmp	.Ltmp5257 # Offset: 23996
.Ltmp5250:
    00005dc1: 	movq	-0x8(%rdx), %rax
    00005dc5: 	addq	$0x200, %rax
    00005dcb: 	jmp	.Ltmp5258 # Offset: 24011
.Ltmp5243:
    00005dd0: 	movq	-0x8(%rdx), %rax
    00005dd4: 	addq	$0x200, %rax
    00005dda: 	jmp	.Ltmp5259 # Offset: 24026
.Ltmp5237:
    00005ddf: 	movq	-0x8(%rdx), %rax
    00005de3: 	addq	$0x200, %rax
    00005de9: 	jmp	.Ltmp5260 # Offset: 24041
.Ltmp5231:
    00005dee: 	movq	-0x8(%rdx), %rax
    00005df2: 	addq	$0x200, %rax
    00005df8: 	jmp	.Ltmp5261 # Offset: 24056
.Ltmp5225:
    00005dfd: 	movq	-0x8(%rdx), %rax
    00005e01: 	addq	$0x200, %rax
    00005e07: 	jmp	.Ltmp5262 # Offset: 24071
.Ltmp5219:
    00005e0c: 	movq	-0x8(%rdx), %rax
    00005e10: 	addq	$0x200, %rax
    00005e16: 	jmp	.Ltmp5263 # Offset: 24086
.Ltmp5212:
    00005e1b: 	movq	-0x8(%rdx), %rax
    00005e1f: 	addq	$0x200, %rax
    00005e25: 	jmp	.Ltmp5264 # Offset: 24101
.Ltmp5205:
    00005e2a: 	movq	-0x8(%rdx), %rax
    00005e2e: 	addq	$0x200, %rax
    00005e34: 	jmp	.Ltmp5265 # Offset: 24116
.Ltmp5198:
    00005e39: 	movq	-0x8(%rdx), %rax
    00005e3d: 	addq	$0x200, %rax
    00005e43: 	jmp	.Ltmp5266 # Offset: 24131
.Ltmp5191:
    00005e48: 	movq	-0x8(%rdx), %rax
    00005e4c: 	addq	$0x200, %rax
    00005e52: 	jmp	.Ltmp5267 # Offset: 24146
.Ltmp5183:
    00005e57: 	movq	-0x8(%rdx), %rax
    00005e5b: 	addq	$0x200, %rax
    00005e61: 	jmp	.Ltmp5268 # Offset: 24161
.Ltmp5177:
    00005e66: 	movq	-0x8(%rdx), %rax
    00005e6a: 	addq	$0x200, %rax
    00005e70: 	jmp	.Ltmp5269 # Offset: 24176
.Ltmp5170:
    00005e75: 	movq	-0x8(%rdx), %rax
    00005e79: 	addq	$0x200, %rax
    00005e7f: 	jmp	.Ltmp5270 # Offset: 24191
.Ltmp5164:
    00005e84: 	movq	-0x8(%rdx), %rax
    00005e88: 	addq	$0x200, %rax
    00005e8e: 	jmp	.Ltmp5271 # Offset: 24206
.Ltmp5158:
    00005e93: 	movq	-0x8(%rdx), %rax
    00005e97: 	addq	$0x200, %rax
    00005e9d: 	jmp	.Ltmp5272 # Offset: 24221
.Ltmp5151:
    00005ea2: 	movq	-0x8(%rdx), %rax
    00005ea6: 	addq	$0x200, %rax
    00005eac: 	jmp	.Ltmp5273 # Offset: 24236
.Ltmp5144:
    00005eb1: 	movq	-0x8(%rdx), %rax
    00005eb5: 	addq	$0x200, %rax
    00005ebb: 	jmp	.Ltmp5274 # Offset: 24251
.Ltmp5138:
    00005ec0: 	movq	-0x8(%rdx), %rax
    00005ec4: 	addq	$0x200, %rax
    00005eca: 	jmp	.Ltmp5275 # Offset: 24266
.Ltmp5132:
    00005ecf: 	movq	-0x8(%rdx), %rax
    00005ed3: 	addq	$0x200, %rax
    00005ed9: 	jmp	.Ltmp5276 # Offset: 24281
.Ltmp5126:
    00005ede: 	movq	-0x8(%rdx), %rax
    00005ee2: 	addq	$0x200, %rax
    00005ee8: 	jmp	.Ltmp5277 # Offset: 24296
.Ltmp5120:
    00005eed: 	movq	-0x8(%rdx), %rax
    00005ef1: 	addq	$0x200, %rax
    00005ef7: 	jmp	.Ltmp5278 # Offset: 24311
.Ltmp5113:
    00005efc: 	movq	-0x8(%rdx), %rax
    00005f00: 	addq	$0x200, %rax
    00005f06: 	jmp	.Ltmp5279 # Offset: 24326
.Ltmp5105:
    00005f0b: 	movq	-0x8(%rdx), %rax
    00005f0f: 	addq	$0x200, %rax
    00005f15: 	jmp	.Ltmp5280 # Offset: 24341
.Ltmp5099:
    00005f1a: 	movq	-0x8(%rdx), %rax
    00005f1e: 	addq	$0x200, %rax
    00005f24: 	jmp	.Ltmp5281 # Offset: 24356
.Ltmp5092:
    00005f29: 	movq	-0x8(%rdx), %rax
    00005f2d: 	addq	$0x200, %rax
    00005f33: 	jmp	.Ltmp5282 # Offset: 24371
.Ltmp5086:
    00005f38: 	movq	-0x8(%rdx), %rax
    00005f3c: 	addq	$0x200, %rax
    00005f42: 	jmp	.Ltmp5283 # Offset: 24386
.Ltmp5080:
    00005f47: 	movq	-0x8(%rdx), %rax
    00005f4b: 	addq	$0x200, %rax
    00005f51: 	jmp	.Ltmp5284 # Offset: 24401
.Ltmp5073:
    00005f56: 	movq	-0x8(%rdx), %rax
    00005f5a: 	addq	$0x200, %rax
    00005f60: 	jmp	.Ltmp5285 # Offset: 24416
.Ltmp5066:
    00005f65: 	movq	-0x8(%rdx), %rax
    00005f69: 	addq	$0x200, %rax
    00005f6f: 	jmp	.Ltmp5286 # Offset: 24431
.Ltmp5060:
    00005f74: 	movq	-0x8(%rdx), %rax
    00005f78: 	addq	$0x200, %rax
    00005f7e: 	jmp	.Ltmp5287 # Offset: 24446
.Ltmp5054:
    00005f83: 	movq	-0x8(%rdx), %rax
    00005f87: 	addq	$0x200, %rax
    00005f8d: 	jmp	.Ltmp5288 # Offset: 24461
.Ltmp5048:
    00005f92: 	movq	-0x8(%rdx), %rax
    00005f96: 	addq	$0x200, %rax
    00005f9c: 	jmp	.Ltmp5289 # Offset: 24476
.Ltmp5042:
    00005fa1: 	movq	-0x8(%rdx), %rax
    00005fa5: 	addq	$0x200, %rax
    00005fab: 	jmp	.Ltmp5290 # Offset: 24491
.Ltmp5035:
    00005fb0: 	movq	-0x8(%rdx), %rax
    00005fb4: 	addq	$0x200, %rax
    00005fba: 	jmp	.Ltmp5291 # Offset: 24506
.Ltmp5029:
    00005fbf: 	movq	-0x8(%rdx), %rax
    00005fc3: 	addq	$0x200, %rax
    00005fc9: 	jmp	.Ltmp5292 # Offset: 24521
.Ltmp5023:
    00005fce: 	movq	-0x8(%rdx), %rax
    00005fd2: 	addq	$0x200, %rax
    00005fd8: 	jmp	.Ltmp5293 # Offset: 24536
.Ltmp5017:
    00005fdd: 	movq	-0x8(%rdx), %rax
    00005fe1: 	addq	$0x200, %rax
    00005fe7: 	jmp	.Ltmp5294 # Offset: 24551
.Ltmp5011:
    00005fec: 	movq	-0x8(%rdx), %rax
    00005ff0: 	addq	$0x200, %rax
    00005ff6: 	jmp	.Ltmp5295 # Offset: 24566
.Ltmp5004:
    00005ffb: 	movq	-0x8(%rdx), %rax
    00005fff: 	addq	$0x200, %rax
    00006005: 	jmp	.Ltmp5296 # Offset: 24581
.Ltmp4998:
    0000600a: 	movq	-0x8(%rdx), %rax
    0000600e: 	addq	$0x200, %rax
    00006014: 	jmp	.Ltmp5297 # Offset: 24596
.Ltmp4992:
    00006019: 	movq	-0x8(%rdx), %rax
    0000601d: 	addq	$0x200, %rax
    00006023: 	jmp	.Ltmp5298 # Offset: 24611
.Ltmp4985:
    00006028: 	movq	-0x8(%rdx), %rax
    0000602c: 	addq	$0x200, %rax
    00006032: 	jmp	.Ltmp5299 # Offset: 24626
.Ltmp4979:
    00006037: 	movq	-0x8(%rdx), %rax
    0000603b: 	addq	$0x200, %rax
    00006041: 	jmp	.Ltmp5300 # Offset: 24641
.Ltmp4973:
    00006046: 	movq	-0x8(%rdx), %rax
    0000604a: 	addq	$0x200, %rax
    00006050: 	jmp	.Ltmp5301 # Offset: 24656
.Ltmp4965:
    00006055: 	movq	-0x8(%rdx), %rax
    00006059: 	addq	$0x200, %rax
    0000605f: 	jmp	.Ltmp5302 # Offset: 24671
.Ltmp4959:
    00006064: 	movq	-0x8(%rdx), %rax
    00006068: 	addq	$0x200, %rax
    0000606e: 	jmp	.Ltmp5303 # Offset: 24686
.Ltmp4953:
    00006073: 	movq	-0x8(%rdx), %rax
    00006077: 	addq	$0x200, %rax
    0000607d: 	jmp	.Ltmp5304 # Offset: 24701
.Ltmp4946:
    00006082: 	movq	-0x8(%rdx), %rax
    00006086: 	addq	$0x200, %rax
    0000608c: 	jmp	.Ltmp5305 # Offset: 24716
.Ltmp4939:
    00006091: 	movq	-0x8(%rdx), %rax
    00006095: 	addq	$0x200, %rax
    0000609b: 	jmp	.Ltmp5306 # Offset: 24731
.Ltmp4932:
    000060a0: 	movq	-0x8(%rdx), %rax
    000060a4: 	addq	$0x200, %rax
    000060aa: 	jmp	.Ltmp5307 # Offset: 24746
.Ltmp4925:
    000060af: 	movq	-0x8(%rdx), %rax
    000060b3: 	addq	$0x200, %rax
    000060b9: 	jmp	.Ltmp5308 # Offset: 24761
.Ltmp4919:
    000060be: 	movq	-0x8(%rdx), %rax
    000060c2: 	addq	$0x200, %rax
    000060c8: 	jmp	.Ltmp5309 # Offset: 24776
.Ltmp4913:
    000060cd: 	movq	-0x8(%rdx), %rax
    000060d1: 	addq	$0x200, %rax
    000060d7: 	jmp	.Ltmp5310 # Offset: 24791
.Ltmp4905:
    000060dc: 	movq	-0x8(%rdx), %rax
    000060e0: 	addq	$0x200, %rax
    000060e6: 	jmp	.Ltmp5311 # Offset: 24806
.Ltmp4897:
    000060eb: 	movq	-0x8(%rdx), %rax
    000060ef: 	addq	$0x200, %rax
    000060f5: 	jmp	.Ltmp5312 # Offset: 24821
.Ltmp4890:
    000060fa: 	movq	-0x8(%rdx), %rax
    000060fe: 	addq	$0x200, %rax
    00006104: 	jmp	.Ltmp5313 # Offset: 24836
.Ltmp4883:
    00006109: 	movq	-0x8(%rdx), %rax
    0000610d: 	addq	$0x200, %rax
    00006113: 	jmp	.Ltmp5314 # Offset: 24851
.Ltmp4877:
    00006118: 	movq	-0x8(%rdx), %rax
    0000611c: 	addq	$0x200, %rax
    00006122: 	jmp	.Ltmp5315 # Offset: 24866
.Ltmp4868:
    00006127: 	movq	-0x8(%rdx), %rax
    0000612b: 	addq	$0x200, %rax
    00006131: 	jmp	.Ltmp5316 # Offset: 24881
.Ltmp4861:
    00006136: 	movq	-0x8(%rdx), %rax
    0000613a: 	addq	$0x200, %rax
    00006140: 	jmp	.Ltmp5317 # Offset: 24896
.Ltmp4855:
    00006145: 	movq	-0x8(%rdx), %rax
    00006149: 	addq	$0x200, %rax
    0000614f: 	jmp	.Ltmp5318 # Offset: 24911
.Ltmp5256:
    00006154: 	callq	__stack_chk_fail@PLT # Offset: 24916
    00006159: 	endbr64
    0000615d: 	movq	%rax, %rbp
    00006160: 	jmp	.Ltmp5319 # Offset: 24928
    00006162: 	endbr64
.Ltmp5321:
    00006166: 	movq	%rax, %rbp
    00006169: 	jmp	.Ltmp5320 # Offset: 24937
    0000616b: 	endbr64
    0000616f: 	jmp	.Ltmp5321 # Offset: 24943
    00006171: 	endbr64
    00006175: 	jmp	.Ltmp5321 # Offset: 24949
.Ltmp5372:
    00006177: 	movq	0xa0(%rsp), %rdi
    0000617f: 	cmpq	%r13, %rdi
    00006182: 	je	.Ltmp5322 # Offset: 24962
    00006184: 	movq	0xb0(%rsp), %rax
    0000618c: 	leaq	0x1(%rax), %rsi
    00006190: 	callq	_ZdlPvm@PLT # Offset: 24976
.Ltmp5322:
    00006195: 	movq	0x60(%rsp), %rdi
    0000619a: 	leaq	0x70(%rsp), %rax
    0000619f: 	cmpq	%rax, %rdi
    000061a2: 	jne	.Ltmp5323 # Offset: 24994
.Ltmp5355:
    000061a8: 	movq	%rbx, %rbp
.Ltmp5319:
    000061ab: 	movq	0x40(%rsp), %rdi
    000061b0: 	leaq	0x50(%rsp), %rax
    000061b5: 	cmpq	%rax, %rdi
    000061b8: 	je	.Ltmp5324 # Offset: 25016
    000061ba: 	movq	0x50(%rsp), %rax
    000061bf: 	leaq	0x1(%rax), %rsi
    000061c3: 	callq	_ZdlPvm@PLT # Offset: 25027
.Ltmp5324:
    000061c8: 	movq	%rbp, %rdi
    000061cb: 	callq	_Unwind_Resume@PLT # Offset: 25035
    000061d0: 	endbr64
    000061d4: 	jmp	.Ltmp5321 # Offset: 25044
.Ltmp5320:
    000061d6: 	movq	0xa0(%rsp), %rdi
    000061de: 	cmpq	%r13, %rdi
    000061e1: 	je	.Ltmp5319 # Offset: 25057
    000061e3: 	movq	0xb0(%rsp), %rax
    000061eb: 	leaq	0x1(%rax), %rsi
    000061ef: 	callq	_ZdlPvm@PLT # Offset: 25071
    000061f4: 	jmp	.Ltmp5319 # Offset: 25076
    000061f6: 	endbr64
    000061fa: 	jmp	.Ltmp5321 # Offset: 25082
    000061ff: 	endbr64
    00006203: 	movq	%rax, %rbx
    00006206: 	jmp	.Ltmp5325 # Offset: 25094
    00006208: 	endbr64
    0000620c: 	movq	%rax, %rbx
    0000620f: 	jmp	.Ltmp5326 # Offset: 25103
.Ltmp5325:
    00006211: 	movq	0xa0(%rsp), %rdi
    00006219: 	cmpq	%r13, %rdi
    0000621c: 	je	.Ltmp5327 # Offset: 25116
    0000621e: 	movq	0xb0(%rsp), %rax
    00006226: 	leaq	0x1(%rax), %rsi
    0000622a: 	callq	_ZdlPvm@PLT # Offset: 25130
.Ltmp5327:
    0000622f: 	movq	0x80(%rsp), %rdi
    00006237: 	leaq	0x90(%rsp), %rax
    0000623f: 	cmpq	%rax, %rdi
    00006242: 	je	.Ltmp5322 # Offset: 25154
    00006248: 	movq	0x90(%rsp), %rax
    00006250: 	leaq	0x1(%rax), %rsi
    00006254: 	callq	_ZdlPvm@PLT # Offset: 25172
    00006259: 	jmp	.Ltmp5322 # Offset: 25177
.Ltmp5326:
    0000625e: 	movq	0xa0(%rsp), %rdi
    00006266: 	cmpq	%r13, %rdi
    00006269: 	je	.Ltmp5327 # Offset: 25193
    0000626b: 	movq	0xb0(%rsp), %rax
    00006273: 	leaq	0x1(%rax), %rsi
    00006277: 	callq	_ZdlPvm@PLT # Offset: 25207
    0000627c: 	jmp	.Ltmp5327 # Offset: 25212
    0000627e: 	endbr64
    00006282: 	movq	%rax, %rbx
    00006285: 	jmp	.Ltmp5328 # Offset: 25221
    00006287: 	endbr64
    0000628b: 	movq	%rax, %rbx
    0000628e: 	jmp	.Ltmp5329 # Offset: 25230
.Ltmp5328:
    00006290: 	movq	0xa0(%rsp), %rdi
    00006298: 	cmpq	%r13, %rdi
    0000629b: 	je	.Ltmp5327 # Offset: 25243
    0000629d: 	movq	0xb0(%rsp), %rax
    000062a5: 	leaq	0x1(%rax), %rsi
    000062a9: 	callq	_ZdlPvm@PLT # Offset: 25257
    000062ae: 	jmp	.Ltmp5327 # Offset: 25262
.Ltmp5329:
    000062b3: 	movq	0xa0(%rsp), %rdi
    000062bb: 	cmpq	%r13, %rdi
    000062be: 	je	.Ltmp5327 # Offset: 25278
    000062c4: 	movq	0xb0(%rsp), %rax
    000062cc: 	leaq	0x1(%rax), %rsi
    000062d0: 	callq	_ZdlPvm@PLT # Offset: 25296
    000062d5: 	jmp	.Ltmp5327 # Offset: 25301
    000062da: 	endbr64
    000062de: 	movq	%rax, %rbx
    000062e1: 	jmp	.Ltmp5330 # Offset: 25313
    000062e3: 	endbr64
    000062e7: 	movq	%rax, %rbx
    000062ea: 	jmp	.Ltmp5331 # Offset: 25322
.Ltmp5330:
    000062ec: 	movq	0xa0(%rsp), %rdi
    000062f4: 	cmpq	%r13, %rdi
    000062f7: 	je	.Ltmp5327 # Offset: 25335
    000062fd: 	movq	0xb0(%rsp), %rax
    00006305: 	leaq	0x1(%rax), %rsi
    00006309: 	callq	_ZdlPvm@PLT # Offset: 25353
    0000630e: 	jmp	.Ltmp5327 # Offset: 25358
.Ltmp5331:
    00006313: 	movq	0xa0(%rsp), %rdi
    0000631b: 	cmpq	%r13, %rdi
    0000631e: 	je	.Ltmp5327 # Offset: 25374
    00006324: 	movq	0xb0(%rsp), %rax
    0000632c: 	leaq	0x1(%rax), %rsi
    00006330: 	callq	_ZdlPvm@PLT # Offset: 25392
    00006335: 	jmp	.Ltmp5327 # Offset: 25397
    0000633a: 	endbr64
    0000633e: 	movq	%rax, %rbx
    00006341: 	jmp	.Ltmp5332 # Offset: 25409
    00006343: 	endbr64
    00006347: 	movq	%rax, %rbx
    0000634a: 	jmp	.Ltmp5333 # Offset: 25418
.Ltmp5332:
    0000634c: 	movq	0xa0(%rsp), %rdi
    00006354: 	cmpq	%r13, %rdi
    00006357: 	je	.Ltmp5327 # Offset: 25431
    0000635d: 	movq	0xb0(%rsp), %rax
    00006365: 	leaq	0x1(%rax), %rsi
    00006369: 	callq	_ZdlPvm@PLT # Offset: 25449
    0000636e: 	jmp	.Ltmp5327 # Offset: 25454
.Ltmp5333:
    00006373: 	movq	0xa0(%rsp), %rdi
    0000637b: 	cmpq	%r13, %rdi
    0000637e: 	je	.Ltmp5327 # Offset: 25470
    00006384: 	movq	0xb0(%rsp), %rax
    0000638c: 	leaq	0x1(%rax), %rsi
    00006390: 	callq	_ZdlPvm@PLT # Offset: 25488
    00006395: 	jmp	.Ltmp5327 # Offset: 25493
    0000639a: 	endbr64
    0000639e: 	movq	%rax, %rbx
    000063a1: 	jmp	.Ltmp5334 # Offset: 25505
    000063a3: 	endbr64
    000063a7: 	movq	%rax, %rbx
    000063aa: 	jmp	.Ltmp5335 # Offset: 25514
.Ltmp5334:
    000063ac: 	movq	0xa0(%rsp), %rdi
    000063b4: 	cmpq	%r13, %rdi
    000063b7: 	je	.Ltmp5327 # Offset: 25527
    000063bd: 	movq	0xb0(%rsp), %rax
    000063c5: 	leaq	0x1(%rax), %rsi
    000063c9: 	callq	_ZdlPvm@PLT # Offset: 25545
    000063ce: 	jmp	.Ltmp5327 # Offset: 25550
.Ltmp5335:
    000063d3: 	movq	0xa0(%rsp), %rdi
    000063db: 	cmpq	%r13, %rdi
    000063de: 	je	.Ltmp5327 # Offset: 25566
    000063e4: 	movq	0xb0(%rsp), %rax
    000063ec: 	leaq	0x1(%rax), %rsi
    000063f0: 	callq	_ZdlPvm@PLT # Offset: 25584
    000063f5: 	jmp	.Ltmp5327 # Offset: 25589
    000063fa: 	endbr64
    000063fe: 	movq	%rax, %rbx
    00006401: 	jmp	.Ltmp5336 # Offset: 25601
    00006403: 	endbr64
    00006407: 	movq	%rax, %rbx
    0000640a: 	jmp	.Ltmp5337 # Offset: 25610
.Ltmp5336:
    0000640c: 	movq	0xa0(%rsp), %rdi
    00006414: 	cmpq	%r13, %rdi
    00006417: 	je	.Ltmp5327 # Offset: 25623
    0000641d: 	movq	0xb0(%rsp), %rax
    00006425: 	leaq	0x1(%rax), %rsi
    00006429: 	callq	_ZdlPvm@PLT # Offset: 25641
    0000642e: 	jmp	.Ltmp5327 # Offset: 25646
.Ltmp5337:
    00006433: 	movq	0xa0(%rsp), %rdi
    0000643b: 	cmpq	%r13, %rdi
    0000643e: 	je	.Ltmp5327 # Offset: 25662
    00006444: 	movq	0xb0(%rsp), %rax
    0000644c: 	leaq	0x1(%rax), %rsi
    00006450: 	callq	_ZdlPvm@PLT # Offset: 25680
    00006455: 	jmp	.Ltmp5327 # Offset: 25685
    0000645a: 	endbr64
    0000645e: 	movq	%rax, %rbx
    00006461: 	jmp	.Ltmp5338 # Offset: 25697
    00006463: 	endbr64
    00006467: 	movq	%rax, %rbx
    0000646a: 	jmp	.Ltmp5339 # Offset: 25706
.Ltmp5338:
    0000646c: 	movq	0xa0(%rsp), %rdi
    00006474: 	cmpq	%r13, %rdi
    00006477: 	je	.Ltmp5327 # Offset: 25719
    0000647d: 	movq	0xb0(%rsp), %rax
    00006485: 	leaq	0x1(%rax), %rsi
    00006489: 	callq	_ZdlPvm@PLT # Offset: 25737
    0000648e: 	jmp	.Ltmp5327 # Offset: 25742
.Ltmp5339:
    00006493: 	movq	0xa0(%rsp), %rdi
    0000649b: 	cmpq	%r13, %rdi
    0000649e: 	je	.Ltmp5327 # Offset: 25758
    000064a4: 	movq	0xb0(%rsp), %rax
    000064ac: 	leaq	0x1(%rax), %rsi
    000064b0: 	callq	_ZdlPvm@PLT # Offset: 25776
    000064b5: 	jmp	.Ltmp5327 # Offset: 25781
    000064ba: 	endbr64
    000064be: 	movq	%rax, %rbx
    000064c1: 	jmp	.Ltmp5340 # Offset: 25793
    000064c3: 	endbr64
    000064c7: 	movq	%rax, %rbx
    000064ca: 	jmp	.Ltmp5341 # Offset: 25802
.Ltmp5340:
    000064cc: 	movq	0xa0(%rsp), %rdi
    000064d4: 	cmpq	%r13, %rdi
    000064d7: 	je	.Ltmp5327 # Offset: 25815
    000064dd: 	movq	0xb0(%rsp), %rax
    000064e5: 	leaq	0x1(%rax), %rsi
    000064e9: 	callq	_ZdlPvm@PLT # Offset: 25833
    000064ee: 	jmp	.Ltmp5327 # Offset: 25838
.Ltmp5341:
    000064f3: 	movq	0xa0(%rsp), %rdi
    000064fb: 	cmpq	%r13, %rdi
    000064fe: 	je	.Ltmp5327 # Offset: 25854
    00006504: 	movq	0xb0(%rsp), %rax
    0000650c: 	leaq	0x1(%rax), %rsi
    00006510: 	callq	_ZdlPvm@PLT # Offset: 25872
    00006515: 	jmp	.Ltmp5327 # Offset: 25877
    0000651a: 	endbr64
    0000651e: 	movq	%rax, %rbx
    00006521: 	jmp	.Ltmp5342 # Offset: 25889
    00006523: 	endbr64
    00006527: 	movq	%rax, %rbx
    0000652a: 	jmp	.Ltmp5343 # Offset: 25898
.Ltmp5342:
    0000652c: 	movq	0xa0(%rsp), %rdi
    00006534: 	cmpq	%r13, %rdi
    00006537: 	je	.Ltmp5327 # Offset: 25911
    0000653d: 	movq	0xb0(%rsp), %rax
    00006545: 	leaq	0x1(%rax), %rsi
    00006549: 	callq	_ZdlPvm@PLT # Offset: 25929
    0000654e: 	jmp	.Ltmp5327 # Offset: 25934
.Ltmp5343:
    00006553: 	movq	0xa0(%rsp), %rdi
    0000655b: 	cmpq	%r13, %rdi
    0000655e: 	je	.Ltmp5327 # Offset: 25950
    00006564: 	movq	0xb0(%rsp), %rax
    0000656c: 	leaq	0x1(%rax), %rsi
    00006570: 	callq	_ZdlPvm@PLT # Offset: 25968
    00006575: 	jmp	.Ltmp5327 # Offset: 25973
    0000657a: 	endbr64
    0000657e: 	jmp	.Ltmp5321 # Offset: 25982
    00006583: 	endbr64
    00006587: 	movq	%rax, %rbx
    0000658a: 	jmp	.Ltmp5344 # Offset: 25994
    0000658c: 	endbr64
    00006590: 	movq	%rax, %rbx
    00006593: 	jmp	.Ltmp5345 # Offset: 26003
    00006595: 	endbr64
    00006599: 	movq	%rax, %rbx
    0000659c: 	jmp	.Ltmp5346 # Offset: 26012
.Ltmp5344:
    0000659e: 	movq	0xa0(%rsp), %rdi
    000065a6: 	cmpq	%r13, %rdi
    000065a9: 	je	.Ltmp5327 # Offset: 26025
    000065af: 	movq	0xb0(%rsp), %rax
    000065b7: 	leaq	0x1(%rax), %rsi
    000065bb: 	callq	_ZdlPvm@PLT # Offset: 26043
    000065c0: 	jmp	.Ltmp5327 # Offset: 26048
.Ltmp5345:
    000065c5: 	movq	0xa0(%rsp), %rdi
    000065cd: 	cmpq	%r13, %rdi
    000065d0: 	je	.Ltmp5327 # Offset: 26064
    000065d6: 	movq	0xb0(%rsp), %rax
    000065de: 	leaq	0x1(%rax), %rsi
    000065e2: 	callq	_ZdlPvm@PLT # Offset: 26082
    000065e7: 	jmp	.Ltmp5327 # Offset: 26087
.Ltmp5346:
    000065ec: 	movq	0xa0(%rsp), %rdi
    000065f4: 	cmpq	%r13, %rdi
    000065f7: 	je	.Ltmp5327 # Offset: 26103
    000065fd: 	movq	0xb0(%rsp), %rax
    00006605: 	leaq	0x1(%rax), %rsi
    00006609: 	callq	_ZdlPvm@PLT # Offset: 26121
    0000660e: 	jmp	.Ltmp5327 # Offset: 26126
    00006613: 	endbr64
    00006617: 	movq	%rax, %rbx
    0000661a: 	jmp	.Ltmp5347 # Offset: 26138
    0000661c: 	endbr64
    00006620: 	movq	%rax, %rbx
    00006623: 	jmp	.Ltmp5348 # Offset: 26147
.Ltmp5347:
    00006625: 	movq	0xa0(%rsp), %rdi
    0000662d: 	cmpq	%r13, %rdi
    00006630: 	je	.Ltmp5327 # Offset: 26160
    00006636: 	movq	0xb0(%rsp), %rax
    0000663e: 	leaq	0x1(%rax), %rsi
    00006642: 	callq	_ZdlPvm@PLT # Offset: 26178
    00006647: 	jmp	.Ltmp5327 # Offset: 26183
.Ltmp5348:
    0000664c: 	movq	0xa0(%rsp), %rdi
    00006654: 	cmpq	%r13, %rdi
    00006657: 	je	.Ltmp5327 # Offset: 26199
    0000665d: 	movq	0xb0(%rsp), %rax
    00006665: 	leaq	0x1(%rax), %rsi
    00006669: 	callq	_ZdlPvm@PLT # Offset: 26217
    0000666e: 	jmp	.Ltmp5327 # Offset: 26222
    00006673: 	endbr64
    00006677: 	jmp	.Ltmp5321 # Offset: 26231
    0000667c: 	endbr64
    00006680: 	movq	%rax, %rbx
    00006683: 	jmp	.Ltmp5349 # Offset: 26243
    00006685: 	endbr64
    00006689: 	movq	%rax, %rbx
    0000668c: 	jmp	.Ltmp5350 # Offset: 26252
.Ltmp5349:
    0000668e: 	movq	0xa0(%rsp), %rdi
    00006696: 	cmpq	%r13, %rdi
    00006699: 	je	.Ltmp5327 # Offset: 26265
    0000669f: 	movq	0xb0(%rsp), %rax
    000066a7: 	leaq	0x1(%rax), %rsi
    000066ab: 	callq	_ZdlPvm@PLT # Offset: 26283
    000066b0: 	jmp	.Ltmp5327 # Offset: 26288
.Ltmp5350:
    000066b5: 	movq	0xa0(%rsp), %rdi
    000066bd: 	cmpq	%r13, %rdi
    000066c0: 	je	.Ltmp5327 # Offset: 26304
    000066c6: 	movq	0xb0(%rsp), %rax
    000066ce: 	leaq	0x1(%rax), %rsi
    000066d2: 	callq	_ZdlPvm@PLT # Offset: 26322
    000066d7: 	jmp	.Ltmp5327 # Offset: 26327
    000066dc: 	endbr64
    000066e0: 	movq	%rax, %rbx
    000066e3: 	jmp	.Ltmp5351 # Offset: 26339
    000066e5: 	endbr64
    000066e9: 	movq	%rax, %rbx
    000066ec: 	jmp	.Ltmp5352 # Offset: 26348
.Ltmp5351:
    000066ee: 	movq	0xa0(%rsp), %rdi
    000066f6: 	cmpq	%r13, %rdi
    000066f9: 	je	.Ltmp5327 # Offset: 26361
    000066ff: 	movq	0xb0(%rsp), %rax
    00006707: 	leaq	0x1(%rax), %rsi
    0000670b: 	callq	_ZdlPvm@PLT # Offset: 26379
    00006710: 	jmp	.Ltmp5327 # Offset: 26384
.Ltmp5352:
    00006715: 	movq	0xa0(%rsp), %rdi
    0000671d: 	cmpq	%r13, %rdi
    00006720: 	je	.Ltmp5327 # Offset: 26400
    00006726: 	movq	0xb0(%rsp), %rax
    0000672e: 	leaq	0x1(%rax), %rsi
    00006732: 	callq	_ZdlPvm@PLT # Offset: 26418
    00006737: 	jmp	.Ltmp5327 # Offset: 26423
    0000673c: 	endbr64
    00006740: 	movq	%rax, %rbx
    00006743: 	jmp	.Ltmp5353 # Offset: 26435
    00006745: 	endbr64
    00006749: 	movq	%rax, %rbx
    0000674c: 	jmp	.Ltmp5354 # Offset: 26444
.Ltmp5353:
    0000674e: 	movq	0xa0(%rsp), %rdi
    00006756: 	cmpq	%r13, %rdi
    00006759: 	je	.Ltmp5327 # Offset: 26457
    0000675f: 	movq	0xb0(%rsp), %rax
    00006767: 	leaq	0x1(%rax), %rsi
    0000676b: 	callq	_ZdlPvm@PLT # Offset: 26475
    00006770: 	jmp	.Ltmp5327 # Offset: 26480
.Ltmp5354:
    00006775: 	movq	0xa0(%rsp), %rdi
    0000677d: 	cmpq	%r13, %rdi
    00006780: 	je	.Ltmp5327 # Offset: 26496
    00006786: 	movq	0xb0(%rsp), %rax
    0000678e: 	leaq	0x1(%rax), %rsi
    00006792: 	callq	_ZdlPvm@PLT # Offset: 26514
    00006797: 	jmp	.Ltmp5327 # Offset: 26519
.Ltmp5323:
    0000679c: 	movq	0x70(%rsp), %rax
    000067a1: 	leaq	0x1(%rax), %rsi
    000067a5: 	callq	_ZdlPvm@PLT # Offset: 26533
    000067aa: 	jmp	.Ltmp5355 # Offset: 26538
    000067af: 	endbr64
    000067b3: 	jmp	.Ltmp5321 # Offset: 26547
    000067b8: 	endbr64
    000067bc: 	jmp	.Ltmp5321 # Offset: 26556
    000067c1: 	endbr64
    000067c5: 	jmp	.Ltmp5321 # Offset: 26565
    000067ca: 	endbr64
    000067ce: 	jmp	.Ltmp5321 # Offset: 26574
    000067d3: 	endbr64
    000067d7: 	jmp	.Ltmp5321 # Offset: 26583
    000067dc: 	endbr64
    000067e0: 	jmp	.Ltmp5321 # Offset: 26592
    000067e5: 	endbr64
    000067e9: 	jmp	.Ltmp5321 # Offset: 26601
    000067ee: 	endbr64
    000067f2: 	jmp	.Ltmp5321 # Offset: 26610
    000067f7: 	endbr64
    000067fb: 	jmp	.Ltmp5321 # Offset: 26619
    00006800: 	endbr64
    00006804: 	jmp	.Ltmp5321 # Offset: 26628
    00006809: 	endbr64
    0000680d: 	jmp	.Ltmp5321 # Offset: 26637
    00006812: 	endbr64
    00006816: 	jmp	.Ltmp5321 # Offset: 26646
    0000681b: 	endbr64
    0000681f: 	jmp	.Ltmp5321 # Offset: 26655
    00006824: 	endbr64
    00006828: 	jmp	.Ltmp5321 # Offset: 26664
    0000682d: 	endbr64
    00006831: 	jmp	.Ltmp5321 # Offset: 26673
    00006836: 	endbr64
    0000683a: 	jmp	.Ltmp5321 # Offset: 26682
    0000683f: 	endbr64
    00006843: 	movq	%rax, %rbx
    00006846: 	jmp	.Ltmp5356 # Offset: 26694
    00006848: 	endbr64
    0000684c: 	movq	%rax, %rbx
    0000684f: 	jmp	.Ltmp5357 # Offset: 26703
.Ltmp5356:
    00006851: 	movq	0xa0(%rsp), %rdi
    00006859: 	cmpq	%r13, %rdi
    0000685c: 	je	.Ltmp5327 # Offset: 26716
    00006862: 	movq	0xb0(%rsp), %rax
    0000686a: 	leaq	0x1(%rax), %rsi
    0000686e: 	callq	_ZdlPvm@PLT # Offset: 26734
    00006873: 	jmp	.Ltmp5327 # Offset: 26739
.Ltmp5357:
    00006878: 	movq	0xa0(%rsp), %rdi
    00006880: 	cmpq	%r13, %rdi
    00006883: 	je	.Ltmp5327 # Offset: 26755
    00006889: 	movq	0xb0(%rsp), %rax
    00006891: 	leaq	0x1(%rax), %rsi
    00006895: 	callq	_ZdlPvm@PLT # Offset: 26773
    0000689a: 	jmp	.Ltmp5327 # Offset: 26778
    0000689f: 	endbr64
    000068a3: 	movq	%rax, %rbx
    000068a6: 	jmp	.Ltmp5358 # Offset: 26790
    000068a8: 	endbr64
    000068ac: 	movq	%rax, %rbx
    000068af: 	jmp	.Ltmp5359 # Offset: 26799
.Ltmp5358:
    000068b1: 	movq	0xa0(%rsp), %rdi
    000068b9: 	cmpq	%r13, %rdi
    000068bc: 	je	.Ltmp5327 # Offset: 26812
    000068c2: 	movq	0xb0(%rsp), %rax
    000068ca: 	leaq	0x1(%rax), %rsi
    000068ce: 	callq	_ZdlPvm@PLT # Offset: 26830
    000068d3: 	jmp	.Ltmp5327 # Offset: 26835
.Ltmp5359:
    000068d8: 	movq	0xa0(%rsp), %rdi
    000068e0: 	cmpq	%r13, %rdi
    000068e3: 	je	.Ltmp5327 # Offset: 26851
    000068e9: 	movq	0xb0(%rsp), %rax
    000068f1: 	leaq	0x1(%rax), %rsi
    000068f5: 	callq	_ZdlPvm@PLT # Offset: 26869
    000068fa: 	jmp	.Ltmp5327 # Offset: 26874
    000068ff: 	endbr64
    00006903: 	movq	%rax, %rbx
    00006906: 	jmp	.Ltmp5360 # Offset: 26886
    00006908: 	endbr64
    0000690c: 	movq	%rax, %rbx
    0000690f: 	jmp	.Ltmp5361 # Offset: 26895
.Ltmp5360:
    00006911: 	movq	0xa0(%rsp), %rdi
    00006919: 	cmpq	%r13, %rdi
    0000691c: 	je	.Ltmp5327 # Offset: 26908
    00006922: 	movq	0xb0(%rsp), %rax
    0000692a: 	leaq	0x1(%rax), %rsi
    0000692e: 	callq	_ZdlPvm@PLT # Offset: 26926
    00006933: 	jmp	.Ltmp5327 # Offset: 26931
.Ltmp5361:
    00006938: 	movq	0xa0(%rsp), %rdi
    00006940: 	cmpq	%r13, %rdi
    00006943: 	je	.Ltmp5327 # Offset: 26947
    00006949: 	movq	0xb0(%rsp), %rax
    00006951: 	leaq	0x1(%rax), %rsi
    00006955: 	callq	_ZdlPvm@PLT # Offset: 26965
    0000695a: 	jmp	.Ltmp5327 # Offset: 26970
    0000695f: 	endbr64
    00006963: 	movq	%rax, %rbx
    00006966: 	jmp	.Ltmp5362 # Offset: 26982
    00006968: 	endbr64
    0000696c: 	movq	%rax, %rbx
    0000696f: 	jmp	.Ltmp5363 # Offset: 26991
.Ltmp5362:
    00006971: 	movq	0xa0(%rsp), %rdi
    00006979: 	cmpq	%r13, %rdi
    0000697c: 	je	.Ltmp5327 # Offset: 27004
    00006982: 	movq	0xb0(%rsp), %rax
    0000698a: 	leaq	0x1(%rax), %rsi
    0000698e: 	callq	_ZdlPvm@PLT # Offset: 27022
    00006993: 	jmp	.Ltmp5327 # Offset: 27027
.Ltmp5363:
    00006998: 	movq	0xa0(%rsp), %rdi
    000069a0: 	cmpq	%r13, %rdi
    000069a3: 	je	.Ltmp5327 # Offset: 27043
    000069a9: 	movq	0xb0(%rsp), %rax
    000069b1: 	leaq	0x1(%rax), %rsi
    000069b5: 	callq	_ZdlPvm@PLT # Offset: 27061
    000069ba: 	jmp	.Ltmp5327 # Offset: 27066
    000069bf: 	endbr64
    000069c3: 	movq	%rax, %rbx
    000069c6: 	jmp	.Ltmp5364 # Offset: 27078
    000069c8: 	endbr64
    000069cc: 	movq	%rax, %rbx
    000069cf: 	jmp	.Ltmp5365 # Offset: 27087
.Ltmp5364:
    000069d1: 	movq	0xa0(%rsp), %rdi
    000069d9: 	cmpq	%r13, %rdi
    000069dc: 	je	.Ltmp5327 # Offset: 27100
    000069e2: 	movq	0xb0(%rsp), %rax
    000069ea: 	leaq	0x1(%rax), %rsi
    000069ee: 	callq	_ZdlPvm@PLT # Offset: 27118
    000069f3: 	jmp	.Ltmp5327 # Offset: 27123
.Ltmp5365:
    000069f8: 	movq	0xa0(%rsp), %rdi
    00006a00: 	cmpq	%r13, %rdi
    00006a03: 	je	.Ltmp5327 # Offset: 27139
    00006a09: 	movq	0xb0(%rsp), %rax
    00006a11: 	leaq	0x1(%rax), %rsi
    00006a15: 	callq	_ZdlPvm@PLT # Offset: 27157
    00006a1a: 	jmp	.Ltmp5327 # Offset: 27162
    00006a1f: 	endbr64
    00006a23: 	movq	%rax, %rbx
    00006a26: 	jmp	.Ltmp5366 # Offset: 27174
    00006a28: 	endbr64
    00006a2c: 	movq	%rax, %rbx
    00006a2f: 	jmp	.Ltmp5367 # Offset: 27183
.Ltmp5366:
    00006a31: 	movq	0xa0(%rsp), %rdi
    00006a39: 	cmpq	%r13, %rdi
    00006a3c: 	je	.Ltmp5327 # Offset: 27196
    00006a42: 	movq	0xb0(%rsp), %rax
    00006a4a: 	leaq	0x1(%rax), %rsi
    00006a4e: 	callq	_ZdlPvm@PLT # Offset: 27214
    00006a53: 	jmp	.Ltmp5327 # Offset: 27219
.Ltmp5367:
    00006a58: 	movq	0xa0(%rsp), %rdi
    00006a60: 	cmpq	%r13, %rdi
    00006a63: 	je	.Ltmp5327 # Offset: 27235
    00006a69: 	movq	0xb0(%rsp), %rax
    00006a71: 	leaq	0x1(%rax), %rsi
    00006a75: 	callq	_ZdlPvm@PLT # Offset: 27253
    00006a7a: 	jmp	.Ltmp5327 # Offset: 27258
    00006a7f: 	endbr64
    00006a83: 	movq	%rax, %rbx
    00006a86: 	jmp	.Ltmp5368 # Offset: 27270
    00006a88: 	endbr64
    00006a8c: 	movq	%rax, %rbx
    00006a8f: 	jmp	.Ltmp5369 # Offset: 27279
.Ltmp5368:
    00006a91: 	movq	0xa0(%rsp), %rdi
    00006a99: 	cmpq	%r13, %rdi
    00006a9c: 	je	.Ltmp5327 # Offset: 27292
    00006aa2: 	movq	0xb0(%rsp), %rax
    00006aaa: 	leaq	0x1(%rax), %rsi
    00006aae: 	callq	_ZdlPvm@PLT # Offset: 27310
    00006ab3: 	jmp	.Ltmp5327 # Offset: 27315
.Ltmp5369:
    00006ab8: 	movq	0xa0(%rsp), %rdi
    00006ac0: 	cmpq	%r13, %rdi
    00006ac3: 	je	.Ltmp5327 # Offset: 27331
    00006ac9: 	movq	0xb0(%rsp), %rax
    00006ad1: 	leaq	0x1(%rax), %rsi
    00006ad5: 	callq	_ZdlPvm@PLT # Offset: 27349
    00006ada: 	jmp	.Ltmp5327 # Offset: 27354
    00006adf: 	endbr64
    00006ae3: 	movq	%rax, %rbx
    00006ae6: 	jmp	.Ltmp5370 # Offset: 27366
    00006ae8: 	endbr64
    00006aec: 	movq	%rax, %rbx
    00006aef: 	jmp	.Ltmp5371 # Offset: 27375
.Ltmp5370:
    00006af1: 	movq	0xa0(%rsp), %rdi
    00006af9: 	cmpq	%r13, %rdi
    00006afc: 	je	.Ltmp5327 # Offset: 27388
    00006b02: 	movq	0xb0(%rsp), %rax
    00006b0a: 	leaq	0x1(%rax), %rsi
    00006b0e: 	callq	_ZdlPvm@PLT # Offset: 27406
    00006b13: 	jmp	.Ltmp5327 # Offset: 27411
.Ltmp5371:
    00006b18: 	movq	0xa0(%rsp), %rdi
    00006b20: 	cmpq	%r13, %rdi
    00006b23: 	je	.Ltmp5327 # Offset: 27427
    00006b29: 	movq	0xb0(%rsp), %rax
    00006b31: 	leaq	0x1(%rax), %rsi
    00006b35: 	callq	_ZdlPvm@PLT # Offset: 27445
    00006b3a: 	jmp	.Ltmp5327 # Offset: 27450
    00006b3f: 	endbr64
.Ltmp5373:
    00006b43: 	movq	%rax, %rbx
    00006b46: 	jmp	.Ltmp5372 # Offset: 27462
    00006b4b: 	endbr64
    00006b4f: 	jmp	.Ltmp5321 # Offset: 27471
    00006b54: 	endbr64
    00006b58: 	jmp	.Ltmp5321 # Offset: 27480
    00006b5d: 	endbr64
    00006b61: 	jmp	.Ltmp5321 # Offset: 27489
    00006b66: 	endbr64
    00006b6a: 	jmp	.Ltmp5321 # Offset: 27498
    00006b6f: 	endbr64
    00006b73: 	jmp	.Ltmp5321 # Offset: 27507
    00006b78: 	endbr64
    00006b7c: 	jmp	.Ltmp5321 # Offset: 27516
    00006b81: 	endbr64
    00006b85: 	jmp	.Ltmp5321 # Offset: 27525
    00006b8a: 	endbr64
    00006b8e: 	jmp	.Ltmp5373 # Offset: 27534
    00006b90: 	endbr64
    00006b94: 	jmp	.Ltmp5373 # Offset: 27540
    00006b96: 	endbr64
    00006b9a: 	jmp	.Ltmp5373 # Offset: 27546
    00006b9c: 	endbr64
    00006ba0: 	jmp	.Ltmp5373 # Offset: 27552
    00006ba2: 	endbr64
    00006ba6: 	jmp	.Ltmp5373 # Offset: 27558
    00006ba8: 	endbr64
    00006bac: 	jmp	.Ltmp5373 # Offset: 27564
    00006bae: 	endbr64
    00006bb2: 	jmp	.Ltmp5373 # Offset: 27570
    00006bb4: 	endbr64
    00006bb8: 	movq	%rax, %rbx
    00006bbb: 	jmp	.Ltmp5322 # Offset: 27579
    00006bc0: 	endbr64
    00006bc4: 	movq	%rax, %rbx
    00006bc7: 	jmp	.Ltmp5374 # Offset: 27591
    00006bc9: 	endbr64
    00006bcd: 	movq	%rax, %rbx
    00006bd0: 	jmp	.Ltmp5375 # Offset: 27600
.Ltmp5374:
    00006bd2: 	movq	0xa0(%rsp), %rdi
    00006bda: 	cmpq	%r13, %rdi
    00006bdd: 	je	.Ltmp5327 # Offset: 27613
    00006be3: 	movq	0xb0(%rsp), %rax
    00006beb: 	leaq	0x1(%rax), %rsi
    00006bef: 	callq	_ZdlPvm@PLT # Offset: 27631
    00006bf4: 	jmp	.Ltmp5327 # Offset: 27636
.Ltmp5375:
    00006bf9: 	movq	0xa0(%rsp), %rdi
    00006c01: 	cmpq	%r13, %rdi
    00006c04: 	je	.Ltmp5327 # Offset: 27652
    00006c0a: 	movq	0xb0(%rsp), %rax
    00006c12: 	leaq	0x1(%rax), %rsi
    00006c16: 	callq	_ZdlPvm@PLT # Offset: 27670
    00006c1b: 	jmp	.Ltmp5327 # Offset: 27675
    00006c20: 	endbr64
    00006c24: 	movq	%rax, %rbx
    00006c27: 	jmp	.Ltmp5376 # Offset: 27687
    00006c29: 	endbr64
    00006c2d: 	movq	%rax, %rbx
    00006c30: 	jmp	.Ltmp5377 # Offset: 27696
.Ltmp5376:
    00006c32: 	movq	0xa0(%rsp), %rdi
    00006c3a: 	cmpq	%r13, %rdi
    00006c3d: 	je	.Ltmp5327 # Offset: 27709
    00006c43: 	movq	0xb0(%rsp), %rax
    00006c4b: 	leaq	0x1(%rax), %rsi
    00006c4f: 	callq	_ZdlPvm@PLT # Offset: 27727
    00006c54: 	jmp	.Ltmp5327 # Offset: 27732
.Ltmp5377:
    00006c59: 	movq	0xa0(%rsp), %rdi
    00006c61: 	cmpq	%r13, %rdi
    00006c64: 	je	.Ltmp5327 # Offset: 27748
    00006c6a: 	movq	0xb0(%rsp), %rax
    00006c72: 	leaq	0x1(%rax), %rsi
    00006c76: 	callq	_ZdlPvm@PLT # Offset: 27766
    00006c7b: 	jmp	.Ltmp5327 # Offset: 27771
    00006c80: 	endbr64
    00006c84: 	movq	%rax, %rbx
    00006c87: 	jmp	.Ltmp5378 # Offset: 27783
    00006c89: 	endbr64
    00006c8d: 	movq	%rax, %rbx
    00006c90: 	jmp	.Ltmp5379 # Offset: 27792
.Ltmp5378:
    00006c92: 	movq	0xa0(%rsp), %rdi
    00006c9a: 	cmpq	%r13, %rdi
    00006c9d: 	je	.Ltmp5327 # Offset: 27805
    00006ca3: 	movq	0xb0(%rsp), %rax
    00006cab: 	leaq	0x1(%rax), %rsi
    00006caf: 	callq	_ZdlPvm@PLT # Offset: 27823
    00006cb4: 	jmp	.Ltmp5327 # Offset: 27828
.Ltmp5379:
    00006cb9: 	movq	0xa0(%rsp), %rdi
    00006cc1: 	cmpq	%r13, %rdi
    00006cc4: 	je	.Ltmp5327 # Offset: 27844
    00006cca: 	movq	0xb0(%rsp), %rax
    00006cd2: 	leaq	0x1(%rax), %rsi
    00006cd6: 	callq	_ZdlPvm@PLT # Offset: 27862
    00006cdb: 	jmp	.Ltmp5327 # Offset: 27867
    00006ce0: 	endbr64
    00006ce4: 	movq	%rax, %rbx
    00006ce7: 	jmp	.Ltmp5380 # Offset: 27879
    00006ce9: 	endbr64
    00006ced: 	movq	%rax, %rbx
    00006cf0: 	jmp	.Ltmp5381 # Offset: 27888
.Ltmp5380:
    00006cf2: 	movq	0xa0(%rsp), %rdi
    00006cfa: 	cmpq	%r13, %rdi
    00006cfd: 	je	.Ltmp5327 # Offset: 27901
    00006d03: 	movq	0xb0(%rsp), %rax
    00006d0b: 	leaq	0x1(%rax), %rsi
    00006d0f: 	callq	_ZdlPvm@PLT # Offset: 27919
    00006d14: 	jmp	.Ltmp5327 # Offset: 27924
.Ltmp5381:
    00006d19: 	movq	0xa0(%rsp), %rdi
    00006d21: 	cmpq	%r13, %rdi
    00006d24: 	je	.Ltmp5327 # Offset: 27940
    00006d2a: 	movq	0xb0(%rsp), %rax
    00006d32: 	leaq	0x1(%rax), %rsi
    00006d36: 	callq	_ZdlPvm@PLT # Offset: 27958
    00006d3b: 	jmp	.Ltmp5327 # Offset: 27963
    00006d40: 	endbr64
    00006d44: 	movq	%rax, %rbx
    00006d47: 	jmp	.Ltmp5327 # Offset: 27975
    00006d4c: 	endbr64
    00006d50: 	jmp	.Ltmp5373 # Offset: 27984
    00006d55: 	endbr64
    00006d59: 	jmp	.Ltmp5373 # Offset: 27993
    00006d5e: 	endbr64
    00006d62: 	jmp	.Ltmp5373 # Offset: 28002
    00006d67: 	endbr64
    00006d6b: 	movq	%rax, %rbx
    00006d6e: 	jmp	.Ltmp5382 # Offset: 28014
    00006d70: 	endbr64
    00006d74: 	movq	%rax, %rbx
    00006d77: 	jmp	.Ltmp5383 # Offset: 28023
.Ltmp5382:
    00006d79: 	movq	0xa0(%rsp), %rdi
    00006d81: 	cmpq	%r13, %rdi
    00006d84: 	je	.Ltmp5327 # Offset: 28036
    00006d8a: 	movq	0xb0(%rsp), %rax
    00006d92: 	leaq	0x1(%rax), %rsi
    00006d96: 	callq	_ZdlPvm@PLT # Offset: 28054
    00006d9b: 	jmp	.Ltmp5327 # Offset: 28059
.Ltmp5383:
    00006da0: 	movq	0xa0(%rsp), %rdi
    00006da8: 	cmpq	%r13, %rdi
    00006dab: 	je	.Ltmp5327 # Offset: 28075
    00006db1: 	movq	0xb0(%rsp), %rax
    00006db9: 	leaq	0x1(%rax), %rsi
    00006dbd: 	callq	_ZdlPvm@PLT # Offset: 28093
    00006dc2: 	jmp	.Ltmp5327 # Offset: 28098
    00006dc7: 	endbr64
    00006dcb: 	jmp	.Ltmp5373 # Offset: 28107
    00006dd0: 	endbr64
    00006dd4: 	jmp	.Ltmp5373 # Offset: 28116
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeItEvv"

Binary Function "_Z13test_constantIl27custom_multiply_shiftadd_42IlEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 199
  State       : disassembled
  Address     : 0x3f760
  Size        : 0x2f4
  MaxSize     : 0x300
  Offset      : 0x3f760
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl27custom_multiply_shiftadd_42IlEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0198:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %edi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%edi, %edi
    00000041: 	jle	.Ltmp5384 # Offset: 65
    00000047: 	movl	%r14d, %eax
    0000004a: 	movl	%r14d, %ebp
    0000004d: 	leaq	DATAat0x571d0(%rip), %rbx
    00000054: 	xorl	%r15d, %r15d
    00000057: 	shrl	%eax
    00000059: 	movsd	init_value(%rip), %xmm4
    00000061: 	andl	$-0x2, %ebp
    00000064: 	subl	$0x1, %eax
    00000067: 	shlq	$0x4, %rax
    0000006b: 	leaq	0x10(%r12,%rax), %r13
.Ltmp5389:
    00000070: 	xorl	%eax, %eax
    00000072: 	testl	%r14d, %r14d
    00000075: 	jle	.Ltmp5385 # Offset: 117
    0000007b: 	cmpl	$0x1, %r14d
    0000007f: 	je	.Ltmp5386 # Offset: 127
    00000085: 	movq	%r12, %rax
    00000088: 	pxor	%xmm2, %xmm2
    0000008c: 	nopl	(%rax) # Size: 4
.Ltmp5387:
    00000090: 	movdqu	(%rax), %xmm1
    00000094: 	addq	$0x10, %rax
    00000098: 	movdqa	%xmm1, %xmm0
    0000009c: 	movdqa	%xmm1, %xmm3
    000000a0: 	psllq	$0x5, %xmm3
    000000a5: 	psllq	$0x6, %xmm0
    000000aa: 	psubq	%xmm3, %xmm0
    000000ae: 	movdqa	%xmm1, %xmm3
    000000b2: 	psllq	$0x4, %xmm3
    000000b7: 	paddq	%xmm3, %xmm0
    000000bb: 	movdqa	%xmm1, %xmm3
    000000bf: 	psllq	$0x3, %xmm3
    000000c4: 	psubq	%xmm3, %xmm0
    000000c8: 	movdqa	%xmm1, %xmm3
    000000cc: 	psllq	$0x2, %xmm3
    000000d1: 	psllq	$0x1, %xmm1
    000000d6: 	paddq	%xmm3, %xmm0
    000000da: 	psubq	%xmm1, %xmm0
    000000de: 	paddq	%xmm0, %xmm2
    000000e2: 	cmpq	%rax, %r13
    000000e5: 	jne	.Ltmp5387 # Offset: 229
    000000e7: 	movdqa	%xmm2, %xmm0
    000000eb: 	movslq	%ebp, %rdx
    000000ee: 	psrldq	$0x8, %xmm0
    000000f3: 	paddq	%xmm0, %xmm2
    000000f7: 	movq	%xmm2, %rax
    000000fc: 	cmpl	%r14d, %ebp
    000000ff: 	je	.Ltmp5385 # Offset: 255
.Ltmp5397:
    00000101: 	movq	(%r12,%rdx,8), %rdx
    00000105: 	movq	%rdx, %rsi
    00000108: 	shlq	$0x5, %rsi
    0000010c: 	leaq	(%rsi,%rdx,8), %rsi
    00000110: 	leaq	(%rsi,%rdx,2), %rdx
    00000114: 	addq	%rdx, %rax
.Ltmp5385:
    00000117: 	cvttsd2si	%xmm4, %rdx
    0000011c: 	movq	%rdx, %rsi
    0000011f: 	shlq	$0x5, %rsi
    00000123: 	leaq	(%rsi,%rdx,8), %rsi
    00000127: 	leaq	(%rsi,%rdx,2), %rdx
    0000012b: 	imulq	$0x1f40, %rdx, %rdx
    00000132: 	cmpq	%rax, %rdx
    00000135: 	je	.Ltmp5388 # Offset: 309
    00000137: 	movl	current_test(%rip), %edx
    0000013d: 	movl	$0x1, %edi
    00000142: 	movq	%rbx, %rsi
    00000145: 	xorl	%eax, %eax
    00000147: 	addl	$0x1, %r15d
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	movl	iterations(%rip), %edi
    00000156: 	cmpl	%edi, %r15d
    00000159: 	jge	.Ltmp5384 # Offset: 345
    0000015b: 	movsd	init_value(%rip), %xmm4
    00000163: 	jmp	.Ltmp5389 # Offset: 355
    00000168: 	nopl	(%rax,%rax) # Size: 8
.Ltmp5388:
    00000170: 	addl	$0x1, %r15d
    00000174: 	cmpl	%edi, %r15d
    00000177: 	jl	.Ltmp5389 # Offset: 375
.Ltmp5384:
    0000017d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000184: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000018b: 	subq	$0x20, %rax
    0000018f: 	cmpq	%rax, %rbx
    00000192: 	je	.Ltmp5390 # Offset: 402
    00000198: 	movq	0x8(%rsp), %rax
    0000019d: 	leaq	0x10(%rbx), %rdi
    000001a1: 	movq	%rdi, (%rbx)
    000001a4: 	movq	(%rax), %r13
    000001a7: 	movq	0x8(%rax), %r12
    000001ab: 	movq	%r13, %rax
    000001ae: 	addq	%r12, %rax
    000001b1: 	je	.Ltmp5391 # Offset: 433
    000001b3: 	testq	%r13, %r13
    000001b6: 	je	.Ltmp5392 # Offset: 438
.Ltmp5391:
    000001bc: 	movq	%r12, 0x10(%rsp)
    000001c1: 	cmpq	$0xf, %r12
    000001c5: 	ja	.Ltmp5393 # Offset: 453
    000001cb: 	cmpq	$0x1, %r12
    000001cf: 	jne	.Ltmp5394 # Offset: 463
    000001d5: 	movzbl	(%r13), %eax
    000001da: 	movb	%al, 0x10(%rbx)
.Ltmp5398:
    000001dd: 	movq	%r12, 0x8(%rbx)
    000001e1: 	movb	$0x0, (%rdi,%r12)
    000001e6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ed: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001f4: 	addq	$0x20, %rax
    000001f8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ff: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000206: 	je	.Ltmp5395 # Offset: 518
.Ltmp5399:
    0000020c: 	movq	-0x20(%rax), %rbp
    00000210: 	callq	clock@PLT # Offset: 528
    00000215: 	movq	%rax, end_time(%rip)
    0000021c: 	movq	0x18(%rsp), %rdx
    00000221: 	subq	%fs:0x28, %rdx
    0000022a: 	jne	.Ltmp5396 # Offset: 554
    00000230: 	subq	start_time(%rip), %rax
    00000237: 	pxor	%xmm0, %xmm0
    0000023b: 	movq	%rbp, %rdi
    0000023e: 	cvtsi2sd	%rax, %xmm0
    00000243: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000024b: 	addq	$0x28, %rsp
    0000024f: 	popq	%rbx
    00000250: 	popq	%rbp
    00000251: 	popq	%r12
    00000253: 	popq	%r13
    00000255: 	popq	%r14
    00000257: 	popq	%r15
    00000259: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 601
.Ltmp5386:
    0000025e: 	xorl	%edx, %edx
    00000260: 	xorl	%eax, %eax
    00000262: 	jmp	.Ltmp5397 # Offset: 610
.Ltmp5393:
    00000267: 	movq	%rbx, %rdi
    0000026a: 	leaq	0x10(%rsp), %rsi
    0000026f: 	xorl	%edx, %edx
    00000271: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 625
    00000276: 	movq	%rax, (%rbx)
    00000279: 	movq	%rax, %rdi
    0000027c: 	movq	0x10(%rsp), %rax
    00000281: 	movq	%rax, 0x10(%rbx)
.Ltmp5400:
    00000285: 	movq	%r12, %rdx
    00000288: 	movq	%r13, %rsi
    0000028b: 	callq	memcpy@PLT # Offset: 651
    00000290: 	movq	0x10(%rsp), %r12
    00000295: 	movq	(%rbx), %rdi
    00000298: 	jmp	.Ltmp5398 # Offset: 664
.Ltmp5390:
    0000029d: 	movq	0x8(%rsp), %rsi
    000002a2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002a9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 681
    000002ae: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002b5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002bc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002c3: 	jne	.Ltmp5399 # Offset: 707
.Ltmp5395:
    000002c9: 	movq	-0x8(%rdx), %rax
    000002cd: 	addq	$0x200, %rax
    000002d3: 	jmp	.Ltmp5399 # Offset: 723
.Ltmp5394:
    000002d8: 	testq	%r12, %r12
    000002db: 	je	.Ltmp5398 # Offset: 731
    000002e1: 	jmp	.Ltmp5400 # Offset: 737
.Ltmp5396:
    000002e3: 	callq	__stack_chk_fail@PLT # Offset: 739
.Ltmp5392:
    000002e8: 	leaq	DATAat0x57008(%rip), %rdi
    000002ef: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 751
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl27custom_multiply_shiftadd_42IlEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13test_constantIl26custom_multiply_shiftadd_2IlEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 200
  State       : disassembled
  Address     : 0x3fa60
  Size        : 0x2d4
  MaxSize     : 0x2e0
  Offset      : 0x3fa60
  Section     : .text
  Orc Section : .local.text._Z13test_constantIl26custom_multiply_shiftadd_2IlEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0199:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp5401 # Offset: 65
    00000047: 	movl	%r14d, %eax
    0000004a: 	movl	%r14d, %ebp
    0000004d: 	leaq	DATAat0x571d0(%rip), %rbx
    00000054: 	xorl	%r15d, %r15d
    00000057: 	shrl	%eax
    00000059: 	movsd	init_value(%rip), %xmm4
    00000061: 	andl	$-0x2, %ebp
    00000064: 	subl	$0x1, %eax
    00000067: 	shlq	$0x4, %rax
    0000006b: 	leaq	0x10(%r12,%rax), %r13
.Ltmp5406:
    00000070: 	xorl	%eax, %eax
    00000072: 	testl	%r14d, %r14d
    00000075: 	jle	.Ltmp5402 # Offset: 117
    0000007b: 	cmpl	$0x1, %r14d
    0000007f: 	je	.Ltmp5403 # Offset: 127
    00000085: 	movq	%r12, %rax
    00000088: 	pxor	%xmm2, %xmm2
    0000008c: 	nopl	(%rax) # Size: 4
.Ltmp5404:
    00000090: 	movdqu	(%rax), %xmm1
    00000094: 	addq	$0x10, %rax
    00000098: 	movdqa	%xmm1, %xmm0
    0000009c: 	movdqa	%xmm1, %xmm3
    000000a0: 	psllq	$0x5, %xmm3
    000000a5: 	psllq	$0x6, %xmm0
    000000aa: 	psubq	%xmm3, %xmm0
    000000ae: 	movdqa	%xmm1, %xmm3
    000000b2: 	psllq	$0x4, %xmm3
    000000b7: 	psubq	%xmm3, %xmm0
    000000bb: 	movdqa	%xmm1, %xmm3
    000000bf: 	psllq	$0x3, %xmm3
    000000c4: 	psubq	%xmm3, %xmm0
    000000c8: 	movdqa	%xmm1, %xmm3
    000000cc: 	psllq	$0x2, %xmm3
    000000d1: 	psllq	$0x1, %xmm1
    000000d6: 	psubq	%xmm3, %xmm0
    000000da: 	psubq	%xmm1, %xmm0
    000000de: 	paddq	%xmm0, %xmm2
    000000e2: 	cmpq	%rax, %r13
    000000e5: 	jne	.Ltmp5404 # Offset: 229
    000000e7: 	movdqa	%xmm2, %xmm0
    000000eb: 	movslq	%ebp, %rdx
    000000ee: 	psrldq	$0x8, %xmm0
    000000f3: 	paddq	%xmm0, %xmm2
    000000f7: 	movq	%xmm2, %rax
    000000fc: 	cmpl	%r14d, %ebp
    000000ff: 	je	.Ltmp5402 # Offset: 255
.Ltmp5414:
    00000101: 	movq	(%r12,%rdx,8), %rdx
    00000105: 	leaq	(%rax,%rdx,2), %rax
.Ltmp5402:
    00000109: 	cvttsd2si	%xmm4, %rdx
    0000010e: 	addq	%rdx, %rdx
    00000111: 	imulq	$0x1f40, %rdx, %rdx
    00000118: 	cmpq	%rax, %rdx
    0000011b: 	je	.Ltmp5405 # Offset: 283
    0000011d: 	movl	current_test(%rip), %edx
    00000123: 	movq	%rbx, %rsi
    00000126: 	movl	$0x1, %edi
    0000012b: 	xorl	%eax, %eax
    0000012d: 	addl	$0x1, %r15d
    00000131: 	callq	__printf_chk@PLT # Offset: 305
    00000136: 	movl	iterations(%rip), %esi
    0000013c: 	cmpl	%esi, %r15d
    0000013f: 	jge	.Ltmp5401 # Offset: 319
    00000141: 	movsd	init_value(%rip), %xmm4
    00000149: 	jmp	.Ltmp5406 # Offset: 329
    0000014e: 	nop # Size: 2
.Ltmp5405:
    00000150: 	addl	$0x1, %r15d
    00000154: 	cmpl	%esi, %r15d
    00000157: 	jl	.Ltmp5406 # Offset: 343
.Ltmp5401:
    0000015d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000164: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000016b: 	subq	$0x20, %rax
    0000016f: 	cmpq	%rax, %rbx
    00000172: 	je	.Ltmp5407 # Offset: 370
    00000178: 	movq	0x8(%rsp), %rax
    0000017d: 	leaq	0x10(%rbx), %rdi
    00000181: 	movq	%rdi, (%rbx)
    00000184: 	movq	(%rax), %r13
    00000187: 	movq	0x8(%rax), %r12
    0000018b: 	movq	%r13, %rax
    0000018e: 	addq	%r12, %rax
    00000191: 	je	.Ltmp5408 # Offset: 401
    00000193: 	testq	%r13, %r13
    00000196: 	je	.Ltmp5409 # Offset: 406
.Ltmp5408:
    0000019c: 	movq	%r12, 0x10(%rsp)
    000001a1: 	cmpq	$0xf, %r12
    000001a5: 	ja	.Ltmp5410 # Offset: 421
    000001ab: 	cmpq	$0x1, %r12
    000001af: 	jne	.Ltmp5411 # Offset: 431
    000001b5: 	movzbl	(%r13), %eax
    000001ba: 	movb	%al, 0x10(%rbx)
.Ltmp5415:
    000001bd: 	movq	%r12, 0x8(%rbx)
    000001c1: 	movb	$0x0, (%rdi,%r12)
    000001c6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001d4: 	addq	$0x20, %rax
    000001d8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001df: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001e6: 	je	.Ltmp5412 # Offset: 486
.Ltmp5416:
    000001ec: 	movq	-0x20(%rax), %rbp
    000001f0: 	callq	clock@PLT # Offset: 496
    000001f5: 	movq	%rax, end_time(%rip)
    000001fc: 	movq	0x18(%rsp), %rdx
    00000201: 	subq	%fs:0x28, %rdx
    0000020a: 	jne	.Ltmp5413 # Offset: 522
    00000210: 	subq	start_time(%rip), %rax
    00000217: 	pxor	%xmm0, %xmm0
    0000021b: 	movq	%rbp, %rdi
    0000021e: 	cvtsi2sd	%rax, %xmm0
    00000223: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000022b: 	addq	$0x28, %rsp
    0000022f: 	popq	%rbx
    00000230: 	popq	%rbp
    00000231: 	popq	%r12
    00000233: 	popq	%r13
    00000235: 	popq	%r14
    00000237: 	popq	%r15
    00000239: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 569
.Ltmp5403:
    0000023e: 	xorl	%edx, %edx
    00000240: 	xorl	%eax, %eax
    00000242: 	jmp	.Ltmp5414 # Offset: 578
.Ltmp5410:
    00000247: 	movq	%rbx, %rdi
    0000024a: 	leaq	0x10(%rsp), %rsi
    0000024f: 	xorl	%edx, %edx
    00000251: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 593
    00000256: 	movq	%rax, (%rbx)
    00000259: 	movq	%rax, %rdi
    0000025c: 	movq	0x10(%rsp), %rax
    00000261: 	movq	%rax, 0x10(%rbx)
.Ltmp5417:
    00000265: 	movq	%r12, %rdx
    00000268: 	movq	%r13, %rsi
    0000026b: 	callq	memcpy@PLT # Offset: 619
    00000270: 	movq	0x10(%rsp), %r12
    00000275: 	movq	(%rbx), %rdi
    00000278: 	jmp	.Ltmp5415 # Offset: 632
.Ltmp5407:
    0000027d: 	movq	0x8(%rsp), %rsi
    00000282: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000289: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 649
    0000028e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000295: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000029c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002a3: 	jne	.Ltmp5416 # Offset: 675
.Ltmp5412:
    000002a9: 	movq	-0x8(%rdx), %rax
    000002ad: 	addq	$0x200, %rax
    000002b3: 	jmp	.Ltmp5416 # Offset: 691
.Ltmp5411:
    000002b8: 	testq	%r12, %r12
    000002bb: 	je	.Ltmp5415 # Offset: 699
    000002c1: 	jmp	.Ltmp5417 # Offset: 705
.Ltmp5413:
    000002c3: 	callq	__stack_chk_fail@PLT # Offset: 707
.Ltmp5409:
    000002c8: 	leaq	DATAat0x57008(%rip), %rdi
    000002cf: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 719
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIl26custom_multiply_shiftadd_2IlEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeIlEvv" after disassembly {
  Number      : 201
  State       : disassembled
  Address     : 0x3fd40
  Size        : 0x613a
  MaxSize     : 0x6140
  Offset      : 0x3fd40
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIlEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0200:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp5418:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp5418 # Offset: 37
    00000027: 	subq	$0xac8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm2
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    0000003e: 	leaq	"_ZL7gLabels/1"(%rip), %r15
    00000045: 	movq	%r15, %rdi
    00000048: 	movq	%fs:0x28, %rax
    00000051: 	movq	%rax, 0xfab8(%rsp)
    00000059: 	xorl	%eax, %eax
    0000005b: 	leaq	0x40(%rsp), %rax
    00000060: 	leaq	0x10(%rsp), %rsi
    00000065: 	movl	$0x36746e69, 0x40(%rsp)
    0000006d: 	movq	%rax, 0x8(%rsp)
    00000072: 	leaq	0xb0(%rsp), %rbp
    0000007a: 	leaq	0xfab0(%rsp), %rbx
    00000082: 	movq	%rax, 0x30(%rsp)
    00000087: 	movl	$0x5f34, %eax
    0000008c: 	movw	%ax, 0x44(%rsp)
    00000091: 	movb	$0x74, 0x46(%rsp)
    00000096: 	movq	$0x7, 0x38(%rsp)
    0000009f: 	movb	$0x0, 0x47(%rsp)
    000000a4: 	movaps	%xmm2, 0x10(%rsp)
    000000a9: 	movaps	%xmm3, 0x20(%rsp)
    000000ae: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 174
    000000b3: 	cvttsd2si	init_value(%rip), %rax
    000000bc: 	movq	%rax, %xmm0
    000000c1: 	movq	%rbp, %rax
    000000c4: 	punpcklqdq	%xmm0, %xmm0
    000000c8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp5419:
    000000d0: 	movaps	%xmm0, (%rax)
    000000d3: 	addq	$0x10, %rax
    000000d7: 	cmpq	%rbx, %rax
    000000da: 	jne	.Ltmp5419 # Offset: 218
    000000dc: 	leaq	0x90(%rsp), %r12
    000000e4: 	leaq	DATAat0x57a30(%rip), %r14
    000000eb: 	movq	%r14, %rsi
    000000ee: 	movq	%r12, %rdi
    000000f1: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 241
    000000f6: 	movq	0x90(%rsp), %rdi
    000000fe: 	leaq	0xa0(%rsp), %r13
    00000106: 	cmpq	%r13, %rdi
    00000109: 	je	.Ltmp5420 # Offset: 265
    0000010b: 	movq	0xa0(%rsp), %rax
    00000113: 	leaq	0x1(%rax), %rsi
    00000117: 	callq	_ZdlPvm@PLT # Offset: 279
.Ltmp5420:
    0000011c: 	movq	%r14, %rsi
    0000011f: 	movq	%r12, %rdi
    00000122: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 290
    00000127: 	movq	0x90(%rsp), %rdi
    0000012f: 	cmpq	%r13, %rdi
    00000132: 	je	.Ltmp5421 # Offset: 306
    00000134: 	movq	0xa0(%rsp), %rax
    0000013c: 	leaq	0x1(%rax), %rsi
    00000140: 	callq	_ZdlPvm@PLT # Offset: 320
.Ltmp5421:
    00000145: 	movq	%r14, %rsi
    00000148: 	movq	%r12, %rdi
    0000014b: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 331
    00000150: 	movq	0x90(%rsp), %rdi
    00000158: 	cmpq	%r13, %rdi
    0000015b: 	je	.Ltmp5422 # Offset: 347
    0000015d: 	movq	0xa0(%rsp), %rax
    00000165: 	leaq	0x1(%rax), %rsi
    00000169: 	callq	_ZdlPvm@PLT # Offset: 361
.Ltmp5422:
    0000016e: 	movq	%r14, %rsi
    00000171: 	movq	%r12, %rdi
    00000174: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 372
    00000179: 	movq	0x90(%rsp), %rdi
    00000181: 	cmpq	%r13, %rdi
    00000184: 	je	.Ltmp5423 # Offset: 388
    00000186: 	movq	0xa0(%rsp), %rax
    0000018e: 	leaq	0x1(%rax), %rsi
    00000192: 	callq	_ZdlPvm@PLT # Offset: 402
.Ltmp5423:
    00000197: 	movq	%r14, %rsi
    0000019a: 	movq	%r12, %rdi
    0000019d: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 413
    000001a2: 	movq	0x90(%rsp), %rdi
    000001aa: 	cmpq	%r13, %rdi
    000001ad: 	je	.Ltmp5424 # Offset: 429
    000001af: 	movq	0xa0(%rsp), %rax
    000001b7: 	leaq	0x1(%rax), %rsi
    000001bb: 	callq	_ZdlPvm@PLT # Offset: 443
.Ltmp5424:
    000001c0: 	movq	%r14, %rsi
    000001c3: 	movq	%r12, %rdi
    000001c6: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 454
    000001cb: 	movq	0x90(%rsp), %rdi
    000001d3: 	cmpq	%r13, %rdi
    000001d6: 	je	.Ltmp5425 # Offset: 470
    000001d8: 	movq	0xa0(%rsp), %rax
    000001e0: 	leaq	0x1(%rax), %rsi
    000001e4: 	callq	_ZdlPvm@PLT # Offset: 484
.Ltmp5425:
    000001e9: 	movq	%r14, %rsi
    000001ec: 	movq	%r12, %rdi
    000001ef: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 495
    000001f4: 	movq	0x90(%rsp), %rdi
    000001fc: 	cmpq	%r13, %rdi
    000001ff: 	je	.Ltmp5426 # Offset: 511
    00000201: 	movq	0xa0(%rsp), %rax
    00000209: 	leaq	0x1(%rax), %rsi
    0000020d: 	callq	_ZdlPvm@PLT # Offset: 525
.Ltmp5426:
    00000212: 	movq	%r14, %rsi
    00000215: 	movq	%r12, %rdi
    00000218: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 536
    0000021d: 	movq	0x90(%rsp), %rdi
    00000225: 	cmpq	%r13, %rdi
    00000228: 	je	.Ltmp5427 # Offset: 552
    0000022a: 	movq	0xa0(%rsp), %rax
    00000232: 	leaq	0x1(%rax), %rsi
    00000236: 	callq	_ZdlPvm@PLT # Offset: 566
.Ltmp5427:
    0000023b: 	movq	%r14, %rsi
    0000023e: 	movq	%r12, %rdi
    00000241: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 577
    00000246: 	movq	0x90(%rsp), %rdi
    0000024e: 	cmpq	%r13, %rdi
    00000251: 	je	.Ltmp5428 # Offset: 593
    00000253: 	movq	0xa0(%rsp), %rax
    0000025b: 	leaq	0x1(%rax), %rsi
    0000025f: 	callq	_ZdlPvm@PLT # Offset: 607
.Ltmp5428:
    00000264: 	movq	%r14, %rsi
    00000267: 	movq	%r12, %rdi
    0000026a: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 618
    0000026f: 	movq	0x90(%rsp), %rdi
    00000277: 	cmpq	%r13, %rdi
    0000027a: 	je	.Ltmp5429 # Offset: 634
    0000027c: 	movq	0xa0(%rsp), %rax
    00000284: 	leaq	0x1(%rax), %rsi
    00000288: 	callq	_ZdlPvm@PLT # Offset: 648
.Ltmp5429:
    0000028d: 	movq	%r14, %rsi
    00000290: 	movq	%r12, %rdi
    00000293: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 659
    00000298: 	movq	0x90(%rsp), %rdi
    000002a0: 	cmpq	%r13, %rdi
    000002a3: 	je	.Ltmp5430 # Offset: 675
    000002a5: 	movq	0xa0(%rsp), %rax
    000002ad: 	leaq	0x1(%rax), %rsi
    000002b1: 	callq	_ZdlPvm@PLT # Offset: 689
.Ltmp5430:
    000002b6: 	movq	%r14, %rsi
    000002b9: 	movq	%r12, %rdi
    000002bc: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 700
    000002c1: 	movq	0x90(%rsp), %rdi
    000002c9: 	cmpq	%r13, %rdi
    000002cc: 	je	.Ltmp5431 # Offset: 716
    000002ce: 	movq	0xa0(%rsp), %rax
    000002d6: 	leaq	0x1(%rax), %rsi
    000002da: 	callq	_ZdlPvm@PLT # Offset: 730
.Ltmp5431:
    000002df: 	movq	%r14, %rsi
    000002e2: 	movq	%r12, %rdi
    000002e5: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 741
    000002ea: 	movq	0x90(%rsp), %rdi
    000002f2: 	cmpq	%r13, %rdi
    000002f5: 	je	.Ltmp5432 # Offset: 757
    000002f7: 	movq	0xa0(%rsp), %rax
    000002ff: 	leaq	0x1(%rax), %rsi
    00000303: 	callq	_ZdlPvm@PLT # Offset: 771
.Ltmp5432:
    00000308: 	movq	%r14, %rsi
    0000030b: 	movq	%r12, %rdi
    0000030e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 782
    00000313: 	movq	0x90(%rsp), %rdi
    0000031b: 	cmpq	%r13, %rdi
    0000031e: 	je	.Ltmp5433 # Offset: 798
    00000320: 	movq	0xa0(%rsp), %rax
    00000328: 	leaq	0x1(%rax), %rsi
    0000032c: 	callq	_ZdlPvm@PLT # Offset: 812
.Ltmp5433:
    00000331: 	movq	%r14, %rsi
    00000334: 	movq	%r12, %rdi
    00000337: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 823
    0000033c: 	movq	0x90(%rsp), %rdi
    00000344: 	cmpq	%r13, %rdi
    00000347: 	je	.Ltmp5434 # Offset: 839
    00000349: 	movq	0xa0(%rsp), %rax
    00000351: 	leaq	0x1(%rax), %rsi
    00000355: 	callq	_ZdlPvm@PLT # Offset: 853
.Ltmp5434:
    0000035a: 	movq	%r14, %rsi
    0000035d: 	movq	%r12, %rdi
    00000360: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 864
    00000365: 	movq	0x90(%rsp), %rdi
    0000036d: 	cmpq	%r13, %rdi
    00000370: 	je	.Ltmp5435 # Offset: 880
    00000372: 	movq	0xa0(%rsp), %rax
    0000037a: 	leaq	0x1(%rax), %rsi
    0000037e: 	callq	_ZdlPvm@PLT # Offset: 894
.Ltmp5435:
    00000383: 	movq	%r14, %rsi
    00000386: 	movq	%r12, %rdi
    00000389: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 905
    0000038e: 	movq	0x90(%rsp), %rdi
    00000396: 	cmpq	%r13, %rdi
    00000399: 	je	.Ltmp5436 # Offset: 921
    0000039b: 	movq	0xa0(%rsp), %rax
    000003a3: 	leaq	0x1(%rax), %rsi
    000003a7: 	callq	_ZdlPvm@PLT # Offset: 935
.Ltmp5436:
    000003ac: 	movq	%r14, %rsi
    000003af: 	movq	%r12, %rdi
    000003b2: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 946
    000003b7: 	movq	0x90(%rsp), %rdi
    000003bf: 	cmpq	%r13, %rdi
    000003c2: 	je	.Ltmp5437 # Offset: 962
    000003c4: 	movq	0xa0(%rsp), %rax
    000003cc: 	leaq	0x1(%rax), %rsi
    000003d0: 	callq	_ZdlPvm@PLT # Offset: 976
.Ltmp5437:
    000003d5: 	movq	%r14, %rsi
    000003d8: 	movq	%r12, %rdi
    000003db: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 987
    000003e0: 	movq	0x90(%rsp), %rdi
    000003e8: 	cmpq	%r13, %rdi
    000003eb: 	je	.Ltmp5438 # Offset: 1003
    000003ed: 	movq	0xa0(%rsp), %rax
    000003f5: 	leaq	0x1(%rax), %rsi
    000003f9: 	callq	_ZdlPvm@PLT # Offset: 1017
.Ltmp5438:
    000003fe: 	movq	%r14, %rsi
    00000401: 	movq	%r12, %rdi
    00000404: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 1028
    00000409: 	movq	0x90(%rsp), %rdi
    00000411: 	cmpq	%r13, %rdi
    00000414: 	je	.Ltmp5439 # Offset: 1044
    00000416: 	movq	0xa0(%rsp), %rax
    0000041e: 	leaq	0x1(%rax), %rsi
    00000422: 	callq	_ZdlPvm@PLT # Offset: 1058
.Ltmp5439:
    00000427: 	movq	%r14, %rsi
    0000042a: 	movq	%r12, %rdi
    0000042d: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 1069
    00000432: 	movq	0x90(%rsp), %rdi
    0000043a: 	cmpq	%r13, %rdi
    0000043d: 	je	.Ltmp5440 # Offset: 1085
    0000043f: 	movq	0xa0(%rsp), %rax
    00000447: 	leaq	0x1(%rax), %rsi
    0000044b: 	callq	_ZdlPvm@PLT # Offset: 1099
.Ltmp5440:
    00000450: 	leaq	0x30(%rsp), %r14
    00000455: 	leaq	DATAat0x571e0(%rip), %rdx
    0000045c: 	movq	%r12, %rdi
    0000045f: 	movq	%r14, %rsi
    00000462: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1122
    00000467: 	callq	clock@PLT # Offset: 1127
    0000046c: 	movl	iterations(%rip), %ecx
    00000472: 	movl	$0x0, (%rsp)
    00000479: 	movq	%rax, start_time(%rip)
    00000480: 	testl	%ecx, %ecx
    00000482: 	jle	.Ltmp5441 # Offset: 1154
    00000484: 	nopl	(%rax) # Size: 4
.Ltmp5444:
    00000488: 	movq	%rbp, %rax
    0000048b: 	pxor	%xmm1, %xmm1
    0000048f: 	nop # Size: 1
.Ltmp5442:
    00000490: 	movdqa	(%rax), %xmm0
    00000494: 	addq	$0x10, %rax
    00000498: 	psllq	$0x1, %xmm0
    0000049d: 	paddq	%xmm0, %xmm1
    000004a1: 	cmpq	%rbx, %rax
    000004a4: 	jne	.Ltmp5442 # Offset: 1188
    000004a6: 	cvttsd2si	init_value(%rip), %rdx
    000004af: 	movdqa	%xmm1, %xmm0
    000004b3: 	psrldq	$0x8, %xmm0
    000004b8: 	paddq	%xmm0, %xmm1
    000004bc: 	movq	%xmm1, %rax
    000004c1: 	addq	%rdx, %rdx
    000004c4: 	imulq	$0x1f40, %rdx, %rdx
    000004cb: 	cmpq	%rax, %rdx
    000004ce: 	je	.Ltmp5443 # Offset: 1230
    000004d0: 	movl	current_test(%rip), %edx
    000004d6: 	leaq	DATAat0x571d0(%rip), %rsi
    000004dd: 	movl	$0x1, %edi
    000004e2: 	xorl	%eax, %eax
    000004e4: 	callq	__printf_chk@PLT # Offset: 1252
    000004e9: 	movl	iterations(%rip), %ecx
.Ltmp5443:
    000004ef: 	addl	$0x1, (%rsp)
    000004f3: 	movl	(%rsp), %eax
    000004f6: 	cmpl	%ecx, %eax
    000004f8: 	jl	.Ltmp5444 # Offset: 1272
.Ltmp5441:
    000004fa: 	movq	%r12, %rsi
    000004fd: 	movq	%r15, %rdi
    00000500: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1280
    00000505: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000050c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000513: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000051a: 	je	.Ltmp5445 # Offset: 1306
.Ltmp5852:
    00000520: 	movq	-0x20(%rax), %rdi
    00000524: 	movq	%rdi, (%rsp)
    00000528: 	callq	clock@PLT # Offset: 1320
    0000052d: 	movq	(%rsp), %rdi
    00000531: 	pxor	%xmm0, %xmm0
    00000535: 	movq	%rax, end_time(%rip)
    0000053c: 	subq	start_time(%rip), %rax
    00000543: 	cvtsi2sd	%rax, %xmm0
    00000548: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000550: 	callq	_Z13record_resultdPKc # Offset: 1360
    00000555: 	movq	0x90(%rsp), %rdi
    0000055d: 	cmpq	%r13, %rdi
    00000560: 	je	.Ltmp5446 # Offset: 1376
    00000562: 	movq	0xa0(%rsp), %rax
    0000056a: 	leaq	0x1(%rax), %rsi
    0000056e: 	callq	_ZdlPvm@PLT # Offset: 1390
.Ltmp5446:
    00000573: 	leaq	DATAat0x571f1(%rip), %rdx
    0000057a: 	movq	%r14, %rsi
    0000057d: 	movq	%r12, %rdi
    00000580: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1408
    00000585: 	callq	clock@PLT # Offset: 1413
    0000058a: 	movl	iterations(%rip), %esi
    00000590: 	movl	$0x0, (%rsp)
    00000597: 	movq	%rax, start_time(%rip)
    0000059e: 	testl	%esi, %esi
    000005a0: 	jle	.Ltmp5447 # Offset: 1440
    000005a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5450:
    000005a8: 	movq	%rbp, %rax
    000005ab: 	xorl	%edx, %edx
    000005ad: 	nopl	(%rax) # Size: 3
.Ltmp5448:
    000005b0: 	movq	(%rax), %rcx
    000005b3: 	addq	$0x8, %rax
    000005b7: 	leaq	(%rdx,%rcx,2), %rdx
    000005bb: 	cmpq	%rbx, %rax
    000005be: 	jne	.Ltmp5448 # Offset: 1470
    000005c0: 	cvttsd2si	init_value(%rip), %rax
    000005c9: 	imulq	$0x3e80, %rax, %rax
    000005d0: 	cmpq	%rax, %rdx
    000005d3: 	je	.Ltmp5449 # Offset: 1491
    000005d5: 	movl	current_test(%rip), %edx
    000005db: 	leaq	DATAat0x571d0(%rip), %rsi
    000005e2: 	movl	$0x1, %edi
    000005e7: 	xorl	%eax, %eax
    000005e9: 	callq	__printf_chk@PLT # Offset: 1513
    000005ee: 	movl	iterations(%rip), %esi
.Ltmp5449:
    000005f4: 	addl	$0x1, (%rsp)
    000005f8: 	movl	(%rsp), %eax
    000005fb: 	cmpl	%esi, %eax
    000005fd: 	jl	.Ltmp5450 # Offset: 1533
.Ltmp5447:
    000005ff: 	movq	%r12, %rsi
    00000602: 	movq	%r15, %rdi
    00000605: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1541
    0000060a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000611: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000618: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000061f: 	je	.Ltmp5451 # Offset: 1567
.Ltmp5909:
    00000625: 	movq	-0x20(%rax), %rdi
    00000629: 	movq	%rdi, (%rsp)
    0000062d: 	callq	clock@PLT # Offset: 1581
    00000632: 	movq	(%rsp), %rdi
    00000636: 	pxor	%xmm0, %xmm0
    0000063a: 	movq	%rax, end_time(%rip)
    00000641: 	subq	start_time(%rip), %rax
    00000648: 	cvtsi2sd	%rax, %xmm0
    0000064d: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000655: 	callq	_Z13record_resultdPKc # Offset: 1621
    0000065a: 	movq	0x90(%rsp), %rdi
    00000662: 	cmpq	%r13, %rdi
    00000665: 	je	.Ltmp5452 # Offset: 1637
    00000667: 	movq	0xa0(%rsp), %rax
    0000066f: 	leaq	0x1(%rax), %rsi
    00000673: 	callq	_ZdlPvm@PLT # Offset: 1651
.Ltmp5452:
    00000678: 	leaq	DATAat0x571fb(%rip), %rdx
    0000067f: 	movq	%r14, %rsi
    00000682: 	movq	%r12, %rdi
    00000685: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1669
    0000068a: 	callq	clock@PLT # Offset: 1674
    0000068f: 	movl	iterations(%rip), %esi
    00000695: 	movl	$0x0, (%rsp)
    0000069c: 	movq	%rax, start_time(%rip)
    000006a3: 	testl	%esi, %esi
    000006a5: 	jle	.Ltmp5453 # Offset: 1701
    000006a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5456:
    000006b0: 	movq	%rbp, %rax
    000006b3: 	xorl	%edx, %edx
    000006b5: 	nopl	(%rax) # Size: 3
.Ltmp5454:
    000006b8: 	movq	(%rax), %rcx
    000006bb: 	addq	$0x8, %rax
    000006bf: 	leaq	(%rdx,%rcx,2), %rdx
    000006c3: 	cmpq	%rbx, %rax
    000006c6: 	jne	.Ltmp5454 # Offset: 1734
    000006c8: 	cvttsd2si	init_value(%rip), %rax
    000006d1: 	imulq	$0x3e80, %rax, %rax
    000006d8: 	cmpq	%rax, %rdx
    000006db: 	je	.Ltmp5455 # Offset: 1755
    000006dd: 	movl	current_test(%rip), %edx
    000006e3: 	leaq	DATAat0x571d0(%rip), %rsi
    000006ea: 	movl	$0x1, %edi
    000006ef: 	xorl	%eax, %eax
    000006f1: 	callq	__printf_chk@PLT # Offset: 1777
    000006f6: 	movl	iterations(%rip), %esi
.Ltmp5455:
    000006fc: 	addl	$0x1, (%rsp)
    00000700: 	movl	(%rsp), %eax
    00000703: 	cmpl	%esi, %eax
    00000705: 	jl	.Ltmp5456 # Offset: 1797
.Ltmp5453:
    00000707: 	movq	%r12, %rsi
    0000070a: 	movq	%r15, %rdi
    0000070d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1805
    00000712: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000719: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000720: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000727: 	je	.Ltmp5457 # Offset: 1831
.Ltmp5908:
    0000072d: 	movq	-0x20(%rax), %rdi
    00000731: 	movq	%rdi, (%rsp)
    00000735: 	callq	clock@PLT # Offset: 1845
    0000073a: 	movq	(%rsp), %rdi
    0000073e: 	pxor	%xmm0, %xmm0
    00000742: 	movq	%rax, end_time(%rip)
    00000749: 	subq	start_time(%rip), %rax
    00000750: 	cvtsi2sd	%rax, %xmm0
    00000755: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000075d: 	callq	_Z13record_resultdPKc # Offset: 1885
    00000762: 	movq	0x90(%rsp), %rdi
    0000076a: 	cmpq	%r13, %rdi
    0000076d: 	je	.Ltmp5458 # Offset: 1901
    0000076f: 	movq	0xa0(%rsp), %rax
    00000777: 	leaq	0x1(%rax), %rsi
    0000077b: 	callq	_ZdlPvm@PLT # Offset: 1915
.Ltmp5458:
    00000780: 	leaq	DATAat0x57211(%rip), %rdx
    00000787: 	movq	%r14, %rsi
    0000078a: 	movq	%r12, %rdi
    0000078d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1933
    00000792: 	movq	%r12, %rcx
    00000795: 	movl	$0x2, %edx
    0000079a: 	movl	$0x1f40, %esi
    0000079f: 	movq	%rbp, %rdi
    000007a2: 	callq	_Z14test_variable1Il24custom_multiply_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1954
    000007a7: 	movq	0x90(%rsp), %rdi
    000007af: 	cmpq	%r13, %rdi
    000007b2: 	je	.Ltmp5459 # Offset: 1970
    000007b4: 	movq	0xa0(%rsp), %rax
    000007bc: 	leaq	0x1(%rax), %rsi
    000007c0: 	callq	_ZdlPvm@PLT # Offset: 1984
.Ltmp5459:
    000007c5: 	leaq	DATAat0x57229(%rip), %rdx
    000007cc: 	movq	%r14, %rsi
    000007cf: 	movq	%r12, %rdi
    000007d2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2002
    000007d7: 	callq	clock@PLT # Offset: 2007
    000007dc: 	movl	iterations(%rip), %esi
    000007e2: 	movl	$0x0, (%rsp)
    000007e9: 	movq	%rax, start_time(%rip)
    000007f0: 	testl	%esi, %esi
    000007f2: 	jle	.Ltmp5460 # Offset: 2034
    000007f4: 	nopl	(%rax) # Size: 4
.Ltmp5463:
    000007f8: 	movq	%rbp, %rax
    000007fb: 	xorl	%edx, %edx
    000007fd: 	nopl	(%rax) # Size: 3
.Ltmp5461:
    00000800: 	movq	(%rax), %rcx
    00000803: 	addq	$0x8, %rax
    00000807: 	leaq	(%rdx,%rcx,2), %rdx
    0000080b: 	cmpq	%rbx, %rax
    0000080e: 	jne	.Ltmp5461 # Offset: 2062
    00000810: 	cvttsd2si	init_value(%rip), %rax
    00000819: 	imulq	$0x3e80, %rax, %rax
    00000820: 	cmpq	%rax, %rdx
    00000823: 	je	.Ltmp5462 # Offset: 2083
    00000825: 	movl	current_test(%rip), %edx
    0000082b: 	leaq	DATAat0x571d0(%rip), %rsi
    00000832: 	movl	$0x1, %edi
    00000837: 	xorl	%eax, %eax
    00000839: 	callq	__printf_chk@PLT # Offset: 2105
    0000083e: 	movl	iterations(%rip), %esi
.Ltmp5462:
    00000844: 	addl	$0x1, (%rsp)
    00000848: 	movl	(%rsp), %eax
    0000084b: 	cmpl	%esi, %eax
    0000084d: 	jl	.Ltmp5463 # Offset: 2125
.Ltmp5460:
    0000084f: 	movq	%r12, %rsi
    00000852: 	movq	%r15, %rdi
    00000855: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2133
    0000085a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000861: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000868: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000086f: 	je	.Ltmp5464 # Offset: 2159
.Ltmp5907:
    00000875: 	movq	-0x20(%rax), %rdi
    00000879: 	movq	%rdi, (%rsp)
    0000087d: 	callq	clock@PLT # Offset: 2173
    00000882: 	movq	(%rsp), %rdi
    00000886: 	pxor	%xmm0, %xmm0
    0000088a: 	movq	%rax, end_time(%rip)
    00000891: 	subq	start_time(%rip), %rax
    00000898: 	cvtsi2sd	%rax, %xmm0
    0000089d: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000008a5: 	callq	_Z13record_resultdPKc # Offset: 2213
    000008aa: 	movq	0x90(%rsp), %rdi
    000008b2: 	cmpq	%r13, %rdi
    000008b5: 	je	.Ltmp5465 # Offset: 2229
    000008b7: 	movq	0xa0(%rsp), %rax
    000008bf: 	leaq	0x1(%rax), %rsi
    000008c3: 	callq	_ZdlPvm@PLT # Offset: 2243
.Ltmp5465:
    000008c8: 	leaq	DATAat0x57241(%rip), %rdx
    000008cf: 	movq	%r14, %rsi
    000008d2: 	movq	%r12, %rdi
    000008d5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2261
    000008da: 	movq	%r12, %rdx
    000008dd: 	movl	$0x1f40, %esi
    000008e2: 	movq	%rbp, %rdi
    000008e5: 	callq	_Z13test_constantIl26custom_multiply_shiftadd_2IlEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2277
    000008ea: 	movq	0x90(%rsp), %rdi
    000008f2: 	cmpq	%r13, %rdi
    000008f5: 	je	.Ltmp5466 # Offset: 2293
    000008f7: 	movq	0xa0(%rsp), %rax
    000008ff: 	leaq	0x1(%rax), %rsi
    00000903: 	callq	_ZdlPvm@PLT # Offset: 2307
.Ltmp5466:
    00000908: 	leaq	DATAat0x57251(%rip), %rdx
    0000090f: 	movq	%r14, %rsi
    00000912: 	movq	%r12, %rdi
    00000915: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2325
    0000091a: 	callq	clock@PLT # Offset: 2330
    0000091f: 	movl	iterations(%rip), %ecx
    00000925: 	movl	$0x0, (%rsp)
    0000092c: 	movq	%rax, start_time(%rip)
    00000933: 	testl	%ecx, %ecx
    00000935: 	jle	.Ltmp5467 # Offset: 2357
    0000093b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp5470:
    00000940: 	movq	%rbp, %rax
    00000943: 	pxor	%xmm1, %xmm1
    00000947: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5468:
    00000950: 	movdqa	(%rax), %xmm0
    00000954: 	addq	$0x10, %rax
    00000958: 	psllq	$0x3, %xmm0
    0000095d: 	paddq	%xmm0, %xmm1
    00000961: 	cmpq	%rbx, %rax
    00000964: 	jne	.Ltmp5468 # Offset: 2404
    00000966: 	cvttsd2si	init_value(%rip), %rdx
    0000096f: 	movdqa	%xmm1, %xmm0
    00000973: 	psrldq	$0x8, %xmm0
    00000978: 	paddq	%xmm0, %xmm1
    0000097c: 	movq	%xmm1, %rax
    00000981: 	shlq	$0x3, %rdx
    00000985: 	imulq	$0x1f40, %rdx, %rdx
    0000098c: 	cmpq	%rax, %rdx
    0000098f: 	je	.Ltmp5469 # Offset: 2447
    00000991: 	movl	current_test(%rip), %edx
    00000997: 	leaq	DATAat0x571d0(%rip), %rsi
    0000099e: 	movl	$0x1, %edi
    000009a3: 	xorl	%eax, %eax
    000009a5: 	callq	__printf_chk@PLT # Offset: 2469
    000009aa: 	movl	iterations(%rip), %ecx
.Ltmp5469:
    000009b0: 	addl	$0x1, (%rsp)
    000009b4: 	movl	(%rsp), %eax
    000009b7: 	cmpl	%ecx, %eax
    000009b9: 	jl	.Ltmp5470 # Offset: 2489
.Ltmp5467:
    000009bb: 	movq	%r12, %rsi
    000009be: 	movq	%r15, %rdi
    000009c1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2497
    000009c6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000009cd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000009d4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000009db: 	je	.Ltmp5471 # Offset: 2523
.Ltmp5906:
    000009e1: 	movq	-0x20(%rax), %rdi
    000009e5: 	movq	%rdi, (%rsp)
    000009e9: 	callq	clock@PLT # Offset: 2537
    000009ee: 	movq	(%rsp), %rdi
    000009f2: 	pxor	%xmm0, %xmm0
    000009f6: 	movq	%rax, end_time(%rip)
    000009fd: 	subq	start_time(%rip), %rax
    00000a04: 	cvtsi2sd	%rax, %xmm0
    00000a09: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000a11: 	callq	_Z13record_resultdPKc # Offset: 2577
    00000a16: 	movq	0x90(%rsp), %rdi
    00000a1e: 	cmpq	%r13, %rdi
    00000a21: 	je	.Ltmp5472 # Offset: 2593
    00000a23: 	movq	0xa0(%rsp), %rax
    00000a2b: 	leaq	0x1(%rax), %rsi
    00000a2f: 	callq	_ZdlPvm@PLT # Offset: 2607
.Ltmp5472:
    00000a34: 	leaq	DATAat0x57262(%rip), %rdx
    00000a3b: 	movq	%r14, %rsi
    00000a3e: 	movq	%r12, %rdi
    00000a41: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2625
    00000a46: 	movq	%r12, %rcx
    00000a49: 	movl	$0x8, %edx
    00000a4e: 	movl	$0x1f40, %esi
    00000a53: 	movq	%rbp, %rdi
    00000a56: 	callq	_Z14test_variable1Il24custom_multiply_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2646
    00000a5b: 	movq	0x90(%rsp), %rdi
    00000a63: 	cmpq	%r13, %rdi
    00000a66: 	je	.Ltmp5473 # Offset: 2662
    00000a68: 	movq	0xa0(%rsp), %rax
    00000a70: 	leaq	0x1(%rax), %rsi
    00000a74: 	callq	_ZdlPvm@PLT # Offset: 2676
.Ltmp5473:
    00000a79: 	leaq	DATAat0x5727a(%rip), %rdx
    00000a80: 	movq	%r14, %rsi
    00000a83: 	movq	%r12, %rdi
    00000a86: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2694
    00000a8b: 	callq	clock@PLT # Offset: 2699
    00000a90: 	movl	iterations(%rip), %esi
    00000a96: 	movl	$0x0, (%rsp)
    00000a9d: 	movq	%rax, start_time(%rip)
    00000aa4: 	testl	%esi, %esi
    00000aa6: 	jle	.Ltmp5474 # Offset: 2726
    00000aa8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp5477:
    00000ab0: 	movq	%rbp, %rax
    00000ab3: 	xorl	%edx, %edx
    00000ab5: 	nopl	(%rax) # Size: 3
.Ltmp5475:
    00000ab8: 	movq	(%rax), %rcx
    00000abb: 	addq	$0x8, %rax
    00000abf: 	leaq	(%rdx,%rcx,8), %rdx
    00000ac3: 	cmpq	%rbx, %rax
    00000ac6: 	jne	.Ltmp5475 # Offset: 2758
    00000ac8: 	cvttsd2si	init_value(%rip), %rax
    00000ad1: 	imulq	$0xfa00, %rax, %rax
    00000ad8: 	cmpq	%rax, %rdx
    00000adb: 	je	.Ltmp5476 # Offset: 2779
    00000add: 	movl	current_test(%rip), %edx
    00000ae3: 	leaq	DATAat0x571d0(%rip), %rsi
    00000aea: 	movl	$0x1, %edi
    00000aef: 	xorl	%eax, %eax
    00000af1: 	callq	__printf_chk@PLT # Offset: 2801
    00000af6: 	movl	iterations(%rip), %esi
.Ltmp5476:
    00000afc: 	addl	$0x1, (%rsp)
    00000b00: 	movl	(%rsp), %eax
    00000b03: 	cmpl	%esi, %eax
    00000b05: 	jl	.Ltmp5477 # Offset: 2821
.Ltmp5474:
    00000b07: 	movq	%r12, %rsi
    00000b0a: 	movq	%r15, %rdi
    00000b0d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2829
    00000b12: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b19: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b20: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b27: 	je	.Ltmp5478 # Offset: 2855
.Ltmp5905:
    00000b2d: 	movq	-0x20(%rax), %rdi
    00000b31: 	movq	%rdi, (%rsp)
    00000b35: 	callq	clock@PLT # Offset: 2869
    00000b3a: 	movq	(%rsp), %rdi
    00000b3e: 	pxor	%xmm0, %xmm0
    00000b42: 	movq	%rax, end_time(%rip)
    00000b49: 	subq	start_time(%rip), %rax
    00000b50: 	cvtsi2sd	%rax, %xmm0
    00000b55: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000b5d: 	callq	_Z13record_resultdPKc # Offset: 2909
    00000b62: 	movq	0x90(%rsp), %rdi
    00000b6a: 	cmpq	%r13, %rdi
    00000b6d: 	je	.Ltmp5479 # Offset: 2925
    00000b6f: 	movq	0xa0(%rsp), %rax
    00000b77: 	leaq	0x1(%rax), %rsi
    00000b7b: 	callq	_ZdlPvm@PLT # Offset: 2939
.Ltmp5479:
    00000b80: 	leaq	DATAat0x57292(%rip), %rdx
    00000b87: 	movq	%r14, %rsi
    00000b8a: 	movq	%r12, %rdi
    00000b8d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2957
    00000b92: 	callq	clock@PLT # Offset: 2962
    00000b97: 	movl	iterations(%rip), %ecx
    00000b9d: 	movl	$0x0, (%rsp)
    00000ba4: 	movq	%rax, start_time(%rip)
    00000bab: 	testl	%ecx, %ecx
    00000bad: 	jle	.Ltmp5480 # Offset: 2989
    00000baf: 	nop # Size: 1
.Ltmp5483:
    00000bb0: 	movq	%rbp, %rax
    00000bb3: 	pxor	%xmm1, %xmm1
    00000bb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5481:
    00000bc0: 	movdqa	(%rax), %xmm0
    00000bc4: 	addq	$0x10, %rax
    00000bc8: 	psllq	$0x6, %xmm0
    00000bcd: 	paddq	%xmm0, %xmm1
    00000bd1: 	cmpq	%rbx, %rax
    00000bd4: 	jne	.Ltmp5481 # Offset: 3028
    00000bd6: 	cvttsd2si	init_value(%rip), %rdx
    00000bdf: 	movdqa	%xmm1, %xmm0
    00000be3: 	psrldq	$0x8, %xmm0
    00000be8: 	paddq	%xmm0, %xmm1
    00000bec: 	movq	%xmm1, %rax
    00000bf1: 	shlq	$0x6, %rdx
    00000bf5: 	imulq	$0x1f40, %rdx, %rdx
    00000bfc: 	cmpq	%rax, %rdx
    00000bff: 	je	.Ltmp5482 # Offset: 3071
    00000c01: 	movl	current_test(%rip), %edx
    00000c07: 	leaq	DATAat0x571d0(%rip), %rsi
    00000c0e: 	movl	$0x1, %edi
    00000c13: 	xorl	%eax, %eax
    00000c15: 	callq	__printf_chk@PLT # Offset: 3093
    00000c1a: 	movl	iterations(%rip), %ecx
.Ltmp5482:
    00000c20: 	addl	$0x1, (%rsp)
    00000c24: 	movl	(%rsp), %eax
    00000c27: 	cmpl	%ecx, %eax
    00000c29: 	jl	.Ltmp5483 # Offset: 3113
.Ltmp5480:
    00000c2b: 	movq	%r12, %rsi
    00000c2e: 	movq	%r15, %rdi
    00000c31: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3121
    00000c36: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c3d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c44: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c4b: 	je	.Ltmp5484 # Offset: 3147
.Ltmp5904:
    00000c51: 	movq	-0x20(%rax), %rdi
    00000c55: 	movq	%rdi, (%rsp)
    00000c59: 	callq	clock@PLT # Offset: 3161
    00000c5e: 	movq	(%rsp), %rdi
    00000c62: 	pxor	%xmm0, %xmm0
    00000c66: 	movq	%rax, end_time(%rip)
    00000c6d: 	subq	start_time(%rip), %rax
    00000c74: 	cvtsi2sd	%rax, %xmm0
    00000c79: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000c81: 	callq	_Z13record_resultdPKc # Offset: 3201
    00000c86: 	movq	0x90(%rsp), %rdi
    00000c8e: 	cmpq	%r13, %rdi
    00000c91: 	je	.Ltmp5485 # Offset: 3217
    00000c93: 	movq	0xa0(%rsp), %rax
    00000c9b: 	leaq	0x1(%rax), %rsi
    00000c9f: 	callq	_ZdlPvm@PLT # Offset: 3231
.Ltmp5485:
    00000ca4: 	leaq	DATAat0x572a3(%rip), %rdx
    00000cab: 	movq	%r14, %rsi
    00000cae: 	movq	%r12, %rdi
    00000cb1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3249
    00000cb6: 	movq	%r12, %rcx
    00000cb9: 	movl	$0x40, %edx
    00000cbe: 	movl	$0x1f40, %esi
    00000cc3: 	movq	%rbp, %rdi
    00000cc6: 	callq	_Z14test_variable1Il24custom_multiply_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3270
    00000ccb: 	movq	0x90(%rsp), %rdi
    00000cd3: 	cmpq	%r13, %rdi
    00000cd6: 	je	.Ltmp5486 # Offset: 3286
    00000cd8: 	movq	0xa0(%rsp), %rax
    00000ce0: 	leaq	0x1(%rax), %rsi
    00000ce4: 	callq	_ZdlPvm@PLT # Offset: 3300
.Ltmp5486:
    00000ce9: 	leaq	DATAat0x572bc(%rip), %rdx
    00000cf0: 	movq	%r14, %rsi
    00000cf3: 	movq	%r12, %rdi
    00000cf6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3318
    00000cfb: 	callq	clock@PLT # Offset: 3323
    00000d00: 	movl	iterations(%rip), %esi
    00000d06: 	movl	$0x0, (%rsp)
    00000d0d: 	movq	%rax, start_time(%rip)
    00000d14: 	testl	%esi, %esi
    00000d16: 	jle	.Ltmp5487 # Offset: 3350
    00000d18: 	nopl	(%rax,%rax) # Size: 8
.Ltmp5490:
    00000d20: 	movq	%rbp, %rax
    00000d23: 	xorl	%ecx, %ecx
    00000d25: 	nopl	(%rax) # Size: 3
.Ltmp5488:
    00000d28: 	movq	(%rax), %rdx
    00000d2b: 	addq	$0x8, %rax
    00000d2f: 	shlq	$0x6, %rdx
    00000d33: 	addq	%rdx, %rcx
    00000d36: 	cmpq	%rbx, %rax
    00000d39: 	jne	.Ltmp5488 # Offset: 3385
    00000d3b: 	cvttsd2si	init_value(%rip), %rax
    00000d44: 	imulq	$0x7d000, %rax, %rax
    00000d4b: 	cmpq	%rax, %rcx
    00000d4e: 	je	.Ltmp5489 # Offset: 3406
    00000d50: 	movl	current_test(%rip), %edx
    00000d56: 	leaq	DATAat0x571d0(%rip), %rsi
    00000d5d: 	movl	$0x1, %edi
    00000d62: 	xorl	%eax, %eax
    00000d64: 	callq	__printf_chk@PLT # Offset: 3428
    00000d69: 	movl	iterations(%rip), %esi
.Ltmp5489:
    00000d6f: 	addl	$0x1, (%rsp)
    00000d73: 	movl	(%rsp), %eax
    00000d76: 	cmpl	%esi, %eax
    00000d78: 	jl	.Ltmp5490 # Offset: 3448
.Ltmp5487:
    00000d7a: 	movq	%r12, %rsi
    00000d7d: 	movq	%r15, %rdi
    00000d80: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3456
    00000d85: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d8c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d93: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d9a: 	je	.Ltmp5491 # Offset: 3482
.Ltmp5903:
    00000da0: 	movq	-0x20(%rax), %rdi
    00000da4: 	movq	%rdi, (%rsp)
    00000da8: 	callq	clock@PLT # Offset: 3496
    00000dad: 	movq	(%rsp), %rdi
    00000db1: 	pxor	%xmm0, %xmm0
    00000db5: 	movq	%rax, end_time(%rip)
    00000dbc: 	subq	start_time(%rip), %rax
    00000dc3: 	cvtsi2sd	%rax, %xmm0
    00000dc8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000dd0: 	callq	_Z13record_resultdPKc # Offset: 3536
    00000dd5: 	movq	0x90(%rsp), %rdi
    00000ddd: 	cmpq	%r13, %rdi
    00000de0: 	je	.Ltmp5492 # Offset: 3552
    00000de2: 	movq	0xa0(%rsp), %rax
    00000dea: 	leaq	0x1(%rax), %rsi
    00000dee: 	callq	_ZdlPvm@PLT # Offset: 3566
.Ltmp5492:
    00000df3: 	leaq	DATAat0x572d5(%rip), %rdx
    00000dfa: 	movq	%r14, %rsi
    00000dfd: 	movq	%r12, %rdi
    00000e00: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3584
    00000e05: 	movq	%r12, %rcx
    00000e08: 	movl	$0x2a, %edx
    00000e0d: 	movl	$0x1f40, %esi
    00000e12: 	movq	%rbp, %rdi
    00000e15: 	callq	_Z14test_variable1Il24custom_multiply_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3605
    00000e1a: 	movq	0x90(%rsp), %rdi
    00000e22: 	cmpq	%r13, %rdi
    00000e25: 	je	.Ltmp5493 # Offset: 3621
    00000e27: 	movq	0xa0(%rsp), %rax
    00000e2f: 	leaq	0x1(%rax), %rsi
    00000e33: 	callq	_ZdlPvm@PLT # Offset: 3635
.Ltmp5493:
    00000e38: 	leaq	DATAat0x572ee(%rip), %rdx
    00000e3f: 	movq	%r14, %rsi
    00000e42: 	movq	%r12, %rdi
    00000e45: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3653
    00000e4a: 	callq	clock@PLT # Offset: 3658
    00000e4f: 	movl	iterations(%rip), %edi
    00000e55: 	movl	$0x0, (%rsp)
    00000e5c: 	movq	%rax, start_time(%rip)
    00000e63: 	testl	%edi, %edi
    00000e65: 	jle	.Ltmp5494 # Offset: 3685
    00000e67: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5497:
    00000e70: 	movq	%rbp, %rax
    00000e73: 	xorl	%ecx, %ecx
    00000e75: 	nopl	(%rax) # Size: 3
.Ltmp5495:
    00000e78: 	movq	(%rax), %rdx
    00000e7b: 	addq	$0x8, %rax
    00000e7f: 	leaq	(%rdx,%rdx,4), %rsi
    00000e83: 	leaq	(%rdx,%rsi,4), %rdx
    00000e87: 	leaq	(%rcx,%rdx,2), %rcx
    00000e8b: 	cmpq	%rbx, %rax
    00000e8e: 	jne	.Ltmp5495 # Offset: 3726
    00000e90: 	cvttsd2si	init_value(%rip), %rax
    00000e99: 	imulq	$0x52080, %rax, %rax
    00000ea0: 	cmpq	%rax, %rcx
    00000ea3: 	je	.Ltmp5496 # Offset: 3747
    00000ea5: 	movl	current_test(%rip), %edx
    00000eab: 	leaq	DATAat0x571d0(%rip), %rsi
    00000eb2: 	movl	$0x1, %edi
    00000eb7: 	xorl	%eax, %eax
    00000eb9: 	callq	__printf_chk@PLT # Offset: 3769
    00000ebe: 	movl	iterations(%rip), %edi
.Ltmp5496:
    00000ec4: 	addl	$0x1, (%rsp)
    00000ec8: 	movl	(%rsp), %eax
    00000ecb: 	cmpl	%edi, %eax
    00000ecd: 	jl	.Ltmp5497 # Offset: 3789
.Ltmp5494:
    00000ecf: 	movq	%r12, %rsi
    00000ed2: 	movq	%r15, %rdi
    00000ed5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3797
    00000eda: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ee1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ee8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000eef: 	je	.Ltmp5498 # Offset: 3823
.Ltmp5902:
    00000ef5: 	movq	-0x20(%rax), %rdi
    00000ef9: 	movq	%rdi, (%rsp)
    00000efd: 	callq	clock@PLT # Offset: 3837
    00000f02: 	movq	(%rsp), %rdi
    00000f06: 	pxor	%xmm0, %xmm0
    00000f0a: 	movq	%rax, end_time(%rip)
    00000f11: 	subq	start_time(%rip), %rax
    00000f18: 	cvtsi2sd	%rax, %xmm0
    00000f1d: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000f25: 	callq	_Z13record_resultdPKc # Offset: 3877
    00000f2a: 	movq	0x90(%rsp), %rdi
    00000f32: 	cmpq	%r13, %rdi
    00000f35: 	je	.Ltmp5499 # Offset: 3893
    00000f37: 	movq	0xa0(%rsp), %rax
    00000f3f: 	leaq	0x1(%rax), %rsi
    00000f43: 	callq	_ZdlPvm@PLT # Offset: 3907
.Ltmp5499:
    00000f48: 	leaq	DATAat0x57307(%rip), %rdx
    00000f4f: 	movq	%r14, %rsi
    00000f52: 	movq	%r12, %rdi
    00000f55: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3925
    00000f5a: 	movq	%r12, %rdx
    00000f5d: 	movl	$0x1f40, %esi
    00000f62: 	movq	%rbp, %rdi
    00000f65: 	callq	_Z13test_constantIl27custom_multiply_shiftadd_42IlEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3941
    00000f6a: 	movq	0x90(%rsp), %rdi
    00000f72: 	cmpq	%r13, %rdi
    00000f75: 	je	.Ltmp5500 # Offset: 3957
    00000f77: 	movq	0xa0(%rsp), %rax
    00000f7f: 	leaq	0x1(%rax), %rsi
    00000f83: 	callq	_ZdlPvm@PLT # Offset: 3971
.Ltmp5500:
    00000f88: 	leaq	DATAat0x57318(%rip), %rdx
    00000f8f: 	movq	%r14, %rsi
    00000f92: 	movq	%r12, %rdi
    00000f95: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3989
    00000f9a: 	movq	%r12, %rcx
    00000f9d: 	movl	$0x3f, %edx
    00000fa2: 	movl	$0x1f40, %esi
    00000fa7: 	movq	%rbp, %rdi
    00000faa: 	callq	_Z14test_variable1Il24custom_multiply_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4010
    00000faf: 	movq	0x90(%rsp), %rdi
    00000fb7: 	cmpq	%r13, %rdi
    00000fba: 	je	.Ltmp5501 # Offset: 4026
    00000fbc: 	movq	0xa0(%rsp), %rax
    00000fc4: 	leaq	0x1(%rax), %rsi
    00000fc8: 	callq	_ZdlPvm@PLT # Offset: 4040
.Ltmp5501:
    00000fcd: 	leaq	DATAat0x57331(%rip), %rdx
    00000fd4: 	movq	%r14, %rsi
    00000fd7: 	movq	%r12, %rdi
    00000fda: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4058
    00000fdf: 	callq	clock@PLT # Offset: 4063
    00000fe4: 	movl	iterations(%rip), %edi
    00000fea: 	movl	$0x0, (%rsp)
    00000ff1: 	movq	%rax, start_time(%rip)
    00000ff8: 	testl	%edi, %edi
    00000ffa: 	jle	.Ltmp5502 # Offset: 4090
    00000ffc: 	nopl	(%rax) # Size: 4
.Ltmp5505:
    00001000: 	movq	%rbp, %rax
    00001003: 	xorl	%esi, %esi
    00001005: 	nopl	(%rax) # Size: 3
.Ltmp5503:
    00001008: 	movq	(%rax), %rcx
    0000100b: 	addq	$0x8, %rax
    0000100f: 	movq	%rcx, %rdx
    00001012: 	shlq	$0x6, %rdx
    00001016: 	subq	%rcx, %rdx
    00001019: 	addq	%rdx, %rsi
    0000101c: 	cmpq	%rbx, %rax
    0000101f: 	jne	.Ltmp5503 # Offset: 4127
    00001021: 	cvttsd2si	init_value(%rip), %rax
    0000102a: 	imulq	$0x7b0c0, %rax, %rax
    00001031: 	cmpq	%rax, %rsi
    00001034: 	je	.Ltmp5504 # Offset: 4148
    00001036: 	movl	current_test(%rip), %edx
    0000103c: 	leaq	DATAat0x571d0(%rip), %rsi
    00001043: 	movl	$0x1, %edi
    00001048: 	xorl	%eax, %eax
    0000104a: 	callq	__printf_chk@PLT # Offset: 4170
    0000104f: 	movl	iterations(%rip), %edi
.Ltmp5504:
    00001055: 	addl	$0x1, (%rsp)
    00001059: 	movl	(%rsp), %eax
    0000105c: 	cmpl	%edi, %eax
    0000105e: 	jl	.Ltmp5505 # Offset: 4190
.Ltmp5502:
    00001060: 	movq	%r12, %rsi
    00001063: 	movq	%r15, %rdi
    00001066: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4198
    0000106b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001072: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001079: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001080: 	je	.Ltmp5506 # Offset: 4224
.Ltmp5901:
    00001086: 	movq	-0x20(%rax), %rdi
    0000108a: 	movq	%rdi, (%rsp)
    0000108e: 	callq	clock@PLT # Offset: 4238
    00001093: 	movq	(%rsp), %rdi
    00001097: 	pxor	%xmm0, %xmm0
    0000109b: 	movq	%rax, end_time(%rip)
    000010a2: 	subq	start_time(%rip), %rax
    000010a9: 	cvtsi2sd	%rax, %xmm0
    000010ae: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000010b6: 	callq	_Z13record_resultdPKc # Offset: 4278
    000010bb: 	movq	0x90(%rsp), %rdi
    000010c3: 	cmpq	%r13, %rdi
    000010c6: 	je	.Ltmp5507 # Offset: 4294
    000010c8: 	movq	0xa0(%rsp), %rax
    000010d0: 	leaq	0x1(%rax), %rsi
    000010d4: 	callq	_ZdlPvm@PLT # Offset: 4308
.Ltmp5507:
    000010d9: 	leaq	DATAat0x5734a(%rip), %rdx
    000010e0: 	movq	%r14, %rsi
    000010e3: 	movq	%r12, %rdi
    000010e6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4326
    000010eb: 	callq	clock@PLT # Offset: 4331
    000010f0: 	movl	iterations(%rip), %ecx
    000010f6: 	movl	$0x0, (%rsp)
    000010fd: 	movq	%rax, start_time(%rip)
    00001104: 	testl	%ecx, %ecx
    00001106: 	jle	.Ltmp5508 # Offset: 4358
    0000110c: 	nopl	(%rax) # Size: 4
.Ltmp5511:
    00001110: 	movq	%rbp, %rax
    00001113: 	pxor	%xmm1, %xmm1
    00001117: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5509:
    00001120: 	movdqa	(%rax), %xmm0
    00001124: 	addq	$0x10, %rax
    00001128: 	psllq	$0x6, %xmm0
    0000112d: 	psubq	-0x10(%rax), %xmm0
    00001132: 	paddq	%xmm0, %xmm1
    00001136: 	cmpq	%rbx, %rax
    00001139: 	jne	.Ltmp5509 # Offset: 4409
    0000113b: 	cvttsd2si	init_value(%rip), %rdx
    00001144: 	movdqa	%xmm1, %xmm0
    00001148: 	psrldq	$0x8, %xmm0
    0000114d: 	paddq	%xmm0, %xmm1
    00001151: 	movq	%xmm1, %rax
    00001156: 	imulq	$0x7b0c0, %rdx, %rdx
    0000115d: 	cmpq	%rax, %rdx
    00001160: 	je	.Ltmp5510 # Offset: 4448
    00001162: 	movl	current_test(%rip), %edx
    00001168: 	leaq	DATAat0x571d0(%rip), %rsi
    0000116f: 	movl	$0x1, %edi
    00001174: 	xorl	%eax, %eax
    00001176: 	callq	__printf_chk@PLT # Offset: 4470
    0000117b: 	movl	iterations(%rip), %ecx
.Ltmp5510:
    00001181: 	addl	$0x1, (%rsp)
    00001185: 	movl	(%rsp), %eax
    00001188: 	cmpl	%ecx, %eax
    0000118a: 	jl	.Ltmp5511 # Offset: 4490
.Ltmp5508:
    0000118c: 	movq	%r12, %rsi
    0000118f: 	movq	%r15, %rdi
    00001192: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4498
    00001197: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000119e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011a5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011ac: 	je	.Ltmp5512 # Offset: 4524
.Ltmp5900:
    000011b2: 	movq	-0x20(%rax), %rdi
    000011b6: 	movq	%rdi, (%rsp)
    000011ba: 	callq	clock@PLT # Offset: 4538
    000011bf: 	movq	(%rsp), %rdi
    000011c3: 	pxor	%xmm0, %xmm0
    000011c7: 	movq	%rax, end_time(%rip)
    000011ce: 	subq	start_time(%rip), %rax
    000011d5: 	cvtsi2sd	%rax, %xmm0
    000011da: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000011e2: 	callq	_Z13record_resultdPKc # Offset: 4578
    000011e7: 	movq	0x90(%rsp), %rdi
    000011ef: 	cmpq	%r13, %rdi
    000011f2: 	je	.Ltmp5513 # Offset: 4594
    000011f4: 	movq	0xa0(%rsp), %rax
    000011fc: 	leaq	0x1(%rax), %rsi
    00001200: 	callq	_ZdlPvm@PLT # Offset: 4608
.Ltmp5513:
    00001205: 	leaq	DATAat0x5735b(%rip), %rdx
    0000120c: 	movq	%r14, %rsi
    0000120f: 	movq	%r12, %rdi
    00001212: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4626
    00001217: 	movq	%r12, %rcx
    0000121a: 	movl	$0x43, %edx
    0000121f: 	movl	$0x1f40, %esi
    00001224: 	movq	%rbp, %rdi
    00001227: 	callq	_Z14test_variable1Il24custom_multiply_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4647
    0000122c: 	movq	0x90(%rsp), %rdi
    00001234: 	cmpq	%r13, %rdi
    00001237: 	je	.Ltmp5514 # Offset: 4663
    00001239: 	movq	0xa0(%rsp), %rax
    00001241: 	leaq	0x1(%rax), %rsi
    00001245: 	callq	_ZdlPvm@PLT # Offset: 4677
.Ltmp5514:
    0000124a: 	leaq	DATAat0x57374(%rip), %rdx
    00001251: 	movq	%r14, %rsi
    00001254: 	movq	%r12, %rdi
    00001257: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4695
    0000125c: 	callq	clock@PLT # Offset: 4700
    00001261: 	movl	iterations(%rip), %edi
    00001267: 	movl	$0x0, (%rsp)
    0000126e: 	movq	%rax, start_time(%rip)
    00001275: 	testl	%edi, %edi
    00001277: 	jle	.Ltmp5515 # Offset: 4727
    00001279: 	nopl	(%rax) # Size: 7
.Ltmp5518:
    00001280: 	movq	%rbp, %rax
    00001283: 	xorl	%esi, %esi
    00001285: 	nopl	(%rax) # Size: 3
.Ltmp5516:
    00001288: 	movq	(%rax), %rdx
    0000128b: 	addq	$0x8, %rax
    0000128f: 	movq	%rdx, %rcx
    00001292: 	shlq	$0x5, %rcx
    00001296: 	addq	%rdx, %rcx
    00001299: 	leaq	(%rdx,%rcx,2), %rdx
    0000129d: 	addq	%rdx, %rsi
    000012a0: 	cmpq	%rbx, %rax
    000012a3: 	jne	.Ltmp5516 # Offset: 4771
    000012a5: 	cvttsd2si	init_value(%rip), %rax
    000012ae: 	imulq	$0x82dc0, %rax, %rax
    000012b5: 	cmpq	%rax, %rsi
    000012b8: 	je	.Ltmp5517 # Offset: 4792
    000012ba: 	movl	current_test(%rip), %edx
    000012c0: 	leaq	DATAat0x571d0(%rip), %rsi
    000012c7: 	movl	$0x1, %edi
    000012cc: 	xorl	%eax, %eax
    000012ce: 	callq	__printf_chk@PLT # Offset: 4814
    000012d3: 	movl	iterations(%rip), %edi
.Ltmp5517:
    000012d9: 	addl	$0x1, (%rsp)
    000012dd: 	movl	(%rsp), %eax
    000012e0: 	cmpl	%edi, %eax
    000012e2: 	jl	.Ltmp5518 # Offset: 4834
.Ltmp5515:
    000012e4: 	movq	%r12, %rsi
    000012e7: 	movq	%r15, %rdi
    000012ea: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4842
    000012ef: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012f6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000012fd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001304: 	je	.Ltmp5519 # Offset: 4868
.Ltmp5899:
    0000130a: 	movq	-0x20(%rax), %rdi
    0000130e: 	movq	%rdi, (%rsp)
    00001312: 	callq	clock@PLT # Offset: 4882
    00001317: 	movq	(%rsp), %rdi
    0000131b: 	pxor	%xmm0, %xmm0
    0000131f: 	movq	%rax, end_time(%rip)
    00001326: 	subq	start_time(%rip), %rax
    0000132d: 	cvtsi2sd	%rax, %xmm0
    00001332: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000133a: 	callq	_Z13record_resultdPKc # Offset: 4922
    0000133f: 	movq	0x90(%rsp), %rdi
    00001347: 	cmpq	%r13, %rdi
    0000134a: 	je	.Ltmp5520 # Offset: 4938
    0000134c: 	movq	0xa0(%rsp), %rax
    00001354: 	leaq	0x1(%rax), %rsi
    00001358: 	callq	_ZdlPvm@PLT # Offset: 4952
.Ltmp5520:
    0000135d: 	leaq	DATAat0x5738d(%rip), %rdx
    00001364: 	movq	%r14, %rsi
    00001367: 	movq	%r12, %rdi
    0000136a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4970
    0000136f: 	callq	clock@PLT # Offset: 4975
    00001374: 	movl	iterations(%rip), %edi
    0000137a: 	movl	$0x0, (%rsp)
    00001381: 	movq	%rax, start_time(%rip)
    00001388: 	testl	%edi, %edi
    0000138a: 	jle	.Ltmp5521 # Offset: 5002
    0000138c: 	nopl	(%rax) # Size: 4
.Ltmp5524:
    00001390: 	movq	%rbp, %rdx
    00001393: 	xorl	%esi, %esi
    00001395: 	nopl	(%rax) # Size: 3
.Ltmp5522:
    00001398: 	movq	(%rdx), %rcx
    0000139b: 	addq	$0x8, %rdx
    0000139f: 	movq	%rcx, %rax
    000013a2: 	shlq	$0x4, %rax
    000013a6: 	addq	%rcx, %rax
    000013a9: 	shlq	$0x2, %rax
    000013ad: 	subq	%rcx, %rax
    000013b0: 	addq	%rax, %rsi
    000013b3: 	cmpq	%rbx, %rdx
    000013b6: 	jne	.Ltmp5522 # Offset: 5046
    000013b8: 	cvttsd2si	init_value(%rip), %rdx
    000013c1: 	movq	%rdx, %rax
    000013c4: 	shlq	$0x4, %rax
    000013c8: 	addq	%rdx, %rax
    000013cb: 	shlq	$0x2, %rax
    000013cf: 	subq	%rdx, %rax
    000013d2: 	imulq	$0x1f40, %rax, %rax
    000013d9: 	cmpq	%rax, %rsi
    000013dc: 	je	.Ltmp5523 # Offset: 5084
    000013de: 	movl	current_test(%rip), %edx
    000013e4: 	leaq	DATAat0x571d0(%rip), %rsi
    000013eb: 	movl	$0x1, %edi
    000013f0: 	xorl	%eax, %eax
    000013f2: 	callq	__printf_chk@PLT # Offset: 5106
    000013f7: 	movl	iterations(%rip), %edi
.Ltmp5523:
    000013fd: 	addl	$0x1, (%rsp)
    00001401: 	movl	(%rsp), %eax
    00001404: 	cmpl	%edi, %eax
    00001406: 	jl	.Ltmp5524 # Offset: 5126
.Ltmp5521:
    00001408: 	movq	%r12, %rsi
    0000140b: 	movq	%r15, %rdi
    0000140e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5134
    00001413: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000141a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001421: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001428: 	je	.Ltmp5525 # Offset: 5160
.Ltmp5898:
    0000142e: 	movq	-0x20(%rax), %rdi
    00001432: 	movq	%rdi, (%rsp)
    00001436: 	callq	clock@PLT # Offset: 5174
    0000143b: 	movq	(%rsp), %rdi
    0000143f: 	pxor	%xmm0, %xmm0
    00001443: 	movq	%rax, end_time(%rip)
    0000144a: 	subq	start_time(%rip), %rax
    00001451: 	cvtsi2sd	%rax, %xmm0
    00001456: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000145e: 	callq	_Z13record_resultdPKc # Offset: 5214
    00001463: 	movq	0x90(%rsp), %rdi
    0000146b: 	cmpq	%r13, %rdi
    0000146e: 	je	.Ltmp5526 # Offset: 5230
    00001470: 	movq	0xa0(%rsp), %rax
    00001478: 	leaq	0x1(%rax), %rsi
    0000147c: 	callq	_ZdlPvm@PLT # Offset: 5244
.Ltmp5526:
    00001481: 	leaq	DATAat0x5739e(%rip), %rdx
    00001488: 	movq	%r14, %rsi
    0000148b: 	movq	%r12, %rdi
    0000148e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5262
    00001493: 	callq	clock@PLT # Offset: 5267
    00001498: 	movl	iterations(%rip), %edi
    0000149e: 	movl	$0x0, (%rsp)
    000014a5: 	movq	%rax, start_time(%rip)
    000014ac: 	testl	%edi, %edi
    000014ae: 	jle	.Ltmp5527 # Offset: 5294
.Ltmp5530:
    000014b0: 	movq	%rbp, %rax
    000014b3: 	xorl	%esi, %esi
    000014b5: 	nopl	(%rax) # Size: 3
.Ltmp5528:
    000014b8: 	movq	(%rax), %rdx
    000014bb: 	addq	$0x8, %rax
    000014bf: 	movq	%rdx, %rcx
    000014c2: 	shlq	$0x5, %rcx
    000014c6: 	addq	%rdx, %rcx
    000014c9: 	leaq	(%rdx,%rcx,2), %rdx
    000014cd: 	addq	%rdx, %rsi
    000014d0: 	cmpq	%rbx, %rax
    000014d3: 	jne	.Ltmp5528 # Offset: 5331
    000014d5: 	cvttsd2si	init_value(%rip), %rax
    000014de: 	imulq	$0x82dc0, %rax, %rax
    000014e5: 	cmpq	%rax, %rsi
    000014e8: 	je	.Ltmp5529 # Offset: 5352
    000014ea: 	movl	current_test(%rip), %edx
    000014f0: 	leaq	DATAat0x571d0(%rip), %rsi
    000014f7: 	movl	$0x1, %edi
    000014fc: 	xorl	%eax, %eax
    000014fe: 	callq	__printf_chk@PLT # Offset: 5374
    00001503: 	movl	iterations(%rip), %edi
.Ltmp5529:
    00001509: 	addl	$0x1, (%rsp)
    0000150d: 	movl	(%rsp), %eax
    00001510: 	cmpl	%edi, %eax
    00001512: 	jl	.Ltmp5530 # Offset: 5394
.Ltmp5527:
    00001514: 	movq	%r12, %rsi
    00001517: 	movq	%r15, %rdi
    0000151a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5402
    0000151f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001526: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000152d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001534: 	je	.Ltmp5531 # Offset: 5428
.Ltmp5897:
    0000153a: 	movq	-0x20(%rax), %rdi
    0000153e: 	movq	%rdi, (%rsp)
    00001542: 	callq	clock@PLT # Offset: 5442
    00001547: 	movq	(%rsp), %rdi
    0000154b: 	pxor	%xmm0, %xmm0
    0000154f: 	movq	%rax, end_time(%rip)
    00001556: 	subq	start_time(%rip), %rax
    0000155d: 	cvtsi2sd	%rax, %xmm0
    00001562: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000156a: 	callq	_Z13record_resultdPKc # Offset: 5482
    0000156f: 	movq	0x90(%rsp), %rdi
    00001577: 	cmpq	%r13, %rdi
    0000157a: 	je	.Ltmp5532 # Offset: 5498
    0000157c: 	movq	0xa0(%rsp), %rax
    00001584: 	leaq	0x1(%rax), %rsi
    00001588: 	callq	_ZdlPvm@PLT # Offset: 5512
.Ltmp5532:
    0000158d: 	leaq	DATAat0x573ad(%rip), %rdx
    00001594: 	movq	%r14, %rsi
    00001597: 	movq	%r12, %rdi
    0000159a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5530
    0000159f: 	movq	%r12, %rcx
    000015a2: 	movl	$0x53, %edx
    000015a7: 	movl	$0x1f40, %esi
    000015ac: 	movq	%rbp, %rdi
    000015af: 	callq	_Z14test_variable1Il24custom_multiply_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5551
    000015b4: 	movq	0x90(%rsp), %rdi
    000015bc: 	cmpq	%r13, %rdi
    000015bf: 	je	.Ltmp5533 # Offset: 5567
    000015c1: 	movq	0xa0(%rsp), %rax
    000015c9: 	leaq	0x1(%rax), %rsi
    000015cd: 	callq	_ZdlPvm@PLT # Offset: 5581
.Ltmp5533:
    000015d2: 	leaq	DATAat0x573c6(%rip), %rdx
    000015d9: 	movq	%r14, %rsi
    000015dc: 	movq	%r12, %rdi
    000015df: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5599
    000015e4: 	callq	clock@PLT # Offset: 5604
    000015e9: 	movl	iterations(%rip), %edi
    000015ef: 	movl	$0x0, (%rsp)
    000015f6: 	movq	%rax, start_time(%rip)
    000015fd: 	testl	%edi, %edi
    000015ff: 	jle	.Ltmp5534 # Offset: 5631
    00001601: 	nopl	(%rax) # Size: 7
.Ltmp5537:
    00001608: 	movq	%rbp, %rdx
    0000160b: 	xorl	%ecx, %ecx
    0000160d: 	nopl	(%rax) # Size: 3
.Ltmp5535:
    00001610: 	movq	(%rdx), %rax
    00001613: 	addq	$0x8, %rdx
    00001617: 	leaq	(%rax,%rax,4), %rsi
    0000161b: 	leaq	(%rax,%rsi,8), %rsi
    0000161f: 	leaq	(%rax,%rsi,2), %rax
    00001623: 	addq	%rax, %rcx
    00001626: 	cmpq	%rbx, %rdx
    00001629: 	jne	.Ltmp5535 # Offset: 5673
    0000162b: 	cvttsd2si	init_value(%rip), %rax
    00001634: 	imulq	$0xa21c0, %rax, %rax
    0000163b: 	cmpq	%rax, %rcx
    0000163e: 	je	.Ltmp5536 # Offset: 5694
    00001640: 	movl	current_test(%rip), %edx
    00001646: 	leaq	DATAat0x571d0(%rip), %rsi
    0000164d: 	movl	$0x1, %edi
    00001652: 	xorl	%eax, %eax
    00001654: 	callq	__printf_chk@PLT # Offset: 5716
    00001659: 	movl	iterations(%rip), %edi
.Ltmp5536:
    0000165f: 	addl	$0x1, (%rsp)
    00001663: 	movl	(%rsp), %eax
    00001666: 	cmpl	%edi, %eax
    00001668: 	jl	.Ltmp5537 # Offset: 5736
.Ltmp5534:
    0000166a: 	movq	%r12, %rsi
    0000166d: 	movq	%r15, %rdi
    00001670: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5744
    00001675: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000167c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001683: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000168a: 	je	.Ltmp5538 # Offset: 5770
.Ltmp5896:
    00001690: 	movq	-0x20(%rax), %rdi
    00001694: 	movq	%rdi, (%rsp)
    00001698: 	callq	clock@PLT # Offset: 5784
    0000169d: 	movq	(%rsp), %rdi
    000016a1: 	pxor	%xmm0, %xmm0
    000016a5: 	movq	%rax, end_time(%rip)
    000016ac: 	subq	start_time(%rip), %rax
    000016b3: 	cvtsi2sd	%rax, %xmm0
    000016b8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000016c0: 	callq	_Z13record_resultdPKc # Offset: 5824
    000016c5: 	movq	0x90(%rsp), %rdi
    000016cd: 	cmpq	%r13, %rdi
    000016d0: 	je	.Ltmp5539 # Offset: 5840
    000016d2: 	movq	0xa0(%rsp), %rax
    000016da: 	leaq	0x1(%rax), %rsi
    000016de: 	callq	_ZdlPvm@PLT # Offset: 5854
.Ltmp5539:
    000016e3: 	leaq	DATAat0x573df(%rip), %rdx
    000016ea: 	movq	%r14, %rsi
    000016ed: 	movq	%r12, %rdi
    000016f0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5872
    000016f5: 	callq	clock@PLT # Offset: 5877
    000016fa: 	movl	iterations(%rip), %r8d
    00001701: 	movl	$0x0, (%rsp)
    00001708: 	movq	%rax, start_time(%rip)
    0000170f: 	testl	%r8d, %r8d
    00001712: 	jle	.Ltmp5540 # Offset: 5906
    00001718: 	nopl	(%rax,%rax) # Size: 8
.Ltmp5543:
    00001720: 	movq	%rbp, %rdx
    00001723: 	xorl	%edi, %edi
    00001725: 	nopl	(%rax) # Size: 3
.Ltmp5541:
    00001728: 	movq	(%rdx), %rcx
    0000172b: 	addq	$0x8, %rdx
    0000172f: 	leaq	(,%rcx,4), %rsi
    00001737: 	leaq	(%rsi,%rcx), %rax
    0000173b: 	shlq	$0x4, %rax
    0000173f: 	addq	%rsi, %rax
    00001742: 	subq	%rcx, %rax
    00001745: 	addq	%rax, %rdi
    00001748: 	cmpq	%rdx, %rbx
    0000174b: 	jne	.Ltmp5541 # Offset: 5963
    0000174d: 	cvttsd2si	init_value(%rip), %rdx
    00001756: 	leaq	(,%rdx,4), %rcx
    0000175e: 	leaq	(%rcx,%rdx), %rax
    00001762: 	shlq	$0x4, %rax
    00001766: 	addq	%rcx, %rax
    00001769: 	subq	%rdx, %rax
    0000176c: 	imulq	$0x1f40, %rax, %rax
    00001773: 	cmpq	%rax, %rdi
    00001776: 	je	.Ltmp5542 # Offset: 6006
    00001778: 	movl	current_test(%rip), %edx
    0000177e: 	leaq	DATAat0x571d0(%rip), %rsi
    00001785: 	movl	$0x1, %edi
    0000178a: 	xorl	%eax, %eax
    0000178c: 	callq	__printf_chk@PLT # Offset: 6028
    00001791: 	movl	iterations(%rip), %r8d
.Ltmp5542:
    00001798: 	addl	$0x1, (%rsp)
    0000179c: 	movl	(%rsp), %eax
    0000179f: 	cmpl	%r8d, %eax
    000017a2: 	jl	.Ltmp5543 # Offset: 6050
.Ltmp5540:
    000017a8: 	movq	%r12, %rsi
    000017ab: 	movq	%r15, %rdi
    000017ae: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6062
    000017b3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017ba: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000017c1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017c8: 	je	.Ltmp5544 # Offset: 6088
.Ltmp5895:
    000017ce: 	movq	-0x20(%rax), %rdi
    000017d2: 	movq	%rdi, (%rsp)
    000017d6: 	callq	clock@PLT # Offset: 6102
    000017db: 	movq	(%rsp), %rdi
    000017df: 	pxor	%xmm0, %xmm0
    000017e3: 	movq	%rax, end_time(%rip)
    000017ea: 	subq	start_time(%rip), %rax
    000017f1: 	cvtsi2sd	%rax, %xmm0
    000017f6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000017fe: 	callq	_Z13record_resultdPKc # Offset: 6142
    00001803: 	movq	0x90(%rsp), %rdi
    0000180b: 	cmpq	%r13, %rdi
    0000180e: 	je	.Ltmp5545 # Offset: 6158
    00001810: 	movq	0xa0(%rsp), %rax
    00001818: 	leaq	0x1(%rax), %rsi
    0000181c: 	callq	_ZdlPvm@PLT # Offset: 6172
.Ltmp5545:
    00001821: 	leaq	DATAat0x573f0(%rip), %rdx
    00001828: 	movq	%r14, %rsi
    0000182b: 	movq	%r12, %rdi
    0000182e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6190
    00001833: 	callq	clock@PLT # Offset: 6195
    00001838: 	movl	iterations(%rip), %edi
    0000183e: 	movl	$0x0, (%rsp)
    00001845: 	movq	%rax, start_time(%rip)
    0000184c: 	testl	%edi, %edi
    0000184e: 	jle	.Ltmp5546 # Offset: 6222
.Ltmp5549:
    00001850: 	movq	%rbp, %rdx
    00001853: 	xorl	%ecx, %ecx
    00001855: 	nopl	(%rax) # Size: 3
.Ltmp5547:
    00001858: 	movq	(%rdx), %rax
    0000185b: 	addq	$0x8, %rdx
    0000185f: 	leaq	(%rax,%rax,4), %rsi
    00001863: 	leaq	(%rax,%rsi,8), %rsi
    00001867: 	leaq	(%rax,%rsi,2), %rax
    0000186b: 	addq	%rax, %rcx
    0000186e: 	cmpq	%rdx, %rbx
    00001871: 	jne	.Ltmp5547 # Offset: 6257
    00001873: 	cvttsd2si	init_value(%rip), %rax
    0000187c: 	imulq	$0xa21c0, %rax, %rax
    00001883: 	cmpq	%rax, %rcx
    00001886: 	je	.Ltmp5548 # Offset: 6278
    00001888: 	movl	current_test(%rip), %edx
    0000188e: 	leaq	DATAat0x571d0(%rip), %rsi
    00001895: 	movl	$0x1, %edi
    0000189a: 	xorl	%eax, %eax
    0000189c: 	callq	__printf_chk@PLT # Offset: 6300
    000018a1: 	movl	iterations(%rip), %edi
.Ltmp5548:
    000018a7: 	addl	$0x1, (%rsp)
    000018ab: 	movl	(%rsp), %eax
    000018ae: 	cmpl	%edi, %eax
    000018b0: 	jl	.Ltmp5549 # Offset: 6320
.Ltmp5546:
    000018b2: 	movq	%r12, %rsi
    000018b5: 	movq	%r15, %rdi
    000018b8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6328
    000018bd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018c4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000018cb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018d2: 	je	.Ltmp5550 # Offset: 6354
.Ltmp5894:
    000018d8: 	movq	-0x20(%rax), %rdi
    000018dc: 	movq	%rdi, (%rsp)
    000018e0: 	callq	clock@PLT # Offset: 6368
    000018e5: 	movq	(%rsp), %rdi
    000018e9: 	pxor	%xmm0, %xmm0
    000018ed: 	movq	%rax, end_time(%rip)
    000018f4: 	subq	start_time(%rip), %rax
    000018fb: 	cvtsi2sd	%rax, %xmm0
    00001900: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001908: 	callq	_Z13record_resultdPKc # Offset: 6408
    0000190d: 	movq	0x90(%rsp), %rdi
    00001915: 	cmpq	%r13, %rdi
    00001918: 	je	.Ltmp5551 # Offset: 6424
    0000191a: 	movq	0xa0(%rsp), %rax
    00001922: 	leaq	0x1(%rax), %rsi
    00001926: 	callq	_ZdlPvm@PLT # Offset: 6438
.Ltmp5551:
    0000192b: 	leaq	DATAat0x573ff(%rip), %rdx
    00001932: 	movq	%r14, %rsi
    00001935: 	movq	%r12, %rdi
    00001938: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6456
    0000193d: 	movq	%r12, %rcx
    00001940: 	movl	$0x7e, %edx
    00001945: 	movl	$0x1f40, %esi
    0000194a: 	movq	%rbp, %rdi
    0000194d: 	callq	_Z14test_variable1Il24custom_multiply_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 6477
    00001952: 	movq	0x90(%rsp), %rdi
    0000195a: 	cmpq	%r13, %rdi
    0000195d: 	je	.Ltmp5552 # Offset: 6493
    0000195f: 	movq	0xa0(%rsp), %rax
    00001967: 	leaq	0x1(%rax), %rsi
    0000196b: 	callq	_ZdlPvm@PLT # Offset: 6507
.Ltmp5552:
    00001970: 	leaq	DATAat0x57419(%rip), %rdx
    00001977: 	movq	%r14, %rsi
    0000197a: 	movq	%r12, %rdi
    0000197d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6525
    00001982: 	callq	clock@PLT # Offset: 6530
    00001987: 	movl	iterations(%rip), %edi
    0000198d: 	movl	$0x0, (%rsp)
    00001994: 	movq	%rax, start_time(%rip)
    0000199b: 	testl	%edi, %edi
    0000199d: 	jle	.Ltmp5553 # Offset: 6557
    0000199f: 	nop # Size: 1
.Ltmp5556:
    000019a0: 	movq	%rbp, %rax
    000019a3: 	xorl	%esi, %esi
    000019a5: 	nopl	(%rax) # Size: 3
.Ltmp5554:
    000019a8: 	movq	(%rax), %rcx
    000019ab: 	addq	$0x8, %rax
    000019af: 	movq	%rcx, %rdx
    000019b2: 	shlq	$0x6, %rdx
    000019b6: 	subq	%rcx, %rdx
    000019b9: 	leaq	(%rsi,%rdx,2), %rsi
    000019bd: 	cmpq	%rax, %rbx
    000019c0: 	jne	.Ltmp5554 # Offset: 6592
    000019c2: 	cvttsd2si	init_value(%rip), %rax
    000019cb: 	imulq	$0xf6180, %rax, %rax
    000019d2: 	cmpq	%rax, %rsi
    000019d5: 	je	.Ltmp5555 # Offset: 6613
    000019d7: 	movl	current_test(%rip), %edx
    000019dd: 	leaq	DATAat0x571d0(%rip), %rsi
    000019e4: 	movl	$0x1, %edi
    000019e9: 	xorl	%eax, %eax
    000019eb: 	callq	__printf_chk@PLT # Offset: 6635
    000019f0: 	movl	iterations(%rip), %edi
.Ltmp5555:
    000019f6: 	addl	$0x1, (%rsp)
    000019fa: 	movl	(%rsp), %eax
    000019fd: 	cmpl	%edi, %eax
    000019ff: 	jl	.Ltmp5556 # Offset: 6655
.Ltmp5553:
    00001a01: 	movq	%r12, %rsi
    00001a04: 	movq	%r15, %rdi
    00001a07: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6663
    00001a0c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a13: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a1a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a21: 	je	.Ltmp5557 # Offset: 6689
.Ltmp5893:
    00001a27: 	movq	-0x20(%rax), %rdi
    00001a2b: 	movq	%rdi, (%rsp)
    00001a2f: 	callq	clock@PLT # Offset: 6703
    00001a34: 	movq	(%rsp), %rdi
    00001a38: 	pxor	%xmm0, %xmm0
    00001a3c: 	movq	%rax, end_time(%rip)
    00001a43: 	subq	start_time(%rip), %rax
    00001a4a: 	cvtsi2sd	%rax, %xmm0
    00001a4f: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001a57: 	callq	_Z13record_resultdPKc # Offset: 6743
    00001a5c: 	movq	0x90(%rsp), %rdi
    00001a64: 	cmpq	%r13, %rdi
    00001a67: 	je	.Ltmp5558 # Offset: 6759
    00001a69: 	movq	0xa0(%rsp), %rax
    00001a71: 	leaq	0x1(%rax), %rsi
    00001a75: 	callq	_ZdlPvm@PLT # Offset: 6773
.Ltmp5558:
    00001a7a: 	leaq	DATAat0x57433(%rip), %rdx
    00001a81: 	movq	%r14, %rsi
    00001a84: 	movq	%r12, %rdi
    00001a87: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6791
    00001a8c: 	movq	%r12, %rdx
    00001a8f: 	movl	$0x1f40, %esi
    00001a94: 	movq	%rbp, %rdi
    00001a97: 	callq	_Z13test_constantIl28custom_multiply_shiftadd_126IlEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 6807
    00001a9c: 	movq	0x90(%rsp), %rdi
    00001aa4: 	cmpq	%r13, %rdi
    00001aa7: 	je	.Ltmp5559 # Offset: 6823
    00001aa9: 	movq	0xa0(%rsp), %rax
    00001ab1: 	leaq	0x1(%rax), %rsi
    00001ab5: 	callq	_ZdlPvm@PLT # Offset: 6837
.Ltmp5559:
    00001aba: 	leaq	DATAat0x57445(%rip), %rdx
    00001ac1: 	movq	%r14, %rsi
    00001ac4: 	movq	%r12, %rdi
    00001ac7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6855
    00001acc: 	callq	clock@PLT # Offset: 6860
    00001ad1: 	movl	iterations(%rip), %edi
    00001ad7: 	movl	$0x0, (%rsp)
    00001ade: 	movq	%rax, start_time(%rip)
    00001ae5: 	testl	%edi, %edi
    00001ae7: 	jle	.Ltmp5560 # Offset: 6887
    00001ae9: 	nopl	(%rax) # Size: 7
.Ltmp5563:
    00001af0: 	movq	%rbp, %rax
    00001af3: 	xorl	%esi, %esi
    00001af5: 	nopl	(%rax) # Size: 3
.Ltmp5561:
    00001af8: 	movq	(%rax), %rcx
    00001afb: 	addq	$0x8, %rax
    00001aff: 	movq	%rcx, %rdx
    00001b02: 	shlq	$0x6, %rdx
    00001b06: 	subq	%rcx, %rdx
    00001b09: 	leaq	(%rsi,%rdx,2), %rsi
    00001b0d: 	cmpq	%rbx, %rax
    00001b10: 	jne	.Ltmp5561 # Offset: 6928
    00001b12: 	cvttsd2si	init_value(%rip), %rax
    00001b1b: 	imulq	$0xf6180, %rax, %rax
    00001b22: 	cmpq	%rax, %rsi
    00001b25: 	je	.Ltmp5562 # Offset: 6949
    00001b27: 	movl	current_test(%rip), %edx
    00001b2d: 	leaq	DATAat0x571d0(%rip), %rsi
    00001b34: 	movl	$0x1, %edi
    00001b39: 	xorl	%eax, %eax
    00001b3b: 	callq	__printf_chk@PLT # Offset: 6971
    00001b40: 	movl	iterations(%rip), %edi
.Ltmp5562:
    00001b46: 	addl	$0x1, (%rsp)
    00001b4a: 	movl	(%rsp), %eax
    00001b4d: 	cmpl	%edi, %eax
    00001b4f: 	jl	.Ltmp5563 # Offset: 6991
.Ltmp5560:
    00001b51: 	movq	%r12, %rsi
    00001b54: 	movq	%r15, %rdi
    00001b57: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6999
    00001b5c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b63: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001b6a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b71: 	je	.Ltmp5564 # Offset: 7025
.Ltmp5892:
    00001b77: 	movq	-0x20(%rax), %rdi
    00001b7b: 	movq	%rdi, (%rsp)
    00001b7f: 	callq	clock@PLT # Offset: 7039
    00001b84: 	movq	(%rsp), %rdi
    00001b88: 	pxor	%xmm0, %xmm0
    00001b8c: 	movq	%rax, end_time(%rip)
    00001b93: 	subq	start_time(%rip), %rax
    00001b9a: 	cvtsi2sd	%rax, %xmm0
    00001b9f: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001ba7: 	callq	_Z13record_resultdPKc # Offset: 7079
    00001bac: 	movq	0x90(%rsp), %rdi
    00001bb4: 	cmpq	%r13, %rdi
    00001bb7: 	je	.Ltmp5565 # Offset: 7095
    00001bb9: 	movq	0xa0(%rsp), %rax
    00001bc1: 	leaq	0x1(%rax), %rsi
    00001bc5: 	callq	_ZdlPvm@PLT # Offset: 7109
.Ltmp5565:
    00001bca: 	leaq	0x50(%rsp), %rdi
    00001bcf: 	leaq	DATAat0x57455(%rip), %rdx
    00001bd6: 	movq	%r14, %rsi
    00001bd9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7129
    00001bde: 	movl	iterations(%rip), %edx
    00001be4: 	movq	0x50(%rsp), %rdi
    00001be9: 	xorl	%r8d, %r8d
    00001bec: 	xorl	%ecx, %ecx
    00001bee: 	movl	$0x1f40, %esi
    00001bf3: 	callq	_Z9summarizePKciiii # Offset: 7155
    00001bf8: 	leaq	DATAat0x57472(%rip), %rdx
    00001bff: 	movq	%r14, %rsi
    00001c02: 	movq	%r12, %rdi
    00001c05: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7173
    00001c0a: 	callq	clock@PLT # Offset: 7178
    00001c0f: 	movl	iterations(%rip), %esi
    00001c15: 	movl	$0x0, (%rsp)
    00001c1c: 	movq	%rax, start_time(%rip)
    00001c23: 	testl	%esi, %esi
    00001c25: 	jle	.Ltmp5566 # Offset: 7205
    00001c27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5569:
    00001c30: 	movq	%rbp, %rax
    00001c33: 	xorl	%ecx, %ecx
    00001c35: 	nopl	(%rax) # Size: 3
.Ltmp5567:
    00001c38: 	movq	(%rax), %rdx
    00001c3b: 	addq	$0x8, %rax
    00001c3f: 	sarq	%rdx
    00001c42: 	addq	%rdx, %rcx
    00001c45: 	cmpq	%rbx, %rax
    00001c48: 	jne	.Ltmp5567 # Offset: 7240
    00001c4a: 	cvttsd2si	init_value(%rip), %rax
    00001c53: 	sarq	%rax
    00001c56: 	imulq	$0x1f40, %rax, %rax
    00001c5d: 	cmpq	%rax, %rcx
    00001c60: 	je	.Ltmp5568 # Offset: 7264
    00001c62: 	movl	current_test(%rip), %edx
    00001c68: 	leaq	DATAat0x571d0(%rip), %rsi
    00001c6f: 	movl	$0x1, %edi
    00001c74: 	xorl	%eax, %eax
    00001c76: 	callq	__printf_chk@PLT # Offset: 7286
    00001c7b: 	movl	iterations(%rip), %esi
.Ltmp5568:
    00001c81: 	addl	$0x1, (%rsp)
    00001c85: 	movl	(%rsp), %eax
    00001c88: 	cmpl	%esi, %eax
    00001c8a: 	jl	.Ltmp5569 # Offset: 7306
.Ltmp5566:
    00001c8c: 	movq	%r12, %rsi
    00001c8f: 	movq	%r15, %rdi
    00001c92: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7314
    00001c97: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c9e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001ca5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001cac: 	je	.Ltmp5570 # Offset: 7340
.Ltmp5891:
    00001cb2: 	movq	-0x20(%rax), %rdi
    00001cb6: 	movq	%rdi, (%rsp)
    00001cba: 	callq	clock@PLT # Offset: 7354
    00001cbf: 	movq	(%rsp), %rdi
    00001cc3: 	pxor	%xmm0, %xmm0
    00001cc7: 	movq	%rax, end_time(%rip)
    00001cce: 	subq	start_time(%rip), %rax
    00001cd5: 	cvtsi2sd	%rax, %xmm0
    00001cda: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001ce2: 	callq	_Z13record_resultdPKc # Offset: 7394
    00001ce7: 	movq	0x90(%rsp), %rdi
    00001cef: 	cmpq	%r13, %rdi
    00001cf2: 	je	.Ltmp5571 # Offset: 7410
    00001cf4: 	movq	0xa0(%rsp), %rax
    00001cfc: 	leaq	0x1(%rax), %rsi
    00001d00: 	callq	_ZdlPvm@PLT # Offset: 7424
.Ltmp5571:
    00001d05: 	leaq	DATAat0x579c8(%rip), %rdx
    00001d0c: 	movq	%r14, %rsi
    00001d0f: 	movq	%r12, %rdi
    00001d12: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7442
    00001d17: 	callq	clock@PLT # Offset: 7447
    00001d1c: 	movl	iterations(%rip), %esi
    00001d22: 	movl	$0x0, (%rsp)
    00001d29: 	movq	%rax, start_time(%rip)
    00001d30: 	testl	%esi, %esi
    00001d32: 	jle	.Ltmp5572 # Offset: 7474
    00001d34: 	nopl	(%rax) # Size: 4
.Ltmp5577:
    00001d38: 	movq	%rbp, %rdx
    00001d3b: 	xorl	%ecx, %ecx
    00001d3d: 	nopl	(%rax) # Size: 3
.Ltmp5574:
    00001d40: 	movq	(%rdx), %rax
    00001d43: 	testq	%rax, %rax
    00001d46: 	js	.Ltmp5573 # Offset: 7494
    00001d4c: 	sarq	%rax
    00001d4f: 	addq	$0x8, %rdx
    00001d53: 	addq	%rax, %rcx
    00001d56: 	cmpq	%rbx, %rdx
    00001d59: 	jne	.Ltmp5574 # Offset: 7513
.Ltmp5848:
    00001d5b: 	cvttsd2si	init_value(%rip), %rax
    00001d64: 	movq	%rax, %rdx
    00001d67: 	sarq	%rdx
    00001d6a: 	testq	%rax, %rax
    00001d6d: 	jns	.Ltmp5575 # Offset: 7533
    00001d6f: 	negq	%rax
    00001d72: 	sarq	%rax
    00001d75: 	negq	%rax
    00001d78: 	movq	%rax, %rdx
.Ltmp5575:
    00001d7b: 	imulq	$0x1f40, %rdx, %rdx
    00001d82: 	cmpq	%rcx, %rdx
    00001d85: 	je	.Ltmp5576 # Offset: 7557
    00001d87: 	movl	current_test(%rip), %edx
    00001d8d: 	leaq	DATAat0x571d0(%rip), %rsi
    00001d94: 	movl	$0x1, %edi
    00001d99: 	xorl	%eax, %eax
    00001d9b: 	callq	__printf_chk@PLT # Offset: 7579
    00001da0: 	movl	iterations(%rip), %esi
.Ltmp5576:
    00001da6: 	addl	$0x1, (%rsp)
    00001daa: 	movl	(%rsp), %eax
    00001dad: 	cmpl	%esi, %eax
    00001daf: 	jl	.Ltmp5577 # Offset: 7599
.Ltmp5572:
    00001db1: 	movq	%r12, %rsi
    00001db4: 	movq	%r15, %rdi
    00001db7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7607
    00001dbc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001dc3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001dca: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001dd1: 	je	.Ltmp5578 # Offset: 7633
.Ltmp5890:
    00001dd7: 	movq	-0x20(%rax), %rdi
    00001ddb: 	movq	%rdi, (%rsp)
    00001ddf: 	callq	clock@PLT # Offset: 7647
    00001de4: 	movq	(%rsp), %rdi
    00001de8: 	pxor	%xmm0, %xmm0
    00001dec: 	movq	%rax, end_time(%rip)
    00001df3: 	subq	start_time(%rip), %rax
    00001dfa: 	cvtsi2sd	%rax, %xmm0
    00001dff: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001e07: 	callq	_Z13record_resultdPKc # Offset: 7687
    00001e0c: 	movq	0x90(%rsp), %rdi
    00001e14: 	cmpq	%r13, %rdi
    00001e17: 	je	.Ltmp5579 # Offset: 7703
    00001e19: 	movq	0xa0(%rsp), %rax
    00001e21: 	leaq	0x1(%rax), %rsi
    00001e25: 	callq	_ZdlPvm@PLT # Offset: 7717
.Ltmp5579:
    00001e2a: 	leaq	DATAat0x57484(%rip), %rdx
    00001e31: 	movq	%r14, %rsi
    00001e34: 	movq	%r12, %rdi
    00001e37: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7735
    00001e3c: 	callq	clock@PLT # Offset: 7740
    00001e41: 	movl	iterations(%rip), %edi
    00001e47: 	movl	$0x0, (%rsp)
    00001e4e: 	movq	%rax, start_time(%rip)
    00001e55: 	testl	%edi, %edi
    00001e57: 	jle	.Ltmp5580 # Offset: 7767
    00001e59: 	nopl	(%rax) # Size: 7
.Ltmp5583:
    00001e60: 	movq	%rbp, %rdx
    00001e63: 	xorl	%esi, %esi
    00001e65: 	nopl	(%rax) # Size: 3
.Ltmp5581:
    00001e68: 	movq	(%rdx), %rcx
    00001e6b: 	addq	$0x8, %rdx
    00001e6f: 	movq	%rcx, %rax
    00001e72: 	shrq	$0x3f, %rax
    00001e76: 	addq	%rcx, %rax
    00001e79: 	sarq	%rax
    00001e7c: 	addq	%rax, %rsi
    00001e7f: 	cmpq	%rbx, %rdx
    00001e82: 	jne	.Ltmp5581 # Offset: 7810
    00001e84: 	cvttsd2si	init_value(%rip), %rdx
    00001e8d: 	movq	%rdx, %rax
    00001e90: 	shrq	$0x3f, %rax
    00001e94: 	addq	%rdx, %rax
    00001e97: 	sarq	%rax
    00001e9a: 	imulq	$0x1f40, %rax, %rax
    00001ea1: 	cmpq	%rax, %rsi
    00001ea4: 	je	.Ltmp5582 # Offset: 7844
    00001ea6: 	movl	current_test(%rip), %edx
    00001eac: 	leaq	DATAat0x571d0(%rip), %rsi
    00001eb3: 	movl	$0x1, %edi
    00001eb8: 	xorl	%eax, %eax
    00001eba: 	callq	__printf_chk@PLT # Offset: 7866
    00001ebf: 	movl	iterations(%rip), %edi
.Ltmp5582:
    00001ec5: 	addl	$0x1, (%rsp)
    00001ec9: 	movl	(%rsp), %eax
    00001ecc: 	cmpl	%edi, %eax
    00001ece: 	jl	.Ltmp5583 # Offset: 7886
.Ltmp5580:
    00001ed0: 	movq	%r12, %rsi
    00001ed3: 	movq	%r15, %rdi
    00001ed6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7894
    00001edb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ee2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001ee9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ef0: 	je	.Ltmp5584 # Offset: 7920
.Ltmp5889:
    00001ef6: 	movq	-0x20(%rax), %rdi
    00001efa: 	movq	%rdi, (%rsp)
    00001efe: 	callq	clock@PLT # Offset: 7934
    00001f03: 	movq	(%rsp), %rdi
    00001f07: 	pxor	%xmm0, %xmm0
    00001f0b: 	movq	%rax, end_time(%rip)
    00001f12: 	subq	start_time(%rip), %rax
    00001f19: 	cvtsi2sd	%rax, %xmm0
    00001f1e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001f26: 	callq	_Z13record_resultdPKc # Offset: 7974
    00001f2b: 	movq	0x90(%rsp), %rdi
    00001f33: 	cmpq	%r13, %rdi
    00001f36: 	je	.Ltmp5585 # Offset: 7990
    00001f38: 	movq	0xa0(%rsp), %rax
    00001f40: 	leaq	0x1(%rax), %rsi
    00001f44: 	callq	_ZdlPvm@PLT # Offset: 8004
.Ltmp5585:
    00001f49: 	leaq	DATAat0x57498(%rip), %rdx
    00001f50: 	movq	%r14, %rsi
    00001f53: 	movq	%r12, %rdi
    00001f56: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8022
    00001f5b: 	movq	%r12, %rcx
    00001f5e: 	movl	$0x2, %edx
    00001f63: 	movl	$0x1f40, %esi
    00001f68: 	movq	%rbp, %rdi
    00001f6b: 	callq	_Z14test_variable1Il22custom_divide_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 8043
    00001f70: 	movq	0x90(%rsp), %rdi
    00001f78: 	cmpq	%r13, %rdi
    00001f7b: 	je	.Ltmp5586 # Offset: 8059
    00001f7d: 	movq	0xa0(%rsp), %rax
    00001f85: 	leaq	0x1(%rax), %rsi
    00001f89: 	callq	_ZdlPvm@PLT # Offset: 8073
.Ltmp5586:
    00001f8e: 	leaq	DATAat0x574ae(%rip), %rdx
    00001f95: 	movq	%r14, %rsi
    00001f98: 	movq	%r12, %rdi
    00001f9b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8091
    00001fa0: 	callq	clock@PLT # Offset: 8096
    00001fa5: 	movl	iterations(%rip), %edi
    00001fab: 	movl	$0x0, (%rsp)
    00001fb2: 	movq	%rax, start_time(%rip)
    00001fb9: 	testl	%edi, %edi
    00001fbb: 	jle	.Ltmp5587 # Offset: 8123
    00001fbd: 	nopl	(%rax) # Size: 3
.Ltmp5590:
    00001fc0: 	movq	%rbp, %rdx
    00001fc3: 	xorl	%esi, %esi
    00001fc5: 	nopl	(%rax) # Size: 3
.Ltmp5588:
    00001fc8: 	movq	(%rdx), %rcx
    00001fcb: 	addq	$0x8, %rdx
    00001fcf: 	movq	%rcx, %rax
    00001fd2: 	shrq	$0x3f, %rax
    00001fd6: 	addq	%rcx, %rax
    00001fd9: 	sarq	%rax
    00001fdc: 	addq	%rax, %rsi
    00001fdf: 	cmpq	%rbx, %rdx
    00001fe2: 	jne	.Ltmp5588 # Offset: 8162
    00001fe4: 	cvttsd2si	init_value(%rip), %rdx
    00001fed: 	movq	%rdx, %rax
    00001ff0: 	shrq	$0x3f, %rax
    00001ff4: 	addq	%rdx, %rax
    00001ff7: 	sarq	%rax
    00001ffa: 	imulq	$0x1f40, %rax, %rax
    00002001: 	cmpq	%rax, %rsi
    00002004: 	je	.Ltmp5589 # Offset: 8196
    00002006: 	movl	current_test(%rip), %edx
    0000200c: 	leaq	DATAat0x571d0(%rip), %rsi
    00002013: 	movl	$0x1, %edi
    00002018: 	xorl	%eax, %eax
    0000201a: 	callq	__printf_chk@PLT # Offset: 8218
    0000201f: 	movl	iterations(%rip), %edi
.Ltmp5589:
    00002025: 	addl	$0x1, (%rsp)
    00002029: 	movl	(%rsp), %eax
    0000202c: 	cmpl	%edi, %eax
    0000202e: 	jl	.Ltmp5590 # Offset: 8238
.Ltmp5587:
    00002030: 	movq	%r12, %rsi
    00002033: 	movq	%r15, %rdi
    00002036: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8246
    0000203b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002042: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002049: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002050: 	je	.Ltmp5591 # Offset: 8272
.Ltmp5888:
    00002056: 	movq	-0x20(%rax), %rdi
    0000205a: 	movq	%rdi, (%rsp)
    0000205e: 	callq	clock@PLT # Offset: 8286
    00002063: 	movq	(%rsp), %rdi
    00002067: 	pxor	%xmm0, %xmm0
    0000206b: 	movq	%rax, end_time(%rip)
    00002072: 	subq	start_time(%rip), %rax
    00002079: 	cvtsi2sd	%rax, %xmm0
    0000207e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002086: 	callq	_Z13record_resultdPKc # Offset: 8326
    0000208b: 	movq	0x90(%rsp), %rdi
    00002093: 	cmpq	%r13, %rdi
    00002096: 	je	.Ltmp5592 # Offset: 8342
    00002098: 	movq	0xa0(%rsp), %rax
    000020a0: 	leaq	0x1(%rax), %rsi
    000020a4: 	callq	_ZdlPvm@PLT # Offset: 8356
.Ltmp5592:
    000020a9: 	leaq	DATAat0x574c4(%rip), %rdx
    000020b0: 	movq	%r14, %rsi
    000020b3: 	movq	%r12, %rdi
    000020b6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8374
    000020bb: 	callq	clock@PLT # Offset: 8379
    000020c0: 	movl	iterations(%rip), %esi
    000020c6: 	movl	$0x0, (%rsp)
    000020cd: 	movq	%rax, start_time(%rip)
    000020d4: 	testl	%esi, %esi
    000020d6: 	jle	.Ltmp5593 # Offset: 8406
    000020d8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp5596:
    000020e0: 	movq	%rbp, %rax
    000020e3: 	xorl	%ecx, %ecx
    000020e5: 	nopl	(%rax) # Size: 3
.Ltmp5594:
    000020e8: 	movq	(%rax), %rdx
    000020eb: 	addq	$0x8, %rax
    000020ef: 	sarq	$0x3, %rdx
    000020f3: 	addq	%rdx, %rcx
    000020f6: 	cmpq	%rbx, %rax
    000020f9: 	jne	.Ltmp5594 # Offset: 8441
    000020fb: 	cvttsd2si	init_value(%rip), %rax
    00002104: 	sarq	$0x3, %rax
    00002108: 	imulq	$0x1f40, %rax, %rax
    0000210f: 	cmpq	%rax, %rcx
    00002112: 	je	.Ltmp5595 # Offset: 8466
    00002114: 	movl	current_test(%rip), %edx
    0000211a: 	leaq	DATAat0x571d0(%rip), %rsi
    00002121: 	movl	$0x1, %edi
    00002126: 	xorl	%eax, %eax
    00002128: 	callq	__printf_chk@PLT # Offset: 8488
    0000212d: 	movl	iterations(%rip), %esi
.Ltmp5595:
    00002133: 	addl	$0x1, (%rsp)
    00002137: 	movl	(%rsp), %eax
    0000213a: 	cmpl	%esi, %eax
    0000213c: 	jl	.Ltmp5596 # Offset: 8508
.Ltmp5593:
    0000213e: 	movq	%r12, %rsi
    00002141: 	movq	%r15, %rdi
    00002144: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8516
    00002149: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002150: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002157: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000215e: 	je	.Ltmp5597 # Offset: 8542
.Ltmp5887:
    00002164: 	movq	-0x20(%rax), %rdi
    00002168: 	movq	%rdi, (%rsp)
    0000216c: 	callq	clock@PLT # Offset: 8556
    00002171: 	movq	(%rsp), %rdi
    00002175: 	pxor	%xmm0, %xmm0
    00002179: 	movq	%rax, end_time(%rip)
    00002180: 	subq	start_time(%rip), %rax
    00002187: 	cvtsi2sd	%rax, %xmm0
    0000218c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002194: 	callq	_Z13record_resultdPKc # Offset: 8596
    00002199: 	movq	0x90(%rsp), %rdi
    000021a1: 	cmpq	%r13, %rdi
    000021a4: 	je	.Ltmp5598 # Offset: 8612
    000021a6: 	movq	0xa0(%rsp), %rax
    000021ae: 	leaq	0x1(%rax), %rsi
    000021b2: 	callq	_ZdlPvm@PLT # Offset: 8626
.Ltmp5598:
    000021b7: 	leaq	DATAat0x579e8(%rip), %rdx
    000021be: 	movq	%r14, %rsi
    000021c1: 	movq	%r12, %rdi
    000021c4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8644
    000021c9: 	callq	clock@PLT # Offset: 8649
    000021ce: 	movl	iterations(%rip), %esi
    000021d4: 	movl	$0x0, (%rsp)
    000021db: 	movq	%rax, start_time(%rip)
    000021e2: 	testl	%esi, %esi
    000021e4: 	jle	.Ltmp5599 # Offset: 8676
    000021ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5604:
    000021f0: 	movq	%rbp, %rdx
    000021f3: 	xorl	%ecx, %ecx
    000021f5: 	nopl	(%rax) # Size: 3
.Ltmp5601:
    000021f8: 	movq	(%rdx), %rax
    000021fb: 	testq	%rax, %rax
    000021fe: 	js	.Ltmp5600 # Offset: 8702
    00002204: 	sarq	$0x3, %rax
    00002208: 	addq	$0x8, %rdx
    0000220c: 	addq	%rax, %rcx
    0000220f: 	cmpq	%rbx, %rdx
    00002212: 	jne	.Ltmp5601 # Offset: 8722
.Ltmp5849:
    00002214: 	cvttsd2si	init_value(%rip), %rax
    0000221d: 	movq	%rax, %rdx
    00002220: 	sarq	$0x3, %rdx
    00002224: 	testq	%rax, %rax
    00002227: 	jns	.Ltmp5602 # Offset: 8743
    00002229: 	negq	%rax
    0000222c: 	sarq	$0x3, %rax
    00002230: 	negq	%rax
    00002233: 	movq	%rax, %rdx
.Ltmp5602:
    00002236: 	imulq	$0x1f40, %rdx, %rdx
    0000223d: 	cmpq	%rcx, %rdx
    00002240: 	je	.Ltmp5603 # Offset: 8768
    00002242: 	movl	current_test(%rip), %edx
    00002248: 	leaq	DATAat0x571d0(%rip), %rsi
    0000224f: 	movl	$0x1, %edi
    00002254: 	xorl	%eax, %eax
    00002256: 	callq	__printf_chk@PLT # Offset: 8790
    0000225b: 	movl	iterations(%rip), %esi
.Ltmp5603:
    00002261: 	addl	$0x1, (%rsp)
    00002265: 	movl	(%rsp), %eax
    00002268: 	cmpl	%esi, %eax
    0000226a: 	jl	.Ltmp5604 # Offset: 8810
.Ltmp5599:
    0000226c: 	movq	%r12, %rsi
    0000226f: 	movq	%r15, %rdi
    00002272: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8818
    00002277: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000227e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002285: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000228c: 	je	.Ltmp5605 # Offset: 8844
.Ltmp5886:
    00002292: 	movq	-0x20(%rax), %rdi
    00002296: 	movq	%rdi, (%rsp)
    0000229a: 	callq	clock@PLT # Offset: 8858
    0000229f: 	movq	(%rsp), %rdi
    000022a3: 	pxor	%xmm0, %xmm0
    000022a7: 	movq	%rax, end_time(%rip)
    000022ae: 	subq	start_time(%rip), %rax
    000022b5: 	cvtsi2sd	%rax, %xmm0
    000022ba: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000022c2: 	callq	_Z13record_resultdPKc # Offset: 8898
    000022c7: 	movq	0x90(%rsp), %rdi
    000022cf: 	cmpq	%r13, %rdi
    000022d2: 	je	.Ltmp5606 # Offset: 8914
    000022d4: 	movq	0xa0(%rsp), %rax
    000022dc: 	leaq	0x1(%rax), %rsi
    000022e0: 	callq	_ZdlPvm@PLT # Offset: 8928
.Ltmp5606:
    000022e5: 	leaq	DATAat0x574d6(%rip), %rdx
    000022ec: 	movq	%r14, %rsi
    000022ef: 	movq	%r12, %rdi
    000022f2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8946
    000022f7: 	movq	%r12, %rcx
    000022fa: 	movl	$0x8, %edx
    000022ff: 	movl	$0x1f40, %esi
    00002304: 	movq	%rbp, %rdi
    00002307: 	callq	_Z14test_variable1Il22custom_divide_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 8967
    0000230c: 	movq	0x90(%rsp), %rdi
    00002314: 	cmpq	%r13, %rdi
    00002317: 	je	.Ltmp5607 # Offset: 8983
    00002319: 	movq	0xa0(%rsp), %rax
    00002321: 	leaq	0x1(%rax), %rsi
    00002325: 	callq	_ZdlPvm@PLT # Offset: 8997
.Ltmp5607:
    0000232a: 	leaq	DATAat0x574ec(%rip), %rdx
    00002331: 	movq	%r14, %rsi
    00002334: 	movq	%r12, %rdi
    00002337: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9015
    0000233c: 	callq	clock@PLT # Offset: 9020
    00002341: 	movl	iterations(%rip), %edi
    00002347: 	movl	$0x0, (%rsp)
    0000234e: 	movq	%rax, start_time(%rip)
    00002355: 	testl	%edi, %edi
    00002357: 	jle	.Ltmp5608 # Offset: 9047
    00002359: 	nopl	(%rax) # Size: 7
.Ltmp5611:
    00002360: 	movq	%rbp, %rdx
    00002363: 	xorl	%esi, %esi
    00002365: 	nopl	(%rax) # Size: 3
.Ltmp5609:
    00002368: 	movq	(%rdx), %rcx
    0000236b: 	testq	%rcx, %rcx
    0000236e: 	leaq	0x7(%rcx), %rax
    00002372: 	cmovnsq	%rcx, %rax
    00002376: 	addq	$0x8, %rdx
    0000237a: 	sarq	$0x3, %rax
    0000237e: 	addq	%rax, %rsi
    00002381: 	cmpq	%rdx, %rbx
    00002384: 	jne	.Ltmp5609 # Offset: 9092
    00002386: 	cvttsd2si	init_value(%rip), %rdx
    0000238f: 	testq	%rdx, %rdx
    00002392: 	leaq	0x7(%rdx), %rax
    00002396: 	cmovnsq	%rdx, %rax
    0000239a: 	sarq	$0x3, %rax
    0000239e: 	imulq	$0x1f40, %rax, %rax
    000023a5: 	cmpq	%rax, %rsi
    000023a8: 	je	.Ltmp5610 # Offset: 9128
    000023aa: 	movl	current_test(%rip), %edx
    000023b0: 	leaq	DATAat0x571d0(%rip), %rsi
    000023b7: 	movl	$0x1, %edi
    000023bc: 	xorl	%eax, %eax
    000023be: 	callq	__printf_chk@PLT # Offset: 9150
    000023c3: 	movl	iterations(%rip), %edi
.Ltmp5610:
    000023c9: 	addl	$0x1, (%rsp)
    000023cd: 	movl	(%rsp), %eax
    000023d0: 	cmpl	%edi, %eax
    000023d2: 	jl	.Ltmp5611 # Offset: 9170
.Ltmp5608:
    000023d4: 	movq	%r12, %rsi
    000023d7: 	movq	%r15, %rdi
    000023da: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9178
    000023df: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023e6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000023ed: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000023f4: 	je	.Ltmp5612 # Offset: 9204
.Ltmp5885:
    000023fa: 	movq	-0x20(%rax), %rdi
    000023fe: 	movq	%rdi, (%rsp)
    00002402: 	callq	clock@PLT # Offset: 9218
    00002407: 	movq	(%rsp), %rdi
    0000240b: 	pxor	%xmm0, %xmm0
    0000240f: 	movq	%rax, end_time(%rip)
    00002416: 	subq	start_time(%rip), %rax
    0000241d: 	cvtsi2sd	%rax, %xmm0
    00002422: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000242a: 	callq	_Z13record_resultdPKc # Offset: 9258
    0000242f: 	movq	0x90(%rsp), %rdi
    00002437: 	cmpq	%r13, %rdi
    0000243a: 	je	.Ltmp5613 # Offset: 9274
    0000243c: 	movq	0xa0(%rsp), %rax
    00002444: 	leaq	0x1(%rax), %rsi
    00002448: 	callq	_ZdlPvm@PLT # Offset: 9288
.Ltmp5613:
    0000244d: 	leaq	DATAat0x57502(%rip), %rdx
    00002454: 	movq	%r14, %rsi
    00002457: 	movq	%r12, %rdi
    0000245a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9306
    0000245f: 	callq	clock@PLT # Offset: 9311
    00002464: 	movl	iterations(%rip), %esi
    0000246a: 	movl	$0x0, (%rsp)
    00002471: 	movq	%rax, start_time(%rip)
    00002478: 	testl	%esi, %esi
    0000247a: 	jle	.Ltmp5614 # Offset: 9338
    0000247c: 	nopl	(%rax) # Size: 4
.Ltmp5617:
    00002480: 	movq	%rbp, %rax
    00002483: 	xorl	%ecx, %ecx
    00002485: 	nopl	(%rax) # Size: 3
.Ltmp5615:
    00002488: 	movq	(%rax), %rdx
    0000248b: 	addq	$0x8, %rax
    0000248f: 	sarq	$0x6, %rdx
    00002493: 	addq	%rdx, %rcx
    00002496: 	cmpq	%rbx, %rax
    00002499: 	jne	.Ltmp5615 # Offset: 9369
    0000249b: 	cvttsd2si	init_value(%rip), %rax
    000024a4: 	sarq	$0x6, %rax
    000024a8: 	imulq	$0x1f40, %rax, %rax
    000024af: 	cmpq	%rax, %rcx
    000024b2: 	je	.Ltmp5616 # Offset: 9394
    000024b4: 	movl	current_test(%rip), %edx
    000024ba: 	leaq	DATAat0x571d0(%rip), %rsi
    000024c1: 	movl	$0x1, %edi
    000024c6: 	xorl	%eax, %eax
    000024c8: 	callq	__printf_chk@PLT # Offset: 9416
    000024cd: 	movl	iterations(%rip), %esi
.Ltmp5616:
    000024d3: 	addl	$0x1, (%rsp)
    000024d7: 	movl	(%rsp), %eax
    000024da: 	cmpl	%esi, %eax
    000024dc: 	jl	.Ltmp5617 # Offset: 9436
.Ltmp5614:
    000024de: 	movq	%r12, %rsi
    000024e1: 	movq	%r15, %rdi
    000024e4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9444
    000024e9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000024f0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000024f7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000024fe: 	je	.Ltmp5618 # Offset: 9470
.Ltmp5884:
    00002504: 	movq	-0x20(%rax), %rdi
    00002508: 	movq	%rdi, (%rsp)
    0000250c: 	callq	clock@PLT # Offset: 9484
    00002511: 	movq	(%rsp), %rdi
    00002515: 	pxor	%xmm0, %xmm0
    00002519: 	movq	%rax, end_time(%rip)
    00002520: 	subq	start_time(%rip), %rax
    00002527: 	cvtsi2sd	%rax, %xmm0
    0000252c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002534: 	callq	_Z13record_resultdPKc # Offset: 9524
    00002539: 	movq	0x90(%rsp), %rdi
    00002541: 	cmpq	%r13, %rdi
    00002544: 	je	.Ltmp5619 # Offset: 9540
    00002546: 	movq	0xa0(%rsp), %rax
    0000254e: 	leaq	0x1(%rax), %rsi
    00002552: 	callq	_ZdlPvm@PLT # Offset: 9554
.Ltmp5619:
    00002557: 	leaq	DATAat0x57a08(%rip), %rdx
    0000255e: 	movq	%r14, %rsi
    00002561: 	movq	%r12, %rdi
    00002564: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9572
    00002569: 	callq	clock@PLT # Offset: 9577
    0000256e: 	movl	iterations(%rip), %esi
    00002574: 	movl	$0x0, (%rsp)
    0000257b: 	movq	%rax, start_time(%rip)
    00002582: 	testl	%esi, %esi
    00002584: 	jle	.Ltmp5620 # Offset: 9604
    0000258a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5625:
    00002590: 	movq	%rbp, %rdx
    00002593: 	xorl	%ecx, %ecx
    00002595: 	nopl	(%rax) # Size: 3
.Ltmp5622:
    00002598: 	movq	(%rdx), %rax
    0000259b: 	testq	%rax, %rax
    0000259e: 	js	.Ltmp5621 # Offset: 9630
    000025a4: 	sarq	$0x6, %rax
    000025a8: 	addq	$0x8, %rdx
    000025ac: 	addq	%rax, %rcx
    000025af: 	cmpq	%rbx, %rdx
    000025b2: 	jne	.Ltmp5622 # Offset: 9650
.Ltmp5847:
    000025b4: 	cvttsd2si	init_value(%rip), %rax
    000025bd: 	movq	%rax, %rdx
    000025c0: 	sarq	$0x6, %rdx
    000025c4: 	testq	%rax, %rax
    000025c7: 	jns	.Ltmp5623 # Offset: 9671
    000025c9: 	negq	%rax
    000025cc: 	sarq	$0x6, %rax
    000025d0: 	negq	%rax
    000025d3: 	movq	%rax, %rdx
.Ltmp5623:
    000025d6: 	imulq	$0x1f40, %rdx, %rdx
    000025dd: 	cmpq	%rcx, %rdx
    000025e0: 	je	.Ltmp5624 # Offset: 9696
    000025e2: 	movl	current_test(%rip), %edx
    000025e8: 	leaq	DATAat0x571d0(%rip), %rsi
    000025ef: 	movl	$0x1, %edi
    000025f4: 	xorl	%eax, %eax
    000025f6: 	callq	__printf_chk@PLT # Offset: 9718
    000025fb: 	movl	iterations(%rip), %esi
.Ltmp5624:
    00002601: 	addl	$0x1, (%rsp)
    00002605: 	movl	(%rsp), %eax
    00002608: 	cmpl	%esi, %eax
    0000260a: 	jl	.Ltmp5625 # Offset: 9738
.Ltmp5620:
    0000260c: 	movq	%r12, %rsi
    0000260f: 	movq	%r15, %rdi
    00002612: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9746
    00002617: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000261e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002625: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000262c: 	je	.Ltmp5626 # Offset: 9772
.Ltmp5883:
    00002632: 	movq	-0x20(%rax), %rdi
    00002636: 	movq	%rdi, (%rsp)
    0000263a: 	callq	clock@PLT # Offset: 9786
    0000263f: 	movq	(%rsp), %rdi
    00002643: 	pxor	%xmm0, %xmm0
    00002647: 	movq	%rax, end_time(%rip)
    0000264e: 	subq	start_time(%rip), %rax
    00002655: 	cvtsi2sd	%rax, %xmm0
    0000265a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002662: 	callq	_Z13record_resultdPKc # Offset: 9826
    00002667: 	movq	0x90(%rsp), %rdi
    0000266f: 	cmpq	%r13, %rdi
    00002672: 	je	.Ltmp5627 # Offset: 9842
    00002674: 	movq	0xa0(%rsp), %rax
    0000267c: 	leaq	0x1(%rax), %rsi
    00002680: 	callq	_ZdlPvm@PLT # Offset: 9856
.Ltmp5627:
    00002685: 	leaq	DATAat0x57514(%rip), %rdx
    0000268c: 	movq	%r14, %rsi
    0000268f: 	movq	%r12, %rdi
    00002692: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9874
    00002697: 	movq	%r12, %rcx
    0000269a: 	movl	$0x40, %edx
    0000269f: 	movl	$0x1f40, %esi
    000026a4: 	movq	%rbp, %rdi
    000026a7: 	callq	_Z14test_variable1Il22custom_divide_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 9895
    000026ac: 	movq	0x90(%rsp), %rdi
    000026b4: 	cmpq	%r13, %rdi
    000026b7: 	je	.Ltmp5628 # Offset: 9911
    000026b9: 	movq	0xa0(%rsp), %rax
    000026c1: 	leaq	0x1(%rax), %rsi
    000026c5: 	callq	_ZdlPvm@PLT # Offset: 9925
.Ltmp5628:
    000026ca: 	leaq	DATAat0x5752b(%rip), %rdx
    000026d1: 	movq	%r14, %rsi
    000026d4: 	movq	%r12, %rdi
    000026d7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9943
    000026dc: 	callq	clock@PLT # Offset: 9948
    000026e1: 	movl	iterations(%rip), %edi
    000026e7: 	movl	$0x0, (%rsp)
    000026ee: 	movq	%rax, start_time(%rip)
    000026f5: 	testl	%edi, %edi
    000026f7: 	jle	.Ltmp5629 # Offset: 9975
    000026f9: 	nopl	(%rax) # Size: 7
.Ltmp5632:
    00002700: 	movq	%rbp, %rdx
    00002703: 	xorl	%esi, %esi
    00002705: 	nopl	(%rax) # Size: 3
.Ltmp5630:
    00002708: 	movq	(%rdx), %rcx
    0000270b: 	testq	%rcx, %rcx
    0000270e: 	leaq	0x3f(%rcx), %rax
    00002712: 	cmovnsq	%rcx, %rax
    00002716: 	addq	$0x8, %rdx
    0000271a: 	sarq	$0x6, %rax
    0000271e: 	addq	%rax, %rsi
    00002721: 	cmpq	%rbx, %rdx
    00002724: 	jne	.Ltmp5630 # Offset: 10020
    00002726: 	cvttsd2si	init_value(%rip), %rdx
    0000272f: 	testq	%rdx, %rdx
    00002732: 	leaq	0x3f(%rdx), %rax
    00002736: 	cmovnsq	%rdx, %rax
    0000273a: 	sarq	$0x6, %rax
    0000273e: 	imulq	$0x1f40, %rax, %rax
    00002745: 	cmpq	%rax, %rsi
    00002748: 	je	.Ltmp5631 # Offset: 10056
    0000274a: 	movl	current_test(%rip), %edx
    00002750: 	leaq	DATAat0x571d0(%rip), %rsi
    00002757: 	movl	$0x1, %edi
    0000275c: 	xorl	%eax, %eax
    0000275e: 	callq	__printf_chk@PLT # Offset: 10078
    00002763: 	movl	iterations(%rip), %edi
.Ltmp5631:
    00002769: 	addl	$0x1, (%rsp)
    0000276d: 	movl	(%rsp), %eax
    00002770: 	cmpl	%edi, %eax
    00002772: 	jl	.Ltmp5632 # Offset: 10098
.Ltmp5629:
    00002774: 	movq	%r12, %rsi
    00002777: 	movq	%r15, %rdi
    0000277a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10106
    0000277f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002786: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000278d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002794: 	je	.Ltmp5633 # Offset: 10132
.Ltmp5882:
    0000279a: 	movq	-0x20(%rax), %rdi
    0000279e: 	movq	%rdi, (%rsp)
    000027a2: 	callq	clock@PLT # Offset: 10146
    000027a7: 	movq	(%rsp), %rdi
    000027ab: 	pxor	%xmm0, %xmm0
    000027af: 	movq	%rax, end_time(%rip)
    000027b6: 	subq	start_time(%rip), %rax
    000027bd: 	cvtsi2sd	%rax, %xmm0
    000027c2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000027ca: 	callq	_Z13record_resultdPKc # Offset: 10186
    000027cf: 	movq	0x90(%rsp), %rdi
    000027d7: 	cmpq	%r13, %rdi
    000027da: 	je	.Ltmp5634 # Offset: 10202
    000027dc: 	movq	0xa0(%rsp), %rax
    000027e4: 	leaq	0x1(%rax), %rsi
    000027e8: 	callq	_ZdlPvm@PLT # Offset: 10216
.Ltmp5634:
    000027ed: 	leaq	0x70(%rsp), %rdi
    000027f2: 	leaq	DATAat0x57542(%rip), %rdx
    000027f9: 	movq	%r14, %rsi
    000027fc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10236
    00002801: 	movl	iterations(%rip), %edx
    00002807: 	movq	0x70(%rsp), %rdi
    0000280c: 	xorl	%r8d, %r8d
    0000280f: 	xorl	%ecx, %ecx
    00002811: 	movl	$0x1f40, %esi
    00002816: 	callq	_Z9summarizePKciiii # Offset: 10262
    0000281b: 	leaq	DATAat0x5755d(%rip), %rdx
    00002822: 	movq	%r14, %rsi
    00002825: 	movq	%r12, %rdi
    00002828: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10280
    0000282d: 	callq	clock@PLT # Offset: 10285
    00002832: 	movl	iterations(%rip), %ecx
    00002838: 	movq	%rax, start_time(%rip)
    0000283f: 	testl	%ecx, %ecx
    00002841: 	jle	.Ltmp5635 # Offset: 10305
    00002847: 	movl	$0x0, (%rsp)
    0000284e: 	nop # Size: 2
.Ltmp5638:
    00002850: 	movq	%rbp, %rax
    00002853: 	pxor	%xmm0, %xmm0
    00002857: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5636:
    00002860: 	movdqa	DATAat0x57f50(%rip), %xmm1
    00002868: 	pand	(%rax), %xmm1
    0000286c: 	addq	$0x10, %rax
    00002870: 	paddq	%xmm1, %xmm0
    00002874: 	cmpq	%rbx, %rax
    00002877: 	jne	.Ltmp5636 # Offset: 10359
    00002879: 	cvttsd2si	init_value(%rip), %rdx
    00002882: 	movdqa	%xmm0, %xmm1
    00002886: 	psrldq	$0x8, %xmm1
    0000288b: 	paddq	%xmm1, %xmm0
    0000288f: 	movq	%xmm0, %rax
    00002894: 	andl	$0x1, %edx
    00002897: 	negq	%rdx
    0000289a: 	andl	$0x1f40, %edx
    000028a0: 	cmpq	%rax, %rdx
    000028a3: 	je	.Ltmp5637 # Offset: 10403
    000028a5: 	movl	current_test(%rip), %edx
    000028ab: 	leaq	DATAat0x571d0(%rip), %rsi
    000028b2: 	movl	$0x1, %edi
    000028b7: 	xorl	%eax, %eax
    000028b9: 	callq	__printf_chk@PLT # Offset: 10425
    000028be: 	movl	iterations(%rip), %ecx
.Ltmp5637:
    000028c4: 	addl	$0x1, (%rsp)
    000028c8: 	movl	(%rsp), %eax
    000028cb: 	cmpl	%ecx, %eax
    000028cd: 	jl	.Ltmp5638 # Offset: 10445
.Ltmp5635:
    000028cf: 	movq	%r12, %rsi
    000028d2: 	movq	%r15, %rdi
    000028d5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10453
    000028da: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000028e1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000028e8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000028ef: 	je	.Ltmp5639 # Offset: 10479
.Ltmp5881:
    000028f5: 	movq	-0x20(%rax), %rdi
    000028f9: 	movq	%rdi, (%rsp)
    000028fd: 	callq	clock@PLT # Offset: 10493
    00002902: 	movq	(%rsp), %rdi
    00002906: 	pxor	%xmm0, %xmm0
    0000290a: 	movq	%rax, end_time(%rip)
    00002911: 	subq	start_time(%rip), %rax
    00002918: 	cvtsi2sd	%rax, %xmm0
    0000291d: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002925: 	callq	_Z13record_resultdPKc # Offset: 10533
    0000292a: 	movq	0x90(%rsp), %rdi
    00002932: 	cmpq	%r13, %rdi
    00002935: 	je	.Ltmp5640 # Offset: 10549
    00002937: 	movq	0xa0(%rsp), %rax
    0000293f: 	leaq	0x1(%rax), %rsi
    00002943: 	callq	_ZdlPvm@PLT # Offset: 10563
.Ltmp5640:
    00002948: 	leaq	DATAat0x57564(%rip), %rdx
    0000294f: 	movq	%r14, %rsi
    00002952: 	movq	%r12, %rdi
    00002955: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10581
    0000295a: 	callq	clock@PLT # Offset: 10586
    0000295f: 	movl	iterations(%rip), %edi
    00002965: 	movl	$0x0, (%rsp)
    0000296c: 	movq	%rax, start_time(%rip)
    00002973: 	testl	%edi, %edi
    00002975: 	jle	.Ltmp5641 # Offset: 10613
    0000297b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp5648:
    00002980: 	movq	%rbp, %rax
    00002983: 	xorl	%esi, %esi
    00002985: 	nopl	(%rax) # Size: 3
.Ltmp5644:
    00002988: 	movq	(%rax), %rdx
    0000298b: 	movq	%rdx, %rcx
    0000298e: 	andl	$0x1, %ecx
    00002991: 	testq	%rdx, %rdx
    00002994: 	jns	.Ltmp5642 # Offset: 10644
    00002996: 	testb	%cl, %cl
    00002998: 	jne	.Ltmp5643 # Offset: 10648
.Ltmp5642:
    0000299e: 	addq	$0x8, %rax
    000029a2: 	addq	%rcx, %rsi
    000029a5: 	cmpq	%rbx, %rax
    000029a8: 	jne	.Ltmp5644 # Offset: 10664
.Ltmp5851:
    000029aa: 	cvttsd2si	init_value(%rip), %rdx
    000029b3: 	movq	%rdx, %rax
    000029b6: 	andl	$0x1, %eax
    000029b9: 	testq	%rdx, %rdx
    000029bc: 	jns	.Ltmp5645 # Offset: 10684
    000029be: 	testb	%al, %al
    000029c0: 	jne	.Ltmp5646 # Offset: 10688
.Ltmp5645:
    000029c6: 	imulq	$0x1f40, %rax, %rax
.Ltmp5911:
    000029cd: 	cmpq	%rax, %rsi
    000029d0: 	je	.Ltmp5647 # Offset: 10704
    000029d2: 	movl	current_test(%rip), %edx
    000029d8: 	leaq	DATAat0x571d0(%rip), %rsi
    000029df: 	movl	$0x1, %edi
    000029e4: 	xorl	%eax, %eax
    000029e6: 	callq	__printf_chk@PLT # Offset: 10726
    000029eb: 	movl	iterations(%rip), %edi
.Ltmp5647:
    000029f1: 	addl	$0x1, (%rsp)
    000029f5: 	movl	(%rsp), %eax
    000029f8: 	cmpl	%edi, %eax
    000029fa: 	jl	.Ltmp5648 # Offset: 10746
.Ltmp5641:
    000029fc: 	movq	%r12, %rsi
    000029ff: 	movq	%r15, %rdi
    00002a02: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10754
    00002a07: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002a0e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002a15: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002a1c: 	je	.Ltmp5649 # Offset: 10780
.Ltmp5880:
    00002a22: 	movq	-0x20(%rax), %rdi
    00002a26: 	movq	%rdi, (%rsp)
    00002a2a: 	callq	clock@PLT # Offset: 10794
    00002a2f: 	movq	(%rsp), %rdi
    00002a33: 	pxor	%xmm0, %xmm0
    00002a37: 	movq	%rax, end_time(%rip)
    00002a3e: 	subq	start_time(%rip), %rax
    00002a45: 	cvtsi2sd	%rax, %xmm0
    00002a4a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002a52: 	callq	_Z13record_resultdPKc # Offset: 10834
    00002a57: 	movq	0x90(%rsp), %rdi
    00002a5f: 	cmpq	%r13, %rdi
    00002a62: 	je	.Ltmp5650 # Offset: 10850
    00002a64: 	movq	0xa0(%rsp), %rax
    00002a6c: 	leaq	0x1(%rax), %rsi
    00002a70: 	callq	_ZdlPvm@PLT # Offset: 10864
.Ltmp5650:
    00002a75: 	leaq	DATAat0x57575(%rip), %rdx
    00002a7c: 	movq	%r14, %rsi
    00002a7f: 	movq	%r12, %rdi
    00002a82: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10882
    00002a87: 	callq	clock@PLT # Offset: 10887
    00002a8c: 	movl	iterations(%rip), %edi
    00002a92: 	movl	$0x0, (%rsp)
    00002a99: 	movq	%rax, start_time(%rip)
    00002aa0: 	testl	%edi, %edi
    00002aa2: 	jle	.Ltmp5651 # Offset: 10914
    00002aa8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp5658:
    00002ab0: 	movq	%rbp, %rax
    00002ab3: 	xorl	%esi, %esi
    00002ab5: 	nopl	(%rax) # Size: 3
.Ltmp5654:
    00002ab8: 	movq	(%rax), %rdx
    00002abb: 	movq	%rdx, %rcx
    00002abe: 	andl	$0x1, %ecx
    00002ac1: 	testq	%rdx, %rdx
    00002ac4: 	jns	.Ltmp5652 # Offset: 10948
    00002ac6: 	testb	%cl, %cl
    00002ac8: 	jne	.Ltmp5653 # Offset: 10952
.Ltmp5652:
    00002ace: 	addq	$0x8, %rax
    00002ad2: 	addq	%rcx, %rsi
    00002ad5: 	cmpq	%rbx, %rax
    00002ad8: 	jne	.Ltmp5654 # Offset: 10968
.Ltmp5850:
    00002ada: 	cvttsd2si	init_value(%rip), %rdx
    00002ae3: 	movq	%rdx, %rax
    00002ae6: 	andl	$0x1, %eax
    00002ae9: 	testq	%rdx, %rdx
    00002aec: 	jns	.Ltmp5655 # Offset: 10988
    00002aee: 	testb	%al, %al
    00002af0: 	jne	.Ltmp5656 # Offset: 10992
.Ltmp5655:
    00002af6: 	imulq	$0x1f40, %rax, %rax
.Ltmp5910:
    00002afd: 	cmpq	%rax, %rsi
    00002b00: 	je	.Ltmp5657 # Offset: 11008
    00002b02: 	movl	current_test(%rip), %edx
    00002b08: 	leaq	DATAat0x571d0(%rip), %rsi
    00002b0f: 	movl	$0x1, %edi
    00002b14: 	xorl	%eax, %eax
    00002b16: 	callq	__printf_chk@PLT # Offset: 11030
    00002b1b: 	movl	iterations(%rip), %edi
.Ltmp5657:
    00002b21: 	addl	$0x1, (%rsp)
    00002b25: 	movl	(%rsp), %eax
    00002b28: 	cmpl	%edi, %eax
    00002b2a: 	jl	.Ltmp5658 # Offset: 11050
.Ltmp5651:
    00002b2c: 	movq	%r12, %rsi
    00002b2f: 	movq	%r15, %rdi
    00002b32: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11058
    00002b37: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002b3e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002b45: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002b4c: 	je	.Ltmp5659 # Offset: 11084
.Ltmp5879:
    00002b52: 	movq	-0x20(%rax), %rdi
    00002b56: 	movq	%rdi, (%rsp)
    00002b5a: 	callq	clock@PLT # Offset: 11098
    00002b5f: 	movq	(%rsp), %rdi
    00002b63: 	pxor	%xmm0, %xmm0
    00002b67: 	movq	%rax, end_time(%rip)
    00002b6e: 	subq	start_time(%rip), %rax
    00002b75: 	cvtsi2sd	%rax, %xmm0
    00002b7a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002b82: 	callq	_Z13record_resultdPKc # Offset: 11138
    00002b87: 	movq	0x90(%rsp), %rdi
    00002b8f: 	cmpq	%r13, %rdi
    00002b92: 	je	.Ltmp5660 # Offset: 11154
    00002b94: 	movq	0xa0(%rsp), %rax
    00002b9c: 	leaq	0x1(%rax), %rsi
    00002ba0: 	callq	_ZdlPvm@PLT # Offset: 11168
.Ltmp5660:
    00002ba5: 	leaq	DATAat0x57587(%rip), %rdx
    00002bac: 	movq	%r14, %rsi
    00002baf: 	movq	%r12, %rdi
    00002bb2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11186
    00002bb7: 	callq	clock@PLT # Offset: 11191
    00002bbc: 	movl	iterations(%rip), %edi
    00002bc2: 	movl	$0x0, (%rsp)
    00002bc9: 	movq	%rax, start_time(%rip)
    00002bd0: 	testl	%edi, %edi
    00002bd2: 	jle	.Ltmp5661 # Offset: 11218
    00002bd4: 	nopl	(%rax) # Size: 4
.Ltmp5664:
    00002bd8: 	movq	%rbp, %rdx
    00002bdb: 	xorl	%esi, %esi
    00002bdd: 	nopl	(%rax) # Size: 3
.Ltmp5662:
    00002be0: 	movq	(%rdx), %rax
    00002be3: 	addq	$0x8, %rdx
    00002be7: 	movq	%rax, %rcx
    00002bea: 	shrq	$0x3f, %rcx
    00002bee: 	addq	%rcx, %rax
    00002bf1: 	andl	$0x1, %eax
    00002bf4: 	subq	%rcx, %rax
    00002bf7: 	addq	%rax, %rsi
    00002bfa: 	cmpq	%rbx, %rdx
    00002bfd: 	jne	.Ltmp5662 # Offset: 11261
    00002bff: 	cvttsd2si	init_value(%rip), %rax
    00002c08: 	movq	%rax, %rdx
    00002c0b: 	shrq	$0x3f, %rdx
    00002c0f: 	addq	%rdx, %rax
    00002c12: 	andl	$0x1, %eax
    00002c15: 	subq	%rdx, %rax
    00002c18: 	imulq	$0x1f40, %rax, %rax
    00002c1f: 	cmpq	%rax, %rsi
    00002c22: 	je	.Ltmp5663 # Offset: 11298
    00002c24: 	movl	current_test(%rip), %edx
    00002c2a: 	leaq	DATAat0x571d0(%rip), %rsi
    00002c31: 	movl	$0x1, %edi
    00002c36: 	xorl	%eax, %eax
    00002c38: 	callq	__printf_chk@PLT # Offset: 11320
    00002c3d: 	movl	iterations(%rip), %edi
.Ltmp5663:
    00002c43: 	addl	$0x1, (%rsp)
    00002c47: 	movl	(%rsp), %eax
    00002c4a: 	cmpl	%edi, %eax
    00002c4c: 	jl	.Ltmp5664 # Offset: 11340
.Ltmp5661:
    00002c4e: 	movq	%r12, %rsi
    00002c51: 	movq	%r15, %rdi
    00002c54: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11348
    00002c59: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002c60: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002c67: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002c6e: 	je	.Ltmp5665 # Offset: 11374
.Ltmp5878:
    00002c74: 	movq	-0x20(%rax), %rdi
    00002c78: 	movq	%rdi, (%rsp)
    00002c7c: 	callq	clock@PLT # Offset: 11388
    00002c81: 	movq	(%rsp), %rdi
    00002c85: 	pxor	%xmm0, %xmm0
    00002c89: 	movq	%rax, end_time(%rip)
    00002c90: 	subq	start_time(%rip), %rax
    00002c97: 	cvtsi2sd	%rax, %xmm0
    00002c9c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002ca4: 	callq	_Z13record_resultdPKc # Offset: 11428
    00002ca9: 	movq	0x90(%rsp), %rdi
    00002cb1: 	cmpq	%r13, %rdi
    00002cb4: 	je	.Ltmp5666 # Offset: 11444
    00002cb6: 	movq	0xa0(%rsp), %rax
    00002cbe: 	leaq	0x1(%rax), %rsi
    00002cc2: 	callq	_ZdlPvm@PLT # Offset: 11458
.Ltmp5666:
    00002cc7: 	leaq	DATAat0x5759e(%rip), %rdx
    00002cce: 	movq	%r14, %rsi
    00002cd1: 	movq	%r12, %rdi
    00002cd4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11476
    00002cd9: 	movq	%r12, %rcx
    00002cdc: 	movl	$0x2, %edx
    00002ce1: 	movl	$0x1f40, %esi
    00002ce6: 	movq	%rbp, %rdi
    00002ce9: 	callq	_Z14test_variable1Il25custom_remainder_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11497
    00002cee: 	movq	0x90(%rsp), %rdi
    00002cf6: 	cmpq	%r13, %rdi
    00002cf9: 	je	.Ltmp5667 # Offset: 11513
    00002cfb: 	movq	0xa0(%rsp), %rax
    00002d03: 	leaq	0x1(%rax), %rsi
    00002d07: 	callq	_ZdlPvm@PLT # Offset: 11527
.Ltmp5667:
    00002d0c: 	leaq	DATAat0x575b7(%rip), %rdx
    00002d13: 	movq	%r14, %rsi
    00002d16: 	movq	%r12, %rdi
    00002d19: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11545
    00002d1e: 	callq	clock@PLT # Offset: 11550
    00002d23: 	movl	iterations(%rip), %edi
    00002d29: 	movl	$0x0, (%rsp)
    00002d30: 	movq	%rax, start_time(%rip)
    00002d37: 	testl	%edi, %edi
    00002d39: 	jle	.Ltmp5668 # Offset: 11577
    00002d3b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp5671:
    00002d40: 	movq	%rbp, %rdx
    00002d43: 	xorl	%esi, %esi
    00002d45: 	nopl	(%rax) # Size: 3
.Ltmp5669:
    00002d48: 	movq	(%rdx), %rax
    00002d4b: 	addq	$0x8, %rdx
    00002d4f: 	movq	%rax, %rcx
    00002d52: 	shrq	$0x3f, %rcx
    00002d56: 	addq	%rcx, %rax
    00002d59: 	andl	$0x1, %eax
    00002d5c: 	subq	%rcx, %rax
    00002d5f: 	addq	%rax, %rsi
    00002d62: 	cmpq	%rbx, %rdx
    00002d65: 	jne	.Ltmp5669 # Offset: 11621
    00002d67: 	cvttsd2si	init_value(%rip), %rax
    00002d70: 	movq	%rax, %rdx
    00002d73: 	shrq	$0x3f, %rdx
    00002d77: 	addq	%rdx, %rax
    00002d7a: 	andl	$0x1, %eax
    00002d7d: 	subq	%rdx, %rax
    00002d80: 	imulq	$0x1f40, %rax, %rax
    00002d87: 	cmpq	%rax, %rsi
    00002d8a: 	je	.Ltmp5670 # Offset: 11658
    00002d8c: 	movl	current_test(%rip), %edx
    00002d92: 	leaq	DATAat0x571d0(%rip), %rsi
    00002d99: 	movl	$0x1, %edi
    00002d9e: 	xorl	%eax, %eax
    00002da0: 	callq	__printf_chk@PLT # Offset: 11680
    00002da5: 	movl	iterations(%rip), %edi
.Ltmp5670:
    00002dab: 	addl	$0x1, (%rsp)
    00002daf: 	movl	(%rsp), %eax
    00002db2: 	cmpl	%edi, %eax
    00002db4: 	jl	.Ltmp5671 # Offset: 11700
.Ltmp5668:
    00002db6: 	movq	%r12, %rsi
    00002db9: 	movq	%r15, %rdi
    00002dbc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11708
    00002dc1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002dc8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002dcf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002dd6: 	je	.Ltmp5672 # Offset: 11734
.Ltmp5877:
    00002ddc: 	movq	-0x20(%rax), %rdi
    00002de0: 	movq	%rdi, (%rsp)
    00002de4: 	callq	clock@PLT # Offset: 11748
    00002de9: 	movq	(%rsp), %rdi
    00002ded: 	pxor	%xmm0, %xmm0
    00002df1: 	movq	%rax, end_time(%rip)
    00002df8: 	subq	start_time(%rip), %rax
    00002dff: 	cvtsi2sd	%rax, %xmm0
    00002e04: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002e0c: 	callq	_Z13record_resultdPKc # Offset: 11788
    00002e11: 	movq	0x90(%rsp), %rdi
    00002e19: 	cmpq	%r13, %rdi
    00002e1c: 	je	.Ltmp5673 # Offset: 11804
    00002e1e: 	movq	0xa0(%rsp), %rax
    00002e26: 	leaq	0x1(%rax), %rsi
    00002e2a: 	callq	_ZdlPvm@PLT # Offset: 11818
.Ltmp5673:
    00002e2f: 	leaq	DATAat0x575d0(%rip), %rdx
    00002e36: 	movq	%r14, %rsi
    00002e39: 	movq	%r12, %rdi
    00002e3c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11836
    00002e41: 	callq	clock@PLT # Offset: 11841
    00002e46: 	movl	iterations(%rip), %ecx
    00002e4c: 	movq	%rax, start_time(%rip)
    00002e53: 	testl	%ecx, %ecx
    00002e55: 	jle	.Ltmp5674 # Offset: 11861
    00002e5b: 	movl	$0x0, (%rsp)
    00002e62: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5677:
    00002e68: 	movq	%rbp, %rax
    00002e6b: 	pxor	%xmm0, %xmm0
    00002e6f: 	nop # Size: 1
.Ltmp5675:
    00002e70: 	movdqa	DATAat0x57c80(%rip), %xmm1
    00002e78: 	pand	(%rax), %xmm1
    00002e7c: 	addq	$0x10, %rax
    00002e80: 	paddq	%xmm1, %xmm0
    00002e84: 	cmpq	%rbx, %rax
    00002e87: 	jne	.Ltmp5675 # Offset: 11911
    00002e89: 	cvttsd2si	init_value(%rip), %rdx
    00002e92: 	movdqa	%xmm0, %xmm1
    00002e96: 	psrldq	$0x8, %xmm1
    00002e9b: 	paddq	%xmm1, %xmm0
    00002e9f: 	movq	%xmm0, %rax
    00002ea4: 	andl	$0x3, %edx
    00002ea7: 	imulq	$0x1f40, %rdx, %rdx
    00002eae: 	cmpq	%rax, %rdx
    00002eb1: 	je	.Ltmp5676 # Offset: 11953
    00002eb3: 	movl	current_test(%rip), %edx
    00002eb9: 	leaq	DATAat0x571d0(%rip), %rsi
    00002ec0: 	movl	$0x1, %edi
    00002ec5: 	xorl	%eax, %eax
    00002ec7: 	callq	__printf_chk@PLT # Offset: 11975
    00002ecc: 	movl	iterations(%rip), %ecx
.Ltmp5676:
    00002ed2: 	addl	$0x1, (%rsp)
    00002ed6: 	movl	(%rsp), %eax
    00002ed9: 	cmpl	%ecx, %eax
    00002edb: 	jl	.Ltmp5677 # Offset: 11995
.Ltmp5674:
    00002edd: 	movq	%r12, %rsi
    00002ee0: 	movq	%r15, %rdi
    00002ee3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12003
    00002ee8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002eef: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002ef6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002efd: 	je	.Ltmp5678 # Offset: 12029
.Ltmp5876:
    00002f03: 	movq	-0x20(%rax), %rdi
    00002f07: 	movq	%rdi, (%rsp)
    00002f0b: 	callq	clock@PLT # Offset: 12043
    00002f10: 	movq	(%rsp), %rdi
    00002f14: 	pxor	%xmm0, %xmm0
    00002f18: 	movq	%rax, end_time(%rip)
    00002f1f: 	subq	start_time(%rip), %rax
    00002f26: 	cvtsi2sd	%rax, %xmm0
    00002f2b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002f33: 	callq	_Z13record_resultdPKc # Offset: 12083
    00002f38: 	movq	0x90(%rsp), %rdi
    00002f40: 	cmpq	%r13, %rdi
    00002f43: 	je	.Ltmp5679 # Offset: 12099
    00002f45: 	movq	0xa0(%rsp), %rax
    00002f4d: 	leaq	0x1(%rax), %rsi
    00002f51: 	callq	_ZdlPvm@PLT # Offset: 12113
.Ltmp5679:
    00002f56: 	leaq	DATAat0x575d7(%rip), %rdx
    00002f5d: 	movq	%r14, %rsi
    00002f60: 	movq	%r12, %rdi
    00002f63: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12131
    00002f68: 	movq	%r12, %rdx
    00002f6b: 	movl	$0x1f40, %esi
    00002f70: 	movq	%rbp, %rdi
    00002f73: 	callq	_Z13test_constantIl13and_remainderIlLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 12147
    00002f78: 	movq	0x90(%rsp), %rdi
    00002f80: 	cmpq	%r13, %rdi
    00002f83: 	je	.Ltmp5680 # Offset: 12163
    00002f85: 	movq	0xa0(%rsp), %rax
    00002f8d: 	leaq	0x1(%rax), %rsi
    00002f91: 	callq	_ZdlPvm@PLT # Offset: 12177
.Ltmp5680:
    00002f96: 	leaq	DATAat0x575e8(%rip), %rdx
    00002f9d: 	movq	%r14, %rsi
    00002fa0: 	movq	%r12, %rdi
    00002fa3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12195
    00002fa8: 	movq	%r12, %rdx
    00002fab: 	movl	$0x1f40, %esi
    00002fb0: 	movq	%rbp, %rdi
    00002fb3: 	callq	_Z13test_constantIl14and_remainder2IlLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 12211
    00002fb8: 	movq	0x90(%rsp), %rdi
    00002fc0: 	cmpq	%r13, %rdi
    00002fc3: 	je	.Ltmp5681 # Offset: 12227
    00002fc5: 	movq	0xa0(%rsp), %rax
    00002fcd: 	leaq	0x1(%rax), %rsi
    00002fd1: 	callq	_ZdlPvm@PLT # Offset: 12241
.Ltmp5681:
    00002fd6: 	leaq	DATAat0x575fa(%rip), %rdx
    00002fdd: 	movq	%r14, %rsi
    00002fe0: 	movq	%r12, %rdi
    00002fe3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12259
    00002fe8: 	callq	clock@PLT # Offset: 12264
    00002fed: 	movl	iterations(%rip), %edi
    00002ff3: 	movl	$0x0, (%rsp)
    00002ffa: 	movq	%rax, start_time(%rip)
    00003001: 	testl	%edi, %edi
    00003003: 	jle	.Ltmp5682 # Offset: 12291
    00003005: 	nopl	(%rax) # Size: 3
.Ltmp5685:
    00003008: 	movq	%rbp, %rcx
    0000300b: 	xorl	%esi, %esi
    0000300d: 	nopl	(%rax) # Size: 3
.Ltmp5683:
    00003010: 	movq	(%rcx), %rax
    00003013: 	addq	$0x8, %rcx
    00003017: 	cqto
    00003019: 	shrq	$0x3e, %rdx
    0000301d: 	addq	%rdx, %rax
    00003020: 	andl	$0x3, %eax
    00003023: 	subq	%rdx, %rax
    00003026: 	addq	%rax, %rsi
    00003029: 	cmpq	%rbx, %rcx
    0000302c: 	jne	.Ltmp5683 # Offset: 12332
    0000302e: 	cvttsd2si	init_value(%rip), %rax
    00003037: 	cqto
    00003039: 	shrq	$0x3e, %rdx
    0000303d: 	addq	%rdx, %rax
    00003040: 	andl	$0x3, %eax
    00003043: 	subq	%rdx, %rax
    00003046: 	imulq	$0x1f40, %rax, %rax
    0000304d: 	cmpq	%rax, %rsi
    00003050: 	je	.Ltmp5684 # Offset: 12368
    00003052: 	movl	current_test(%rip), %edx
    00003058: 	leaq	DATAat0x571d0(%rip), %rsi
    0000305f: 	movl	$0x1, %edi
    00003064: 	xorl	%eax, %eax
    00003066: 	callq	__printf_chk@PLT # Offset: 12390
    0000306b: 	movl	iterations(%rip), %edi
.Ltmp5684:
    00003071: 	addl	$0x1, (%rsp)
    00003075: 	movl	(%rsp), %eax
    00003078: 	cmpl	%edi, %eax
    0000307a: 	jl	.Ltmp5685 # Offset: 12410
.Ltmp5682:
    0000307c: 	movq	%r12, %rsi
    0000307f: 	movq	%r15, %rdi
    00003082: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12418
    00003087: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000308e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003095: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000309c: 	je	.Ltmp5686 # Offset: 12444
.Ltmp5875:
    000030a2: 	movq	-0x20(%rax), %rdi
    000030a6: 	movq	%rdi, (%rsp)
    000030aa: 	callq	clock@PLT # Offset: 12458
    000030af: 	movq	(%rsp), %rdi
    000030b3: 	pxor	%xmm0, %xmm0
    000030b7: 	movq	%rax, end_time(%rip)
    000030be: 	subq	start_time(%rip), %rax
    000030c5: 	cvtsi2sd	%rax, %xmm0
    000030ca: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000030d2: 	callq	_Z13record_resultdPKc # Offset: 12498
    000030d7: 	movq	0x90(%rsp), %rdi
    000030df: 	cmpq	%r13, %rdi
    000030e2: 	je	.Ltmp5687 # Offset: 12514
    000030e4: 	movq	0xa0(%rsp), %rax
    000030ec: 	leaq	0x1(%rax), %rsi
    000030f0: 	callq	_ZdlPvm@PLT # Offset: 12528
.Ltmp5687:
    000030f5: 	leaq	DATAat0x57611(%rip), %rdx
    000030fc: 	movq	%r14, %rsi
    000030ff: 	movq	%r12, %rdi
    00003102: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12546
    00003107: 	movq	%r12, %rcx
    0000310a: 	movl	$0x4, %edx
    0000310f: 	movl	$0x1f40, %esi
    00003114: 	movq	%rbp, %rdi
    00003117: 	callq	_Z14test_variable1Il25custom_remainder_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 12567
    0000311c: 	movq	0x90(%rsp), %rdi
    00003124: 	cmpq	%r13, %rdi
    00003127: 	je	.Ltmp5688 # Offset: 12583
    00003129: 	movq	0xa0(%rsp), %rax
    00003131: 	leaq	0x1(%rax), %rsi
    00003135: 	callq	_ZdlPvm@PLT # Offset: 12597
.Ltmp5688:
    0000313a: 	leaq	DATAat0x5762a(%rip), %rdx
    00003141: 	movq	%r14, %rsi
    00003144: 	movq	%r12, %rdi
    00003147: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12615
    0000314c: 	callq	clock@PLT # Offset: 12620
    00003151: 	movl	iterations(%rip), %edi
    00003157: 	movl	$0x0, (%rsp)
    0000315e: 	movq	%rax, start_time(%rip)
    00003165: 	testl	%edi, %edi
    00003167: 	jle	.Ltmp5689 # Offset: 12647
    00003169: 	nopl	(%rax) # Size: 7
.Ltmp5692:
    00003170: 	movq	%rbp, %rcx
    00003173: 	xorl	%esi, %esi
    00003175: 	nopl	(%rax) # Size: 3
.Ltmp5690:
    00003178: 	movq	(%rcx), %rax
    0000317b: 	addq	$0x8, %rcx
    0000317f: 	cqto
    00003181: 	shrq	$0x3e, %rdx
    00003185: 	addq	%rdx, %rax
    00003188: 	andl	$0x3, %eax
    0000318b: 	subq	%rdx, %rax
    0000318e: 	addq	%rax, %rsi
    00003191: 	cmpq	%rbx, %rcx
    00003194: 	jne	.Ltmp5690 # Offset: 12692
    00003196: 	cvttsd2si	init_value(%rip), %rax
    0000319f: 	cqto
    000031a1: 	shrq	$0x3e, %rdx
    000031a5: 	addq	%rdx, %rax
    000031a8: 	andl	$0x3, %eax
    000031ab: 	subq	%rdx, %rax
    000031ae: 	imulq	$0x1f40, %rax, %rax
    000031b5: 	cmpq	%rax, %rsi
    000031b8: 	je	.Ltmp5691 # Offset: 12728
    000031ba: 	movl	current_test(%rip), %edx
    000031c0: 	leaq	DATAat0x571d0(%rip), %rsi
    000031c7: 	movl	$0x1, %edi
    000031cc: 	xorl	%eax, %eax
    000031ce: 	callq	__printf_chk@PLT # Offset: 12750
    000031d3: 	movl	iterations(%rip), %edi
.Ltmp5691:
    000031d9: 	addl	$0x1, (%rsp)
    000031dd: 	movl	(%rsp), %eax
    000031e0: 	cmpl	%edi, %eax
    000031e2: 	jl	.Ltmp5692 # Offset: 12770
.Ltmp5689:
    000031e4: 	movq	%r12, %rsi
    000031e7: 	movq	%r15, %rdi
    000031ea: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12778
    000031ef: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000031f6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000031fd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003204: 	je	.Ltmp5693 # Offset: 12804
.Ltmp5874:
    0000320a: 	movq	-0x20(%rax), %rdi
    0000320e: 	movq	%rdi, (%rsp)
    00003212: 	callq	clock@PLT # Offset: 12818
    00003217: 	movq	(%rsp), %rdi
    0000321b: 	pxor	%xmm0, %xmm0
    0000321f: 	movq	%rax, end_time(%rip)
    00003226: 	subq	start_time(%rip), %rax
    0000322d: 	cvtsi2sd	%rax, %xmm0
    00003232: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000323a: 	callq	_Z13record_resultdPKc # Offset: 12858
    0000323f: 	movq	0x90(%rsp), %rdi
    00003247: 	cmpq	%r13, %rdi
    0000324a: 	je	.Ltmp5694 # Offset: 12874
    0000324c: 	movq	0xa0(%rsp), %rax
    00003254: 	leaq	0x1(%rax), %rsi
    00003258: 	callq	_ZdlPvm@PLT # Offset: 12888
.Ltmp5694:
    0000325d: 	leaq	DATAat0x57643(%rip), %rdx
    00003264: 	movq	%r14, %rsi
    00003267: 	movq	%r12, %rdi
    0000326a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12906
    0000326f: 	callq	clock@PLT # Offset: 12911
    00003274: 	movl	iterations(%rip), %ecx
    0000327a: 	movq	%rax, start_time(%rip)
    00003281: 	testl	%ecx, %ecx
    00003283: 	jle	.Ltmp5695 # Offset: 12931
    00003289: 	movl	$0x0, (%rsp)
.Ltmp5698:
    00003290: 	movq	%rbp, %rax
    00003293: 	pxor	%xmm0, %xmm0
    00003297: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5696:
    000032a0: 	movdqa	DATAat0x57c40(%rip), %xmm1
    000032a8: 	pand	(%rax), %xmm1
    000032ac: 	addq	$0x10, %rax
    000032b0: 	paddq	%xmm1, %xmm0
    000032b4: 	cmpq	%rbx, %rax
    000032b7: 	jne	.Ltmp5696 # Offset: 12983
    000032b9: 	cvttsd2si	init_value(%rip), %rdx
    000032c2: 	movdqa	%xmm0, %xmm1
    000032c6: 	psrldq	$0x8, %xmm1
    000032cb: 	paddq	%xmm1, %xmm0
    000032cf: 	movq	%xmm0, %rax
    000032d4: 	andl	$0x7, %edx
    000032d7: 	imulq	$0x1f40, %rdx, %rdx
    000032de: 	cmpq	%rax, %rdx
    000032e1: 	je	.Ltmp5697 # Offset: 13025
    000032e3: 	movl	current_test(%rip), %edx
    000032e9: 	leaq	DATAat0x571d0(%rip), %rsi
    000032f0: 	movl	$0x1, %edi
    000032f5: 	xorl	%eax, %eax
    000032f7: 	callq	__printf_chk@PLT # Offset: 13047
    000032fc: 	movl	iterations(%rip), %ecx
.Ltmp5697:
    00003302: 	addl	$0x1, (%rsp)
    00003306: 	movl	(%rsp), %eax
    00003309: 	cmpl	%ecx, %eax
    0000330b: 	jl	.Ltmp5698 # Offset: 13067
.Ltmp5695:
    0000330d: 	movq	%r12, %rsi
    00003310: 	movq	%r15, %rdi
    00003313: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13075
    00003318: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000331f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003326: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000332d: 	je	.Ltmp5699 # Offset: 13101
.Ltmp5873:
    00003333: 	movq	-0x20(%rax), %rdi
    00003337: 	movq	%rdi, (%rsp)
    0000333b: 	callq	clock@PLT # Offset: 13115
    00003340: 	movq	(%rsp), %rdi
    00003344: 	pxor	%xmm0, %xmm0
    00003348: 	movq	%rax, end_time(%rip)
    0000334f: 	subq	start_time(%rip), %rax
    00003356: 	cvtsi2sd	%rax, %xmm0
    0000335b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003363: 	callq	_Z13record_resultdPKc # Offset: 13155
    00003368: 	movq	0x90(%rsp), %rdi
    00003370: 	cmpq	%r13, %rdi
    00003373: 	je	.Ltmp5700 # Offset: 13171
    00003375: 	movq	0xa0(%rsp), %rax
    0000337d: 	leaq	0x1(%rax), %rsi
    00003381: 	callq	_ZdlPvm@PLT # Offset: 13185
.Ltmp5700:
    00003386: 	leaq	DATAat0x5764a(%rip), %rdx
    0000338d: 	movq	%r14, %rsi
    00003390: 	movq	%r12, %rdi
    00003393: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13203
    00003398: 	movq	%r12, %rdx
    0000339b: 	movl	$0x1f40, %esi
    000033a0: 	movq	%rbp, %rdi
    000033a3: 	callq	_Z13test_constantIl13and_remainderIlLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 13219
    000033a8: 	movq	0x90(%rsp), %rdi
    000033b0: 	cmpq	%r13, %rdi
    000033b3: 	je	.Ltmp5701 # Offset: 13235
    000033b5: 	movq	0xa0(%rsp), %rax
    000033bd: 	leaq	0x1(%rax), %rsi
    000033c1: 	callq	_ZdlPvm@PLT # Offset: 13249
.Ltmp5701:
    000033c6: 	leaq	DATAat0x5765b(%rip), %rdx
    000033cd: 	movq	%r14, %rsi
    000033d0: 	movq	%r12, %rdi
    000033d3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13267
    000033d8: 	movq	%r12, %rdx
    000033db: 	movl	$0x1f40, %esi
    000033e0: 	movq	%rbp, %rdi
    000033e3: 	callq	_Z13test_constantIl14and_remainder2IlLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 13283
    000033e8: 	movq	0x90(%rsp), %rdi
    000033f0: 	cmpq	%r13, %rdi
    000033f3: 	je	.Ltmp5702 # Offset: 13299
    000033f5: 	movq	0xa0(%rsp), %rax
    000033fd: 	leaq	0x1(%rax), %rsi
    00003401: 	callq	_ZdlPvm@PLT # Offset: 13313
.Ltmp5702:
    00003406: 	leaq	DATAat0x5766d(%rip), %rdx
    0000340d: 	movq	%r14, %rsi
    00003410: 	movq	%r12, %rdi
    00003413: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13331
    00003418: 	callq	clock@PLT # Offset: 13336
    0000341d: 	movl	iterations(%rip), %edi
    00003423: 	movl	$0x0, (%rsp)
    0000342a: 	movq	%rax, start_time(%rip)
    00003431: 	testl	%edi, %edi
    00003433: 	jle	.Ltmp5703 # Offset: 13363
    00003435: 	nopl	(%rax) # Size: 3
.Ltmp5706:
    00003438: 	movq	%rbp, %rcx
    0000343b: 	xorl	%esi, %esi
    0000343d: 	nopl	(%rax) # Size: 3
.Ltmp5704:
    00003440: 	movq	(%rcx), %rax
    00003443: 	addq	$0x8, %rcx
    00003447: 	cqto
    00003449: 	shrq	$0x3d, %rdx
    0000344d: 	addq	%rdx, %rax
    00003450: 	andl	$0x7, %eax
    00003453: 	subq	%rdx, %rax
    00003456: 	addq	%rax, %rsi
    00003459: 	cmpq	%rbx, %rcx
    0000345c: 	jne	.Ltmp5704 # Offset: 13404
    0000345e: 	cvttsd2si	init_value(%rip), %rax
    00003467: 	cqto
    00003469: 	shrq	$0x3d, %rdx
    0000346d: 	addq	%rdx, %rax
    00003470: 	andl	$0x7, %eax
    00003473: 	subq	%rdx, %rax
    00003476: 	imulq	$0x1f40, %rax, %rax
    0000347d: 	cmpq	%rax, %rsi
    00003480: 	je	.Ltmp5705 # Offset: 13440
    00003482: 	movl	current_test(%rip), %edx
    00003488: 	leaq	DATAat0x571d0(%rip), %rsi
    0000348f: 	movl	$0x1, %edi
    00003494: 	xorl	%eax, %eax
    00003496: 	callq	__printf_chk@PLT # Offset: 13462
    0000349b: 	movl	iterations(%rip), %edi
.Ltmp5705:
    000034a1: 	addl	$0x1, (%rsp)
    000034a5: 	movl	(%rsp), %eax
    000034a8: 	cmpl	%edi, %eax
    000034aa: 	jl	.Ltmp5706 # Offset: 13482
.Ltmp5703:
    000034ac: 	movq	%r12, %rsi
    000034af: 	movq	%r15, %rdi
    000034b2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13490
    000034b7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000034be: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000034c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000034cc: 	je	.Ltmp5707 # Offset: 13516
.Ltmp5872:
    000034d2: 	movq	-0x20(%rax), %rdi
    000034d6: 	movq	%rdi, (%rsp)
    000034da: 	callq	clock@PLT # Offset: 13530
    000034df: 	movq	(%rsp), %rdi
    000034e3: 	pxor	%xmm0, %xmm0
    000034e7: 	movq	%rax, end_time(%rip)
    000034ee: 	subq	start_time(%rip), %rax
    000034f5: 	cvtsi2sd	%rax, %xmm0
    000034fa: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003502: 	callq	_Z13record_resultdPKc # Offset: 13570
    00003507: 	movq	0x90(%rsp), %rdi
    0000350f: 	cmpq	%r13, %rdi
    00003512: 	je	.Ltmp5708 # Offset: 13586
    00003514: 	movq	0xa0(%rsp), %rax
    0000351c: 	leaq	0x1(%rax), %rsi
    00003520: 	callq	_ZdlPvm@PLT # Offset: 13600
.Ltmp5708:
    00003525: 	leaq	DATAat0x57684(%rip), %rdx
    0000352c: 	movq	%r14, %rsi
    0000352f: 	movq	%r12, %rdi
    00003532: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13618
    00003537: 	movq	%r12, %rcx
    0000353a: 	movl	$0x8, %edx
    0000353f: 	movl	$0x1f40, %esi
    00003544: 	movq	%rbp, %rdi
    00003547: 	callq	_Z14test_variable1Il25custom_remainder_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 13639
    0000354c: 	movq	0x90(%rsp), %rdi
    00003554: 	cmpq	%r13, %rdi
    00003557: 	je	.Ltmp5709 # Offset: 13655
    00003559: 	movq	0xa0(%rsp), %rax
    00003561: 	leaq	0x1(%rax), %rsi
    00003565: 	callq	_ZdlPvm@PLT # Offset: 13669
.Ltmp5709:
    0000356a: 	leaq	DATAat0x5769d(%rip), %rdx
    00003571: 	movq	%r14, %rsi
    00003574: 	movq	%r12, %rdi
    00003577: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13687
    0000357c: 	callq	clock@PLT # Offset: 13692
    00003581: 	movl	iterations(%rip), %edi
    00003587: 	movl	$0x0, (%rsp)
    0000358e: 	movq	%rax, start_time(%rip)
    00003595: 	testl	%edi, %edi
    00003597: 	jle	.Ltmp5710 # Offset: 13719
    00003599: 	nopl	(%rax) # Size: 7
.Ltmp5713:
    000035a0: 	movq	%rbp, %rcx
    000035a3: 	xorl	%esi, %esi
    000035a5: 	nopl	(%rax) # Size: 3
.Ltmp5711:
    000035a8: 	movq	(%rcx), %rax
    000035ab: 	addq	$0x8, %rcx
    000035af: 	cqto
    000035b1: 	shrq	$0x3d, %rdx
    000035b5: 	addq	%rdx, %rax
    000035b8: 	andl	$0x7, %eax
    000035bb: 	subq	%rdx, %rax
    000035be: 	addq	%rax, %rsi
    000035c1: 	cmpq	%rbx, %rcx
    000035c4: 	jne	.Ltmp5711 # Offset: 13764
    000035c6: 	cvttsd2si	init_value(%rip), %rax
    000035cf: 	cqto
    000035d1: 	shrq	$0x3d, %rdx
    000035d5: 	addq	%rdx, %rax
    000035d8: 	andl	$0x7, %eax
    000035db: 	subq	%rdx, %rax
    000035de: 	imulq	$0x1f40, %rax, %rax
    000035e5: 	cmpq	%rax, %rsi
    000035e8: 	je	.Ltmp5712 # Offset: 13800
    000035ea: 	movl	current_test(%rip), %edx
    000035f0: 	leaq	DATAat0x571d0(%rip), %rsi
    000035f7: 	movl	$0x1, %edi
    000035fc: 	xorl	%eax, %eax
    000035fe: 	callq	__printf_chk@PLT # Offset: 13822
    00003603: 	movl	iterations(%rip), %edi
.Ltmp5712:
    00003609: 	addl	$0x1, (%rsp)
    0000360d: 	movl	(%rsp), %eax
    00003610: 	cmpl	%edi, %eax
    00003612: 	jl	.Ltmp5713 # Offset: 13842
.Ltmp5710:
    00003614: 	movq	%r12, %rsi
    00003617: 	movq	%r15, %rdi
    0000361a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13850
    0000361f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003626: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000362d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003634: 	je	.Ltmp5714 # Offset: 13876
.Ltmp5871:
    0000363a: 	movq	-0x20(%rax), %rdi
    0000363e: 	movq	%rdi, (%rsp)
    00003642: 	callq	clock@PLT # Offset: 13890
    00003647: 	movq	(%rsp), %rdi
    0000364b: 	pxor	%xmm0, %xmm0
    0000364f: 	movq	%rax, end_time(%rip)
    00003656: 	subq	start_time(%rip), %rax
    0000365d: 	cvtsi2sd	%rax, %xmm0
    00003662: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000366a: 	callq	_Z13record_resultdPKc # Offset: 13930
    0000366f: 	movq	0x90(%rsp), %rdi
    00003677: 	cmpq	%r13, %rdi
    0000367a: 	je	.Ltmp5715 # Offset: 13946
    0000367c: 	movq	0xa0(%rsp), %rax
    00003684: 	leaq	0x1(%rax), %rsi
    00003688: 	callq	_ZdlPvm@PLT # Offset: 13960
.Ltmp5715:
    0000368d: 	leaq	DATAat0x576b6(%rip), %rdx
    00003694: 	movq	%r14, %rsi
    00003697: 	movq	%r12, %rdi
    0000369a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13978
    0000369f: 	callq	clock@PLT # Offset: 13983
    000036a4: 	movl	iterations(%rip), %ecx
    000036aa: 	movq	%rax, start_time(%rip)
    000036b1: 	testl	%ecx, %ecx
    000036b3: 	jle	.Ltmp5716 # Offset: 14003
    000036b9: 	movl	$0x0, (%rsp)
.Ltmp5719:
    000036c0: 	movq	%rbp, %rax
    000036c3: 	pxor	%xmm0, %xmm0
    000036c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5717:
    000036d0: 	movdqa	DATAat0x57ca0(%rip), %xmm1
    000036d8: 	pand	(%rax), %xmm1
    000036dc: 	addq	$0x10, %rax
    000036e0: 	paddq	%xmm1, %xmm0
    000036e4: 	cmpq	%rbx, %rax
    000036e7: 	jne	.Ltmp5717 # Offset: 14055
    000036e9: 	cvttsd2si	init_value(%rip), %rdx
    000036f2: 	movdqa	%xmm0, %xmm1
    000036f6: 	psrldq	$0x8, %xmm1
    000036fb: 	paddq	%xmm1, %xmm0
    000036ff: 	movq	%xmm0, %rax
    00003704: 	andl	$0xf, %edx
    00003707: 	imulq	$0x1f40, %rdx, %rdx
    0000370e: 	cmpq	%rax, %rdx
    00003711: 	je	.Ltmp5718 # Offset: 14097
    00003713: 	movl	current_test(%rip), %edx
    00003719: 	leaq	DATAat0x571d0(%rip), %rsi
    00003720: 	movl	$0x1, %edi
    00003725: 	xorl	%eax, %eax
    00003727: 	callq	__printf_chk@PLT # Offset: 14119
    0000372c: 	movl	iterations(%rip), %ecx
.Ltmp5718:
    00003732: 	addl	$0x1, (%rsp)
    00003736: 	movl	(%rsp), %eax
    00003739: 	cmpl	%ecx, %eax
    0000373b: 	jl	.Ltmp5719 # Offset: 14139
.Ltmp5716:
    0000373d: 	movq	%r12, %rsi
    00003740: 	movq	%r15, %rdi
    00003743: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14147
    00003748: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000374f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003756: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000375d: 	je	.Ltmp5720 # Offset: 14173
.Ltmp5870:
    00003763: 	movq	-0x20(%rax), %rdi
    00003767: 	movq	%rdi, (%rsp)
    0000376b: 	callq	clock@PLT # Offset: 14187
    00003770: 	movq	(%rsp), %rdi
    00003774: 	pxor	%xmm0, %xmm0
    00003778: 	movq	%rax, end_time(%rip)
    0000377f: 	subq	start_time(%rip), %rax
    00003786: 	cvtsi2sd	%rax, %xmm0
    0000378b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003793: 	callq	_Z13record_resultdPKc # Offset: 14227
    00003798: 	movq	0x90(%rsp), %rdi
    000037a0: 	cmpq	%r13, %rdi
    000037a3: 	je	.Ltmp5721 # Offset: 14243
    000037a5: 	movq	0xa0(%rsp), %rax
    000037ad: 	leaq	0x1(%rax), %rsi
    000037b1: 	callq	_ZdlPvm@PLT # Offset: 14257
.Ltmp5721:
    000037b6: 	leaq	DATAat0x576be(%rip), %rdx
    000037bd: 	movq	%r14, %rsi
    000037c0: 	movq	%r12, %rdi
    000037c3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14275
    000037c8: 	movq	%r12, %rdx
    000037cb: 	movl	$0x1f40, %esi
    000037d0: 	movq	%rbp, %rdi
    000037d3: 	callq	_Z13test_constantIl13and_remainderIlLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 14291
    000037d8: 	movq	0x90(%rsp), %rdi
    000037e0: 	cmpq	%r13, %rdi
    000037e3: 	je	.Ltmp5722 # Offset: 14307
    000037e5: 	movq	0xa0(%rsp), %rax
    000037ed: 	leaq	0x1(%rax), %rsi
    000037f1: 	callq	_ZdlPvm@PLT # Offset: 14321
.Ltmp5722:
    000037f6: 	leaq	DATAat0x576d0(%rip), %rdx
    000037fd: 	movq	%r14, %rsi
    00003800: 	movq	%r12, %rdi
    00003803: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14339
    00003808: 	movq	%r12, %rdx
    0000380b: 	movl	$0x1f40, %esi
    00003810: 	movq	%rbp, %rdi
    00003813: 	callq	_Z13test_constantIl14and_remainder2IlLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 14355
    00003818: 	movq	0x90(%rsp), %rdi
    00003820: 	cmpq	%r13, %rdi
    00003823: 	je	.Ltmp5723 # Offset: 14371
    00003825: 	movq	0xa0(%rsp), %rax
    0000382d: 	leaq	0x1(%rax), %rsi
    00003831: 	callq	_ZdlPvm@PLT # Offset: 14385
.Ltmp5723:
    00003836: 	leaq	DATAat0x576e3(%rip), %rdx
    0000383d: 	movq	%r14, %rsi
    00003840: 	movq	%r12, %rdi
    00003843: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14403
    00003848: 	callq	clock@PLT # Offset: 14408
    0000384d: 	movl	iterations(%rip), %edi
    00003853: 	movl	$0x0, (%rsp)
    0000385a: 	movq	%rax, start_time(%rip)
    00003861: 	testl	%edi, %edi
    00003863: 	jle	.Ltmp5724 # Offset: 14435
    00003865: 	nopl	(%rax) # Size: 3
.Ltmp5727:
    00003868: 	movq	%rbp, %rcx
    0000386b: 	xorl	%esi, %esi
    0000386d: 	nopl	(%rax) # Size: 3
.Ltmp5725:
    00003870: 	movq	(%rcx), %rax
    00003873: 	addq	$0x8, %rcx
    00003877: 	cqto
    00003879: 	shrq	$0x3c, %rdx
    0000387d: 	addq	%rdx, %rax
    00003880: 	andl	$0xf, %eax
    00003883: 	subq	%rdx, %rax
    00003886: 	addq	%rax, %rsi
    00003889: 	cmpq	%rbx, %rcx
    0000388c: 	jne	.Ltmp5725 # Offset: 14476
    0000388e: 	cvttsd2si	init_value(%rip), %rax
    00003897: 	cqto
    00003899: 	shrq	$0x3c, %rdx
    0000389d: 	addq	%rdx, %rax
    000038a0: 	andl	$0xf, %eax
    000038a3: 	subq	%rdx, %rax
    000038a6: 	imulq	$0x1f40, %rax, %rax
    000038ad: 	cmpq	%rax, %rsi
    000038b0: 	je	.Ltmp5726 # Offset: 14512
    000038b2: 	movl	current_test(%rip), %edx
    000038b8: 	leaq	DATAat0x571d0(%rip), %rsi
    000038bf: 	movl	$0x1, %edi
    000038c4: 	xorl	%eax, %eax
    000038c6: 	callq	__printf_chk@PLT # Offset: 14534
    000038cb: 	movl	iterations(%rip), %edi
.Ltmp5726:
    000038d1: 	addl	$0x1, (%rsp)
    000038d5: 	movl	(%rsp), %eax
    000038d8: 	cmpl	%edi, %eax
    000038da: 	jl	.Ltmp5727 # Offset: 14554
.Ltmp5724:
    000038dc: 	movq	%r12, %rsi
    000038df: 	movq	%r15, %rdi
    000038e2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14562
    000038e7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000038ee: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000038f5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000038fc: 	je	.Ltmp5728 # Offset: 14588
.Ltmp5869:
    00003902: 	movq	-0x20(%rax), %rdi
    00003906: 	movq	%rdi, (%rsp)
    0000390a: 	callq	clock@PLT # Offset: 14602
    0000390f: 	movq	(%rsp), %rdi
    00003913: 	pxor	%xmm0, %xmm0
    00003917: 	movq	%rax, end_time(%rip)
    0000391e: 	subq	start_time(%rip), %rax
    00003925: 	cvtsi2sd	%rax, %xmm0
    0000392a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003932: 	callq	_Z13record_resultdPKc # Offset: 14642
    00003937: 	movq	0x90(%rsp), %rdi
    0000393f: 	cmpq	%r13, %rdi
    00003942: 	je	.Ltmp5729 # Offset: 14658
    00003944: 	movq	0xa0(%rsp), %rax
    0000394c: 	leaq	0x1(%rax), %rsi
    00003950: 	callq	_ZdlPvm@PLT # Offset: 14672
.Ltmp5729:
    00003955: 	leaq	DATAat0x576fb(%rip), %rdx
    0000395c: 	movq	%r14, %rsi
    0000395f: 	movq	%r12, %rdi
    00003962: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14690
    00003967: 	movq	%r12, %rcx
    0000396a: 	movl	$0x10, %edx
    0000396f: 	movl	$0x1f40, %esi
    00003974: 	movq	%rbp, %rdi
    00003977: 	callq	_Z14test_variable1Il25custom_remainder_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 14711
    0000397c: 	movq	0x90(%rsp), %rdi
    00003984: 	cmpq	%r13, %rdi
    00003987: 	je	.Ltmp5730 # Offset: 14727
    00003989: 	movq	0xa0(%rsp), %rax
    00003991: 	leaq	0x1(%rax), %rsi
    00003995: 	callq	_ZdlPvm@PLT # Offset: 14741
.Ltmp5730:
    0000399a: 	leaq	DATAat0x57715(%rip), %rdx
    000039a1: 	movq	%r14, %rsi
    000039a4: 	movq	%r12, %rdi
    000039a7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14759
    000039ac: 	callq	clock@PLT # Offset: 14764
    000039b1: 	movl	iterations(%rip), %edi
    000039b7: 	movl	$0x0, (%rsp)
    000039be: 	movq	%rax, start_time(%rip)
    000039c5: 	testl	%edi, %edi
    000039c7: 	jle	.Ltmp5731 # Offset: 14791
    000039c9: 	nopl	(%rax) # Size: 7
.Ltmp5734:
    000039d0: 	movq	%rbp, %rcx
    000039d3: 	xorl	%esi, %esi
    000039d5: 	nopl	(%rax) # Size: 3
.Ltmp5732:
    000039d8: 	movq	(%rcx), %rax
    000039db: 	addq	$0x8, %rcx
    000039df: 	cqto
    000039e1: 	shrq	$0x3c, %rdx
    000039e5: 	addq	%rdx, %rax
    000039e8: 	andl	$0xf, %eax
    000039eb: 	subq	%rdx, %rax
    000039ee: 	addq	%rax, %rsi
    000039f1: 	cmpq	%rbx, %rcx
    000039f4: 	jne	.Ltmp5732 # Offset: 14836
    000039f6: 	cvttsd2si	init_value(%rip), %rax
    000039ff: 	cqto
    00003a01: 	shrq	$0x3c, %rdx
    00003a05: 	addq	%rdx, %rax
    00003a08: 	andl	$0xf, %eax
    00003a0b: 	subq	%rdx, %rax
    00003a0e: 	imulq	$0x1f40, %rax, %rax
    00003a15: 	cmpq	%rax, %rsi
    00003a18: 	je	.Ltmp5733 # Offset: 14872
    00003a1a: 	movl	current_test(%rip), %edx
    00003a20: 	leaq	DATAat0x571d0(%rip), %rsi
    00003a27: 	movl	$0x1, %edi
    00003a2c: 	xorl	%eax, %eax
    00003a2e: 	callq	__printf_chk@PLT # Offset: 14894
    00003a33: 	movl	iterations(%rip), %edi
.Ltmp5733:
    00003a39: 	addl	$0x1, (%rsp)
    00003a3d: 	movl	(%rsp), %eax
    00003a40: 	cmpl	%edi, %eax
    00003a42: 	jl	.Ltmp5734 # Offset: 14914
.Ltmp5731:
    00003a44: 	movq	%r12, %rsi
    00003a47: 	movq	%r15, %rdi
    00003a4a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14922
    00003a4f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003a56: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003a5d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003a64: 	je	.Ltmp5735 # Offset: 14948
.Ltmp5868:
    00003a6a: 	movq	-0x20(%rax), %rdi
    00003a6e: 	movq	%rdi, (%rsp)
    00003a72: 	callq	clock@PLT # Offset: 14962
    00003a77: 	movq	(%rsp), %rdi
    00003a7b: 	pxor	%xmm0, %xmm0
    00003a7f: 	movq	%rax, end_time(%rip)
    00003a86: 	subq	start_time(%rip), %rax
    00003a8d: 	cvtsi2sd	%rax, %xmm0
    00003a92: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003a9a: 	callq	_Z13record_resultdPKc # Offset: 15002
    00003a9f: 	movq	0x90(%rsp), %rdi
    00003aa7: 	cmpq	%r13, %rdi
    00003aaa: 	je	.Ltmp5736 # Offset: 15018
    00003aac: 	movq	0xa0(%rsp), %rax
    00003ab4: 	leaq	0x1(%rax), %rsi
    00003ab8: 	callq	_ZdlPvm@PLT # Offset: 15032
.Ltmp5736:
    00003abd: 	leaq	DATAat0x5772f(%rip), %rdx
    00003ac4: 	movq	%r14, %rsi
    00003ac7: 	movq	%r12, %rdi
    00003aca: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15050
    00003acf: 	callq	clock@PLT # Offset: 15055
    00003ad4: 	movl	iterations(%rip), %ecx
    00003ada: 	movq	%rax, start_time(%rip)
    00003ae1: 	testl	%ecx, %ecx
    00003ae3: 	jle	.Ltmp5737 # Offset: 15075
    00003ae9: 	movl	$0x0, (%rsp)
.Ltmp5740:
    00003af0: 	movq	%rbp, %rax
    00003af3: 	pxor	%xmm0, %xmm0
    00003af7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5738:
    00003b00: 	movdqa	DATAat0x57c60(%rip), %xmm1
    00003b08: 	pand	(%rax), %xmm1
    00003b0c: 	addq	$0x10, %rax
    00003b10: 	paddq	%xmm1, %xmm0
    00003b14: 	cmpq	%rbx, %rax
    00003b17: 	jne	.Ltmp5738 # Offset: 15127
    00003b19: 	cvttsd2si	init_value(%rip), %rdx
    00003b22: 	movdqa	%xmm0, %xmm1
    00003b26: 	psrldq	$0x8, %xmm1
    00003b2b: 	paddq	%xmm1, %xmm0
    00003b2f: 	movq	%xmm0, %rax
    00003b34: 	andl	$0x1f, %edx
    00003b37: 	imulq	$0x1f40, %rdx, %rdx
    00003b3e: 	cmpq	%rax, %rdx
    00003b41: 	je	.Ltmp5739 # Offset: 15169
    00003b43: 	movl	current_test(%rip), %edx
    00003b49: 	leaq	DATAat0x571d0(%rip), %rsi
    00003b50: 	movl	$0x1, %edi
    00003b55: 	xorl	%eax, %eax
    00003b57: 	callq	__printf_chk@PLT # Offset: 15191
    00003b5c: 	movl	iterations(%rip), %ecx
.Ltmp5739:
    00003b62: 	addl	$0x1, (%rsp)
    00003b66: 	movl	(%rsp), %eax
    00003b69: 	cmpl	%ecx, %eax
    00003b6b: 	jl	.Ltmp5740 # Offset: 15211
.Ltmp5737:
    00003b6d: 	movq	%r12, %rsi
    00003b70: 	movq	%r15, %rdi
    00003b73: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15219
    00003b78: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003b7f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003b86: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003b8d: 	je	.Ltmp5741 # Offset: 15245
.Ltmp5867:
    00003b93: 	movq	-0x20(%rax), %rdi
    00003b97: 	movq	%rdi, (%rsp)
    00003b9b: 	callq	clock@PLT # Offset: 15259
    00003ba0: 	movq	(%rsp), %rdi
    00003ba4: 	pxor	%xmm0, %xmm0
    00003ba8: 	movq	%rax, end_time(%rip)
    00003baf: 	subq	start_time(%rip), %rax
    00003bb6: 	cvtsi2sd	%rax, %xmm0
    00003bbb: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003bc3: 	callq	_Z13record_resultdPKc # Offset: 15299
    00003bc8: 	movq	0x90(%rsp), %rdi
    00003bd0: 	cmpq	%r13, %rdi
    00003bd3: 	je	.Ltmp5742 # Offset: 15315
    00003bd5: 	movq	0xa0(%rsp), %rax
    00003bdd: 	leaq	0x1(%rax), %rsi
    00003be1: 	callq	_ZdlPvm@PLT # Offset: 15329
.Ltmp5742:
    00003be6: 	leaq	DATAat0x57737(%rip), %rdx
    00003bed: 	movq	%r14, %rsi
    00003bf0: 	movq	%r12, %rdi
    00003bf3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15347
    00003bf8: 	movq	%r12, %rdx
    00003bfb: 	movl	$0x1f40, %esi
    00003c00: 	movq	%rbp, %rdi
    00003c03: 	callq	_Z13test_constantIl13and_remainderIlLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 15363
    00003c08: 	movq	0x90(%rsp), %rdi
    00003c10: 	cmpq	%r13, %rdi
    00003c13: 	je	.Ltmp5743 # Offset: 15379
    00003c15: 	movq	0xa0(%rsp), %rax
    00003c1d: 	leaq	0x1(%rax), %rsi
    00003c21: 	callq	_ZdlPvm@PLT # Offset: 15393
.Ltmp5743:
    00003c26: 	leaq	DATAat0x57749(%rip), %rdx
    00003c2d: 	movq	%r14, %rsi
    00003c30: 	movq	%r12, %rdi
    00003c33: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15411
    00003c38: 	movq	%r12, %rdx
    00003c3b: 	movl	$0x1f40, %esi
    00003c40: 	movq	%rbp, %rdi
    00003c43: 	callq	_Z13test_constantIl14and_remainder2IlLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 15427
    00003c48: 	movq	0x90(%rsp), %rdi
    00003c50: 	cmpq	%r13, %rdi
    00003c53: 	je	.Ltmp5744 # Offset: 15443
    00003c55: 	movq	0xa0(%rsp), %rax
    00003c5d: 	leaq	0x1(%rax), %rsi
    00003c61: 	callq	_ZdlPvm@PLT # Offset: 15457
.Ltmp5744:
    00003c66: 	leaq	DATAat0x5775c(%rip), %rdx
    00003c6d: 	movq	%r14, %rsi
    00003c70: 	movq	%r12, %rdi
    00003c73: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15475
    00003c78: 	callq	clock@PLT # Offset: 15480
    00003c7d: 	movl	iterations(%rip), %edi
    00003c83: 	movl	$0x0, (%rsp)
    00003c8a: 	movq	%rax, start_time(%rip)
    00003c91: 	testl	%edi, %edi
    00003c93: 	jle	.Ltmp5745 # Offset: 15507
    00003c95: 	nopl	(%rax) # Size: 3
.Ltmp5748:
    00003c98: 	movq	%rbp, %rcx
    00003c9b: 	xorl	%esi, %esi
    00003c9d: 	nopl	(%rax) # Size: 3
.Ltmp5746:
    00003ca0: 	movq	(%rcx), %rax
    00003ca3: 	addq	$0x8, %rcx
    00003ca7: 	cqto
    00003ca9: 	shrq	$0x3b, %rdx
    00003cad: 	addq	%rdx, %rax
    00003cb0: 	andl	$0x1f, %eax
    00003cb3: 	subq	%rdx, %rax
    00003cb6: 	addq	%rax, %rsi
    00003cb9: 	cmpq	%rbx, %rcx
    00003cbc: 	jne	.Ltmp5746 # Offset: 15548
    00003cbe: 	cvttsd2si	init_value(%rip), %rax
    00003cc7: 	cqto
    00003cc9: 	shrq	$0x3b, %rdx
    00003ccd: 	addq	%rdx, %rax
    00003cd0: 	andl	$0x1f, %eax
    00003cd3: 	subq	%rdx, %rax
    00003cd6: 	imulq	$0x1f40, %rax, %rax
    00003cdd: 	cmpq	%rax, %rsi
    00003ce0: 	je	.Ltmp5747 # Offset: 15584
    00003ce2: 	movl	current_test(%rip), %edx
    00003ce8: 	leaq	DATAat0x571d0(%rip), %rsi
    00003cef: 	movl	$0x1, %edi
    00003cf4: 	xorl	%eax, %eax
    00003cf6: 	callq	__printf_chk@PLT # Offset: 15606
    00003cfb: 	movl	iterations(%rip), %edi
.Ltmp5747:
    00003d01: 	addl	$0x1, (%rsp)
    00003d05: 	movl	(%rsp), %eax
    00003d08: 	cmpl	%edi, %eax
    00003d0a: 	jl	.Ltmp5748 # Offset: 15626
.Ltmp5745:
    00003d0c: 	movq	%r12, %rsi
    00003d0f: 	movq	%r15, %rdi
    00003d12: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15634
    00003d17: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003d1e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003d25: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003d2c: 	je	.Ltmp5749 # Offset: 15660
.Ltmp5866:
    00003d32: 	movq	-0x20(%rax), %rdi
    00003d36: 	movq	%rdi, (%rsp)
    00003d3a: 	callq	clock@PLT # Offset: 15674
    00003d3f: 	movq	(%rsp), %rdi
    00003d43: 	pxor	%xmm0, %xmm0
    00003d47: 	movq	%rax, end_time(%rip)
    00003d4e: 	subq	start_time(%rip), %rax
    00003d55: 	cvtsi2sd	%rax, %xmm0
    00003d5a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003d62: 	callq	_Z13record_resultdPKc # Offset: 15714
    00003d67: 	movq	0x90(%rsp), %rdi
    00003d6f: 	cmpq	%r13, %rdi
    00003d72: 	je	.Ltmp5750 # Offset: 15730
    00003d74: 	movq	0xa0(%rsp), %rax
    00003d7c: 	leaq	0x1(%rax), %rsi
    00003d80: 	callq	_ZdlPvm@PLT # Offset: 15744
.Ltmp5750:
    00003d85: 	leaq	DATAat0x57774(%rip), %rdx
    00003d8c: 	movq	%r14, %rsi
    00003d8f: 	movq	%r12, %rdi
    00003d92: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15762
    00003d97: 	movq	%r12, %rcx
    00003d9a: 	movl	$0x20, %edx
    00003d9f: 	movl	$0x1f40, %esi
    00003da4: 	movq	%rbp, %rdi
    00003da7: 	callq	_Z14test_variable1Il25custom_remainder_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 15783
    00003dac: 	movq	0x90(%rsp), %rdi
    00003db4: 	cmpq	%r13, %rdi
    00003db7: 	je	.Ltmp5751 # Offset: 15799
    00003db9: 	movq	0xa0(%rsp), %rax
    00003dc1: 	leaq	0x1(%rax), %rsi
    00003dc5: 	callq	_ZdlPvm@PLT # Offset: 15813
.Ltmp5751:
    00003dca: 	leaq	DATAat0x5778e(%rip), %rdx
    00003dd1: 	movq	%r14, %rsi
    00003dd4: 	movq	%r12, %rdi
    00003dd7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15831
    00003ddc: 	callq	clock@PLT # Offset: 15836
    00003de1: 	movl	iterations(%rip), %edi
    00003de7: 	movl	$0x0, (%rsp)
    00003dee: 	movq	%rax, start_time(%rip)
    00003df5: 	testl	%edi, %edi
    00003df7: 	jle	.Ltmp5752 # Offset: 15863
    00003df9: 	nopl	(%rax) # Size: 7
.Ltmp5755:
    00003e00: 	movq	%rbp, %rcx
    00003e03: 	xorl	%esi, %esi
    00003e05: 	nopl	(%rax) # Size: 3
.Ltmp5753:
    00003e08: 	movq	(%rcx), %rax
    00003e0b: 	addq	$0x8, %rcx
    00003e0f: 	cqto
    00003e11: 	shrq	$0x3b, %rdx
    00003e15: 	addq	%rdx, %rax
    00003e18: 	andl	$0x1f, %eax
    00003e1b: 	subq	%rdx, %rax
    00003e1e: 	addq	%rax, %rsi
    00003e21: 	cmpq	%rbx, %rcx
    00003e24: 	jne	.Ltmp5753 # Offset: 15908
    00003e26: 	cvttsd2si	init_value(%rip), %rax
    00003e2f: 	cqto
    00003e31: 	shrq	$0x3b, %rdx
    00003e35: 	addq	%rdx, %rax
    00003e38: 	andl	$0x1f, %eax
    00003e3b: 	subq	%rdx, %rax
    00003e3e: 	imulq	$0x1f40, %rax, %rax
    00003e45: 	cmpq	%rax, %rsi
    00003e48: 	je	.Ltmp5754 # Offset: 15944
    00003e4a: 	movl	current_test(%rip), %edx
    00003e50: 	leaq	DATAat0x571d0(%rip), %rsi
    00003e57: 	movl	$0x1, %edi
    00003e5c: 	xorl	%eax, %eax
    00003e5e: 	callq	__printf_chk@PLT # Offset: 15966
    00003e63: 	movl	iterations(%rip), %edi
.Ltmp5754:
    00003e69: 	addl	$0x1, (%rsp)
    00003e6d: 	movl	(%rsp), %eax
    00003e70: 	cmpl	%edi, %eax
    00003e72: 	jl	.Ltmp5755 # Offset: 15986
.Ltmp5752:
    00003e74: 	movq	%r12, %rsi
    00003e77: 	movq	%r15, %rdi
    00003e7a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15994
    00003e7f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003e86: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003e8d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003e94: 	je	.Ltmp5756 # Offset: 16020
.Ltmp5865:
    00003e9a: 	movq	-0x20(%rax), %rdi
    00003e9e: 	movq	%rdi, (%rsp)
    00003ea2: 	callq	clock@PLT # Offset: 16034
    00003ea7: 	movq	(%rsp), %rdi
    00003eab: 	pxor	%xmm0, %xmm0
    00003eaf: 	movq	%rax, end_time(%rip)
    00003eb6: 	subq	start_time(%rip), %rax
    00003ebd: 	cvtsi2sd	%rax, %xmm0
    00003ec2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003eca: 	callq	_Z13record_resultdPKc # Offset: 16074
    00003ecf: 	movq	0x90(%rsp), %rdi
    00003ed7: 	cmpq	%r13, %rdi
    00003eda: 	je	.Ltmp5757 # Offset: 16090
    00003edc: 	movq	0xa0(%rsp), %rax
    00003ee4: 	leaq	0x1(%rax), %rsi
    00003ee8: 	callq	_ZdlPvm@PLT # Offset: 16104
.Ltmp5757:
    00003eed: 	leaq	DATAat0x577a8(%rip), %rdx
    00003ef4: 	movq	%r14, %rsi
    00003ef7: 	movq	%r12, %rdi
    00003efa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16122
    00003eff: 	callq	clock@PLT # Offset: 16127
    00003f04: 	movl	iterations(%rip), %ecx
    00003f0a: 	movq	%rax, start_time(%rip)
    00003f11: 	testl	%ecx, %ecx
    00003f13: 	jle	.Ltmp5758 # Offset: 16147
    00003f19: 	movl	$0x0, (%rsp)
.Ltmp5761:
    00003f20: 	movq	%rbp, %rax
    00003f23: 	pxor	%xmm0, %xmm0
    00003f27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5759:
    00003f30: 	movdqa	DATAat0x57f60(%rip), %xmm1
    00003f38: 	pand	(%rax), %xmm1
    00003f3c: 	addq	$0x10, %rax
    00003f40: 	paddq	%xmm1, %xmm0
    00003f44: 	cmpq	%rax, %rbx
    00003f47: 	jne	.Ltmp5759 # Offset: 16199
    00003f49: 	cvttsd2si	init_value(%rip), %rdx
    00003f52: 	movdqa	%xmm0, %xmm1
    00003f56: 	psrldq	$0x8, %xmm1
    00003f5b: 	paddq	%xmm1, %xmm0
    00003f5f: 	movq	%xmm0, %rax
    00003f64: 	andl	$0x3f, %edx
    00003f67: 	imulq	$0x1f40, %rdx, %rdx
    00003f6e: 	cmpq	%rax, %rdx
    00003f71: 	je	.Ltmp5760 # Offset: 16241
    00003f73: 	movl	current_test(%rip), %edx
    00003f79: 	leaq	DATAat0x571d0(%rip), %rsi
    00003f80: 	movl	$0x1, %edi
    00003f85: 	xorl	%eax, %eax
    00003f87: 	callq	__printf_chk@PLT # Offset: 16263
    00003f8c: 	movl	iterations(%rip), %ecx
.Ltmp5760:
    00003f92: 	addl	$0x1, (%rsp)
    00003f96: 	movl	(%rsp), %eax
    00003f99: 	cmpl	%ecx, %eax
    00003f9b: 	jl	.Ltmp5761 # Offset: 16283
.Ltmp5758:
    00003f9d: 	movq	%r12, %rsi
    00003fa0: 	movq	%r15, %rdi
    00003fa3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16291
    00003fa8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003faf: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003fb6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003fbd: 	je	.Ltmp5762 # Offset: 16317
.Ltmp5864:
    00003fc3: 	movq	-0x20(%rax), %rdi
    00003fc7: 	movq	%rdi, (%rsp)
    00003fcb: 	callq	clock@PLT # Offset: 16331
    00003fd0: 	movq	(%rsp), %rdi
    00003fd4: 	pxor	%xmm0, %xmm0
    00003fd8: 	movq	%rax, end_time(%rip)
    00003fdf: 	subq	start_time(%rip), %rax
    00003fe6: 	cvtsi2sd	%rax, %xmm0
    00003feb: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003ff3: 	callq	_Z13record_resultdPKc # Offset: 16371
    00003ff8: 	movq	0x90(%rsp), %rdi
    00004000: 	cmpq	%r13, %rdi
    00004003: 	je	.Ltmp5763 # Offset: 16387
    00004005: 	movq	0xa0(%rsp), %rax
    0000400d: 	leaq	0x1(%rax), %rsi
    00004011: 	callq	_ZdlPvm@PLT # Offset: 16401
.Ltmp5763:
    00004016: 	leaq	DATAat0x577b0(%rip), %rdx
    0000401d: 	movq	%r14, %rsi
    00004020: 	movq	%r12, %rdi
    00004023: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16419
    00004028: 	movq	%r12, %rdx
    0000402b: 	movl	$0x1f40, %esi
    00004030: 	movq	%rbp, %rdi
    00004033: 	callq	_Z13test_constantIl13and_remainderIlLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 16435
    00004038: 	movq	0x90(%rsp), %rdi
    00004040: 	cmpq	%r13, %rdi
    00004043: 	je	.Ltmp5764 # Offset: 16451
    00004045: 	movq	0xa0(%rsp), %rax
    0000404d: 	leaq	0x1(%rax), %rsi
    00004051: 	callq	_ZdlPvm@PLT # Offset: 16465
.Ltmp5764:
    00004056: 	leaq	DATAat0x577c2(%rip), %rdx
    0000405d: 	movq	%r14, %rsi
    00004060: 	movq	%r12, %rdi
    00004063: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16483
    00004068: 	movq	%r12, %rdx
    0000406b: 	movl	$0x1f40, %esi
    00004070: 	movq	%rbp, %rdi
    00004073: 	callq	_Z13test_constantIl14and_remainder2IlLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 16499
    00004078: 	movq	0x90(%rsp), %rdi
    00004080: 	cmpq	%r13, %rdi
    00004083: 	je	.Ltmp5765 # Offset: 16515
    00004085: 	movq	0xa0(%rsp), %rax
    0000408d: 	leaq	0x1(%rax), %rsi
    00004091: 	callq	_ZdlPvm@PLT # Offset: 16529
.Ltmp5765:
    00004096: 	leaq	DATAat0x577d5(%rip), %rdx
    0000409d: 	movq	%r14, %rsi
    000040a0: 	movq	%r12, %rdi
    000040a3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16547
    000040a8: 	callq	clock@PLT # Offset: 16552
    000040ad: 	movl	iterations(%rip), %edi
    000040b3: 	movl	$0x0, (%rsp)
    000040ba: 	movq	%rax, start_time(%rip)
    000040c1: 	testl	%edi, %edi
    000040c3: 	jle	.Ltmp5766 # Offset: 16579
    000040c5: 	nopl	(%rax) # Size: 3
.Ltmp5769:
    000040c8: 	movq	%rbp, %rcx
    000040cb: 	xorl	%esi, %esi
    000040cd: 	nopl	(%rax) # Size: 3
.Ltmp5767:
    000040d0: 	movq	(%rcx), %rax
    000040d3: 	addq	$0x8, %rcx
    000040d7: 	cqto
    000040d9: 	shrq	$0x3a, %rdx
    000040dd: 	addq	%rdx, %rax
    000040e0: 	andl	$0x3f, %eax
    000040e3: 	subq	%rdx, %rax
    000040e6: 	addq	%rax, %rsi
    000040e9: 	cmpq	%rbx, %rcx
    000040ec: 	jne	.Ltmp5767 # Offset: 16620
    000040ee: 	cvttsd2si	init_value(%rip), %rax
    000040f7: 	cqto
    000040f9: 	shrq	$0x3a, %rdx
    000040fd: 	addq	%rdx, %rax
    00004100: 	andl	$0x3f, %eax
    00004103: 	subq	%rdx, %rax
    00004106: 	imulq	$0x1f40, %rax, %rax
    0000410d: 	cmpq	%rax, %rsi
    00004110: 	je	.Ltmp5768 # Offset: 16656
    00004112: 	movl	current_test(%rip), %edx
    00004118: 	leaq	DATAat0x571d0(%rip), %rsi
    0000411f: 	movl	$0x1, %edi
    00004124: 	xorl	%eax, %eax
    00004126: 	callq	__printf_chk@PLT # Offset: 16678
    0000412b: 	movl	iterations(%rip), %edi
.Ltmp5768:
    00004131: 	addl	$0x1, (%rsp)
    00004135: 	movl	(%rsp), %eax
    00004138: 	cmpl	%edi, %eax
    0000413a: 	jl	.Ltmp5769 # Offset: 16698
.Ltmp5766:
    0000413c: 	movq	%r12, %rsi
    0000413f: 	movq	%r15, %rdi
    00004142: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16706
    00004147: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000414e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004155: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000415c: 	je	.Ltmp5770 # Offset: 16732
.Ltmp5863:
    00004162: 	movq	-0x20(%rax), %rdi
    00004166: 	movq	%rdi, (%rsp)
    0000416a: 	callq	clock@PLT # Offset: 16746
    0000416f: 	movq	(%rsp), %rdi
    00004173: 	pxor	%xmm0, %xmm0
    00004177: 	movq	%rax, end_time(%rip)
    0000417e: 	subq	start_time(%rip), %rax
    00004185: 	cvtsi2sd	%rax, %xmm0
    0000418a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004192: 	callq	_Z13record_resultdPKc # Offset: 16786
    00004197: 	movq	0x90(%rsp), %rdi
    0000419f: 	cmpq	%r13, %rdi
    000041a2: 	je	.Ltmp5771 # Offset: 16802
    000041a4: 	movq	0xa0(%rsp), %rax
    000041ac: 	leaq	0x1(%rax), %rsi
    000041b0: 	callq	_ZdlPvm@PLT # Offset: 16816
.Ltmp5771:
    000041b5: 	leaq	DATAat0x577ed(%rip), %rdx
    000041bc: 	movq	%r14, %rsi
    000041bf: 	movq	%r12, %rdi
    000041c2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16834
    000041c7: 	movq	%r12, %rcx
    000041ca: 	movl	$0x40, %edx
    000041cf: 	movl	$0x1f40, %esi
    000041d4: 	movq	%rbp, %rdi
    000041d7: 	callq	_Z14test_variable1Il25custom_remainder_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 16855
    000041dc: 	movq	0x90(%rsp), %rdi
    000041e4: 	cmpq	%r13, %rdi
    000041e7: 	je	.Ltmp5772 # Offset: 16871
    000041e9: 	movq	0xa0(%rsp), %rax
    000041f1: 	leaq	0x1(%rax), %rsi
    000041f5: 	callq	_ZdlPvm@PLT # Offset: 16885
.Ltmp5772:
    000041fa: 	leaq	DATAat0x57807(%rip), %rdx
    00004201: 	movq	%r14, %rsi
    00004204: 	movq	%r12, %rdi
    00004207: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16903
    0000420c: 	callq	clock@PLT # Offset: 16908
    00004211: 	movl	iterations(%rip), %edi
    00004217: 	movl	$0x0, (%rsp)
    0000421e: 	movq	%rax, start_time(%rip)
    00004225: 	testl	%edi, %edi
    00004227: 	jle	.Ltmp5773 # Offset: 16935
    00004229: 	nopl	(%rax) # Size: 7
.Ltmp5776:
    00004230: 	movq	%rbp, %rcx
    00004233: 	xorl	%esi, %esi
    00004235: 	nopl	(%rax) # Size: 3
.Ltmp5774:
    00004238: 	movq	(%rcx), %rax
    0000423b: 	addq	$0x8, %rcx
    0000423f: 	cqto
    00004241: 	shrq	$0x3a, %rdx
    00004245: 	addq	%rdx, %rax
    00004248: 	andl	$0x3f, %eax
    0000424b: 	subq	%rdx, %rax
    0000424e: 	addq	%rax, %rsi
    00004251: 	cmpq	%rbx, %rcx
    00004254: 	jne	.Ltmp5774 # Offset: 16980
    00004256: 	cvttsd2si	init_value(%rip), %rax
    0000425f: 	cqto
    00004261: 	shrq	$0x3a, %rdx
    00004265: 	addq	%rdx, %rax
    00004268: 	andl	$0x3f, %eax
    0000426b: 	subq	%rdx, %rax
    0000426e: 	imulq	$0x1f40, %rax, %rax
    00004275: 	cmpq	%rax, %rsi
    00004278: 	je	.Ltmp5775 # Offset: 17016
    0000427a: 	movl	current_test(%rip), %edx
    00004280: 	leaq	DATAat0x571d0(%rip), %rsi
    00004287: 	movl	$0x1, %edi
    0000428c: 	xorl	%eax, %eax
    0000428e: 	callq	__printf_chk@PLT # Offset: 17038
    00004293: 	movl	iterations(%rip), %edi
.Ltmp5775:
    00004299: 	addl	$0x1, (%rsp)
    0000429d: 	movl	(%rsp), %eax
    000042a0: 	cmpl	%edi, %eax
    000042a2: 	jl	.Ltmp5776 # Offset: 17058
.Ltmp5773:
    000042a4: 	movq	%r12, %rsi
    000042a7: 	movq	%r15, %rdi
    000042aa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17066
    000042af: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000042b6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000042bd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000042c4: 	je	.Ltmp5777 # Offset: 17092
.Ltmp5862:
    000042ca: 	movq	-0x20(%rax), %rdi
    000042ce: 	movq	%rdi, (%rsp)
    000042d2: 	callq	clock@PLT # Offset: 17106
    000042d7: 	movq	(%rsp), %rdi
    000042db: 	pxor	%xmm0, %xmm0
    000042df: 	movq	%rax, end_time(%rip)
    000042e6: 	subq	start_time(%rip), %rax
    000042ed: 	cvtsi2sd	%rax, %xmm0
    000042f2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000042fa: 	callq	_Z13record_resultdPKc # Offset: 17146
    000042ff: 	movq	0x90(%rsp), %rdi
    00004307: 	cmpq	%r13, %rdi
    0000430a: 	je	.Ltmp5778 # Offset: 17162
    0000430c: 	movq	0xa0(%rsp), %rax
    00004314: 	leaq	0x1(%rax), %rsi
    00004318: 	callq	_ZdlPvm@PLT # Offset: 17176
.Ltmp5778:
    0000431d: 	leaq	DATAat0x57821(%rip), %rdx
    00004324: 	movq	%r14, %rsi
    00004327: 	movq	%r12, %rdi
    0000432a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17194
    0000432f: 	callq	clock@PLT # Offset: 17199
    00004334: 	movl	iterations(%rip), %ecx
    0000433a: 	movq	%rax, start_time(%rip)
    00004341: 	testl	%ecx, %ecx
    00004343: 	jle	.Ltmp5779 # Offset: 17219
    00004349: 	movl	$0x0, (%rsp)
.Ltmp5782:
    00004350: 	movq	%rbp, %rax
    00004353: 	pxor	%xmm0, %xmm0
    00004357: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5780:
    00004360: 	movdqa	DATAat0x57f70(%rip), %xmm1
    00004368: 	pand	(%rax), %xmm1
    0000436c: 	addq	$0x10, %rax
    00004370: 	paddq	%xmm1, %xmm0
    00004374: 	cmpq	%rax, %rbx
    00004377: 	jne	.Ltmp5780 # Offset: 17271
    00004379: 	cvttsd2si	init_value(%rip), %rdx
    00004382: 	movdqa	%xmm0, %xmm1
    00004386: 	psrldq	$0x8, %xmm1
    0000438b: 	paddq	%xmm1, %xmm0
    0000438f: 	movq	%xmm0, %rax
    00004394: 	andl	$0x7f, %edx
    00004397: 	imulq	$0x1f40, %rdx, %rdx
    0000439e: 	cmpq	%rax, %rdx
    000043a1: 	je	.Ltmp5781 # Offset: 17313
    000043a3: 	movl	current_test(%rip), %edx
    000043a9: 	leaq	DATAat0x571d0(%rip), %rsi
    000043b0: 	movl	$0x1, %edi
    000043b5: 	xorl	%eax, %eax
    000043b7: 	callq	__printf_chk@PLT # Offset: 17335
    000043bc: 	movl	iterations(%rip), %ecx
.Ltmp5781:
    000043c2: 	addl	$0x1, (%rsp)
    000043c6: 	movl	(%rsp), %eax
    000043c9: 	cmpl	%ecx, %eax
    000043cb: 	jl	.Ltmp5782 # Offset: 17355
.Ltmp5779:
    000043cd: 	movq	%r12, %rsi
    000043d0: 	movq	%r15, %rdi
    000043d3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17363
    000043d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000043df: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000043e6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000043ed: 	je	.Ltmp5783 # Offset: 17389
.Ltmp5861:
    000043f3: 	movq	-0x20(%rax), %rdi
    000043f7: 	movq	%rdi, (%rsp)
    000043fb: 	callq	clock@PLT # Offset: 17403
    00004400: 	movq	(%rsp), %rdi
    00004404: 	pxor	%xmm0, %xmm0
    00004408: 	movq	%rax, end_time(%rip)
    0000440f: 	subq	start_time(%rip), %rax
    00004416: 	cvtsi2sd	%rax, %xmm0
    0000441b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004423: 	callq	_Z13record_resultdPKc # Offset: 17443
    00004428: 	movq	0x90(%rsp), %rdi
    00004430: 	cmpq	%r13, %rdi
    00004433: 	je	.Ltmp5784 # Offset: 17459
    00004435: 	movq	0xa0(%rsp), %rax
    0000443d: 	leaq	0x1(%rax), %rsi
    00004441: 	callq	_ZdlPvm@PLT # Offset: 17473
.Ltmp5784:
    00004446: 	leaq	DATAat0x5782a(%rip), %rdx
    0000444d: 	movq	%r14, %rsi
    00004450: 	movq	%r12, %rdi
    00004453: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17491
    00004458: 	movq	%r12, %rdx
    0000445b: 	movl	$0x1f40, %esi
    00004460: 	movq	%rbp, %rdi
    00004463: 	callq	_Z13test_constantIl13and_remainderIlLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 17507
    00004468: 	movq	0x90(%rsp), %rdi
    00004470: 	cmpq	%r13, %rdi
    00004473: 	je	.Ltmp5785 # Offset: 17523
    00004475: 	movq	0xa0(%rsp), %rax
    0000447d: 	leaq	0x1(%rax), %rsi
    00004481: 	callq	_ZdlPvm@PLT # Offset: 17537
.Ltmp5785:
    00004486: 	leaq	DATAat0x5783d(%rip), %rdx
    0000448d: 	movq	%r14, %rsi
    00004490: 	movq	%r12, %rdi
    00004493: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17555
    00004498: 	movq	%r12, %rdx
    0000449b: 	movl	$0x1f40, %esi
    000044a0: 	movq	%rbp, %rdi
    000044a3: 	callq	_Z13test_constantIl14and_remainder2IlLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 17571
    000044a8: 	movq	0x90(%rsp), %rdi
    000044b0: 	cmpq	%r13, %rdi
    000044b3: 	je	.Ltmp5786 # Offset: 17587
    000044b5: 	movq	0xa0(%rsp), %rax
    000044bd: 	leaq	0x1(%rax), %rsi
    000044c1: 	callq	_ZdlPvm@PLT # Offset: 17601
.Ltmp5786:
    000044c6: 	leaq	DATAat0x57851(%rip), %rdx
    000044cd: 	movq	%r14, %rsi
    000044d0: 	movq	%r12, %rdi
    000044d3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17619
    000044d8: 	callq	clock@PLT # Offset: 17624
    000044dd: 	movl	iterations(%rip), %edi
    000044e3: 	movl	$0x0, (%rsp)
    000044ea: 	movq	%rax, start_time(%rip)
    000044f1: 	testl	%edi, %edi
    000044f3: 	jle	.Ltmp5787 # Offset: 17651
    000044f5: 	nopl	(%rax) # Size: 3
.Ltmp5790:
    000044f8: 	movq	%rbp, %rcx
    000044fb: 	xorl	%esi, %esi
    000044fd: 	nopl	(%rax) # Size: 3
.Ltmp5788:
    00004500: 	movq	(%rcx), %rax
    00004503: 	addq	$0x8, %rcx
    00004507: 	cqto
    00004509: 	shrq	$0x39, %rdx
    0000450d: 	addq	%rdx, %rax
    00004510: 	andl	$0x7f, %eax
    00004513: 	subq	%rdx, %rax
    00004516: 	addq	%rax, %rsi
    00004519: 	cmpq	%rbx, %rcx
    0000451c: 	jne	.Ltmp5788 # Offset: 17692
    0000451e: 	cvttsd2si	init_value(%rip), %rax
    00004527: 	cqto
    00004529: 	shrq	$0x39, %rdx
    0000452d: 	addq	%rdx, %rax
    00004530: 	andl	$0x7f, %eax
    00004533: 	subq	%rdx, %rax
    00004536: 	imulq	$0x1f40, %rax, %rax
    0000453d: 	cmpq	%rax, %rsi
    00004540: 	je	.Ltmp5789 # Offset: 17728
    00004542: 	movl	current_test(%rip), %edx
    00004548: 	leaq	DATAat0x571d0(%rip), %rsi
    0000454f: 	movl	$0x1, %edi
    00004554: 	xorl	%eax, %eax
    00004556: 	callq	__printf_chk@PLT # Offset: 17750
    0000455b: 	movl	iterations(%rip), %edi
.Ltmp5789:
    00004561: 	addl	$0x1, (%rsp)
    00004565: 	movl	(%rsp), %eax
    00004568: 	cmpl	%edi, %eax
    0000456a: 	jl	.Ltmp5790 # Offset: 17770
.Ltmp5787:
    0000456c: 	movq	%r12, %rsi
    0000456f: 	movq	%r15, %rdi
    00004572: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17778
    00004577: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000457e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004585: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000458c: 	je	.Ltmp5791 # Offset: 17804
.Ltmp5860:
    00004592: 	movq	-0x20(%rax), %rdi
    00004596: 	movq	%rdi, (%rsp)
    0000459a: 	callq	clock@PLT # Offset: 17818
    0000459f: 	movq	(%rsp), %rdi
    000045a3: 	pxor	%xmm0, %xmm0
    000045a7: 	movq	%rax, end_time(%rip)
    000045ae: 	subq	start_time(%rip), %rax
    000045b5: 	cvtsi2sd	%rax, %xmm0
    000045ba: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000045c2: 	callq	_Z13record_resultdPKc # Offset: 17858
    000045c7: 	movq	0x90(%rsp), %rdi
    000045cf: 	cmpq	%r13, %rdi
    000045d2: 	je	.Ltmp5792 # Offset: 17874
    000045d4: 	movq	0xa0(%rsp), %rax
    000045dc: 	leaq	0x1(%rax), %rsi
    000045e0: 	callq	_ZdlPvm@PLT # Offset: 17888
.Ltmp5792:
    000045e5: 	leaq	DATAat0x5786a(%rip), %rdx
    000045ec: 	movq	%r14, %rsi
    000045ef: 	movq	%r12, %rdi
    000045f2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17906
    000045f7: 	movq	%r12, %rcx
    000045fa: 	movl	$0x80, %edx
    000045ff: 	movl	$0x1f40, %esi
    00004604: 	movq	%rbp, %rdi
    00004607: 	callq	_Z14test_variable1Il25custom_remainder_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 17927
    0000460c: 	movq	0x90(%rsp), %rdi
    00004614: 	cmpq	%r13, %rdi
    00004617: 	je	.Ltmp5793 # Offset: 17943
    00004619: 	movq	0xa0(%rsp), %rax
    00004621: 	leaq	0x1(%rax), %rsi
    00004625: 	callq	_ZdlPvm@PLT # Offset: 17957
.Ltmp5793:
    0000462a: 	leaq	DATAat0x57885(%rip), %rdx
    00004631: 	movq	%r14, %rsi
    00004634: 	movq	%r12, %rdi
    00004637: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17975
    0000463c: 	callq	clock@PLT # Offset: 17980
    00004641: 	movl	iterations(%rip), %edi
    00004647: 	movl	$0x0, (%rsp)
    0000464e: 	movq	%rax, start_time(%rip)
    00004655: 	testl	%edi, %edi
    00004657: 	jle	.Ltmp5794 # Offset: 18007
    00004659: 	nopl	(%rax) # Size: 7
.Ltmp5797:
    00004660: 	movq	%rbp, %rcx
    00004663: 	xorl	%esi, %esi
    00004665: 	nopl	(%rax) # Size: 3
.Ltmp5795:
    00004668: 	movq	(%rcx), %rax
    0000466b: 	addq	$0x8, %rcx
    0000466f: 	cqto
    00004671: 	shrq	$0x39, %rdx
    00004675: 	addq	%rdx, %rax
    00004678: 	andl	$0x7f, %eax
    0000467b: 	subq	%rdx, %rax
    0000467e: 	addq	%rax, %rsi
    00004681: 	cmpq	%rbx, %rcx
    00004684: 	jne	.Ltmp5795 # Offset: 18052
    00004686: 	cvttsd2si	init_value(%rip), %rax
    0000468f: 	cqto
    00004691: 	shrq	$0x39, %rdx
    00004695: 	addq	%rdx, %rax
    00004698: 	andl	$0x7f, %eax
    0000469b: 	subq	%rdx, %rax
    0000469e: 	imulq	$0x1f40, %rax, %rax
    000046a5: 	cmpq	%rax, %rsi
    000046a8: 	je	.Ltmp5796 # Offset: 18088
    000046aa: 	movl	current_test(%rip), %edx
    000046b0: 	leaq	DATAat0x571d0(%rip), %rsi
    000046b7: 	movl	$0x1, %edi
    000046bc: 	xorl	%eax, %eax
    000046be: 	callq	__printf_chk@PLT # Offset: 18110
    000046c3: 	movl	iterations(%rip), %edi
.Ltmp5796:
    000046c9: 	addl	$0x1, (%rsp)
    000046cd: 	movl	(%rsp), %eax
    000046d0: 	cmpl	%edi, %eax
    000046d2: 	jl	.Ltmp5797 # Offset: 18130
.Ltmp5794:
    000046d4: 	movq	%r12, %rsi
    000046d7: 	movq	%r15, %rdi
    000046da: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18138
    000046df: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000046e6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000046ed: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000046f4: 	je	.Ltmp5798 # Offset: 18164
.Ltmp5859:
    000046fa: 	movq	-0x20(%rax), %rdi
    000046fe: 	movq	%rdi, (%rsp)
    00004702: 	callq	clock@PLT # Offset: 18178
    00004707: 	movq	(%rsp), %rdi
    0000470b: 	pxor	%xmm0, %xmm0
    0000470f: 	movq	%rax, end_time(%rip)
    00004716: 	subq	start_time(%rip), %rax
    0000471d: 	cvtsi2sd	%rax, %xmm0
    00004722: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000472a: 	callq	_Z13record_resultdPKc # Offset: 18218
    0000472f: 	movq	0x90(%rsp), %rdi
    00004737: 	cmpq	%r13, %rdi
    0000473a: 	je	.Ltmp5799 # Offset: 18234
    0000473c: 	movq	0xa0(%rsp), %rax
    00004744: 	leaq	0x1(%rax), %rsi
    00004748: 	callq	_ZdlPvm@PLT # Offset: 18248
.Ltmp5799:
    0000474d: 	leaq	DATAat0x578a0(%rip), %rdx
    00004754: 	movq	%r14, %rsi
    00004757: 	movq	%r12, %rdi
    0000475a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18266
    0000475f: 	callq	clock@PLT # Offset: 18271
    00004764: 	movl	iterations(%rip), %ecx
    0000476a: 	movq	%rax, start_time(%rip)
    00004771: 	testl	%ecx, %ecx
    00004773: 	jle	.Ltmp5800 # Offset: 18291
    00004779: 	movl	$0x0, (%rsp)
.Ltmp5803:
    00004780: 	movq	%rbp, %rax
    00004783: 	pxor	%xmm0, %xmm0
    00004787: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5801:
    00004790: 	movdqa	DATAat0x57c50(%rip), %xmm1
    00004798: 	pand	(%rax), %xmm1
    0000479c: 	addq	$0x10, %rax
    000047a0: 	paddq	%xmm1, %xmm0
    000047a4: 	cmpq	%rbx, %rax
    000047a7: 	jne	.Ltmp5801 # Offset: 18343
    000047a9: 	cvttsd2si	init_value(%rip), %rdx
    000047b2: 	movdqa	%xmm0, %xmm1
    000047b6: 	psrldq	$0x8, %xmm1
    000047bb: 	paddq	%xmm1, %xmm0
    000047bf: 	movq	%xmm0, %rax
    000047c4: 	movzbl	%dl, %edx
    000047c7: 	imulq	$0x1f40, %rdx, %rdx
    000047ce: 	cmpq	%rax, %rdx
    000047d1: 	je	.Ltmp5802 # Offset: 18385
    000047d3: 	movl	current_test(%rip), %edx
    000047d9: 	leaq	DATAat0x571d0(%rip), %rsi
    000047e0: 	movl	$0x1, %edi
    000047e5: 	xorl	%eax, %eax
    000047e7: 	callq	__printf_chk@PLT # Offset: 18407
    000047ec: 	movl	iterations(%rip), %ecx
.Ltmp5802:
    000047f2: 	addl	$0x1, (%rsp)
    000047f6: 	movl	(%rsp), %eax
    000047f9: 	cmpl	%ecx, %eax
    000047fb: 	jl	.Ltmp5803 # Offset: 18427
.Ltmp5800:
    000047fd: 	movq	%r12, %rsi
    00004800: 	movq	%r15, %rdi
    00004803: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18435
    00004808: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000480f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004816: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000481d: 	je	.Ltmp5804 # Offset: 18461
.Ltmp5858:
    00004823: 	movq	-0x20(%rax), %rdi
    00004827: 	movq	%rdi, (%rsp)
    0000482b: 	callq	clock@PLT # Offset: 18475
    00004830: 	movq	(%rsp), %rdi
    00004834: 	pxor	%xmm0, %xmm0
    00004838: 	movq	%rax, end_time(%rip)
    0000483f: 	subq	start_time(%rip), %rax
    00004846: 	cvtsi2sd	%rax, %xmm0
    0000484b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004853: 	callq	_Z13record_resultdPKc # Offset: 18515
    00004858: 	movq	0x90(%rsp), %rdi
    00004860: 	cmpq	%r13, %rdi
    00004863: 	je	.Ltmp5805 # Offset: 18531
    00004865: 	movq	0xa0(%rsp), %rax
    0000486d: 	leaq	0x1(%rax), %rsi
    00004871: 	callq	_ZdlPvm@PLT # Offset: 18545
.Ltmp5805:
    00004876: 	leaq	DATAat0x578a9(%rip), %rdx
    0000487d: 	movq	%r14, %rsi
    00004880: 	movq	%r12, %rdi
    00004883: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18563
    00004888: 	movq	%r12, %rdx
    0000488b: 	movl	$0x1f40, %esi
    00004890: 	movq	%rbp, %rdi
    00004893: 	callq	_Z13test_constantIl13and_remainderIlLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 18579
    00004898: 	movq	0x90(%rsp), %rdi
    000048a0: 	cmpq	%r13, %rdi
    000048a3: 	je	.Ltmp5806 # Offset: 18595
    000048a5: 	movq	0xa0(%rsp), %rax
    000048ad: 	leaq	0x1(%rax), %rsi
    000048b1: 	callq	_ZdlPvm@PLT # Offset: 18609
.Ltmp5806:
    000048b6: 	leaq	DATAat0x578bc(%rip), %rdx
    000048bd: 	movq	%r14, %rsi
    000048c0: 	movq	%r12, %rdi
    000048c3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18627
    000048c8: 	movq	%r12, %rdx
    000048cb: 	movl	$0x1f40, %esi
    000048d0: 	movq	%rbp, %rdi
    000048d3: 	callq	_Z13test_constantIl14and_remainder2IlLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 18643
    000048d8: 	movq	0x90(%rsp), %rdi
    000048e0: 	cmpq	%r13, %rdi
    000048e3: 	je	.Ltmp5807 # Offset: 18659
    000048e5: 	movq	0xa0(%rsp), %rax
    000048ed: 	leaq	0x1(%rax), %rsi
    000048f1: 	callq	_ZdlPvm@PLT # Offset: 18673
.Ltmp5807:
    000048f6: 	leaq	DATAat0x578d0(%rip), %rdx
    000048fd: 	movq	%r14, %rsi
    00004900: 	movq	%r12, %rdi
    00004903: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18691
    00004908: 	callq	clock@PLT # Offset: 18696
    0000490d: 	movl	iterations(%rip), %edi
    00004913: 	movl	$0x0, (%rsp)
    0000491a: 	movq	%rax, start_time(%rip)
    00004921: 	testl	%edi, %edi
    00004923: 	jle	.Ltmp5808 # Offset: 18723
    00004925: 	nopl	(%rax) # Size: 3
.Ltmp5811:
    00004928: 	movq	%rbp, %rcx
    0000492b: 	xorl	%esi, %esi
    0000492d: 	nopl	(%rax) # Size: 3
.Ltmp5809:
    00004930: 	movq	(%rcx), %rax
    00004933: 	addq	$0x8, %rcx
    00004937: 	cqto
    00004939: 	shrq	$0x38, %rdx
    0000493d: 	addq	%rdx, %rax
    00004940: 	movzbl	%al, %eax
    00004943: 	subq	%rdx, %rax
    00004946: 	addq	%rax, %rsi
    00004949: 	cmpq	%rbx, %rcx
    0000494c: 	jne	.Ltmp5809 # Offset: 18764
    0000494e: 	cvttsd2si	init_value(%rip), %rax
    00004957: 	cqto
    00004959: 	shrq	$0x38, %rdx
    0000495d: 	addq	%rdx, %rax
    00004960: 	movzbl	%al, %eax
    00004963: 	subq	%rdx, %rax
    00004966: 	imulq	$0x1f40, %rax, %rax
    0000496d: 	cmpq	%rax, %rsi
    00004970: 	je	.Ltmp5810 # Offset: 18800
    00004972: 	movl	current_test(%rip), %edx
    00004978: 	leaq	DATAat0x571d0(%rip), %rsi
    0000497f: 	movl	$0x1, %edi
    00004984: 	xorl	%eax, %eax
    00004986: 	callq	__printf_chk@PLT # Offset: 18822
    0000498b: 	movl	iterations(%rip), %edi
.Ltmp5810:
    00004991: 	addl	$0x1, (%rsp)
    00004995: 	movl	(%rsp), %eax
    00004998: 	cmpl	%edi, %eax
    0000499a: 	jl	.Ltmp5811 # Offset: 18842
.Ltmp5808:
    0000499c: 	movq	%r12, %rsi
    0000499f: 	movq	%r15, %rdi
    000049a2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18850
    000049a7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000049ae: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000049b5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000049bc: 	je	.Ltmp5812 # Offset: 18876
.Ltmp5857:
    000049c2: 	movq	-0x20(%rax), %rdi
    000049c6: 	movq	%rdi, (%rsp)
    000049ca: 	callq	clock@PLT # Offset: 18890
    000049cf: 	movq	(%rsp), %rdi
    000049d3: 	pxor	%xmm0, %xmm0
    000049d7: 	movq	%rax, end_time(%rip)
    000049de: 	subq	start_time(%rip), %rax
    000049e5: 	cvtsi2sd	%rax, %xmm0
    000049ea: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000049f2: 	callq	_Z13record_resultdPKc # Offset: 18930
    000049f7: 	movq	0x90(%rsp), %rdi
    000049ff: 	cmpq	%r13, %rdi
    00004a02: 	je	.Ltmp5813 # Offset: 18946
    00004a04: 	movq	0xa0(%rsp), %rax
    00004a0c: 	leaq	0x1(%rax), %rsi
    00004a10: 	callq	_ZdlPvm@PLT # Offset: 18960
.Ltmp5813:
    00004a15: 	leaq	DATAat0x578e9(%rip), %rdx
    00004a1c: 	movq	%r14, %rsi
    00004a1f: 	movq	%r12, %rdi
    00004a22: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18978
    00004a27: 	movq	%r12, %rcx
    00004a2a: 	movl	$0x100, %edx
    00004a2f: 	movl	$0x1f40, %esi
    00004a34: 	movq	%rbp, %rdi
    00004a37: 	callq	_Z14test_variable1Il25custom_remainder_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 18999
    00004a3c: 	movq	0x90(%rsp), %rdi
    00004a44: 	cmpq	%r13, %rdi
    00004a47: 	je	.Ltmp5814 # Offset: 19015
    00004a49: 	movq	0xa0(%rsp), %rax
    00004a51: 	leaq	0x1(%rax), %rsi
    00004a55: 	callq	_ZdlPvm@PLT # Offset: 19029
.Ltmp5814:
    00004a5a: 	leaq	DATAat0x57904(%rip), %rdx
    00004a61: 	movq	%r14, %rsi
    00004a64: 	movq	%r12, %rdi
    00004a67: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19047
    00004a6c: 	callq	clock@PLT # Offset: 19052
    00004a71: 	movl	iterations(%rip), %edi
    00004a77: 	movl	$0x0, (%rsp)
    00004a7e: 	movq	%rax, start_time(%rip)
    00004a85: 	testl	%edi, %edi
    00004a87: 	jle	.Ltmp5815 # Offset: 19079
    00004a89: 	nopl	(%rax) # Size: 7
.Ltmp5818:
    00004a90: 	movq	%rbp, %rcx
    00004a93: 	xorl	%esi, %esi
    00004a95: 	nopl	(%rax) # Size: 3
.Ltmp5816:
    00004a98: 	movq	(%rcx), %rax
    00004a9b: 	addq	$0x8, %rcx
    00004a9f: 	cqto
    00004aa1: 	shrq	$0x38, %rdx
    00004aa5: 	addq	%rdx, %rax
    00004aa8: 	movzbl	%al, %eax
    00004aab: 	subq	%rdx, %rax
    00004aae: 	addq	%rax, %rsi
    00004ab1: 	cmpq	%rbx, %rcx
    00004ab4: 	jne	.Ltmp5816 # Offset: 19124
    00004ab6: 	cvttsd2si	init_value(%rip), %rax
    00004abf: 	cqto
    00004ac1: 	shrq	$0x38, %rdx
    00004ac5: 	addq	%rdx, %rax
    00004ac8: 	movzbl	%al, %eax
    00004acb: 	subq	%rdx, %rax
    00004ace: 	imulq	$0x1f40, %rax, %rax
    00004ad5: 	cmpq	%rax, %rsi
    00004ad8: 	je	.Ltmp5817 # Offset: 19160
    00004ada: 	movl	current_test(%rip), %edx
    00004ae0: 	leaq	DATAat0x571d0(%rip), %rsi
    00004ae7: 	movl	$0x1, %edi
    00004aec: 	xorl	%eax, %eax
    00004aee: 	callq	__printf_chk@PLT # Offset: 19182
    00004af3: 	movl	iterations(%rip), %edi
.Ltmp5817:
    00004af9: 	addl	$0x1, (%rsp)
    00004afd: 	movl	(%rsp), %eax
    00004b00: 	cmpl	%edi, %eax
    00004b02: 	jl	.Ltmp5818 # Offset: 19202
.Ltmp5815:
    00004b04: 	movq	%r12, %rsi
    00004b07: 	movq	%r15, %rdi
    00004b0a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19210
    00004b0f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004b16: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004b1d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004b24: 	je	.Ltmp5819 # Offset: 19236
.Ltmp5856:
    00004b2a: 	movq	-0x20(%rax), %rdi
    00004b2e: 	movq	%rdi, (%rsp)
    00004b32: 	callq	clock@PLT # Offset: 19250
    00004b37: 	movq	(%rsp), %rdi
    00004b3b: 	pxor	%xmm0, %xmm0
    00004b3f: 	movq	%rax, end_time(%rip)
    00004b46: 	subq	start_time(%rip), %rax
    00004b4d: 	cvtsi2sd	%rax, %xmm0
    00004b52: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004b5a: 	callq	_Z13record_resultdPKc # Offset: 19290
    00004b5f: 	movq	0x90(%rsp), %rdi
    00004b67: 	cmpq	%r13, %rdi
    00004b6a: 	je	.Ltmp5820 # Offset: 19306
    00004b6c: 	movq	0xa0(%rsp), %rax
    00004b74: 	leaq	0x1(%rax), %rsi
    00004b78: 	callq	_ZdlPvm@PLT # Offset: 19320
.Ltmp5820:
    00004b7d: 	leaq	DATAat0x5791f(%rip), %rdx
    00004b84: 	movq	%r14, %rsi
    00004b87: 	movq	%r12, %rdi
    00004b8a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19338
    00004b8f: 	callq	clock@PLT # Offset: 19343
    00004b94: 	movl	iterations(%rip), %ecx
    00004b9a: 	movq	%rax, start_time(%rip)
    00004ba1: 	testl	%ecx, %ecx
    00004ba3: 	jle	.Ltmp5821 # Offset: 19363
    00004ba9: 	movl	$0x0, (%rsp)
.Ltmp5824:
    00004bb0: 	movq	%rbp, %rax
    00004bb3: 	pxor	%xmm0, %xmm0
    00004bb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5822:
    00004bc0: 	movdqa	DATAat0x57f80(%rip), %xmm1
    00004bc8: 	pand	(%rax), %xmm1
    00004bcc: 	addq	$0x10, %rax
    00004bd0: 	paddq	%xmm1, %xmm0
    00004bd4: 	cmpq	%rbx, %rax
    00004bd7: 	jne	.Ltmp5822 # Offset: 19415
    00004bd9: 	cvttsd2si	init_value(%rip), %rdx
    00004be2: 	movdqa	%xmm0, %xmm1
    00004be6: 	psrldq	$0x8, %xmm1
    00004beb: 	paddq	%xmm1, %xmm0
    00004bef: 	movq	%xmm0, %rax
    00004bf4: 	andl	$0x3ff, %edx
    00004bfa: 	imulq	$0x1f40, %rdx, %rdx
    00004c01: 	cmpq	%rax, %rdx
    00004c04: 	je	.Ltmp5823 # Offset: 19460
    00004c06: 	movl	current_test(%rip), %edx
    00004c0c: 	leaq	DATAat0x571d0(%rip), %rsi
    00004c13: 	movl	$0x1, %edi
    00004c18: 	xorl	%eax, %eax
    00004c1a: 	callq	__printf_chk@PLT # Offset: 19482
    00004c1f: 	movl	iterations(%rip), %ecx
.Ltmp5823:
    00004c25: 	addl	$0x1, (%rsp)
    00004c29: 	movl	(%rsp), %eax
    00004c2c: 	cmpl	%ecx, %eax
    00004c2e: 	jl	.Ltmp5824 # Offset: 19502
.Ltmp5821:
    00004c30: 	movq	%r12, %rsi
    00004c33: 	movq	%r15, %rdi
    00004c36: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19510
    00004c3b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004c42: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004c49: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004c50: 	je	.Ltmp5825 # Offset: 19536
.Ltmp5855:
    00004c56: 	movq	-0x20(%rax), %rdi
    00004c5a: 	movq	%rdi, (%rsp)
    00004c5e: 	callq	clock@PLT # Offset: 19550
    00004c63: 	movq	(%rsp), %rdi
    00004c67: 	pxor	%xmm0, %xmm0
    00004c6b: 	movq	%rax, end_time(%rip)
    00004c72: 	subq	start_time(%rip), %rax
    00004c79: 	cvtsi2sd	%rax, %xmm0
    00004c7e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004c86: 	callq	_Z13record_resultdPKc # Offset: 19590
    00004c8b: 	movq	0x90(%rsp), %rdi
    00004c93: 	cmpq	%r13, %rdi
    00004c96: 	je	.Ltmp5826 # Offset: 19606
    00004c98: 	movq	0xa0(%rsp), %rax
    00004ca0: 	leaq	0x1(%rax), %rsi
    00004ca4: 	callq	_ZdlPvm@PLT # Offset: 19620
.Ltmp5826:
    00004ca9: 	leaq	DATAat0x57929(%rip), %rdx
    00004cb0: 	movq	%r14, %rsi
    00004cb3: 	movq	%r12, %rdi
    00004cb6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19638
    00004cbb: 	movq	%r12, %rdx
    00004cbe: 	movl	$0x1f40, %esi
    00004cc3: 	movq	%rbp, %rdi
    00004cc6: 	callq	_Z13test_constantIl13and_remainderIlLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 19654
    00004ccb: 	movq	0x90(%rsp), %rdi
    00004cd3: 	cmpq	%r13, %rdi
    00004cd6: 	je	.Ltmp5827 # Offset: 19670
    00004cd8: 	movq	0xa0(%rsp), %rax
    00004ce0: 	leaq	0x1(%rax), %rsi
    00004ce4: 	callq	_ZdlPvm@PLT # Offset: 19684
.Ltmp5827:
    00004ce9: 	leaq	DATAat0x5793d(%rip), %rdx
    00004cf0: 	movq	%r14, %rsi
    00004cf3: 	movq	%r12, %rdi
    00004cf6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19702
    00004cfb: 	movq	%r12, %rdx
    00004cfe: 	movl	$0x1f40, %esi
    00004d03: 	movq	%rbp, %rdi
    00004d06: 	callq	_Z13test_constantIl14and_remainder2IlLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 19718
    00004d0b: 	movq	0x90(%rsp), %rdi
    00004d13: 	cmpq	%r13, %rdi
    00004d16: 	je	.Ltmp5828 # Offset: 19734
    00004d18: 	movq	0xa0(%rsp), %rax
    00004d20: 	leaq	0x1(%rax), %rsi
    00004d24: 	callq	_ZdlPvm@PLT # Offset: 19748
.Ltmp5828:
    00004d29: 	leaq	DATAat0x57952(%rip), %rdx
    00004d30: 	movq	%r14, %rsi
    00004d33: 	movq	%r12, %rdi
    00004d36: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19766
    00004d3b: 	callq	clock@PLT # Offset: 19771
    00004d40: 	movl	iterations(%rip), %edi
    00004d46: 	movl	$0x0, (%rsp)
    00004d4d: 	movq	%rax, start_time(%rip)
    00004d54: 	testl	%edi, %edi
    00004d56: 	jle	.Ltmp5829 # Offset: 19798
    00004d5c: 	nopl	(%rax) # Size: 4
.Ltmp5832:
    00004d60: 	movq	%rbp, %rcx
    00004d63: 	xorl	%esi, %esi
    00004d65: 	nopl	(%rax) # Size: 3
.Ltmp5830:
    00004d68: 	movq	(%rcx), %rax
    00004d6b: 	addq	$0x8, %rcx
    00004d6f: 	cqto
    00004d71: 	shrq	$0x36, %rdx
    00004d75: 	addq	%rdx, %rax
    00004d78: 	andl	$0x3ff, %eax
    00004d7d: 	subq	%rdx, %rax
    00004d80: 	addq	%rax, %rsi
    00004d83: 	cmpq	%rbx, %rcx
    00004d86: 	jne	.Ltmp5830 # Offset: 19846
    00004d88: 	cvttsd2si	init_value(%rip), %rax
    00004d91: 	cqto
    00004d93: 	shrq	$0x36, %rdx
    00004d97: 	addq	%rdx, %rax
    00004d9a: 	andl	$0x3ff, %eax
    00004d9f: 	subq	%rdx, %rax
    00004da2: 	imulq	$0x1f40, %rax, %rax
    00004da9: 	cmpq	%rax, %rsi
    00004dac: 	je	.Ltmp5831 # Offset: 19884
    00004dae: 	movl	current_test(%rip), %edx
    00004db4: 	leaq	DATAat0x571d0(%rip), %rsi
    00004dbb: 	movl	$0x1, %edi
    00004dc0: 	xorl	%eax, %eax
    00004dc2: 	callq	__printf_chk@PLT # Offset: 19906
    00004dc7: 	movl	iterations(%rip), %edi
.Ltmp5831:
    00004dcd: 	addl	$0x1, (%rsp)
    00004dd1: 	movl	(%rsp), %eax
    00004dd4: 	cmpl	%edi, %eax
    00004dd6: 	jl	.Ltmp5832 # Offset: 19926
.Ltmp5829:
    00004dd8: 	movq	%r12, %rsi
    00004ddb: 	movq	%r15, %rdi
    00004dde: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19934
    00004de3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004dea: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004df1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004df8: 	je	.Ltmp5833 # Offset: 19960
.Ltmp5854:
    00004dfe: 	movq	-0x20(%rax), %rdi
    00004e02: 	movq	%rdi, (%rsp)
    00004e06: 	callq	clock@PLT # Offset: 19974
    00004e0b: 	movq	(%rsp), %rdi
    00004e0f: 	pxor	%xmm0, %xmm0
    00004e13: 	movq	%rax, end_time(%rip)
    00004e1a: 	subq	start_time(%rip), %rax
    00004e21: 	cvtsi2sd	%rax, %xmm0
    00004e26: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004e2e: 	callq	_Z13record_resultdPKc # Offset: 20014
    00004e33: 	movq	0x90(%rsp), %rdi
    00004e3b: 	cmpq	%r13, %rdi
    00004e3e: 	je	.Ltmp5834 # Offset: 20030
    00004e40: 	movq	0xa0(%rsp), %rax
    00004e48: 	leaq	0x1(%rax), %rsi
    00004e4c: 	callq	_ZdlPvm@PLT # Offset: 20044
.Ltmp5834:
    00004e51: 	leaq	DATAat0x5796c(%rip), %rdx
    00004e58: 	movq	%r14, %rsi
    00004e5b: 	movq	%r12, %rdi
    00004e5e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20062
    00004e63: 	movq	%r12, %rcx
    00004e66: 	movl	$0x400, %edx
    00004e6b: 	movl	$0x1f40, %esi
    00004e70: 	movq	%rbp, %rdi
    00004e73: 	callq	_Z14test_variable1Il25custom_remainder_variableIlEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 20083
    00004e78: 	movq	0x90(%rsp), %rdi
    00004e80: 	cmpq	%r13, %rdi
    00004e83: 	je	.Ltmp5835 # Offset: 20099
    00004e85: 	movq	0xa0(%rsp), %rax
    00004e8d: 	leaq	0x1(%rax), %rsi
    00004e91: 	callq	_ZdlPvm@PLT # Offset: 20113
.Ltmp5835:
    00004e96: 	leaq	DATAat0x57988(%rip), %rdx
    00004e9d: 	movq	%r14, %rsi
    00004ea0: 	movq	%r12, %rdi
    00004ea3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20131
    00004ea8: 	callq	clock@PLT # Offset: 20136
    00004ead: 	movl	iterations(%rip), %edi
    00004eb3: 	movl	$0x0, (%rsp)
    00004eba: 	movq	%rax, start_time(%rip)
    00004ec1: 	testl	%edi, %edi
    00004ec3: 	jle	.Ltmp5836 # Offset: 20163
    00004ec5: 	nopl	(%rax) # Size: 3
.Ltmp5839:
    00004ec8: 	movq	%rbp, %rcx
    00004ecb: 	xorl	%esi, %esi
    00004ecd: 	nopl	(%rax) # Size: 3
.Ltmp5837:
    00004ed0: 	movq	(%rcx), %rax
    00004ed3: 	addq	$0x8, %rcx
    00004ed7: 	cqto
    00004ed9: 	shrq	$0x36, %rdx
    00004edd: 	addq	%rdx, %rax
    00004ee0: 	andl	$0x3ff, %eax
    00004ee5: 	subq	%rdx, %rax
    00004ee8: 	addq	%rax, %rsi
    00004eeb: 	cmpq	%rbx, %rcx
    00004eee: 	jne	.Ltmp5837 # Offset: 20206
    00004ef0: 	cvttsd2si	init_value(%rip), %rax
    00004ef9: 	cqto
    00004efb: 	shrq	$0x36, %rdx
    00004eff: 	addq	%rdx, %rax
    00004f02: 	andl	$0x3ff, %eax
    00004f07: 	subq	%rdx, %rax
    00004f0a: 	imulq	$0x1f40, %rax, %rax
    00004f11: 	cmpq	%rax, %rsi
    00004f14: 	je	.Ltmp5838 # Offset: 20244
    00004f16: 	movl	current_test(%rip), %edx
    00004f1c: 	leaq	DATAat0x571d0(%rip), %rsi
    00004f23: 	movl	$0x1, %edi
    00004f28: 	xorl	%eax, %eax
    00004f2a: 	callq	__printf_chk@PLT # Offset: 20266
    00004f2f: 	movl	iterations(%rip), %edi
.Ltmp5838:
    00004f35: 	addl	$0x1, (%rsp)
    00004f39: 	movl	(%rsp), %eax
    00004f3c: 	cmpl	%edi, %eax
    00004f3e: 	jl	.Ltmp5839 # Offset: 20286
.Ltmp5836:
    00004f40: 	movq	%r12, %rsi
    00004f43: 	movq	%r15, %rdi
    00004f46: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 20294
    00004f4b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004f52: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004f59: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004f60: 	je	.Ltmp5840 # Offset: 20320
.Ltmp5853:
    00004f66: 	movq	-0x20(%rax), %rbp
    00004f6a: 	callq	clock@PLT # Offset: 20330
    00004f6f: 	pxor	%xmm0, %xmm0
    00004f73: 	movq	%rax, end_time(%rip)
    00004f7a: 	movq	%rbp, %rdi
    00004f7d: 	subq	start_time(%rip), %rax
    00004f84: 	cvtsi2sd	%rax, %xmm0
    00004f89: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004f91: 	callq	_Z13record_resultdPKc # Offset: 20369
    00004f96: 	movq	0x90(%rsp), %rdi
    00004f9e: 	cmpq	%r13, %rdi
    00004fa1: 	je	.Ltmp5841 # Offset: 20385
    00004fa3: 	movq	0xa0(%rsp), %rax
    00004fab: 	leaq	0x1(%rax), %rsi
    00004faf: 	callq	_ZdlPvm@PLT # Offset: 20399
.Ltmp5841:
    00004fb4: 	leaq	DATAat0x579a4(%rip), %rdx
    00004fbb: 	movq	%r14, %rsi
    00004fbe: 	movq	%r12, %rdi
    00004fc1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20417
    00004fc6: 	movl	iterations(%rip), %edx
    00004fcc: 	xorl	%r8d, %r8d
    00004fcf: 	xorl	%ecx, %ecx
    00004fd1: 	movl	$0x1f40, %esi
    00004fd6: 	movq	0x90(%rsp), %rdi
    00004fde: 	callq	_Z9summarizePKciiii # Offset: 20446
    00004fe3: 	movq	0x90(%rsp), %rdi
    00004feb: 	cmpq	%r13, %rdi
    00004fee: 	je	.Ltmp5842 # Offset: 20462
    00004ff0: 	movq	0xa0(%rsp), %rax
    00004ff8: 	leaq	0x1(%rax), %rsi
    00004ffc: 	callq	_ZdlPvm@PLT # Offset: 20476
.Ltmp5842:
    00005001: 	movq	0x70(%rsp), %rdi
    00005006: 	leaq	0x80(%rsp), %rax
    0000500e: 	cmpq	%rax, %rdi
    00005011: 	je	.Ltmp5843 # Offset: 20497
    00005013: 	movq	0x80(%rsp), %rax
    0000501b: 	leaq	0x1(%rax), %rsi
    0000501f: 	callq	_ZdlPvm@PLT # Offset: 20511
.Ltmp5843:
    00005024: 	movq	0x50(%rsp), %rdi
    00005029: 	leaq	0x60(%rsp), %rax
    0000502e: 	cmpq	%rax, %rdi
    00005031: 	je	.Ltmp5844 # Offset: 20529
    00005033: 	movq	0x60(%rsp), %rax
    00005038: 	leaq	0x1(%rax), %rsi
    0000503c: 	callq	_ZdlPvm@PLT # Offset: 20540
.Ltmp5844:
    00005041: 	movq	0x30(%rsp), %rdi
    00005046: 	cmpq	0x8(%rsp), %rdi
    0000504b: 	je	.Ltmp5845 # Offset: 20555
    0000504d: 	movq	0x40(%rsp), %rax
    00005052: 	leaq	0x1(%rax), %rsi
    00005056: 	callq	_ZdlPvm@PLT # Offset: 20566
.Ltmp5845:
    0000505b: 	movq	0xfab8(%rsp), %rax
    00005063: 	subq	%fs:0x28, %rax
    0000506c: 	jne	.Ltmp5846 # Offset: 20588
    00005072: 	addq	$0xfac8, %rsp
    00005079: 	popq	%rbx
    0000507a: 	popq	%rbp
    0000507b: 	popq	%r12
    0000507d: 	popq	%r13
    0000507f: 	popq	%r14
    00005081: 	popq	%r15
    00005083: 	retq # Offset: 20611
    00005084: 	nopl	(%rax) # Size: 4
.Ltmp5621:
    00005088: 	negq	%rax
    0000508b: 	addq	$0x8, %rdx
    0000508f: 	sarq	$0x6, %rax
    00005093: 	subq	%rax, %rcx
    00005096: 	cmpq	%rbx, %rdx
    00005099: 	jne	.Ltmp5622 # Offset: 20633
    0000509f: 	jmp	.Ltmp5847 # Offset: 20639
    000050a4: 	nopl	(%rax) # Size: 4
.Ltmp5573:
    000050a8: 	negq	%rax
    000050ab: 	addq	$0x8, %rdx
    000050af: 	sarq	%rax
    000050b2: 	subq	%rax, %rcx
    000050b5: 	cmpq	%rdx, %rbx
    000050b8: 	jne	.Ltmp5574 # Offset: 20664
    000050be: 	jmp	.Ltmp5848 # Offset: 20670
    000050c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp5600:
    000050c8: 	negq	%rax
    000050cb: 	addq	$0x8, %rdx
    000050cf: 	sarq	$0x3, %rax
    000050d3: 	subq	%rax, %rcx
    000050d6: 	cmpq	%rbx, %rdx
    000050d9: 	jne	.Ltmp5601 # Offset: 20697
    000050df: 	jmp	.Ltmp5849 # Offset: 20703
    000050e4: 	nopl	(%rax) # Size: 4
.Ltmp5653:
    000050e8: 	addq	$0x8, %rax
    000050ec: 	subq	$0x1, %rsi
    000050f0: 	cmpq	%rbx, %rax
    000050f3: 	jne	.Ltmp5654 # Offset: 20723
    000050f9: 	jmp	.Ltmp5850 # Offset: 20729
    000050fe: 	nop # Size: 2
.Ltmp5643:
    00005100: 	addq	$0x8, %rax
    00005104: 	subq	$0x1, %rsi
    00005108: 	cmpq	%rbx, %rax
    0000510b: 	jne	.Ltmp5644 # Offset: 20747
    00005111: 	jmp	.Ltmp5851 # Offset: 20753
.Ltmp5445:
    00005116: 	movq	-0x8(%rdx), %rax
    0000511a: 	addq	$0x200, %rax
    00005120: 	jmp	.Ltmp5852 # Offset: 20768
.Ltmp5840:
    00005125: 	movq	-0x8(%rdx), %rax
    00005129: 	addq	$0x200, %rax
    0000512f: 	jmp	.Ltmp5853 # Offset: 20783
.Ltmp5833:
    00005134: 	movq	-0x8(%rdx), %rax
    00005138: 	addq	$0x200, %rax
    0000513e: 	jmp	.Ltmp5854 # Offset: 20798
.Ltmp5825:
    00005143: 	movq	-0x8(%rdx), %rax
    00005147: 	addq	$0x200, %rax
    0000514d: 	jmp	.Ltmp5855 # Offset: 20813
.Ltmp5819:
    00005152: 	movq	-0x8(%rdx), %rax
    00005156: 	addq	$0x200, %rax
    0000515c: 	jmp	.Ltmp5856 # Offset: 20828
.Ltmp5812:
    00005161: 	movq	-0x8(%rdx), %rax
    00005165: 	addq	$0x200, %rax
    0000516b: 	jmp	.Ltmp5857 # Offset: 20843
.Ltmp5804:
    00005170: 	movq	-0x8(%rdx), %rax
    00005174: 	addq	$0x200, %rax
    0000517a: 	jmp	.Ltmp5858 # Offset: 20858
.Ltmp5798:
    0000517f: 	movq	-0x8(%rdx), %rax
    00005183: 	addq	$0x200, %rax
    00005189: 	jmp	.Ltmp5859 # Offset: 20873
.Ltmp5791:
    0000518e: 	movq	-0x8(%rdx), %rax
    00005192: 	addq	$0x200, %rax
    00005198: 	jmp	.Ltmp5860 # Offset: 20888
.Ltmp5783:
    0000519d: 	movq	-0x8(%rdx), %rax
    000051a1: 	addq	$0x200, %rax
    000051a7: 	jmp	.Ltmp5861 # Offset: 20903
.Ltmp5777:
    000051ac: 	movq	-0x8(%rdx), %rax
    000051b0: 	addq	$0x200, %rax
    000051b6: 	jmp	.Ltmp5862 # Offset: 20918
.Ltmp5770:
    000051bb: 	movq	-0x8(%rdx), %rax
    000051bf: 	addq	$0x200, %rax
    000051c5: 	jmp	.Ltmp5863 # Offset: 20933
.Ltmp5762:
    000051ca: 	movq	-0x8(%rdx), %rax
    000051ce: 	addq	$0x200, %rax
    000051d4: 	jmp	.Ltmp5864 # Offset: 20948
.Ltmp5756:
    000051d9: 	movq	-0x8(%rdx), %rax
    000051dd: 	addq	$0x200, %rax
    000051e3: 	jmp	.Ltmp5865 # Offset: 20963
.Ltmp5749:
    000051e8: 	movq	-0x8(%rdx), %rax
    000051ec: 	addq	$0x200, %rax
    000051f2: 	jmp	.Ltmp5866 # Offset: 20978
.Ltmp5741:
    000051f7: 	movq	-0x8(%rdx), %rax
    000051fb: 	addq	$0x200, %rax
    00005201: 	jmp	.Ltmp5867 # Offset: 20993
.Ltmp5735:
    00005206: 	movq	-0x8(%rdx), %rax
    0000520a: 	addq	$0x200, %rax
    00005210: 	jmp	.Ltmp5868 # Offset: 21008
.Ltmp5728:
    00005215: 	movq	-0x8(%rdx), %rax
    00005219: 	addq	$0x200, %rax
    0000521f: 	jmp	.Ltmp5869 # Offset: 21023
.Ltmp5720:
    00005224: 	movq	-0x8(%rdx), %rax
    00005228: 	addq	$0x200, %rax
    0000522e: 	jmp	.Ltmp5870 # Offset: 21038
.Ltmp5714:
    00005233: 	movq	-0x8(%rdx), %rax
    00005237: 	addq	$0x200, %rax
    0000523d: 	jmp	.Ltmp5871 # Offset: 21053
.Ltmp5707:
    00005242: 	movq	-0x8(%rdx), %rax
    00005246: 	addq	$0x200, %rax
    0000524c: 	jmp	.Ltmp5872 # Offset: 21068
.Ltmp5699:
    00005251: 	movq	-0x8(%rdx), %rax
    00005255: 	addq	$0x200, %rax
    0000525b: 	jmp	.Ltmp5873 # Offset: 21083
.Ltmp5693:
    00005260: 	movq	-0x8(%rdx), %rax
    00005264: 	addq	$0x200, %rax
    0000526a: 	jmp	.Ltmp5874 # Offset: 21098
.Ltmp5686:
    0000526f: 	movq	-0x8(%rdx), %rax
    00005273: 	addq	$0x200, %rax
    00005279: 	jmp	.Ltmp5875 # Offset: 21113
.Ltmp5678:
    0000527e: 	movq	-0x8(%rdx), %rax
    00005282: 	addq	$0x200, %rax
    00005288: 	jmp	.Ltmp5876 # Offset: 21128
.Ltmp5672:
    0000528d: 	movq	-0x8(%rdx), %rax
    00005291: 	addq	$0x200, %rax
    00005297: 	jmp	.Ltmp5877 # Offset: 21143
.Ltmp5665:
    0000529c: 	movq	-0x8(%rdx), %rax
    000052a0: 	addq	$0x200, %rax
    000052a6: 	jmp	.Ltmp5878 # Offset: 21158
.Ltmp5659:
    000052ab: 	movq	-0x8(%rdx), %rax
    000052af: 	addq	$0x200, %rax
    000052b5: 	jmp	.Ltmp5879 # Offset: 21173
.Ltmp5649:
    000052ba: 	movq	-0x8(%rdx), %rax
    000052be: 	addq	$0x200, %rax
    000052c4: 	jmp	.Ltmp5880 # Offset: 21188
.Ltmp5639:
    000052c9: 	movq	-0x8(%rdx), %rax
    000052cd: 	addq	$0x200, %rax
    000052d3: 	jmp	.Ltmp5881 # Offset: 21203
.Ltmp5633:
    000052d8: 	movq	-0x8(%rdx), %rax
    000052dc: 	addq	$0x200, %rax
    000052e2: 	jmp	.Ltmp5882 # Offset: 21218
.Ltmp5626:
    000052e7: 	movq	-0x8(%rdx), %rax
    000052eb: 	addq	$0x200, %rax
    000052f1: 	jmp	.Ltmp5883 # Offset: 21233
.Ltmp5618:
    000052f6: 	movq	-0x8(%rdx), %rax
    000052fa: 	addq	$0x200, %rax
    00005300: 	jmp	.Ltmp5884 # Offset: 21248
.Ltmp5612:
    00005305: 	movq	-0x8(%rdx), %rax
    00005309: 	addq	$0x200, %rax
    0000530f: 	jmp	.Ltmp5885 # Offset: 21263
.Ltmp5605:
    00005314: 	movq	-0x8(%rdx), %rax
    00005318: 	addq	$0x200, %rax
    0000531e: 	jmp	.Ltmp5886 # Offset: 21278
.Ltmp5597:
    00005323: 	movq	-0x8(%rdx), %rax
    00005327: 	addq	$0x200, %rax
    0000532d: 	jmp	.Ltmp5887 # Offset: 21293
.Ltmp5591:
    00005332: 	movq	-0x8(%rdx), %rax
    00005336: 	addq	$0x200, %rax
    0000533c: 	jmp	.Ltmp5888 # Offset: 21308
.Ltmp5584:
    00005341: 	movq	-0x8(%rdx), %rax
    00005345: 	addq	$0x200, %rax
    0000534b: 	jmp	.Ltmp5889 # Offset: 21323
.Ltmp5578:
    00005350: 	movq	-0x8(%rdx), %rax
    00005354: 	addq	$0x200, %rax
    0000535a: 	jmp	.Ltmp5890 # Offset: 21338
.Ltmp5570:
    0000535f: 	movq	-0x8(%rdx), %rax
    00005363: 	addq	$0x200, %rax
    00005369: 	jmp	.Ltmp5891 # Offset: 21353
.Ltmp5564:
    0000536e: 	movq	-0x8(%rdx), %rax
    00005372: 	addq	$0x200, %rax
    00005378: 	jmp	.Ltmp5892 # Offset: 21368
.Ltmp5557:
    0000537d: 	movq	-0x8(%rdx), %rax
    00005381: 	addq	$0x200, %rax
    00005387: 	jmp	.Ltmp5893 # Offset: 21383
.Ltmp5550:
    0000538c: 	movq	-0x8(%rdx), %rax
    00005390: 	addq	$0x200, %rax
    00005396: 	jmp	.Ltmp5894 # Offset: 21398
.Ltmp5544:
    0000539b: 	movq	-0x8(%rdx), %rax
    0000539f: 	addq	$0x200, %rax
    000053a5: 	jmp	.Ltmp5895 # Offset: 21413
.Ltmp5538:
    000053aa: 	movq	-0x8(%rdx), %rax
    000053ae: 	addq	$0x200, %rax
    000053b4: 	jmp	.Ltmp5896 # Offset: 21428
.Ltmp5531:
    000053b9: 	movq	-0x8(%rdx), %rax
    000053bd: 	addq	$0x200, %rax
    000053c3: 	jmp	.Ltmp5897 # Offset: 21443
.Ltmp5525:
    000053c8: 	movq	-0x8(%rdx), %rax
    000053cc: 	addq	$0x200, %rax
    000053d2: 	jmp	.Ltmp5898 # Offset: 21458
.Ltmp5519:
    000053d7: 	movq	-0x8(%rdx), %rax
    000053db: 	addq	$0x200, %rax
    000053e1: 	jmp	.Ltmp5899 # Offset: 21473
.Ltmp5512:
    000053e6: 	movq	-0x8(%rdx), %rax
    000053ea: 	addq	$0x200, %rax
    000053f0: 	jmp	.Ltmp5900 # Offset: 21488
.Ltmp5506:
    000053f5: 	movq	-0x8(%rdx), %rax
    000053f9: 	addq	$0x200, %rax
    000053ff: 	jmp	.Ltmp5901 # Offset: 21503
.Ltmp5498:
    00005404: 	movq	-0x8(%rdx), %rax
    00005408: 	addq	$0x200, %rax
    0000540e: 	jmp	.Ltmp5902 # Offset: 21518
.Ltmp5491:
    00005413: 	movq	-0x8(%rdx), %rax
    00005417: 	addq	$0x200, %rax
    0000541d: 	jmp	.Ltmp5903 # Offset: 21533
.Ltmp5484:
    00005422: 	movq	-0x8(%rdx), %rax
    00005426: 	addq	$0x200, %rax
    0000542c: 	jmp	.Ltmp5904 # Offset: 21548
.Ltmp5478:
    00005431: 	movq	-0x8(%rdx), %rax
    00005435: 	addq	$0x200, %rax
    0000543b: 	jmp	.Ltmp5905 # Offset: 21563
.Ltmp5471:
    00005440: 	movq	-0x8(%rdx), %rax
    00005444: 	addq	$0x200, %rax
    0000544a: 	jmp	.Ltmp5906 # Offset: 21578
.Ltmp5464:
    0000544f: 	movq	-0x8(%rdx), %rax
    00005453: 	addq	$0x200, %rax
    00005459: 	jmp	.Ltmp5907 # Offset: 21593
.Ltmp5457:
    0000545e: 	movq	-0x8(%rdx), %rax
    00005462: 	addq	$0x200, %rax
    00005468: 	jmp	.Ltmp5908 # Offset: 21608
.Ltmp5451:
    0000546d: 	movq	-0x8(%rdx), %rax
    00005471: 	addq	$0x200, %rax
    00005477: 	jmp	.Ltmp5909 # Offset: 21623
.Ltmp5656:
    0000547c: 	movq	$-0x1f40, %rax
    00005483: 	jmp	.Ltmp5910 # Offset: 21635
.Ltmp5646:
    00005488: 	movq	$-0x1f40, %rax
    0000548f: 	jmp	.Ltmp5911 # Offset: 21647
.Ltmp5846:
    00005494: 	callq	__stack_chk_fail@PLT # Offset: 21652
    00005499: 	endbr64
.Ltmp5913:
    0000549d: 	movq	%rax, %rbx
    000054a0: 	jmp	.Ltmp5912 # Offset: 21664
    000054a5: 	endbr64
    000054a9: 	jmp	.Ltmp5913 # Offset: 21673
    000054ab: 	endbr64
    000054af: 	jmp	.Ltmp5913 # Offset: 21679
    000054b1: 	endbr64
    000054b5: 	jmp	.Ltmp5913 # Offset: 21685
    000054b7: 	endbr64
    000054bb: 	jmp	.Ltmp5913 # Offset: 21691
    000054bd: 	endbr64
    000054c1: 	jmp	.Ltmp5913 # Offset: 21697
    000054c3: 	endbr64
    000054c7: 	movq	%rax, %rbx
    000054ca: 	jmp	.Ltmp5914 # Offset: 21706
    000054cc: 	endbr64
    000054d0: 	movq	%rax, %rbx
    000054d3: 	jmp	.Ltmp5915 # Offset: 21715
.Ltmp5914:
    000054d8: 	movq	0x90(%rsp), %rdi
    000054e0: 	cmpq	%r13, %rdi
    000054e3: 	je	.Ltmp5916 # Offset: 21731
    000054e5: 	movq	0xa0(%rsp), %rax
    000054ed: 	leaq	0x1(%rax), %rsi
    000054f1: 	callq	_ZdlPvm@PLT # Offset: 21745
.Ltmp5916:
    000054f6: 	movq	0x70(%rsp), %rdi
    000054fb: 	leaq	0x80(%rsp), %rax
    00005503: 	cmpq	%rax, %rdi
    00005506: 	je	.Ltmp5917 # Offset: 21766
    00005508: 	movq	0x80(%rsp), %rax
    00005510: 	leaq	0x1(%rax), %rsi
    00005514: 	callq	_ZdlPvm@PLT # Offset: 21780
.Ltmp5917:
    00005519: 	movq	0x50(%rsp), %rdi
    0000551e: 	leaq	0x60(%rsp), %rax
    00005523: 	cmpq	%rax, %rdi
    00005526: 	je	.Ltmp5918 # Offset: 21798
    00005528: 	movq	0x60(%rsp), %rax
    0000552d: 	leaq	0x1(%rax), %rsi
    00005531: 	callq	_ZdlPvm@PLT # Offset: 21809
.Ltmp5918:
    00005536: 	movq	%rbx, %rbp
.Ltmp5926:
    00005539: 	movq	0x30(%rsp), %rdi
    0000553e: 	cmpq	0x8(%rsp), %rdi
    00005543: 	je	.Ltmp5919 # Offset: 21827
    00005545: 	movq	0x40(%rsp), %rax
    0000554a: 	leaq	0x1(%rax), %rsi
    0000554e: 	callq	_ZdlPvm@PLT # Offset: 21838
.Ltmp5919:
    00005553: 	movq	%rbp, %rdi
    00005556: 	callq	_Unwind_Resume@PLT # Offset: 21846
.Ltmp5915:
    0000555b: 	movq	0x90(%rsp), %rdi
    00005563: 	cmpq	%r13, %rdi
    00005566: 	je	.Ltmp5916 # Offset: 21862
    00005568: 	movq	0xa0(%rsp), %rax
    00005570: 	leaq	0x1(%rax), %rsi
    00005574: 	callq	_ZdlPvm@PLT # Offset: 21876
    00005579: 	jmp	.Ltmp5916 # Offset: 21881
    0000557e: 	endbr64
    00005582: 	movq	%rax, %rbx
    00005585: 	jmp	.Ltmp5920 # Offset: 21893
    00005587: 	endbr64
    0000558b: 	movq	%rax, %rbx
    0000558e: 	jmp	.Ltmp5921 # Offset: 21902
.Ltmp5920:
    00005590: 	movq	0x90(%rsp), %rdi
    00005598: 	cmpq	%r13, %rdi
    0000559b: 	je	.Ltmp5916 # Offset: 21915
    000055a1: 	movq	0xa0(%rsp), %rax
    000055a9: 	leaq	0x1(%rax), %rsi
    000055ad: 	callq	_ZdlPvm@PLT # Offset: 21933
    000055b2: 	jmp	.Ltmp5916 # Offset: 21938
.Ltmp5921:
    000055b7: 	movq	0x90(%rsp), %rdi
    000055bf: 	cmpq	%r13, %rdi
    000055c2: 	je	.Ltmp5916 # Offset: 21954
    000055c8: 	movq	0xa0(%rsp), %rax
    000055d0: 	leaq	0x1(%rax), %rsi
    000055d4: 	callq	_ZdlPvm@PLT # Offset: 21972
    000055d9: 	jmp	.Ltmp5916 # Offset: 21977
    000055de: 	endbr64
    000055e2: 	movq	%rax, %rbx
    000055e5: 	jmp	.Ltmp5922 # Offset: 21989
    000055e7: 	endbr64
    000055eb: 	movq	%rax, %rbx
    000055ee: 	jmp	.Ltmp5923 # Offset: 21998
.Ltmp5922:
    000055f0: 	movq	0x90(%rsp), %rdi
    000055f8: 	cmpq	%r13, %rdi
    000055fb: 	je	.Ltmp5916 # Offset: 22011
    00005601: 	movq	0xa0(%rsp), %rax
    00005609: 	leaq	0x1(%rax), %rsi
    0000560d: 	callq	_ZdlPvm@PLT # Offset: 22029
    00005612: 	jmp	.Ltmp5916 # Offset: 22034
.Ltmp5923:
    00005617: 	movq	0x90(%rsp), %rdi
    0000561f: 	cmpq	%r13, %rdi
    00005622: 	je	.Ltmp5916 # Offset: 22050
    00005628: 	movq	0xa0(%rsp), %rax
    00005630: 	leaq	0x1(%rax), %rsi
    00005634: 	callq	_ZdlPvm@PLT # Offset: 22068
    00005639: 	jmp	.Ltmp5916 # Offset: 22073
    0000563e: 	endbr64
    00005642: 	movq	%rax, %rbx
    00005645: 	jmp	.Ltmp5924 # Offset: 22085
    00005647: 	endbr64
.Ltmp5927:
    0000564b: 	movq	%rax, %rbp
    0000564e: 	jmp	.Ltmp5925 # Offset: 22094
.Ltmp5924:
    00005650: 	movq	0x90(%rsp), %rdi
    00005658: 	cmpq	%r13, %rdi
    0000565b: 	je	.Ltmp5916 # Offset: 22107
    00005661: 	movq	0xa0(%rsp), %rax
    00005669: 	leaq	0x1(%rax), %rsi
    0000566d: 	callq	_ZdlPvm@PLT # Offset: 22125
    00005672: 	jmp	.Ltmp5916 # Offset: 22130
.Ltmp5925:
    00005677: 	movq	0x90(%rsp), %rdi
    0000567f: 	cmpq	%r13, %rdi
    00005682: 	je	.Ltmp5926 # Offset: 22146
    00005688: 	movq	0xa0(%rsp), %rax
    00005690: 	leaq	0x1(%rax), %rsi
    00005694: 	callq	_ZdlPvm@PLT # Offset: 22164
    00005699: 	jmp	.Ltmp5926 # Offset: 22169
    0000569e: 	endbr64
    000056a2: 	jmp	.Ltmp5927 # Offset: 22178
    000056a4: 	endbr64
    000056a8: 	jmp	.Ltmp5927 # Offset: 22184
    000056aa: 	endbr64
    000056ae: 	jmp	.Ltmp5927 # Offset: 22190
    000056b0: 	endbr64
    000056b4: 	jmp	.Ltmp5927 # Offset: 22196
    000056b6: 	endbr64
    000056ba: 	movq	%rax, %rbx
    000056bd: 	jmp	.Ltmp5928 # Offset: 22205
    000056bf: 	endbr64
    000056c3: 	movq	%rax, %rbx
    000056c6: 	jmp	.Ltmp5929 # Offset: 22214
.Ltmp5928:
    000056c8: 	movq	0x90(%rsp), %rdi
    000056d0: 	cmpq	%r13, %rdi
    000056d3: 	je	.Ltmp5916 # Offset: 22227
    000056d9: 	movq	0xa0(%rsp), %rax
    000056e1: 	leaq	0x1(%rax), %rsi
    000056e5: 	callq	_ZdlPvm@PLT # Offset: 22245
    000056ea: 	jmp	.Ltmp5916 # Offset: 22250
.Ltmp5929:
    000056ef: 	movq	0x90(%rsp), %rdi
    000056f7: 	cmpq	%r13, %rdi
    000056fa: 	je	.Ltmp5916 # Offset: 22266
    00005700: 	movq	0xa0(%rsp), %rax
    00005708: 	leaq	0x1(%rax), %rsi
    0000570c: 	callq	_ZdlPvm@PLT # Offset: 22284
    00005711: 	jmp	.Ltmp5916 # Offset: 22289
    00005716: 	endbr64
    0000571a: 	movq	%rax, %rbx
    0000571d: 	jmp	.Ltmp5930 # Offset: 22301
    0000571f: 	endbr64
    00005723: 	movq	%rax, %rbx
    00005726: 	jmp	.Ltmp5931 # Offset: 22310
.Ltmp5930:
    00005728: 	movq	0x90(%rsp), %rdi
    00005730: 	cmpq	%r13, %rdi
    00005733: 	je	.Ltmp5916 # Offset: 22323
    00005739: 	movq	0xa0(%rsp), %rax
    00005741: 	leaq	0x1(%rax), %rsi
    00005745: 	callq	_ZdlPvm@PLT # Offset: 22341
    0000574a: 	jmp	.Ltmp5916 # Offset: 22346
.Ltmp5931:
    0000574f: 	movq	0x90(%rsp), %rdi
    00005757: 	cmpq	%r13, %rdi
    0000575a: 	je	.Ltmp5916 # Offset: 22362
    00005760: 	movq	0xa0(%rsp), %rax
    00005768: 	leaq	0x1(%rax), %rsi
    0000576c: 	callq	_ZdlPvm@PLT # Offset: 22380
    00005771: 	jmp	.Ltmp5916 # Offset: 22385
    00005776: 	endbr64
    0000577a: 	movq	%rax, %rbx
    0000577d: 	jmp	.Ltmp5932 # Offset: 22397
    0000577f: 	endbr64
    00005783: 	movq	%rax, %rbx
    00005786: 	jmp	.Ltmp5933 # Offset: 22406
.Ltmp5932:
    00005788: 	movq	0x90(%rsp), %rdi
    00005790: 	cmpq	%r13, %rdi
    00005793: 	je	.Ltmp5916 # Offset: 22419
    00005799: 	movq	0xa0(%rsp), %rax
    000057a1: 	leaq	0x1(%rax), %rsi
    000057a5: 	callq	_ZdlPvm@PLT # Offset: 22437
    000057aa: 	jmp	.Ltmp5916 # Offset: 22442
.Ltmp5933:
    000057af: 	movq	0x90(%rsp), %rdi
    000057b7: 	cmpq	%r13, %rdi
    000057ba: 	je	.Ltmp5916 # Offset: 22458
    000057c0: 	movq	0xa0(%rsp), %rax
    000057c8: 	leaq	0x1(%rax), %rsi
    000057cc: 	callq	_ZdlPvm@PLT # Offset: 22476
    000057d1: 	jmp	.Ltmp5916 # Offset: 22481
    000057d6: 	endbr64
    000057da: 	jmp	.Ltmp5927 # Offset: 22490
    000057df: 	endbr64
    000057e3: 	movq	%rax, %rbx
    000057e6: 	jmp	.Ltmp5934 # Offset: 22502
    000057e8: 	endbr64
    000057ec: 	movq	%rax, %rbx
    000057ef: 	jmp	.Ltmp5935 # Offset: 22511
    000057f1: 	endbr64
    000057f5: 	movq	%rax, %rbx
    000057f8: 	jmp	.Ltmp5936 # Offset: 22520
.Ltmp5934:
    000057fa: 	movq	0x90(%rsp), %rdi
    00005802: 	cmpq	%r13, %rdi
    00005805: 	je	.Ltmp5916 # Offset: 22533
    0000580b: 	movq	0xa0(%rsp), %rax
    00005813: 	leaq	0x1(%rax), %rsi
    00005817: 	callq	_ZdlPvm@PLT # Offset: 22551
    0000581c: 	jmp	.Ltmp5916 # Offset: 22556
.Ltmp5935:
    00005821: 	movq	0x90(%rsp), %rdi
    00005829: 	cmpq	%r13, %rdi
    0000582c: 	je	.Ltmp5916 # Offset: 22572
    00005832: 	movq	0xa0(%rsp), %rax
    0000583a: 	leaq	0x1(%rax), %rsi
    0000583e: 	callq	_ZdlPvm@PLT # Offset: 22590
    00005843: 	jmp	.Ltmp5916 # Offset: 22595
.Ltmp5936:
    00005848: 	movq	0x90(%rsp), %rdi
    00005850: 	cmpq	%r13, %rdi
    00005853: 	je	.Ltmp5916 # Offset: 22611
    00005859: 	movq	0xa0(%rsp), %rax
    00005861: 	leaq	0x1(%rax), %rsi
    00005865: 	callq	_ZdlPvm@PLT # Offset: 22629
    0000586a: 	jmp	.Ltmp5916 # Offset: 22634
    0000586f: 	endbr64
    00005873: 	movq	%rax, %rbx
    00005876: 	jmp	.Ltmp5937 # Offset: 22646
    00005878: 	endbr64
    0000587c: 	movq	%rax, %rbx
    0000587f: 	jmp	.Ltmp5938 # Offset: 22655
.Ltmp5937:
    00005881: 	movq	0x90(%rsp), %rdi
    00005889: 	cmpq	%r13, %rdi
    0000588c: 	je	.Ltmp5916 # Offset: 22668
    00005892: 	movq	0xa0(%rsp), %rax
    0000589a: 	leaq	0x1(%rax), %rsi
    0000589e: 	callq	_ZdlPvm@PLT # Offset: 22686
    000058a3: 	jmp	.Ltmp5916 # Offset: 22691
.Ltmp5938:
    000058a8: 	movq	0x90(%rsp), %rdi
    000058b0: 	cmpq	%r13, %rdi
    000058b3: 	je	.Ltmp5916 # Offset: 22707
    000058b9: 	movq	0xa0(%rsp), %rax
    000058c1: 	leaq	0x1(%rax), %rsi
    000058c5: 	callq	_ZdlPvm@PLT # Offset: 22725
    000058ca: 	jmp	.Ltmp5916 # Offset: 22730
    000058cf: 	endbr64
    000058d3: 	jmp	.Ltmp5913 # Offset: 22739
.Ltmp5912:
    000058d8: 	movq	0x90(%rsp), %rdi
    000058e0: 	cmpq	%r13, %rdi
    000058e3: 	je	.Ltmp5917 # Offset: 22755
    000058e9: 	movq	0xa0(%rsp), %rax
    000058f1: 	leaq	0x1(%rax), %rsi
    000058f5: 	callq	_ZdlPvm@PLT # Offset: 22773
    000058fa: 	jmp	.Ltmp5917 # Offset: 22778
    000058ff: 	endbr64
    00005903: 	movq	%rax, %rbx
    00005906: 	jmp	.Ltmp5939 # Offset: 22790
    0000590b: 	endbr64
    0000590f: 	movq	%rax, %rbx
    00005912: 	jmp	.Ltmp5940 # Offset: 22802
    00005914: 	endbr64
    00005918: 	movq	%rax, %rbx
    0000591b: 	jmp	.Ltmp5941 # Offset: 22811
    00005920: 	endbr64
    00005924: 	movq	%rax, %rbx
    00005927: 	movq	0x90(%rsp), %rdi
    0000592f: 	cmpq	%r13, %rdi
    00005932: 	je	.Ltmp5916 # Offset: 22834
    00005938: 	movq	0xa0(%rsp), %rax
    00005940: 	leaq	0x1(%rax), %rsi
    00005944: 	callq	_ZdlPvm@PLT # Offset: 22852
    00005949: 	jmp	.Ltmp5916 # Offset: 22857
    0000594e: 	endbr64
    00005952: 	movq	%rax, %rbx
    00005955: 	jmp	.Ltmp5942 # Offset: 22869
    00005957: 	endbr64
    0000595b: 	movq	%rax, %rbx
    0000595e: 	jmp	.Ltmp5943 # Offset: 22878
.Ltmp5940:
    00005963: 	movq	0x90(%rsp), %rdi
    0000596b: 	cmpq	%r13, %rdi
    0000596e: 	je	.Ltmp5916 # Offset: 22894
    00005974: 	movq	0xa0(%rsp), %rax
    0000597c: 	leaq	0x1(%rax), %rsi
    00005980: 	callq	_ZdlPvm@PLT # Offset: 22912
    00005985: 	jmp	.Ltmp5916 # Offset: 22917
.Ltmp5942:
    0000598a: 	movq	0x90(%rsp), %rdi
    00005992: 	cmpq	%r13, %rdi
    00005995: 	je	.Ltmp5916 # Offset: 22933
    0000599b: 	movq	0xa0(%rsp), %rax
    000059a3: 	leaq	0x1(%rax), %rsi
    000059a7: 	callq	_ZdlPvm@PLT # Offset: 22951
    000059ac: 	jmp	.Ltmp5916 # Offset: 22956
.Ltmp5939:
    000059b1: 	movq	0x90(%rsp), %rdi
    000059b9: 	cmpq	%r13, %rdi
    000059bc: 	je	.Ltmp5916 # Offset: 22972
    000059c2: 	movq	0xa0(%rsp), %rax
    000059ca: 	leaq	0x1(%rax), %rsi
    000059ce: 	callq	_ZdlPvm@PLT # Offset: 22990
    000059d3: 	jmp	.Ltmp5916 # Offset: 22995
.Ltmp5941:
    000059d8: 	movq	0x90(%rsp), %rdi
    000059e0: 	cmpq	%r13, %rdi
    000059e3: 	je	.Ltmp5916 # Offset: 23011
    000059e9: 	movq	0xa0(%rsp), %rax
    000059f1: 	leaq	0x1(%rax), %rsi
    000059f5: 	callq	_ZdlPvm@PLT # Offset: 23029
    000059fa: 	jmp	.Ltmp5916 # Offset: 23034
.Ltmp5943:
    000059ff: 	movq	0x90(%rsp), %rdi
    00005a07: 	cmpq	%r13, %rdi
    00005a0a: 	je	.Ltmp5916 # Offset: 23050
    00005a10: 	movq	0xa0(%rsp), %rax
    00005a18: 	leaq	0x1(%rax), %rsi
    00005a1c: 	callq	_ZdlPvm@PLT # Offset: 23068
    00005a21: 	jmp	.Ltmp5916 # Offset: 23073
    00005a26: 	endbr64
    00005a2a: 	jmp	.Ltmp5927 # Offset: 23082
    00005a2f: 	endbr64
    00005a33: 	jmp	.Ltmp5927 # Offset: 23091
    00005a38: 	endbr64
    00005a3c: 	jmp	.Ltmp5927 # Offset: 23100
    00005a41: 	endbr64
    00005a45: 	jmp	.Ltmp5927 # Offset: 23109
    00005a4a: 	endbr64
    00005a4e: 	jmp	.Ltmp5927 # Offset: 23118
    00005a53: 	endbr64
    00005a57: 	jmp	.Ltmp5927 # Offset: 23127
    00005a5c: 	endbr64
    00005a60: 	movq	%rax, %rbx
    00005a63: 	jmp	.Ltmp5917 # Offset: 23139
    00005a68: 	endbr64
    00005a6c: 	jmp	.Ltmp5927 # Offset: 23148
    00005a71: 	endbr64
    00005a75: 	jmp	.Ltmp5927 # Offset: 23157
    00005a7a: 	endbr64
    00005a7e: 	jmp	.Ltmp5927 # Offset: 23166
    00005a83: 	endbr64
    00005a87: 	jmp	.Ltmp5913 # Offset: 23175
    00005a8c: 	endbr64
    00005a90: 	jmp	.Ltmp5927 # Offset: 23184
    00005a95: 	endbr64
    00005a99: 	jmp	.Ltmp5927 # Offset: 23193
    00005a9e: 	endbr64
    00005aa2: 	jmp	.Ltmp5927 # Offset: 23202
    00005aa7: 	endbr64
    00005aab: 	jmp	.Ltmp5927 # Offset: 23211
    00005ab0: 	endbr64
    00005ab4: 	jmp	.Ltmp5927 # Offset: 23220
    00005ab9: 	endbr64
    00005abd: 	jmp	.Ltmp5927 # Offset: 23229
    00005ac2: 	endbr64
    00005ac6: 	jmp	.Ltmp5927 # Offset: 23238
    00005acb: 	endbr64
    00005acf: 	jmp	.Ltmp5927 # Offset: 23247
    00005ad4: 	endbr64
    00005ad8: 	movq	%rax, %rbx
    00005adb: 	jmp	.Ltmp5944 # Offset: 23259
    00005add: 	endbr64
    00005ae1: 	movq	%rax, %rbx
    00005ae4: 	jmp	.Ltmp5945 # Offset: 23268
    00005ae6: 	endbr64
    00005aea: 	jmp	.Ltmp5927 # Offset: 23274
    00005aef: 	endbr64
    00005af3: 	movq	%rax, %rbx
    00005af6: 	jmp	.Ltmp5946 # Offset: 23286
.Ltmp5944:
    00005af8: 	movq	0x90(%rsp), %rdi
    00005b00: 	cmpq	%r13, %rdi
    00005b03: 	je	.Ltmp5916 # Offset: 23299
    00005b09: 	movq	0xa0(%rsp), %rax
    00005b11: 	leaq	0x1(%rax), %rsi
    00005b15: 	callq	_ZdlPvm@PLT # Offset: 23317
    00005b1a: 	jmp	.Ltmp5916 # Offset: 23322
.Ltmp5946:
    00005b1f: 	movq	0x90(%rsp), %rdi
    00005b27: 	cmpq	%r13, %rdi
    00005b2a: 	je	.Ltmp5916 # Offset: 23338
    00005b30: 	movq	0xa0(%rsp), %rax
    00005b38: 	leaq	0x1(%rax), %rsi
    00005b3c: 	callq	_ZdlPvm@PLT # Offset: 23356
    00005b41: 	jmp	.Ltmp5916 # Offset: 23361
    00005b46: 	endbr64
    00005b4a: 	movq	%rax, %rbp
    00005b4d: 	jmp	.Ltmp5926 # Offset: 23373
.Ltmp5945:
    00005b52: 	movq	0x90(%rsp), %rdi
    00005b5a: 	cmpq	%r13, %rdi
    00005b5d: 	je	.Ltmp5916 # Offset: 23389
    00005b63: 	movq	0xa0(%rsp), %rax
    00005b6b: 	leaq	0x1(%rax), %rsi
    00005b6f: 	callq	_ZdlPvm@PLT # Offset: 23407
    00005b74: 	jmp	.Ltmp5916 # Offset: 23412
    00005b79: 	endbr64
    00005b7d: 	movq	%rax, %rbx
    00005b80: 	jmp	.Ltmp5947 # Offset: 23424
    00005b82: 	endbr64
    00005b86: 	movq	%rax, %rbx
    00005b89: 	jmp	.Ltmp5948 # Offset: 23433
    00005b8e: 	endbr64
    00005b92: 	movq	%rax, %rbx
    00005b95: 	jmp	.Ltmp5949 # Offset: 23445
    00005b9a: 	endbr64
    00005b9e: 	movq	%rax, %rbx
    00005ba1: 	jmp	.Ltmp5950 # Offset: 23457
    00005ba6: 	endbr64
    00005baa: 	movq	%rax, %rbx
    00005bad: 	jmp	.Ltmp5951 # Offset: 23469
    00005baf: 	endbr64
    00005bb3: 	movq	%rax, %rbx
    00005bb6: 	jmp	.Ltmp5952 # Offset: 23478
    00005bbb: 	endbr64
    00005bbf: 	movq	%rax, %rbx
    00005bc2: 	jmp	.Ltmp5953 # Offset: 23490
    00005bc7: 	endbr64
    00005bcb: 	movq	%rax, %rbx
    00005bce: 	jmp	.Ltmp5954 # Offset: 23502
.Ltmp5947:
    00005bd3: 	movq	0x90(%rsp), %rdi
    00005bdb: 	cmpq	%r13, %rdi
    00005bde: 	je	.Ltmp5916 # Offset: 23518
    00005be4: 	movq	0xa0(%rsp), %rax
    00005bec: 	leaq	0x1(%rax), %rsi
    00005bf0: 	callq	_ZdlPvm@PLT # Offset: 23536
    00005bf5: 	jmp	.Ltmp5916 # Offset: 23541
.Ltmp5951:
    00005bfa: 	movq	0x90(%rsp), %rdi
    00005c02: 	cmpq	%r13, %rdi
    00005c05: 	je	.Ltmp5916 # Offset: 23557
    00005c0b: 	movq	0xa0(%rsp), %rax
    00005c13: 	leaq	0x1(%rax), %rsi
    00005c17: 	callq	_ZdlPvm@PLT # Offset: 23575
    00005c1c: 	jmp	.Ltmp5916 # Offset: 23580
.Ltmp5949:
    00005c21: 	movq	0x90(%rsp), %rdi
    00005c29: 	cmpq	%r13, %rdi
    00005c2c: 	je	.Ltmp5916 # Offset: 23596
    00005c32: 	movq	0xa0(%rsp), %rax
    00005c3a: 	leaq	0x1(%rax), %rsi
    00005c3e: 	callq	_ZdlPvm@PLT # Offset: 23614
    00005c43: 	jmp	.Ltmp5916 # Offset: 23619
.Ltmp5953:
    00005c48: 	movq	0x90(%rsp), %rdi
    00005c50: 	cmpq	%r13, %rdi
    00005c53: 	je	.Ltmp5916 # Offset: 23635
    00005c59: 	movq	0xa0(%rsp), %rax
    00005c61: 	leaq	0x1(%rax), %rsi
    00005c65: 	callq	_ZdlPvm@PLT # Offset: 23653
    00005c6a: 	jmp	.Ltmp5916 # Offset: 23658
.Ltmp5948:
    00005c6f: 	movq	0x90(%rsp), %rdi
    00005c77: 	cmpq	%r13, %rdi
    00005c7a: 	je	.Ltmp5916 # Offset: 23674
    00005c80: 	movq	0xa0(%rsp), %rax
    00005c88: 	leaq	0x1(%rax), %rsi
    00005c8c: 	callq	_ZdlPvm@PLT # Offset: 23692
    00005c91: 	jmp	.Ltmp5916 # Offset: 23697
.Ltmp5952:
    00005c96: 	movq	0x90(%rsp), %rdi
    00005c9e: 	cmpq	%r13, %rdi
    00005ca1: 	je	.Ltmp5916 # Offset: 23713
    00005ca7: 	movq	0xa0(%rsp), %rax
    00005caf: 	leaq	0x1(%rax), %rsi
    00005cb3: 	callq	_ZdlPvm@PLT # Offset: 23731
    00005cb8: 	jmp	.Ltmp5916 # Offset: 23736
.Ltmp5950:
    00005cbd: 	movq	0x90(%rsp), %rdi
    00005cc5: 	cmpq	%r13, %rdi
    00005cc8: 	je	.Ltmp5916 # Offset: 23752
    00005cce: 	movq	0xa0(%rsp), %rax
    00005cd6: 	leaq	0x1(%rax), %rsi
    00005cda: 	callq	_ZdlPvm@PLT # Offset: 23770
    00005cdf: 	jmp	.Ltmp5916 # Offset: 23775
.Ltmp5954:
    00005ce4: 	movq	0x90(%rsp), %rdi
    00005cec: 	cmpq	%r13, %rdi
    00005cef: 	je	.Ltmp5916 # Offset: 23791
    00005cf5: 	movq	0xa0(%rsp), %rax
    00005cfd: 	leaq	0x1(%rax), %rsi
    00005d01: 	callq	_ZdlPvm@PLT # Offset: 23809
    00005d06: 	jmp	.Ltmp5916 # Offset: 23814
    00005d0b: 	endbr64
    00005d0f: 	movq	%rax, %rbx
    00005d12: 	jmp	.Ltmp5955 # Offset: 23826
    00005d14: 	endbr64
    00005d18: 	movq	%rax, %rbx
    00005d1b: 	jmp	.Ltmp5956 # Offset: 23835
.Ltmp5955:
    00005d1d: 	movq	0x90(%rsp), %rdi
    00005d25: 	cmpq	%r13, %rdi
    00005d28: 	je	.Ltmp5916 # Offset: 23848
    00005d2e: 	movq	0xa0(%rsp), %rax
    00005d36: 	leaq	0x1(%rax), %rsi
    00005d3a: 	callq	_ZdlPvm@PLT # Offset: 23866
    00005d3f: 	jmp	.Ltmp5916 # Offset: 23871
.Ltmp5956:
    00005d44: 	movq	0x90(%rsp), %rdi
    00005d4c: 	cmpq	%r13, %rdi
    00005d4f: 	je	.Ltmp5916 # Offset: 23887
    00005d55: 	movq	0xa0(%rsp), %rax
    00005d5d: 	leaq	0x1(%rax), %rsi
    00005d61: 	callq	_ZdlPvm@PLT # Offset: 23905
    00005d66: 	jmp	.Ltmp5916 # Offset: 23910
    00005d6b: 	endbr64
    00005d6f: 	jmp	.Ltmp5927 # Offset: 23919
    00005d74: 	endbr64
    00005d78: 	jmp	.Ltmp5927 # Offset: 23928
    00005d7d: 	endbr64
    00005d81: 	jmp	.Ltmp5927 # Offset: 23937
    00005d86: 	endbr64
    00005d8a: 	jmp	.Ltmp5927 # Offset: 23946
    00005d8f: 	endbr64
    00005d93: 	jmp	.Ltmp5913 # Offset: 23955
    00005d98: 	endbr64
    00005d9c: 	jmp	.Ltmp5913 # Offset: 23964
    00005da1: 	endbr64
    00005da5: 	jmp	.Ltmp5927 # Offset: 23973
    00005daa: 	endbr64
    00005dae: 	jmp	.Ltmp5927 # Offset: 23982
    00005db3: 	endbr64
    00005db7: 	jmp	.Ltmp5913 # Offset: 23991
    00005dbc: 	endbr64
    00005dc0: 	jmp	.Ltmp5913 # Offset: 24000
    00005dc5: 	endbr64
    00005dc9: 	movq	%rax, %rbx
    00005dcc: 	jmp	.Ltmp5916 # Offset: 24012
    00005dd1: 	endbr64
    00005dd5: 	jmp	.Ltmp5913 # Offset: 24021
    00005dda: 	endbr64
    00005dde: 	movq	%rax, %rbx
    00005de1: 	jmp	.Ltmp5957 # Offset: 24033
    00005de3: 	endbr64
    00005de7: 	movq	%rax, %rbx
    00005dea: 	jmp	.Ltmp5958 # Offset: 24042
.Ltmp5957:
    00005dec: 	movq	0x90(%rsp), %rdi
    00005df4: 	cmpq	%r13, %rdi
    00005df7: 	je	.Ltmp5916 # Offset: 24055
    00005dfd: 	movq	0xa0(%rsp), %rax
    00005e05: 	leaq	0x1(%rax), %rsi
    00005e09: 	callq	_ZdlPvm@PLT # Offset: 24073
    00005e0e: 	jmp	.Ltmp5916 # Offset: 24078
.Ltmp5958:
    00005e13: 	movq	0x90(%rsp), %rdi
    00005e1b: 	cmpq	%r13, %rdi
    00005e1e: 	je	.Ltmp5916 # Offset: 24094
    00005e24: 	movq	0xa0(%rsp), %rax
    00005e2c: 	leaq	0x1(%rax), %rsi
    00005e30: 	callq	_ZdlPvm@PLT # Offset: 24112
    00005e35: 	jmp	.Ltmp5916 # Offset: 24117
    00005e3a: 	endbr64
    00005e3e: 	movq	%rax, %rbx
    00005e41: 	jmp	.Ltmp5959 # Offset: 24129
    00005e43: 	endbr64
    00005e47: 	movq	%rax, %rbx
    00005e4a: 	jmp	.Ltmp5960 # Offset: 24138
.Ltmp5959:
    00005e4c: 	movq	0x90(%rsp), %rdi
    00005e54: 	cmpq	%r13, %rdi
    00005e57: 	je	.Ltmp5916 # Offset: 24151
    00005e5d: 	movq	0xa0(%rsp), %rax
    00005e65: 	leaq	0x1(%rax), %rsi
    00005e69: 	callq	_ZdlPvm@PLT # Offset: 24169
    00005e6e: 	jmp	.Ltmp5916 # Offset: 24174
.Ltmp5960:
    00005e73: 	movq	0x90(%rsp), %rdi
    00005e7b: 	cmpq	%r13, %rdi
    00005e7e: 	je	.Ltmp5916 # Offset: 24190
    00005e84: 	movq	0xa0(%rsp), %rax
    00005e8c: 	leaq	0x1(%rax), %rsi
    00005e90: 	callq	_ZdlPvm@PLT # Offset: 24208
    00005e95: 	jmp	.Ltmp5916 # Offset: 24213
    00005e9a: 	endbr64
    00005e9e: 	movq	%rax, %rbx
    00005ea1: 	jmp	.Ltmp5961 # Offset: 24225
    00005ea3: 	endbr64
    00005ea7: 	movq	%rax, %rbx
    00005eaa: 	jmp	.Ltmp5962 # Offset: 24234
.Ltmp5961:
    00005eac: 	movq	0x90(%rsp), %rdi
    00005eb4: 	cmpq	%r13, %rdi
    00005eb7: 	je	.Ltmp5916 # Offset: 24247
    00005ebd: 	movq	0xa0(%rsp), %rax
    00005ec5: 	leaq	0x1(%rax), %rsi
    00005ec9: 	callq	_ZdlPvm@PLT # Offset: 24265
    00005ece: 	jmp	.Ltmp5916 # Offset: 24270
.Ltmp5962:
    00005ed3: 	movq	0x90(%rsp), %rdi
    00005edb: 	cmpq	%r13, %rdi
    00005ede: 	je	.Ltmp5916 # Offset: 24286
    00005ee4: 	movq	0xa0(%rsp), %rax
    00005eec: 	leaq	0x1(%rax), %rsi
    00005ef0: 	callq	_ZdlPvm@PLT # Offset: 24304
    00005ef5: 	jmp	.Ltmp5916 # Offset: 24309
    00005efa: 	endbr64
    00005efe: 	movq	%rax, %rbx
    00005f01: 	jmp	.Ltmp5963 # Offset: 24321
    00005f03: 	endbr64
    00005f07: 	movq	%rax, %rbx
    00005f0a: 	jmp	.Ltmp5964 # Offset: 24330
.Ltmp5963:
    00005f0c: 	movq	0x90(%rsp), %rdi
    00005f14: 	cmpq	%r13, %rdi
    00005f17: 	je	.Ltmp5916 # Offset: 24343
    00005f1d: 	movq	0xa0(%rsp), %rax
    00005f25: 	leaq	0x1(%rax), %rsi
    00005f29: 	callq	_ZdlPvm@PLT # Offset: 24361
    00005f2e: 	jmp	.Ltmp5916 # Offset: 24366
.Ltmp5964:
    00005f33: 	movq	0x90(%rsp), %rdi
    00005f3b: 	cmpq	%r13, %rdi
    00005f3e: 	je	.Ltmp5916 # Offset: 24382
    00005f44: 	movq	0xa0(%rsp), %rax
    00005f4c: 	leaq	0x1(%rax), %rsi
    00005f50: 	callq	_ZdlPvm@PLT # Offset: 24400
    00005f55: 	jmp	.Ltmp5916 # Offset: 24405
    00005f5a: 	endbr64
    00005f5e: 	movq	%rax, %rbx
    00005f61: 	jmp	.Ltmp5965 # Offset: 24417
    00005f63: 	endbr64
    00005f67: 	movq	%rax, %rbx
    00005f6a: 	jmp	.Ltmp5966 # Offset: 24426
.Ltmp5965:
    00005f6c: 	movq	0x90(%rsp), %rdi
    00005f74: 	cmpq	%r13, %rdi
    00005f77: 	je	.Ltmp5916 # Offset: 24439
    00005f7d: 	movq	0xa0(%rsp), %rax
    00005f85: 	leaq	0x1(%rax), %rsi
    00005f89: 	callq	_ZdlPvm@PLT # Offset: 24457
    00005f8e: 	jmp	.Ltmp5916 # Offset: 24462
.Ltmp5966:
    00005f93: 	movq	0x90(%rsp), %rdi
    00005f9b: 	cmpq	%r13, %rdi
    00005f9e: 	je	.Ltmp5916 # Offset: 24478
    00005fa4: 	movq	0xa0(%rsp), %rax
    00005fac: 	leaq	0x1(%rax), %rsi
    00005fb0: 	callq	_ZdlPvm@PLT # Offset: 24496
    00005fb5: 	jmp	.Ltmp5916 # Offset: 24501
    00005fba: 	endbr64
    00005fbe: 	movq	%rax, %rbx
    00005fc1: 	jmp	.Ltmp5967 # Offset: 24513
    00005fc3: 	endbr64
    00005fc7: 	movq	%rax, %rbx
    00005fca: 	jmp	.Ltmp5968 # Offset: 24522
.Ltmp5967:
    00005fcc: 	movq	0x90(%rsp), %rdi
    00005fd4: 	cmpq	%r13, %rdi
    00005fd7: 	je	.Ltmp5916 # Offset: 24535
    00005fdd: 	movq	0xa0(%rsp), %rax
    00005fe5: 	leaq	0x1(%rax), %rsi
    00005fe9: 	callq	_ZdlPvm@PLT # Offset: 24553
    00005fee: 	jmp	.Ltmp5916 # Offset: 24558
.Ltmp5968:
    00005ff3: 	movq	0x90(%rsp), %rdi
    00005ffb: 	cmpq	%r13, %rdi
    00005ffe: 	je	.Ltmp5916 # Offset: 24574
    00006004: 	movq	0xa0(%rsp), %rax
    0000600c: 	leaq	0x1(%rax), %rsi
    00006010: 	callq	_ZdlPvm@PLT # Offset: 24592
    00006015: 	jmp	.Ltmp5916 # Offset: 24597
    0000601a: 	endbr64
    0000601e: 	movq	%rax, %rbx
    00006021: 	jmp	.Ltmp5969 # Offset: 24609
    00006023: 	endbr64
    00006027: 	movq	%rax, %rbx
    0000602a: 	jmp	.Ltmp5970 # Offset: 24618
.Ltmp5969:
    0000602c: 	movq	0x90(%rsp), %rdi
    00006034: 	cmpq	%r13, %rdi
    00006037: 	je	.Ltmp5916 # Offset: 24631
    0000603d: 	movq	0xa0(%rsp), %rax
    00006045: 	leaq	0x1(%rax), %rsi
    00006049: 	callq	_ZdlPvm@PLT # Offset: 24649
    0000604e: 	jmp	.Ltmp5916 # Offset: 24654
.Ltmp5970:
    00006053: 	movq	0x90(%rsp), %rdi
    0000605b: 	cmpq	%r13, %rdi
    0000605e: 	je	.Ltmp5916 # Offset: 24670
    00006064: 	movq	0xa0(%rsp), %rax
    0000606c: 	leaq	0x1(%rax), %rsi
    00006070: 	callq	_ZdlPvm@PLT # Offset: 24688
    00006075: 	jmp	.Ltmp5916 # Offset: 24693
    0000607a: 	endbr64
    0000607e: 	movq	%rax, %rbx
    00006081: 	jmp	.Ltmp5971 # Offset: 24705
    00006083: 	endbr64
    00006087: 	movq	%rax, %rbx
    0000608a: 	jmp	.Ltmp5972 # Offset: 24714
.Ltmp5971:
    0000608c: 	movq	0x90(%rsp), %rdi
    00006094: 	cmpq	%r13, %rdi
    00006097: 	je	.Ltmp5916 # Offset: 24727
    0000609d: 	movq	0xa0(%rsp), %rax
    000060a5: 	leaq	0x1(%rax), %rsi
    000060a9: 	callq	_ZdlPvm@PLT # Offset: 24745
    000060ae: 	jmp	.Ltmp5916 # Offset: 24750
.Ltmp5972:
    000060b3: 	movq	0x90(%rsp), %rdi
    000060bb: 	cmpq	%r13, %rdi
    000060be: 	je	.Ltmp5916 # Offset: 24766
    000060c4: 	movq	0xa0(%rsp), %rax
    000060cc: 	leaq	0x1(%rax), %rsi
    000060d0: 	callq	_ZdlPvm@PLT # Offset: 24784
    000060d5: 	jmp	.Ltmp5916 # Offset: 24789
    000060da: 	endbr64
    000060de: 	movq	%rax, %rbx
    000060e1: 	jmp	.Ltmp5973 # Offset: 24801
    000060e3: 	endbr64
    000060e7: 	movq	%rax, %rbx
    000060ea: 	jmp	.Ltmp5974 # Offset: 24810
.Ltmp5973:
    000060ec: 	movq	0x90(%rsp), %rdi
    000060f4: 	cmpq	%r13, %rdi
    000060f7: 	je	.Ltmp5916 # Offset: 24823
    000060fd: 	movq	0xa0(%rsp), %rax
    00006105: 	leaq	0x1(%rax), %rsi
    00006109: 	callq	_ZdlPvm@PLT # Offset: 24841
    0000610e: 	jmp	.Ltmp5916 # Offset: 24846
.Ltmp5974:
    00006113: 	movq	0x90(%rsp), %rdi
    0000611b: 	cmpq	%r13, %rdi
    0000611e: 	je	.Ltmp5916 # Offset: 24862
    00006124: 	movq	0xa0(%rsp), %rax
    0000612c: 	leaq	0x1(%rax), %rsi
    00006130: 	callq	_ZdlPvm@PLT # Offset: 24880
    00006135: 	jmp	.Ltmp5916 # Offset: 24885
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIlEvv"

Binary Function "_Z13test_constantIj27custom_multiply_shiftadd_42IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 202
  State       : disassembled
  Address     : 0x45e80
  Size        : 0x395
  MaxSize     : 0x3a0
  Offset      : 0x45e80
  Section     : .text
  Orc Section : .local.text._Z13test_constantIj27custom_multiply_shiftadd_42IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0201:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %esi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%esi, %esi
    00000041: 	jle	.Ltmp5975 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movl	%r15d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r15d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm5
    00000067: 	andl	$-0x4, %ebx
    0000006a: 	shrl	$0x2, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r13,%rax), %r14
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp5981:
    00000080: 	xorl	%edi, %edi
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp5976 # Offset: 133
    0000008b: 	cmpl	$0x2, 0x4(%rsp)
    00000090: 	jbe	.Ltmp5977 # Offset: 144
    00000096: 	movq	%r13, %rax
    00000099: 	pxor	%xmm2, %xmm2
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp5978:
    000000a0: 	movdqu	(%rax), %xmm1
    000000a4: 	addq	$0x10, %rax
    000000a8: 	movdqa	%xmm1, %xmm0
    000000ac: 	pslld	$0x2, %xmm0
    000000b1: 	movdqa	%xmm0, %xmm3
    000000b5: 	paddd	%xmm1, %xmm3
    000000b9: 	pslld	$0x1, %xmm1
    000000be: 	movdqa	%xmm3, %xmm4
    000000c2: 	pslld	$0x3, %xmm3
    000000c7: 	psubd	%xmm1, %xmm2
    000000cb: 	pslld	$0x4, %xmm4
    000000d0: 	paddd	%xmm4, %xmm0
    000000d4: 	psubd	%xmm3, %xmm0
    000000d8: 	paddd	%xmm0, %xmm2
    000000dc: 	cmpq	%rax, %r14
    000000df: 	jne	.Ltmp5978 # Offset: 223
    000000e1: 	movdqa	%xmm2, %xmm0
    000000e5: 	psrldq	$0x8, %xmm0
    000000ea: 	paddd	%xmm0, %xmm2
    000000ee: 	movdqa	%xmm2, %xmm0
    000000f2: 	psrldq	$0x4, %xmm0
    000000f7: 	paddd	%xmm0, %xmm2
    000000fb: 	movd	%xmm2, %edi
    000000ff: 	cmpl	%r15d, %ebx
    00000102: 	je	.Ltmp5976 # Offset: 258
    00000108: 	movl	%ebx, %edx
    0000010a: 	movl	%ebx, %eax
.Ltmp5989:
    0000010c: 	movl	%r15d, %ecx
    0000010f: 	subl	%edx, %ecx
    00000111: 	cmpl	$0x1, %ecx
    00000114: 	je	.Ltmp5979 # Offset: 276
    00000116: 	movq	(%r13,%rdx,4), %xmm2
    0000011d: 	movdqa	%xmm2, %xmm1
    00000121: 	movdqa	%xmm2, %xmm3
    00000125: 	movdqa	%xmm2, %xmm4
    00000129: 	pslld	$0x2, %xmm1
    0000012e: 	pslld	$0x1, %xmm3
    00000133: 	movdqa	%xmm1, %xmm0
    00000137: 	pslld	$0x5, %xmm4
    0000013c: 	paddd	%xmm2, %xmm1
    00000140: 	psubd	%xmm3, %xmm0
    00000144: 	movdqa	%xmm2, %xmm3
    00000148: 	pslld	$0x3, %xmm3
    0000014d: 	paddd	%xmm4, %xmm3
    00000151: 	pslld	$0x4, %xmm1
    00000156: 	psubd	%xmm3, %xmm0
    0000015a: 	paddd	%xmm1, %xmm0
    0000015e: 	movd	%xmm0, %r8d
    00000163: 	pshufd	$0xe5, %xmm0, %xmm6
    00000168: 	movd	%xmm6, %edx
    0000016c: 	addl	%r8d, %edx
    0000016f: 	addl	%edx, %edi
    00000171: 	movl	%ecx, %edx
    00000173: 	andl	$-0x2, %edx
    00000176: 	addl	%edx, %eax
    00000178: 	cmpl	%ecx, %edx
    0000017a: 	je	.Ltmp5976 # Offset: 378
.Ltmp5979:
    0000017c: 	cltq
    0000017e: 	movl	(%r13,%rax,4), %edx
    00000183: 	leal	(,%rdx,4), %eax
    0000018a: 	leal	(%rax,%rdx), %ecx
    0000018d: 	shll	$0x4, %ecx
    00000190: 	addl	%ecx, %eax
    00000192: 	movl	%edx, %ecx
    00000194: 	addl	%edi, %eax
    00000196: 	shll	$0x5, %ecx
    00000199: 	subl	%ecx, %eax
    0000019b: 	leal	(,%rdx,8), %ecx
    000001a2: 	addl	%edx, %edx
    000001a4: 	subl	%ecx, %eax
    000001a6: 	subl	%edx, %eax
    000001a8: 	movl	%eax, %edi
.Ltmp5976:
    000001aa: 	cvttsd2si	%xmm5, %rdx
    000001af: 	leal	(,%rdx,4), %eax
    000001b6: 	leal	(%rax,%rdx), %ecx
    000001b9: 	shll	$0x4, %ecx
    000001bc: 	addl	%ecx, %eax
    000001be: 	movl	%edx, %ecx
    000001c0: 	shll	$0x5, %ecx
    000001c3: 	subl	%ecx, %eax
    000001c5: 	leal	(,%rdx,8), %ecx
    000001cc: 	addl	%edx, %edx
    000001ce: 	subl	%ecx, %eax
    000001d0: 	subl	%edx, %eax
    000001d2: 	imull	$0x1f40, %eax, %eax
    000001d8: 	cmpl	%edi, %eax
    000001da: 	je	.Ltmp5980 # Offset: 474
    000001dc: 	movl	current_test(%rip), %edx
    000001e2: 	movq	%rbp, %rsi
    000001e5: 	movl	$0x1, %edi
    000001ea: 	xorl	%eax, %eax
    000001ec: 	addl	$0x1, %r12d
    000001f0: 	callq	__printf_chk@PLT # Offset: 496
    000001f5: 	movl	iterations(%rip), %esi
    000001fb: 	cmpl	%esi, %r12d
    000001fe: 	jge	.Ltmp5975 # Offset: 510
    00000200: 	movsd	init_value(%rip), %xmm5
    00000208: 	jmp	.Ltmp5981 # Offset: 520
    0000020d: 	nopl	(%rax) # Size: 3
.Ltmp5980:
    00000210: 	addl	$0x1, %r12d
    00000214: 	cmpl	%esi, %r12d
    00000217: 	jl	.Ltmp5981 # Offset: 535
.Ltmp5975:
    0000021d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000224: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000022b: 	subq	$0x20, %rax
    0000022f: 	cmpq	%rax, %rbx
    00000232: 	je	.Ltmp5982 # Offset: 562
    00000238: 	movq	0x8(%rsp), %rax
    0000023d: 	leaq	0x10(%rbx), %rdi
    00000241: 	movq	%rdi, (%rbx)
    00000244: 	movq	(%rax), %rbp
    00000247: 	movq	0x8(%rax), %r12
    0000024b: 	movq	%rbp, %rax
    0000024e: 	addq	%r12, %rax
    00000251: 	je	.Ltmp5983 # Offset: 593
    00000253: 	testq	%rbp, %rbp
    00000256: 	je	.Ltmp5984 # Offset: 598
.Ltmp5983:
    0000025c: 	movq	%r12, 0x10(%rsp)
    00000261: 	cmpq	$0xf, %r12
    00000265: 	ja	.Ltmp5985 # Offset: 613
    0000026b: 	cmpq	$0x1, %r12
    0000026f: 	jne	.Ltmp5986 # Offset: 623
    00000275: 	movzbl	(%rbp), %eax
    00000279: 	movb	%al, 0x10(%rbx)
.Ltmp5990:
    0000027c: 	movq	%r12, 0x8(%rbx)
    00000280: 	movb	$0x0, (%rdi,%r12)
    00000285: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000028c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000293: 	addq	$0x20, %rax
    00000297: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000029e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002a5: 	je	.Ltmp5987 # Offset: 677
.Ltmp5991:
    000002ab: 	movq	-0x20(%rax), %rbp
    000002af: 	callq	clock@PLT # Offset: 687
    000002b4: 	movq	%rax, end_time(%rip)
    000002bb: 	movq	0x18(%rsp), %rdx
    000002c0: 	subq	%fs:0x28, %rdx
    000002c9: 	jne	.Ltmp5988 # Offset: 713
    000002cf: 	subq	start_time(%rip), %rax
    000002d6: 	pxor	%xmm0, %xmm0
    000002da: 	movq	%rbp, %rdi
    000002dd: 	cvtsi2sd	%rax, %xmm0
    000002e2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002ea: 	addq	$0x28, %rsp
    000002ee: 	popq	%rbx
    000002ef: 	popq	%rbp
    000002f0: 	popq	%r12
    000002f2: 	popq	%r13
    000002f4: 	popq	%r14
    000002f6: 	popq	%r15
    000002f8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 760
.Ltmp5977:
    000002fd: 	xorl	%edx, %edx
    000002ff: 	xorl	%eax, %eax
    00000301: 	xorl	%edi, %edi
    00000303: 	jmp	.Ltmp5989 # Offset: 771
.Ltmp5985:
    00000308: 	movq	%rbx, %rdi
    0000030b: 	leaq	0x10(%rsp), %rsi
    00000310: 	xorl	%edx, %edx
    00000312: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 786
    00000317: 	movq	%rax, (%rbx)
    0000031a: 	movq	%rax, %rdi
    0000031d: 	movq	0x10(%rsp), %rax
    00000322: 	movq	%rax, 0x10(%rbx)
.Ltmp5992:
    00000326: 	movq	%r12, %rdx
    00000329: 	movq	%rbp, %rsi
    0000032c: 	callq	memcpy@PLT # Offset: 812
    00000331: 	movq	0x10(%rsp), %r12
    00000336: 	movq	(%rbx), %rdi
    00000339: 	jmp	.Ltmp5990 # Offset: 825
.Ltmp5982:
    0000033e: 	movq	0x8(%rsp), %rsi
    00000343: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000034a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 842
    0000034f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000356: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000035d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000364: 	jne	.Ltmp5991 # Offset: 868
.Ltmp5987:
    0000036a: 	movq	-0x8(%rdx), %rax
    0000036e: 	addq	$0x200, %rax
    00000374: 	jmp	.Ltmp5991 # Offset: 884
.Ltmp5986:
    00000379: 	testq	%r12, %r12
    0000037c: 	je	.Ltmp5990 # Offset: 892
    00000382: 	jmp	.Ltmp5992 # Offset: 898
.Ltmp5988:
    00000384: 	callq	__stack_chk_fail@PLT # Offset: 900
.Ltmp5984:
    00000389: 	leaq	DATAat0x57008(%rip), %rdi
    00000390: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 912
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIj27custom_multiply_shiftadd_42IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeIjEvv" after disassembly {
  Number      : 203
  State       : disassembled
  Address     : 0x46220
  Size        : 0x6a6e
  MaxSize     : 0x6a70
  Offset      : 0x46220
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIjEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0202:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x7000(%rsp), %r11
.Ltmp5993:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp5993 # Offset: 37
    00000027: 	subq	$0xdd8, %rsp
    0000002e: 	leaq	DATAat0x57a41(%rip), %rsi
    00000035: 	leaq	"_ZL7gLabels/1"(%rip), %r15
    0000003c: 	movq	%fs:0x28, %rax
    00000045: 	movq	%rax, 0x7dc8(%rsp)
    0000004d: 	xorl	%eax, %eax
    0000004f: 	leaq	0x40(%rsp), %r14
    00000054: 	leaq	0xc0(%rsp), %rbp
    0000005c: 	movq	%r14, %rdi
    0000005f: 	leaq	0x7dc0(%rsp), %rbx
    00000067: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 103
    0000006c: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm3
    00000074: 	leaq	0x20(%rsp), %rsi
    00000079: 	movq	%r15, %rdi
    0000007c: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    00000084: 	movaps	%xmm3, 0x20(%rsp)
    00000089: 	movaps	%xmm4, 0x30(%rsp)
    0000008e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 142
    00000093: 	cvttsd2si	init_value(%rip), %rax
    0000009c: 	movq	%rax, %xmm0
    000000a1: 	movq	%rbp, %rax
    000000a4: 	pshufd	$0x0, %xmm0, %xmm0
    000000a9: 	nopl	(%rax) # Size: 7
.Ltmp5994:
    000000b0: 	movaps	%xmm0, (%rax)
    000000b3: 	addq	$0x10, %rax
    000000b7: 	cmpq	%rax, %rbx
    000000ba: 	jne	.Ltmp5994 # Offset: 186
    000000bc: 	leaq	0xa0(%rsp), %r12
    000000c4: 	leaq	DATAat0x57a41(%rip), %rsi
    000000cb: 	movq	%r12, %rdi
    000000ce: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 206
    000000d3: 	movq	0xa0(%rsp), %rdi
    000000db: 	leaq	0xb0(%rsp), %r13
    000000e3: 	cmpq	%r13, %rdi
    000000e6: 	je	.Ltmp5995 # Offset: 230
    000000e8: 	movq	0xb0(%rsp), %rax
    000000f0: 	leaq	0x1(%rax), %rsi
    000000f4: 	callq	_ZdlPvm@PLT # Offset: 244
.Ltmp5995:
    000000f9: 	leaq	DATAat0x57a41(%rip), %rsi
    00000100: 	movq	%r12, %rdi
    00000103: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 259
    00000108: 	movq	0xa0(%rsp), %rdi
    00000110: 	cmpq	%r13, %rdi
    00000113: 	je	.Ltmp5996 # Offset: 275
    00000115: 	movq	0xb0(%rsp), %rax
    0000011d: 	leaq	0x1(%rax), %rsi
    00000121: 	callq	_ZdlPvm@PLT # Offset: 289
.Ltmp5996:
    00000126: 	leaq	DATAat0x57a41(%rip), %rsi
    0000012d: 	movq	%r12, %rdi
    00000130: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 304
    00000135: 	movq	0xa0(%rsp), %rdi
    0000013d: 	cmpq	%r13, %rdi
    00000140: 	je	.Ltmp5997 # Offset: 320
    00000142: 	movq	0xb0(%rsp), %rax
    0000014a: 	leaq	0x1(%rax), %rsi
    0000014e: 	callq	_ZdlPvm@PLT # Offset: 334
.Ltmp5997:
    00000153: 	leaq	DATAat0x57a41(%rip), %rsi
    0000015a: 	movq	%r12, %rdi
    0000015d: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 349
    00000162: 	movq	0xa0(%rsp), %rdi
    0000016a: 	cmpq	%r13, %rdi
    0000016d: 	je	.Ltmp5998 # Offset: 365
    0000016f: 	movq	0xb0(%rsp), %rax
    00000177: 	leaq	0x1(%rax), %rsi
    0000017b: 	callq	_ZdlPvm@PLT # Offset: 379
.Ltmp5998:
    00000180: 	leaq	DATAat0x57a41(%rip), %rsi
    00000187: 	movq	%r12, %rdi
    0000018a: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 394
    0000018f: 	movq	0xa0(%rsp), %rdi
    00000197: 	cmpq	%r13, %rdi
    0000019a: 	je	.Ltmp5999 # Offset: 410
    0000019c: 	movq	0xb0(%rsp), %rax
    000001a4: 	leaq	0x1(%rax), %rsi
    000001a8: 	callq	_ZdlPvm@PLT # Offset: 424
.Ltmp5999:
    000001ad: 	leaq	DATAat0x57a41(%rip), %rsi
    000001b4: 	movq	%r12, %rdi
    000001b7: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 439
    000001bc: 	movq	0xa0(%rsp), %rdi
    000001c4: 	cmpq	%r13, %rdi
    000001c7: 	je	.Ltmp6000 # Offset: 455
    000001c9: 	movq	0xb0(%rsp), %rax
    000001d1: 	leaq	0x1(%rax), %rsi
    000001d5: 	callq	_ZdlPvm@PLT # Offset: 469
.Ltmp6000:
    000001da: 	leaq	DATAat0x57a41(%rip), %rsi
    000001e1: 	movq	%r12, %rdi
    000001e4: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 484
    000001e9: 	movq	0xa0(%rsp), %rdi
    000001f1: 	cmpq	%r13, %rdi
    000001f4: 	je	.Ltmp6001 # Offset: 500
    000001f6: 	movq	0xb0(%rsp), %rax
    000001fe: 	leaq	0x1(%rax), %rsi
    00000202: 	callq	_ZdlPvm@PLT # Offset: 514
.Ltmp6001:
    00000207: 	leaq	DATAat0x57a41(%rip), %rsi
    0000020e: 	movq	%r12, %rdi
    00000211: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 529
    00000216: 	movq	0xa0(%rsp), %rdi
    0000021e: 	cmpq	%r13, %rdi
    00000221: 	je	.Ltmp6002 # Offset: 545
    00000223: 	movq	0xb0(%rsp), %rax
    0000022b: 	leaq	0x1(%rax), %rsi
    0000022f: 	callq	_ZdlPvm@PLT # Offset: 559
.Ltmp6002:
    00000234: 	leaq	DATAat0x57a41(%rip), %rsi
    0000023b: 	movq	%r12, %rdi
    0000023e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 574
    00000243: 	movq	0xa0(%rsp), %rdi
    0000024b: 	cmpq	%r13, %rdi
    0000024e: 	je	.Ltmp6003 # Offset: 590
    00000250: 	movq	0xb0(%rsp), %rax
    00000258: 	leaq	0x1(%rax), %rsi
    0000025c: 	callq	_ZdlPvm@PLT # Offset: 604
.Ltmp6003:
    00000261: 	leaq	DATAat0x57a41(%rip), %rsi
    00000268: 	movq	%r12, %rdi
    0000026b: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 619
    00000270: 	movq	0xa0(%rsp), %rdi
    00000278: 	cmpq	%r13, %rdi
    0000027b: 	je	.Ltmp6004 # Offset: 635
    0000027d: 	movq	0xb0(%rsp), %rax
    00000285: 	leaq	0x1(%rax), %rsi
    00000289: 	callq	_ZdlPvm@PLT # Offset: 649
.Ltmp6004:
    0000028e: 	leaq	DATAat0x57a41(%rip), %rsi
    00000295: 	movq	%r12, %rdi
    00000298: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 664
    0000029d: 	movq	0xa0(%rsp), %rdi
    000002a5: 	cmpq	%r13, %rdi
    000002a8: 	je	.Ltmp6005 # Offset: 680
    000002aa: 	movq	0xb0(%rsp), %rax
    000002b2: 	leaq	0x1(%rax), %rsi
    000002b6: 	callq	_ZdlPvm@PLT # Offset: 694
.Ltmp6005:
    000002bb: 	leaq	DATAat0x571e0(%rip), %rdx
    000002c2: 	movq	%r14, %rsi
    000002c5: 	movq	%r12, %rdi
    000002c8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 712
    000002cd: 	callq	clock@PLT # Offset: 717
    000002d2: 	movl	iterations(%rip), %ecx
    000002d8: 	movl	$0x0, (%rsp)
    000002df: 	movq	%rax, start_time(%rip)
    000002e6: 	testl	%ecx, %ecx
    000002e8: 	jle	.Ltmp6006 # Offset: 744
    000002ee: 	nop # Size: 2
.Ltmp6009:
    000002f0: 	movq	%rbp, %rax
    000002f3: 	pxor	%xmm1, %xmm1
    000002f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6007:
    00000300: 	movdqa	(%rax), %xmm0
    00000304: 	addq	$0x10, %rax
    00000308: 	pslld	$0x1, %xmm0
    0000030d: 	paddd	%xmm0, %xmm1
    00000311: 	cmpq	%rbx, %rax
    00000314: 	jne	.Ltmp6007 # Offset: 788
    00000316: 	cvttsd2si	init_value(%rip), %rdx
    0000031f: 	movdqa	%xmm1, %xmm0
    00000323: 	psrldq	$0x8, %xmm0
    00000328: 	paddd	%xmm0, %xmm1
    0000032c: 	movdqa	%xmm1, %xmm0
    00000330: 	addl	%edx, %edx
    00000332: 	psrldq	$0x4, %xmm0
    00000337: 	imull	$0x1f40, %edx, %edx
    0000033d: 	paddd	%xmm0, %xmm1
    00000341: 	movd	%xmm1, %eax
    00000345: 	cmpl	%eax, %edx
    00000347: 	je	.Ltmp6008 # Offset: 839
    00000349: 	movl	current_test(%rip), %edx
    0000034f: 	leaq	DATAat0x571d0(%rip), %rsi
    00000356: 	movl	$0x1, %edi
    0000035b: 	xorl	%eax, %eax
    0000035d: 	callq	__printf_chk@PLT # Offset: 861
    00000362: 	movl	iterations(%rip), %ecx
.Ltmp6008:
    00000368: 	addl	$0x1, (%rsp)
    0000036c: 	movl	(%rsp), %eax
    0000036f: 	cmpl	%ecx, %eax
    00000371: 	jl	.Ltmp6009 # Offset: 881
.Ltmp6006:
    00000377: 	movq	%r12, %rsi
    0000037a: 	movq	%r15, %rdi
    0000037d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 893
    00000382: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000389: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000390: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000397: 	je	.Ltmp6010 # Offset: 919
.Ltmp6418:
    0000039d: 	movq	-0x20(%rax), %rdi
    000003a1: 	movq	%rdi, (%rsp)
    000003a5: 	callq	clock@PLT # Offset: 933
    000003aa: 	movq	(%rsp), %rdi
    000003ae: 	pxor	%xmm0, %xmm0
    000003b2: 	movq	%rax, end_time(%rip)
    000003b9: 	subq	start_time(%rip), %rax
    000003c0: 	cvtsi2sd	%rax, %xmm0
    000003c5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000003cd: 	callq	_Z13record_resultdPKc # Offset: 973
    000003d2: 	movq	0xa0(%rsp), %rdi
    000003da: 	cmpq	%r13, %rdi
    000003dd: 	je	.Ltmp6011 # Offset: 989
    000003df: 	movq	0xb0(%rsp), %rax
    000003e7: 	leaq	0x1(%rax), %rsi
    000003eb: 	callq	_ZdlPvm@PLT # Offset: 1003
.Ltmp6011:
    000003f0: 	leaq	DATAat0x571f1(%rip), %rdx
    000003f7: 	movq	%r14, %rsi
    000003fa: 	movq	%r12, %rdi
    000003fd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1021
    00000402: 	callq	clock@PLT # Offset: 1026
    00000407: 	movl	iterations(%rip), %ecx
    0000040d: 	movl	$0x0, (%rsp)
    00000414: 	movq	%rax, start_time(%rip)
    0000041b: 	testl	%ecx, %ecx
    0000041d: 	jle	.Ltmp6012 # Offset: 1053
    00000423: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6015:
    00000428: 	movq	%rbp, %rax
    0000042b: 	pxor	%xmm1, %xmm1
    0000042f: 	nop # Size: 1
.Ltmp6013:
    00000430: 	movdqa	(%rax), %xmm0
    00000434: 	addq	$0x10, %rax
    00000438: 	pslld	$0x1, %xmm0
    0000043d: 	paddd	%xmm0, %xmm1
    00000441: 	cmpq	%rax, %rbx
    00000444: 	jne	.Ltmp6013 # Offset: 1092
    00000446: 	cvttsd2si	init_value(%rip), %rdx
    0000044f: 	movdqa	%xmm1, %xmm0
    00000453: 	psrldq	$0x8, %xmm0
    00000458: 	paddd	%xmm0, %xmm1
    0000045c: 	movdqa	%xmm1, %xmm0
    00000460: 	psrldq	$0x4, %xmm0
    00000465: 	imull	$0x3e80, %edx, %edx
    0000046b: 	paddd	%xmm0, %xmm1
    0000046f: 	movd	%xmm1, %eax
    00000473: 	cmpl	%eax, %edx
    00000475: 	je	.Ltmp6014 # Offset: 1141
    00000477: 	movl	current_test(%rip), %edx
    0000047d: 	leaq	DATAat0x571d0(%rip), %rsi
    00000484: 	movl	$0x1, %edi
    00000489: 	xorl	%eax, %eax
    0000048b: 	callq	__printf_chk@PLT # Offset: 1163
    00000490: 	movl	iterations(%rip), %ecx
.Ltmp6014:
    00000496: 	addl	$0x1, (%rsp)
    0000049a: 	movl	(%rsp), %eax
    0000049d: 	cmpl	%ecx, %eax
    0000049f: 	jl	.Ltmp6015 # Offset: 1183
.Ltmp6012:
    000004a1: 	movq	%r12, %rsi
    000004a4: 	movq	%r15, %rdi
    000004a7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1191
    000004ac: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004b3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000004ba: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004c1: 	je	.Ltmp6016 # Offset: 1217
.Ltmp6479:
    000004c7: 	movq	-0x20(%rax), %rdi
    000004cb: 	movq	%rdi, (%rsp)
    000004cf: 	callq	clock@PLT # Offset: 1231
    000004d4: 	movq	(%rsp), %rdi
    000004d8: 	pxor	%xmm0, %xmm0
    000004dc: 	movq	%rax, end_time(%rip)
    000004e3: 	subq	start_time(%rip), %rax
    000004ea: 	cvtsi2sd	%rax, %xmm0
    000004ef: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000004f7: 	callq	_Z13record_resultdPKc # Offset: 1271
    000004fc: 	movq	0xa0(%rsp), %rdi
    00000504: 	cmpq	%r13, %rdi
    00000507: 	je	.Ltmp6017 # Offset: 1287
    00000509: 	movq	0xb0(%rsp), %rax
    00000511: 	leaq	0x1(%rax), %rsi
    00000515: 	callq	_ZdlPvm@PLT # Offset: 1301
.Ltmp6017:
    0000051a: 	leaq	DATAat0x571fb(%rip), %rdx
    00000521: 	movq	%r14, %rsi
    00000524: 	movq	%r12, %rdi
    00000527: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1319
    0000052c: 	callq	clock@PLT # Offset: 1324
    00000531: 	movl	iterations(%rip), %ecx
    00000537: 	movl	$0x0, (%rsp)
    0000053e: 	movq	%rax, start_time(%rip)
    00000545: 	testl	%ecx, %ecx
    00000547: 	jle	.Ltmp6018 # Offset: 1351
    0000054d: 	nopl	(%rax) # Size: 3
.Ltmp6021:
    00000550: 	movq	%rbp, %rax
    00000553: 	pxor	%xmm1, %xmm1
    00000557: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6019:
    00000560: 	movdqa	(%rax), %xmm0
    00000564: 	addq	$0x10, %rax
    00000568: 	pslld	$0x1, %xmm0
    0000056d: 	paddd	%xmm0, %xmm1
    00000571: 	cmpq	%rbx, %rax
    00000574: 	jne	.Ltmp6019 # Offset: 1396
    00000576: 	cvttsd2si	init_value(%rip), %rdx
    0000057f: 	movdqa	%xmm1, %xmm0
    00000583: 	psrldq	$0x8, %xmm0
    00000588: 	paddd	%xmm0, %xmm1
    0000058c: 	movdqa	%xmm1, %xmm0
    00000590: 	psrldq	$0x4, %xmm0
    00000595: 	imull	$0x3e80, %edx, %edx
    0000059b: 	paddd	%xmm0, %xmm1
    0000059f: 	movd	%xmm1, %eax
    000005a3: 	cmpl	%eax, %edx
    000005a5: 	je	.Ltmp6020 # Offset: 1445
    000005a7: 	movl	current_test(%rip), %edx
    000005ad: 	leaq	DATAat0x571d0(%rip), %rsi
    000005b4: 	movl	$0x1, %edi
    000005b9: 	xorl	%eax, %eax
    000005bb: 	callq	__printf_chk@PLT # Offset: 1467
    000005c0: 	movl	iterations(%rip), %ecx
.Ltmp6020:
    000005c6: 	addl	$0x1, (%rsp)
    000005ca: 	movl	(%rsp), %eax
    000005cd: 	cmpl	%ecx, %eax
    000005cf: 	jl	.Ltmp6021 # Offset: 1487
.Ltmp6018:
    000005d5: 	movq	%r12, %rsi
    000005d8: 	movq	%r15, %rdi
    000005db: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1499
    000005e0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005e7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000005ee: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000005f5: 	je	.Ltmp6022 # Offset: 1525
.Ltmp6478:
    000005fb: 	movq	-0x20(%rax), %rdi
    000005ff: 	movq	%rdi, (%rsp)
    00000603: 	callq	clock@PLT # Offset: 1539
    00000608: 	movq	(%rsp), %rdi
    0000060c: 	pxor	%xmm0, %xmm0
    00000610: 	movq	%rax, end_time(%rip)
    00000617: 	subq	start_time(%rip), %rax
    0000061e: 	cvtsi2sd	%rax, %xmm0
    00000623: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000062b: 	callq	_Z13record_resultdPKc # Offset: 1579
    00000630: 	movq	0xa0(%rsp), %rdi
    00000638: 	cmpq	%r13, %rdi
    0000063b: 	je	.Ltmp6023 # Offset: 1595
    0000063d: 	movq	0xb0(%rsp), %rax
    00000645: 	leaq	0x1(%rax), %rsi
    00000649: 	callq	_ZdlPvm@PLT # Offset: 1609
.Ltmp6023:
    0000064e: 	leaq	DATAat0x57211(%rip), %rdx
    00000655: 	movq	%r14, %rsi
    00000658: 	movq	%r12, %rdi
    0000065b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1627
    00000660: 	movq	%r12, %rcx
    00000663: 	movl	$0x2, %edx
    00000668: 	movl	$0x1f40, %esi
    0000066d: 	movq	%rbp, %rdi
    00000670: 	callq	_Z14test_variable1Ij24custom_multiply_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1648
    00000675: 	movq	0xa0(%rsp), %rdi
    0000067d: 	cmpq	%r13, %rdi
    00000680: 	je	.Ltmp6024 # Offset: 1664
    00000682: 	movq	0xb0(%rsp), %rax
    0000068a: 	leaq	0x1(%rax), %rsi
    0000068e: 	callq	_ZdlPvm@PLT # Offset: 1678
.Ltmp6024:
    00000693: 	leaq	DATAat0x57229(%rip), %rdx
    0000069a: 	movq	%r14, %rsi
    0000069d: 	movq	%r12, %rdi
    000006a0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1696
    000006a5: 	callq	clock@PLT # Offset: 1701
    000006aa: 	movl	iterations(%rip), %ecx
    000006b0: 	movl	$0x0, (%rsp)
    000006b7: 	movq	%rax, start_time(%rip)
    000006be: 	testl	%ecx, %ecx
    000006c0: 	jle	.Ltmp6025 # Offset: 1728
    000006c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6028:
    000006c8: 	movq	%rbp, %rax
    000006cb: 	pxor	%xmm1, %xmm1
    000006cf: 	nop # Size: 1
.Ltmp6026:
    000006d0: 	movdqa	(%rax), %xmm0
    000006d4: 	addq	$0x10, %rax
    000006d8: 	pslld	$0x1, %xmm0
    000006dd: 	paddd	%xmm0, %xmm1
    000006e1: 	cmpq	%rax, %rbx
    000006e4: 	jne	.Ltmp6026 # Offset: 1764
    000006e6: 	cvttsd2si	init_value(%rip), %rdx
    000006ef: 	movdqa	%xmm1, %xmm0
    000006f3: 	psrldq	$0x8, %xmm0
    000006f8: 	paddd	%xmm0, %xmm1
    000006fc: 	movdqa	%xmm1, %xmm0
    00000700: 	psrldq	$0x4, %xmm0
    00000705: 	imull	$0x3e80, %edx, %edx
    0000070b: 	paddd	%xmm0, %xmm1
    0000070f: 	movd	%xmm1, %eax
    00000713: 	cmpl	%eax, %edx
    00000715: 	je	.Ltmp6027 # Offset: 1813
    00000717: 	movl	current_test(%rip), %edx
    0000071d: 	leaq	DATAat0x571d0(%rip), %rsi
    00000724: 	movl	$0x1, %edi
    00000729: 	xorl	%eax, %eax
    0000072b: 	callq	__printf_chk@PLT # Offset: 1835
    00000730: 	movl	iterations(%rip), %ecx
.Ltmp6027:
    00000736: 	addl	$0x1, (%rsp)
    0000073a: 	movl	(%rsp), %eax
    0000073d: 	cmpl	%ecx, %eax
    0000073f: 	jl	.Ltmp6028 # Offset: 1855
.Ltmp6025:
    00000741: 	movq	%r12, %rsi
    00000744: 	movq	%r15, %rdi
    00000747: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1863
    0000074c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000753: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000075a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000761: 	je	.Ltmp6029 # Offset: 1889
.Ltmp6477:
    00000767: 	movq	-0x20(%rax), %rdi
    0000076b: 	movq	%rdi, (%rsp)
    0000076f: 	callq	clock@PLT # Offset: 1903
    00000774: 	movq	(%rsp), %rdi
    00000778: 	pxor	%xmm0, %xmm0
    0000077c: 	movq	%rax, end_time(%rip)
    00000783: 	subq	start_time(%rip), %rax
    0000078a: 	cvtsi2sd	%rax, %xmm0
    0000078f: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000797: 	callq	_Z13record_resultdPKc # Offset: 1943
    0000079c: 	movq	0xa0(%rsp), %rdi
    000007a4: 	cmpq	%r13, %rdi
    000007a7: 	je	.Ltmp6030 # Offset: 1959
    000007a9: 	movq	0xb0(%rsp), %rax
    000007b1: 	leaq	0x1(%rax), %rsi
    000007b5: 	callq	_ZdlPvm@PLT # Offset: 1973
.Ltmp6030:
    000007ba: 	leaq	DATAat0x57241(%rip), %rdx
    000007c1: 	movq	%r14, %rsi
    000007c4: 	movq	%r12, %rdi
    000007c7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1991
    000007cc: 	movq	%r12, %rdx
    000007cf: 	movl	$0x1f40, %esi
    000007d4: 	movq	%rbp, %rdi
    000007d7: 	callq	_Z13test_constantIj26custom_multiply_shiftadd_2IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2007
    000007dc: 	movq	0xa0(%rsp), %rdi
    000007e4: 	cmpq	%r13, %rdi
    000007e7: 	je	.Ltmp6031 # Offset: 2023
    000007e9: 	movq	0xb0(%rsp), %rax
    000007f1: 	leaq	0x1(%rax), %rsi
    000007f5: 	callq	_ZdlPvm@PLT # Offset: 2037
.Ltmp6031:
    000007fa: 	leaq	DATAat0x57251(%rip), %rdx
    00000801: 	movq	%r14, %rsi
    00000804: 	movq	%r12, %rdi
    00000807: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2055
    0000080c: 	movq	%r12, %rdx
    0000080f: 	movl	$0x1f40, %esi
    00000814: 	movq	%rbp, %rdi
    00000817: 	callq	_Z13test_constantIj10shift_leftIjLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2071
    0000081c: 	movq	0xa0(%rsp), %rdi
    00000824: 	cmpq	%r13, %rdi
    00000827: 	je	.Ltmp6032 # Offset: 2087
    00000829: 	movq	0xb0(%rsp), %rax
    00000831: 	leaq	0x1(%rax), %rsi
    00000835: 	callq	_ZdlPvm@PLT # Offset: 2101
.Ltmp6032:
    0000083a: 	leaq	DATAat0x57262(%rip), %rdx
    00000841: 	movq	%r14, %rsi
    00000844: 	movq	%r12, %rdi
    00000847: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2119
    0000084c: 	movq	%r12, %rcx
    0000084f: 	movl	$0x8, %edx
    00000854: 	movl	$0x1f40, %esi
    00000859: 	movq	%rbp, %rdi
    0000085c: 	callq	_Z14test_variable1Ij24custom_multiply_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2140
    00000861: 	movq	0xa0(%rsp), %rdi
    00000869: 	cmpq	%r13, %rdi
    0000086c: 	je	.Ltmp6033 # Offset: 2156
    0000086e: 	movq	0xb0(%rsp), %rax
    00000876: 	leaq	0x1(%rax), %rsi
    0000087a: 	callq	_ZdlPvm@PLT # Offset: 2170
.Ltmp6033:
    0000087f: 	leaq	DATAat0x5727a(%rip), %rdx
    00000886: 	movq	%r14, %rsi
    00000889: 	movq	%r12, %rdi
    0000088c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2188
    00000891: 	callq	clock@PLT # Offset: 2193
    00000896: 	movl	iterations(%rip), %ecx
    0000089c: 	movl	$0x0, (%rsp)
    000008a3: 	movq	%rax, start_time(%rip)
    000008aa: 	testl	%ecx, %ecx
    000008ac: 	jle	.Ltmp6034 # Offset: 2220
    000008b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6037:
    000008b8: 	movq	%rbp, %rax
    000008bb: 	pxor	%xmm1, %xmm1
    000008bf: 	nop # Size: 1
.Ltmp6035:
    000008c0: 	movdqa	(%rax), %xmm0
    000008c4: 	addq	$0x10, %rax
    000008c8: 	pslld	$0x3, %xmm0
    000008cd: 	paddd	%xmm0, %xmm1
    000008d1: 	cmpq	%rbx, %rax
    000008d4: 	jne	.Ltmp6035 # Offset: 2260
    000008d6: 	cvttsd2si	init_value(%rip), %rdx
    000008df: 	movdqa	%xmm1, %xmm0
    000008e3: 	psrldq	$0x8, %xmm0
    000008e8: 	paddd	%xmm0, %xmm1
    000008ec: 	movdqa	%xmm1, %xmm0
    000008f0: 	psrldq	$0x4, %xmm0
    000008f5: 	imull	$0xfa00, %edx, %edx
    000008fb: 	paddd	%xmm0, %xmm1
    000008ff: 	movd	%xmm1, %eax
    00000903: 	cmpl	%eax, %edx
    00000905: 	je	.Ltmp6036 # Offset: 2309
    00000907: 	movl	current_test(%rip), %edx
    0000090d: 	leaq	DATAat0x571d0(%rip), %rsi
    00000914: 	movl	$0x1, %edi
    00000919: 	xorl	%eax, %eax
    0000091b: 	callq	__printf_chk@PLT # Offset: 2331
    00000920: 	movl	iterations(%rip), %ecx
.Ltmp6036:
    00000926: 	addl	$0x1, (%rsp)
    0000092a: 	movl	(%rsp), %eax
    0000092d: 	cmpl	%ecx, %eax
    0000092f: 	jl	.Ltmp6037 # Offset: 2351
.Ltmp6034:
    00000935: 	movq	%r12, %rsi
    00000938: 	movq	%r15, %rdi
    0000093b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2363
    00000940: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000947: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000094e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000955: 	je	.Ltmp6038 # Offset: 2389
.Ltmp6476:
    0000095b: 	movq	-0x20(%rax), %rdi
    0000095f: 	movq	%rdi, (%rsp)
    00000963: 	callq	clock@PLT # Offset: 2403
    00000968: 	movq	(%rsp), %rdi
    0000096c: 	pxor	%xmm0, %xmm0
    00000970: 	movq	%rax, end_time(%rip)
    00000977: 	subq	start_time(%rip), %rax
    0000097e: 	cvtsi2sd	%rax, %xmm0
    00000983: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000098b: 	callq	_Z13record_resultdPKc # Offset: 2443
    00000990: 	movq	0xa0(%rsp), %rdi
    00000998: 	cmpq	%r13, %rdi
    0000099b: 	je	.Ltmp6039 # Offset: 2459
    0000099d: 	movq	0xb0(%rsp), %rax
    000009a5: 	leaq	0x1(%rax), %rsi
    000009a9: 	callq	_ZdlPvm@PLT # Offset: 2473
.Ltmp6039:
    000009ae: 	leaq	DATAat0x57292(%rip), %rdx
    000009b5: 	movq	%r14, %rsi
    000009b8: 	movq	%r12, %rdi
    000009bb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2491
    000009c0: 	callq	clock@PLT # Offset: 2496
    000009c5: 	movl	iterations(%rip), %ecx
    000009cb: 	movl	$0x0, (%rsp)
    000009d2: 	movq	%rax, start_time(%rip)
    000009d9: 	testl	%ecx, %ecx
    000009db: 	jle	.Ltmp6040 # Offset: 2523
    000009e1: 	nopl	(%rax) # Size: 7
.Ltmp6043:
    000009e8: 	movq	%rbp, %rax
    000009eb: 	pxor	%xmm1, %xmm1
    000009ef: 	nop # Size: 1
.Ltmp6041:
    000009f0: 	movdqa	(%rax), %xmm0
    000009f4: 	addq	$0x10, %rax
    000009f8: 	pslld	$0x6, %xmm0
    000009fd: 	paddd	%xmm0, %xmm1
    00000a01: 	cmpq	%rax, %rbx
    00000a04: 	jne	.Ltmp6041 # Offset: 2564
    00000a06: 	cvttsd2si	init_value(%rip), %rdx
    00000a0f: 	movdqa	%xmm1, %xmm0
    00000a13: 	psrldq	$0x8, %xmm0
    00000a18: 	paddd	%xmm0, %xmm1
    00000a1c: 	movdqa	%xmm1, %xmm0
    00000a20: 	shll	$0x6, %edx
    00000a23: 	psrldq	$0x4, %xmm0
    00000a28: 	imull	$0x1f40, %edx, %edx
    00000a2e: 	paddd	%xmm0, %xmm1
    00000a32: 	movd	%xmm1, %eax
    00000a36: 	cmpl	%eax, %edx
    00000a38: 	je	.Ltmp6042 # Offset: 2616
    00000a3a: 	movl	current_test(%rip), %edx
    00000a40: 	leaq	DATAat0x571d0(%rip), %rsi
    00000a47: 	movl	$0x1, %edi
    00000a4c: 	xorl	%eax, %eax
    00000a4e: 	callq	__printf_chk@PLT # Offset: 2638
    00000a53: 	movl	iterations(%rip), %ecx
.Ltmp6042:
    00000a59: 	addl	$0x1, (%rsp)
    00000a5d: 	movl	(%rsp), %eax
    00000a60: 	cmpl	%ecx, %eax
    00000a62: 	jl	.Ltmp6043 # Offset: 2658
.Ltmp6040:
    00000a68: 	movq	%r12, %rsi
    00000a6b: 	movq	%r15, %rdi
    00000a6e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2670
    00000a73: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a7a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a81: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a88: 	je	.Ltmp6044 # Offset: 2696
.Ltmp6475:
    00000a8e: 	movq	-0x20(%rax), %rdi
    00000a92: 	movq	%rdi, (%rsp)
    00000a96: 	callq	clock@PLT # Offset: 2710
    00000a9b: 	movq	(%rsp), %rdi
    00000a9f: 	pxor	%xmm0, %xmm0
    00000aa3: 	movq	%rax, end_time(%rip)
    00000aaa: 	subq	start_time(%rip), %rax
    00000ab1: 	cvtsi2sd	%rax, %xmm0
    00000ab6: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000abe: 	callq	_Z13record_resultdPKc # Offset: 2750
    00000ac3: 	movq	0xa0(%rsp), %rdi
    00000acb: 	cmpq	%r13, %rdi
    00000ace: 	je	.Ltmp6045 # Offset: 2766
    00000ad0: 	movq	0xb0(%rsp), %rax
    00000ad8: 	leaq	0x1(%rax), %rsi
    00000adc: 	callq	_ZdlPvm@PLT # Offset: 2780
.Ltmp6045:
    00000ae1: 	leaq	DATAat0x572a3(%rip), %rdx
    00000ae8: 	movq	%r14, %rsi
    00000aeb: 	movq	%r12, %rdi
    00000aee: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2798
    00000af3: 	movq	%r12, %rcx
    00000af6: 	movl	$0x40, %edx
    00000afb: 	movl	$0x1f40, %esi
    00000b00: 	movq	%rbp, %rdi
    00000b03: 	callq	_Z14test_variable1Ij24custom_multiply_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2819
    00000b08: 	movq	0xa0(%rsp), %rdi
    00000b10: 	cmpq	%r13, %rdi
    00000b13: 	je	.Ltmp6046 # Offset: 2835
    00000b15: 	movq	0xb0(%rsp), %rax
    00000b1d: 	leaq	0x1(%rax), %rsi
    00000b21: 	callq	_ZdlPvm@PLT # Offset: 2849
.Ltmp6046:
    00000b26: 	leaq	DATAat0x572bc(%rip), %rdx
    00000b2d: 	movq	%r14, %rsi
    00000b30: 	movq	%r12, %rdi
    00000b33: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2867
    00000b38: 	callq	clock@PLT # Offset: 2872
    00000b3d: 	movl	iterations(%rip), %ecx
    00000b43: 	movl	$0x0, (%rsp)
    00000b4a: 	movq	%rax, start_time(%rip)
    00000b51: 	testl	%ecx, %ecx
    00000b53: 	jle	.Ltmp6047 # Offset: 2899
    00000b55: 	nopl	(%rax) # Size: 3
.Ltmp6050:
    00000b58: 	movq	%rbp, %rax
    00000b5b: 	pxor	%xmm1, %xmm1
    00000b5f: 	nop # Size: 1
.Ltmp6048:
    00000b60: 	movdqa	(%rax), %xmm0
    00000b64: 	addq	$0x10, %rax
    00000b68: 	pslld	$0x6, %xmm0
    00000b6d: 	paddd	%xmm0, %xmm1
    00000b71: 	cmpq	%rbx, %rax
    00000b74: 	jne	.Ltmp6048 # Offset: 2932
    00000b76: 	cvttsd2si	init_value(%rip), %rdx
    00000b7f: 	movdqa	%xmm1, %xmm0
    00000b83: 	psrldq	$0x8, %xmm0
    00000b88: 	paddd	%xmm0, %xmm1
    00000b8c: 	movdqa	%xmm1, %xmm0
    00000b90: 	psrldq	$0x4, %xmm0
    00000b95: 	imull	$0x7d000, %edx, %edx
    00000b9b: 	paddd	%xmm0, %xmm1
    00000b9f: 	movd	%xmm1, %eax
    00000ba3: 	cmpl	%eax, %edx
    00000ba5: 	je	.Ltmp6049 # Offset: 2981
    00000ba7: 	movl	current_test(%rip), %edx
    00000bad: 	leaq	DATAat0x571d0(%rip), %rsi
    00000bb4: 	movl	$0x1, %edi
    00000bb9: 	xorl	%eax, %eax
    00000bbb: 	callq	__printf_chk@PLT # Offset: 3003
    00000bc0: 	movl	iterations(%rip), %ecx
.Ltmp6049:
    00000bc6: 	addl	$0x1, (%rsp)
    00000bca: 	movl	(%rsp), %eax
    00000bcd: 	cmpl	%ecx, %eax
    00000bcf: 	jl	.Ltmp6050 # Offset: 3023
.Ltmp6047:
    00000bd1: 	movq	%r12, %rsi
    00000bd4: 	movq	%r15, %rdi
    00000bd7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3031
    00000bdc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000be3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000bea: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000bf1: 	je	.Ltmp6051 # Offset: 3057
.Ltmp6474:
    00000bf7: 	movq	-0x20(%rax), %rdi
    00000bfb: 	movq	%rdi, (%rsp)
    00000bff: 	callq	clock@PLT # Offset: 3071
    00000c04: 	movq	(%rsp), %rdi
    00000c08: 	pxor	%xmm0, %xmm0
    00000c0c: 	movq	%rax, end_time(%rip)
    00000c13: 	subq	start_time(%rip), %rax
    00000c1a: 	cvtsi2sd	%rax, %xmm0
    00000c1f: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000c27: 	callq	_Z13record_resultdPKc # Offset: 3111
    00000c2c: 	movq	0xa0(%rsp), %rdi
    00000c34: 	cmpq	%r13, %rdi
    00000c37: 	je	.Ltmp6052 # Offset: 3127
    00000c39: 	movq	0xb0(%rsp), %rax
    00000c41: 	leaq	0x1(%rax), %rsi
    00000c45: 	callq	_ZdlPvm@PLT # Offset: 3141
.Ltmp6052:
    00000c4a: 	leaq	DATAat0x572d5(%rip), %rdx
    00000c51: 	movq	%r14, %rsi
    00000c54: 	movq	%r12, %rdi
    00000c57: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3159
    00000c5c: 	movq	%r12, %rcx
    00000c5f: 	movl	$0x2a, %edx
    00000c64: 	movl	$0x1f40, %esi
    00000c69: 	movq	%rbp, %rdi
    00000c6c: 	callq	_Z14test_variable1Ij24custom_multiply_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3180
    00000c71: 	movq	0xa0(%rsp), %rdi
    00000c79: 	cmpq	%r13, %rdi
    00000c7c: 	je	.Ltmp6053 # Offset: 3196
    00000c7e: 	movq	0xb0(%rsp), %rax
    00000c86: 	leaq	0x1(%rax), %rsi
    00000c8a: 	callq	_ZdlPvm@PLT # Offset: 3210
.Ltmp6053:
    00000c8f: 	leaq	DATAat0x572ee(%rip), %rdx
    00000c96: 	movq	%r14, %rsi
    00000c99: 	movq	%r12, %rdi
    00000c9c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3228
    00000ca1: 	callq	clock@PLT # Offset: 3233
    00000ca6: 	movl	iterations(%rip), %ecx
    00000cac: 	movl	$0x0, (%rsp)
    00000cb3: 	movq	%rax, start_time(%rip)
    00000cba: 	testl	%ecx, %ecx
    00000cbc: 	jle	.Ltmp6054 # Offset: 3260
    00000cc2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6057:
    00000cc8: 	movq	%rbp, %rax
    00000ccb: 	pxor	%xmm2, %xmm2
    00000ccf: 	nop # Size: 1
.Ltmp6055:
    00000cd0: 	movdqa	(%rax), %xmm1
    00000cd4: 	addq	$0x10, %rax
    00000cd8: 	movdqa	%xmm1, %xmm0
    00000cdc: 	pslld	$0x2, %xmm0
    00000ce1: 	paddd	%xmm1, %xmm0
    00000ce5: 	pslld	$0x2, %xmm0
    00000cea: 	paddd	%xmm1, %xmm0
    00000cee: 	pslld	$0x1, %xmm0
    00000cf3: 	paddd	%xmm0, %xmm2
    00000cf7: 	cmpq	%rax, %rbx
    00000cfa: 	jne	.Ltmp6055 # Offset: 3322
    00000cfc: 	cvttsd2si	init_value(%rip), %rdx
    00000d05: 	movdqa	%xmm2, %xmm0
    00000d09: 	psrldq	$0x8, %xmm0
    00000d0e: 	paddd	%xmm0, %xmm2
    00000d12: 	movdqa	%xmm2, %xmm0
    00000d16: 	psrldq	$0x4, %xmm0
    00000d1b: 	imull	$0x52080, %edx, %edx
    00000d21: 	paddd	%xmm0, %xmm2
    00000d25: 	movd	%xmm2, %eax
    00000d29: 	cmpl	%eax, %edx
    00000d2b: 	je	.Ltmp6056 # Offset: 3371
    00000d2d: 	movl	current_test(%rip), %edx
    00000d33: 	leaq	DATAat0x571d0(%rip), %rsi
    00000d3a: 	movl	$0x1, %edi
    00000d3f: 	xorl	%eax, %eax
    00000d41: 	callq	__printf_chk@PLT # Offset: 3393
    00000d46: 	movl	iterations(%rip), %ecx
.Ltmp6056:
    00000d4c: 	addl	$0x1, (%rsp)
    00000d50: 	movl	(%rsp), %eax
    00000d53: 	cmpl	%ecx, %eax
    00000d55: 	jl	.Ltmp6057 # Offset: 3413
.Ltmp6054:
    00000d5b: 	movq	%r12, %rsi
    00000d5e: 	movq	%r15, %rdi
    00000d61: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3425
    00000d66: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d6d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d74: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d7b: 	je	.Ltmp6058 # Offset: 3451
.Ltmp6473:
    00000d81: 	movq	-0x20(%rax), %rdi
    00000d85: 	movq	%rdi, (%rsp)
    00000d89: 	callq	clock@PLT # Offset: 3465
    00000d8e: 	movq	(%rsp), %rdi
    00000d92: 	pxor	%xmm0, %xmm0
    00000d96: 	movq	%rax, end_time(%rip)
    00000d9d: 	subq	start_time(%rip), %rax
    00000da4: 	cvtsi2sd	%rax, %xmm0
    00000da9: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000db1: 	callq	_Z13record_resultdPKc # Offset: 3505
    00000db6: 	movq	0xa0(%rsp), %rdi
    00000dbe: 	cmpq	%r13, %rdi
    00000dc1: 	je	.Ltmp6059 # Offset: 3521
    00000dc3: 	movq	0xb0(%rsp), %rax
    00000dcb: 	leaq	0x1(%rax), %rsi
    00000dcf: 	callq	_ZdlPvm@PLT # Offset: 3535
.Ltmp6059:
    00000dd4: 	leaq	DATAat0x57307(%rip), %rdx
    00000ddb: 	movq	%r14, %rsi
    00000dde: 	movq	%r12, %rdi
    00000de1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3553
    00000de6: 	movq	%r12, %rdx
    00000de9: 	movl	$0x1f40, %esi
    00000dee: 	movq	%rbp, %rdi
    00000df1: 	callq	_Z13test_constantIj27custom_multiply_shiftadd_42IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3569
    00000df6: 	movq	0xa0(%rsp), %rdi
    00000dfe: 	cmpq	%r13, %rdi
    00000e01: 	je	.Ltmp6060 # Offset: 3585
    00000e03: 	movq	0xb0(%rsp), %rax
    00000e0b: 	leaq	0x1(%rax), %rsi
    00000e0f: 	callq	_ZdlPvm@PLT # Offset: 3599
.Ltmp6060:
    00000e14: 	leaq	DATAat0x57318(%rip), %rdx
    00000e1b: 	movq	%r14, %rsi
    00000e1e: 	movq	%r12, %rdi
    00000e21: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3617
    00000e26: 	movq	%r12, %rcx
    00000e29: 	movl	$0x3f, %edx
    00000e2e: 	movl	$0x1f40, %esi
    00000e33: 	movq	%rbp, %rdi
    00000e36: 	callq	_Z14test_variable1Ij24custom_multiply_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3638
    00000e3b: 	movq	0xa0(%rsp), %rdi
    00000e43: 	cmpq	%r13, %rdi
    00000e46: 	je	.Ltmp6061 # Offset: 3654
    00000e48: 	movq	0xb0(%rsp), %rax
    00000e50: 	leaq	0x1(%rax), %rsi
    00000e54: 	callq	_ZdlPvm@PLT # Offset: 3668
.Ltmp6061:
    00000e59: 	leaq	DATAat0x57331(%rip), %rdx
    00000e60: 	movq	%r14, %rsi
    00000e63: 	movq	%r12, %rdi
    00000e66: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3686
    00000e6b: 	callq	clock@PLT # Offset: 3691
    00000e70: 	movl	iterations(%rip), %ecx
    00000e76: 	movl	$0x0, (%rsp)
    00000e7d: 	movq	%rax, start_time(%rip)
    00000e84: 	testl	%ecx, %ecx
    00000e86: 	jle	.Ltmp6062 # Offset: 3718
    00000e8c: 	nopl	(%rax) # Size: 4
.Ltmp6065:
    00000e90: 	movq	%rbp, %rax
    00000e93: 	pxor	%xmm1, %xmm1
    00000e97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6063:
    00000ea0: 	movdqa	(%rax), %xmm0
    00000ea4: 	addq	$0x10, %rax
    00000ea8: 	pslld	$0x6, %xmm0
    00000ead: 	psubd	-0x10(%rax), %xmm0
    00000eb2: 	paddd	%xmm0, %xmm1
    00000eb6: 	cmpq	%rbx, %rax
    00000eb9: 	jne	.Ltmp6063 # Offset: 3769
    00000ebb: 	cvttsd2si	init_value(%rip), %rdx
    00000ec4: 	movdqa	%xmm1, %xmm0
    00000ec8: 	psrldq	$0x8, %xmm0
    00000ecd: 	paddd	%xmm0, %xmm1
    00000ed1: 	movdqa	%xmm1, %xmm0
    00000ed5: 	psrldq	$0x4, %xmm0
    00000eda: 	imull	$0x7b0c0, %edx, %edx
    00000ee0: 	paddd	%xmm0, %xmm1
    00000ee4: 	movd	%xmm1, %eax
    00000ee8: 	cmpl	%eax, %edx
    00000eea: 	je	.Ltmp6064 # Offset: 3818
    00000eec: 	movl	current_test(%rip), %edx
    00000ef2: 	leaq	DATAat0x571d0(%rip), %rsi
    00000ef9: 	movl	$0x1, %edi
    00000efe: 	xorl	%eax, %eax
    00000f00: 	callq	__printf_chk@PLT # Offset: 3840
    00000f05: 	movl	iterations(%rip), %ecx
.Ltmp6064:
    00000f0b: 	addl	$0x1, (%rsp)
    00000f0f: 	movl	(%rsp), %eax
    00000f12: 	cmpl	%ecx, %eax
    00000f14: 	jl	.Ltmp6065 # Offset: 3860
.Ltmp6062:
    00000f1a: 	movq	%r12, %rsi
    00000f1d: 	movq	%r15, %rdi
    00000f20: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3872
    00000f25: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f2c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f33: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f3a: 	je	.Ltmp6066 # Offset: 3898
.Ltmp6472:
    00000f40: 	movq	-0x20(%rax), %rdi
    00000f44: 	movq	%rdi, (%rsp)
    00000f48: 	callq	clock@PLT # Offset: 3912
    00000f4d: 	movq	(%rsp), %rdi
    00000f51: 	pxor	%xmm0, %xmm0
    00000f55: 	movq	%rax, end_time(%rip)
    00000f5c: 	subq	start_time(%rip), %rax
    00000f63: 	cvtsi2sd	%rax, %xmm0
    00000f68: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000f70: 	callq	_Z13record_resultdPKc # Offset: 3952
    00000f75: 	movq	0xa0(%rsp), %rdi
    00000f7d: 	cmpq	%r13, %rdi
    00000f80: 	je	.Ltmp6067 # Offset: 3968
    00000f82: 	movq	0xb0(%rsp), %rax
    00000f8a: 	leaq	0x1(%rax), %rsi
    00000f8e: 	callq	_ZdlPvm@PLT # Offset: 3982
.Ltmp6067:
    00000f93: 	leaq	DATAat0x5734a(%rip), %rdx
    00000f9a: 	movq	%r14, %rsi
    00000f9d: 	movq	%r12, %rdi
    00000fa0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4000
    00000fa5: 	movq	%r12, %rdx
    00000fa8: 	movl	$0x1f40, %esi
    00000fad: 	movq	%rbp, %rdi
    00000fb0: 	callq	_Z13test_constantIj27custom_multiply_shiftadd_63IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4016
    00000fb5: 	movq	0xa0(%rsp), %rdi
    00000fbd: 	cmpq	%r13, %rdi
    00000fc0: 	je	.Ltmp6068 # Offset: 4032
    00000fc2: 	movq	0xb0(%rsp), %rax
    00000fca: 	leaq	0x1(%rax), %rsi
    00000fce: 	callq	_ZdlPvm@PLT # Offset: 4046
.Ltmp6068:
    00000fd3: 	leaq	DATAat0x5735b(%rip), %rdx
    00000fda: 	movq	%r14, %rsi
    00000fdd: 	movq	%r12, %rdi
    00000fe0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4064
    00000fe5: 	movq	%r12, %rcx
    00000fe8: 	movl	$0x43, %edx
    00000fed: 	movl	$0x1f40, %esi
    00000ff2: 	movq	%rbp, %rdi
    00000ff5: 	callq	_Z14test_variable1Ij24custom_multiply_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4085
    00000ffa: 	movq	0xa0(%rsp), %rdi
    00001002: 	cmpq	%r13, %rdi
    00001005: 	je	.Ltmp6069 # Offset: 4101
    00001007: 	movq	0xb0(%rsp), %rax
    0000100f: 	leaq	0x1(%rax), %rsi
    00001013: 	callq	_ZdlPvm@PLT # Offset: 4115
.Ltmp6069:
    00001018: 	leaq	DATAat0x57374(%rip), %rdx
    0000101f: 	movq	%r14, %rsi
    00001022: 	movq	%r12, %rdi
    00001025: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4133
    0000102a: 	callq	clock@PLT # Offset: 4138
    0000102f: 	movl	iterations(%rip), %ecx
    00001035: 	movl	$0x0, (%rsp)
    0000103c: 	movq	%rax, start_time(%rip)
    00001043: 	testl	%ecx, %ecx
    00001045: 	jle	.Ltmp6070 # Offset: 4165
    0000104b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6073:
    00001050: 	movq	%rbp, %rax
    00001053: 	pxor	%xmm2, %xmm2
    00001057: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6071:
    00001060: 	movdqa	(%rax), %xmm1
    00001064: 	addq	$0x10, %rax
    00001068: 	movdqa	%xmm1, %xmm0
    0000106c: 	pslld	$0x4, %xmm0
    00001071: 	paddd	%xmm1, %xmm0
    00001075: 	pslld	$0x2, %xmm0
    0000107a: 	psubd	%xmm1, %xmm0
    0000107e: 	paddd	%xmm0, %xmm2
    00001082: 	cmpq	%rax, %rbx
    00001085: 	jne	.Ltmp6071 # Offset: 4229
    00001087: 	cvttsd2si	init_value(%rip), %rdx
    00001090: 	movdqa	%xmm2, %xmm0
    00001094: 	psrldq	$0x8, %xmm0
    00001099: 	paddd	%xmm0, %xmm2
    0000109d: 	movdqa	%xmm2, %xmm0
    000010a1: 	psrldq	$0x4, %xmm0
    000010a6: 	imull	$0x82dc0, %edx, %edx
    000010ac: 	paddd	%xmm0, %xmm2
    000010b0: 	movd	%xmm2, %eax
    000010b4: 	cmpl	%eax, %edx
    000010b6: 	je	.Ltmp6072 # Offset: 4278
    000010b8: 	movl	current_test(%rip), %edx
    000010be: 	leaq	DATAat0x571d0(%rip), %rsi
    000010c5: 	movl	$0x1, %edi
    000010ca: 	xorl	%eax, %eax
    000010cc: 	callq	__printf_chk@PLT # Offset: 4300
    000010d1: 	movl	iterations(%rip), %ecx
.Ltmp6072:
    000010d7: 	addl	$0x1, (%rsp)
    000010db: 	movl	(%rsp), %eax
    000010de: 	cmpl	%ecx, %eax
    000010e0: 	jl	.Ltmp6073 # Offset: 4320
.Ltmp6070:
    000010e6: 	movq	%r12, %rsi
    000010e9: 	movq	%r15, %rdi
    000010ec: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4332
    000010f1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000010f8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000010ff: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001106: 	je	.Ltmp6074 # Offset: 4358
.Ltmp6471:
    0000110c: 	movq	-0x20(%rax), %rdi
    00001110: 	movq	%rdi, (%rsp)
    00001114: 	callq	clock@PLT # Offset: 4372
    00001119: 	movq	(%rsp), %rdi
    0000111d: 	pxor	%xmm0, %xmm0
    00001121: 	movq	%rax, end_time(%rip)
    00001128: 	subq	start_time(%rip), %rax
    0000112f: 	cvtsi2sd	%rax, %xmm0
    00001134: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000113c: 	callq	_Z13record_resultdPKc # Offset: 4412
    00001141: 	movq	0xa0(%rsp), %rdi
    00001149: 	cmpq	%r13, %rdi
    0000114c: 	je	.Ltmp6075 # Offset: 4428
    0000114e: 	movq	0xb0(%rsp), %rax
    00001156: 	leaq	0x1(%rax), %rsi
    0000115a: 	callq	_ZdlPvm@PLT # Offset: 4442
.Ltmp6075:
    0000115f: 	leaq	DATAat0x5738d(%rip), %rdx
    00001166: 	movq	%r14, %rsi
    00001169: 	movq	%r12, %rdi
    0000116c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4460
    00001171: 	callq	clock@PLT # Offset: 4465
    00001176: 	movl	iterations(%rip), %ecx
    0000117c: 	movl	$0x0, (%rsp)
    00001183: 	movq	%rax, start_time(%rip)
    0000118a: 	testl	%ecx, %ecx
    0000118c: 	jle	.Ltmp6076 # Offset: 4492
    00001192: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6079:
    00001198: 	movq	%rbp, %rax
    0000119b: 	pxor	%xmm2, %xmm2
    0000119f: 	nop # Size: 1
.Ltmp6077:
    000011a0: 	movdqa	(%rax), %xmm1
    000011a4: 	addq	$0x10, %rax
    000011a8: 	movdqa	%xmm1, %xmm0
    000011ac: 	pslld	$0x4, %xmm0
    000011b1: 	paddd	%xmm1, %xmm0
    000011b5: 	pslld	$0x2, %xmm0
    000011ba: 	psubd	%xmm1, %xmm0
    000011be: 	paddd	%xmm0, %xmm2
    000011c2: 	cmpq	%rbx, %rax
    000011c5: 	jne	.Ltmp6077 # Offset: 4549
    000011c7: 	cvttsd2si	init_value(%rip), %rdx
    000011d0: 	movdqa	%xmm2, %xmm0
    000011d4: 	psrldq	$0x8, %xmm0
    000011d9: 	paddd	%xmm0, %xmm2
    000011dd: 	movdqa	%xmm2, %xmm0
    000011e1: 	psrldq	$0x4, %xmm0
    000011e6: 	imull	$0x82dc0, %edx, %edx
    000011ec: 	paddd	%xmm0, %xmm2
    000011f0: 	movd	%xmm2, %eax
    000011f4: 	cmpl	%eax, %edx
    000011f6: 	je	.Ltmp6078 # Offset: 4598
    000011f8: 	movl	current_test(%rip), %edx
    000011fe: 	leaq	DATAat0x571d0(%rip), %rsi
    00001205: 	movl	$0x1, %edi
    0000120a: 	xorl	%eax, %eax
    0000120c: 	callq	__printf_chk@PLT # Offset: 4620
    00001211: 	movl	iterations(%rip), %ecx
.Ltmp6078:
    00001217: 	addl	$0x1, (%rsp)
    0000121b: 	movl	(%rsp), %eax
    0000121e: 	cmpl	%ecx, %eax
    00001220: 	jl	.Ltmp6079 # Offset: 4640
.Ltmp6076:
    00001226: 	movq	%r12, %rsi
    00001229: 	movq	%r15, %rdi
    0000122c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4652
    00001231: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001238: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000123f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001246: 	je	.Ltmp6080 # Offset: 4678
.Ltmp6470:
    0000124c: 	movq	-0x20(%rax), %rdi
    00001250: 	movq	%rdi, (%rsp)
    00001254: 	callq	clock@PLT # Offset: 4692
    00001259: 	movq	(%rsp), %rdi
    0000125d: 	pxor	%xmm0, %xmm0
    00001261: 	movq	%rax, end_time(%rip)
    00001268: 	subq	start_time(%rip), %rax
    0000126f: 	cvtsi2sd	%rax, %xmm0
    00001274: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000127c: 	callq	_Z13record_resultdPKc # Offset: 4732
    00001281: 	movq	0xa0(%rsp), %rdi
    00001289: 	cmpq	%r13, %rdi
    0000128c: 	je	.Ltmp6081 # Offset: 4748
    0000128e: 	movq	0xb0(%rsp), %rax
    00001296: 	leaq	0x1(%rax), %rsi
    0000129a: 	callq	_ZdlPvm@PLT # Offset: 4762
.Ltmp6081:
    0000129f: 	leaq	DATAat0x5739e(%rip), %rdx
    000012a6: 	movq	%r14, %rsi
    000012a9: 	movq	%r12, %rdi
    000012ac: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4780
    000012b1: 	callq	clock@PLT # Offset: 4785
    000012b6: 	movl	iterations(%rip), %ecx
    000012bc: 	movl	$0x0, (%rsp)
    000012c3: 	movq	%rax, start_time(%rip)
    000012ca: 	testl	%ecx, %ecx
    000012cc: 	jle	.Ltmp6082 # Offset: 4812
    000012d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6085:
    000012d8: 	movq	%rbp, %rax
    000012db: 	pxor	%xmm2, %xmm2
    000012df: 	nop # Size: 1
.Ltmp6083:
    000012e0: 	movdqa	(%rax), %xmm1
    000012e4: 	addq	$0x10, %rax
    000012e8: 	movdqa	%xmm1, %xmm0
    000012ec: 	pslld	$0x4, %xmm0
    000012f1: 	paddd	%xmm1, %xmm0
    000012f5: 	pslld	$0x2, %xmm0
    000012fa: 	psubd	%xmm1, %xmm0
    000012fe: 	paddd	%xmm0, %xmm2
    00001302: 	cmpq	%rax, %rbx
    00001305: 	jne	.Ltmp6083 # Offset: 4869
    00001307: 	cvttsd2si	init_value(%rip), %rdx
    00001310: 	movdqa	%xmm2, %xmm0
    00001314: 	psrldq	$0x8, %xmm0
    00001319: 	paddd	%xmm0, %xmm2
    0000131d: 	movdqa	%xmm2, %xmm0
    00001321: 	psrldq	$0x4, %xmm0
    00001326: 	imull	$0x82dc0, %edx, %edx
    0000132c: 	paddd	%xmm0, %xmm2
    00001330: 	movd	%xmm2, %eax
    00001334: 	cmpl	%eax, %edx
    00001336: 	je	.Ltmp6084 # Offset: 4918
    00001338: 	movl	current_test(%rip), %edx
    0000133e: 	leaq	DATAat0x571d0(%rip), %rsi
    00001345: 	movl	$0x1, %edi
    0000134a: 	xorl	%eax, %eax
    0000134c: 	callq	__printf_chk@PLT # Offset: 4940
    00001351: 	movl	iterations(%rip), %ecx
.Ltmp6084:
    00001357: 	addl	$0x1, (%rsp)
    0000135b: 	movl	(%rsp), %eax
    0000135e: 	cmpl	%ecx, %eax
    00001360: 	jl	.Ltmp6085 # Offset: 4960
.Ltmp6082:
    00001366: 	movq	%r12, %rsi
    00001369: 	movq	%r15, %rdi
    0000136c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4972
    00001371: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001378: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000137f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001386: 	je	.Ltmp6086 # Offset: 4998
.Ltmp6469:
    0000138c: 	movq	-0x20(%rax), %rdi
    00001390: 	movq	%rdi, (%rsp)
    00001394: 	callq	clock@PLT # Offset: 5012
    00001399: 	movq	(%rsp), %rdi
    0000139d: 	pxor	%xmm0, %xmm0
    000013a1: 	movq	%rax, end_time(%rip)
    000013a8: 	subq	start_time(%rip), %rax
    000013af: 	cvtsi2sd	%rax, %xmm0
    000013b4: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000013bc: 	callq	_Z13record_resultdPKc # Offset: 5052
    000013c1: 	movq	0xa0(%rsp), %rdi
    000013c9: 	cmpq	%r13, %rdi
    000013cc: 	je	.Ltmp6087 # Offset: 5068
    000013ce: 	movq	0xb0(%rsp), %rax
    000013d6: 	leaq	0x1(%rax), %rsi
    000013da: 	callq	_ZdlPvm@PLT # Offset: 5082
.Ltmp6087:
    000013df: 	leaq	DATAat0x573ad(%rip), %rdx
    000013e6: 	movq	%r14, %rsi
    000013e9: 	movq	%r12, %rdi
    000013ec: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5100
    000013f1: 	movq	%r12, %rcx
    000013f4: 	movl	$0x53, %edx
    000013f9: 	movl	$0x1f40, %esi
    000013fe: 	movq	%rbp, %rdi
    00001401: 	callq	_Z14test_variable1Ij24custom_multiply_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5121
    00001406: 	movq	0xa0(%rsp), %rdi
    0000140e: 	cmpq	%r13, %rdi
    00001411: 	je	.Ltmp6088 # Offset: 5137
    00001413: 	movq	0xb0(%rsp), %rax
    0000141b: 	leaq	0x1(%rax), %rsi
    0000141f: 	callq	_ZdlPvm@PLT # Offset: 5151
.Ltmp6088:
    00001424: 	leaq	DATAat0x573c6(%rip), %rdx
    0000142b: 	movq	%r14, %rsi
    0000142e: 	movq	%r12, %rdi
    00001431: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5169
    00001436: 	callq	clock@PLT # Offset: 5174
    0000143b: 	movl	iterations(%rip), %ecx
    00001441: 	movl	$0x0, (%rsp)
    00001448: 	movq	%rax, start_time(%rip)
    0000144f: 	testl	%ecx, %ecx
    00001451: 	jle	.Ltmp6089 # Offset: 5201
    00001457: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6092:
    00001460: 	movq	%rbp, %rax
    00001463: 	pxor	%xmm2, %xmm2
    00001467: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6090:
    00001470: 	movdqa	(%rax), %xmm1
    00001474: 	addq	$0x10, %rax
    00001478: 	movdqa	%xmm1, %xmm0
    0000147c: 	pslld	$0x2, %xmm0
    00001481: 	paddd	%xmm1, %xmm0
    00001485: 	pslld	$0x2, %xmm0
    0000148a: 	paddd	%xmm1, %xmm0
    0000148e: 	pslld	$0x2, %xmm0
    00001493: 	psubd	%xmm1, %xmm0
    00001497: 	paddd	%xmm0, %xmm2
    0000149b: 	cmpq	%rbx, %rax
    0000149e: 	jne	.Ltmp6090 # Offset: 5278
    000014a0: 	cvttsd2si	init_value(%rip), %rdx
    000014a9: 	movdqa	%xmm2, %xmm0
    000014ad: 	psrldq	$0x8, %xmm0
    000014b2: 	paddd	%xmm0, %xmm2
    000014b6: 	movdqa	%xmm2, %xmm0
    000014ba: 	psrldq	$0x4, %xmm0
    000014bf: 	imull	$0xa21c0, %edx, %edx
    000014c5: 	paddd	%xmm0, %xmm2
    000014c9: 	movd	%xmm2, %eax
    000014cd: 	cmpl	%eax, %edx
    000014cf: 	je	.Ltmp6091 # Offset: 5327
    000014d1: 	movl	current_test(%rip), %edx
    000014d7: 	leaq	DATAat0x571d0(%rip), %rsi
    000014de: 	movl	$0x1, %edi
    000014e3: 	xorl	%eax, %eax
    000014e5: 	callq	__printf_chk@PLT # Offset: 5349
    000014ea: 	movl	iterations(%rip), %ecx
.Ltmp6091:
    000014f0: 	addl	$0x1, (%rsp)
    000014f4: 	movl	(%rsp), %eax
    000014f7: 	cmpl	%ecx, %eax
    000014f9: 	jl	.Ltmp6092 # Offset: 5369
.Ltmp6089:
    000014ff: 	movq	%r12, %rsi
    00001502: 	movq	%r15, %rdi
    00001505: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5381
    0000150a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001511: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001518: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000151f: 	je	.Ltmp6093 # Offset: 5407
.Ltmp6468:
    00001525: 	movq	-0x20(%rax), %rdi
    00001529: 	movq	%rdi, (%rsp)
    0000152d: 	callq	clock@PLT # Offset: 5421
    00001532: 	movq	(%rsp), %rdi
    00001536: 	pxor	%xmm0, %xmm0
    0000153a: 	movq	%rax, end_time(%rip)
    00001541: 	subq	start_time(%rip), %rax
    00001548: 	cvtsi2sd	%rax, %xmm0
    0000154d: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001555: 	callq	_Z13record_resultdPKc # Offset: 5461
    0000155a: 	movq	0xa0(%rsp), %rdi
    00001562: 	cmpq	%r13, %rdi
    00001565: 	je	.Ltmp6094 # Offset: 5477
    00001567: 	movq	0xb0(%rsp), %rax
    0000156f: 	leaq	0x1(%rax), %rsi
    00001573: 	callq	_ZdlPvm@PLT # Offset: 5491
.Ltmp6094:
    00001578: 	leaq	DATAat0x573df(%rip), %rdx
    0000157f: 	movq	%r14, %rsi
    00001582: 	movq	%r12, %rdi
    00001585: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5509
    0000158a: 	movq	%r12, %rdx
    0000158d: 	movl	$0x1f40, %esi
    00001592: 	movq	%rbp, %rdi
    00001595: 	callq	_Z13test_constantIj27custom_multiply_shiftadd_83IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5525
    0000159a: 	movq	0xa0(%rsp), %rdi
    000015a2: 	cmpq	%r13, %rdi
    000015a5: 	je	.Ltmp6095 # Offset: 5541
    000015a7: 	movq	0xb0(%rsp), %rax
    000015af: 	leaq	0x1(%rax), %rsi
    000015b3: 	callq	_ZdlPvm@PLT # Offset: 5555
.Ltmp6095:
    000015b8: 	leaq	DATAat0x573f0(%rip), %rdx
    000015bf: 	movq	%r14, %rsi
    000015c2: 	movq	%r12, %rdi
    000015c5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5573
    000015ca: 	callq	clock@PLT # Offset: 5578
    000015cf: 	movl	iterations(%rip), %ecx
    000015d5: 	movl	$0x0, (%rsp)
    000015dc: 	movq	%rax, start_time(%rip)
    000015e3: 	testl	%ecx, %ecx
    000015e5: 	jle	.Ltmp6096 # Offset: 5605
    000015eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6099:
    000015f0: 	movq	%rbp, %rax
    000015f3: 	pxor	%xmm2, %xmm2
    000015f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6097:
    00001600: 	movdqa	(%rax), %xmm1
    00001604: 	addq	$0x10, %rax
    00001608: 	movdqa	%xmm1, %xmm0
    0000160c: 	pslld	$0x2, %xmm0
    00001611: 	paddd	%xmm1, %xmm0
    00001615: 	pslld	$0x2, %xmm0
    0000161a: 	paddd	%xmm1, %xmm0
    0000161e: 	pslld	$0x2, %xmm0
    00001623: 	psubd	%xmm1, %xmm0
    00001627: 	paddd	%xmm0, %xmm2
    0000162b: 	cmpq	%rax, %rbx
    0000162e: 	jne	.Ltmp6097 # Offset: 5678
    00001630: 	cvttsd2si	init_value(%rip), %rdx
    00001639: 	movdqa	%xmm2, %xmm0
    0000163d: 	psrldq	$0x8, %xmm0
    00001642: 	paddd	%xmm0, %xmm2
    00001646: 	movdqa	%xmm2, %xmm0
    0000164a: 	psrldq	$0x4, %xmm0
    0000164f: 	imull	$0xa21c0, %edx, %edx
    00001655: 	paddd	%xmm0, %xmm2
    00001659: 	movd	%xmm2, %eax
    0000165d: 	cmpl	%eax, %edx
    0000165f: 	je	.Ltmp6098 # Offset: 5727
    00001661: 	movl	current_test(%rip), %edx
    00001667: 	leaq	DATAat0x571d0(%rip), %rsi
    0000166e: 	movl	$0x1, %edi
    00001673: 	xorl	%eax, %eax
    00001675: 	callq	__printf_chk@PLT # Offset: 5749
    0000167a: 	movl	iterations(%rip), %ecx
.Ltmp6098:
    00001680: 	addl	$0x1, (%rsp)
    00001684: 	movl	(%rsp), %eax
    00001687: 	cmpl	%ecx, %eax
    00001689: 	jl	.Ltmp6099 # Offset: 5769
.Ltmp6096:
    0000168f: 	movq	%r12, %rsi
    00001692: 	movq	%r15, %rdi
    00001695: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5781
    0000169a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016a1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000016a8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016af: 	je	.Ltmp6100 # Offset: 5807
.Ltmp6467:
    000016b5: 	movq	-0x20(%rax), %rdi
    000016b9: 	movq	%rdi, (%rsp)
    000016bd: 	callq	clock@PLT # Offset: 5821
    000016c2: 	movq	(%rsp), %rdi
    000016c6: 	pxor	%xmm0, %xmm0
    000016ca: 	movq	%rax, end_time(%rip)
    000016d1: 	subq	start_time(%rip), %rax
    000016d8: 	cvtsi2sd	%rax, %xmm0
    000016dd: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000016e5: 	callq	_Z13record_resultdPKc # Offset: 5861
    000016ea: 	movq	0xa0(%rsp), %rdi
    000016f2: 	cmpq	%r13, %rdi
    000016f5: 	je	.Ltmp6101 # Offset: 5877
    000016f7: 	movq	0xb0(%rsp), %rax
    000016ff: 	leaq	0x1(%rax), %rsi
    00001703: 	callq	_ZdlPvm@PLT # Offset: 5891
.Ltmp6101:
    00001708: 	leaq	DATAat0x573ff(%rip), %rdx
    0000170f: 	movq	%r14, %rsi
    00001712: 	movq	%r12, %rdi
    00001715: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5909
    0000171a: 	movq	%r12, %rcx
    0000171d: 	movl	$0x7e, %edx
    00001722: 	movl	$0x1f40, %esi
    00001727: 	movq	%rbp, %rdi
    0000172a: 	callq	_Z14test_variable1Ij24custom_multiply_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5930
    0000172f: 	movq	0xa0(%rsp), %rdi
    00001737: 	cmpq	%r13, %rdi
    0000173a: 	je	.Ltmp6102 # Offset: 5946
    0000173c: 	movq	0xb0(%rsp), %rax
    00001744: 	leaq	0x1(%rax), %rsi
    00001748: 	callq	_ZdlPvm@PLT # Offset: 5960
.Ltmp6102:
    0000174d: 	leaq	DATAat0x57419(%rip), %rdx
    00001754: 	movq	%r14, %rsi
    00001757: 	movq	%r12, %rdi
    0000175a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5978
    0000175f: 	callq	clock@PLT # Offset: 5983
    00001764: 	movl	iterations(%rip), %ecx
    0000176a: 	movl	$0x0, (%rsp)
    00001771: 	movq	%rax, start_time(%rip)
    00001778: 	testl	%ecx, %ecx
    0000177a: 	jle	.Ltmp6103 # Offset: 6010
.Ltmp6106:
    00001780: 	movq	%rbp, %rax
    00001783: 	pxor	%xmm1, %xmm1
    00001787: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6104:
    00001790: 	movdqa	(%rax), %xmm0
    00001794: 	addq	$0x10, %rax
    00001798: 	pslld	$0x6, %xmm0
    0000179d: 	psubd	-0x10(%rax), %xmm0
    000017a2: 	pslld	$0x1, %xmm0
    000017a7: 	paddd	%xmm0, %xmm1
    000017ab: 	cmpq	%rbx, %rax
    000017ae: 	jne	.Ltmp6104 # Offset: 6062
    000017b0: 	cvttsd2si	init_value(%rip), %rdx
    000017b9: 	movdqa	%xmm1, %xmm0
    000017bd: 	psrldq	$0x8, %xmm0
    000017c2: 	paddd	%xmm0, %xmm1
    000017c6: 	movdqa	%xmm1, %xmm0
    000017ca: 	psrldq	$0x4, %xmm0
    000017cf: 	imull	$0xf6180, %edx, %edx
    000017d5: 	paddd	%xmm0, %xmm1
    000017d9: 	movd	%xmm1, %eax
    000017dd: 	cmpl	%eax, %edx
    000017df: 	je	.Ltmp6105 # Offset: 6111
    000017e1: 	movl	current_test(%rip), %edx
    000017e7: 	leaq	DATAat0x571d0(%rip), %rsi
    000017ee: 	movl	$0x1, %edi
    000017f3: 	xorl	%eax, %eax
    000017f5: 	callq	__printf_chk@PLT # Offset: 6133
    000017fa: 	movl	iterations(%rip), %ecx
.Ltmp6105:
    00001800: 	addl	$0x1, (%rsp)
    00001804: 	movl	(%rsp), %eax
    00001807: 	cmpl	%ecx, %eax
    00001809: 	jl	.Ltmp6106 # Offset: 6153
.Ltmp6103:
    0000180f: 	movq	%r12, %rsi
    00001812: 	movq	%r15, %rdi
    00001815: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6165
    0000181a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001821: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001828: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000182f: 	je	.Ltmp6107 # Offset: 6191
.Ltmp6466:
    00001835: 	movq	-0x20(%rax), %rdi
    00001839: 	movq	%rdi, (%rsp)
    0000183d: 	callq	clock@PLT # Offset: 6205
    00001842: 	movq	(%rsp), %rdi
    00001846: 	pxor	%xmm0, %xmm0
    0000184a: 	movq	%rax, end_time(%rip)
    00001851: 	subq	start_time(%rip), %rax
    00001858: 	cvtsi2sd	%rax, %xmm0
    0000185d: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001865: 	callq	_Z13record_resultdPKc # Offset: 6245
    0000186a: 	movq	0xa0(%rsp), %rdi
    00001872: 	cmpq	%r13, %rdi
    00001875: 	je	.Ltmp6108 # Offset: 6261
    00001877: 	movq	0xb0(%rsp), %rax
    0000187f: 	leaq	0x1(%rax), %rsi
    00001883: 	callq	_ZdlPvm@PLT # Offset: 6275
.Ltmp6108:
    00001888: 	leaq	DATAat0x57433(%rip), %rdx
    0000188f: 	movq	%r14, %rsi
    00001892: 	movq	%r12, %rdi
    00001895: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6293
    0000189a: 	movq	%r12, %rdx
    0000189d: 	movl	$0x1f40, %esi
    000018a2: 	movq	%rbp, %rdi
    000018a5: 	callq	_Z13test_constantIj28custom_multiply_shiftadd_126IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 6309
    000018aa: 	movq	0xa0(%rsp), %rdi
    000018b2: 	cmpq	%r13, %rdi
    000018b5: 	je	.Ltmp6109 # Offset: 6325
    000018b7: 	movq	0xb0(%rsp), %rax
    000018bf: 	leaq	0x1(%rax), %rsi
    000018c3: 	callq	_ZdlPvm@PLT # Offset: 6339
.Ltmp6109:
    000018c8: 	leaq	DATAat0x57445(%rip), %rdx
    000018cf: 	movq	%r14, %rsi
    000018d2: 	movq	%r12, %rdi
    000018d5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6357
    000018da: 	callq	clock@PLT # Offset: 6362
    000018df: 	movl	iterations(%rip), %ecx
    000018e5: 	movl	$0x0, (%rsp)
    000018ec: 	movq	%rax, start_time(%rip)
    000018f3: 	testl	%ecx, %ecx
    000018f5: 	jle	.Ltmp6110 # Offset: 6389
    000018fb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6113:
    00001900: 	movq	%rbp, %rax
    00001903: 	pxor	%xmm1, %xmm1
    00001907: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6111:
    00001910: 	movdqa	(%rax), %xmm0
    00001914: 	addq	$0x10, %rax
    00001918: 	pslld	$0x6, %xmm0
    0000191d: 	psubd	-0x10(%rax), %xmm0
    00001922: 	pslld	$0x1, %xmm0
    00001927: 	paddd	%xmm0, %xmm1
    0000192b: 	cmpq	%rax, %rbx
    0000192e: 	jne	.Ltmp6111 # Offset: 6446
    00001930: 	cvttsd2si	init_value(%rip), %rdx
    00001939: 	movdqa	%xmm1, %xmm0
    0000193d: 	psrldq	$0x8, %xmm0
    00001942: 	paddd	%xmm0, %xmm1
    00001946: 	movdqa	%xmm1, %xmm0
    0000194a: 	psrldq	$0x4, %xmm0
    0000194f: 	imull	$0xf6180, %edx, %edx
    00001955: 	paddd	%xmm0, %xmm1
    00001959: 	movd	%xmm1, %eax
    0000195d: 	cmpl	%eax, %edx
    0000195f: 	je	.Ltmp6112 # Offset: 6495
    00001961: 	movl	current_test(%rip), %edx
    00001967: 	leaq	DATAat0x571d0(%rip), %rsi
    0000196e: 	movl	$0x1, %edi
    00001973: 	xorl	%eax, %eax
    00001975: 	callq	__printf_chk@PLT # Offset: 6517
    0000197a: 	movl	iterations(%rip), %ecx
.Ltmp6112:
    00001980: 	addl	$0x1, (%rsp)
    00001984: 	movl	(%rsp), %eax
    00001987: 	cmpl	%ecx, %eax
    00001989: 	jl	.Ltmp6113 # Offset: 6537
.Ltmp6110:
    0000198f: 	movq	%r12, %rsi
    00001992: 	movq	%r15, %rdi
    00001995: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6549
    0000199a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019a1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000019a8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000019af: 	je	.Ltmp6114 # Offset: 6575
.Ltmp6465:
    000019b5: 	movq	-0x20(%rax), %rdi
    000019b9: 	movq	%rdi, (%rsp)
    000019bd: 	callq	clock@PLT # Offset: 6589
    000019c2: 	movq	(%rsp), %rdi
    000019c6: 	pxor	%xmm0, %xmm0
    000019ca: 	movq	%rax, end_time(%rip)
    000019d1: 	subq	start_time(%rip), %rax
    000019d8: 	cvtsi2sd	%rax, %xmm0
    000019dd: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000019e5: 	callq	_Z13record_resultdPKc # Offset: 6629
    000019ea: 	movq	0xa0(%rsp), %rdi
    000019f2: 	cmpq	%r13, %rdi
    000019f5: 	je	.Ltmp6115 # Offset: 6645
    000019f7: 	movq	0xb0(%rsp), %rax
    000019ff: 	leaq	0x1(%rax), %rsi
    00001a03: 	callq	_ZdlPvm@PLT # Offset: 6659
.Ltmp6115:
    00001a08: 	leaq	0x60(%rsp), %rdi
    00001a0d: 	leaq	DATAat0x57455(%rip), %rdx
    00001a14: 	movq	%r14, %rsi
    00001a17: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6679
    00001a1c: 	movl	iterations(%rip), %edx
    00001a22: 	movq	0x60(%rsp), %rdi
    00001a27: 	xorl	%r8d, %r8d
    00001a2a: 	xorl	%ecx, %ecx
    00001a2c: 	movl	$0x1f40, %esi
    00001a31: 	callq	_Z9summarizePKciiii # Offset: 6705
    00001a36: 	leaq	DATAat0x57472(%rip), %rdx
    00001a3d: 	movq	%r14, %rsi
    00001a40: 	movq	%r12, %rdi
    00001a43: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6723
    00001a48: 	callq	clock@PLT # Offset: 6728
    00001a4d: 	movl	iterations(%rip), %ecx
    00001a53: 	movl	$0x0, (%rsp)
    00001a5a: 	movq	%rax, start_time(%rip)
    00001a61: 	testl	%ecx, %ecx
    00001a63: 	jle	.Ltmp6116 # Offset: 6755
    00001a65: 	nopl	(%rax) # Size: 3
.Ltmp6119:
    00001a68: 	movq	%rbp, %rax
    00001a6b: 	pxor	%xmm1, %xmm1
    00001a6f: 	nop # Size: 1
.Ltmp6117:
    00001a70: 	movdqa	(%rax), %xmm0
    00001a74: 	addq	$0x10, %rax
    00001a78: 	psrld	$0x1, %xmm0
    00001a7d: 	paddd	%xmm0, %xmm1
    00001a81: 	cmpq	%rbx, %rax
    00001a84: 	jne	.Ltmp6117 # Offset: 6788
    00001a86: 	cvttsd2si	init_value(%rip), %rdx
    00001a8f: 	movdqa	%xmm1, %xmm0
    00001a93: 	psrldq	$0x8, %xmm0
    00001a98: 	paddd	%xmm0, %xmm1
    00001a9c: 	movdqa	%xmm1, %xmm0
    00001aa0: 	shrl	%edx
    00001aa2: 	psrldq	$0x4, %xmm0
    00001aa7: 	imull	$0x1f40, %edx, %edx
    00001aad: 	paddd	%xmm0, %xmm1
    00001ab1: 	movd	%xmm1, %eax
    00001ab5: 	cmpl	%eax, %edx
    00001ab7: 	je	.Ltmp6118 # Offset: 6839
    00001ab9: 	movl	current_test(%rip), %edx
    00001abf: 	leaq	DATAat0x571d0(%rip), %rsi
    00001ac6: 	movl	$0x1, %edi
    00001acb: 	xorl	%eax, %eax
    00001acd: 	callq	__printf_chk@PLT # Offset: 6861
    00001ad2: 	movl	iterations(%rip), %ecx
.Ltmp6118:
    00001ad8: 	addl	$0x1, (%rsp)
    00001adc: 	movl	(%rsp), %eax
    00001adf: 	cmpl	%ecx, %eax
    00001ae1: 	jl	.Ltmp6119 # Offset: 6881
.Ltmp6116:
    00001ae3: 	movq	%r12, %rsi
    00001ae6: 	movq	%r15, %rdi
    00001ae9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6889
    00001aee: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001af5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001afc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b03: 	je	.Ltmp6120 # Offset: 6915
.Ltmp6464:
    00001b09: 	movq	-0x20(%rax), %rdi
    00001b0d: 	movq	%rdi, (%rsp)
    00001b11: 	callq	clock@PLT # Offset: 6929
    00001b16: 	movq	(%rsp), %rdi
    00001b1a: 	pxor	%xmm0, %xmm0
    00001b1e: 	movq	%rax, end_time(%rip)
    00001b25: 	subq	start_time(%rip), %rax
    00001b2c: 	cvtsi2sd	%rax, %xmm0
    00001b31: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001b39: 	callq	_Z13record_resultdPKc # Offset: 6969
    00001b3e: 	movq	0xa0(%rsp), %rdi
    00001b46: 	cmpq	%r13, %rdi
    00001b49: 	je	.Ltmp6121 # Offset: 6985
    00001b4b: 	movq	0xb0(%rsp), %rax
    00001b53: 	leaq	0x1(%rax), %rsi
    00001b57: 	callq	_ZdlPvm@PLT # Offset: 6999
.Ltmp6121:
    00001b5c: 	leaq	DATAat0x579c8(%rip), %rdx
    00001b63: 	movq	%r14, %rsi
    00001b66: 	movq	%r12, %rdi
    00001b69: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7017
    00001b6e: 	movq	%r12, %rdx
    00001b71: 	movl	$0x1f40, %esi
    00001b76: 	movq	%rbp, %rdi
    00001b79: 	callq	_Z13test_constantIj24shift_divide_toward_zeroIjLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7033
    00001b7e: 	movq	0xa0(%rsp), %rdi
    00001b86: 	cmpq	%r13, %rdi
    00001b89: 	je	.Ltmp6122 # Offset: 7049
    00001b8b: 	movq	0xb0(%rsp), %rax
    00001b93: 	leaq	0x1(%rax), %rsi
    00001b97: 	callq	_ZdlPvm@PLT # Offset: 7063
.Ltmp6122:
    00001b9c: 	leaq	DATAat0x57484(%rip), %rdx
    00001ba3: 	movq	%r14, %rsi
    00001ba6: 	movq	%r12, %rdi
    00001ba9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7081
    00001bae: 	movq	%r12, %rdx
    00001bb1: 	movl	$0x1f40, %esi
    00001bb6: 	movq	%rbp, %rdi
    00001bb9: 	callq	_Z13test_constantIj21custom_divide_inline2IjEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7097
    00001bbe: 	movq	0xa0(%rsp), %rdi
    00001bc6: 	cmpq	%r13, %rdi
    00001bc9: 	je	.Ltmp6123 # Offset: 7113
    00001bcb: 	movq	0xb0(%rsp), %rax
    00001bd3: 	leaq	0x1(%rax), %rsi
    00001bd7: 	callq	_ZdlPvm@PLT # Offset: 7127
.Ltmp6123:
    00001bdc: 	leaq	DATAat0x57498(%rip), %rdx
    00001be3: 	movq	%r14, %rsi
    00001be6: 	movq	%r12, %rdi
    00001be9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7145
    00001bee: 	movq	%r12, %rcx
    00001bf1: 	movl	$0x2, %edx
    00001bf6: 	movl	$0x1f40, %esi
    00001bfb: 	movq	%rbp, %rdi
    00001bfe: 	callq	_Z14test_variable1Ij22custom_divide_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7166
    00001c03: 	movq	0xa0(%rsp), %rdi
    00001c0b: 	cmpq	%r13, %rdi
    00001c0e: 	je	.Ltmp6124 # Offset: 7182
    00001c10: 	movq	0xb0(%rsp), %rax
    00001c18: 	leaq	0x1(%rax), %rsi
    00001c1c: 	callq	_ZdlPvm@PLT # Offset: 7196
.Ltmp6124:
    00001c21: 	leaq	DATAat0x574ae(%rip), %rdx
    00001c28: 	movq	%r14, %rsi
    00001c2b: 	movq	%r12, %rdi
    00001c2e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7214
    00001c33: 	callq	clock@PLT # Offset: 7219
    00001c38: 	movl	iterations(%rip), %ecx
    00001c3e: 	movl	$0x0, (%rsp)
    00001c45: 	movq	%rax, start_time(%rip)
    00001c4c: 	testl	%ecx, %ecx
    00001c4e: 	jle	.Ltmp6125 # Offset: 7246
    00001c54: 	nopl	(%rax) # Size: 4
.Ltmp6128:
    00001c58: 	movq	%rbp, %rax
    00001c5b: 	pxor	%xmm1, %xmm1
    00001c5f: 	nop # Size: 1
.Ltmp6126:
    00001c60: 	movdqa	(%rax), %xmm0
    00001c64: 	addq	$0x10, %rax
    00001c68: 	psrld	$0x1, %xmm0
    00001c6d: 	paddd	%xmm0, %xmm1
    00001c71: 	cmpq	%rax, %rbx
    00001c74: 	jne	.Ltmp6126 # Offset: 7284
    00001c76: 	cvttsd2si	init_value(%rip), %rdx
    00001c7f: 	movdqa	%xmm1, %xmm0
    00001c83: 	psrldq	$0x8, %xmm0
    00001c88: 	paddd	%xmm0, %xmm1
    00001c8c: 	movdqa	%xmm1, %xmm0
    00001c90: 	shrl	%edx
    00001c92: 	psrldq	$0x4, %xmm0
    00001c97: 	imull	$0x1f40, %edx, %edx
    00001c9d: 	paddd	%xmm0, %xmm1
    00001ca1: 	movd	%xmm1, %eax
    00001ca5: 	cmpl	%eax, %edx
    00001ca7: 	je	.Ltmp6127 # Offset: 7335
    00001ca9: 	movl	current_test(%rip), %edx
    00001caf: 	leaq	DATAat0x571d0(%rip), %rsi
    00001cb6: 	movl	$0x1, %edi
    00001cbb: 	xorl	%eax, %eax
    00001cbd: 	callq	__printf_chk@PLT # Offset: 7357
    00001cc2: 	movl	iterations(%rip), %ecx
.Ltmp6127:
    00001cc8: 	addl	$0x1, (%rsp)
    00001ccc: 	movl	(%rsp), %eax
    00001ccf: 	cmpl	%ecx, %eax
    00001cd1: 	jl	.Ltmp6128 # Offset: 7377
.Ltmp6125:
    00001cd7: 	movq	%r12, %rsi
    00001cda: 	movq	%r15, %rdi
    00001cdd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7389
    00001ce2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ce9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001cf0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001cf7: 	je	.Ltmp6129 # Offset: 7415
.Ltmp6463:
    00001cfd: 	movq	-0x20(%rax), %rdi
    00001d01: 	movq	%rdi, (%rsp)
    00001d05: 	callq	clock@PLT # Offset: 7429
    00001d0a: 	movq	(%rsp), %rdi
    00001d0e: 	pxor	%xmm0, %xmm0
    00001d12: 	movq	%rax, end_time(%rip)
    00001d19: 	subq	start_time(%rip), %rax
    00001d20: 	cvtsi2sd	%rax, %xmm0
    00001d25: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001d2d: 	callq	_Z13record_resultdPKc # Offset: 7469
    00001d32: 	movq	0xa0(%rsp), %rdi
    00001d3a: 	cmpq	%r13, %rdi
    00001d3d: 	je	.Ltmp6130 # Offset: 7485
    00001d3f: 	movq	0xb0(%rsp), %rax
    00001d47: 	leaq	0x1(%rax), %rsi
    00001d4b: 	callq	_ZdlPvm@PLT # Offset: 7499
.Ltmp6130:
    00001d50: 	leaq	DATAat0x574c4(%rip), %rdx
    00001d57: 	movq	%r14, %rsi
    00001d5a: 	movq	%r12, %rdi
    00001d5d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7517
    00001d62: 	callq	clock@PLT # Offset: 7522
    00001d67: 	movl	iterations(%rip), %ecx
    00001d6d: 	movl	$0x0, (%rsp)
    00001d74: 	movq	%rax, start_time(%rip)
    00001d7b: 	testl	%ecx, %ecx
    00001d7d: 	jle	.Ltmp6131 # Offset: 7549
    00001d83: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6134:
    00001d88: 	movq	%rbp, %rax
    00001d8b: 	pxor	%xmm1, %xmm1
    00001d8f: 	nop # Size: 1
.Ltmp6132:
    00001d90: 	movdqa	(%rax), %xmm0
    00001d94: 	addq	$0x10, %rax
    00001d98: 	psrld	$0x3, %xmm0
    00001d9d: 	paddd	%xmm0, %xmm1
    00001da1: 	cmpq	%rbx, %rax
    00001da4: 	jne	.Ltmp6132 # Offset: 7588
    00001da6: 	cvttsd2si	init_value(%rip), %rdx
    00001daf: 	movdqa	%xmm1, %xmm0
    00001db3: 	psrldq	$0x8, %xmm0
    00001db8: 	paddd	%xmm0, %xmm1
    00001dbc: 	movdqa	%xmm1, %xmm0
    00001dc0: 	shrl	$0x3, %edx
    00001dc3: 	psrldq	$0x4, %xmm0
    00001dc8: 	imull	$0x1f40, %edx, %edx
    00001dce: 	paddd	%xmm0, %xmm1
    00001dd2: 	movd	%xmm1, %eax
    00001dd6: 	cmpl	%eax, %edx
    00001dd8: 	je	.Ltmp6133 # Offset: 7640
    00001dda: 	movl	current_test(%rip), %edx
    00001de0: 	leaq	DATAat0x571d0(%rip), %rsi
    00001de7: 	movl	$0x1, %edi
    00001dec: 	xorl	%eax, %eax
    00001dee: 	callq	__printf_chk@PLT # Offset: 7662
    00001df3: 	movl	iterations(%rip), %ecx
.Ltmp6133:
    00001df9: 	addl	$0x1, (%rsp)
    00001dfd: 	movl	(%rsp), %eax
    00001e00: 	cmpl	%ecx, %eax
    00001e02: 	jl	.Ltmp6134 # Offset: 7682
.Ltmp6131:
    00001e08: 	movq	%r12, %rsi
    00001e0b: 	movq	%r15, %rdi
    00001e0e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7694
    00001e13: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e1a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001e21: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e28: 	je	.Ltmp6135 # Offset: 7720
.Ltmp6462:
    00001e2e: 	movq	-0x20(%rax), %rdi
    00001e32: 	movq	%rdi, (%rsp)
    00001e36: 	callq	clock@PLT # Offset: 7734
    00001e3b: 	movq	(%rsp), %rdi
    00001e3f: 	pxor	%xmm0, %xmm0
    00001e43: 	movq	%rax, end_time(%rip)
    00001e4a: 	subq	start_time(%rip), %rax
    00001e51: 	cvtsi2sd	%rax, %xmm0
    00001e56: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001e5e: 	callq	_Z13record_resultdPKc # Offset: 7774
    00001e63: 	movq	0xa0(%rsp), %rdi
    00001e6b: 	cmpq	%r13, %rdi
    00001e6e: 	je	.Ltmp6136 # Offset: 7790
    00001e70: 	movq	0xb0(%rsp), %rax
    00001e78: 	leaq	0x1(%rax), %rsi
    00001e7c: 	callq	_ZdlPvm@PLT # Offset: 7804
.Ltmp6136:
    00001e81: 	leaq	DATAat0x579e8(%rip), %rdx
    00001e88: 	movq	%r14, %rsi
    00001e8b: 	movq	%r12, %rdi
    00001e8e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7822
    00001e93: 	movq	%r12, %rdx
    00001e96: 	movl	$0x1f40, %esi
    00001e9b: 	movq	%rbp, %rdi
    00001e9e: 	callq	_Z13test_constantIj24shift_divide_toward_zeroIjLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7838
    00001ea3: 	movq	0xa0(%rsp), %rdi
    00001eab: 	cmpq	%r13, %rdi
    00001eae: 	je	.Ltmp6137 # Offset: 7854
    00001eb0: 	movq	0xb0(%rsp), %rax
    00001eb8: 	leaq	0x1(%rax), %rsi
    00001ebc: 	callq	_ZdlPvm@PLT # Offset: 7868
.Ltmp6137:
    00001ec1: 	leaq	DATAat0x574d6(%rip), %rdx
    00001ec8: 	movq	%r14, %rsi
    00001ecb: 	movq	%r12, %rdi
    00001ece: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7886
    00001ed3: 	movq	%r12, %rcx
    00001ed6: 	movl	$0x8, %edx
    00001edb: 	movl	$0x1f40, %esi
    00001ee0: 	movq	%rbp, %rdi
    00001ee3: 	callq	_Z14test_variable1Ij22custom_divide_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7907
    00001ee8: 	movq	0xa0(%rsp), %rdi
    00001ef0: 	cmpq	%r13, %rdi
    00001ef3: 	je	.Ltmp6138 # Offset: 7923
    00001ef5: 	movq	0xb0(%rsp), %rax
    00001efd: 	leaq	0x1(%rax), %rsi
    00001f01: 	callq	_ZdlPvm@PLT # Offset: 7937
.Ltmp6138:
    00001f06: 	leaq	DATAat0x574ec(%rip), %rdx
    00001f0d: 	movq	%r14, %rsi
    00001f10: 	movq	%r12, %rdi
    00001f13: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7955
    00001f18: 	callq	clock@PLT # Offset: 7960
    00001f1d: 	movl	iterations(%rip), %ecx
    00001f23: 	movl	$0x0, (%rsp)
    00001f2a: 	movq	%rax, start_time(%rip)
    00001f31: 	testl	%ecx, %ecx
    00001f33: 	jle	.Ltmp6139 # Offset: 7987
    00001f35: 	nopl	(%rax) # Size: 3
.Ltmp6142:
    00001f38: 	movq	%rbp, %rax
    00001f3b: 	pxor	%xmm1, %xmm1
    00001f3f: 	nop # Size: 1
.Ltmp6140:
    00001f40: 	movdqa	(%rax), %xmm0
    00001f44: 	addq	$0x10, %rax
    00001f48: 	psrld	$0x3, %xmm0
    00001f4d: 	paddd	%xmm0, %xmm1
    00001f51: 	cmpq	%rax, %rbx
    00001f54: 	jne	.Ltmp6140 # Offset: 8020
    00001f56: 	cvttsd2si	init_value(%rip), %rdx
    00001f5f: 	movdqa	%xmm1, %xmm0
    00001f63: 	psrldq	$0x8, %xmm0
    00001f68: 	paddd	%xmm0, %xmm1
    00001f6c: 	movdqa	%xmm1, %xmm0
    00001f70: 	shrl	$0x3, %edx
    00001f73: 	psrldq	$0x4, %xmm0
    00001f78: 	imull	$0x1f40, %edx, %edx
    00001f7e: 	paddd	%xmm0, %xmm1
    00001f82: 	movd	%xmm1, %eax
    00001f86: 	cmpl	%eax, %edx
    00001f88: 	je	.Ltmp6141 # Offset: 8072
    00001f8a: 	movl	current_test(%rip), %edx
    00001f90: 	leaq	DATAat0x571d0(%rip), %rsi
    00001f97: 	movl	$0x1, %edi
    00001f9c: 	xorl	%eax, %eax
    00001f9e: 	callq	__printf_chk@PLT # Offset: 8094
    00001fa3: 	movl	iterations(%rip), %ecx
.Ltmp6141:
    00001fa9: 	addl	$0x1, (%rsp)
    00001fad: 	movl	(%rsp), %eax
    00001fb0: 	cmpl	%ecx, %eax
    00001fb2: 	jl	.Ltmp6142 # Offset: 8114
.Ltmp6139:
    00001fb4: 	movq	%r12, %rsi
    00001fb7: 	movq	%r15, %rdi
    00001fba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8122
    00001fbf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001fc6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001fcd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001fd4: 	je	.Ltmp6143 # Offset: 8148
.Ltmp6461:
    00001fda: 	movq	-0x20(%rax), %rdi
    00001fde: 	movq	%rdi, (%rsp)
    00001fe2: 	callq	clock@PLT # Offset: 8162
    00001fe7: 	movq	(%rsp), %rdi
    00001feb: 	pxor	%xmm0, %xmm0
    00001fef: 	movq	%rax, end_time(%rip)
    00001ff6: 	subq	start_time(%rip), %rax
    00001ffd: 	cvtsi2sd	%rax, %xmm0
    00002002: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000200a: 	callq	_Z13record_resultdPKc # Offset: 8202
    0000200f: 	movq	0xa0(%rsp), %rdi
    00002017: 	cmpq	%r13, %rdi
    0000201a: 	je	.Ltmp6144 # Offset: 8218
    0000201c: 	movq	0xb0(%rsp), %rax
    00002024: 	leaq	0x1(%rax), %rsi
    00002028: 	callq	_ZdlPvm@PLT # Offset: 8232
.Ltmp6144:
    0000202d: 	leaq	DATAat0x57502(%rip), %rdx
    00002034: 	movq	%r14, %rsi
    00002037: 	movq	%r12, %rdi
    0000203a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8250
    0000203f: 	movq	%r12, %rdx
    00002042: 	movl	$0x1f40, %esi
    00002047: 	movq	%rbp, %rdi
    0000204a: 	callq	_Z13test_constantIj11shift_rightIjLi6EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 8266
    0000204f: 	movq	0xa0(%rsp), %rdi
    00002057: 	cmpq	%r13, %rdi
    0000205a: 	je	.Ltmp6145 # Offset: 8282
    0000205c: 	movq	0xb0(%rsp), %rax
    00002064: 	leaq	0x1(%rax), %rsi
    00002068: 	callq	_ZdlPvm@PLT # Offset: 8296
.Ltmp6145:
    0000206d: 	leaq	DATAat0x57a08(%rip), %rdx
    00002074: 	movq	%r14, %rsi
    00002077: 	movq	%r12, %rdi
    0000207a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8314
    0000207f: 	callq	clock@PLT # Offset: 8319
    00002084: 	movl	iterations(%rip), %ecx
    0000208a: 	movl	$0x0, (%rsp)
    00002091: 	movq	%rax, start_time(%rip)
    00002098: 	testl	%ecx, %ecx
    0000209a: 	jle	.Ltmp6146 # Offset: 8346
.Ltmp6149:
    000020a0: 	movq	%rbp, %rax
    000020a3: 	pxor	%xmm1, %xmm1
    000020a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6147:
    000020b0: 	movdqa	(%rax), %xmm0
    000020b4: 	addq	$0x10, %rax
    000020b8: 	psrld	$0x6, %xmm0
    000020bd: 	paddd	%xmm0, %xmm1
    000020c1: 	cmpq	%rbx, %rax
    000020c4: 	jne	.Ltmp6147 # Offset: 8388
    000020c6: 	cvttsd2si	init_value(%rip), %rdx
    000020cf: 	movdqa	%xmm1, %xmm0
    000020d3: 	psrldq	$0x8, %xmm0
    000020d8: 	paddd	%xmm0, %xmm1
    000020dc: 	movdqa	%xmm1, %xmm0
    000020e0: 	shrl	$0x6, %edx
    000020e3: 	psrldq	$0x4, %xmm0
    000020e8: 	imull	$0x1f40, %edx, %edx
    000020ee: 	paddd	%xmm0, %xmm1
    000020f2: 	movd	%xmm1, %eax
    000020f6: 	cmpl	%eax, %edx
    000020f8: 	je	.Ltmp6148 # Offset: 8440
    000020fa: 	movl	current_test(%rip), %edx
    00002100: 	leaq	DATAat0x571d0(%rip), %rsi
    00002107: 	movl	$0x1, %edi
    0000210c: 	xorl	%eax, %eax
    0000210e: 	callq	__printf_chk@PLT # Offset: 8462
    00002113: 	movl	iterations(%rip), %ecx
.Ltmp6148:
    00002119: 	addl	$0x1, (%rsp)
    0000211d: 	movl	(%rsp), %eax
    00002120: 	cmpl	%ecx, %eax
    00002122: 	jl	.Ltmp6149 # Offset: 8482
.Ltmp6146:
    00002128: 	movq	%r12, %rsi
    0000212b: 	movq	%r15, %rdi
    0000212e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8494
    00002133: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000213a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002141: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002148: 	je	.Ltmp6150 # Offset: 8520
.Ltmp6460:
    0000214e: 	movq	-0x20(%rax), %rdi
    00002152: 	movq	%rdi, (%rsp)
    00002156: 	callq	clock@PLT # Offset: 8534
    0000215b: 	movq	(%rsp), %rdi
    0000215f: 	pxor	%xmm0, %xmm0
    00002163: 	movq	%rax, end_time(%rip)
    0000216a: 	subq	start_time(%rip), %rax
    00002171: 	cvtsi2sd	%rax, %xmm0
    00002176: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000217e: 	callq	_Z13record_resultdPKc # Offset: 8574
    00002183: 	movq	0xa0(%rsp), %rdi
    0000218b: 	cmpq	%r13, %rdi
    0000218e: 	je	.Ltmp6151 # Offset: 8590
    00002190: 	movq	0xb0(%rsp), %rax
    00002198: 	leaq	0x1(%rax), %rsi
    0000219c: 	callq	_ZdlPvm@PLT # Offset: 8604
.Ltmp6151:
    000021a1: 	leaq	DATAat0x57514(%rip), %rdx
    000021a8: 	movq	%r14, %rsi
    000021ab: 	movq	%r12, %rdi
    000021ae: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8622
    000021b3: 	movq	%r12, %rcx
    000021b6: 	movl	$0x40, %edx
    000021bb: 	movl	$0x1f40, %esi
    000021c0: 	movq	%rbp, %rdi
    000021c3: 	callq	_Z14test_variable1Ij22custom_divide_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 8643
    000021c8: 	movq	0xa0(%rsp), %rdi
    000021d0: 	cmpq	%r13, %rdi
    000021d3: 	je	.Ltmp6152 # Offset: 8659
    000021d5: 	movq	0xb0(%rsp), %rax
    000021dd: 	leaq	0x1(%rax), %rsi
    000021e1: 	callq	_ZdlPvm@PLT # Offset: 8673
.Ltmp6152:
    000021e6: 	leaq	DATAat0x5752b(%rip), %rdx
    000021ed: 	movq	%r14, %rsi
    000021f0: 	movq	%r12, %rdi
    000021f3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8691
    000021f8: 	callq	clock@PLT # Offset: 8696
    000021fd: 	movl	iterations(%rip), %ecx
    00002203: 	movl	$0x0, (%rsp)
    0000220a: 	movq	%rax, start_time(%rip)
    00002211: 	testl	%ecx, %ecx
    00002213: 	jle	.Ltmp6153 # Offset: 8723
    00002215: 	nopl	(%rax) # Size: 3
.Ltmp6156:
    00002218: 	movq	%rbp, %rax
    0000221b: 	pxor	%xmm1, %xmm1
    0000221f: 	nop # Size: 1
.Ltmp6154:
    00002220: 	movdqa	(%rax), %xmm0
    00002224: 	addq	$0x10, %rax
    00002228: 	psrld	$0x6, %xmm0
    0000222d: 	paddd	%xmm0, %xmm1
    00002231: 	cmpq	%rax, %rbx
    00002234: 	jne	.Ltmp6154 # Offset: 8756
    00002236: 	cvttsd2si	init_value(%rip), %rdx
    0000223f: 	movdqa	%xmm1, %xmm0
    00002243: 	psrldq	$0x8, %xmm0
    00002248: 	paddd	%xmm0, %xmm1
    0000224c: 	movdqa	%xmm1, %xmm0
    00002250: 	shrl	$0x6, %edx
    00002253: 	psrldq	$0x4, %xmm0
    00002258: 	imull	$0x1f40, %edx, %edx
    0000225e: 	paddd	%xmm0, %xmm1
    00002262: 	movd	%xmm1, %eax
    00002266: 	cmpl	%eax, %edx
    00002268: 	je	.Ltmp6155 # Offset: 8808
    0000226a: 	movl	current_test(%rip), %edx
    00002270: 	leaq	DATAat0x571d0(%rip), %rsi
    00002277: 	movl	$0x1, %edi
    0000227c: 	xorl	%eax, %eax
    0000227e: 	callq	__printf_chk@PLT # Offset: 8830
    00002283: 	movl	iterations(%rip), %ecx
.Ltmp6155:
    00002289: 	addl	$0x1, (%rsp)
    0000228d: 	movl	(%rsp), %eax
    00002290: 	cmpl	%ecx, %eax
    00002292: 	jl	.Ltmp6156 # Offset: 8850
.Ltmp6153:
    00002294: 	movq	%r12, %rsi
    00002297: 	movq	%r15, %rdi
    0000229a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8858
    0000229f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000022a6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000022ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000022b4: 	je	.Ltmp6157 # Offset: 8884
.Ltmp6459:
    000022ba: 	movq	-0x20(%rax), %rdi
    000022be: 	movq	%rdi, (%rsp)
    000022c2: 	callq	clock@PLT # Offset: 8898
    000022c7: 	movq	(%rsp), %rdi
    000022cb: 	pxor	%xmm0, %xmm0
    000022cf: 	movq	%rax, end_time(%rip)
    000022d6: 	subq	start_time(%rip), %rax
    000022dd: 	cvtsi2sd	%rax, %xmm0
    000022e2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000022ea: 	callq	_Z13record_resultdPKc # Offset: 8938
    000022ef: 	movq	0xa0(%rsp), %rdi
    000022f7: 	cmpq	%r13, %rdi
    000022fa: 	je	.Ltmp6158 # Offset: 8954
    000022fc: 	movq	0xb0(%rsp), %rax
    00002304: 	leaq	0x1(%rax), %rsi
    00002308: 	callq	_ZdlPvm@PLT # Offset: 8968
.Ltmp6158:
    0000230d: 	leaq	0x80(%rsp), %rdi
    00002315: 	leaq	DATAat0x57542(%rip), %rdx
    0000231c: 	movq	%r14, %rsi
    0000231f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8991
    00002324: 	movl	iterations(%rip), %edx
    0000232a: 	xorl	%r8d, %r8d
    0000232d: 	xorl	%ecx, %ecx
    0000232f: 	movl	$0x1f40, %esi
    00002334: 	movq	0x80(%rsp), %rdi
    0000233c: 	callq	_Z9summarizePKciiii # Offset: 9020
    00002341: 	leaq	DATAat0x5755d(%rip), %rdx
    00002348: 	movq	%r14, %rsi
    0000234b: 	movq	%r12, %rdi
    0000234e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9038
    00002353: 	callq	clock@PLT # Offset: 9043
    00002358: 	movl	iterations(%rip), %ecx
    0000235e: 	movq	%rax, start_time(%rip)
    00002365: 	testl	%ecx, %ecx
    00002367: 	jle	.Ltmp6159 # Offset: 9063
    0000236d: 	movdqa	DATAat0x57c70(%rip), %xmm5
    00002375: 	movl	$0x0, 0x1c(%rsp)
    0000237d: 	movaps	%xmm5, (%rsp)
    00002381: 	nopl	(%rax) # Size: 7
.Ltmp6162:
    00002388: 	movq	%rbp, %rax
    0000238b: 	pxor	%xmm0, %xmm0
    0000238f: 	nop # Size: 1
.Ltmp6160:
    00002390: 	movdqa	(%rsp), %xmm1
    00002395: 	pand	(%rax), %xmm1
    00002399: 	addq	$0x10, %rax
    0000239d: 	paddd	%xmm1, %xmm0
    000023a1: 	cmpq	%rbx, %rax
    000023a4: 	jne	.Ltmp6160 # Offset: 9124
    000023a6: 	cvttsd2si	init_value(%rip), %rdx
    000023af: 	movdqa	%xmm0, %xmm1
    000023b3: 	psrldq	$0x8, %xmm1
    000023b8: 	paddd	%xmm1, %xmm0
    000023bc: 	movdqa	%xmm0, %xmm1
    000023c0: 	andl	$0x1, %edx
    000023c3: 	psrldq	$0x4, %xmm1
    000023c8: 	negl	%edx
    000023ca: 	paddd	%xmm1, %xmm0
    000023ce: 	andl	$0x1f40, %edx
    000023d4: 	movd	%xmm0, %eax
    000023d8: 	cmpl	%eax, %edx
    000023da: 	je	.Ltmp6161 # Offset: 9178
    000023dc: 	movl	current_test(%rip), %edx
    000023e2: 	leaq	DATAat0x571d0(%rip), %rsi
    000023e9: 	movl	$0x1, %edi
    000023ee: 	xorl	%eax, %eax
    000023f0: 	callq	__printf_chk@PLT # Offset: 9200
    000023f5: 	movl	iterations(%rip), %ecx
.Ltmp6161:
    000023fb: 	addl	$0x1, 0x1c(%rsp)
    00002400: 	movl	0x1c(%rsp), %eax
    00002404: 	cmpl	%ecx, %eax
    00002406: 	jl	.Ltmp6162 # Offset: 9222
.Ltmp6159:
    0000240c: 	movq	%r12, %rsi
    0000240f: 	movq	%r15, %rdi
    00002412: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9234
    00002417: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000241e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002425: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000242c: 	je	.Ltmp6163 # Offset: 9260
.Ltmp6458:
    00002432: 	movq	-0x20(%rax), %rdi
    00002436: 	movq	%rdi, (%rsp)
    0000243a: 	callq	clock@PLT # Offset: 9274
    0000243f: 	movq	(%rsp), %rdi
    00002443: 	pxor	%xmm0, %xmm0
    00002447: 	movq	%rax, end_time(%rip)
    0000244e: 	subq	start_time(%rip), %rax
    00002455: 	cvtsi2sd	%rax, %xmm0
    0000245a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002462: 	callq	_Z13record_resultdPKc # Offset: 9314
    00002467: 	movq	0xa0(%rsp), %rdi
    0000246f: 	cmpq	%r13, %rdi
    00002472: 	je	.Ltmp6164 # Offset: 9330
    00002474: 	movq	0xb0(%rsp), %rax
    0000247c: 	leaq	0x1(%rax), %rsi
    00002480: 	callq	_ZdlPvm@PLT # Offset: 9344
.Ltmp6164:
    00002485: 	leaq	DATAat0x57564(%rip), %rdx
    0000248c: 	movq	%r14, %rsi
    0000248f: 	movq	%r12, %rdi
    00002492: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9362
    00002497: 	callq	clock@PLT # Offset: 9367
    0000249c: 	movl	iterations(%rip), %ecx
    000024a2: 	movq	%rax, start_time(%rip)
    000024a9: 	testl	%ecx, %ecx
    000024ab: 	jle	.Ltmp6165 # Offset: 9387
    000024b1: 	movdqa	DATAat0x57c70(%rip), %xmm6
    000024b9: 	movl	$0x0, 0x1c(%rsp)
    000024c1: 	movaps	%xmm6, (%rsp)
    000024c5: 	nopl	(%rax) # Size: 3
.Ltmp6168:
    000024c8: 	movq	%rbp, %rax
    000024cb: 	pxor	%xmm0, %xmm0
    000024cf: 	nop # Size: 1
.Ltmp6166:
    000024d0: 	movdqa	(%rsp), %xmm1
    000024d5: 	pand	(%rax), %xmm1
    000024d9: 	addq	$0x10, %rax
    000024dd: 	paddd	%xmm1, %xmm0
    000024e1: 	cmpq	%rax, %rbx
    000024e4: 	jne	.Ltmp6166 # Offset: 9444
    000024e6: 	cvttsd2si	init_value(%rip), %rdx
    000024ef: 	movdqa	%xmm0, %xmm1
    000024f3: 	psrldq	$0x8, %xmm1
    000024f8: 	paddd	%xmm1, %xmm0
    000024fc: 	movdqa	%xmm0, %xmm1
    00002500: 	andl	$0x1, %edx
    00002503: 	psrldq	$0x4, %xmm1
    00002508: 	negl	%edx
    0000250a: 	paddd	%xmm1, %xmm0
    0000250e: 	andl	$0x1f40, %edx
    00002514: 	movd	%xmm0, %eax
    00002518: 	cmpl	%eax, %edx
    0000251a: 	je	.Ltmp6167 # Offset: 9498
    0000251c: 	movl	current_test(%rip), %edx
    00002522: 	leaq	DATAat0x571d0(%rip), %rsi
    00002529: 	movl	$0x1, %edi
    0000252e: 	xorl	%eax, %eax
    00002530: 	callq	__printf_chk@PLT # Offset: 9520
    00002535: 	movl	iterations(%rip), %ecx
.Ltmp6167:
    0000253b: 	addl	$0x1, 0x1c(%rsp)
    00002540: 	movl	0x1c(%rsp), %eax
    00002544: 	cmpl	%ecx, %eax
    00002546: 	jl	.Ltmp6168 # Offset: 9542
.Ltmp6165:
    00002548: 	movq	%r12, %rsi
    0000254b: 	movq	%r15, %rdi
    0000254e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9550
    00002553: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000255a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002561: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002568: 	je	.Ltmp6169 # Offset: 9576
.Ltmp6457:
    0000256e: 	movq	-0x20(%rax), %rdi
    00002572: 	movq	%rdi, (%rsp)
    00002576: 	callq	clock@PLT # Offset: 9590
    0000257b: 	movq	(%rsp), %rdi
    0000257f: 	pxor	%xmm0, %xmm0
    00002583: 	movq	%rax, end_time(%rip)
    0000258a: 	subq	start_time(%rip), %rax
    00002591: 	cvtsi2sd	%rax, %xmm0
    00002596: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000259e: 	callq	_Z13record_resultdPKc # Offset: 9630
    000025a3: 	movq	0xa0(%rsp), %rdi
    000025ab: 	cmpq	%r13, %rdi
    000025ae: 	je	.Ltmp6170 # Offset: 9646
    000025b0: 	movq	0xb0(%rsp), %rax
    000025b8: 	leaq	0x1(%rax), %rsi
    000025bc: 	callq	_ZdlPvm@PLT # Offset: 9660
.Ltmp6170:
    000025c1: 	leaq	DATAat0x57575(%rip), %rdx
    000025c8: 	movq	%r14, %rsi
    000025cb: 	movq	%r12, %rdi
    000025ce: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9678
    000025d3: 	movq	%r12, %rdx
    000025d6: 	movl	$0x1f40, %esi
    000025db: 	movq	%rbp, %rdi
    000025de: 	callq	_Z13test_constantIj14and_remainder2IjLi1EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 9694
    000025e3: 	movq	0xa0(%rsp), %rdi
    000025eb: 	cmpq	%r13, %rdi
    000025ee: 	je	.Ltmp6171 # Offset: 9710
    000025f0: 	movq	0xb0(%rsp), %rax
    000025f8: 	leaq	0x1(%rax), %rsi
    000025fc: 	callq	_ZdlPvm@PLT # Offset: 9724
.Ltmp6171:
    00002601: 	leaq	DATAat0x57587(%rip), %rdx
    00002608: 	movq	%r14, %rsi
    0000260b: 	movq	%r12, %rdi
    0000260e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9742
    00002613: 	callq	clock@PLT # Offset: 9747
    00002618: 	movl	iterations(%rip), %ecx
    0000261e: 	movq	%rax, start_time(%rip)
    00002625: 	testl	%ecx, %ecx
    00002627: 	jle	.Ltmp6172 # Offset: 9767
    0000262d: 	movdqa	DATAat0x57c70(%rip), %xmm7
    00002635: 	movl	$0x0, 0x1c(%rsp)
    0000263d: 	movaps	%xmm7, (%rsp)
    00002641: 	nopl	(%rax) # Size: 7
.Ltmp6175:
    00002648: 	movq	%rbp, %rax
    0000264b: 	pxor	%xmm0, %xmm0
    0000264f: 	nop # Size: 1
.Ltmp6173:
    00002650: 	movdqa	(%rsp), %xmm1
    00002655: 	pand	(%rax), %xmm1
    00002659: 	addq	$0x10, %rax
    0000265d: 	paddd	%xmm1, %xmm0
    00002661: 	cmpq	%rbx, %rax
    00002664: 	jne	.Ltmp6173 # Offset: 9828
    00002666: 	cvttsd2si	init_value(%rip), %rdx
    0000266f: 	movdqa	%xmm0, %xmm1
    00002673: 	psrldq	$0x8, %xmm1
    00002678: 	paddd	%xmm1, %xmm0
    0000267c: 	movdqa	%xmm0, %xmm1
    00002680: 	andl	$0x1, %edx
    00002683: 	psrldq	$0x4, %xmm1
    00002688: 	negl	%edx
    0000268a: 	paddd	%xmm1, %xmm0
    0000268e: 	andl	$0x1f40, %edx
    00002694: 	movd	%xmm0, %eax
    00002698: 	cmpl	%eax, %edx
    0000269a: 	je	.Ltmp6174 # Offset: 9882
    0000269c: 	movl	current_test(%rip), %edx
    000026a2: 	leaq	DATAat0x571d0(%rip), %rsi
    000026a9: 	movl	$0x1, %edi
    000026ae: 	xorl	%eax, %eax
    000026b0: 	callq	__printf_chk@PLT # Offset: 9904
    000026b5: 	movl	iterations(%rip), %ecx
.Ltmp6174:
    000026bb: 	addl	$0x1, 0x1c(%rsp)
    000026c0: 	movl	0x1c(%rsp), %eax
    000026c4: 	cmpl	%ecx, %eax
    000026c6: 	jl	.Ltmp6175 # Offset: 9926
.Ltmp6172:
    000026cc: 	movq	%r12, %rsi
    000026cf: 	movq	%r15, %rdi
    000026d2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9938
    000026d7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000026de: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000026e5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000026ec: 	je	.Ltmp6176 # Offset: 9964
.Ltmp6456:
    000026f2: 	movq	-0x20(%rax), %rdi
    000026f6: 	movq	%rdi, (%rsp)
    000026fa: 	callq	clock@PLT # Offset: 9978
    000026ff: 	movq	(%rsp), %rdi
    00002703: 	pxor	%xmm0, %xmm0
    00002707: 	movq	%rax, end_time(%rip)
    0000270e: 	subq	start_time(%rip), %rax
    00002715: 	cvtsi2sd	%rax, %xmm0
    0000271a: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002722: 	callq	_Z13record_resultdPKc # Offset: 10018
    00002727: 	movq	0xa0(%rsp), %rdi
    0000272f: 	cmpq	%r13, %rdi
    00002732: 	je	.Ltmp6177 # Offset: 10034
    00002734: 	movq	0xb0(%rsp), %rax
    0000273c: 	leaq	0x1(%rax), %rsi
    00002740: 	callq	_ZdlPvm@PLT # Offset: 10048
.Ltmp6177:
    00002745: 	leaq	DATAat0x5759e(%rip), %rdx
    0000274c: 	movq	%r14, %rsi
    0000274f: 	movq	%r12, %rdi
    00002752: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10066
    00002757: 	movq	%r12, %rcx
    0000275a: 	movl	$0x2, %edx
    0000275f: 	movl	$0x1f40, %esi
    00002764: 	movq	%rbp, %rdi
    00002767: 	callq	_Z14test_variable1Ij25custom_remainder_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10087
    0000276c: 	movq	0xa0(%rsp), %rdi
    00002774: 	cmpq	%r13, %rdi
    00002777: 	je	.Ltmp6178 # Offset: 10103
    00002779: 	movq	0xb0(%rsp), %rax
    00002781: 	leaq	0x1(%rax), %rsi
    00002785: 	callq	_ZdlPvm@PLT # Offset: 10117
.Ltmp6178:
    0000278a: 	leaq	DATAat0x575b7(%rip), %rdx
    00002791: 	movq	%r14, %rsi
    00002794: 	movq	%r12, %rdi
    00002797: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10135
    0000279c: 	callq	clock@PLT # Offset: 10140
    000027a1: 	movl	iterations(%rip), %ecx
    000027a7: 	movq	%rax, start_time(%rip)
    000027ae: 	testl	%ecx, %ecx
    000027b0: 	jle	.Ltmp6179 # Offset: 10160
    000027b6: 	movdqa	DATAat0x57c70(%rip), %xmm5
    000027be: 	movl	$0x0, 0x1c(%rsp)
    000027c6: 	movaps	%xmm5, (%rsp)
    000027ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6182:
    000027d0: 	movq	%rbp, %rax
    000027d3: 	pxor	%xmm0, %xmm0
    000027d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6180:
    000027e0: 	movdqa	(%rsp), %xmm1
    000027e5: 	pand	(%rax), %xmm1
    000027e9: 	addq	$0x10, %rax
    000027ed: 	paddd	%xmm1, %xmm0
    000027f1: 	cmpq	%rax, %rbx
    000027f4: 	jne	.Ltmp6180 # Offset: 10228
    000027f6: 	cvttsd2si	init_value(%rip), %rdx
    000027ff: 	movdqa	%xmm0, %xmm1
    00002803: 	psrldq	$0x8, %xmm1
    00002808: 	paddd	%xmm1, %xmm0
    0000280c: 	movdqa	%xmm0, %xmm1
    00002810: 	andl	$0x1, %edx
    00002813: 	psrldq	$0x4, %xmm1
    00002818: 	negl	%edx
    0000281a: 	paddd	%xmm1, %xmm0
    0000281e: 	andl	$0x1f40, %edx
    00002824: 	movd	%xmm0, %eax
    00002828: 	cmpl	%eax, %edx
    0000282a: 	je	.Ltmp6181 # Offset: 10282
    0000282c: 	movl	current_test(%rip), %edx
    00002832: 	leaq	DATAat0x571d0(%rip), %rsi
    00002839: 	movl	$0x1, %edi
    0000283e: 	xorl	%eax, %eax
    00002840: 	callq	__printf_chk@PLT # Offset: 10304
    00002845: 	movl	iterations(%rip), %ecx
.Ltmp6181:
    0000284b: 	addl	$0x1, 0x1c(%rsp)
    00002850: 	movl	0x1c(%rsp), %eax
    00002854: 	cmpl	%ecx, %eax
    00002856: 	jl	.Ltmp6182 # Offset: 10326
.Ltmp6179:
    0000285c: 	movq	%r12, %rsi
    0000285f: 	movq	%r15, %rdi
    00002862: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10338
    00002867: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000286e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002875: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000287c: 	je	.Ltmp6183 # Offset: 10364
.Ltmp6455:
    00002882: 	movq	-0x20(%rax), %rdi
    00002886: 	movq	%rdi, (%rsp)
    0000288a: 	callq	clock@PLT # Offset: 10378
    0000288f: 	movq	(%rsp), %rdi
    00002893: 	pxor	%xmm0, %xmm0
    00002897: 	movq	%rax, end_time(%rip)
    0000289e: 	subq	start_time(%rip), %rax
    000028a5: 	cvtsi2sd	%rax, %xmm0
    000028aa: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000028b2: 	callq	_Z13record_resultdPKc # Offset: 10418
    000028b7: 	movq	0xa0(%rsp), %rdi
    000028bf: 	cmpq	%r13, %rdi
    000028c2: 	je	.Ltmp6184 # Offset: 10434
    000028c4: 	movq	0xb0(%rsp), %rax
    000028cc: 	leaq	0x1(%rax), %rsi
    000028d0: 	callq	_ZdlPvm@PLT # Offset: 10448
.Ltmp6184:
    000028d5: 	leaq	DATAat0x575d0(%rip), %rdx
    000028dc: 	movq	%r14, %rsi
    000028df: 	movq	%r12, %rdi
    000028e2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10466
    000028e7: 	callq	clock@PLT # Offset: 10471
    000028ec: 	movl	iterations(%rip), %ecx
    000028f2: 	movq	%rax, start_time(%rip)
    000028f9: 	testl	%ecx, %ecx
    000028fb: 	jle	.Ltmp6185 # Offset: 10491
    00002901: 	movdqa	DATAat0x57cd0(%rip), %xmm6
    00002909: 	movl	$0x0, 0x1c(%rsp)
    00002911: 	movaps	%xmm6, (%rsp)
    00002915: 	nopl	(%rax) # Size: 3
.Ltmp6188:
    00002918: 	movq	%rbp, %rax
    0000291b: 	pxor	%xmm0, %xmm0
    0000291f: 	nop # Size: 1
.Ltmp6186:
    00002920: 	movdqa	(%rsp), %xmm1
    00002925: 	pand	(%rax), %xmm1
    00002929: 	addq	$0x10, %rax
    0000292d: 	paddd	%xmm1, %xmm0
    00002931: 	cmpq	%rbx, %rax
    00002934: 	jne	.Ltmp6186 # Offset: 10548
    00002936: 	cvttsd2si	init_value(%rip), %rdx
    0000293f: 	movdqa	%xmm0, %xmm1
    00002943: 	psrldq	$0x8, %xmm1
    00002948: 	paddd	%xmm1, %xmm0
    0000294c: 	movdqa	%xmm0, %xmm1
    00002950: 	andl	$0x3, %edx
    00002953: 	psrldq	$0x4, %xmm1
    00002958: 	imull	$0x1f40, %edx, %edx
    0000295e: 	paddd	%xmm1, %xmm0
    00002962: 	movd	%xmm0, %eax
    00002966: 	cmpl	%eax, %edx
    00002968: 	je	.Ltmp6187 # Offset: 10600
    0000296a: 	movl	current_test(%rip), %edx
    00002970: 	leaq	DATAat0x571d0(%rip), %rsi
    00002977: 	movl	$0x1, %edi
    0000297c: 	xorl	%eax, %eax
    0000297e: 	callq	__printf_chk@PLT # Offset: 10622
    00002983: 	movl	iterations(%rip), %ecx
.Ltmp6187:
    00002989: 	addl	$0x1, 0x1c(%rsp)
    0000298e: 	movl	0x1c(%rsp), %eax
    00002992: 	cmpl	%ecx, %eax
    00002994: 	jl	.Ltmp6188 # Offset: 10644
.Ltmp6185:
    00002996: 	movq	%r12, %rsi
    00002999: 	movq	%r15, %rdi
    0000299c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10652
    000029a1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000029a8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000029af: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000029b6: 	je	.Ltmp6189 # Offset: 10678
.Ltmp6454:
    000029bc: 	movq	-0x20(%rax), %rdi
    000029c0: 	movq	%rdi, (%rsp)
    000029c4: 	callq	clock@PLT # Offset: 10692
    000029c9: 	movq	(%rsp), %rdi
    000029cd: 	pxor	%xmm0, %xmm0
    000029d1: 	movq	%rax, end_time(%rip)
    000029d8: 	subq	start_time(%rip), %rax
    000029df: 	cvtsi2sd	%rax, %xmm0
    000029e4: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000029ec: 	callq	_Z13record_resultdPKc # Offset: 10732
    000029f1: 	movq	0xa0(%rsp), %rdi
    000029f9: 	cmpq	%r13, %rdi
    000029fc: 	je	.Ltmp6190 # Offset: 10748
    000029fe: 	movq	0xb0(%rsp), %rax
    00002a06: 	leaq	0x1(%rax), %rsi
    00002a0a: 	callq	_ZdlPvm@PLT # Offset: 10762
.Ltmp6190:
    00002a0f: 	leaq	DATAat0x575d7(%rip), %rdx
    00002a16: 	movq	%r14, %rsi
    00002a19: 	movq	%r12, %rdi
    00002a1c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10780
    00002a21: 	callq	clock@PLT # Offset: 10785
    00002a26: 	movl	iterations(%rip), %ecx
    00002a2c: 	movq	%rax, start_time(%rip)
    00002a33: 	testl	%ecx, %ecx
    00002a35: 	jle	.Ltmp6191 # Offset: 10805
    00002a3b: 	movdqa	DATAat0x57cd0(%rip), %xmm7
    00002a43: 	movl	$0x0, 0x1c(%rsp)
    00002a4b: 	movaps	%xmm7, (%rsp)
    00002a4f: 	nop # Size: 1
.Ltmp6194:
    00002a50: 	movq	%rbp, %rax
    00002a53: 	pxor	%xmm0, %xmm0
    00002a57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6192:
    00002a60: 	movdqa	(%rsp), %xmm1
    00002a65: 	pand	(%rax), %xmm1
    00002a69: 	addq	$0x10, %rax
    00002a6d: 	paddd	%xmm1, %xmm0
    00002a71: 	cmpq	%rax, %rbx
    00002a74: 	jne	.Ltmp6192 # Offset: 10868
    00002a76: 	cvttsd2si	init_value(%rip), %rdx
    00002a7f: 	movdqa	%xmm0, %xmm1
    00002a83: 	psrldq	$0x8, %xmm1
    00002a88: 	paddd	%xmm1, %xmm0
    00002a8c: 	movdqa	%xmm0, %xmm1
    00002a90: 	andl	$0x3, %edx
    00002a93: 	psrldq	$0x4, %xmm1
    00002a98: 	imull	$0x1f40, %edx, %edx
    00002a9e: 	paddd	%xmm1, %xmm0
    00002aa2: 	movd	%xmm0, %eax
    00002aa6: 	cmpl	%eax, %edx
    00002aa8: 	je	.Ltmp6193 # Offset: 10920
    00002aaa: 	movl	current_test(%rip), %edx
    00002ab0: 	leaq	DATAat0x571d0(%rip), %rsi
    00002ab7: 	movl	$0x1, %edi
    00002abc: 	xorl	%eax, %eax
    00002abe: 	callq	__printf_chk@PLT # Offset: 10942
    00002ac3: 	movl	iterations(%rip), %ecx
.Ltmp6193:
    00002ac9: 	addl	$0x1, 0x1c(%rsp)
    00002ace: 	movl	0x1c(%rsp), %eax
    00002ad2: 	cmpl	%ecx, %eax
    00002ad4: 	jl	.Ltmp6194 # Offset: 10964
.Ltmp6191:
    00002ada: 	movq	%r12, %rsi
    00002add: 	movq	%r15, %rdi
    00002ae0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10976
    00002ae5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002aec: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002af3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002afa: 	je	.Ltmp6195 # Offset: 11002
.Ltmp6453:
    00002b00: 	movq	-0x20(%rax), %rdi
    00002b04: 	movq	%rdi, (%rsp)
    00002b08: 	callq	clock@PLT # Offset: 11016
    00002b0d: 	movq	(%rsp), %rdi
    00002b11: 	pxor	%xmm0, %xmm0
    00002b15: 	movq	%rax, end_time(%rip)
    00002b1c: 	subq	start_time(%rip), %rax
    00002b23: 	cvtsi2sd	%rax, %xmm0
    00002b28: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002b30: 	callq	_Z13record_resultdPKc # Offset: 11056
    00002b35: 	movq	0xa0(%rsp), %rdi
    00002b3d: 	cmpq	%r13, %rdi
    00002b40: 	je	.Ltmp6196 # Offset: 11072
    00002b42: 	movq	0xb0(%rsp), %rax
    00002b4a: 	leaq	0x1(%rax), %rsi
    00002b4e: 	callq	_ZdlPvm@PLT # Offset: 11086
.Ltmp6196:
    00002b53: 	leaq	DATAat0x575e8(%rip), %rdx
    00002b5a: 	movq	%r14, %rsi
    00002b5d: 	movq	%r12, %rdi
    00002b60: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11104
    00002b65: 	callq	clock@PLT # Offset: 11109
    00002b6a: 	movl	iterations(%rip), %ecx
    00002b70: 	movq	%rax, start_time(%rip)
    00002b77: 	testl	%ecx, %ecx
    00002b79: 	jle	.Ltmp6197 # Offset: 11129
    00002b7f: 	movdqa	DATAat0x57cd0(%rip), %xmm3
    00002b87: 	movl	$0x0, 0x1c(%rsp)
    00002b8f: 	movaps	%xmm3, (%rsp)
    00002b93: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6200:
    00002b98: 	movq	%rbp, %rax
    00002b9b: 	pxor	%xmm0, %xmm0
    00002b9f: 	nop # Size: 1
.Ltmp6198:
    00002ba0: 	movdqa	(%rsp), %xmm1
    00002ba5: 	pand	(%rax), %xmm1
    00002ba9: 	addq	$0x10, %rax
    00002bad: 	paddd	%xmm1, %xmm0
    00002bb1: 	cmpq	%rbx, %rax
    00002bb4: 	jne	.Ltmp6198 # Offset: 11188
    00002bb6: 	cvttsd2si	init_value(%rip), %rdx
    00002bbf: 	movdqa	%xmm0, %xmm1
    00002bc3: 	psrldq	$0x8, %xmm1
    00002bc8: 	paddd	%xmm1, %xmm0
    00002bcc: 	movdqa	%xmm0, %xmm1
    00002bd0: 	andl	$0x3, %edx
    00002bd3: 	psrldq	$0x4, %xmm1
    00002bd8: 	imull	$0x1f40, %edx, %edx
    00002bde: 	paddd	%xmm1, %xmm0
    00002be2: 	movd	%xmm0, %eax
    00002be6: 	cmpl	%eax, %edx
    00002be8: 	je	.Ltmp6199 # Offset: 11240
    00002bea: 	movl	current_test(%rip), %edx
    00002bf0: 	leaq	DATAat0x571d0(%rip), %rsi
    00002bf7: 	movl	$0x1, %edi
    00002bfc: 	xorl	%eax, %eax
    00002bfe: 	callq	__printf_chk@PLT # Offset: 11262
    00002c03: 	movl	iterations(%rip), %ecx
.Ltmp6199:
    00002c09: 	addl	$0x1, 0x1c(%rsp)
    00002c0e: 	movl	0x1c(%rsp), %eax
    00002c12: 	cmpl	%ecx, %eax
    00002c14: 	jl	.Ltmp6200 # Offset: 11284
.Ltmp6197:
    00002c1a: 	movq	%r12, %rsi
    00002c1d: 	movq	%r15, %rdi
    00002c20: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11296
    00002c25: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002c2c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002c33: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002c3a: 	je	.Ltmp6201 # Offset: 11322
.Ltmp6452:
    00002c40: 	movq	-0x20(%rax), %rdi
    00002c44: 	movq	%rdi, (%rsp)
    00002c48: 	callq	clock@PLT # Offset: 11336
    00002c4d: 	movq	(%rsp), %rdi
    00002c51: 	pxor	%xmm0, %xmm0
    00002c55: 	movq	%rax, end_time(%rip)
    00002c5c: 	subq	start_time(%rip), %rax
    00002c63: 	cvtsi2sd	%rax, %xmm0
    00002c68: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002c70: 	callq	_Z13record_resultdPKc # Offset: 11376
    00002c75: 	movq	0xa0(%rsp), %rdi
    00002c7d: 	cmpq	%r13, %rdi
    00002c80: 	je	.Ltmp6202 # Offset: 11392
    00002c82: 	movq	0xb0(%rsp), %rax
    00002c8a: 	leaq	0x1(%rax), %rsi
    00002c8e: 	callq	_ZdlPvm@PLT # Offset: 11406
.Ltmp6202:
    00002c93: 	leaq	DATAat0x575fa(%rip), %rdx
    00002c9a: 	movq	%r14, %rsi
    00002c9d: 	movq	%r12, %rdi
    00002ca0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11424
    00002ca5: 	callq	clock@PLT # Offset: 11429
    00002caa: 	movl	iterations(%rip), %ecx
    00002cb0: 	movq	%rax, start_time(%rip)
    00002cb7: 	testl	%ecx, %ecx
    00002cb9: 	jle	.Ltmp6203 # Offset: 11449
    00002cbf: 	movdqa	DATAat0x57cd0(%rip), %xmm4
    00002cc7: 	movl	$0x0, 0x1c(%rsp)
    00002ccf: 	movaps	%xmm4, (%rsp)
    00002cd3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6206:
    00002cd8: 	movq	%rbp, %rax
    00002cdb: 	pxor	%xmm0, %xmm0
    00002cdf: 	nop # Size: 1
.Ltmp6204:
    00002ce0: 	movdqa	(%rsp), %xmm1
    00002ce5: 	pand	(%rax), %xmm1
    00002ce9: 	addq	$0x10, %rax
    00002ced: 	paddd	%xmm1, %xmm0
    00002cf1: 	cmpq	%rax, %rbx
    00002cf4: 	jne	.Ltmp6204 # Offset: 11508
    00002cf6: 	cvttsd2si	init_value(%rip), %rdx
    00002cff: 	movdqa	%xmm0, %xmm1
    00002d03: 	psrldq	$0x8, %xmm1
    00002d08: 	paddd	%xmm1, %xmm0
    00002d0c: 	movdqa	%xmm0, %xmm1
    00002d10: 	andl	$0x3, %edx
    00002d13: 	psrldq	$0x4, %xmm1
    00002d18: 	imull	$0x1f40, %edx, %edx
    00002d1e: 	paddd	%xmm1, %xmm0
    00002d22: 	movd	%xmm0, %eax
    00002d26: 	cmpl	%eax, %edx
    00002d28: 	je	.Ltmp6205 # Offset: 11560
    00002d2a: 	movl	current_test(%rip), %edx
    00002d30: 	leaq	DATAat0x571d0(%rip), %rsi
    00002d37: 	movl	$0x1, %edi
    00002d3c: 	xorl	%eax, %eax
    00002d3e: 	callq	__printf_chk@PLT # Offset: 11582
    00002d43: 	movl	iterations(%rip), %ecx
.Ltmp6205:
    00002d49: 	addl	$0x1, 0x1c(%rsp)
    00002d4e: 	movl	0x1c(%rsp), %eax
    00002d52: 	cmpl	%ecx, %eax
    00002d54: 	jl	.Ltmp6206 # Offset: 11604
.Ltmp6203:
    00002d5a: 	movq	%r12, %rsi
    00002d5d: 	movq	%r15, %rdi
    00002d60: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11616
    00002d65: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002d6c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002d73: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002d7a: 	je	.Ltmp6207 # Offset: 11642
.Ltmp6451:
    00002d80: 	movq	-0x20(%rax), %rdi
    00002d84: 	movq	%rdi, (%rsp)
    00002d88: 	callq	clock@PLT # Offset: 11656
    00002d8d: 	movq	(%rsp), %rdi
    00002d91: 	pxor	%xmm0, %xmm0
    00002d95: 	movq	%rax, end_time(%rip)
    00002d9c: 	subq	start_time(%rip), %rax
    00002da3: 	cvtsi2sd	%rax, %xmm0
    00002da8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002db0: 	callq	_Z13record_resultdPKc # Offset: 11696
    00002db5: 	movq	0xa0(%rsp), %rdi
    00002dbd: 	cmpq	%r13, %rdi
    00002dc0: 	je	.Ltmp6208 # Offset: 11712
    00002dc2: 	movq	0xb0(%rsp), %rax
    00002dca: 	leaq	0x1(%rax), %rsi
    00002dce: 	callq	_ZdlPvm@PLT # Offset: 11726
.Ltmp6208:
    00002dd3: 	leaq	DATAat0x57611(%rip), %rdx
    00002dda: 	movq	%r14, %rsi
    00002ddd: 	movq	%r12, %rdi
    00002de0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11744
    00002de5: 	movq	%r12, %rcx
    00002de8: 	movl	$0x4, %edx
    00002ded: 	movl	$0x1f40, %esi
    00002df2: 	movq	%rbp, %rdi
    00002df5: 	callq	_Z14test_variable1Ij25custom_remainder_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11765
    00002dfa: 	movq	0xa0(%rsp), %rdi
    00002e02: 	cmpq	%r13, %rdi
    00002e05: 	je	.Ltmp6209 # Offset: 11781
    00002e07: 	movq	0xb0(%rsp), %rax
    00002e0f: 	leaq	0x1(%rax), %rsi
    00002e13: 	callq	_ZdlPvm@PLT # Offset: 11795
.Ltmp6209:
    00002e18: 	leaq	DATAat0x5762a(%rip), %rdx
    00002e1f: 	movq	%r14, %rsi
    00002e22: 	movq	%r12, %rdi
    00002e25: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11813
    00002e2a: 	movq	%r12, %rdx
    00002e2d: 	movl	$0x1f40, %esi
    00002e32: 	movq	%rbp, %rdi
    00002e35: 	callq	_Z13test_constantIj16custom_remainderIjLi4EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11829
    00002e3a: 	movq	0xa0(%rsp), %rdi
    00002e42: 	cmpq	%r13, %rdi
    00002e45: 	je	.Ltmp6210 # Offset: 11845
    00002e47: 	movq	0xb0(%rsp), %rax
    00002e4f: 	leaq	0x1(%rax), %rsi
    00002e53: 	callq	_ZdlPvm@PLT # Offset: 11859
.Ltmp6210:
    00002e58: 	leaq	DATAat0x57643(%rip), %rdx
    00002e5f: 	movq	%r14, %rsi
    00002e62: 	movq	%r12, %rdi
    00002e65: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11877
    00002e6a: 	callq	clock@PLT # Offset: 11882
    00002e6f: 	movl	iterations(%rip), %ecx
    00002e75: 	movq	%rax, start_time(%rip)
    00002e7c: 	testl	%ecx, %ecx
    00002e7e: 	jle	.Ltmp6211 # Offset: 11902
    00002e84: 	movdqa	DATAat0x57e00(%rip), %xmm5
    00002e8c: 	movl	$0x0, 0x1c(%rsp)
    00002e94: 	movaps	%xmm5, (%rsp)
    00002e98: 	nopl	(%rax,%rax) # Size: 8
.Ltmp6214:
    00002ea0: 	movq	%rbp, %rax
    00002ea3: 	pxor	%xmm0, %xmm0
    00002ea7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6212:
    00002eb0: 	movdqa	(%rsp), %xmm1
    00002eb5: 	pand	(%rax), %xmm1
    00002eb9: 	addq	$0x10, %rax
    00002ebd: 	paddd	%xmm1, %xmm0
    00002ec1: 	cmpq	%rbx, %rax
    00002ec4: 	jne	.Ltmp6212 # Offset: 11972
    00002ec6: 	cvttsd2si	init_value(%rip), %rdx
    00002ecf: 	movdqa	%xmm0, %xmm1
    00002ed3: 	psrldq	$0x8, %xmm1
    00002ed8: 	paddd	%xmm1, %xmm0
    00002edc: 	movdqa	%xmm0, %xmm1
    00002ee0: 	andl	$0x7, %edx
    00002ee3: 	psrldq	$0x4, %xmm1
    00002ee8: 	imull	$0x1f40, %edx, %edx
    00002eee: 	paddd	%xmm1, %xmm0
    00002ef2: 	movd	%xmm0, %eax
    00002ef6: 	cmpl	%eax, %edx
    00002ef8: 	je	.Ltmp6213 # Offset: 12024
    00002efa: 	movl	current_test(%rip), %edx
    00002f00: 	leaq	DATAat0x571d0(%rip), %rsi
    00002f07: 	movl	$0x1, %edi
    00002f0c: 	xorl	%eax, %eax
    00002f0e: 	callq	__printf_chk@PLT # Offset: 12046
    00002f13: 	movl	iterations(%rip), %ecx
.Ltmp6213:
    00002f19: 	addl	$0x1, 0x1c(%rsp)
    00002f1e: 	movl	0x1c(%rsp), %eax
    00002f22: 	cmpl	%ecx, %eax
    00002f24: 	jl	.Ltmp6214 # Offset: 12068
.Ltmp6211:
    00002f2a: 	movq	%r12, %rsi
    00002f2d: 	movq	%r15, %rdi
    00002f30: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12080
    00002f35: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002f3c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002f43: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002f4a: 	je	.Ltmp6215 # Offset: 12106
.Ltmp6450:
    00002f50: 	movq	-0x20(%rax), %rdi
    00002f54: 	movq	%rdi, (%rsp)
    00002f58: 	callq	clock@PLT # Offset: 12120
    00002f5d: 	movq	(%rsp), %rdi
    00002f61: 	pxor	%xmm0, %xmm0
    00002f65: 	movq	%rax, end_time(%rip)
    00002f6c: 	subq	start_time(%rip), %rax
    00002f73: 	cvtsi2sd	%rax, %xmm0
    00002f78: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002f80: 	callq	_Z13record_resultdPKc # Offset: 12160
    00002f85: 	movq	0xa0(%rsp), %rdi
    00002f8d: 	cmpq	%r13, %rdi
    00002f90: 	je	.Ltmp6216 # Offset: 12176
    00002f92: 	movq	0xb0(%rsp), %rax
    00002f9a: 	leaq	0x1(%rax), %rsi
    00002f9e: 	callq	_ZdlPvm@PLT # Offset: 12190
.Ltmp6216:
    00002fa3: 	leaq	DATAat0x5764a(%rip), %rdx
    00002faa: 	movq	%r14, %rsi
    00002fad: 	movq	%r12, %rdi
    00002fb0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12208
    00002fb5: 	callq	clock@PLT # Offset: 12213
    00002fba: 	movl	iterations(%rip), %ecx
    00002fc0: 	movq	%rax, start_time(%rip)
    00002fc7: 	testl	%ecx, %ecx
    00002fc9: 	jle	.Ltmp6217 # Offset: 12233
    00002fcf: 	movdqa	DATAat0x57e00(%rip), %xmm6
    00002fd7: 	movl	$0x0, 0x1c(%rsp)
    00002fdf: 	movaps	%xmm6, (%rsp)
    00002fe3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6220:
    00002fe8: 	movq	%rbp, %rax
    00002feb: 	pxor	%xmm0, %xmm0
    00002fef: 	nop # Size: 1
.Ltmp6218:
    00002ff0: 	movdqa	(%rsp), %xmm1
    00002ff5: 	pand	(%rax), %xmm1
    00002ff9: 	addq	$0x10, %rax
    00002ffd: 	paddd	%xmm1, %xmm0
    00003001: 	cmpq	%rax, %rbx
    00003004: 	jne	.Ltmp6218 # Offset: 12292
    00003006: 	cvttsd2si	init_value(%rip), %rdx
    0000300f: 	movdqa	%xmm0, %xmm1
    00003013: 	psrldq	$0x8, %xmm1
    00003018: 	paddd	%xmm1, %xmm0
    0000301c: 	movdqa	%xmm0, %xmm1
    00003020: 	andl	$0x7, %edx
    00003023: 	psrldq	$0x4, %xmm1
    00003028: 	imull	$0x1f40, %edx, %edx
    0000302e: 	paddd	%xmm1, %xmm0
    00003032: 	movd	%xmm0, %eax
    00003036: 	cmpl	%eax, %edx
    00003038: 	je	.Ltmp6219 # Offset: 12344
    0000303a: 	movl	current_test(%rip), %edx
    00003040: 	leaq	DATAat0x571d0(%rip), %rsi
    00003047: 	movl	$0x1, %edi
    0000304c: 	xorl	%eax, %eax
    0000304e: 	callq	__printf_chk@PLT # Offset: 12366
    00003053: 	movl	iterations(%rip), %ecx
.Ltmp6219:
    00003059: 	addl	$0x1, 0x1c(%rsp)
    0000305e: 	movl	0x1c(%rsp), %eax
    00003062: 	cmpl	%ecx, %eax
    00003064: 	jl	.Ltmp6220 # Offset: 12388
.Ltmp6217:
    0000306a: 	movq	%r12, %rsi
    0000306d: 	movq	%r15, %rdi
    00003070: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12400
    00003075: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000307c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003083: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000308a: 	je	.Ltmp6221 # Offset: 12426
.Ltmp6449:
    00003090: 	movq	-0x20(%rax), %rdi
    00003094: 	movq	%rdi, (%rsp)
    00003098: 	callq	clock@PLT # Offset: 12440
    0000309d: 	movq	(%rsp), %rdi
    000030a1: 	pxor	%xmm0, %xmm0
    000030a5: 	movq	%rax, end_time(%rip)
    000030ac: 	subq	start_time(%rip), %rax
    000030b3: 	cvtsi2sd	%rax, %xmm0
    000030b8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000030c0: 	callq	_Z13record_resultdPKc # Offset: 12480
    000030c5: 	movq	0xa0(%rsp), %rdi
    000030cd: 	cmpq	%r13, %rdi
    000030d0: 	je	.Ltmp6222 # Offset: 12496
    000030d2: 	movq	0xb0(%rsp), %rax
    000030da: 	leaq	0x1(%rax), %rsi
    000030de: 	callq	_ZdlPvm@PLT # Offset: 12510
.Ltmp6222:
    000030e3: 	leaq	DATAat0x5765b(%rip), %rdx
    000030ea: 	movq	%r14, %rsi
    000030ed: 	movq	%r12, %rdi
    000030f0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12528
    000030f5: 	callq	clock@PLT # Offset: 12533
    000030fa: 	movl	iterations(%rip), %ecx
    00003100: 	movq	%rax, start_time(%rip)
    00003107: 	testl	%ecx, %ecx
    00003109: 	jle	.Ltmp6223 # Offset: 12553
    0000310f: 	movdqa	DATAat0x57e00(%rip), %xmm7
    00003117: 	movl	$0x0, 0x1c(%rsp)
    0000311f: 	movaps	%xmm7, (%rsp)
    00003123: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6226:
    00003128: 	movq	%rbp, %rax
    0000312b: 	pxor	%xmm0, %xmm0
    0000312f: 	nop # Size: 1
.Ltmp6224:
    00003130: 	movdqa	(%rsp), %xmm1
    00003135: 	pand	(%rax), %xmm1
    00003139: 	addq	$0x10, %rax
    0000313d: 	paddd	%xmm1, %xmm0
    00003141: 	cmpq	%rbx, %rax
    00003144: 	jne	.Ltmp6224 # Offset: 12612
    00003146: 	cvttsd2si	init_value(%rip), %rdx
    0000314f: 	movdqa	%xmm0, %xmm1
    00003153: 	psrldq	$0x8, %xmm1
    00003158: 	paddd	%xmm1, %xmm0
    0000315c: 	movdqa	%xmm0, %xmm1
    00003160: 	andl	$0x7, %edx
    00003163: 	psrldq	$0x4, %xmm1
    00003168: 	imull	$0x1f40, %edx, %edx
    0000316e: 	paddd	%xmm1, %xmm0
    00003172: 	movd	%xmm0, %eax
    00003176: 	cmpl	%eax, %edx
    00003178: 	je	.Ltmp6225 # Offset: 12664
    0000317a: 	movl	current_test(%rip), %edx
    00003180: 	leaq	DATAat0x571d0(%rip), %rsi
    00003187: 	movl	$0x1, %edi
    0000318c: 	xorl	%eax, %eax
    0000318e: 	callq	__printf_chk@PLT # Offset: 12686
    00003193: 	movl	iterations(%rip), %ecx
.Ltmp6225:
    00003199: 	addl	$0x1, 0x1c(%rsp)
    0000319e: 	movl	0x1c(%rsp), %eax
    000031a2: 	cmpl	%ecx, %eax
    000031a4: 	jl	.Ltmp6226 # Offset: 12708
.Ltmp6223:
    000031aa: 	movq	%r12, %rsi
    000031ad: 	movq	%r15, %rdi
    000031b0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12720
    000031b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000031bc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000031c3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000031ca: 	je	.Ltmp6227 # Offset: 12746
.Ltmp6448:
    000031d0: 	movq	-0x20(%rax), %rdi
    000031d4: 	movq	%rdi, (%rsp)
    000031d8: 	callq	clock@PLT # Offset: 12760
    000031dd: 	movq	(%rsp), %rdi
    000031e1: 	pxor	%xmm0, %xmm0
    000031e5: 	movq	%rax, end_time(%rip)
    000031ec: 	subq	start_time(%rip), %rax
    000031f3: 	cvtsi2sd	%rax, %xmm0
    000031f8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003200: 	callq	_Z13record_resultdPKc # Offset: 12800
    00003205: 	movq	0xa0(%rsp), %rdi
    0000320d: 	cmpq	%r13, %rdi
    00003210: 	je	.Ltmp6228 # Offset: 12816
    00003212: 	movq	0xb0(%rsp), %rax
    0000321a: 	leaq	0x1(%rax), %rsi
    0000321e: 	callq	_ZdlPvm@PLT # Offset: 12830
.Ltmp6228:
    00003223: 	leaq	DATAat0x5766d(%rip), %rdx
    0000322a: 	movq	%r14, %rsi
    0000322d: 	movq	%r12, %rdi
    00003230: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12848
    00003235: 	callq	clock@PLT # Offset: 12853
    0000323a: 	movl	iterations(%rip), %ecx
    00003240: 	movq	%rax, start_time(%rip)
    00003247: 	testl	%ecx, %ecx
    00003249: 	jle	.Ltmp6229 # Offset: 12873
    0000324f: 	movdqa	DATAat0x57e00(%rip), %xmm3
    00003257: 	movl	$0x0, 0x1c(%rsp)
    0000325f: 	movaps	%xmm3, (%rsp)
    00003263: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6232:
    00003268: 	movq	%rbp, %rax
    0000326b: 	pxor	%xmm0, %xmm0
    0000326f: 	nop # Size: 1
.Ltmp6230:
    00003270: 	movdqa	(%rsp), %xmm1
    00003275: 	pand	(%rax), %xmm1
    00003279: 	addq	$0x10, %rax
    0000327d: 	paddd	%xmm1, %xmm0
    00003281: 	cmpq	%rax, %rbx
    00003284: 	jne	.Ltmp6230 # Offset: 12932
    00003286: 	cvttsd2si	init_value(%rip), %rdx
    0000328f: 	movdqa	%xmm0, %xmm1
    00003293: 	psrldq	$0x8, %xmm1
    00003298: 	paddd	%xmm1, %xmm0
    0000329c: 	movdqa	%xmm0, %xmm1
    000032a0: 	andl	$0x7, %edx
    000032a3: 	psrldq	$0x4, %xmm1
    000032a8: 	imull	$0x1f40, %edx, %edx
    000032ae: 	paddd	%xmm1, %xmm0
    000032b2: 	movd	%xmm0, %eax
    000032b6: 	cmpl	%eax, %edx
    000032b8: 	je	.Ltmp6231 # Offset: 12984
    000032ba: 	movl	current_test(%rip), %edx
    000032c0: 	leaq	DATAat0x571d0(%rip), %rsi
    000032c7: 	movl	$0x1, %edi
    000032cc: 	xorl	%eax, %eax
    000032ce: 	callq	__printf_chk@PLT # Offset: 13006
    000032d3: 	movl	iterations(%rip), %ecx
.Ltmp6231:
    000032d9: 	addl	$0x1, 0x1c(%rsp)
    000032de: 	movl	0x1c(%rsp), %eax
    000032e2: 	cmpl	%ecx, %eax
    000032e4: 	jl	.Ltmp6232 # Offset: 13028
.Ltmp6229:
    000032ea: 	movq	%r12, %rsi
    000032ed: 	movq	%r15, %rdi
    000032f0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13040
    000032f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000032fc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003303: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000330a: 	je	.Ltmp6233 # Offset: 13066
.Ltmp6447:
    00003310: 	movq	-0x20(%rax), %rdi
    00003314: 	movq	%rdi, (%rsp)
    00003318: 	callq	clock@PLT # Offset: 13080
    0000331d: 	movq	(%rsp), %rdi
    00003321: 	pxor	%xmm0, %xmm0
    00003325: 	movq	%rax, end_time(%rip)
    0000332c: 	subq	start_time(%rip), %rax
    00003333: 	cvtsi2sd	%rax, %xmm0
    00003338: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003340: 	callq	_Z13record_resultdPKc # Offset: 13120
    00003345: 	movq	0xa0(%rsp), %rdi
    0000334d: 	cmpq	%r13, %rdi
    00003350: 	je	.Ltmp6234 # Offset: 13136
    00003352: 	movq	0xb0(%rsp), %rax
    0000335a: 	leaq	0x1(%rax), %rsi
    0000335e: 	callq	_ZdlPvm@PLT # Offset: 13150
.Ltmp6234:
    00003363: 	leaq	DATAat0x57684(%rip), %rdx
    0000336a: 	movq	%r14, %rsi
    0000336d: 	movq	%r12, %rdi
    00003370: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13168
    00003375: 	movq	%r12, %rcx
    00003378: 	movl	$0x8, %edx
    0000337d: 	movl	$0x1f40, %esi
    00003382: 	movq	%rbp, %rdi
    00003385: 	callq	_Z14test_variable1Ij25custom_remainder_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 13189
    0000338a: 	movq	0xa0(%rsp), %rdi
    00003392: 	cmpq	%r13, %rdi
    00003395: 	je	.Ltmp6235 # Offset: 13205
    00003397: 	movq	0xb0(%rsp), %rax
    0000339f: 	leaq	0x1(%rax), %rsi
    000033a3: 	callq	_ZdlPvm@PLT # Offset: 13219
.Ltmp6235:
    000033a8: 	leaq	DATAat0x5769d(%rip), %rdx
    000033af: 	movq	%r14, %rsi
    000033b2: 	movq	%r12, %rdi
    000033b5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13237
    000033ba: 	callq	clock@PLT # Offset: 13242
    000033bf: 	movl	iterations(%rip), %ecx
    000033c5: 	movq	%rax, start_time(%rip)
    000033cc: 	testl	%ecx, %ecx
    000033ce: 	jle	.Ltmp6236 # Offset: 13262
    000033d4: 	movdqa	DATAat0x57e00(%rip), %xmm4
    000033dc: 	movl	$0x0, 0x1c(%rsp)
    000033e4: 	movaps	%xmm4, (%rsp)
    000033e8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp6239:
    000033f0: 	movq	%rbp, %rax
    000033f3: 	pxor	%xmm0, %xmm0
    000033f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6237:
    00003400: 	movdqa	(%rsp), %xmm1
    00003405: 	pand	(%rax), %xmm1
    00003409: 	addq	$0x10, %rax
    0000340d: 	paddd	%xmm1, %xmm0
    00003411: 	cmpq	%rbx, %rax
    00003414: 	jne	.Ltmp6237 # Offset: 13332
    00003416: 	cvttsd2si	init_value(%rip), %rdx
    0000341f: 	movdqa	%xmm0, %xmm1
    00003423: 	psrldq	$0x8, %xmm1
    00003428: 	paddd	%xmm1, %xmm0
    0000342c: 	movdqa	%xmm0, %xmm1
    00003430: 	andl	$0x7, %edx
    00003433: 	psrldq	$0x4, %xmm1
    00003438: 	imull	$0x1f40, %edx, %edx
    0000343e: 	paddd	%xmm1, %xmm0
    00003442: 	movd	%xmm0, %eax
    00003446: 	cmpl	%eax, %edx
    00003448: 	je	.Ltmp6238 # Offset: 13384
    0000344a: 	movl	current_test(%rip), %edx
    00003450: 	leaq	DATAat0x571d0(%rip), %rsi
    00003457: 	movl	$0x1, %edi
    0000345c: 	xorl	%eax, %eax
    0000345e: 	callq	__printf_chk@PLT # Offset: 13406
    00003463: 	movl	iterations(%rip), %ecx
.Ltmp6238:
    00003469: 	addl	$0x1, 0x1c(%rsp)
    0000346e: 	movl	0x1c(%rsp), %eax
    00003472: 	cmpl	%ecx, %eax
    00003474: 	jl	.Ltmp6239 # Offset: 13428
.Ltmp6236:
    0000347a: 	movq	%r12, %rsi
    0000347d: 	movq	%r15, %rdi
    00003480: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13440
    00003485: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000348c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003493: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000349a: 	je	.Ltmp6240 # Offset: 13466
.Ltmp6446:
    000034a0: 	movq	-0x20(%rax), %rdi
    000034a4: 	movq	%rdi, (%rsp)
    000034a8: 	callq	clock@PLT # Offset: 13480
    000034ad: 	movq	(%rsp), %rdi
    000034b1: 	pxor	%xmm0, %xmm0
    000034b5: 	movq	%rax, end_time(%rip)
    000034bc: 	subq	start_time(%rip), %rax
    000034c3: 	cvtsi2sd	%rax, %xmm0
    000034c8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000034d0: 	callq	_Z13record_resultdPKc # Offset: 13520
    000034d5: 	movq	0xa0(%rsp), %rdi
    000034dd: 	cmpq	%r13, %rdi
    000034e0: 	je	.Ltmp6241 # Offset: 13536
    000034e2: 	movq	0xb0(%rsp), %rax
    000034ea: 	leaq	0x1(%rax), %rsi
    000034ee: 	callq	_ZdlPvm@PLT # Offset: 13550
.Ltmp6241:
    000034f3: 	leaq	DATAat0x576b6(%rip), %rdx
    000034fa: 	movq	%r14, %rsi
    000034fd: 	movq	%r12, %rdi
    00003500: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13568
    00003505: 	callq	clock@PLT # Offset: 13573
    0000350a: 	movl	iterations(%rip), %ecx
    00003510: 	movq	%rax, start_time(%rip)
    00003517: 	testl	%ecx, %ecx
    00003519: 	jle	.Ltmp6242 # Offset: 13593
    0000351f: 	movdqa	DATAat0x57e10(%rip), %xmm5
    00003527: 	movl	$0x0, 0x1c(%rsp)
    0000352f: 	movaps	%xmm5, (%rsp)
    00003533: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6245:
    00003538: 	movq	%rbp, %rax
    0000353b: 	pxor	%xmm0, %xmm0
    0000353f: 	nop # Size: 1
.Ltmp6243:
    00003540: 	movdqa	(%rsp), %xmm1
    00003545: 	pand	(%rax), %xmm1
    00003549: 	addq	$0x10, %rax
    0000354d: 	paddd	%xmm1, %xmm0
    00003551: 	cmpq	%rax, %rbx
    00003554: 	jne	.Ltmp6243 # Offset: 13652
    00003556: 	cvttsd2si	init_value(%rip), %rdx
    0000355f: 	movdqa	%xmm0, %xmm1
    00003563: 	psrldq	$0x8, %xmm1
    00003568: 	paddd	%xmm1, %xmm0
    0000356c: 	movdqa	%xmm0, %xmm1
    00003570: 	andl	$0xf, %edx
    00003573: 	psrldq	$0x4, %xmm1
    00003578: 	imull	$0x1f40, %edx, %edx
    0000357e: 	paddd	%xmm1, %xmm0
    00003582: 	movd	%xmm0, %eax
    00003586: 	cmpl	%eax, %edx
    00003588: 	je	.Ltmp6244 # Offset: 13704
    0000358a: 	movl	current_test(%rip), %edx
    00003590: 	leaq	DATAat0x571d0(%rip), %rsi
    00003597: 	movl	$0x1, %edi
    0000359c: 	xorl	%eax, %eax
    0000359e: 	callq	__printf_chk@PLT # Offset: 13726
    000035a3: 	movl	iterations(%rip), %ecx
.Ltmp6244:
    000035a9: 	addl	$0x1, 0x1c(%rsp)
    000035ae: 	movl	0x1c(%rsp), %eax
    000035b2: 	cmpl	%ecx, %eax
    000035b4: 	jl	.Ltmp6245 # Offset: 13748
.Ltmp6242:
    000035ba: 	movq	%r12, %rsi
    000035bd: 	movq	%r15, %rdi
    000035c0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13760
    000035c5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000035cc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000035d3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000035da: 	je	.Ltmp6246 # Offset: 13786
.Ltmp6445:
    000035e0: 	movq	-0x20(%rax), %rdi
    000035e4: 	movq	%rdi, (%rsp)
    000035e8: 	callq	clock@PLT # Offset: 13800
    000035ed: 	movq	(%rsp), %rdi
    000035f1: 	pxor	%xmm0, %xmm0
    000035f5: 	movq	%rax, end_time(%rip)
    000035fc: 	subq	start_time(%rip), %rax
    00003603: 	cvtsi2sd	%rax, %xmm0
    00003608: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003610: 	callq	_Z13record_resultdPKc # Offset: 13840
    00003615: 	movq	0xa0(%rsp), %rdi
    0000361d: 	cmpq	%r13, %rdi
    00003620: 	je	.Ltmp6247 # Offset: 13856
    00003622: 	movq	0xb0(%rsp), %rax
    0000362a: 	leaq	0x1(%rax), %rsi
    0000362e: 	callq	_ZdlPvm@PLT # Offset: 13870
.Ltmp6247:
    00003633: 	leaq	DATAat0x576be(%rip), %rdx
    0000363a: 	movq	%r14, %rsi
    0000363d: 	movq	%r12, %rdi
    00003640: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13888
    00003645: 	callq	clock@PLT # Offset: 13893
    0000364a: 	movl	iterations(%rip), %ecx
    00003650: 	movq	%rax, start_time(%rip)
    00003657: 	testl	%ecx, %ecx
    00003659: 	jle	.Ltmp6248 # Offset: 13913
    0000365f: 	movdqa	DATAat0x57e10(%rip), %xmm6
    00003667: 	movl	$0x0, 0x1c(%rsp)
    0000366f: 	movaps	%xmm6, (%rsp)
    00003673: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6251:
    00003678: 	movq	%rbp, %rax
    0000367b: 	pxor	%xmm0, %xmm0
    0000367f: 	nop # Size: 1
.Ltmp6249:
    00003680: 	movdqa	(%rsp), %xmm1
    00003685: 	pand	(%rax), %xmm1
    00003689: 	addq	$0x10, %rax
    0000368d: 	paddd	%xmm1, %xmm0
    00003691: 	cmpq	%rbx, %rax
    00003694: 	jne	.Ltmp6249 # Offset: 13972
    00003696: 	cvttsd2si	init_value(%rip), %rdx
    0000369f: 	movdqa	%xmm0, %xmm1
    000036a3: 	psrldq	$0x8, %xmm1
    000036a8: 	paddd	%xmm1, %xmm0
    000036ac: 	movdqa	%xmm0, %xmm1
    000036b0: 	andl	$0xf, %edx
    000036b3: 	psrldq	$0x4, %xmm1
    000036b8: 	imull	$0x1f40, %edx, %edx
    000036be: 	paddd	%xmm1, %xmm0
    000036c2: 	movd	%xmm0, %eax
    000036c6: 	cmpl	%eax, %edx
    000036c8: 	je	.Ltmp6250 # Offset: 14024
    000036ca: 	movl	current_test(%rip), %edx
    000036d0: 	leaq	DATAat0x571d0(%rip), %rsi
    000036d7: 	movl	$0x1, %edi
    000036dc: 	xorl	%eax, %eax
    000036de: 	callq	__printf_chk@PLT # Offset: 14046
    000036e3: 	movl	iterations(%rip), %ecx
.Ltmp6250:
    000036e9: 	addl	$0x1, 0x1c(%rsp)
    000036ee: 	movl	0x1c(%rsp), %eax
    000036f2: 	cmpl	%ecx, %eax
    000036f4: 	jl	.Ltmp6251 # Offset: 14068
.Ltmp6248:
    000036fa: 	movq	%r12, %rsi
    000036fd: 	movq	%r15, %rdi
    00003700: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14080
    00003705: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000370c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003713: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000371a: 	je	.Ltmp6252 # Offset: 14106
.Ltmp6444:
    00003720: 	movq	-0x20(%rax), %rdi
    00003724: 	movq	%rdi, (%rsp)
    00003728: 	callq	clock@PLT # Offset: 14120
    0000372d: 	movq	(%rsp), %rdi
    00003731: 	pxor	%xmm0, %xmm0
    00003735: 	movq	%rax, end_time(%rip)
    0000373c: 	subq	start_time(%rip), %rax
    00003743: 	cvtsi2sd	%rax, %xmm0
    00003748: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003750: 	callq	_Z13record_resultdPKc # Offset: 14160
    00003755: 	movq	0xa0(%rsp), %rdi
    0000375d: 	cmpq	%r13, %rdi
    00003760: 	je	.Ltmp6253 # Offset: 14176
    00003762: 	movq	0xb0(%rsp), %rax
    0000376a: 	leaq	0x1(%rax), %rsi
    0000376e: 	callq	_ZdlPvm@PLT # Offset: 14190
.Ltmp6253:
    00003773: 	leaq	DATAat0x576d0(%rip), %rdx
    0000377a: 	movq	%r14, %rsi
    0000377d: 	movq	%r12, %rdi
    00003780: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14208
    00003785: 	callq	clock@PLT # Offset: 14213
    0000378a: 	movl	iterations(%rip), %ecx
    00003790: 	movq	%rax, start_time(%rip)
    00003797: 	testl	%ecx, %ecx
    00003799: 	jle	.Ltmp6254 # Offset: 14233
    0000379f: 	movdqa	DATAat0x57e10(%rip), %xmm7
    000037a7: 	movl	$0x0, 0x1c(%rsp)
    000037af: 	movaps	%xmm7, (%rsp)
    000037b3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6257:
    000037b8: 	movq	%rbp, %rax
    000037bb: 	pxor	%xmm0, %xmm0
    000037bf: 	nop # Size: 1
.Ltmp6255:
    000037c0: 	movdqa	(%rsp), %xmm1
    000037c5: 	pand	(%rax), %xmm1
    000037c9: 	addq	$0x10, %rax
    000037cd: 	paddd	%xmm1, %xmm0
    000037d1: 	cmpq	%rax, %rbx
    000037d4: 	jne	.Ltmp6255 # Offset: 14292
    000037d6: 	cvttsd2si	init_value(%rip), %rdx
    000037df: 	movdqa	%xmm0, %xmm1
    000037e3: 	psrldq	$0x8, %xmm1
    000037e8: 	paddd	%xmm1, %xmm0
    000037ec: 	movdqa	%xmm0, %xmm1
    000037f0: 	andl	$0xf, %edx
    000037f3: 	psrldq	$0x4, %xmm1
    000037f8: 	imull	$0x1f40, %edx, %edx
    000037fe: 	paddd	%xmm1, %xmm0
    00003802: 	movd	%xmm0, %eax
    00003806: 	cmpl	%eax, %edx
    00003808: 	je	.Ltmp6256 # Offset: 14344
    0000380a: 	movl	current_test(%rip), %edx
    00003810: 	leaq	DATAat0x571d0(%rip), %rsi
    00003817: 	movl	$0x1, %edi
    0000381c: 	xorl	%eax, %eax
    0000381e: 	callq	__printf_chk@PLT # Offset: 14366
    00003823: 	movl	iterations(%rip), %ecx
.Ltmp6256:
    00003829: 	addl	$0x1, 0x1c(%rsp)
    0000382e: 	movl	0x1c(%rsp), %eax
    00003832: 	cmpl	%ecx, %eax
    00003834: 	jl	.Ltmp6257 # Offset: 14388
.Ltmp6254:
    0000383a: 	movq	%r12, %rsi
    0000383d: 	movq	%r15, %rdi
    00003840: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14400
    00003845: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000384c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003853: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000385a: 	je	.Ltmp6258 # Offset: 14426
.Ltmp6443:
    00003860: 	movq	-0x20(%rax), %rdi
    00003864: 	movq	%rdi, (%rsp)
    00003868: 	callq	clock@PLT # Offset: 14440
    0000386d: 	movq	(%rsp), %rdi
    00003871: 	pxor	%xmm0, %xmm0
    00003875: 	movq	%rax, end_time(%rip)
    0000387c: 	subq	start_time(%rip), %rax
    00003883: 	cvtsi2sd	%rax, %xmm0
    00003888: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003890: 	callq	_Z13record_resultdPKc # Offset: 14480
    00003895: 	movq	0xa0(%rsp), %rdi
    0000389d: 	cmpq	%r13, %rdi
    000038a0: 	je	.Ltmp6259 # Offset: 14496
    000038a2: 	movq	0xb0(%rsp), %rax
    000038aa: 	leaq	0x1(%rax), %rsi
    000038ae: 	callq	_ZdlPvm@PLT # Offset: 14510
.Ltmp6259:
    000038b3: 	leaq	DATAat0x576e3(%rip), %rdx
    000038ba: 	movq	%r14, %rsi
    000038bd: 	movq	%r12, %rdi
    000038c0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14528
    000038c5: 	callq	clock@PLT # Offset: 14533
    000038ca: 	movl	iterations(%rip), %ecx
    000038d0: 	movq	%rax, start_time(%rip)
    000038d7: 	testl	%ecx, %ecx
    000038d9: 	jle	.Ltmp6260 # Offset: 14553
    000038df: 	movdqa	DATAat0x57e10(%rip), %xmm3
    000038e7: 	movl	$0x0, 0x1c(%rsp)
    000038ef: 	movaps	%xmm3, (%rsp)
    000038f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6263:
    000038f8: 	movq	%rbp, %rax
    000038fb: 	pxor	%xmm0, %xmm0
    000038ff: 	nop # Size: 1
.Ltmp6261:
    00003900: 	movdqa	(%rsp), %xmm1
    00003905: 	pand	(%rax), %xmm1
    00003909: 	addq	$0x10, %rax
    0000390d: 	paddd	%xmm1, %xmm0
    00003911: 	cmpq	%rbx, %rax
    00003914: 	jne	.Ltmp6261 # Offset: 14612
    00003916: 	cvttsd2si	init_value(%rip), %rdx
    0000391f: 	movdqa	%xmm0, %xmm1
    00003923: 	psrldq	$0x8, %xmm1
    00003928: 	paddd	%xmm1, %xmm0
    0000392c: 	movdqa	%xmm0, %xmm1
    00003930: 	andl	$0xf, %edx
    00003933: 	psrldq	$0x4, %xmm1
    00003938: 	imull	$0x1f40, %edx, %edx
    0000393e: 	paddd	%xmm1, %xmm0
    00003942: 	movd	%xmm0, %eax
    00003946: 	cmpl	%eax, %edx
    00003948: 	je	.Ltmp6262 # Offset: 14664
    0000394a: 	movl	current_test(%rip), %edx
    00003950: 	leaq	DATAat0x571d0(%rip), %rsi
    00003957: 	movl	$0x1, %edi
    0000395c: 	xorl	%eax, %eax
    0000395e: 	callq	__printf_chk@PLT # Offset: 14686
    00003963: 	movl	iterations(%rip), %ecx
.Ltmp6262:
    00003969: 	addl	$0x1, 0x1c(%rsp)
    0000396e: 	movl	0x1c(%rsp), %eax
    00003972: 	cmpl	%ecx, %eax
    00003974: 	jl	.Ltmp6263 # Offset: 14708
.Ltmp6260:
    0000397a: 	movq	%r12, %rsi
    0000397d: 	movq	%r15, %rdi
    00003980: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14720
    00003985: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000398c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003993: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000399a: 	je	.Ltmp6264 # Offset: 14746
.Ltmp6442:
    000039a0: 	movq	-0x20(%rax), %rdi
    000039a4: 	movq	%rdi, (%rsp)
    000039a8: 	callq	clock@PLT # Offset: 14760
    000039ad: 	movq	(%rsp), %rdi
    000039b1: 	pxor	%xmm0, %xmm0
    000039b5: 	movq	%rax, end_time(%rip)
    000039bc: 	subq	start_time(%rip), %rax
    000039c3: 	cvtsi2sd	%rax, %xmm0
    000039c8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000039d0: 	callq	_Z13record_resultdPKc # Offset: 14800
    000039d5: 	movq	0xa0(%rsp), %rdi
    000039dd: 	cmpq	%r13, %rdi
    000039e0: 	je	.Ltmp6265 # Offset: 14816
    000039e2: 	movq	0xb0(%rsp), %rax
    000039ea: 	leaq	0x1(%rax), %rsi
    000039ee: 	callq	_ZdlPvm@PLT # Offset: 14830
.Ltmp6265:
    000039f3: 	leaq	DATAat0x576fb(%rip), %rdx
    000039fa: 	movq	%r14, %rsi
    000039fd: 	movq	%r12, %rdi
    00003a00: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14848
    00003a05: 	movq	%r12, %rcx
    00003a08: 	movl	$0x10, %edx
    00003a0d: 	movl	$0x1f40, %esi
    00003a12: 	movq	%rbp, %rdi
    00003a15: 	callq	_Z14test_variable1Ij25custom_remainder_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 14869
    00003a1a: 	movq	0xa0(%rsp), %rdi
    00003a22: 	cmpq	%r13, %rdi
    00003a25: 	je	.Ltmp6266 # Offset: 14885
    00003a27: 	movq	0xb0(%rsp), %rax
    00003a2f: 	leaq	0x1(%rax), %rsi
    00003a33: 	callq	_ZdlPvm@PLT # Offset: 14899
.Ltmp6266:
    00003a38: 	leaq	DATAat0x57715(%rip), %rdx
    00003a3f: 	movq	%r14, %rsi
    00003a42: 	movq	%r12, %rdi
    00003a45: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14917
    00003a4a: 	callq	clock@PLT # Offset: 14922
    00003a4f: 	movl	iterations(%rip), %ecx
    00003a55: 	movq	%rax, start_time(%rip)
    00003a5c: 	testl	%ecx, %ecx
    00003a5e: 	jle	.Ltmp6267 # Offset: 14942
    00003a64: 	movdqa	DATAat0x57e10(%rip), %xmm4
    00003a6c: 	movl	$0x0, 0x1c(%rsp)
    00003a74: 	movaps	%xmm4, (%rsp)
    00003a78: 	nopl	(%rax,%rax) # Size: 8
.Ltmp6270:
    00003a80: 	movq	%rbp, %rax
    00003a83: 	pxor	%xmm0, %xmm0
    00003a87: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6268:
    00003a90: 	movdqa	(%rsp), %xmm1
    00003a95: 	pand	(%rax), %xmm1
    00003a99: 	addq	$0x10, %rax
    00003a9d: 	paddd	%xmm1, %xmm0
    00003aa1: 	cmpq	%rax, %rbx
    00003aa4: 	jne	.Ltmp6268 # Offset: 15012
    00003aa6: 	cvttsd2si	init_value(%rip), %rdx
    00003aaf: 	movdqa	%xmm0, %xmm1
    00003ab3: 	psrldq	$0x8, %xmm1
    00003ab8: 	paddd	%xmm1, %xmm0
    00003abc: 	movdqa	%xmm0, %xmm1
    00003ac0: 	andl	$0xf, %edx
    00003ac3: 	psrldq	$0x4, %xmm1
    00003ac8: 	imull	$0x1f40, %edx, %edx
    00003ace: 	paddd	%xmm1, %xmm0
    00003ad2: 	movd	%xmm0, %eax
    00003ad6: 	cmpl	%eax, %edx
    00003ad8: 	je	.Ltmp6269 # Offset: 15064
    00003ada: 	movl	current_test(%rip), %edx
    00003ae0: 	leaq	DATAat0x571d0(%rip), %rsi
    00003ae7: 	movl	$0x1, %edi
    00003aec: 	xorl	%eax, %eax
    00003aee: 	callq	__printf_chk@PLT # Offset: 15086
    00003af3: 	movl	iterations(%rip), %ecx
.Ltmp6269:
    00003af9: 	addl	$0x1, 0x1c(%rsp)
    00003afe: 	movl	0x1c(%rsp), %eax
    00003b02: 	cmpl	%ecx, %eax
    00003b04: 	jl	.Ltmp6270 # Offset: 15108
.Ltmp6267:
    00003b0a: 	movq	%r12, %rsi
    00003b0d: 	movq	%r15, %rdi
    00003b10: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15120
    00003b15: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003b1c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003b23: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003b2a: 	je	.Ltmp6271 # Offset: 15146
.Ltmp6441:
    00003b30: 	movq	-0x20(%rax), %rdi
    00003b34: 	movq	%rdi, (%rsp)
    00003b38: 	callq	clock@PLT # Offset: 15160
    00003b3d: 	movq	(%rsp), %rdi
    00003b41: 	pxor	%xmm0, %xmm0
    00003b45: 	movq	%rax, end_time(%rip)
    00003b4c: 	subq	start_time(%rip), %rax
    00003b53: 	cvtsi2sd	%rax, %xmm0
    00003b58: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003b60: 	callq	_Z13record_resultdPKc # Offset: 15200
    00003b65: 	movq	0xa0(%rsp), %rdi
    00003b6d: 	cmpq	%r13, %rdi
    00003b70: 	je	.Ltmp6272 # Offset: 15216
    00003b72: 	movq	0xb0(%rsp), %rax
    00003b7a: 	leaq	0x1(%rax), %rsi
    00003b7e: 	callq	_ZdlPvm@PLT # Offset: 15230
.Ltmp6272:
    00003b83: 	leaq	DATAat0x5772f(%rip), %rdx
    00003b8a: 	movq	%r14, %rsi
    00003b8d: 	movq	%r12, %rdi
    00003b90: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15248
    00003b95: 	callq	clock@PLT # Offset: 15253
    00003b9a: 	movl	iterations(%rip), %ecx
    00003ba0: 	movq	%rax, start_time(%rip)
    00003ba7: 	testl	%ecx, %ecx
    00003ba9: 	jle	.Ltmp6273 # Offset: 15273
    00003baf: 	movdqa	DATAat0x57e50(%rip), %xmm5
    00003bb7: 	movl	$0x0, 0x1c(%rsp)
    00003bbf: 	movaps	%xmm5, (%rsp)
    00003bc3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6276:
    00003bc8: 	movq	%rbp, %rax
    00003bcb: 	pxor	%xmm0, %xmm0
    00003bcf: 	nop # Size: 1
.Ltmp6274:
    00003bd0: 	movdqa	(%rsp), %xmm1
    00003bd5: 	pand	(%rax), %xmm1
    00003bd9: 	addq	$0x10, %rax
    00003bdd: 	paddd	%xmm1, %xmm0
    00003be1: 	cmpq	%rbx, %rax
    00003be4: 	jne	.Ltmp6274 # Offset: 15332
    00003be6: 	cvttsd2si	init_value(%rip), %rdx
    00003bef: 	movdqa	%xmm0, %xmm1
    00003bf3: 	psrldq	$0x8, %xmm1
    00003bf8: 	paddd	%xmm1, %xmm0
    00003bfc: 	movdqa	%xmm0, %xmm1
    00003c00: 	andl	$0x1f, %edx
    00003c03: 	psrldq	$0x4, %xmm1
    00003c08: 	imull	$0x1f40, %edx, %edx
    00003c0e: 	paddd	%xmm1, %xmm0
    00003c12: 	movd	%xmm0, %eax
    00003c16: 	cmpl	%eax, %edx
    00003c18: 	je	.Ltmp6275 # Offset: 15384
    00003c1a: 	movl	current_test(%rip), %edx
    00003c20: 	leaq	DATAat0x571d0(%rip), %rsi
    00003c27: 	movl	$0x1, %edi
    00003c2c: 	xorl	%eax, %eax
    00003c2e: 	callq	__printf_chk@PLT # Offset: 15406
    00003c33: 	movl	iterations(%rip), %ecx
.Ltmp6275:
    00003c39: 	addl	$0x1, 0x1c(%rsp)
    00003c3e: 	movl	0x1c(%rsp), %eax
    00003c42: 	cmpl	%ecx, %eax
    00003c44: 	jl	.Ltmp6276 # Offset: 15428
.Ltmp6273:
    00003c4a: 	movq	%r12, %rsi
    00003c4d: 	movq	%r15, %rdi
    00003c50: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15440
    00003c55: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003c5c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003c63: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003c6a: 	je	.Ltmp6277 # Offset: 15466
.Ltmp6440:
    00003c70: 	movq	-0x20(%rax), %rdi
    00003c74: 	movq	%rdi, (%rsp)
    00003c78: 	callq	clock@PLT # Offset: 15480
    00003c7d: 	movq	(%rsp), %rdi
    00003c81: 	pxor	%xmm0, %xmm0
    00003c85: 	movq	%rax, end_time(%rip)
    00003c8c: 	subq	start_time(%rip), %rax
    00003c93: 	cvtsi2sd	%rax, %xmm0
    00003c98: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003ca0: 	callq	_Z13record_resultdPKc # Offset: 15520
    00003ca5: 	movq	0xa0(%rsp), %rdi
    00003cad: 	cmpq	%r13, %rdi
    00003cb0: 	je	.Ltmp6278 # Offset: 15536
    00003cb2: 	movq	0xb0(%rsp), %rax
    00003cba: 	leaq	0x1(%rax), %rsi
    00003cbe: 	callq	_ZdlPvm@PLT # Offset: 15550
.Ltmp6278:
    00003cc3: 	leaq	DATAat0x57737(%rip), %rdx
    00003cca: 	movq	%r14, %rsi
    00003ccd: 	movq	%r12, %rdi
    00003cd0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15568
    00003cd5: 	callq	clock@PLT # Offset: 15573
    00003cda: 	movl	iterations(%rip), %ecx
    00003ce0: 	movq	%rax, start_time(%rip)
    00003ce7: 	testl	%ecx, %ecx
    00003ce9: 	jle	.Ltmp6279 # Offset: 15593
    00003cef: 	movdqa	DATAat0x57e50(%rip), %xmm6
    00003cf7: 	movl	$0x0, 0x1c(%rsp)
    00003cff: 	movaps	%xmm6, (%rsp)
    00003d03: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6282:
    00003d08: 	movq	%rbp, %rax
    00003d0b: 	pxor	%xmm0, %xmm0
    00003d0f: 	nop # Size: 1
.Ltmp6280:
    00003d10: 	movdqa	(%rsp), %xmm1
    00003d15: 	pand	(%rax), %xmm1
    00003d19: 	addq	$0x10, %rax
    00003d1d: 	paddd	%xmm1, %xmm0
    00003d21: 	cmpq	%rax, %rbx
    00003d24: 	jne	.Ltmp6280 # Offset: 15652
    00003d26: 	cvttsd2si	init_value(%rip), %rdx
    00003d2f: 	movdqa	%xmm0, %xmm1
    00003d33: 	psrldq	$0x8, %xmm1
    00003d38: 	paddd	%xmm1, %xmm0
    00003d3c: 	movdqa	%xmm0, %xmm1
    00003d40: 	andl	$0x1f, %edx
    00003d43: 	psrldq	$0x4, %xmm1
    00003d48: 	imull	$0x1f40, %edx, %edx
    00003d4e: 	paddd	%xmm1, %xmm0
    00003d52: 	movd	%xmm0, %eax
    00003d56: 	cmpl	%eax, %edx
    00003d58: 	je	.Ltmp6281 # Offset: 15704
    00003d5a: 	movl	current_test(%rip), %edx
    00003d60: 	leaq	DATAat0x571d0(%rip), %rsi
    00003d67: 	movl	$0x1, %edi
    00003d6c: 	xorl	%eax, %eax
    00003d6e: 	callq	__printf_chk@PLT # Offset: 15726
    00003d73: 	movl	iterations(%rip), %ecx
.Ltmp6281:
    00003d79: 	addl	$0x1, 0x1c(%rsp)
    00003d7e: 	movl	0x1c(%rsp), %eax
    00003d82: 	cmpl	%ecx, %eax
    00003d84: 	jl	.Ltmp6282 # Offset: 15748
.Ltmp6279:
    00003d8a: 	movq	%r12, %rsi
    00003d8d: 	movq	%r15, %rdi
    00003d90: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15760
    00003d95: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003d9c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003da3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003daa: 	je	.Ltmp6283 # Offset: 15786
.Ltmp6439:
    00003db0: 	movq	-0x20(%rax), %rdi
    00003db4: 	movq	%rdi, (%rsp)
    00003db8: 	callq	clock@PLT # Offset: 15800
    00003dbd: 	movq	(%rsp), %rdi
    00003dc1: 	pxor	%xmm0, %xmm0
    00003dc5: 	movq	%rax, end_time(%rip)
    00003dcc: 	subq	start_time(%rip), %rax
    00003dd3: 	cvtsi2sd	%rax, %xmm0
    00003dd8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003de0: 	callq	_Z13record_resultdPKc # Offset: 15840
    00003de5: 	movq	0xa0(%rsp), %rdi
    00003ded: 	cmpq	%r13, %rdi
    00003df0: 	je	.Ltmp6284 # Offset: 15856
    00003df2: 	movq	0xb0(%rsp), %rax
    00003dfa: 	leaq	0x1(%rax), %rsi
    00003dfe: 	callq	_ZdlPvm@PLT # Offset: 15870
.Ltmp6284:
    00003e03: 	leaq	DATAat0x57749(%rip), %rdx
    00003e0a: 	movq	%r14, %rsi
    00003e0d: 	movq	%r12, %rdi
    00003e10: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15888
    00003e15: 	callq	clock@PLT # Offset: 15893
    00003e1a: 	movl	iterations(%rip), %ecx
    00003e20: 	movq	%rax, start_time(%rip)
    00003e27: 	testl	%ecx, %ecx
    00003e29: 	jle	.Ltmp6285 # Offset: 15913
    00003e2f: 	movdqa	DATAat0x57e50(%rip), %xmm7
    00003e37: 	movl	$0x0, 0x1c(%rsp)
    00003e3f: 	movaps	%xmm7, (%rsp)
    00003e43: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6288:
    00003e48: 	movq	%rbp, %rax
    00003e4b: 	pxor	%xmm0, %xmm0
    00003e4f: 	nop # Size: 1
.Ltmp6286:
    00003e50: 	movdqa	(%rsp), %xmm1
    00003e55: 	pand	(%rax), %xmm1
    00003e59: 	addq	$0x10, %rax
    00003e5d: 	paddd	%xmm1, %xmm0
    00003e61: 	cmpq	%rbx, %rax
    00003e64: 	jne	.Ltmp6286 # Offset: 15972
    00003e66: 	cvttsd2si	init_value(%rip), %rdx
    00003e6f: 	movdqa	%xmm0, %xmm1
    00003e73: 	psrldq	$0x8, %xmm1
    00003e78: 	paddd	%xmm1, %xmm0
    00003e7c: 	movdqa	%xmm0, %xmm1
    00003e80: 	andl	$0x1f, %edx
    00003e83: 	psrldq	$0x4, %xmm1
    00003e88: 	imull	$0x1f40, %edx, %edx
    00003e8e: 	paddd	%xmm1, %xmm0
    00003e92: 	movd	%xmm0, %eax
    00003e96: 	cmpl	%eax, %edx
    00003e98: 	je	.Ltmp6287 # Offset: 16024
    00003e9a: 	movl	current_test(%rip), %edx
    00003ea0: 	leaq	DATAat0x571d0(%rip), %rsi
    00003ea7: 	movl	$0x1, %edi
    00003eac: 	xorl	%eax, %eax
    00003eae: 	callq	__printf_chk@PLT # Offset: 16046
    00003eb3: 	movl	iterations(%rip), %ecx
.Ltmp6287:
    00003eb9: 	addl	$0x1, 0x1c(%rsp)
    00003ebe: 	movl	0x1c(%rsp), %eax
    00003ec2: 	cmpl	%ecx, %eax
    00003ec4: 	jl	.Ltmp6288 # Offset: 16068
.Ltmp6285:
    00003eca: 	movq	%r12, %rsi
    00003ecd: 	movq	%r15, %rdi
    00003ed0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16080
    00003ed5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003edc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003ee3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003eea: 	je	.Ltmp6289 # Offset: 16106
.Ltmp6438:
    00003ef0: 	movq	-0x20(%rax), %rdi
    00003ef4: 	movq	%rdi, (%rsp)
    00003ef8: 	callq	clock@PLT # Offset: 16120
    00003efd: 	movq	(%rsp), %rdi
    00003f01: 	pxor	%xmm0, %xmm0
    00003f05: 	movq	%rax, end_time(%rip)
    00003f0c: 	subq	start_time(%rip), %rax
    00003f13: 	cvtsi2sd	%rax, %xmm0
    00003f18: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003f20: 	callq	_Z13record_resultdPKc # Offset: 16160
    00003f25: 	movq	0xa0(%rsp), %rdi
    00003f2d: 	cmpq	%r13, %rdi
    00003f30: 	je	.Ltmp6290 # Offset: 16176
    00003f32: 	movq	0xb0(%rsp), %rax
    00003f3a: 	leaq	0x1(%rax), %rsi
    00003f3e: 	callq	_ZdlPvm@PLT # Offset: 16190
.Ltmp6290:
    00003f43: 	leaq	DATAat0x5775c(%rip), %rdx
    00003f4a: 	movq	%r14, %rsi
    00003f4d: 	movq	%r12, %rdi
    00003f50: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16208
    00003f55: 	callq	clock@PLT # Offset: 16213
    00003f5a: 	movl	iterations(%rip), %ecx
    00003f60: 	movq	%rax, start_time(%rip)
    00003f67: 	testl	%ecx, %ecx
    00003f69: 	jle	.Ltmp6291 # Offset: 16233
    00003f6f: 	movdqa	DATAat0x57e50(%rip), %xmm3
    00003f77: 	movl	$0x0, 0x1c(%rsp)
    00003f7f: 	movaps	%xmm3, (%rsp)
    00003f83: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6294:
    00003f88: 	movq	%rbp, %rax
    00003f8b: 	pxor	%xmm0, %xmm0
    00003f8f: 	nop # Size: 1
.Ltmp6292:
    00003f90: 	movdqa	(%rsp), %xmm1
    00003f95: 	pand	(%rax), %xmm1
    00003f99: 	addq	$0x10, %rax
    00003f9d: 	paddd	%xmm1, %xmm0
    00003fa1: 	cmpq	%rax, %rbx
    00003fa4: 	jne	.Ltmp6292 # Offset: 16292
    00003fa6: 	cvttsd2si	init_value(%rip), %rdx
    00003faf: 	movdqa	%xmm0, %xmm1
    00003fb3: 	psrldq	$0x8, %xmm1
    00003fb8: 	paddd	%xmm1, %xmm0
    00003fbc: 	movdqa	%xmm0, %xmm1
    00003fc0: 	andl	$0x1f, %edx
    00003fc3: 	psrldq	$0x4, %xmm1
    00003fc8: 	imull	$0x1f40, %edx, %edx
    00003fce: 	paddd	%xmm1, %xmm0
    00003fd2: 	movd	%xmm0, %eax
    00003fd6: 	cmpl	%eax, %edx
    00003fd8: 	je	.Ltmp6293 # Offset: 16344
    00003fda: 	movl	current_test(%rip), %edx
    00003fe0: 	leaq	DATAat0x571d0(%rip), %rsi
    00003fe7: 	movl	$0x1, %edi
    00003fec: 	xorl	%eax, %eax
    00003fee: 	callq	__printf_chk@PLT # Offset: 16366
    00003ff3: 	movl	iterations(%rip), %ecx
.Ltmp6293:
    00003ff9: 	addl	$0x1, 0x1c(%rsp)
    00003ffe: 	movl	0x1c(%rsp), %eax
    00004002: 	cmpl	%ecx, %eax
    00004004: 	jl	.Ltmp6294 # Offset: 16388
.Ltmp6291:
    0000400a: 	movq	%r12, %rsi
    0000400d: 	movq	%r15, %rdi
    00004010: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16400
    00004015: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000401c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004023: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000402a: 	je	.Ltmp6295 # Offset: 16426
.Ltmp6437:
    00004030: 	movq	-0x20(%rax), %rdi
    00004034: 	movq	%rdi, (%rsp)
    00004038: 	callq	clock@PLT # Offset: 16440
    0000403d: 	movq	(%rsp), %rdi
    00004041: 	pxor	%xmm0, %xmm0
    00004045: 	movq	%rax, end_time(%rip)
    0000404c: 	subq	start_time(%rip), %rax
    00004053: 	cvtsi2sd	%rax, %xmm0
    00004058: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004060: 	callq	_Z13record_resultdPKc # Offset: 16480
    00004065: 	movq	0xa0(%rsp), %rdi
    0000406d: 	cmpq	%r13, %rdi
    00004070: 	je	.Ltmp6296 # Offset: 16496
    00004072: 	movq	0xb0(%rsp), %rax
    0000407a: 	leaq	0x1(%rax), %rsi
    0000407e: 	callq	_ZdlPvm@PLT # Offset: 16510
.Ltmp6296:
    00004083: 	leaq	DATAat0x57774(%rip), %rdx
    0000408a: 	movq	%r14, %rsi
    0000408d: 	movq	%r12, %rdi
    00004090: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16528
    00004095: 	movq	%r12, %rcx
    00004098: 	movl	$0x20, %edx
    0000409d: 	movl	$0x1f40, %esi
    000040a2: 	movq	%rbp, %rdi
    000040a5: 	callq	_Z14test_variable1Ij25custom_remainder_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 16549
    000040aa: 	movq	0xa0(%rsp), %rdi
    000040b2: 	cmpq	%r13, %rdi
    000040b5: 	je	.Ltmp6297 # Offset: 16565
    000040b7: 	movq	0xb0(%rsp), %rax
    000040bf: 	leaq	0x1(%rax), %rsi
    000040c3: 	callq	_ZdlPvm@PLT # Offset: 16579
.Ltmp6297:
    000040c8: 	leaq	DATAat0x5778e(%rip), %rdx
    000040cf: 	movq	%r14, %rsi
    000040d2: 	movq	%r12, %rdi
    000040d5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16597
    000040da: 	callq	clock@PLT # Offset: 16602
    000040df: 	movl	iterations(%rip), %ecx
    000040e5: 	movq	%rax, start_time(%rip)
    000040ec: 	testl	%ecx, %ecx
    000040ee: 	jle	.Ltmp6298 # Offset: 16622
    000040f4: 	movdqa	DATAat0x57e50(%rip), %xmm4
    000040fc: 	movl	$0x0, 0x1c(%rsp)
    00004104: 	movaps	%xmm4, (%rsp)
    00004108: 	nopl	(%rax,%rax) # Size: 8
.Ltmp6301:
    00004110: 	movq	%rbp, %rax
    00004113: 	pxor	%xmm0, %xmm0
    00004117: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6299:
    00004120: 	movdqa	(%rsp), %xmm1
    00004125: 	pand	(%rax), %xmm1
    00004129: 	addq	$0x10, %rax
    0000412d: 	paddd	%xmm1, %xmm0
    00004131: 	cmpq	%rbx, %rax
    00004134: 	jne	.Ltmp6299 # Offset: 16692
    00004136: 	cvttsd2si	init_value(%rip), %rdx
    0000413f: 	movdqa	%xmm0, %xmm1
    00004143: 	psrldq	$0x8, %xmm1
    00004148: 	paddd	%xmm1, %xmm0
    0000414c: 	movdqa	%xmm0, %xmm1
    00004150: 	andl	$0x1f, %edx
    00004153: 	psrldq	$0x4, %xmm1
    00004158: 	imull	$0x1f40, %edx, %edx
    0000415e: 	paddd	%xmm1, %xmm0
    00004162: 	movd	%xmm0, %eax
    00004166: 	cmpl	%eax, %edx
    00004168: 	je	.Ltmp6300 # Offset: 16744
    0000416a: 	movl	current_test(%rip), %edx
    00004170: 	leaq	DATAat0x571d0(%rip), %rsi
    00004177: 	movl	$0x1, %edi
    0000417c: 	xorl	%eax, %eax
    0000417e: 	callq	__printf_chk@PLT # Offset: 16766
    00004183: 	movl	iterations(%rip), %ecx
.Ltmp6300:
    00004189: 	addl	$0x1, 0x1c(%rsp)
    0000418e: 	movl	0x1c(%rsp), %eax
    00004192: 	cmpl	%ecx, %eax
    00004194: 	jl	.Ltmp6301 # Offset: 16788
.Ltmp6298:
    0000419a: 	movq	%r12, %rsi
    0000419d: 	movq	%r15, %rdi
    000041a0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16800
    000041a5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000041ac: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000041b3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000041ba: 	je	.Ltmp6302 # Offset: 16826
.Ltmp6436:
    000041c0: 	movq	-0x20(%rax), %rdi
    000041c4: 	movq	%rdi, (%rsp)
    000041c8: 	callq	clock@PLT # Offset: 16840
    000041cd: 	movq	(%rsp), %rdi
    000041d1: 	pxor	%xmm0, %xmm0
    000041d5: 	movq	%rax, end_time(%rip)
    000041dc: 	subq	start_time(%rip), %rax
    000041e3: 	cvtsi2sd	%rax, %xmm0
    000041e8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000041f0: 	callq	_Z13record_resultdPKc # Offset: 16880
    000041f5: 	movq	0xa0(%rsp), %rdi
    000041fd: 	cmpq	%r13, %rdi
    00004200: 	je	.Ltmp6303 # Offset: 16896
    00004202: 	movq	0xb0(%rsp), %rax
    0000420a: 	leaq	0x1(%rax), %rsi
    0000420e: 	callq	_ZdlPvm@PLT # Offset: 16910
.Ltmp6303:
    00004213: 	leaq	DATAat0x577a8(%rip), %rdx
    0000421a: 	movq	%r14, %rsi
    0000421d: 	movq	%r12, %rdi
    00004220: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16928
    00004225: 	callq	clock@PLT # Offset: 16933
    0000422a: 	movl	iterations(%rip), %ecx
    00004230: 	movq	%rax, start_time(%rip)
    00004237: 	testl	%ecx, %ecx
    00004239: 	jle	.Ltmp6304 # Offset: 16953
    0000423f: 	movdqa	DATAat0x57e40(%rip), %xmm5
    00004247: 	movl	$0x0, 0x1c(%rsp)
    0000424f: 	movaps	%xmm5, (%rsp)
    00004253: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6307:
    00004258: 	movq	%rbp, %rax
    0000425b: 	pxor	%xmm0, %xmm0
    0000425f: 	nop # Size: 1
.Ltmp6305:
    00004260: 	movdqa	(%rsp), %xmm1
    00004265: 	pand	(%rax), %xmm1
    00004269: 	addq	$0x10, %rax
    0000426d: 	paddd	%xmm1, %xmm0
    00004271: 	cmpq	%rax, %rbx
    00004274: 	jne	.Ltmp6305 # Offset: 17012
    00004276: 	cvttsd2si	init_value(%rip), %rdx
    0000427f: 	movdqa	%xmm0, %xmm1
    00004283: 	psrldq	$0x8, %xmm1
    00004288: 	paddd	%xmm1, %xmm0
    0000428c: 	movdqa	%xmm0, %xmm1
    00004290: 	andl	$0x3f, %edx
    00004293: 	psrldq	$0x4, %xmm1
    00004298: 	imull	$0x1f40, %edx, %edx
    0000429e: 	paddd	%xmm1, %xmm0
    000042a2: 	movd	%xmm0, %eax
    000042a6: 	cmpl	%eax, %edx
    000042a8: 	je	.Ltmp6306 # Offset: 17064
    000042aa: 	movl	current_test(%rip), %edx
    000042b0: 	leaq	DATAat0x571d0(%rip), %rsi
    000042b7: 	movl	$0x1, %edi
    000042bc: 	xorl	%eax, %eax
    000042be: 	callq	__printf_chk@PLT # Offset: 17086
    000042c3: 	movl	iterations(%rip), %ecx
.Ltmp6306:
    000042c9: 	addl	$0x1, 0x1c(%rsp)
    000042ce: 	movl	0x1c(%rsp), %eax
    000042d2: 	cmpl	%ecx, %eax
    000042d4: 	jl	.Ltmp6307 # Offset: 17108
.Ltmp6304:
    000042da: 	movq	%r12, %rsi
    000042dd: 	movq	%r15, %rdi
    000042e0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17120
    000042e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000042ec: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000042f3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000042fa: 	je	.Ltmp6308 # Offset: 17146
.Ltmp6435:
    00004300: 	movq	-0x20(%rax), %rdi
    00004304: 	movq	%rdi, (%rsp)
    00004308: 	callq	clock@PLT # Offset: 17160
    0000430d: 	movq	(%rsp), %rdi
    00004311: 	pxor	%xmm0, %xmm0
    00004315: 	movq	%rax, end_time(%rip)
    0000431c: 	subq	start_time(%rip), %rax
    00004323: 	cvtsi2sd	%rax, %xmm0
    00004328: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004330: 	callq	_Z13record_resultdPKc # Offset: 17200
    00004335: 	movq	0xa0(%rsp), %rdi
    0000433d: 	cmpq	%r13, %rdi
    00004340: 	je	.Ltmp6309 # Offset: 17216
    00004342: 	movq	0xb0(%rsp), %rax
    0000434a: 	leaq	0x1(%rax), %rsi
    0000434e: 	callq	_ZdlPvm@PLT # Offset: 17230
.Ltmp6309:
    00004353: 	leaq	DATAat0x577b0(%rip), %rdx
    0000435a: 	movq	%r14, %rsi
    0000435d: 	movq	%r12, %rdi
    00004360: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17248
    00004365: 	callq	clock@PLT # Offset: 17253
    0000436a: 	movl	iterations(%rip), %ecx
    00004370: 	movq	%rax, start_time(%rip)
    00004377: 	testl	%ecx, %ecx
    00004379: 	jle	.Ltmp6310 # Offset: 17273
    0000437f: 	movdqa	DATAat0x57e40(%rip), %xmm6
    00004387: 	movl	$0x0, 0x1c(%rsp)
    0000438f: 	movaps	%xmm6, (%rsp)
    00004393: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6313:
    00004398: 	movq	%rbp, %rax
    0000439b: 	pxor	%xmm0, %xmm0
    0000439f: 	nop # Size: 1
.Ltmp6311:
    000043a0: 	movdqa	(%rsp), %xmm1
    000043a5: 	pand	(%rax), %xmm1
    000043a9: 	addq	$0x10, %rax
    000043ad: 	paddd	%xmm1, %xmm0
    000043b1: 	cmpq	%rbx, %rax
    000043b4: 	jne	.Ltmp6311 # Offset: 17332
    000043b6: 	cvttsd2si	init_value(%rip), %rdx
    000043bf: 	movdqa	%xmm0, %xmm1
    000043c3: 	psrldq	$0x8, %xmm1
    000043c8: 	paddd	%xmm1, %xmm0
    000043cc: 	movdqa	%xmm0, %xmm1
    000043d0: 	andl	$0x3f, %edx
    000043d3: 	psrldq	$0x4, %xmm1
    000043d8: 	imull	$0x1f40, %edx, %edx
    000043de: 	paddd	%xmm1, %xmm0
    000043e2: 	movd	%xmm0, %eax
    000043e6: 	cmpl	%eax, %edx
    000043e8: 	je	.Ltmp6312 # Offset: 17384
    000043ea: 	movl	current_test(%rip), %edx
    000043f0: 	leaq	DATAat0x571d0(%rip), %rsi
    000043f7: 	movl	$0x1, %edi
    000043fc: 	xorl	%eax, %eax
    000043fe: 	callq	__printf_chk@PLT # Offset: 17406
    00004403: 	movl	iterations(%rip), %ecx
.Ltmp6312:
    00004409: 	addl	$0x1, 0x1c(%rsp)
    0000440e: 	movl	0x1c(%rsp), %eax
    00004412: 	cmpl	%ecx, %eax
    00004414: 	jl	.Ltmp6313 # Offset: 17428
.Ltmp6310:
    0000441a: 	movq	%r12, %rsi
    0000441d: 	movq	%r15, %rdi
    00004420: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17440
    00004425: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000442c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004433: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000443a: 	je	.Ltmp6314 # Offset: 17466
.Ltmp6434:
    00004440: 	movq	-0x20(%rax), %rdi
    00004444: 	movq	%rdi, (%rsp)
    00004448: 	callq	clock@PLT # Offset: 17480
    0000444d: 	movq	(%rsp), %rdi
    00004451: 	pxor	%xmm0, %xmm0
    00004455: 	movq	%rax, end_time(%rip)
    0000445c: 	subq	start_time(%rip), %rax
    00004463: 	cvtsi2sd	%rax, %xmm0
    00004468: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004470: 	callq	_Z13record_resultdPKc # Offset: 17520
    00004475: 	movq	0xa0(%rsp), %rdi
    0000447d: 	cmpq	%r13, %rdi
    00004480: 	je	.Ltmp6315 # Offset: 17536
    00004482: 	movq	0xb0(%rsp), %rax
    0000448a: 	leaq	0x1(%rax), %rsi
    0000448e: 	callq	_ZdlPvm@PLT # Offset: 17550
.Ltmp6315:
    00004493: 	leaq	DATAat0x577c2(%rip), %rdx
    0000449a: 	movq	%r14, %rsi
    0000449d: 	movq	%r12, %rdi
    000044a0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17568
    000044a5: 	callq	clock@PLT # Offset: 17573
    000044aa: 	movl	iterations(%rip), %ecx
    000044b0: 	movq	%rax, start_time(%rip)
    000044b7: 	testl	%ecx, %ecx
    000044b9: 	jle	.Ltmp6316 # Offset: 17593
    000044bf: 	movdqa	DATAat0x57e40(%rip), %xmm7
    000044c7: 	movl	$0x0, 0x1c(%rsp)
    000044cf: 	movaps	%xmm7, (%rsp)
    000044d3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6319:
    000044d8: 	movq	%rbp, %rax
    000044db: 	pxor	%xmm0, %xmm0
    000044df: 	nop # Size: 1
.Ltmp6317:
    000044e0: 	movdqa	(%rsp), %xmm1
    000044e5: 	pand	(%rax), %xmm1
    000044e9: 	addq	$0x10, %rax
    000044ed: 	paddd	%xmm1, %xmm0
    000044f1: 	cmpq	%rax, %rbx
    000044f4: 	jne	.Ltmp6317 # Offset: 17652
    000044f6: 	cvttsd2si	init_value(%rip), %rdx
    000044ff: 	movdqa	%xmm0, %xmm1
    00004503: 	psrldq	$0x8, %xmm1
    00004508: 	paddd	%xmm1, %xmm0
    0000450c: 	movdqa	%xmm0, %xmm1
    00004510: 	andl	$0x3f, %edx
    00004513: 	psrldq	$0x4, %xmm1
    00004518: 	imull	$0x1f40, %edx, %edx
    0000451e: 	paddd	%xmm1, %xmm0
    00004522: 	movd	%xmm0, %eax
    00004526: 	cmpl	%eax, %edx
    00004528: 	je	.Ltmp6318 # Offset: 17704
    0000452a: 	movl	current_test(%rip), %edx
    00004530: 	leaq	DATAat0x571d0(%rip), %rsi
    00004537: 	movl	$0x1, %edi
    0000453c: 	xorl	%eax, %eax
    0000453e: 	callq	__printf_chk@PLT # Offset: 17726
    00004543: 	movl	iterations(%rip), %ecx
.Ltmp6318:
    00004549: 	addl	$0x1, 0x1c(%rsp)
    0000454e: 	movl	0x1c(%rsp), %eax
    00004552: 	cmpl	%ecx, %eax
    00004554: 	jl	.Ltmp6319 # Offset: 17748
.Ltmp6316:
    0000455a: 	movq	%r12, %rsi
    0000455d: 	movq	%r15, %rdi
    00004560: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17760
    00004565: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000456c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004573: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000457a: 	je	.Ltmp6320 # Offset: 17786
.Ltmp6433:
    00004580: 	movq	-0x20(%rax), %rdi
    00004584: 	movq	%rdi, (%rsp)
    00004588: 	callq	clock@PLT # Offset: 17800
    0000458d: 	movq	(%rsp), %rdi
    00004591: 	pxor	%xmm0, %xmm0
    00004595: 	movq	%rax, end_time(%rip)
    0000459c: 	subq	start_time(%rip), %rax
    000045a3: 	cvtsi2sd	%rax, %xmm0
    000045a8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000045b0: 	callq	_Z13record_resultdPKc # Offset: 17840
    000045b5: 	movq	0xa0(%rsp), %rdi
    000045bd: 	cmpq	%r13, %rdi
    000045c0: 	je	.Ltmp6321 # Offset: 17856
    000045c2: 	movq	0xb0(%rsp), %rax
    000045ca: 	leaq	0x1(%rax), %rsi
    000045ce: 	callq	_ZdlPvm@PLT # Offset: 17870
.Ltmp6321:
    000045d3: 	leaq	DATAat0x577d5(%rip), %rdx
    000045da: 	movq	%r14, %rsi
    000045dd: 	movq	%r12, %rdi
    000045e0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17888
    000045e5: 	callq	clock@PLT # Offset: 17893
    000045ea: 	movl	iterations(%rip), %ecx
    000045f0: 	movq	%rax, start_time(%rip)
    000045f7: 	testl	%ecx, %ecx
    000045f9: 	jle	.Ltmp6322 # Offset: 17913
    000045ff: 	movdqa	DATAat0x57e40(%rip), %xmm3
    00004607: 	movl	$0x0, 0x1c(%rsp)
    0000460f: 	movaps	%xmm3, (%rsp)
    00004613: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6325:
    00004618: 	movq	%rbp, %rax
    0000461b: 	pxor	%xmm0, %xmm0
    0000461f: 	nop # Size: 1
.Ltmp6323:
    00004620: 	movdqa	(%rsp), %xmm1
    00004625: 	pand	(%rax), %xmm1
    00004629: 	addq	$0x10, %rax
    0000462d: 	paddd	%xmm1, %xmm0
    00004631: 	cmpq	%rbx, %rax
    00004634: 	jne	.Ltmp6323 # Offset: 17972
    00004636: 	cvttsd2si	init_value(%rip), %rdx
    0000463f: 	movdqa	%xmm0, %xmm1
    00004643: 	psrldq	$0x8, %xmm1
    00004648: 	paddd	%xmm1, %xmm0
    0000464c: 	movdqa	%xmm0, %xmm1
    00004650: 	andl	$0x3f, %edx
    00004653: 	psrldq	$0x4, %xmm1
    00004658: 	imull	$0x1f40, %edx, %edx
    0000465e: 	paddd	%xmm1, %xmm0
    00004662: 	movd	%xmm0, %eax
    00004666: 	cmpl	%eax, %edx
    00004668: 	je	.Ltmp6324 # Offset: 18024
    0000466a: 	movl	current_test(%rip), %edx
    00004670: 	leaq	DATAat0x571d0(%rip), %rsi
    00004677: 	movl	$0x1, %edi
    0000467c: 	xorl	%eax, %eax
    0000467e: 	callq	__printf_chk@PLT # Offset: 18046
    00004683: 	movl	iterations(%rip), %ecx
.Ltmp6324:
    00004689: 	addl	$0x1, 0x1c(%rsp)
    0000468e: 	movl	0x1c(%rsp), %eax
    00004692: 	cmpl	%ecx, %eax
    00004694: 	jl	.Ltmp6325 # Offset: 18068
.Ltmp6322:
    0000469a: 	movq	%r12, %rsi
    0000469d: 	movq	%r15, %rdi
    000046a0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18080
    000046a5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000046ac: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000046b3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000046ba: 	je	.Ltmp6326 # Offset: 18106
.Ltmp6432:
    000046c0: 	movq	-0x20(%rax), %rdi
    000046c4: 	movq	%rdi, (%rsp)
    000046c8: 	callq	clock@PLT # Offset: 18120
    000046cd: 	movq	(%rsp), %rdi
    000046d1: 	pxor	%xmm0, %xmm0
    000046d5: 	movq	%rax, end_time(%rip)
    000046dc: 	subq	start_time(%rip), %rax
    000046e3: 	cvtsi2sd	%rax, %xmm0
    000046e8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000046f0: 	callq	_Z13record_resultdPKc # Offset: 18160
    000046f5: 	movq	0xa0(%rsp), %rdi
    000046fd: 	cmpq	%r13, %rdi
    00004700: 	je	.Ltmp6327 # Offset: 18176
    00004702: 	movq	0xb0(%rsp), %rax
    0000470a: 	leaq	0x1(%rax), %rsi
    0000470e: 	callq	_ZdlPvm@PLT # Offset: 18190
.Ltmp6327:
    00004713: 	leaq	DATAat0x577ed(%rip), %rdx
    0000471a: 	movq	%r14, %rsi
    0000471d: 	movq	%r12, %rdi
    00004720: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18208
    00004725: 	movq	%r12, %rcx
    00004728: 	movl	$0x40, %edx
    0000472d: 	movl	$0x1f40, %esi
    00004732: 	movq	%rbp, %rdi
    00004735: 	callq	_Z14test_variable1Ij25custom_remainder_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 18229
    0000473a: 	movq	0xa0(%rsp), %rdi
    00004742: 	cmpq	%r13, %rdi
    00004745: 	je	.Ltmp6328 # Offset: 18245
    00004747: 	movq	0xb0(%rsp), %rax
    0000474f: 	leaq	0x1(%rax), %rsi
    00004753: 	callq	_ZdlPvm@PLT # Offset: 18259
.Ltmp6328:
    00004758: 	leaq	DATAat0x57807(%rip), %rdx
    0000475f: 	movq	%r14, %rsi
    00004762: 	movq	%r12, %rdi
    00004765: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18277
    0000476a: 	callq	clock@PLT # Offset: 18282
    0000476f: 	movl	iterations(%rip), %ecx
    00004775: 	movq	%rax, start_time(%rip)
    0000477c: 	testl	%ecx, %ecx
    0000477e: 	jle	.Ltmp6329 # Offset: 18302
    00004784: 	movdqa	DATAat0x57e40(%rip), %xmm4
    0000478c: 	movl	$0x0, 0x1c(%rsp)
    00004794: 	movaps	%xmm4, (%rsp)
    00004798: 	nopl	(%rax,%rax) # Size: 8
.Ltmp6332:
    000047a0: 	movq	%rbp, %rax
    000047a3: 	pxor	%xmm0, %xmm0
    000047a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6330:
    000047b0: 	movdqa	(%rsp), %xmm1
    000047b5: 	pand	(%rax), %xmm1
    000047b9: 	addq	$0x10, %rax
    000047bd: 	paddd	%xmm1, %xmm0
    000047c1: 	cmpq	%rax, %rbx
    000047c4: 	jne	.Ltmp6330 # Offset: 18372
    000047c6: 	cvttsd2si	init_value(%rip), %rdx
    000047cf: 	movdqa	%xmm0, %xmm1
    000047d3: 	psrldq	$0x8, %xmm1
    000047d8: 	paddd	%xmm1, %xmm0
    000047dc: 	movdqa	%xmm0, %xmm1
    000047e0: 	andl	$0x3f, %edx
    000047e3: 	psrldq	$0x4, %xmm1
    000047e8: 	imull	$0x1f40, %edx, %edx
    000047ee: 	paddd	%xmm1, %xmm0
    000047f2: 	movd	%xmm0, %eax
    000047f6: 	cmpl	%eax, %edx
    000047f8: 	je	.Ltmp6331 # Offset: 18424
    000047fa: 	movl	current_test(%rip), %edx
    00004800: 	leaq	DATAat0x571d0(%rip), %rsi
    00004807: 	movl	$0x1, %edi
    0000480c: 	xorl	%eax, %eax
    0000480e: 	callq	__printf_chk@PLT # Offset: 18446
    00004813: 	movl	iterations(%rip), %ecx
.Ltmp6331:
    00004819: 	addl	$0x1, 0x1c(%rsp)
    0000481e: 	movl	0x1c(%rsp), %eax
    00004822: 	cmpl	%ecx, %eax
    00004824: 	jl	.Ltmp6332 # Offset: 18468
.Ltmp6329:
    0000482a: 	movq	%r12, %rsi
    0000482d: 	movq	%r15, %rdi
    00004830: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18480
    00004835: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000483c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004843: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000484a: 	je	.Ltmp6333 # Offset: 18506
.Ltmp6431:
    00004850: 	movq	-0x20(%rax), %rdi
    00004854: 	movq	%rdi, (%rsp)
    00004858: 	callq	clock@PLT # Offset: 18520
    0000485d: 	movq	(%rsp), %rdi
    00004861: 	pxor	%xmm0, %xmm0
    00004865: 	movq	%rax, end_time(%rip)
    0000486c: 	subq	start_time(%rip), %rax
    00004873: 	cvtsi2sd	%rax, %xmm0
    00004878: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004880: 	callq	_Z13record_resultdPKc # Offset: 18560
    00004885: 	movq	0xa0(%rsp), %rdi
    0000488d: 	cmpq	%r13, %rdi
    00004890: 	je	.Ltmp6334 # Offset: 18576
    00004892: 	movq	0xb0(%rsp), %rax
    0000489a: 	leaq	0x1(%rax), %rsi
    0000489e: 	callq	_ZdlPvm@PLT # Offset: 18590
.Ltmp6334:
    000048a3: 	leaq	DATAat0x57821(%rip), %rdx
    000048aa: 	movq	%r14, %rsi
    000048ad: 	movq	%r12, %rdi
    000048b0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18608
    000048b5: 	callq	clock@PLT # Offset: 18613
    000048ba: 	movl	iterations(%rip), %ecx
    000048c0: 	movq	%rax, start_time(%rip)
    000048c7: 	testl	%ecx, %ecx
    000048c9: 	jle	.Ltmp6335 # Offset: 18633
    000048cf: 	movdqa	DATAat0x57cf0(%rip), %xmm5
    000048d7: 	movl	$0x0, 0x1c(%rsp)
    000048df: 	movaps	%xmm5, (%rsp)
    000048e3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6338:
    000048e8: 	movq	%rbp, %rax
    000048eb: 	pxor	%xmm0, %xmm0
    000048ef: 	nop # Size: 1
.Ltmp6336:
    000048f0: 	movdqa	(%rsp), %xmm1
    000048f5: 	pand	(%rax), %xmm1
    000048f9: 	addq	$0x10, %rax
    000048fd: 	paddd	%xmm1, %xmm0
    00004901: 	cmpq	%rbx, %rax
    00004904: 	jne	.Ltmp6336 # Offset: 18692
    00004906: 	cvttsd2si	init_value(%rip), %rdx
    0000490f: 	movdqa	%xmm0, %xmm1
    00004913: 	psrldq	$0x8, %xmm1
    00004918: 	paddd	%xmm1, %xmm0
    0000491c: 	movdqa	%xmm0, %xmm1
    00004920: 	andl	$0x7f, %edx
    00004923: 	psrldq	$0x4, %xmm1
    00004928: 	imull	$0x1f40, %edx, %edx
    0000492e: 	paddd	%xmm1, %xmm0
    00004932: 	movd	%xmm0, %eax
    00004936: 	cmpl	%eax, %edx
    00004938: 	je	.Ltmp6337 # Offset: 18744
    0000493a: 	movl	current_test(%rip), %edx
    00004940: 	leaq	DATAat0x571d0(%rip), %rsi
    00004947: 	movl	$0x1, %edi
    0000494c: 	xorl	%eax, %eax
    0000494e: 	callq	__printf_chk@PLT # Offset: 18766
    00004953: 	movl	iterations(%rip), %ecx
.Ltmp6337:
    00004959: 	addl	$0x1, 0x1c(%rsp)
    0000495e: 	movl	0x1c(%rsp), %eax
    00004962: 	cmpl	%ecx, %eax
    00004964: 	jl	.Ltmp6338 # Offset: 18788
.Ltmp6335:
    0000496a: 	movq	%r12, %rsi
    0000496d: 	movq	%r15, %rdi
    00004970: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18800
    00004975: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000497c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004983: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000498a: 	je	.Ltmp6339 # Offset: 18826
.Ltmp6430:
    00004990: 	movq	-0x20(%rax), %rdi
    00004994: 	movq	%rdi, (%rsp)
    00004998: 	callq	clock@PLT # Offset: 18840
    0000499d: 	movq	(%rsp), %rdi
    000049a1: 	pxor	%xmm0, %xmm0
    000049a5: 	movq	%rax, end_time(%rip)
    000049ac: 	subq	start_time(%rip), %rax
    000049b3: 	cvtsi2sd	%rax, %xmm0
    000049b8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000049c0: 	callq	_Z13record_resultdPKc # Offset: 18880
    000049c5: 	movq	0xa0(%rsp), %rdi
    000049cd: 	cmpq	%r13, %rdi
    000049d0: 	je	.Ltmp6340 # Offset: 18896
    000049d2: 	movq	0xb0(%rsp), %rax
    000049da: 	leaq	0x1(%rax), %rsi
    000049de: 	callq	_ZdlPvm@PLT # Offset: 18910
.Ltmp6340:
    000049e3: 	leaq	DATAat0x5782a(%rip), %rdx
    000049ea: 	movq	%r14, %rsi
    000049ed: 	movq	%r12, %rdi
    000049f0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18928
    000049f5: 	movq	%r12, %rdx
    000049f8: 	movl	$0x1f40, %esi
    000049fd: 	movq	%rbp, %rdi
    00004a00: 	callq	_Z13test_constantIj13and_remainderIjLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 18944
    00004a05: 	movq	0xa0(%rsp), %rdi
    00004a0d: 	cmpq	%r13, %rdi
    00004a10: 	je	.Ltmp6341 # Offset: 18960
    00004a12: 	movq	0xb0(%rsp), %rax
    00004a1a: 	leaq	0x1(%rax), %rsi
    00004a1e: 	callq	_ZdlPvm@PLT # Offset: 18974
.Ltmp6341:
    00004a23: 	leaq	DATAat0x5783d(%rip), %rdx
    00004a2a: 	movq	%r14, %rsi
    00004a2d: 	movq	%r12, %rdi
    00004a30: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18992
    00004a35: 	callq	clock@PLT # Offset: 18997
    00004a3a: 	movl	iterations(%rip), %ecx
    00004a40: 	movq	%rax, start_time(%rip)
    00004a47: 	testl	%ecx, %ecx
    00004a49: 	jle	.Ltmp6342 # Offset: 19017
    00004a4f: 	movdqa	DATAat0x57cf0(%rip), %xmm6
    00004a57: 	movl	$0x0, 0x1c(%rsp)
    00004a5f: 	movaps	%xmm6, (%rsp)
    00004a63: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6345:
    00004a68: 	movq	%rbp, %rax
    00004a6b: 	pxor	%xmm0, %xmm0
    00004a6f: 	nop # Size: 1
.Ltmp6343:
    00004a70: 	movdqa	(%rsp), %xmm1
    00004a75: 	pand	(%rax), %xmm1
    00004a79: 	addq	$0x10, %rax
    00004a7d: 	paddd	%xmm1, %xmm0
    00004a81: 	cmpq	%rax, %rbx
    00004a84: 	jne	.Ltmp6343 # Offset: 19076
    00004a86: 	cvttsd2si	init_value(%rip), %rdx
    00004a8f: 	movdqa	%xmm0, %xmm1
    00004a93: 	psrldq	$0x8, %xmm1
    00004a98: 	paddd	%xmm1, %xmm0
    00004a9c: 	movdqa	%xmm0, %xmm1
    00004aa0: 	andl	$0x7f, %edx
    00004aa3: 	psrldq	$0x4, %xmm1
    00004aa8: 	imull	$0x1f40, %edx, %edx
    00004aae: 	paddd	%xmm1, %xmm0
    00004ab2: 	movd	%xmm0, %eax
    00004ab6: 	cmpl	%eax, %edx
    00004ab8: 	je	.Ltmp6344 # Offset: 19128
    00004aba: 	movl	current_test(%rip), %edx
    00004ac0: 	leaq	DATAat0x571d0(%rip), %rsi
    00004ac7: 	movl	$0x1, %edi
    00004acc: 	xorl	%eax, %eax
    00004ace: 	callq	__printf_chk@PLT # Offset: 19150
    00004ad3: 	movl	iterations(%rip), %ecx
.Ltmp6344:
    00004ad9: 	addl	$0x1, 0x1c(%rsp)
    00004ade: 	movl	0x1c(%rsp), %eax
    00004ae2: 	cmpl	%ecx, %eax
    00004ae4: 	jl	.Ltmp6345 # Offset: 19172
.Ltmp6342:
    00004aea: 	movq	%r12, %rsi
    00004aed: 	movq	%r15, %rdi
    00004af0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19184
    00004af5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004afc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004b03: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004b0a: 	je	.Ltmp6346 # Offset: 19210
.Ltmp6429:
    00004b10: 	movq	-0x20(%rax), %rdi
    00004b14: 	movq	%rdi, (%rsp)
    00004b18: 	callq	clock@PLT # Offset: 19224
    00004b1d: 	movq	(%rsp), %rdi
    00004b21: 	pxor	%xmm0, %xmm0
    00004b25: 	movq	%rax, end_time(%rip)
    00004b2c: 	subq	start_time(%rip), %rax
    00004b33: 	cvtsi2sd	%rax, %xmm0
    00004b38: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004b40: 	callq	_Z13record_resultdPKc # Offset: 19264
    00004b45: 	movq	0xa0(%rsp), %rdi
    00004b4d: 	cmpq	%r13, %rdi
    00004b50: 	je	.Ltmp6347 # Offset: 19280
    00004b52: 	movq	0xb0(%rsp), %rax
    00004b5a: 	leaq	0x1(%rax), %rsi
    00004b5e: 	callq	_ZdlPvm@PLT # Offset: 19294
.Ltmp6347:
    00004b63: 	leaq	DATAat0x57851(%rip), %rdx
    00004b6a: 	movq	%r14, %rsi
    00004b6d: 	movq	%r12, %rdi
    00004b70: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19312
    00004b75: 	callq	clock@PLT # Offset: 19317
    00004b7a: 	movl	iterations(%rip), %ecx
    00004b80: 	movq	%rax, start_time(%rip)
    00004b87: 	testl	%ecx, %ecx
    00004b89: 	jle	.Ltmp6348 # Offset: 19337
    00004b8f: 	movdqa	DATAat0x57cf0(%rip), %xmm7
    00004b97: 	movl	$0x0, 0x1c(%rsp)
    00004b9f: 	movaps	%xmm7, (%rsp)
    00004ba3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6351:
    00004ba8: 	movq	%rbp, %rax
    00004bab: 	pxor	%xmm0, %xmm0
    00004baf: 	nop # Size: 1
.Ltmp6349:
    00004bb0: 	movdqa	(%rsp), %xmm1
    00004bb5: 	pand	(%rax), %xmm1
    00004bb9: 	addq	$0x10, %rax
    00004bbd: 	paddd	%xmm1, %xmm0
    00004bc1: 	cmpq	%rbx, %rax
    00004bc4: 	jne	.Ltmp6349 # Offset: 19396
    00004bc6: 	cvttsd2si	init_value(%rip), %rdx
    00004bcf: 	movdqa	%xmm0, %xmm1
    00004bd3: 	psrldq	$0x8, %xmm1
    00004bd8: 	paddd	%xmm1, %xmm0
    00004bdc: 	movdqa	%xmm0, %xmm1
    00004be0: 	andl	$0x7f, %edx
    00004be3: 	psrldq	$0x4, %xmm1
    00004be8: 	imull	$0x1f40, %edx, %edx
    00004bee: 	paddd	%xmm1, %xmm0
    00004bf2: 	movd	%xmm0, %eax
    00004bf6: 	cmpl	%eax, %edx
    00004bf8: 	je	.Ltmp6350 # Offset: 19448
    00004bfa: 	movl	current_test(%rip), %edx
    00004c00: 	leaq	DATAat0x571d0(%rip), %rsi
    00004c07: 	movl	$0x1, %edi
    00004c0c: 	xorl	%eax, %eax
    00004c0e: 	callq	__printf_chk@PLT # Offset: 19470
    00004c13: 	movl	iterations(%rip), %ecx
.Ltmp6350:
    00004c19: 	addl	$0x1, 0x1c(%rsp)
    00004c1e: 	movl	0x1c(%rsp), %eax
    00004c22: 	cmpl	%ecx, %eax
    00004c24: 	jl	.Ltmp6351 # Offset: 19492
.Ltmp6348:
    00004c2a: 	movq	%r12, %rsi
    00004c2d: 	movq	%r15, %rdi
    00004c30: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19504
    00004c35: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004c3c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004c43: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004c4a: 	je	.Ltmp6352 # Offset: 19530
.Ltmp6428:
    00004c50: 	movq	-0x20(%rax), %rdi
    00004c54: 	movq	%rdi, (%rsp)
    00004c58: 	callq	clock@PLT # Offset: 19544
    00004c5d: 	movq	(%rsp), %rdi
    00004c61: 	pxor	%xmm0, %xmm0
    00004c65: 	movq	%rax, end_time(%rip)
    00004c6c: 	subq	start_time(%rip), %rax
    00004c73: 	cvtsi2sd	%rax, %xmm0
    00004c78: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004c80: 	callq	_Z13record_resultdPKc # Offset: 19584
    00004c85: 	movq	0xa0(%rsp), %rdi
    00004c8d: 	cmpq	%r13, %rdi
    00004c90: 	je	.Ltmp6353 # Offset: 19600
    00004c92: 	movq	0xb0(%rsp), %rax
    00004c9a: 	leaq	0x1(%rax), %rsi
    00004c9e: 	callq	_ZdlPvm@PLT # Offset: 19614
.Ltmp6353:
    00004ca3: 	leaq	DATAat0x5786a(%rip), %rdx
    00004caa: 	movq	%r14, %rsi
    00004cad: 	movq	%r12, %rdi
    00004cb0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19632
    00004cb5: 	movq	%r12, %rcx
    00004cb8: 	movl	$0x80, %edx
    00004cbd: 	movl	$0x1f40, %esi
    00004cc2: 	movq	%rbp, %rdi
    00004cc5: 	callq	_Z14test_variable1Ij25custom_remainder_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 19653
    00004cca: 	movq	0xa0(%rsp), %rdi
    00004cd2: 	cmpq	%r13, %rdi
    00004cd5: 	je	.Ltmp6354 # Offset: 19669
    00004cd7: 	movq	0xb0(%rsp), %rax
    00004cdf: 	leaq	0x1(%rax), %rsi
    00004ce3: 	callq	_ZdlPvm@PLT # Offset: 19683
.Ltmp6354:
    00004ce8: 	leaq	DATAat0x57885(%rip), %rdx
    00004cef: 	movq	%r14, %rsi
    00004cf2: 	movq	%r12, %rdi
    00004cf5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19701
    00004cfa: 	callq	clock@PLT # Offset: 19706
    00004cff: 	movl	iterations(%rip), %ecx
    00004d05: 	movq	%rax, start_time(%rip)
    00004d0c: 	testl	%ecx, %ecx
    00004d0e: 	jle	.Ltmp6355 # Offset: 19726
    00004d14: 	movdqa	DATAat0x57cf0(%rip), %xmm3
    00004d1c: 	movl	$0x0, 0x1c(%rsp)
    00004d24: 	movaps	%xmm3, (%rsp)
    00004d28: 	nopl	(%rax,%rax) # Size: 8
.Ltmp6358:
    00004d30: 	movq	%rbp, %rax
    00004d33: 	pxor	%xmm0, %xmm0
    00004d37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6356:
    00004d40: 	movdqa	(%rsp), %xmm1
    00004d45: 	pand	(%rax), %xmm1
    00004d49: 	addq	$0x10, %rax
    00004d4d: 	paddd	%xmm1, %xmm0
    00004d51: 	cmpq	%rax, %rbx
    00004d54: 	jne	.Ltmp6356 # Offset: 19796
    00004d56: 	cvttsd2si	init_value(%rip), %rdx
    00004d5f: 	movdqa	%xmm0, %xmm1
    00004d63: 	psrldq	$0x8, %xmm1
    00004d68: 	paddd	%xmm1, %xmm0
    00004d6c: 	movdqa	%xmm0, %xmm1
    00004d70: 	andl	$0x7f, %edx
    00004d73: 	psrldq	$0x4, %xmm1
    00004d78: 	imull	$0x1f40, %edx, %edx
    00004d7e: 	paddd	%xmm1, %xmm0
    00004d82: 	movd	%xmm0, %eax
    00004d86: 	cmpl	%eax, %edx
    00004d88: 	je	.Ltmp6357 # Offset: 19848
    00004d8a: 	movl	current_test(%rip), %edx
    00004d90: 	leaq	DATAat0x571d0(%rip), %rsi
    00004d97: 	movl	$0x1, %edi
    00004d9c: 	xorl	%eax, %eax
    00004d9e: 	callq	__printf_chk@PLT # Offset: 19870
    00004da3: 	movl	iterations(%rip), %ecx
.Ltmp6357:
    00004da9: 	addl	$0x1, 0x1c(%rsp)
    00004dae: 	movl	0x1c(%rsp), %eax
    00004db2: 	cmpl	%ecx, %eax
    00004db4: 	jl	.Ltmp6358 # Offset: 19892
.Ltmp6355:
    00004dba: 	movq	%r12, %rsi
    00004dbd: 	movq	%r15, %rdi
    00004dc0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19904
    00004dc5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004dcc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004dd3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004dda: 	je	.Ltmp6359 # Offset: 19930
.Ltmp6427:
    00004de0: 	movq	-0x20(%rax), %rdi
    00004de4: 	movq	%rdi, (%rsp)
    00004de8: 	callq	clock@PLT # Offset: 19944
    00004ded: 	movq	(%rsp), %rdi
    00004df1: 	pxor	%xmm0, %xmm0
    00004df5: 	movq	%rax, end_time(%rip)
    00004dfc: 	subq	start_time(%rip), %rax
    00004e03: 	cvtsi2sd	%rax, %xmm0
    00004e08: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004e10: 	callq	_Z13record_resultdPKc # Offset: 19984
    00004e15: 	movq	0xa0(%rsp), %rdi
    00004e1d: 	cmpq	%r13, %rdi
    00004e20: 	je	.Ltmp6360 # Offset: 20000
    00004e22: 	movq	0xb0(%rsp), %rax
    00004e2a: 	leaq	0x1(%rax), %rsi
    00004e2e: 	callq	_ZdlPvm@PLT # Offset: 20014
.Ltmp6360:
    00004e33: 	leaq	DATAat0x578a0(%rip), %rdx
    00004e3a: 	movq	%r14, %rsi
    00004e3d: 	movq	%r12, %rdi
    00004e40: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20032
    00004e45: 	movq	%r12, %rdx
    00004e48: 	movl	$0x1f40, %esi
    00004e4d: 	movq	%rbp, %rdi
    00004e50: 	callq	_Z13test_constantIj12and_constantIjLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 20048
    00004e55: 	movq	0xa0(%rsp), %rdi
    00004e5d: 	cmpq	%r13, %rdi
    00004e60: 	je	.Ltmp6361 # Offset: 20064
    00004e62: 	movq	0xb0(%rsp), %rax
    00004e6a: 	leaq	0x1(%rax), %rsi
    00004e6e: 	callq	_ZdlPvm@PLT # Offset: 20078
.Ltmp6361:
    00004e73: 	leaq	DATAat0x578a9(%rip), %rdx
    00004e7a: 	movq	%r14, %rsi
    00004e7d: 	movq	%r12, %rdi
    00004e80: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20096
    00004e85: 	callq	clock@PLT # Offset: 20101
    00004e8a: 	movl	iterations(%rip), %ecx
    00004e90: 	movq	%rax, start_time(%rip)
    00004e97: 	testl	%ecx, %ecx
    00004e99: 	jle	.Ltmp6362 # Offset: 20121
    00004e9f: 	movdqa	DATAat0x57ce0(%rip), %xmm4
    00004ea7: 	movl	$0x0, 0x1c(%rsp)
    00004eaf: 	movaps	%xmm4, (%rsp)
    00004eb3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6365:
    00004eb8: 	movq	%rbp, %rax
    00004ebb: 	pxor	%xmm0, %xmm0
    00004ebf: 	nop # Size: 1
.Ltmp6363:
    00004ec0: 	movdqa	(%rsp), %xmm1
    00004ec5: 	pand	(%rax), %xmm1
    00004ec9: 	addq	$0x10, %rax
    00004ecd: 	paddd	%xmm1, %xmm0
    00004ed1: 	cmpq	%rbx, %rax
    00004ed4: 	jne	.Ltmp6363 # Offset: 20180
    00004ed6: 	cvttsd2si	init_value(%rip), %rdx
    00004edf: 	movdqa	%xmm0, %xmm1
    00004ee3: 	psrldq	$0x8, %xmm1
    00004ee8: 	paddd	%xmm1, %xmm0
    00004eec: 	movdqa	%xmm0, %xmm1
    00004ef0: 	movzbl	%dl, %edx
    00004ef3: 	psrldq	$0x4, %xmm1
    00004ef8: 	imull	$0x1f40, %edx, %edx
    00004efe: 	paddd	%xmm1, %xmm0
    00004f02: 	movd	%xmm0, %eax
    00004f06: 	cmpl	%eax, %edx
    00004f08: 	je	.Ltmp6364 # Offset: 20232
    00004f0a: 	movl	current_test(%rip), %edx
    00004f10: 	leaq	DATAat0x571d0(%rip), %rsi
    00004f17: 	movl	$0x1, %edi
    00004f1c: 	xorl	%eax, %eax
    00004f1e: 	callq	__printf_chk@PLT # Offset: 20254
    00004f23: 	movl	iterations(%rip), %ecx
.Ltmp6364:
    00004f29: 	addl	$0x1, 0x1c(%rsp)
    00004f2e: 	movl	0x1c(%rsp), %eax
    00004f32: 	cmpl	%ecx, %eax
    00004f34: 	jl	.Ltmp6365 # Offset: 20276
.Ltmp6362:
    00004f3a: 	movq	%r12, %rsi
    00004f3d: 	movq	%r15, %rdi
    00004f40: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 20288
    00004f45: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004f4c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004f53: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004f5a: 	je	.Ltmp6366 # Offset: 20314
.Ltmp6426:
    00004f60: 	movq	-0x20(%rax), %rdi
    00004f64: 	movq	%rdi, (%rsp)
    00004f68: 	callq	clock@PLT # Offset: 20328
    00004f6d: 	movq	(%rsp), %rdi
    00004f71: 	pxor	%xmm0, %xmm0
    00004f75: 	movq	%rax, end_time(%rip)
    00004f7c: 	subq	start_time(%rip), %rax
    00004f83: 	cvtsi2sd	%rax, %xmm0
    00004f88: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004f90: 	callq	_Z13record_resultdPKc # Offset: 20368
    00004f95: 	movq	0xa0(%rsp), %rdi
    00004f9d: 	cmpq	%r13, %rdi
    00004fa0: 	je	.Ltmp6367 # Offset: 20384
    00004fa2: 	movq	0xb0(%rsp), %rax
    00004faa: 	leaq	0x1(%rax), %rsi
    00004fae: 	callq	_ZdlPvm@PLT # Offset: 20398
.Ltmp6367:
    00004fb3: 	leaq	DATAat0x578bc(%rip), %rdx
    00004fba: 	movq	%r14, %rsi
    00004fbd: 	movq	%r12, %rdi
    00004fc0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20416
    00004fc5: 	callq	clock@PLT # Offset: 20421
    00004fca: 	movl	iterations(%rip), %ecx
    00004fd0: 	movq	%rax, start_time(%rip)
    00004fd7: 	testl	%ecx, %ecx
    00004fd9: 	jle	.Ltmp6368 # Offset: 20441
    00004fdf: 	movdqa	DATAat0x57ce0(%rip), %xmm5
    00004fe7: 	movl	$0x0, 0x1c(%rsp)
    00004fef: 	movaps	%xmm5, (%rsp)
    00004ff3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6371:
    00004ff8: 	movq	%rbp, %rax
    00004ffb: 	pxor	%xmm0, %xmm0
    00004fff: 	nop # Size: 1
.Ltmp6369:
    00005000: 	movdqa	(%rsp), %xmm1
    00005005: 	pand	(%rax), %xmm1
    00005009: 	addq	$0x10, %rax
    0000500d: 	paddd	%xmm1, %xmm0
    00005011: 	cmpq	%rax, %rbx
    00005014: 	jne	.Ltmp6369 # Offset: 20500
    00005016: 	cvttsd2si	init_value(%rip), %rdx
    0000501f: 	movdqa	%xmm0, %xmm1
    00005023: 	psrldq	$0x8, %xmm1
    00005028: 	paddd	%xmm1, %xmm0
    0000502c: 	movdqa	%xmm0, %xmm1
    00005030: 	movzbl	%dl, %edx
    00005033: 	psrldq	$0x4, %xmm1
    00005038: 	imull	$0x1f40, %edx, %edx
    0000503e: 	paddd	%xmm1, %xmm0
    00005042: 	movd	%xmm0, %eax
    00005046: 	cmpl	%eax, %edx
    00005048: 	je	.Ltmp6370 # Offset: 20552
    0000504a: 	movl	current_test(%rip), %edx
    00005050: 	leaq	DATAat0x571d0(%rip), %rsi
    00005057: 	movl	$0x1, %edi
    0000505c: 	xorl	%eax, %eax
    0000505e: 	callq	__printf_chk@PLT # Offset: 20574
    00005063: 	movl	iterations(%rip), %ecx
.Ltmp6370:
    00005069: 	addl	$0x1, 0x1c(%rsp)
    0000506e: 	movl	0x1c(%rsp), %eax
    00005072: 	cmpl	%ecx, %eax
    00005074: 	jl	.Ltmp6371 # Offset: 20596
.Ltmp6368:
    0000507a: 	movq	%r12, %rsi
    0000507d: 	movq	%r15, %rdi
    00005080: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 20608
    00005085: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000508c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005093: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000509a: 	je	.Ltmp6372 # Offset: 20634
.Ltmp6425:
    000050a0: 	movq	-0x20(%rax), %rdi
    000050a4: 	movq	%rdi, (%rsp)
    000050a8: 	callq	clock@PLT # Offset: 20648
    000050ad: 	movq	(%rsp), %rdi
    000050b1: 	pxor	%xmm0, %xmm0
    000050b5: 	movq	%rax, end_time(%rip)
    000050bc: 	subq	start_time(%rip), %rax
    000050c3: 	cvtsi2sd	%rax, %xmm0
    000050c8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000050d0: 	callq	_Z13record_resultdPKc # Offset: 20688
    000050d5: 	movq	0xa0(%rsp), %rdi
    000050dd: 	cmpq	%r13, %rdi
    000050e0: 	je	.Ltmp6373 # Offset: 20704
    000050e2: 	movq	0xb0(%rsp), %rax
    000050ea: 	leaq	0x1(%rax), %rsi
    000050ee: 	callq	_ZdlPvm@PLT # Offset: 20718
.Ltmp6373:
    000050f3: 	leaq	DATAat0x578d0(%rip), %rdx
    000050fa: 	movq	%r14, %rsi
    000050fd: 	movq	%r12, %rdi
    00005100: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20736
    00005105: 	callq	clock@PLT # Offset: 20741
    0000510a: 	movl	iterations(%rip), %ecx
    00005110: 	movq	%rax, start_time(%rip)
    00005117: 	testl	%ecx, %ecx
    00005119: 	jle	.Ltmp6374 # Offset: 20761
    0000511f: 	movdqa	DATAat0x57ce0(%rip), %xmm6
    00005127: 	movl	$0x0, 0x1c(%rsp)
    0000512f: 	movaps	%xmm6, (%rsp)
    00005133: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6377:
    00005138: 	movq	%rbp, %rax
    0000513b: 	pxor	%xmm0, %xmm0
    0000513f: 	nop # Size: 1
.Ltmp6375:
    00005140: 	movdqa	(%rsp), %xmm1
    00005145: 	pand	(%rax), %xmm1
    00005149: 	addq	$0x10, %rax
    0000514d: 	paddd	%xmm1, %xmm0
    00005151: 	cmpq	%rbx, %rax
    00005154: 	jne	.Ltmp6375 # Offset: 20820
    00005156: 	cvttsd2si	init_value(%rip), %rdx
    0000515f: 	movdqa	%xmm0, %xmm1
    00005163: 	psrldq	$0x8, %xmm1
    00005168: 	paddd	%xmm1, %xmm0
    0000516c: 	movdqa	%xmm0, %xmm1
    00005170: 	movzbl	%dl, %edx
    00005173: 	psrldq	$0x4, %xmm1
    00005178: 	imull	$0x1f40, %edx, %edx
    0000517e: 	paddd	%xmm1, %xmm0
    00005182: 	movd	%xmm0, %eax
    00005186: 	cmpl	%eax, %edx
    00005188: 	je	.Ltmp6376 # Offset: 20872
    0000518a: 	movl	current_test(%rip), %edx
    00005190: 	leaq	DATAat0x571d0(%rip), %rsi
    00005197: 	movl	$0x1, %edi
    0000519c: 	xorl	%eax, %eax
    0000519e: 	callq	__printf_chk@PLT # Offset: 20894
    000051a3: 	movl	iterations(%rip), %ecx
.Ltmp6376:
    000051a9: 	addl	$0x1, 0x1c(%rsp)
    000051ae: 	movl	0x1c(%rsp), %eax
    000051b2: 	cmpl	%ecx, %eax
    000051b4: 	jl	.Ltmp6377 # Offset: 20916
.Ltmp6374:
    000051ba: 	movq	%r12, %rsi
    000051bd: 	movq	%r15, %rdi
    000051c0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 20928
    000051c5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000051cc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000051d3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000051da: 	je	.Ltmp6378 # Offset: 20954
.Ltmp6424:
    000051e0: 	movq	-0x20(%rax), %rdi
    000051e4: 	movq	%rdi, (%rsp)
    000051e8: 	callq	clock@PLT # Offset: 20968
    000051ed: 	movq	(%rsp), %rdi
    000051f1: 	pxor	%xmm0, %xmm0
    000051f5: 	movq	%rax, end_time(%rip)
    000051fc: 	subq	start_time(%rip), %rax
    00005203: 	cvtsi2sd	%rax, %xmm0
    00005208: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00005210: 	callq	_Z13record_resultdPKc # Offset: 21008
    00005215: 	movq	0xa0(%rsp), %rdi
    0000521d: 	cmpq	%r13, %rdi
    00005220: 	je	.Ltmp6379 # Offset: 21024
    00005222: 	movq	0xb0(%rsp), %rax
    0000522a: 	leaq	0x1(%rax), %rsi
    0000522e: 	callq	_ZdlPvm@PLT # Offset: 21038
.Ltmp6379:
    00005233: 	leaq	DATAat0x578e9(%rip), %rdx
    0000523a: 	movq	%r14, %rsi
    0000523d: 	movq	%r12, %rdi
    00005240: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21056
    00005245: 	movq	%r12, %rcx
    00005248: 	movl	$0x100, %edx
    0000524d: 	movl	$0x1f40, %esi
    00005252: 	movq	%rbp, %rdi
    00005255: 	callq	_Z14test_variable1Ij25custom_remainder_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 21077
    0000525a: 	movq	0xa0(%rsp), %rdi
    00005262: 	cmpq	%r13, %rdi
    00005265: 	je	.Ltmp6380 # Offset: 21093
    00005267: 	movq	0xb0(%rsp), %rax
    0000526f: 	leaq	0x1(%rax), %rsi
    00005273: 	callq	_ZdlPvm@PLT # Offset: 21107
.Ltmp6380:
    00005278: 	leaq	DATAat0x57904(%rip), %rdx
    0000527f: 	movq	%r14, %rsi
    00005282: 	movq	%r12, %rdi
    00005285: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21125
    0000528a: 	callq	clock@PLT # Offset: 21130
    0000528f: 	movl	iterations(%rip), %ecx
    00005295: 	movq	%rax, start_time(%rip)
    0000529c: 	testl	%ecx, %ecx
    0000529e: 	jle	.Ltmp6381 # Offset: 21150
    000052a4: 	movdqa	DATAat0x57ce0(%rip), %xmm7
    000052ac: 	movl	$0x0, 0x1c(%rsp)
    000052b4: 	movaps	%xmm7, (%rsp)
    000052b8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp6384:
    000052c0: 	movq	%rbp, %rax
    000052c3: 	pxor	%xmm0, %xmm0
    000052c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6382:
    000052d0: 	movdqa	(%rsp), %xmm1
    000052d5: 	pand	(%rax), %xmm1
    000052d9: 	addq	$0x10, %rax
    000052dd: 	paddd	%xmm1, %xmm0
    000052e1: 	cmpq	%rax, %rbx
    000052e4: 	jne	.Ltmp6382 # Offset: 21220
    000052e6: 	cvttsd2si	init_value(%rip), %rdx
    000052ef: 	movdqa	%xmm0, %xmm1
    000052f3: 	psrldq	$0x8, %xmm1
    000052f8: 	paddd	%xmm1, %xmm0
    000052fc: 	movdqa	%xmm0, %xmm1
    00005300: 	movzbl	%dl, %edx
    00005303: 	psrldq	$0x4, %xmm1
    00005308: 	imull	$0x1f40, %edx, %edx
    0000530e: 	paddd	%xmm1, %xmm0
    00005312: 	movd	%xmm0, %eax
    00005316: 	cmpl	%eax, %edx
    00005318: 	je	.Ltmp6383 # Offset: 21272
    0000531a: 	movl	current_test(%rip), %edx
    00005320: 	leaq	DATAat0x571d0(%rip), %rsi
    00005327: 	movl	$0x1, %edi
    0000532c: 	xorl	%eax, %eax
    0000532e: 	callq	__printf_chk@PLT # Offset: 21294
    00005333: 	movl	iterations(%rip), %ecx
.Ltmp6383:
    00005339: 	addl	$0x1, 0x1c(%rsp)
    0000533e: 	movl	0x1c(%rsp), %eax
    00005342: 	cmpl	%ecx, %eax
    00005344: 	jl	.Ltmp6384 # Offset: 21316
.Ltmp6381:
    0000534a: 	movq	%r12, %rsi
    0000534d: 	movq	%r15, %rdi
    00005350: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 21328
    00005355: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000535c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005363: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000536a: 	je	.Ltmp6385 # Offset: 21354
.Ltmp6423:
    00005370: 	movq	-0x20(%rax), %rdi
    00005374: 	movq	%rdi, (%rsp)
    00005378: 	callq	clock@PLT # Offset: 21368
    0000537d: 	movq	(%rsp), %rdi
    00005381: 	pxor	%xmm0, %xmm0
    00005385: 	movq	%rax, end_time(%rip)
    0000538c: 	subq	start_time(%rip), %rax
    00005393: 	cvtsi2sd	%rax, %xmm0
    00005398: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000053a0: 	callq	_Z13record_resultdPKc # Offset: 21408
    000053a5: 	movq	0xa0(%rsp), %rdi
    000053ad: 	cmpq	%r13, %rdi
    000053b0: 	je	.Ltmp6386 # Offset: 21424
    000053b2: 	movq	0xb0(%rsp), %rax
    000053ba: 	leaq	0x1(%rax), %rsi
    000053be: 	callq	_ZdlPvm@PLT # Offset: 21438
.Ltmp6386:
    000053c3: 	leaq	DATAat0x5791f(%rip), %rdx
    000053ca: 	movq	%r14, %rsi
    000053cd: 	movq	%r12, %rdi
    000053d0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21456
    000053d5: 	callq	clock@PLT # Offset: 21461
    000053da: 	movl	iterations(%rip), %ecx
    000053e0: 	movq	%rax, start_time(%rip)
    000053e7: 	testl	%ecx, %ecx
    000053e9: 	jle	.Ltmp6387 # Offset: 21481
    000053ef: 	movdqa	DATAat0x57c20(%rip), %xmm3
    000053f7: 	movl	$0x0, 0x1c(%rsp)
    000053ff: 	movaps	%xmm3, (%rsp)
    00005403: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6390:
    00005408: 	movq	%rbp, %rax
    0000540b: 	pxor	%xmm0, %xmm0
    0000540f: 	nop # Size: 1
.Ltmp6388:
    00005410: 	movdqa	(%rsp), %xmm1
    00005415: 	pand	(%rax), %xmm1
    00005419: 	addq	$0x10, %rax
    0000541d: 	paddd	%xmm1, %xmm0
    00005421: 	cmpq	%rbx, %rax
    00005424: 	jne	.Ltmp6388 # Offset: 21540
    00005426: 	cvttsd2si	init_value(%rip), %rdx
    0000542f: 	movdqa	%xmm0, %xmm1
    00005433: 	psrldq	$0x8, %xmm1
    00005438: 	paddd	%xmm1, %xmm0
    0000543c: 	movdqa	%xmm0, %xmm1
    00005440: 	andl	$0x3ff, %edx
    00005446: 	psrldq	$0x4, %xmm1
    0000544b: 	imull	$0x1f40, %edx, %edx
    00005451: 	paddd	%xmm1, %xmm0
    00005455: 	movd	%xmm0, %eax
    00005459: 	cmpl	%eax, %edx
    0000545b: 	je	.Ltmp6389 # Offset: 21595
    0000545d: 	movl	current_test(%rip), %edx
    00005463: 	leaq	DATAat0x571d0(%rip), %rsi
    0000546a: 	movl	$0x1, %edi
    0000546f: 	xorl	%eax, %eax
    00005471: 	callq	__printf_chk@PLT # Offset: 21617
    00005476: 	movl	iterations(%rip), %ecx
.Ltmp6389:
    0000547c: 	addl	$0x1, 0x1c(%rsp)
    00005481: 	movl	0x1c(%rsp), %eax
    00005485: 	cmpl	%ecx, %eax
    00005487: 	jl	.Ltmp6390 # Offset: 21639
.Ltmp6387:
    0000548d: 	movq	%r12, %rsi
    00005490: 	movq	%r15, %rdi
    00005493: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 21651
    00005498: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000549f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000054a6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000054ad: 	je	.Ltmp6391 # Offset: 21677
.Ltmp6422:
    000054b3: 	movq	-0x20(%rax), %rdi
    000054b7: 	movq	%rdi, (%rsp)
    000054bb: 	callq	clock@PLT # Offset: 21691
    000054c0: 	movq	(%rsp), %rdi
    000054c4: 	pxor	%xmm0, %xmm0
    000054c8: 	movq	%rax, end_time(%rip)
    000054cf: 	subq	start_time(%rip), %rax
    000054d6: 	cvtsi2sd	%rax, %xmm0
    000054db: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000054e3: 	callq	_Z13record_resultdPKc # Offset: 21731
    000054e8: 	movq	0xa0(%rsp), %rdi
    000054f0: 	cmpq	%r13, %rdi
    000054f3: 	je	.Ltmp6392 # Offset: 21747
    000054f5: 	movq	0xb0(%rsp), %rax
    000054fd: 	leaq	0x1(%rax), %rsi
    00005501: 	callq	_ZdlPvm@PLT # Offset: 21761
.Ltmp6392:
    00005506: 	leaq	DATAat0x57929(%rip), %rdx
    0000550d: 	movq	%r14, %rsi
    00005510: 	movq	%r12, %rdi
    00005513: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21779
    00005518: 	callq	clock@PLT # Offset: 21784
    0000551d: 	movl	iterations(%rip), %ecx
    00005523: 	movq	%rax, start_time(%rip)
    0000552a: 	testl	%ecx, %ecx
    0000552c: 	jle	.Ltmp6393 # Offset: 21804
    00005532: 	movdqa	DATAat0x57c20(%rip), %xmm4
    0000553a: 	movl	$0x0, 0x1c(%rsp)
    00005542: 	movaps	%xmm4, (%rsp)
    00005546: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp6396:
    00005550: 	movq	%rbp, %rax
    00005553: 	pxor	%xmm0, %xmm0
    00005557: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6394:
    00005560: 	movdqa	(%rsp), %xmm1
    00005565: 	pand	(%rax), %xmm1
    00005569: 	addq	$0x10, %rax
    0000556d: 	paddd	%xmm1, %xmm0
    00005571: 	cmpq	%rax, %rbx
    00005574: 	jne	.Ltmp6394 # Offset: 21876
    00005576: 	cvttsd2si	init_value(%rip), %rdx
    0000557f: 	movdqa	%xmm0, %xmm1
    00005583: 	psrldq	$0x8, %xmm1
    00005588: 	paddd	%xmm1, %xmm0
    0000558c: 	movdqa	%xmm0, %xmm1
    00005590: 	andl	$0x3ff, %edx
    00005596: 	psrldq	$0x4, %xmm1
    0000559b: 	imull	$0x1f40, %edx, %edx
    000055a1: 	paddd	%xmm1, %xmm0
    000055a5: 	movd	%xmm0, %eax
    000055a9: 	cmpl	%eax, %edx
    000055ab: 	je	.Ltmp6395 # Offset: 21931
    000055ad: 	movl	current_test(%rip), %edx
    000055b3: 	leaq	DATAat0x571d0(%rip), %rsi
    000055ba: 	movl	$0x1, %edi
    000055bf: 	xorl	%eax, %eax
    000055c1: 	callq	__printf_chk@PLT # Offset: 21953
    000055c6: 	movl	iterations(%rip), %ecx
.Ltmp6395:
    000055cc: 	addl	$0x1, 0x1c(%rsp)
    000055d1: 	movl	0x1c(%rsp), %eax
    000055d5: 	cmpl	%ecx, %eax
    000055d7: 	jl	.Ltmp6396 # Offset: 21975
.Ltmp6393:
    000055dd: 	movq	%r12, %rsi
    000055e0: 	movq	%r15, %rdi
    000055e3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 21987
    000055e8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000055ef: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000055f6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000055fd: 	je	.Ltmp6397 # Offset: 22013
.Ltmp6421:
    00005603: 	movq	-0x20(%rax), %rdi
    00005607: 	movq	%rdi, (%rsp)
    0000560b: 	callq	clock@PLT # Offset: 22027
    00005610: 	movq	(%rsp), %rdi
    00005614: 	pxor	%xmm0, %xmm0
    00005618: 	movq	%rax, end_time(%rip)
    0000561f: 	subq	start_time(%rip), %rax
    00005626: 	cvtsi2sd	%rax, %xmm0
    0000562b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00005633: 	callq	_Z13record_resultdPKc # Offset: 22067
    00005638: 	movq	0xa0(%rsp), %rdi
    00005640: 	cmpq	%r13, %rdi
    00005643: 	je	.Ltmp6398 # Offset: 22083
    00005645: 	movq	0xb0(%rsp), %rax
    0000564d: 	leaq	0x1(%rax), %rsi
    00005651: 	callq	_ZdlPvm@PLT # Offset: 22097
.Ltmp6398:
    00005656: 	leaq	DATAat0x5793d(%rip), %rdx
    0000565d: 	movq	%r14, %rsi
    00005660: 	movq	%r12, %rdi
    00005663: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22115
    00005668: 	movq	%r12, %rdx
    0000566b: 	movl	$0x1f40, %esi
    00005670: 	movq	%rbp, %rdi
    00005673: 	callq	_Z13test_constantIj14and_remainder2IjLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 22131
    00005678: 	movq	0xa0(%rsp), %rdi
    00005680: 	cmpq	%r13, %rdi
    00005683: 	je	.Ltmp6399 # Offset: 22147
    00005685: 	movq	0xb0(%rsp), %rax
    0000568d: 	leaq	0x1(%rax), %rsi
    00005691: 	callq	_ZdlPvm@PLT # Offset: 22161
.Ltmp6399:
    00005696: 	leaq	DATAat0x57952(%rip), %rdx
    0000569d: 	movq	%r14, %rsi
    000056a0: 	movq	%r12, %rdi
    000056a3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22179
    000056a8: 	callq	clock@PLT # Offset: 22184
    000056ad: 	movl	iterations(%rip), %ecx
    000056b3: 	movq	%rax, start_time(%rip)
    000056ba: 	testl	%ecx, %ecx
    000056bc: 	jle	.Ltmp6400 # Offset: 22204
    000056c2: 	movdqa	DATAat0x57c20(%rip), %xmm5
    000056ca: 	movl	$0x0, 0x1c(%rsp)
    000056d2: 	movaps	%xmm5, (%rsp)
    000056d6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp6403:
    000056e0: 	movq	%rbp, %rax
    000056e3: 	pxor	%xmm0, %xmm0
    000056e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6401:
    000056f0: 	movdqa	(%rsp), %xmm1
    000056f5: 	pand	(%rax), %xmm1
    000056f9: 	addq	$0x10, %rax
    000056fd: 	paddd	%xmm1, %xmm0
    00005701: 	cmpq	%rbx, %rax
    00005704: 	jne	.Ltmp6401 # Offset: 22276
    00005706: 	cvttsd2si	init_value(%rip), %rdx
    0000570f: 	movdqa	%xmm0, %xmm1
    00005713: 	psrldq	$0x8, %xmm1
    00005718: 	paddd	%xmm1, %xmm0
    0000571c: 	movdqa	%xmm0, %xmm1
    00005720: 	andl	$0x3ff, %edx
    00005726: 	psrldq	$0x4, %xmm1
    0000572b: 	imull	$0x1f40, %edx, %edx
    00005731: 	paddd	%xmm1, %xmm0
    00005735: 	movd	%xmm0, %eax
    00005739: 	cmpl	%eax, %edx
    0000573b: 	je	.Ltmp6402 # Offset: 22331
    0000573d: 	movl	current_test(%rip), %edx
    00005743: 	leaq	DATAat0x571d0(%rip), %rsi
    0000574a: 	movl	$0x1, %edi
    0000574f: 	xorl	%eax, %eax
    00005751: 	callq	__printf_chk@PLT # Offset: 22353
    00005756: 	movl	iterations(%rip), %ecx
.Ltmp6402:
    0000575c: 	addl	$0x1, 0x1c(%rsp)
    00005761: 	movl	0x1c(%rsp), %eax
    00005765: 	cmpl	%ecx, %eax
    00005767: 	jl	.Ltmp6403 # Offset: 22375
.Ltmp6400:
    0000576d: 	movq	%r12, %rsi
    00005770: 	movq	%r15, %rdi
    00005773: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 22387
    00005778: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000577f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005786: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000578d: 	je	.Ltmp6404 # Offset: 22413
.Ltmp6420:
    00005793: 	movq	-0x20(%rax), %rdi
    00005797: 	movq	%rdi, (%rsp)
    0000579b: 	callq	clock@PLT # Offset: 22427
    000057a0: 	movq	(%rsp), %rdi
    000057a4: 	pxor	%xmm0, %xmm0
    000057a8: 	movq	%rax, end_time(%rip)
    000057af: 	subq	start_time(%rip), %rax
    000057b6: 	cvtsi2sd	%rax, %xmm0
    000057bb: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000057c3: 	callq	_Z13record_resultdPKc # Offset: 22467
    000057c8: 	movq	0xa0(%rsp), %rdi
    000057d0: 	cmpq	%r13, %rdi
    000057d3: 	je	.Ltmp6405 # Offset: 22483
    000057d5: 	movq	0xb0(%rsp), %rax
    000057dd: 	leaq	0x1(%rax), %rsi
    000057e1: 	callq	_ZdlPvm@PLT # Offset: 22497
.Ltmp6405:
    000057e6: 	leaq	DATAat0x5796c(%rip), %rdx
    000057ed: 	movq	%r14, %rsi
    000057f0: 	movq	%r12, %rdi
    000057f3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22515
    000057f8: 	movq	%r12, %rcx
    000057fb: 	movl	$0x400, %edx
    00005800: 	movl	$0x1f40, %esi
    00005805: 	movq	%rbp, %rdi
    00005808: 	callq	_Z14test_variable1Ij25custom_remainder_variableIjEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 22536
    0000580d: 	movq	0xa0(%rsp), %rdi
    00005815: 	cmpq	%r13, %rdi
    00005818: 	je	.Ltmp6406 # Offset: 22552
    0000581a: 	movq	0xb0(%rsp), %rax
    00005822: 	leaq	0x1(%rax), %rsi
    00005826: 	callq	_ZdlPvm@PLT # Offset: 22566
.Ltmp6406:
    0000582b: 	leaq	DATAat0x57988(%rip), %rdx
    00005832: 	movq	%r14, %rsi
    00005835: 	movq	%r12, %rdi
    00005838: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22584
    0000583d: 	callq	clock@PLT # Offset: 22589
    00005842: 	movl	iterations(%rip), %ecx
    00005848: 	movq	%rax, start_time(%rip)
    0000584f: 	testl	%ecx, %ecx
    00005851: 	jle	.Ltmp6407 # Offset: 22609
    00005857: 	movdqa	DATAat0x57c20(%rip), %xmm6
    0000585f: 	movl	$0x0, 0x1c(%rsp)
    00005867: 	movaps	%xmm6, (%rsp)
    0000586b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6410:
    00005870: 	movq	%rbp, %rax
    00005873: 	pxor	%xmm0, %xmm0
    00005877: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6408:
    00005880: 	movdqa	(%rsp), %xmm1
    00005885: 	pand	(%rax), %xmm1
    00005889: 	addq	$0x10, %rax
    0000588d: 	paddd	%xmm1, %xmm0
    00005891: 	cmpq	%rbx, %rax
    00005894: 	jne	.Ltmp6408 # Offset: 22676
    00005896: 	cvttsd2si	init_value(%rip), %rdx
    0000589f: 	movdqa	%xmm0, %xmm1
    000058a3: 	psrldq	$0x8, %xmm1
    000058a8: 	paddd	%xmm1, %xmm0
    000058ac: 	movdqa	%xmm0, %xmm1
    000058b0: 	andl	$0x3ff, %edx
    000058b6: 	psrldq	$0x4, %xmm1
    000058bb: 	imull	$0x1f40, %edx, %edx
    000058c1: 	paddd	%xmm1, %xmm0
    000058c5: 	movd	%xmm0, %eax
    000058c9: 	cmpl	%eax, %edx
    000058cb: 	je	.Ltmp6409 # Offset: 22731
    000058cd: 	movl	current_test(%rip), %edx
    000058d3: 	leaq	DATAat0x571d0(%rip), %rsi
    000058da: 	movl	$0x1, %edi
    000058df: 	xorl	%eax, %eax
    000058e1: 	callq	__printf_chk@PLT # Offset: 22753
    000058e6: 	movl	iterations(%rip), %ecx
.Ltmp6409:
    000058ec: 	addl	$0x1, 0x1c(%rsp)
    000058f1: 	movl	0x1c(%rsp), %eax
    000058f5: 	cmpl	%ecx, %eax
    000058f7: 	jl	.Ltmp6410 # Offset: 22775
.Ltmp6407:
    000058fd: 	movq	%r12, %rsi
    00005900: 	movq	%r15, %rdi
    00005903: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 22787
    00005908: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000590f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005916: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000591d: 	je	.Ltmp6411 # Offset: 22813
.Ltmp6419:
    00005923: 	movq	-0x20(%rax), %rbp
    00005927: 	callq	clock@PLT # Offset: 22823
    0000592c: 	pxor	%xmm0, %xmm0
    00005930: 	movq	%rax, end_time(%rip)
    00005937: 	movq	%rbp, %rdi
    0000593a: 	subq	start_time(%rip), %rax
    00005941: 	cvtsi2sd	%rax, %xmm0
    00005946: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000594e: 	callq	_Z13record_resultdPKc # Offset: 22862
    00005953: 	movq	0xa0(%rsp), %rdi
    0000595b: 	cmpq	%r13, %rdi
    0000595e: 	je	.Ltmp6412 # Offset: 22878
    00005960: 	movq	0xb0(%rsp), %rax
    00005968: 	leaq	0x1(%rax), %rsi
    0000596c: 	callq	_ZdlPvm@PLT # Offset: 22892
.Ltmp6412:
    00005971: 	leaq	DATAat0x579a4(%rip), %rdx
    00005978: 	movq	%r14, %rsi
    0000597b: 	movq	%r12, %rdi
    0000597e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22910
    00005983: 	movl	iterations(%rip), %edx
    00005989: 	xorl	%r8d, %r8d
    0000598c: 	xorl	%ecx, %ecx
    0000598e: 	movl	$0x1f40, %esi
    00005993: 	movq	0xa0(%rsp), %rdi
    0000599b: 	callq	_Z9summarizePKciiii # Offset: 22939
    000059a0: 	movq	0xa0(%rsp), %rdi
    000059a8: 	cmpq	%r13, %rdi
    000059ab: 	je	.Ltmp6413 # Offset: 22955
    000059ad: 	movq	0xb0(%rsp), %rax
    000059b5: 	leaq	0x1(%rax), %rsi
    000059b9: 	callq	_ZdlPvm@PLT # Offset: 22969
.Ltmp6413:
    000059be: 	movq	0x80(%rsp), %rdi
    000059c6: 	leaq	0x90(%rsp), %rax
    000059ce: 	cmpq	%rax, %rdi
    000059d1: 	je	.Ltmp6414 # Offset: 22993
    000059d3: 	movq	0x90(%rsp), %rax
    000059db: 	leaq	0x1(%rax), %rsi
    000059df: 	callq	_ZdlPvm@PLT # Offset: 23007
.Ltmp6414:
    000059e4: 	movq	0x60(%rsp), %rdi
    000059e9: 	leaq	0x70(%rsp), %rax
    000059ee: 	cmpq	%rax, %rdi
    000059f1: 	je	.Ltmp6415 # Offset: 23025
    000059f3: 	movq	0x70(%rsp), %rax
    000059f8: 	leaq	0x1(%rax), %rsi
    000059fc: 	callq	_ZdlPvm@PLT # Offset: 23036
.Ltmp6415:
    00005a01: 	movq	0x40(%rsp), %rdi
    00005a06: 	leaq	0x50(%rsp), %rax
    00005a0b: 	cmpq	%rax, %rdi
    00005a0e: 	je	.Ltmp6416 # Offset: 23054
    00005a10: 	movq	0x50(%rsp), %rax
    00005a15: 	leaq	0x1(%rax), %rsi
    00005a19: 	callq	_ZdlPvm@PLT # Offset: 23065
.Ltmp6416:
    00005a1e: 	movq	0x7dc8(%rsp), %rax
    00005a26: 	subq	%fs:0x28, %rax
    00005a2f: 	jne	.Ltmp6417 # Offset: 23087
    00005a35: 	addq	$0x7dd8, %rsp
    00005a3c: 	popq	%rbx
    00005a3d: 	popq	%rbp
    00005a3e: 	popq	%r12
    00005a40: 	popq	%r13
    00005a42: 	popq	%r14
    00005a44: 	popq	%r15
    00005a46: 	retq # Offset: 23110
.Ltmp6010:
    00005a47: 	movq	-0x8(%rdx), %rax
    00005a4b: 	addq	$0x200, %rax
    00005a51: 	jmp	.Ltmp6418 # Offset: 23121
.Ltmp6411:
    00005a56: 	movq	-0x8(%rdx), %rax
    00005a5a: 	addq	$0x200, %rax
    00005a60: 	jmp	.Ltmp6419 # Offset: 23136
.Ltmp6404:
    00005a65: 	movq	-0x8(%rdx), %rax
    00005a69: 	addq	$0x200, %rax
    00005a6f: 	jmp	.Ltmp6420 # Offset: 23151
.Ltmp6397:
    00005a74: 	movq	-0x8(%rdx), %rax
    00005a78: 	addq	$0x200, %rax
    00005a7e: 	jmp	.Ltmp6421 # Offset: 23166
.Ltmp6391:
    00005a83: 	movq	-0x8(%rdx), %rax
    00005a87: 	addq	$0x200, %rax
    00005a8d: 	jmp	.Ltmp6422 # Offset: 23181
.Ltmp6385:
    00005a92: 	movq	-0x8(%rdx), %rax
    00005a96: 	addq	$0x200, %rax
    00005a9c: 	jmp	.Ltmp6423 # Offset: 23196
.Ltmp6378:
    00005aa1: 	movq	-0x8(%rdx), %rax
    00005aa5: 	addq	$0x200, %rax
    00005aab: 	jmp	.Ltmp6424 # Offset: 23211
.Ltmp6372:
    00005ab0: 	movq	-0x8(%rdx), %rax
    00005ab4: 	addq	$0x200, %rax
    00005aba: 	jmp	.Ltmp6425 # Offset: 23226
.Ltmp6366:
    00005abf: 	movq	-0x8(%rdx), %rax
    00005ac3: 	addq	$0x200, %rax
    00005ac9: 	jmp	.Ltmp6426 # Offset: 23241
.Ltmp6359:
    00005ace: 	movq	-0x8(%rdx), %rax
    00005ad2: 	addq	$0x200, %rax
    00005ad8: 	jmp	.Ltmp6427 # Offset: 23256
.Ltmp6352:
    00005add: 	movq	-0x8(%rdx), %rax
    00005ae1: 	addq	$0x200, %rax
    00005ae7: 	jmp	.Ltmp6428 # Offset: 23271
.Ltmp6346:
    00005aec: 	movq	-0x8(%rdx), %rax
    00005af0: 	addq	$0x200, %rax
    00005af6: 	jmp	.Ltmp6429 # Offset: 23286
.Ltmp6339:
    00005afb: 	movq	-0x8(%rdx), %rax
    00005aff: 	addq	$0x200, %rax
    00005b05: 	jmp	.Ltmp6430 # Offset: 23301
.Ltmp6333:
    00005b0a: 	movq	-0x8(%rdx), %rax
    00005b0e: 	addq	$0x200, %rax
    00005b14: 	jmp	.Ltmp6431 # Offset: 23316
.Ltmp6326:
    00005b19: 	movq	-0x8(%rdx), %rax
    00005b1d: 	addq	$0x200, %rax
    00005b23: 	jmp	.Ltmp6432 # Offset: 23331
.Ltmp6320:
    00005b28: 	movq	-0x8(%rdx), %rax
    00005b2c: 	addq	$0x200, %rax
    00005b32: 	jmp	.Ltmp6433 # Offset: 23346
.Ltmp6314:
    00005b37: 	movq	-0x8(%rdx), %rax
    00005b3b: 	addq	$0x200, %rax
    00005b41: 	jmp	.Ltmp6434 # Offset: 23361
.Ltmp6308:
    00005b46: 	movq	-0x8(%rdx), %rax
    00005b4a: 	addq	$0x200, %rax
    00005b50: 	jmp	.Ltmp6435 # Offset: 23376
.Ltmp6302:
    00005b55: 	movq	-0x8(%rdx), %rax
    00005b59: 	addq	$0x200, %rax
    00005b5f: 	jmp	.Ltmp6436 # Offset: 23391
.Ltmp6295:
    00005b64: 	movq	-0x8(%rdx), %rax
    00005b68: 	addq	$0x200, %rax
    00005b6e: 	jmp	.Ltmp6437 # Offset: 23406
.Ltmp6289:
    00005b73: 	movq	-0x8(%rdx), %rax
    00005b77: 	addq	$0x200, %rax
    00005b7d: 	jmp	.Ltmp6438 # Offset: 23421
.Ltmp6283:
    00005b82: 	movq	-0x8(%rdx), %rax
    00005b86: 	addq	$0x200, %rax
    00005b8c: 	jmp	.Ltmp6439 # Offset: 23436
.Ltmp6277:
    00005b91: 	movq	-0x8(%rdx), %rax
    00005b95: 	addq	$0x200, %rax
    00005b9b: 	jmp	.Ltmp6440 # Offset: 23451
.Ltmp6271:
    00005ba0: 	movq	-0x8(%rdx), %rax
    00005ba4: 	addq	$0x200, %rax
    00005baa: 	jmp	.Ltmp6441 # Offset: 23466
.Ltmp6264:
    00005baf: 	movq	-0x8(%rdx), %rax
    00005bb3: 	addq	$0x200, %rax
    00005bb9: 	jmp	.Ltmp6442 # Offset: 23481
.Ltmp6258:
    00005bbe: 	movq	-0x8(%rdx), %rax
    00005bc2: 	addq	$0x200, %rax
    00005bc8: 	jmp	.Ltmp6443 # Offset: 23496
.Ltmp6252:
    00005bcd: 	movq	-0x8(%rdx), %rax
    00005bd1: 	addq	$0x200, %rax
    00005bd7: 	jmp	.Ltmp6444 # Offset: 23511
.Ltmp6246:
    00005bdc: 	movq	-0x8(%rdx), %rax
    00005be0: 	addq	$0x200, %rax
    00005be6: 	jmp	.Ltmp6445 # Offset: 23526
.Ltmp6240:
    00005beb: 	movq	-0x8(%rdx), %rax
    00005bef: 	addq	$0x200, %rax
    00005bf5: 	jmp	.Ltmp6446 # Offset: 23541
.Ltmp6233:
    00005bfa: 	movq	-0x8(%rdx), %rax
    00005bfe: 	addq	$0x200, %rax
    00005c04: 	jmp	.Ltmp6447 # Offset: 23556
.Ltmp6227:
    00005c09: 	movq	-0x8(%rdx), %rax
    00005c0d: 	addq	$0x200, %rax
    00005c13: 	jmp	.Ltmp6448 # Offset: 23571
.Ltmp6221:
    00005c18: 	movq	-0x8(%rdx), %rax
    00005c1c: 	addq	$0x200, %rax
    00005c22: 	jmp	.Ltmp6449 # Offset: 23586
.Ltmp6215:
    00005c27: 	movq	-0x8(%rdx), %rax
    00005c2b: 	addq	$0x200, %rax
    00005c31: 	jmp	.Ltmp6450 # Offset: 23601
.Ltmp6207:
    00005c36: 	movq	-0x8(%rdx), %rax
    00005c3a: 	addq	$0x200, %rax
    00005c40: 	jmp	.Ltmp6451 # Offset: 23616
.Ltmp6201:
    00005c45: 	movq	-0x8(%rdx), %rax
    00005c49: 	addq	$0x200, %rax
    00005c4f: 	jmp	.Ltmp6452 # Offset: 23631
.Ltmp6195:
    00005c54: 	movq	-0x8(%rdx), %rax
    00005c58: 	addq	$0x200, %rax
    00005c5e: 	jmp	.Ltmp6453 # Offset: 23646
.Ltmp6189:
    00005c63: 	movq	-0x8(%rdx), %rax
    00005c67: 	addq	$0x200, %rax
    00005c6d: 	jmp	.Ltmp6454 # Offset: 23661
.Ltmp6183:
    00005c72: 	movq	-0x8(%rdx), %rax
    00005c76: 	addq	$0x200, %rax
    00005c7c: 	jmp	.Ltmp6455 # Offset: 23676
.Ltmp6176:
    00005c81: 	movq	-0x8(%rdx), %rax
    00005c85: 	addq	$0x200, %rax
    00005c8b: 	jmp	.Ltmp6456 # Offset: 23691
.Ltmp6169:
    00005c90: 	movq	-0x8(%rdx), %rax
    00005c94: 	addq	$0x200, %rax
    00005c9a: 	jmp	.Ltmp6457 # Offset: 23706
.Ltmp6163:
    00005c9f: 	movq	-0x8(%rdx), %rax
    00005ca3: 	addq	$0x200, %rax
    00005ca9: 	jmp	.Ltmp6458 # Offset: 23721
.Ltmp6157:
    00005cae: 	movq	-0x8(%rdx), %rax
    00005cb2: 	addq	$0x200, %rax
    00005cb8: 	jmp	.Ltmp6459 # Offset: 23736
.Ltmp6150:
    00005cbd: 	movq	-0x8(%rdx), %rax
    00005cc1: 	addq	$0x200, %rax
    00005cc7: 	jmp	.Ltmp6460 # Offset: 23751
.Ltmp6143:
    00005ccc: 	movq	-0x8(%rdx), %rax
    00005cd0: 	addq	$0x200, %rax
    00005cd6: 	jmp	.Ltmp6461 # Offset: 23766
.Ltmp6135:
    00005cdb: 	movq	-0x8(%rdx), %rax
    00005cdf: 	addq	$0x200, %rax
    00005ce5: 	jmp	.Ltmp6462 # Offset: 23781
.Ltmp6129:
    00005cea: 	movq	-0x8(%rdx), %rax
    00005cee: 	addq	$0x200, %rax
    00005cf4: 	jmp	.Ltmp6463 # Offset: 23796
.Ltmp6120:
    00005cf9: 	movq	-0x8(%rdx), %rax
    00005cfd: 	addq	$0x200, %rax
    00005d03: 	jmp	.Ltmp6464 # Offset: 23811
.Ltmp6114:
    00005d08: 	movq	-0x8(%rdx), %rax
    00005d0c: 	addq	$0x200, %rax
    00005d12: 	jmp	.Ltmp6465 # Offset: 23826
.Ltmp6107:
    00005d17: 	movq	-0x8(%rdx), %rax
    00005d1b: 	addq	$0x200, %rax
    00005d21: 	jmp	.Ltmp6466 # Offset: 23841
.Ltmp6100:
    00005d26: 	movq	-0x8(%rdx), %rax
    00005d2a: 	addq	$0x200, %rax
    00005d30: 	jmp	.Ltmp6467 # Offset: 23856
.Ltmp6093:
    00005d35: 	movq	-0x8(%rdx), %rax
    00005d39: 	addq	$0x200, %rax
    00005d3f: 	jmp	.Ltmp6468 # Offset: 23871
.Ltmp6086:
    00005d44: 	movq	-0x8(%rdx), %rax
    00005d48: 	addq	$0x200, %rax
    00005d4e: 	jmp	.Ltmp6469 # Offset: 23886
.Ltmp6080:
    00005d53: 	movq	-0x8(%rdx), %rax
    00005d57: 	addq	$0x200, %rax
    00005d5d: 	jmp	.Ltmp6470 # Offset: 23901
.Ltmp6074:
    00005d62: 	movq	-0x8(%rdx), %rax
    00005d66: 	addq	$0x200, %rax
    00005d6c: 	jmp	.Ltmp6471 # Offset: 23916
.Ltmp6066:
    00005d71: 	movq	-0x8(%rdx), %rax
    00005d75: 	addq	$0x200, %rax
    00005d7b: 	jmp	.Ltmp6472 # Offset: 23931
.Ltmp6058:
    00005d80: 	movq	-0x8(%rdx), %rax
    00005d84: 	addq	$0x200, %rax
    00005d8a: 	jmp	.Ltmp6473 # Offset: 23946
.Ltmp6051:
    00005d8f: 	movq	-0x8(%rdx), %rax
    00005d93: 	addq	$0x200, %rax
    00005d99: 	jmp	.Ltmp6474 # Offset: 23961
.Ltmp6044:
    00005d9e: 	movq	-0x8(%rdx), %rax
    00005da2: 	addq	$0x200, %rax
    00005da8: 	jmp	.Ltmp6475 # Offset: 23976
.Ltmp6038:
    00005dad: 	movq	-0x8(%rdx), %rax
    00005db1: 	addq	$0x200, %rax
    00005db7: 	jmp	.Ltmp6476 # Offset: 23991
.Ltmp6029:
    00005dbc: 	movq	-0x8(%rdx), %rax
    00005dc0: 	addq	$0x200, %rax
    00005dc6: 	jmp	.Ltmp6477 # Offset: 24006
.Ltmp6022:
    00005dcb: 	movq	-0x8(%rdx), %rax
    00005dcf: 	addq	$0x200, %rax
    00005dd5: 	jmp	.Ltmp6478 # Offset: 24021
.Ltmp6016:
    00005dda: 	movq	-0x8(%rdx), %rax
    00005dde: 	addq	$0x200, %rax
    00005de4: 	jmp	.Ltmp6479 # Offset: 24036
.Ltmp6417:
    00005de9: 	callq	__stack_chk_fail@PLT # Offset: 24041
    00005dee: 	endbr64
    00005df2: 	movq	%rax, %rbp
    00005df5: 	jmp	.Ltmp6480 # Offset: 24053
    00005df7: 	endbr64
.Ltmp6482:
    00005dfb: 	movq	%rax, %rbp
    00005dfe: 	jmp	.Ltmp6481 # Offset: 24062
    00005e00: 	endbr64
    00005e04: 	jmp	.Ltmp6482 # Offset: 24068
    00005e06: 	endbr64
    00005e0a: 	jmp	.Ltmp6482 # Offset: 24074
.Ltmp6533:
    00005e0c: 	movq	0xa0(%rsp), %rdi
    00005e14: 	cmpq	%r13, %rdi
    00005e17: 	je	.Ltmp6483 # Offset: 24087
    00005e19: 	movq	0xb0(%rsp), %rax
    00005e21: 	leaq	0x1(%rax), %rsi
    00005e25: 	callq	_ZdlPvm@PLT # Offset: 24101
.Ltmp6483:
    00005e2a: 	movq	0x60(%rsp), %rdi
    00005e2f: 	leaq	0x70(%rsp), %rax
    00005e34: 	cmpq	%rax, %rdi
    00005e37: 	jne	.Ltmp6484 # Offset: 24119
.Ltmp6516:
    00005e3d: 	movq	%rbx, %rbp
.Ltmp6480:
    00005e40: 	movq	0x40(%rsp), %rdi
    00005e45: 	leaq	0x50(%rsp), %rax
    00005e4a: 	cmpq	%rax, %rdi
    00005e4d: 	je	.Ltmp6485 # Offset: 24141
    00005e4f: 	movq	0x50(%rsp), %rax
    00005e54: 	leaq	0x1(%rax), %rsi
    00005e58: 	callq	_ZdlPvm@PLT # Offset: 24152
.Ltmp6485:
    00005e5d: 	movq	%rbp, %rdi
    00005e60: 	callq	_Unwind_Resume@PLT # Offset: 24160
    00005e65: 	endbr64
    00005e69: 	jmp	.Ltmp6482 # Offset: 24169
.Ltmp6481:
    00005e6b: 	movq	0xa0(%rsp), %rdi
    00005e73: 	cmpq	%r13, %rdi
    00005e76: 	je	.Ltmp6480 # Offset: 24182
    00005e78: 	movq	0xb0(%rsp), %rax
    00005e80: 	leaq	0x1(%rax), %rsi
    00005e84: 	callq	_ZdlPvm@PLT # Offset: 24196
    00005e89: 	jmp	.Ltmp6480 # Offset: 24201
    00005e8b: 	endbr64
    00005e8f: 	jmp	.Ltmp6482 # Offset: 24207
    00005e94: 	endbr64
    00005e98: 	movq	%rax, %rbx
    00005e9b: 	jmp	.Ltmp6486 # Offset: 24219
    00005e9d: 	endbr64
    00005ea1: 	movq	%rax, %rbx
    00005ea4: 	jmp	.Ltmp6487 # Offset: 24228
.Ltmp6486:
    00005ea6: 	movq	0xa0(%rsp), %rdi
    00005eae: 	cmpq	%r13, %rdi
    00005eb1: 	je	.Ltmp6488 # Offset: 24241
    00005eb3: 	movq	0xb0(%rsp), %rax
    00005ebb: 	leaq	0x1(%rax), %rsi
    00005ebf: 	callq	_ZdlPvm@PLT # Offset: 24255
.Ltmp6488:
    00005ec4: 	movq	0x80(%rsp), %rdi
    00005ecc: 	leaq	0x90(%rsp), %rax
    00005ed4: 	cmpq	%rax, %rdi
    00005ed7: 	je	.Ltmp6483 # Offset: 24279
    00005edd: 	movq	0x90(%rsp), %rax
    00005ee5: 	leaq	0x1(%rax), %rsi
    00005ee9: 	callq	_ZdlPvm@PLT # Offset: 24297
    00005eee: 	jmp	.Ltmp6483 # Offset: 24302
.Ltmp6487:
    00005ef3: 	movq	0xa0(%rsp), %rdi
    00005efb: 	cmpq	%r13, %rdi
    00005efe: 	je	.Ltmp6488 # Offset: 24318
    00005f00: 	movq	0xb0(%rsp), %rax
    00005f08: 	leaq	0x1(%rax), %rsi
    00005f0c: 	callq	_ZdlPvm@PLT # Offset: 24332
    00005f11: 	jmp	.Ltmp6488 # Offset: 24337
    00005f13: 	endbr64
    00005f17: 	movq	%rax, %rbx
    00005f1a: 	jmp	.Ltmp6489 # Offset: 24346
    00005f1c: 	endbr64
    00005f20: 	movq	%rax, %rbx
    00005f23: 	jmp	.Ltmp6490 # Offset: 24355
.Ltmp6489:
    00005f25: 	movq	0xa0(%rsp), %rdi
    00005f2d: 	cmpq	%r13, %rdi
    00005f30: 	je	.Ltmp6488 # Offset: 24368
    00005f32: 	movq	0xb0(%rsp), %rax
    00005f3a: 	leaq	0x1(%rax), %rsi
    00005f3e: 	callq	_ZdlPvm@PLT # Offset: 24382
    00005f43: 	jmp	.Ltmp6488 # Offset: 24387
.Ltmp6490:
    00005f48: 	movq	0xa0(%rsp), %rdi
    00005f50: 	cmpq	%r13, %rdi
    00005f53: 	je	.Ltmp6488 # Offset: 24403
    00005f59: 	movq	0xb0(%rsp), %rax
    00005f61: 	leaq	0x1(%rax), %rsi
    00005f65: 	callq	_ZdlPvm@PLT # Offset: 24421
    00005f6a: 	jmp	.Ltmp6488 # Offset: 24426
    00005f6f: 	endbr64
    00005f73: 	movq	%rax, %rbx
    00005f76: 	jmp	.Ltmp6491 # Offset: 24438
    00005f78: 	endbr64
    00005f7c: 	movq	%rax, %rbx
    00005f7f: 	jmp	.Ltmp6492 # Offset: 24447
.Ltmp6491:
    00005f81: 	movq	0xa0(%rsp), %rdi
    00005f89: 	cmpq	%r13, %rdi
    00005f8c: 	je	.Ltmp6488 # Offset: 24460
    00005f92: 	movq	0xb0(%rsp), %rax
    00005f9a: 	leaq	0x1(%rax), %rsi
    00005f9e: 	callq	_ZdlPvm@PLT # Offset: 24478
    00005fa3: 	jmp	.Ltmp6488 # Offset: 24483
.Ltmp6492:
    00005fa8: 	movq	0xa0(%rsp), %rdi
    00005fb0: 	cmpq	%r13, %rdi
    00005fb3: 	je	.Ltmp6488 # Offset: 24499
    00005fb9: 	movq	0xb0(%rsp), %rax
    00005fc1: 	leaq	0x1(%rax), %rsi
    00005fc5: 	callq	_ZdlPvm@PLT # Offset: 24517
    00005fca: 	jmp	.Ltmp6488 # Offset: 24522
    00005fcf: 	endbr64
    00005fd3: 	movq	%rax, %rbx
    00005fd6: 	jmp	.Ltmp6493 # Offset: 24534
    00005fd8: 	endbr64
    00005fdc: 	movq	%rax, %rbx
    00005fdf: 	jmp	.Ltmp6494 # Offset: 24543
.Ltmp6493:
    00005fe1: 	movq	0xa0(%rsp), %rdi
    00005fe9: 	cmpq	%r13, %rdi
    00005fec: 	je	.Ltmp6488 # Offset: 24556
    00005ff2: 	movq	0xb0(%rsp), %rax
    00005ffa: 	leaq	0x1(%rax), %rsi
    00005ffe: 	callq	_ZdlPvm@PLT # Offset: 24574
    00006003: 	jmp	.Ltmp6488 # Offset: 24579
.Ltmp6494:
    00006008: 	movq	0xa0(%rsp), %rdi
    00006010: 	cmpq	%r13, %rdi
    00006013: 	je	.Ltmp6488 # Offset: 24595
    00006019: 	movq	0xb0(%rsp), %rax
    00006021: 	leaq	0x1(%rax), %rsi
    00006025: 	callq	_ZdlPvm@PLT # Offset: 24613
    0000602a: 	jmp	.Ltmp6488 # Offset: 24618
    0000602f: 	endbr64
    00006033: 	movq	%rax, %rbx
    00006036: 	jmp	.Ltmp6495 # Offset: 24630
    00006038: 	endbr64
    0000603c: 	movq	%rax, %rbx
    0000603f: 	jmp	.Ltmp6496 # Offset: 24639
.Ltmp6495:
    00006041: 	movq	0xa0(%rsp), %rdi
    00006049: 	cmpq	%r13, %rdi
    0000604c: 	je	.Ltmp6488 # Offset: 24652
    00006052: 	movq	0xb0(%rsp), %rax
    0000605a: 	leaq	0x1(%rax), %rsi
    0000605e: 	callq	_ZdlPvm@PLT # Offset: 24670
    00006063: 	jmp	.Ltmp6488 # Offset: 24675
.Ltmp6496:
    00006068: 	movq	0xa0(%rsp), %rdi
    00006070: 	cmpq	%r13, %rdi
    00006073: 	je	.Ltmp6488 # Offset: 24691
    00006079: 	movq	0xb0(%rsp), %rax
    00006081: 	leaq	0x1(%rax), %rsi
    00006085: 	callq	_ZdlPvm@PLT # Offset: 24709
    0000608a: 	jmp	.Ltmp6488 # Offset: 24714
    0000608f: 	endbr64
    00006093: 	movq	%rax, %rbx
    00006096: 	jmp	.Ltmp6497 # Offset: 24726
    00006098: 	endbr64
    0000609c: 	movq	%rax, %rbx
    0000609f: 	jmp	.Ltmp6498 # Offset: 24735
.Ltmp6497:
    000060a1: 	movq	0xa0(%rsp), %rdi
    000060a9: 	cmpq	%r13, %rdi
    000060ac: 	je	.Ltmp6488 # Offset: 24748
    000060b2: 	movq	0xb0(%rsp), %rax
    000060ba: 	leaq	0x1(%rax), %rsi
    000060be: 	callq	_ZdlPvm@PLT # Offset: 24766
    000060c3: 	jmp	.Ltmp6488 # Offset: 24771
.Ltmp6498:
    000060c8: 	movq	0xa0(%rsp), %rdi
    000060d0: 	cmpq	%r13, %rdi
    000060d3: 	je	.Ltmp6488 # Offset: 24787
    000060d9: 	movq	0xb0(%rsp), %rax
    000060e1: 	leaq	0x1(%rax), %rsi
    000060e5: 	callq	_ZdlPvm@PLT # Offset: 24805
    000060ea: 	jmp	.Ltmp6488 # Offset: 24810
    000060ef: 	endbr64
    000060f3: 	movq	%rax, %rbx
    000060f6: 	jmp	.Ltmp6499 # Offset: 24822
    000060f8: 	endbr64
    000060fc: 	movq	%rax, %rbx
    000060ff: 	jmp	.Ltmp6500 # Offset: 24831
.Ltmp6499:
    00006101: 	movq	0xa0(%rsp), %rdi
    00006109: 	cmpq	%r13, %rdi
    0000610c: 	je	.Ltmp6488 # Offset: 24844
    00006112: 	movq	0xb0(%rsp), %rax
    0000611a: 	leaq	0x1(%rax), %rsi
    0000611e: 	callq	_ZdlPvm@PLT # Offset: 24862
    00006123: 	jmp	.Ltmp6488 # Offset: 24867
.Ltmp6500:
    00006128: 	movq	0xa0(%rsp), %rdi
    00006130: 	cmpq	%r13, %rdi
    00006133: 	je	.Ltmp6488 # Offset: 24883
    00006139: 	movq	0xb0(%rsp), %rax
    00006141: 	leaq	0x1(%rax), %rsi
    00006145: 	callq	_ZdlPvm@PLT # Offset: 24901
    0000614a: 	jmp	.Ltmp6488 # Offset: 24906
    0000614f: 	endbr64
    00006153: 	movq	%rax, %rbx
    00006156: 	jmp	.Ltmp6501 # Offset: 24918
    00006158: 	endbr64
    0000615c: 	movq	%rax, %rbx
    0000615f: 	jmp	.Ltmp6502 # Offset: 24927
.Ltmp6501:
    00006161: 	movq	0xa0(%rsp), %rdi
    00006169: 	cmpq	%r13, %rdi
    0000616c: 	je	.Ltmp6488 # Offset: 24940
    00006172: 	movq	0xb0(%rsp), %rax
    0000617a: 	leaq	0x1(%rax), %rsi
    0000617e: 	callq	_ZdlPvm@PLT # Offset: 24958
    00006183: 	jmp	.Ltmp6488 # Offset: 24963
.Ltmp6502:
    00006188: 	movq	0xa0(%rsp), %rdi
    00006190: 	cmpq	%r13, %rdi
    00006193: 	je	.Ltmp6488 # Offset: 24979
    00006199: 	movq	0xb0(%rsp), %rax
    000061a1: 	leaq	0x1(%rax), %rsi
    000061a5: 	callq	_ZdlPvm@PLT # Offset: 24997
    000061aa: 	jmp	.Ltmp6488 # Offset: 25002
    000061af: 	endbr64
    000061b3: 	movq	%rax, %rbx
    000061b6: 	jmp	.Ltmp6503 # Offset: 25014
    000061b8: 	endbr64
    000061bc: 	movq	%rax, %rbx
    000061bf: 	jmp	.Ltmp6504 # Offset: 25023
.Ltmp6503:
    000061c1: 	movq	0xa0(%rsp), %rdi
    000061c9: 	cmpq	%r13, %rdi
    000061cc: 	je	.Ltmp6488 # Offset: 25036
    000061d2: 	movq	0xb0(%rsp), %rax
    000061da: 	leaq	0x1(%rax), %rsi
    000061de: 	callq	_ZdlPvm@PLT # Offset: 25054
    000061e3: 	jmp	.Ltmp6488 # Offset: 25059
.Ltmp6504:
    000061e8: 	movq	0xa0(%rsp), %rdi
    000061f0: 	cmpq	%r13, %rdi
    000061f3: 	je	.Ltmp6488 # Offset: 25075
    000061f9: 	movq	0xb0(%rsp), %rax
    00006201: 	leaq	0x1(%rax), %rsi
    00006205: 	callq	_ZdlPvm@PLT # Offset: 25093
    0000620a: 	jmp	.Ltmp6488 # Offset: 25098
    0000620f: 	endbr64
    00006213: 	jmp	.Ltmp6482 # Offset: 25107
    00006218: 	endbr64
    0000621c: 	movq	%rax, %rbx
    0000621f: 	jmp	.Ltmp6505 # Offset: 25119
    00006221: 	endbr64
    00006225: 	movq	%rax, %rbx
    00006228: 	jmp	.Ltmp6506 # Offset: 25128
    0000622a: 	endbr64
    0000622e: 	movq	%rax, %rbx
    00006231: 	jmp	.Ltmp6507 # Offset: 25137
.Ltmp6505:
    00006233: 	movq	0xa0(%rsp), %rdi
    0000623b: 	cmpq	%r13, %rdi
    0000623e: 	je	.Ltmp6488 # Offset: 25150
    00006244: 	movq	0xb0(%rsp), %rax
    0000624c: 	leaq	0x1(%rax), %rsi
    00006250: 	callq	_ZdlPvm@PLT # Offset: 25168
    00006255: 	jmp	.Ltmp6488 # Offset: 25173
.Ltmp6506:
    0000625a: 	movq	0xa0(%rsp), %rdi
    00006262: 	cmpq	%r13, %rdi
    00006265: 	je	.Ltmp6488 # Offset: 25189
    0000626b: 	movq	0xb0(%rsp), %rax
    00006273: 	leaq	0x1(%rax), %rsi
    00006277: 	callq	_ZdlPvm@PLT # Offset: 25207
    0000627c: 	jmp	.Ltmp6488 # Offset: 25212
.Ltmp6507:
    00006281: 	movq	0xa0(%rsp), %rdi
    00006289: 	cmpq	%r13, %rdi
    0000628c: 	je	.Ltmp6488 # Offset: 25228
    00006292: 	movq	0xb0(%rsp), %rax
    0000629a: 	leaq	0x1(%rax), %rsi
    0000629e: 	callq	_ZdlPvm@PLT # Offset: 25246
    000062a3: 	jmp	.Ltmp6488 # Offset: 25251
    000062a8: 	endbr64
    000062ac: 	movq	%rax, %rbx
    000062af: 	jmp	.Ltmp6508 # Offset: 25263
    000062b1: 	endbr64
    000062b5: 	movq	%rax, %rbx
    000062b8: 	jmp	.Ltmp6509 # Offset: 25272
.Ltmp6508:
    000062ba: 	movq	0xa0(%rsp), %rdi
    000062c2: 	cmpq	%r13, %rdi
    000062c5: 	je	.Ltmp6488 # Offset: 25285
    000062cb: 	movq	0xb0(%rsp), %rax
    000062d3: 	leaq	0x1(%rax), %rsi
    000062d7: 	callq	_ZdlPvm@PLT # Offset: 25303
    000062dc: 	jmp	.Ltmp6488 # Offset: 25308
.Ltmp6509:
    000062e1: 	movq	0xa0(%rsp), %rdi
    000062e9: 	cmpq	%r13, %rdi
    000062ec: 	je	.Ltmp6488 # Offset: 25324
    000062f2: 	movq	0xb0(%rsp), %rax
    000062fa: 	leaq	0x1(%rax), %rsi
    000062fe: 	callq	_ZdlPvm@PLT # Offset: 25342
    00006303: 	jmp	.Ltmp6488 # Offset: 25347
    00006308: 	endbr64
    0000630c: 	jmp	.Ltmp6482 # Offset: 25356
    00006311: 	endbr64
    00006315: 	movq	%rax, %rbx
    00006318: 	jmp	.Ltmp6510 # Offset: 25368
    0000631a: 	endbr64
    0000631e: 	movq	%rax, %rbx
    00006321: 	jmp	.Ltmp6511 # Offset: 25377
.Ltmp6510:
    00006323: 	movq	0xa0(%rsp), %rdi
    0000632b: 	cmpq	%r13, %rdi
    0000632e: 	je	.Ltmp6488 # Offset: 25390
    00006334: 	movq	0xb0(%rsp), %rax
    0000633c: 	leaq	0x1(%rax), %rsi
    00006340: 	callq	_ZdlPvm@PLT # Offset: 25408
    00006345: 	jmp	.Ltmp6488 # Offset: 25413
.Ltmp6511:
    0000634a: 	movq	0xa0(%rsp), %rdi
    00006352: 	cmpq	%r13, %rdi
    00006355: 	je	.Ltmp6488 # Offset: 25429
    0000635b: 	movq	0xb0(%rsp), %rax
    00006363: 	leaq	0x1(%rax), %rsi
    00006367: 	callq	_ZdlPvm@PLT # Offset: 25447
    0000636c: 	jmp	.Ltmp6488 # Offset: 25452
    00006371: 	endbr64
    00006375: 	movq	%rax, %rbx
    00006378: 	jmp	.Ltmp6512 # Offset: 25464
    0000637a: 	endbr64
    0000637e: 	movq	%rax, %rbx
    00006381: 	jmp	.Ltmp6513 # Offset: 25473
.Ltmp6512:
    00006383: 	movq	0xa0(%rsp), %rdi
    0000638b: 	cmpq	%r13, %rdi
    0000638e: 	je	.Ltmp6488 # Offset: 25486
    00006394: 	movq	0xb0(%rsp), %rax
    0000639c: 	leaq	0x1(%rax), %rsi
    000063a0: 	callq	_ZdlPvm@PLT # Offset: 25504
    000063a5: 	jmp	.Ltmp6488 # Offset: 25509
.Ltmp6513:
    000063aa: 	movq	0xa0(%rsp), %rdi
    000063b2: 	cmpq	%r13, %rdi
    000063b5: 	je	.Ltmp6488 # Offset: 25525
    000063bb: 	movq	0xb0(%rsp), %rax
    000063c3: 	leaq	0x1(%rax), %rsi
    000063c7: 	callq	_ZdlPvm@PLT # Offset: 25543
    000063cc: 	jmp	.Ltmp6488 # Offset: 25548
    000063d1: 	endbr64
    000063d5: 	movq	%rax, %rbx
    000063d8: 	jmp	.Ltmp6514 # Offset: 25560
    000063da: 	endbr64
    000063de: 	movq	%rax, %rbx
    000063e1: 	jmp	.Ltmp6515 # Offset: 25569
.Ltmp6514:
    000063e3: 	movq	0xa0(%rsp), %rdi
    000063eb: 	cmpq	%r13, %rdi
    000063ee: 	je	.Ltmp6488 # Offset: 25582
    000063f4: 	movq	0xb0(%rsp), %rax
    000063fc: 	leaq	0x1(%rax), %rsi
    00006400: 	callq	_ZdlPvm@PLT # Offset: 25600
    00006405: 	jmp	.Ltmp6488 # Offset: 25605
.Ltmp6515:
    0000640a: 	movq	0xa0(%rsp), %rdi
    00006412: 	cmpq	%r13, %rdi
    00006415: 	je	.Ltmp6488 # Offset: 25621
    0000641b: 	movq	0xb0(%rsp), %rax
    00006423: 	leaq	0x1(%rax), %rsi
    00006427: 	callq	_ZdlPvm@PLT # Offset: 25639
    0000642c: 	jmp	.Ltmp6488 # Offset: 25644
.Ltmp6484:
    00006431: 	movq	0x70(%rsp), %rax
    00006436: 	leaq	0x1(%rax), %rsi
    0000643a: 	callq	_ZdlPvm@PLT # Offset: 25658
    0000643f: 	jmp	.Ltmp6516 # Offset: 25663
    00006444: 	endbr64
    00006448: 	jmp	.Ltmp6482 # Offset: 25672
    0000644d: 	endbr64
    00006451: 	jmp	.Ltmp6482 # Offset: 25681
    00006456: 	endbr64
    0000645a: 	jmp	.Ltmp6482 # Offset: 25690
    0000645f: 	endbr64
    00006463: 	jmp	.Ltmp6482 # Offset: 25699
    00006468: 	endbr64
    0000646c: 	jmp	.Ltmp6482 # Offset: 25708
    00006471: 	endbr64
    00006475: 	jmp	.Ltmp6482 # Offset: 25717
    0000647a: 	endbr64
    0000647e: 	jmp	.Ltmp6482 # Offset: 25726
    00006483: 	endbr64
    00006487: 	jmp	.Ltmp6482 # Offset: 25735
    0000648c: 	endbr64
    00006490: 	jmp	.Ltmp6482 # Offset: 25744
    00006495: 	endbr64
    00006499: 	jmp	.Ltmp6482 # Offset: 25753
    0000649e: 	endbr64
    000064a2: 	jmp	.Ltmp6482 # Offset: 25762
    000064a7: 	endbr64
    000064ab: 	jmp	.Ltmp6482 # Offset: 25771
    000064b0: 	endbr64
    000064b4: 	jmp	.Ltmp6482 # Offset: 25780
    000064b9: 	endbr64
    000064bd: 	jmp	.Ltmp6482 # Offset: 25789
    000064c2: 	endbr64
    000064c6: 	jmp	.Ltmp6482 # Offset: 25798
    000064cb: 	endbr64
    000064cf: 	jmp	.Ltmp6482 # Offset: 25807
    000064d4: 	endbr64
    000064d8: 	movq	%rax, %rbx
    000064db: 	jmp	.Ltmp6517 # Offset: 25819
    000064dd: 	endbr64
    000064e1: 	movq	%rax, %rbx
    000064e4: 	jmp	.Ltmp6518 # Offset: 25828
.Ltmp6517:
    000064e6: 	movq	0xa0(%rsp), %rdi
    000064ee: 	cmpq	%r13, %rdi
    000064f1: 	je	.Ltmp6488 # Offset: 25841
    000064f7: 	movq	0xb0(%rsp), %rax
    000064ff: 	leaq	0x1(%rax), %rsi
    00006503: 	callq	_ZdlPvm@PLT # Offset: 25859
    00006508: 	jmp	.Ltmp6488 # Offset: 25864
.Ltmp6518:
    0000650d: 	movq	0xa0(%rsp), %rdi
    00006515: 	cmpq	%r13, %rdi
    00006518: 	je	.Ltmp6488 # Offset: 25880
    0000651e: 	movq	0xb0(%rsp), %rax
    00006526: 	leaq	0x1(%rax), %rsi
    0000652a: 	callq	_ZdlPvm@PLT # Offset: 25898
    0000652f: 	jmp	.Ltmp6488 # Offset: 25903
    00006534: 	endbr64
    00006538: 	movq	%rax, %rbx
    0000653b: 	jmp	.Ltmp6519 # Offset: 25915
    0000653d: 	endbr64
    00006541: 	movq	%rax, %rbx
    00006544: 	jmp	.Ltmp6520 # Offset: 25924
.Ltmp6519:
    00006546: 	movq	0xa0(%rsp), %rdi
    0000654e: 	cmpq	%r13, %rdi
    00006551: 	je	.Ltmp6488 # Offset: 25937
    00006557: 	movq	0xb0(%rsp), %rax
    0000655f: 	leaq	0x1(%rax), %rsi
    00006563: 	callq	_ZdlPvm@PLT # Offset: 25955
    00006568: 	jmp	.Ltmp6488 # Offset: 25960
.Ltmp6520:
    0000656d: 	movq	0xa0(%rsp), %rdi
    00006575: 	cmpq	%r13, %rdi
    00006578: 	je	.Ltmp6488 # Offset: 25976
    0000657e: 	movq	0xb0(%rsp), %rax
    00006586: 	leaq	0x1(%rax), %rsi
    0000658a: 	callq	_ZdlPvm@PLT # Offset: 25994
    0000658f: 	jmp	.Ltmp6488 # Offset: 25999
    00006594: 	endbr64
    00006598: 	movq	%rax, %rbx
    0000659b: 	jmp	.Ltmp6521 # Offset: 26011
    0000659d: 	endbr64
    000065a1: 	movq	%rax, %rbx
    000065a4: 	jmp	.Ltmp6522 # Offset: 26020
.Ltmp6521:
    000065a6: 	movq	0xa0(%rsp), %rdi
    000065ae: 	cmpq	%r13, %rdi
    000065b1: 	je	.Ltmp6488 # Offset: 26033
    000065b7: 	movq	0xb0(%rsp), %rax
    000065bf: 	leaq	0x1(%rax), %rsi
    000065c3: 	callq	_ZdlPvm@PLT # Offset: 26051
    000065c8: 	jmp	.Ltmp6488 # Offset: 26056
.Ltmp6522:
    000065cd: 	movq	0xa0(%rsp), %rdi
    000065d5: 	cmpq	%r13, %rdi
    000065d8: 	je	.Ltmp6488 # Offset: 26072
    000065de: 	movq	0xb0(%rsp), %rax
    000065e6: 	leaq	0x1(%rax), %rsi
    000065ea: 	callq	_ZdlPvm@PLT # Offset: 26090
    000065ef: 	jmp	.Ltmp6488 # Offset: 26095
    000065f4: 	endbr64
    000065f8: 	movq	%rax, %rbx
    000065fb: 	jmp	.Ltmp6523 # Offset: 26107
    000065fd: 	endbr64
    00006601: 	movq	%rax, %rbx
    00006604: 	jmp	.Ltmp6524 # Offset: 26116
.Ltmp6523:
    00006606: 	movq	0xa0(%rsp), %rdi
    0000660e: 	cmpq	%r13, %rdi
    00006611: 	je	.Ltmp6488 # Offset: 26129
    00006617: 	movq	0xb0(%rsp), %rax
    0000661f: 	leaq	0x1(%rax), %rsi
    00006623: 	callq	_ZdlPvm@PLT # Offset: 26147
    00006628: 	jmp	.Ltmp6488 # Offset: 26152
.Ltmp6524:
    0000662d: 	movq	0xa0(%rsp), %rdi
    00006635: 	cmpq	%r13, %rdi
    00006638: 	je	.Ltmp6488 # Offset: 26168
    0000663e: 	movq	0xb0(%rsp), %rax
    00006646: 	leaq	0x1(%rax), %rsi
    0000664a: 	callq	_ZdlPvm@PLT # Offset: 26186
    0000664f: 	jmp	.Ltmp6488 # Offset: 26191
    00006654: 	endbr64
    00006658: 	movq	%rax, %rbx
    0000665b: 	jmp	.Ltmp6525 # Offset: 26203
    0000665d: 	endbr64
    00006661: 	movq	%rax, %rbx
    00006664: 	jmp	.Ltmp6526 # Offset: 26212
.Ltmp6525:
    00006666: 	movq	0xa0(%rsp), %rdi
    0000666e: 	cmpq	%r13, %rdi
    00006671: 	je	.Ltmp6488 # Offset: 26225
    00006677: 	movq	0xb0(%rsp), %rax
    0000667f: 	leaq	0x1(%rax), %rsi
    00006683: 	callq	_ZdlPvm@PLT # Offset: 26243
    00006688: 	jmp	.Ltmp6488 # Offset: 26248
.Ltmp6526:
    0000668d: 	movq	0xa0(%rsp), %rdi
    00006695: 	cmpq	%r13, %rdi
    00006698: 	je	.Ltmp6488 # Offset: 26264
    0000669e: 	movq	0xb0(%rsp), %rax
    000066a6: 	leaq	0x1(%rax), %rsi
    000066aa: 	callq	_ZdlPvm@PLT # Offset: 26282
    000066af: 	jmp	.Ltmp6488 # Offset: 26287
    000066b4: 	endbr64
    000066b8: 	movq	%rax, %rbx
    000066bb: 	jmp	.Ltmp6527 # Offset: 26299
    000066bd: 	endbr64
    000066c1: 	movq	%rax, %rbx
    000066c4: 	jmp	.Ltmp6528 # Offset: 26308
.Ltmp6527:
    000066c6: 	movq	0xa0(%rsp), %rdi
    000066ce: 	cmpq	%r13, %rdi
    000066d1: 	je	.Ltmp6488 # Offset: 26321
    000066d7: 	movq	0xb0(%rsp), %rax
    000066df: 	leaq	0x1(%rax), %rsi
    000066e3: 	callq	_ZdlPvm@PLT # Offset: 26339
    000066e8: 	jmp	.Ltmp6488 # Offset: 26344
.Ltmp6528:
    000066ed: 	movq	0xa0(%rsp), %rdi
    000066f5: 	cmpq	%r13, %rdi
    000066f8: 	je	.Ltmp6488 # Offset: 26360
    000066fe: 	movq	0xb0(%rsp), %rax
    00006706: 	leaq	0x1(%rax), %rsi
    0000670a: 	callq	_ZdlPvm@PLT # Offset: 26378
    0000670f: 	jmp	.Ltmp6488 # Offset: 26383
    00006714: 	endbr64
    00006718: 	movq	%rax, %rbx
    0000671b: 	jmp	.Ltmp6529 # Offset: 26395
    0000671d: 	endbr64
    00006721: 	movq	%rax, %rbx
    00006724: 	jmp	.Ltmp6530 # Offset: 26404
.Ltmp6529:
    00006726: 	movq	0xa0(%rsp), %rdi
    0000672e: 	cmpq	%r13, %rdi
    00006731: 	je	.Ltmp6488 # Offset: 26417
    00006737: 	movq	0xb0(%rsp), %rax
    0000673f: 	leaq	0x1(%rax), %rsi
    00006743: 	callq	_ZdlPvm@PLT # Offset: 26435
    00006748: 	jmp	.Ltmp6488 # Offset: 26440
.Ltmp6530:
    0000674d: 	movq	0xa0(%rsp), %rdi
    00006755: 	cmpq	%r13, %rdi
    00006758: 	je	.Ltmp6488 # Offset: 26456
    0000675e: 	movq	0xb0(%rsp), %rax
    00006766: 	leaq	0x1(%rax), %rsi
    0000676a: 	callq	_ZdlPvm@PLT # Offset: 26474
    0000676f: 	jmp	.Ltmp6488 # Offset: 26479
    00006774: 	endbr64
    00006778: 	movq	%rax, %rbx
    0000677b: 	jmp	.Ltmp6531 # Offset: 26491
    0000677d: 	endbr64
    00006781: 	movq	%rax, %rbx
    00006784: 	jmp	.Ltmp6532 # Offset: 26500
.Ltmp6531:
    00006786: 	movq	0xa0(%rsp), %rdi
    0000678e: 	cmpq	%r13, %rdi
    00006791: 	je	.Ltmp6488 # Offset: 26513
    00006797: 	movq	0xb0(%rsp), %rax
    0000679f: 	leaq	0x1(%rax), %rsi
    000067a3: 	callq	_ZdlPvm@PLT # Offset: 26531
    000067a8: 	jmp	.Ltmp6488 # Offset: 26536
.Ltmp6532:
    000067ad: 	movq	0xa0(%rsp), %rdi
    000067b5: 	cmpq	%r13, %rdi
    000067b8: 	je	.Ltmp6488 # Offset: 26552
    000067be: 	movq	0xb0(%rsp), %rax
    000067c6: 	leaq	0x1(%rax), %rsi
    000067ca: 	callq	_ZdlPvm@PLT # Offset: 26570
    000067cf: 	jmp	.Ltmp6488 # Offset: 26575
    000067d4: 	endbr64
.Ltmp6534:
    000067d8: 	movq	%rax, %rbx
    000067db: 	jmp	.Ltmp6533 # Offset: 26587
    000067e0: 	endbr64
    000067e4: 	jmp	.Ltmp6482 # Offset: 26596
    000067e9: 	endbr64
    000067ed: 	jmp	.Ltmp6482 # Offset: 26605
    000067f2: 	endbr64
    000067f6: 	jmp	.Ltmp6482 # Offset: 26614
    000067fb: 	endbr64
    000067ff: 	jmp	.Ltmp6482 # Offset: 26623
    00006804: 	endbr64
    00006808: 	jmp	.Ltmp6482 # Offset: 26632
    0000680d: 	endbr64
    00006811: 	jmp	.Ltmp6482 # Offset: 26641
    00006816: 	endbr64
    0000681a: 	jmp	.Ltmp6482 # Offset: 26650
    0000681f: 	endbr64
    00006823: 	jmp	.Ltmp6534 # Offset: 26659
    00006825: 	endbr64
    00006829: 	jmp	.Ltmp6534 # Offset: 26665
    0000682b: 	endbr64
    0000682f: 	jmp	.Ltmp6534 # Offset: 26671
    00006831: 	endbr64
    00006835: 	jmp	.Ltmp6534 # Offset: 26677
    00006837: 	endbr64
    0000683b: 	jmp	.Ltmp6534 # Offset: 26683
    0000683d: 	endbr64
    00006841: 	jmp	.Ltmp6534 # Offset: 26689
    00006843: 	endbr64
    00006847: 	jmp	.Ltmp6534 # Offset: 26695
    00006849: 	endbr64
    0000684d: 	movq	%rax, %rbx
    00006850: 	jmp	.Ltmp6483 # Offset: 26704
    00006855: 	endbr64
    00006859: 	movq	%rax, %rbx
    0000685c: 	jmp	.Ltmp6535 # Offset: 26716
    0000685e: 	endbr64
    00006862: 	movq	%rax, %rbx
    00006865: 	jmp	.Ltmp6536 # Offset: 26725
.Ltmp6535:
    00006867: 	movq	0xa0(%rsp), %rdi
    0000686f: 	cmpq	%r13, %rdi
    00006872: 	je	.Ltmp6488 # Offset: 26738
    00006878: 	movq	0xb0(%rsp), %rax
    00006880: 	leaq	0x1(%rax), %rsi
    00006884: 	callq	_ZdlPvm@PLT # Offset: 26756
    00006889: 	jmp	.Ltmp6488 # Offset: 26761
.Ltmp6536:
    0000688e: 	movq	0xa0(%rsp), %rdi
    00006896: 	cmpq	%r13, %rdi
    00006899: 	je	.Ltmp6488 # Offset: 26777
    0000689f: 	movq	0xb0(%rsp), %rax
    000068a7: 	leaq	0x1(%rax), %rsi
    000068ab: 	callq	_ZdlPvm@PLT # Offset: 26795
    000068b0: 	jmp	.Ltmp6488 # Offset: 26800
    000068b5: 	endbr64
    000068b9: 	movq	%rax, %rbx
    000068bc: 	jmp	.Ltmp6537 # Offset: 26812
    000068be: 	endbr64
    000068c2: 	movq	%rax, %rbx
    000068c5: 	jmp	.Ltmp6538 # Offset: 26821
.Ltmp6537:
    000068c7: 	movq	0xa0(%rsp), %rdi
    000068cf: 	cmpq	%r13, %rdi
    000068d2: 	je	.Ltmp6488 # Offset: 26834
    000068d8: 	movq	0xb0(%rsp), %rax
    000068e0: 	leaq	0x1(%rax), %rsi
    000068e4: 	callq	_ZdlPvm@PLT # Offset: 26852
    000068e9: 	jmp	.Ltmp6488 # Offset: 26857
.Ltmp6538:
    000068ee: 	movq	0xa0(%rsp), %rdi
    000068f6: 	cmpq	%r13, %rdi
    000068f9: 	je	.Ltmp6488 # Offset: 26873
    000068ff: 	movq	0xb0(%rsp), %rax
    00006907: 	leaq	0x1(%rax), %rsi
    0000690b: 	callq	_ZdlPvm@PLT # Offset: 26891
    00006910: 	jmp	.Ltmp6488 # Offset: 26896
    00006915: 	endbr64
    00006919: 	movq	%rax, %rbx
    0000691c: 	jmp	.Ltmp6539 # Offset: 26908
    0000691e: 	endbr64
    00006922: 	movq	%rax, %rbx
    00006925: 	jmp	.Ltmp6540 # Offset: 26917
.Ltmp6539:
    00006927: 	movq	0xa0(%rsp), %rdi
    0000692f: 	cmpq	%r13, %rdi
    00006932: 	je	.Ltmp6488 # Offset: 26930
    00006938: 	movq	0xb0(%rsp), %rax
    00006940: 	leaq	0x1(%rax), %rsi
    00006944: 	callq	_ZdlPvm@PLT # Offset: 26948
    00006949: 	jmp	.Ltmp6488 # Offset: 26953
.Ltmp6540:
    0000694e: 	movq	0xa0(%rsp), %rdi
    00006956: 	cmpq	%r13, %rdi
    00006959: 	je	.Ltmp6488 # Offset: 26969
    0000695f: 	movq	0xb0(%rsp), %rax
    00006967: 	leaq	0x1(%rax), %rsi
    0000696b: 	callq	_ZdlPvm@PLT # Offset: 26987
    00006970: 	jmp	.Ltmp6488 # Offset: 26992
    00006975: 	endbr64
    00006979: 	movq	%rax, %rbx
    0000697c: 	jmp	.Ltmp6541 # Offset: 27004
    0000697e: 	endbr64
    00006982: 	movq	%rax, %rbx
    00006985: 	jmp	.Ltmp6542 # Offset: 27013
.Ltmp6541:
    00006987: 	movq	0xa0(%rsp), %rdi
    0000698f: 	cmpq	%r13, %rdi
    00006992: 	je	.Ltmp6488 # Offset: 27026
    00006998: 	movq	0xb0(%rsp), %rax
    000069a0: 	leaq	0x1(%rax), %rsi
    000069a4: 	callq	_ZdlPvm@PLT # Offset: 27044
    000069a9: 	jmp	.Ltmp6488 # Offset: 27049
.Ltmp6542:
    000069ae: 	movq	0xa0(%rsp), %rdi
    000069b6: 	cmpq	%r13, %rdi
    000069b9: 	je	.Ltmp6488 # Offset: 27065
    000069bf: 	movq	0xb0(%rsp), %rax
    000069c7: 	leaq	0x1(%rax), %rsi
    000069cb: 	callq	_ZdlPvm@PLT # Offset: 27083
    000069d0: 	jmp	.Ltmp6488 # Offset: 27088
    000069d5: 	endbr64
    000069d9: 	jmp	.Ltmp6534 # Offset: 27097
    000069de: 	endbr64
    000069e2: 	jmp	.Ltmp6534 # Offset: 27106
    000069e7: 	endbr64
    000069eb: 	jmp	.Ltmp6534 # Offset: 27115
    000069f0: 	endbr64
    000069f4: 	jmp	.Ltmp6534 # Offset: 27124
    000069f9: 	endbr64
    000069fd: 	movq	%rax, %rbx
    00006a00: 	jmp	.Ltmp6543 # Offset: 27136
    00006a02: 	endbr64
    00006a06: 	movq	%rax, %rbx
    00006a09: 	jmp	.Ltmp6488 # Offset: 27145
.Ltmp6543:
    00006a0e: 	movq	0xa0(%rsp), %rdi
    00006a16: 	cmpq	%r13, %rdi
    00006a19: 	je	.Ltmp6488 # Offset: 27161
    00006a1f: 	movq	0xb0(%rsp), %rax
    00006a27: 	leaq	0x1(%rax), %rsi
    00006a2b: 	callq	_ZdlPvm@PLT # Offset: 27179
    00006a30: 	jmp	.Ltmp6488 # Offset: 27184
    00006a35: 	endbr64
    00006a39: 	movq	%rax, %rbx
    00006a3c: 	jmp	.Ltmp6544 # Offset: 27196
    00006a3e: 	endbr64
    00006a42: 	jmp	.Ltmp6534 # Offset: 27202
.Ltmp6544:
    00006a47: 	movq	0xa0(%rsp), %rdi
    00006a4f: 	cmpq	%r13, %rdi
    00006a52: 	je	.Ltmp6488 # Offset: 27218
    00006a58: 	movq	0xb0(%rsp), %rax
    00006a60: 	leaq	0x1(%rax), %rsi
    00006a64: 	callq	_ZdlPvm@PLT # Offset: 27236
    00006a69: 	jmp	.Ltmp6488 # Offset: 27241
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIjEvv"

Binary Function "_Z13test_constantIi26custom_multiply_shiftadd_2IiEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 204
  State       : disassembled
  Address     : 0x4cc90
  Size        : 0x36d
  MaxSize     : 0x370
  Offset      : 0x4cc90
  Section     : .text
  Orc Section : .local.text._Z13test_constantIi26custom_multiply_shiftadd_2IiEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0203:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %edi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%edi, %edi
    00000041: 	jle	.Ltmp6545 # Offset: 65
    00000047: 	leal	-0x1(%r15), %eax
    0000004b: 	movl	%r15d, %ebx
    0000004e: 	leaq	DATAat0x571d0(%rip), %rbp
    00000055: 	xorl	%r12d, %r12d
    00000058: 	movl	%eax, 0x4(%rsp)
    0000005c: 	movl	%r15d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm3
    00000067: 	andl	$-0x4, %ebx
    0000006a: 	shrl	$0x2, %eax
    0000006d: 	subl	$0x1, %eax
    00000070: 	shlq	$0x4, %rax
    00000074: 	leaq	0x10(%r13,%rax), %r14
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp6551:
    00000080: 	xorl	%edx, %edx
    00000082: 	testl	%r15d, %r15d
    00000085: 	jle	.Ltmp6546 # Offset: 133
    0000008b: 	cmpl	$0x2, 0x4(%rsp)
    00000090: 	jbe	.Ltmp6547 # Offset: 144
    00000096: 	movq	%r13, %rax
    00000099: 	pxor	%xmm2, %xmm2
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp6548:
    000000a0: 	movdqu	(%rax), %xmm1
    000000a4: 	addq	$0x10, %rax
    000000a8: 	movdqa	%xmm1, %xmm0
    000000ac: 	movdqa	%xmm1, %xmm4
    000000b0: 	pslld	$0x5, %xmm4
    000000b5: 	pslld	$0x6, %xmm0
    000000ba: 	psubd	%xmm4, %xmm0
    000000be: 	movdqa	%xmm1, %xmm4
    000000c2: 	pslld	$0x4, %xmm4
    000000c7: 	psubd	%xmm4, %xmm0
    000000cb: 	movdqa	%xmm1, %xmm4
    000000cf: 	pslld	$0x3, %xmm4
    000000d4: 	psubd	%xmm4, %xmm0
    000000d8: 	movdqa	%xmm1, %xmm4
    000000dc: 	pslld	$0x2, %xmm4
    000000e1: 	pslld	$0x1, %xmm1
    000000e6: 	psubd	%xmm4, %xmm0
    000000ea: 	psubd	%xmm1, %xmm0
    000000ee: 	paddd	%xmm0, %xmm2
    000000f2: 	cmpq	%rax, %r14
    000000f5: 	jne	.Ltmp6548 # Offset: 245
    000000f7: 	movdqa	%xmm2, %xmm0
    000000fb: 	psrldq	$0x8, %xmm0
    00000100: 	paddd	%xmm0, %xmm2
    00000104: 	movdqa	%xmm2, %xmm0
    00000108: 	psrldq	$0x4, %xmm0
    0000010d: 	paddd	%xmm0, %xmm2
    00000111: 	movd	%xmm2, %edx
    00000115: 	cmpl	%r15d, %ebx
    00000118: 	je	.Ltmp6546 # Offset: 280
    0000011e: 	movl	%ebx, %esi
    00000120: 	movl	%ebx, %eax
.Ltmp6559:
    00000122: 	movl	%r15d, %ecx
    00000125: 	subl	%esi, %ecx
    00000127: 	cmpl	$0x1, %ecx
    0000012a: 	je	.Ltmp6549 # Offset: 298
    0000012c: 	movq	(%r13,%rsi,4), %xmm1
    00000133: 	movdqa	%xmm1, %xmm0
    00000137: 	movdqa	%xmm1, %xmm2
    0000013b: 	pslld	$0x5, %xmm2
    00000140: 	pslld	$0x6, %xmm0
    00000145: 	psubd	%xmm2, %xmm0
    00000149: 	movdqa	%xmm1, %xmm2
    0000014d: 	pslld	$0x4, %xmm2
    00000152: 	psubd	%xmm2, %xmm0
    00000156: 	movdqa	%xmm1, %xmm2
    0000015a: 	pslld	$0x3, %xmm2
    0000015f: 	psubd	%xmm2, %xmm0
    00000163: 	movdqa	%xmm1, %xmm2
    00000167: 	pslld	$0x2, %xmm2
    0000016c: 	pslld	$0x1, %xmm1
    00000171: 	psubd	%xmm2, %xmm0
    00000175: 	psubd	%xmm1, %xmm0
    00000179: 	movd	%xmm0, %esi
    0000017d: 	pshufd	$0xe5, %xmm0, %xmm5
    00000182: 	movd	%xmm5, %r8d
    00000187: 	addl	%r8d, %esi
    0000018a: 	addl	%esi, %edx
    0000018c: 	movl	%ecx, %esi
    0000018e: 	andl	$-0x2, %esi
    00000191: 	addl	%esi, %eax
    00000193: 	cmpl	%ecx, %esi
    00000195: 	je	.Ltmp6546 # Offset: 405
.Ltmp6549:
    00000197: 	cltq
    00000199: 	movl	(%r13,%rax,4), %eax
    0000019e: 	leal	(%rdx,%rax,2), %edx
.Ltmp6546:
    000001a1: 	cvttsd2si	%xmm3, %eax
    000001a5: 	addl	%eax, %eax
    000001a7: 	imull	$0x1f40, %eax, %eax
    000001ad: 	cmpl	%edx, %eax
    000001af: 	je	.Ltmp6550 # Offset: 431
    000001b1: 	movl	current_test(%rip), %edx
    000001b7: 	movl	$0x1, %edi
    000001bc: 	movq	%rbp, %rsi
    000001bf: 	xorl	%eax, %eax
    000001c1: 	addl	$0x1, %r12d
    000001c5: 	callq	__printf_chk@PLT # Offset: 453
    000001ca: 	movl	iterations(%rip), %edi
    000001d0: 	cmpl	%edi, %r12d
    000001d3: 	jge	.Ltmp6545 # Offset: 467
    000001d5: 	movsd	init_value(%rip), %xmm3
    000001dd: 	jmp	.Ltmp6551 # Offset: 477
    000001e2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6550:
    000001e8: 	addl	$0x1, %r12d
    000001ec: 	cmpl	%edi, %r12d
    000001ef: 	jl	.Ltmp6551 # Offset: 495
.Ltmp6545:
    000001f5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001fc: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000203: 	subq	$0x20, %rax
    00000207: 	cmpq	%rax, %rbx
    0000020a: 	je	.Ltmp6552 # Offset: 522
    00000210: 	movq	0x8(%rsp), %rax
    00000215: 	leaq	0x10(%rbx), %rdi
    00000219: 	movq	%rdi, (%rbx)
    0000021c: 	movq	(%rax), %rbp
    0000021f: 	movq	0x8(%rax), %r12
    00000223: 	movq	%rbp, %rax
    00000226: 	addq	%r12, %rax
    00000229: 	je	.Ltmp6553 # Offset: 553
    0000022b: 	testq	%rbp, %rbp
    0000022e: 	je	.Ltmp6554 # Offset: 558
.Ltmp6553:
    00000234: 	movq	%r12, 0x10(%rsp)
    00000239: 	cmpq	$0xf, %r12
    0000023d: 	ja	.Ltmp6555 # Offset: 573
    00000243: 	cmpq	$0x1, %r12
    00000247: 	jne	.Ltmp6556 # Offset: 583
    0000024d: 	movzbl	(%rbp), %eax
    00000251: 	movb	%al, 0x10(%rbx)
.Ltmp6560:
    00000254: 	movq	%r12, 0x8(%rbx)
    00000258: 	movb	$0x0, (%rdi,%r12)
    0000025d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000264: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000026b: 	addq	$0x20, %rax
    0000026f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000276: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000027d: 	je	.Ltmp6557 # Offset: 637
.Ltmp6561:
    00000283: 	movq	-0x20(%rax), %rbp
    00000287: 	callq	clock@PLT # Offset: 647
    0000028c: 	movq	%rax, end_time(%rip)
    00000293: 	movq	0x18(%rsp), %rdx
    00000298: 	subq	%fs:0x28, %rdx
    000002a1: 	jne	.Ltmp6558 # Offset: 673
    000002a7: 	subq	start_time(%rip), %rax
    000002ae: 	pxor	%xmm0, %xmm0
    000002b2: 	movq	%rbp, %rdi
    000002b5: 	cvtsi2sd	%rax, %xmm0
    000002ba: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000002c2: 	addq	$0x28, %rsp
    000002c6: 	popq	%rbx
    000002c7: 	popq	%rbp
    000002c8: 	popq	%r12
    000002ca: 	popq	%r13
    000002cc: 	popq	%r14
    000002ce: 	popq	%r15
    000002d0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 720
.Ltmp6547:
    000002d5: 	xorl	%esi, %esi
    000002d7: 	xorl	%eax, %eax
    000002d9: 	xorl	%edx, %edx
    000002db: 	jmp	.Ltmp6559 # Offset: 731
.Ltmp6555:
    000002e0: 	movq	%rbx, %rdi
    000002e3: 	leaq	0x10(%rsp), %rsi
    000002e8: 	xorl	%edx, %edx
    000002ea: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 746
    000002ef: 	movq	%rax, (%rbx)
    000002f2: 	movq	%rax, %rdi
    000002f5: 	movq	0x10(%rsp), %rax
    000002fa: 	movq	%rax, 0x10(%rbx)
.Ltmp6562:
    000002fe: 	movq	%r12, %rdx
    00000301: 	movq	%rbp, %rsi
    00000304: 	callq	memcpy@PLT # Offset: 772
    00000309: 	movq	0x10(%rsp), %r12
    0000030e: 	movq	(%rbx), %rdi
    00000311: 	jmp	.Ltmp6560 # Offset: 785
.Ltmp6552:
    00000316: 	movq	0x8(%rsp), %rsi
    0000031b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000322: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 802
    00000327: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000032e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000335: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000033c: 	jne	.Ltmp6561 # Offset: 828
.Ltmp6557:
    00000342: 	movq	-0x8(%rdx), %rax
    00000346: 	addq	$0x200, %rax
    0000034c: 	jmp	.Ltmp6561 # Offset: 844
.Ltmp6556:
    00000351: 	testq	%r12, %r12
    00000354: 	je	.Ltmp6560 # Offset: 852
    0000035a: 	jmp	.Ltmp6562 # Offset: 858
.Ltmp6558:
    0000035c: 	callq	__stack_chk_fail@PLT # Offset: 860
.Ltmp6554:
    00000361: 	leaq	DATAat0x57008(%rip), %rdi
    00000368: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 872
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIi26custom_multiply_shiftadd_2IiEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeIiEvv" after disassembly {
  Number      : 205
  State       : disassembled
  Address     : 0x4d000
  Size        : 0x6bc3
  MaxSize     : 0x6bd0
  Offset      : 0x4d000
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIiEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0204:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x7000(%rsp), %r11
.Ltmp6563:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp6563 # Offset: 37
    00000027: 	subq	$0xdd8, %rsp
    0000002e: 	leaq	DATAat0x57a42(%rip), %rsi
    00000035: 	leaq	"_ZL7gLabels/1"(%rip), %r15
    0000003c: 	movq	%fs:0x28, %rax
    00000045: 	movq	%rax, 0x7dc8(%rsp)
    0000004d: 	xorl	%eax, %eax
    0000004f: 	leaq	0x40(%rsp), %r14
    00000054: 	leaq	0xc0(%rsp), %rbp
    0000005c: 	movq	%r14, %rdi
    0000005f: 	leaq	0x7dc0(%rsp), %rbx
    00000067: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 103
    0000006c: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm3
    00000074: 	leaq	0x20(%rsp), %rsi
    00000079: 	movq	%r15, %rdi
    0000007c: 	movaps	%xmm3, 0x20(%rsp)
    00000081: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    00000089: 	movaps	%xmm3, 0x30(%rsp)
    0000008e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 142
    00000093: 	cvttsd2si	init_value(%rip), %eax
    0000009b: 	movd	%eax, %xmm0
    0000009f: 	movq	%rbp, %rax
    000000a2: 	pshufd	$0x0, %xmm0, %xmm0
    000000a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6564:
    000000b0: 	movaps	%xmm0, (%rax)
    000000b3: 	addq	$0x10, %rax
    000000b7: 	cmpq	%rbx, %rax
    000000ba: 	jne	.Ltmp6564 # Offset: 186
    000000bc: 	leaq	0xa0(%rsp), %r12
    000000c4: 	leaq	DATAat0x57a42(%rip), %rsi
    000000cb: 	movq	%r12, %rdi
    000000ce: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 206
    000000d3: 	movq	0xa0(%rsp), %rdi
    000000db: 	leaq	0xb0(%rsp), %r13
    000000e3: 	cmpq	%r13, %rdi
    000000e6: 	je	.Ltmp6565 # Offset: 230
    000000e8: 	movq	0xb0(%rsp), %rax
    000000f0: 	leaq	0x1(%rax), %rsi
    000000f4: 	callq	_ZdlPvm@PLT # Offset: 244
.Ltmp6565:
    000000f9: 	leaq	DATAat0x57a42(%rip), %rsi
    00000100: 	movq	%r12, %rdi
    00000103: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 259
    00000108: 	movq	0xa0(%rsp), %rdi
    00000110: 	cmpq	%r13, %rdi
    00000113: 	je	.Ltmp6566 # Offset: 275
    00000115: 	movq	0xb0(%rsp), %rax
    0000011d: 	leaq	0x1(%rax), %rsi
    00000121: 	callq	_ZdlPvm@PLT # Offset: 289
.Ltmp6566:
    00000126: 	leaq	DATAat0x57a42(%rip), %rsi
    0000012d: 	movq	%r12, %rdi
    00000130: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 304
    00000135: 	movq	0xa0(%rsp), %rdi
    0000013d: 	cmpq	%r13, %rdi
    00000140: 	je	.Ltmp6567 # Offset: 320
    00000142: 	movq	0xb0(%rsp), %rax
    0000014a: 	leaq	0x1(%rax), %rsi
    0000014e: 	callq	_ZdlPvm@PLT # Offset: 334
.Ltmp6567:
    00000153: 	leaq	DATAat0x57a42(%rip), %rsi
    0000015a: 	movq	%r12, %rdi
    0000015d: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 349
    00000162: 	movq	0xa0(%rsp), %rdi
    0000016a: 	cmpq	%r13, %rdi
    0000016d: 	je	.Ltmp6568 # Offset: 365
    0000016f: 	movq	0xb0(%rsp), %rax
    00000177: 	leaq	0x1(%rax), %rsi
    0000017b: 	callq	_ZdlPvm@PLT # Offset: 379
.Ltmp6568:
    00000180: 	leaq	DATAat0x57a42(%rip), %rsi
    00000187: 	movq	%r12, %rdi
    0000018a: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 394
    0000018f: 	movq	0xa0(%rsp), %rdi
    00000197: 	cmpq	%r13, %rdi
    0000019a: 	je	.Ltmp6569 # Offset: 410
    0000019c: 	movq	0xb0(%rsp), %rax
    000001a4: 	leaq	0x1(%rax), %rsi
    000001a8: 	callq	_ZdlPvm@PLT # Offset: 424
.Ltmp6569:
    000001ad: 	leaq	DATAat0x57a42(%rip), %rsi
    000001b4: 	movq	%r12, %rdi
    000001b7: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 439
    000001bc: 	movq	0xa0(%rsp), %rdi
    000001c4: 	cmpq	%r13, %rdi
    000001c7: 	je	.Ltmp6570 # Offset: 455
    000001c9: 	movq	0xb0(%rsp), %rax
    000001d1: 	leaq	0x1(%rax), %rsi
    000001d5: 	callq	_ZdlPvm@PLT # Offset: 469
.Ltmp6570:
    000001da: 	leaq	DATAat0x57a42(%rip), %rsi
    000001e1: 	movq	%r12, %rdi
    000001e4: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 484
    000001e9: 	movq	0xa0(%rsp), %rdi
    000001f1: 	cmpq	%r13, %rdi
    000001f4: 	je	.Ltmp6571 # Offset: 500
    000001f6: 	movq	0xb0(%rsp), %rax
    000001fe: 	leaq	0x1(%rax), %rsi
    00000202: 	callq	_ZdlPvm@PLT # Offset: 514
.Ltmp6571:
    00000207: 	leaq	DATAat0x57a42(%rip), %rsi
    0000020e: 	movq	%r12, %rdi
    00000211: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 529
    00000216: 	movq	0xa0(%rsp), %rdi
    0000021e: 	cmpq	%r13, %rdi
    00000221: 	je	.Ltmp6572 # Offset: 545
    00000223: 	movq	0xb0(%rsp), %rax
    0000022b: 	leaq	0x1(%rax), %rsi
    0000022f: 	callq	_ZdlPvm@PLT # Offset: 559
.Ltmp6572:
    00000234: 	leaq	DATAat0x57a42(%rip), %rsi
    0000023b: 	movq	%r12, %rdi
    0000023e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 574
    00000243: 	movq	0xa0(%rsp), %rdi
    0000024b: 	cmpq	%r13, %rdi
    0000024e: 	je	.Ltmp6573 # Offset: 590
    00000250: 	movq	0xb0(%rsp), %rax
    00000258: 	leaq	0x1(%rax), %rsi
    0000025c: 	callq	_ZdlPvm@PLT # Offset: 604
.Ltmp6573:
    00000261: 	leaq	DATAat0x57a42(%rip), %rsi
    00000268: 	movq	%r12, %rdi
    0000026b: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 619
    00000270: 	movq	0xa0(%rsp), %rdi
    00000278: 	cmpq	%r13, %rdi
    0000027b: 	je	.Ltmp6574 # Offset: 635
    0000027d: 	movq	0xb0(%rsp), %rax
    00000285: 	leaq	0x1(%rax), %rsi
    00000289: 	callq	_ZdlPvm@PLT # Offset: 649
.Ltmp6574:
    0000028e: 	leaq	DATAat0x57a42(%rip), %rsi
    00000295: 	movq	%r12, %rdi
    00000298: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 664
    0000029d: 	movq	0xa0(%rsp), %rdi
    000002a5: 	cmpq	%r13, %rdi
    000002a8: 	je	.Ltmp6575 # Offset: 680
    000002aa: 	movq	0xb0(%rsp), %rax
    000002b2: 	leaq	0x1(%rax), %rsi
    000002b6: 	callq	_ZdlPvm@PLT # Offset: 694
.Ltmp6575:
    000002bb: 	leaq	DATAat0x57a42(%rip), %rsi
    000002c2: 	movq	%r12, %rdi
    000002c5: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 709
    000002ca: 	movq	0xa0(%rsp), %rdi
    000002d2: 	cmpq	%r13, %rdi
    000002d5: 	je	.Ltmp6576 # Offset: 725
    000002d7: 	movq	0xb0(%rsp), %rax
    000002df: 	leaq	0x1(%rax), %rsi
    000002e3: 	callq	_ZdlPvm@PLT # Offset: 739
.Ltmp6576:
    000002e8: 	leaq	DATAat0x57a42(%rip), %rsi
    000002ef: 	movq	%r12, %rdi
    000002f2: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 754
    000002f7: 	movq	0xa0(%rsp), %rdi
    000002ff: 	cmpq	%r13, %rdi
    00000302: 	je	.Ltmp6577 # Offset: 770
    00000304: 	movq	0xb0(%rsp), %rax
    0000030c: 	leaq	0x1(%rax), %rsi
    00000310: 	callq	_ZdlPvm@PLT # Offset: 784
.Ltmp6577:
    00000315: 	leaq	DATAat0x57a42(%rip), %rsi
    0000031c: 	movq	%r12, %rdi
    0000031f: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 799
    00000324: 	movq	0xa0(%rsp), %rdi
    0000032c: 	cmpq	%r13, %rdi
    0000032f: 	je	.Ltmp6578 # Offset: 815
    00000331: 	movq	0xb0(%rsp), %rax
    00000339: 	leaq	0x1(%rax), %rsi
    0000033d: 	callq	_ZdlPvm@PLT # Offset: 829
.Ltmp6578:
    00000342: 	leaq	DATAat0x57a42(%rip), %rsi
    00000349: 	movq	%r12, %rdi
    0000034c: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 844
    00000351: 	movq	0xa0(%rsp), %rdi
    00000359: 	cmpq	%r13, %rdi
    0000035c: 	je	.Ltmp6579 # Offset: 860
    0000035e: 	movq	0xb0(%rsp), %rax
    00000366: 	leaq	0x1(%rax), %rsi
    0000036a: 	callq	_ZdlPvm@PLT # Offset: 874
.Ltmp6579:
    0000036f: 	leaq	DATAat0x57a42(%rip), %rsi
    00000376: 	movq	%r12, %rdi
    00000379: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 889
    0000037e: 	movq	0xa0(%rsp), %rdi
    00000386: 	cmpq	%r13, %rdi
    00000389: 	je	.Ltmp6580 # Offset: 905
    0000038b: 	movq	0xb0(%rsp), %rax
    00000393: 	leaq	0x1(%rax), %rsi
    00000397: 	callq	_ZdlPvm@PLT # Offset: 919
.Ltmp6580:
    0000039c: 	leaq	DATAat0x57a42(%rip), %rsi
    000003a3: 	movq	%r12, %rdi
    000003a6: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 934
    000003ab: 	movq	0xa0(%rsp), %rdi
    000003b3: 	cmpq	%r13, %rdi
    000003b6: 	je	.Ltmp6581 # Offset: 950
    000003b8: 	movq	0xb0(%rsp), %rax
    000003c0: 	leaq	0x1(%rax), %rsi
    000003c4: 	callq	_ZdlPvm@PLT # Offset: 964
.Ltmp6581:
    000003c9: 	leaq	DATAat0x57a42(%rip), %rsi
    000003d0: 	movq	%r12, %rdi
    000003d3: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 979
    000003d8: 	movq	0xa0(%rsp), %rdi
    000003e0: 	cmpq	%r13, %rdi
    000003e3: 	je	.Ltmp6582 # Offset: 995
    000003e5: 	movq	0xb0(%rsp), %rax
    000003ed: 	leaq	0x1(%rax), %rsi
    000003f1: 	callq	_ZdlPvm@PLT # Offset: 1009
.Ltmp6582:
    000003f6: 	leaq	DATAat0x57a42(%rip), %rsi
    000003fd: 	movq	%r12, %rdi
    00000400: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 1024
    00000405: 	movq	0xa0(%rsp), %rdi
    0000040d: 	cmpq	%r13, %rdi
    00000410: 	je	.Ltmp6583 # Offset: 1040
    00000412: 	movq	0xb0(%rsp), %rax
    0000041a: 	leaq	0x1(%rax), %rsi
    0000041e: 	callq	_ZdlPvm@PLT # Offset: 1054
.Ltmp6583:
    00000423: 	leaq	DATAat0x57a42(%rip), %rsi
    0000042a: 	movq	%r12, %rdi
    0000042d: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 1069
    00000432: 	movq	0xa0(%rsp), %rdi
    0000043a: 	cmpq	%r13, %rdi
    0000043d: 	je	.Ltmp6584 # Offset: 1085
    0000043f: 	movq	0xb0(%rsp), %rax
    00000447: 	leaq	0x1(%rax), %rsi
    0000044b: 	callq	_ZdlPvm@PLT # Offset: 1099
.Ltmp6584:
    00000450: 	leaq	DATAat0x571e0(%rip), %rdx
    00000457: 	movq	%r14, %rsi
    0000045a: 	movq	%r12, %rdi
    0000045d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1117
    00000462: 	callq	clock@PLT # Offset: 1122
    00000467: 	movl	iterations(%rip), %ecx
    0000046d: 	movl	$0x0, (%rsp)
    00000474: 	movq	%rax, start_time(%rip)
    0000047b: 	testl	%ecx, %ecx
    0000047d: 	jle	.Ltmp6585 # Offset: 1149
    00000483: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6588:
    00000488: 	movq	%rbp, %rax
    0000048b: 	pxor	%xmm1, %xmm1
    0000048f: 	nop # Size: 1
.Ltmp6586:
    00000490: 	movdqa	(%rax), %xmm0
    00000494: 	addq	$0x10, %rax
    00000498: 	pslld	$0x1, %xmm0
    0000049d: 	paddd	%xmm0, %xmm1
    000004a1: 	cmpq	%rax, %rbx
    000004a4: 	jne	.Ltmp6586 # Offset: 1188
    000004a6: 	cvttsd2si	init_value(%rip), %edx
    000004ae: 	movdqa	%xmm1, %xmm0
    000004b2: 	psrldq	$0x8, %xmm0
    000004b7: 	paddd	%xmm0, %xmm1
    000004bb: 	movdqa	%xmm1, %xmm0
    000004bf: 	addl	%edx, %edx
    000004c1: 	psrldq	$0x4, %xmm0
    000004c6: 	imull	$0x1f40, %edx, %edx
    000004cc: 	paddd	%xmm0, %xmm1
    000004d0: 	movd	%xmm1, %eax
    000004d4: 	cmpl	%eax, %edx
    000004d6: 	je	.Ltmp6587 # Offset: 1238
    000004d8: 	movl	current_test(%rip), %edx
    000004de: 	leaq	DATAat0x571d0(%rip), %rsi
    000004e5: 	movl	$0x1, %edi
    000004ea: 	xorl	%eax, %eax
    000004ec: 	callq	__printf_chk@PLT # Offset: 1260
    000004f1: 	movl	iterations(%rip), %ecx
.Ltmp6587:
    000004f7: 	addl	$0x1, (%rsp)
    000004fb: 	movl	(%rsp), %eax
    000004fe: 	cmpl	%ecx, %eax
    00000500: 	jl	.Ltmp6588 # Offset: 1280
.Ltmp6585:
    00000502: 	movq	%r12, %rsi
    00000505: 	movq	%r15, %rdi
    00000508: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1288
    0000050d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000514: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000051b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000522: 	je	.Ltmp6589 # Offset: 1314
.Ltmp6990:
    00000528: 	movq	-0x20(%rax), %rdi
    0000052c: 	movq	%rdi, (%rsp)
    00000530: 	callq	clock@PLT # Offset: 1328
    00000535: 	movq	(%rsp), %rdi
    00000539: 	pxor	%xmm0, %xmm0
    0000053d: 	movq	%rax, end_time(%rip)
    00000544: 	subq	start_time(%rip), %rax
    0000054b: 	cvtsi2sd	%rax, %xmm0
    00000550: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000558: 	callq	_Z13record_resultdPKc # Offset: 1368
    0000055d: 	movq	0xa0(%rsp), %rdi
    00000565: 	cmpq	%r13, %rdi
    00000568: 	je	.Ltmp6590 # Offset: 1384
    0000056a: 	movq	0xb0(%rsp), %rax
    00000572: 	leaq	0x1(%rax), %rsi
    00000576: 	callq	_ZdlPvm@PLT # Offset: 1398
.Ltmp6590:
    0000057b: 	leaq	DATAat0x571f1(%rip), %rdx
    00000582: 	movq	%r14, %rsi
    00000585: 	movq	%r12, %rdi
    00000588: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1416
    0000058d: 	callq	clock@PLT # Offset: 1421
    00000592: 	movl	iterations(%rip), %ecx
    00000598: 	movl	$0x0, (%rsp)
    0000059f: 	movq	%rax, start_time(%rip)
    000005a6: 	testl	%ecx, %ecx
    000005a8: 	jle	.Ltmp6591 # Offset: 1448
    000005ae: 	nop # Size: 2
.Ltmp6594:
    000005b0: 	movq	%rbp, %rax
    000005b3: 	pxor	%xmm1, %xmm1
    000005b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6592:
    000005c0: 	movdqa	(%rax), %xmm0
    000005c4: 	addq	$0x10, %rax
    000005c8: 	pslld	$0x1, %xmm0
    000005cd: 	paddd	%xmm0, %xmm1
    000005d1: 	cmpq	%rbx, %rax
    000005d4: 	jne	.Ltmp6592 # Offset: 1492
    000005d6: 	movdqa	%xmm1, %xmm0
    000005da: 	cvttsd2si	init_value(%rip), %edx
    000005e2: 	psrldq	$0x8, %xmm0
    000005e7: 	paddd	%xmm0, %xmm1
    000005eb: 	movdqa	%xmm1, %xmm0
    000005ef: 	psrldq	$0x4, %xmm0
    000005f4: 	imull	$0x3e80, %edx, %edx
    000005fa: 	paddd	%xmm0, %xmm1
    000005fe: 	movd	%xmm1, %eax
    00000602: 	cmpl	%eax, %edx
    00000604: 	je	.Ltmp6593 # Offset: 1540
    00000606: 	movl	current_test(%rip), %edx
    0000060c: 	leaq	DATAat0x571d0(%rip), %rsi
    00000613: 	movl	$0x1, %edi
    00000618: 	xorl	%eax, %eax
    0000061a: 	callq	__printf_chk@PLT # Offset: 1562
    0000061f: 	movl	iterations(%rip), %ecx
.Ltmp6593:
    00000625: 	addl	$0x1, (%rsp)
    00000629: 	movl	(%rsp), %eax
    0000062c: 	cmpl	%ecx, %eax
    0000062e: 	jl	.Ltmp6594 # Offset: 1582
.Ltmp6591:
    00000630: 	movq	%r12, %rsi
    00000633: 	movq	%r15, %rdi
    00000636: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1590
    0000063b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000642: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000649: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000650: 	je	.Ltmp6595 # Offset: 1616
.Ltmp7047:
    00000656: 	movq	-0x20(%rax), %rdi
    0000065a: 	movq	%rdi, (%rsp)
    0000065e: 	callq	clock@PLT # Offset: 1630
    00000663: 	movq	(%rsp), %rdi
    00000667: 	pxor	%xmm0, %xmm0
    0000066b: 	movq	%rax, end_time(%rip)
    00000672: 	subq	start_time(%rip), %rax
    00000679: 	cvtsi2sd	%rax, %xmm0
    0000067e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000686: 	callq	_Z13record_resultdPKc # Offset: 1670
    0000068b: 	movq	0xa0(%rsp), %rdi
    00000693: 	cmpq	%r13, %rdi
    00000696: 	je	.Ltmp6596 # Offset: 1686
    00000698: 	movq	0xb0(%rsp), %rax
    000006a0: 	leaq	0x1(%rax), %rsi
    000006a4: 	callq	_ZdlPvm@PLT # Offset: 1700
.Ltmp6596:
    000006a9: 	leaq	DATAat0x571fb(%rip), %rdx
    000006b0: 	movq	%r14, %rsi
    000006b3: 	movq	%r12, %rdi
    000006b6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1718
    000006bb: 	callq	clock@PLT # Offset: 1723
    000006c0: 	movl	iterations(%rip), %ecx
    000006c6: 	movl	$0x0, (%rsp)
    000006cd: 	movq	%rax, start_time(%rip)
    000006d4: 	testl	%ecx, %ecx
    000006d6: 	jle	.Ltmp6597 # Offset: 1750
    000006dc: 	nopl	(%rax) # Size: 4
.Ltmp6600:
    000006e0: 	movq	%rbp, %rax
    000006e3: 	pxor	%xmm1, %xmm1
    000006e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6598:
    000006f0: 	movdqa	(%rax), %xmm0
    000006f4: 	addq	$0x10, %rax
    000006f8: 	pslld	$0x1, %xmm0
    000006fd: 	paddd	%xmm0, %xmm1
    00000701: 	cmpq	%rax, %rbx
    00000704: 	jne	.Ltmp6598 # Offset: 1796
    00000706: 	movdqa	%xmm1, %xmm0
    0000070a: 	cvttsd2si	init_value(%rip), %edx
    00000712: 	psrldq	$0x8, %xmm0
    00000717: 	paddd	%xmm0, %xmm1
    0000071b: 	movdqa	%xmm1, %xmm0
    0000071f: 	psrldq	$0x4, %xmm0
    00000724: 	imull	$0x3e80, %edx, %edx
    0000072a: 	paddd	%xmm0, %xmm1
    0000072e: 	movd	%xmm1, %eax
    00000732: 	cmpl	%eax, %edx
    00000734: 	je	.Ltmp6599 # Offset: 1844
    00000736: 	movl	current_test(%rip), %edx
    0000073c: 	leaq	DATAat0x571d0(%rip), %rsi
    00000743: 	movl	$0x1, %edi
    00000748: 	xorl	%eax, %eax
    0000074a: 	callq	__printf_chk@PLT # Offset: 1866
    0000074f: 	movl	iterations(%rip), %ecx
.Ltmp6599:
    00000755: 	addl	$0x1, (%rsp)
    00000759: 	movl	(%rsp), %eax
    0000075c: 	cmpl	%ecx, %eax
    0000075e: 	jl	.Ltmp6600 # Offset: 1886
.Ltmp6597:
    00000760: 	movq	%r12, %rsi
    00000763: 	movq	%r15, %rdi
    00000766: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1894
    0000076b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000772: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000779: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000780: 	je	.Ltmp6601 # Offset: 1920
.Ltmp7046:
    00000786: 	movq	-0x20(%rax), %rdi
    0000078a: 	movq	%rdi, (%rsp)
    0000078e: 	callq	clock@PLT # Offset: 1934
    00000793: 	movq	(%rsp), %rdi
    00000797: 	pxor	%xmm0, %xmm0
    0000079b: 	movq	%rax, end_time(%rip)
    000007a2: 	subq	start_time(%rip), %rax
    000007a9: 	cvtsi2sd	%rax, %xmm0
    000007ae: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000007b6: 	callq	_Z13record_resultdPKc # Offset: 1974
    000007bb: 	movq	0xa0(%rsp), %rdi
    000007c3: 	cmpq	%r13, %rdi
    000007c6: 	je	.Ltmp6602 # Offset: 1990
    000007c8: 	movq	0xb0(%rsp), %rax
    000007d0: 	leaq	0x1(%rax), %rsi
    000007d4: 	callq	_ZdlPvm@PLT # Offset: 2004
.Ltmp6602:
    000007d9: 	leaq	DATAat0x57211(%rip), %rdx
    000007e0: 	movq	%r14, %rsi
    000007e3: 	movq	%r12, %rdi
    000007e6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2022
    000007eb: 	movq	%r12, %rcx
    000007ee: 	movl	$0x2, %edx
    000007f3: 	movl	$0x1f40, %esi
    000007f8: 	movq	%rbp, %rdi
    000007fb: 	callq	_Z14test_variable1Ii24custom_multiply_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2043
    00000800: 	movq	0xa0(%rsp), %rdi
    00000808: 	cmpq	%r13, %rdi
    0000080b: 	je	.Ltmp6603 # Offset: 2059
    0000080d: 	movq	0xb0(%rsp), %rax
    00000815: 	leaq	0x1(%rax), %rsi
    00000819: 	callq	_ZdlPvm@PLT # Offset: 2073
.Ltmp6603:
    0000081e: 	leaq	DATAat0x57229(%rip), %rdx
    00000825: 	movq	%r14, %rsi
    00000828: 	movq	%r12, %rdi
    0000082b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2091
    00000830: 	callq	clock@PLT # Offset: 2096
    00000835: 	movl	iterations(%rip), %ecx
    0000083b: 	movl	$0x0, (%rsp)
    00000842: 	movq	%rax, start_time(%rip)
    00000849: 	testl	%ecx, %ecx
    0000084b: 	jle	.Ltmp6604 # Offset: 2123
    00000851: 	nopl	(%rax) # Size: 7
.Ltmp6607:
    00000858: 	movq	%rbp, %rax
    0000085b: 	pxor	%xmm1, %xmm1
    0000085f: 	nop # Size: 1
.Ltmp6605:
    00000860: 	movdqa	(%rax), %xmm0
    00000864: 	addq	$0x10, %rax
    00000868: 	pslld	$0x1, %xmm0
    0000086d: 	paddd	%xmm0, %xmm1
    00000871: 	cmpq	%rbx, %rax
    00000874: 	jne	.Ltmp6605 # Offset: 2164
    00000876: 	movdqa	%xmm1, %xmm0
    0000087a: 	cvttsd2si	init_value(%rip), %edx
    00000882: 	psrldq	$0x8, %xmm0
    00000887: 	paddd	%xmm0, %xmm1
    0000088b: 	movdqa	%xmm1, %xmm0
    0000088f: 	psrldq	$0x4, %xmm0
    00000894: 	imull	$0x3e80, %edx, %edx
    0000089a: 	paddd	%xmm0, %xmm1
    0000089e: 	movd	%xmm1, %eax
    000008a2: 	cmpl	%eax, %edx
    000008a4: 	je	.Ltmp6606 # Offset: 2212
    000008a6: 	movl	current_test(%rip), %edx
    000008ac: 	leaq	DATAat0x571d0(%rip), %rsi
    000008b3: 	movl	$0x1, %edi
    000008b8: 	xorl	%eax, %eax
    000008ba: 	callq	__printf_chk@PLT # Offset: 2234
    000008bf: 	movl	iterations(%rip), %ecx
.Ltmp6606:
    000008c5: 	addl	$0x1, (%rsp)
    000008c9: 	movl	(%rsp), %eax
    000008cc: 	cmpl	%ecx, %eax
    000008ce: 	jl	.Ltmp6607 # Offset: 2254
.Ltmp6604:
    000008d0: 	movq	%r12, %rsi
    000008d3: 	movq	%r15, %rdi
    000008d6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2262
    000008db: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008e2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008e9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008f0: 	je	.Ltmp6608 # Offset: 2288
.Ltmp7045:
    000008f6: 	movq	-0x20(%rax), %rdi
    000008fa: 	movq	%rdi, (%rsp)
    000008fe: 	callq	clock@PLT # Offset: 2302
    00000903: 	movq	(%rsp), %rdi
    00000907: 	pxor	%xmm0, %xmm0
    0000090b: 	movq	%rax, end_time(%rip)
    00000912: 	subq	start_time(%rip), %rax
    00000919: 	cvtsi2sd	%rax, %xmm0
    0000091e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000926: 	callq	_Z13record_resultdPKc # Offset: 2342
    0000092b: 	movq	0xa0(%rsp), %rdi
    00000933: 	cmpq	%r13, %rdi
    00000936: 	je	.Ltmp6609 # Offset: 2358
    00000938: 	movq	0xb0(%rsp), %rax
    00000940: 	leaq	0x1(%rax), %rsi
    00000944: 	callq	_ZdlPvm@PLT # Offset: 2372
.Ltmp6609:
    00000949: 	leaq	DATAat0x57241(%rip), %rdx
    00000950: 	movq	%r14, %rsi
    00000953: 	movq	%r12, %rdi
    00000956: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2390
    0000095b: 	movq	%r12, %rdx
    0000095e: 	movl	$0x1f40, %esi
    00000963: 	movq	%rbp, %rdi
    00000966: 	callq	_Z13test_constantIi26custom_multiply_shiftadd_2IiEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2406
    0000096b: 	movq	0xa0(%rsp), %rdi
    00000973: 	cmpq	%r13, %rdi
    00000976: 	je	.Ltmp6610 # Offset: 2422
    00000978: 	movq	0xb0(%rsp), %rax
    00000980: 	leaq	0x1(%rax), %rsi
    00000984: 	callq	_ZdlPvm@PLT # Offset: 2436
.Ltmp6610:
    00000989: 	leaq	DATAat0x57251(%rip), %rdx
    00000990: 	movq	%r14, %rsi
    00000993: 	movq	%r12, %rdi
    00000996: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2454
    0000099b: 	callq	clock@PLT # Offset: 2459
    000009a0: 	movl	iterations(%rip), %ecx
    000009a6: 	movl	$0x0, (%rsp)
    000009ad: 	movq	%rax, start_time(%rip)
    000009b4: 	testl	%ecx, %ecx
    000009b6: 	jle	.Ltmp6611 # Offset: 2486
    000009bc: 	nopl	(%rax) # Size: 4
.Ltmp6614:
    000009c0: 	movq	%rbp, %rax
    000009c3: 	pxor	%xmm1, %xmm1
    000009c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6612:
    000009d0: 	movdqa	(%rax), %xmm0
    000009d4: 	addq	$0x10, %rax
    000009d8: 	pslld	$0x3, %xmm0
    000009dd: 	paddd	%xmm0, %xmm1
    000009e1: 	cmpq	%rax, %rbx
    000009e4: 	jne	.Ltmp6612 # Offset: 2532
    000009e6: 	cvttsd2si	init_value(%rip), %edx
    000009ee: 	movdqa	%xmm1, %xmm0
    000009f2: 	psrldq	$0x8, %xmm0
    000009f7: 	paddd	%xmm0, %xmm1
    000009fb: 	movdqa	%xmm1, %xmm0
    000009ff: 	shll	$0x3, %edx
    00000a02: 	psrldq	$0x4, %xmm0
    00000a07: 	imull	$0x1f40, %edx, %edx
    00000a0d: 	paddd	%xmm0, %xmm1
    00000a11: 	movd	%xmm1, %eax
    00000a15: 	cmpl	%eax, %edx
    00000a17: 	je	.Ltmp6613 # Offset: 2583
    00000a19: 	movl	current_test(%rip), %edx
    00000a1f: 	leaq	DATAat0x571d0(%rip), %rsi
    00000a26: 	movl	$0x1, %edi
    00000a2b: 	xorl	%eax, %eax
    00000a2d: 	callq	__printf_chk@PLT # Offset: 2605
    00000a32: 	movl	iterations(%rip), %ecx
.Ltmp6613:
    00000a38: 	addl	$0x1, (%rsp)
    00000a3c: 	movl	(%rsp), %eax
    00000a3f: 	cmpl	%ecx, %eax
    00000a41: 	jl	.Ltmp6614 # Offset: 2625
.Ltmp6611:
    00000a47: 	movq	%r12, %rsi
    00000a4a: 	movq	%r15, %rdi
    00000a4d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2637
    00000a52: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a59: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a60: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a67: 	je	.Ltmp6615 # Offset: 2663
.Ltmp7044:
    00000a6d: 	movq	-0x20(%rax), %rdi
    00000a71: 	movq	%rdi, (%rsp)
    00000a75: 	callq	clock@PLT # Offset: 2677
    00000a7a: 	movq	(%rsp), %rdi
    00000a7e: 	pxor	%xmm0, %xmm0
    00000a82: 	movq	%rax, end_time(%rip)
    00000a89: 	subq	start_time(%rip), %rax
    00000a90: 	cvtsi2sd	%rax, %xmm0
    00000a95: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000a9d: 	callq	_Z13record_resultdPKc # Offset: 2717
    00000aa2: 	movq	0xa0(%rsp), %rdi
    00000aaa: 	cmpq	%r13, %rdi
    00000aad: 	je	.Ltmp6616 # Offset: 2733
    00000aaf: 	movq	0xb0(%rsp), %rax
    00000ab7: 	leaq	0x1(%rax), %rsi
    00000abb: 	callq	_ZdlPvm@PLT # Offset: 2747
.Ltmp6616:
    00000ac0: 	leaq	DATAat0x57262(%rip), %rdx
    00000ac7: 	movq	%r14, %rsi
    00000aca: 	movq	%r12, %rdi
    00000acd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2765
    00000ad2: 	movq	%r12, %rcx
    00000ad5: 	movl	$0x8, %edx
    00000ada: 	movl	$0x1f40, %esi
    00000adf: 	movq	%rbp, %rdi
    00000ae2: 	callq	_Z14test_variable1Ii24custom_multiply_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2786
    00000ae7: 	movq	0xa0(%rsp), %rdi
    00000aef: 	cmpq	%r13, %rdi
    00000af2: 	je	.Ltmp6617 # Offset: 2802
    00000af4: 	movq	0xb0(%rsp), %rax
    00000afc: 	leaq	0x1(%rax), %rsi
    00000b00: 	callq	_ZdlPvm@PLT # Offset: 2816
.Ltmp6617:
    00000b05: 	leaq	DATAat0x5727a(%rip), %rdx
    00000b0c: 	movq	%r14, %rsi
    00000b0f: 	movq	%r12, %rdi
    00000b12: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2834
    00000b17: 	callq	clock@PLT # Offset: 2839
    00000b1c: 	movl	iterations(%rip), %ecx
    00000b22: 	movl	$0x0, (%rsp)
    00000b29: 	movq	%rax, start_time(%rip)
    00000b30: 	testl	%ecx, %ecx
    00000b32: 	jle	.Ltmp6618 # Offset: 2866
    00000b34: 	nopl	(%rax) # Size: 4
.Ltmp6621:
    00000b38: 	movq	%rbp, %rax
    00000b3b: 	pxor	%xmm1, %xmm1
    00000b3f: 	nop # Size: 1
.Ltmp6619:
    00000b40: 	movdqa	(%rax), %xmm0
    00000b44: 	addq	$0x10, %rax
    00000b48: 	pslld	$0x3, %xmm0
    00000b4d: 	paddd	%xmm0, %xmm1
    00000b51: 	cmpq	%rbx, %rax
    00000b54: 	jne	.Ltmp6619 # Offset: 2900
    00000b56: 	movdqa	%xmm1, %xmm0
    00000b5a: 	cvttsd2si	init_value(%rip), %edx
    00000b62: 	psrldq	$0x8, %xmm0
    00000b67: 	paddd	%xmm0, %xmm1
    00000b6b: 	movdqa	%xmm1, %xmm0
    00000b6f: 	psrldq	$0x4, %xmm0
    00000b74: 	imull	$0xfa00, %edx, %edx
    00000b7a: 	paddd	%xmm0, %xmm1
    00000b7e: 	movd	%xmm1, %eax
    00000b82: 	cmpl	%eax, %edx
    00000b84: 	je	.Ltmp6620 # Offset: 2948
    00000b86: 	movl	current_test(%rip), %edx
    00000b8c: 	leaq	DATAat0x571d0(%rip), %rsi
    00000b93: 	movl	$0x1, %edi
    00000b98: 	xorl	%eax, %eax
    00000b9a: 	callq	__printf_chk@PLT # Offset: 2970
    00000b9f: 	movl	iterations(%rip), %ecx
.Ltmp6620:
    00000ba5: 	addl	$0x1, (%rsp)
    00000ba9: 	movl	(%rsp), %eax
    00000bac: 	cmpl	%ecx, %eax
    00000bae: 	jl	.Ltmp6621 # Offset: 2990
.Ltmp6618:
    00000bb0: 	movq	%r12, %rsi
    00000bb3: 	movq	%r15, %rdi
    00000bb6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2998
    00000bbb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000bc2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000bc9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000bd0: 	je	.Ltmp6622 # Offset: 3024
.Ltmp7043:
    00000bd6: 	movq	-0x20(%rax), %rdi
    00000bda: 	movq	%rdi, (%rsp)
    00000bde: 	callq	clock@PLT # Offset: 3038
    00000be3: 	movq	(%rsp), %rdi
    00000be7: 	pxor	%xmm0, %xmm0
    00000beb: 	movq	%rax, end_time(%rip)
    00000bf2: 	subq	start_time(%rip), %rax
    00000bf9: 	cvtsi2sd	%rax, %xmm0
    00000bfe: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000c06: 	callq	_Z13record_resultdPKc # Offset: 3078
    00000c0b: 	movq	0xa0(%rsp), %rdi
    00000c13: 	cmpq	%r13, %rdi
    00000c16: 	je	.Ltmp6623 # Offset: 3094
    00000c18: 	movq	0xb0(%rsp), %rax
    00000c20: 	leaq	0x1(%rax), %rsi
    00000c24: 	callq	_ZdlPvm@PLT # Offset: 3108
.Ltmp6623:
    00000c29: 	leaq	DATAat0x57292(%rip), %rdx
    00000c30: 	movq	%r14, %rsi
    00000c33: 	movq	%r12, %rdi
    00000c36: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3126
    00000c3b: 	callq	clock@PLT # Offset: 3131
    00000c40: 	movl	iterations(%rip), %ecx
    00000c46: 	movl	$0x0, (%rsp)
    00000c4d: 	movq	%rax, start_time(%rip)
    00000c54: 	testl	%ecx, %ecx
    00000c56: 	jle	.Ltmp6624 # Offset: 3158
    00000c5c: 	nopl	(%rax) # Size: 4
.Ltmp6627:
    00000c60: 	movq	%rbp, %rax
    00000c63: 	pxor	%xmm1, %xmm1
    00000c67: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6625:
    00000c70: 	movdqa	(%rax), %xmm0
    00000c74: 	addq	$0x10, %rax
    00000c78: 	pslld	$0x6, %xmm0
    00000c7d: 	paddd	%xmm0, %xmm1
    00000c81: 	cmpq	%rax, %rbx
    00000c84: 	jne	.Ltmp6625 # Offset: 3204
    00000c86: 	cvttsd2si	init_value(%rip), %edx
    00000c8e: 	movdqa	%xmm1, %xmm0
    00000c92: 	psrldq	$0x8, %xmm0
    00000c97: 	paddd	%xmm0, %xmm1
    00000c9b: 	movdqa	%xmm1, %xmm0
    00000c9f: 	shll	$0x6, %edx
    00000ca2: 	psrldq	$0x4, %xmm0
    00000ca7: 	imull	$0x1f40, %edx, %edx
    00000cad: 	paddd	%xmm0, %xmm1
    00000cb1: 	movd	%xmm1, %eax
    00000cb5: 	cmpl	%eax, %edx
    00000cb7: 	je	.Ltmp6626 # Offset: 3255
    00000cb9: 	movl	current_test(%rip), %edx
    00000cbf: 	leaq	DATAat0x571d0(%rip), %rsi
    00000cc6: 	movl	$0x1, %edi
    00000ccb: 	xorl	%eax, %eax
    00000ccd: 	callq	__printf_chk@PLT # Offset: 3277
    00000cd2: 	movl	iterations(%rip), %ecx
.Ltmp6626:
    00000cd8: 	addl	$0x1, (%rsp)
    00000cdc: 	movl	(%rsp), %eax
    00000cdf: 	cmpl	%ecx, %eax
    00000ce1: 	jl	.Ltmp6627 # Offset: 3297
.Ltmp6624:
    00000ce7: 	movq	%r12, %rsi
    00000cea: 	movq	%r15, %rdi
    00000ced: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3309
    00000cf2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000cf9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d00: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d07: 	je	.Ltmp6628 # Offset: 3335
.Ltmp7042:
    00000d0d: 	movq	-0x20(%rax), %rdi
    00000d11: 	movq	%rdi, (%rsp)
    00000d15: 	callq	clock@PLT # Offset: 3349
    00000d1a: 	movq	(%rsp), %rdi
    00000d1e: 	pxor	%xmm0, %xmm0
    00000d22: 	movq	%rax, end_time(%rip)
    00000d29: 	subq	start_time(%rip), %rax
    00000d30: 	cvtsi2sd	%rax, %xmm0
    00000d35: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000d3d: 	callq	_Z13record_resultdPKc # Offset: 3389
    00000d42: 	movq	0xa0(%rsp), %rdi
    00000d4a: 	cmpq	%r13, %rdi
    00000d4d: 	je	.Ltmp6629 # Offset: 3405
    00000d4f: 	movq	0xb0(%rsp), %rax
    00000d57: 	leaq	0x1(%rax), %rsi
    00000d5b: 	callq	_ZdlPvm@PLT # Offset: 3419
.Ltmp6629:
    00000d60: 	leaq	DATAat0x572a3(%rip), %rdx
    00000d67: 	movq	%r14, %rsi
    00000d6a: 	movq	%r12, %rdi
    00000d6d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3437
    00000d72: 	movq	%r12, %rcx
    00000d75: 	movl	$0x40, %edx
    00000d7a: 	movl	$0x1f40, %esi
    00000d7f: 	movq	%rbp, %rdi
    00000d82: 	callq	_Z14test_variable1Ii24custom_multiply_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3458
    00000d87: 	movq	0xa0(%rsp), %rdi
    00000d8f: 	cmpq	%r13, %rdi
    00000d92: 	je	.Ltmp6630 # Offset: 3474
    00000d94: 	movq	0xb0(%rsp), %rax
    00000d9c: 	leaq	0x1(%rax), %rsi
    00000da0: 	callq	_ZdlPvm@PLT # Offset: 3488
.Ltmp6630:
    00000da5: 	leaq	DATAat0x572bc(%rip), %rdx
    00000dac: 	movq	%r14, %rsi
    00000daf: 	movq	%r12, %rdi
    00000db2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3506
    00000db7: 	callq	clock@PLT # Offset: 3511
    00000dbc: 	movl	iterations(%rip), %ecx
    00000dc2: 	movl	$0x0, (%rsp)
    00000dc9: 	movq	%rax, start_time(%rip)
    00000dd0: 	testl	%ecx, %ecx
    00000dd2: 	jle	.Ltmp6631 # Offset: 3538
    00000dd4: 	nopl	(%rax) # Size: 4
.Ltmp6634:
    00000dd8: 	movq	%rbp, %rax
    00000ddb: 	pxor	%xmm1, %xmm1
    00000ddf: 	nop # Size: 1
.Ltmp6632:
    00000de0: 	movdqa	(%rax), %xmm0
    00000de4: 	addq	$0x10, %rax
    00000de8: 	pslld	$0x6, %xmm0
    00000ded: 	paddd	%xmm0, %xmm1
    00000df1: 	cmpq	%rbx, %rax
    00000df4: 	jne	.Ltmp6632 # Offset: 3572
    00000df6: 	movdqa	%xmm1, %xmm0
    00000dfa: 	cvttsd2si	init_value(%rip), %edx
    00000e02: 	psrldq	$0x8, %xmm0
    00000e07: 	paddd	%xmm0, %xmm1
    00000e0b: 	movdqa	%xmm1, %xmm0
    00000e0f: 	psrldq	$0x4, %xmm0
    00000e14: 	imull	$0x7d000, %edx, %edx
    00000e1a: 	paddd	%xmm0, %xmm1
    00000e1e: 	movd	%xmm1, %eax
    00000e22: 	cmpl	%eax, %edx
    00000e24: 	je	.Ltmp6633 # Offset: 3620
    00000e26: 	movl	current_test(%rip), %edx
    00000e2c: 	leaq	DATAat0x571d0(%rip), %rsi
    00000e33: 	movl	$0x1, %edi
    00000e38: 	xorl	%eax, %eax
    00000e3a: 	callq	__printf_chk@PLT # Offset: 3642
    00000e3f: 	movl	iterations(%rip), %ecx
.Ltmp6633:
    00000e45: 	addl	$0x1, (%rsp)
    00000e49: 	movl	(%rsp), %eax
    00000e4c: 	cmpl	%ecx, %eax
    00000e4e: 	jl	.Ltmp6634 # Offset: 3662
.Ltmp6631:
    00000e50: 	movq	%r12, %rsi
    00000e53: 	movq	%r15, %rdi
    00000e56: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3670
    00000e5b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e62: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e69: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e70: 	je	.Ltmp6635 # Offset: 3696
.Ltmp7041:
    00000e76: 	movq	-0x20(%rax), %rdi
    00000e7a: 	movq	%rdi, (%rsp)
    00000e7e: 	callq	clock@PLT # Offset: 3710
    00000e83: 	movq	(%rsp), %rdi
    00000e87: 	pxor	%xmm0, %xmm0
    00000e8b: 	movq	%rax, end_time(%rip)
    00000e92: 	subq	start_time(%rip), %rax
    00000e99: 	cvtsi2sd	%rax, %xmm0
    00000e9e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000ea6: 	callq	_Z13record_resultdPKc # Offset: 3750
    00000eab: 	movq	0xa0(%rsp), %rdi
    00000eb3: 	cmpq	%r13, %rdi
    00000eb6: 	je	.Ltmp6636 # Offset: 3766
    00000eb8: 	movq	0xb0(%rsp), %rax
    00000ec0: 	leaq	0x1(%rax), %rsi
    00000ec4: 	callq	_ZdlPvm@PLT # Offset: 3780
.Ltmp6636:
    00000ec9: 	leaq	DATAat0x572d5(%rip), %rdx
    00000ed0: 	movq	%r14, %rsi
    00000ed3: 	movq	%r12, %rdi
    00000ed6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3798
    00000edb: 	movq	%r12, %rcx
    00000ede: 	movl	$0x2a, %edx
    00000ee3: 	movl	$0x1f40, %esi
    00000ee8: 	movq	%rbp, %rdi
    00000eeb: 	callq	_Z14test_variable1Ii24custom_multiply_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3819
    00000ef0: 	movq	0xa0(%rsp), %rdi
    00000ef8: 	cmpq	%r13, %rdi
    00000efb: 	je	.Ltmp6637 # Offset: 3835
    00000efd: 	movq	0xb0(%rsp), %rax
    00000f05: 	leaq	0x1(%rax), %rsi
    00000f09: 	callq	_ZdlPvm@PLT # Offset: 3849
.Ltmp6637:
    00000f0e: 	leaq	DATAat0x572ee(%rip), %rdx
    00000f15: 	movq	%r14, %rsi
    00000f18: 	movq	%r12, %rdi
    00000f1b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3867
    00000f20: 	callq	clock@PLT # Offset: 3872
    00000f25: 	movl	iterations(%rip), %ecx
    00000f2b: 	movl	$0x0, (%rsp)
    00000f32: 	movq	%rax, start_time(%rip)
    00000f39: 	testl	%ecx, %ecx
    00000f3b: 	jle	.Ltmp6638 # Offset: 3899
    00000f41: 	nopl	(%rax) # Size: 7
.Ltmp6641:
    00000f48: 	movq	%rbp, %rax
    00000f4b: 	pxor	%xmm2, %xmm2
    00000f4f: 	nop # Size: 1
.Ltmp6639:
    00000f50: 	movdqa	(%rax), %xmm1
    00000f54: 	addq	$0x10, %rax
    00000f58: 	movdqa	%xmm1, %xmm0
    00000f5c: 	pslld	$0x2, %xmm0
    00000f61: 	paddd	%xmm1, %xmm0
    00000f65: 	pslld	$0x2, %xmm0
    00000f6a: 	paddd	%xmm1, %xmm0
    00000f6e: 	pslld	$0x1, %xmm0
    00000f73: 	paddd	%xmm0, %xmm2
    00000f77: 	cmpq	%rbx, %rax
    00000f7a: 	jne	.Ltmp6639 # Offset: 3962
    00000f7c: 	movdqa	%xmm2, %xmm0
    00000f80: 	cvttsd2si	init_value(%rip), %edx
    00000f88: 	psrldq	$0x8, %xmm0
    00000f8d: 	paddd	%xmm0, %xmm2
    00000f91: 	movdqa	%xmm2, %xmm0
    00000f95: 	psrldq	$0x4, %xmm0
    00000f9a: 	imull	$0x52080, %edx, %edx
    00000fa0: 	paddd	%xmm0, %xmm2
    00000fa4: 	movd	%xmm2, %eax
    00000fa8: 	cmpl	%eax, %edx
    00000faa: 	je	.Ltmp6640 # Offset: 4010
    00000fac: 	movl	current_test(%rip), %edx
    00000fb2: 	leaq	DATAat0x571d0(%rip), %rsi
    00000fb9: 	movl	$0x1, %edi
    00000fbe: 	xorl	%eax, %eax
    00000fc0: 	callq	__printf_chk@PLT # Offset: 4032
    00000fc5: 	movl	iterations(%rip), %ecx
.Ltmp6640:
    00000fcb: 	addl	$0x1, (%rsp)
    00000fcf: 	movl	(%rsp), %eax
    00000fd2: 	cmpl	%ecx, %eax
    00000fd4: 	jl	.Ltmp6641 # Offset: 4052
.Ltmp6638:
    00000fda: 	movq	%r12, %rsi
    00000fdd: 	movq	%r15, %rdi
    00000fe0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4064
    00000fe5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000fec: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ff3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ffa: 	je	.Ltmp6642 # Offset: 4090
.Ltmp7040:
    00001000: 	movq	-0x20(%rax), %rdi
    00001004: 	movq	%rdi, (%rsp)
    00001008: 	callq	clock@PLT # Offset: 4104
    0000100d: 	movq	(%rsp), %rdi
    00001011: 	pxor	%xmm0, %xmm0
    00001015: 	movq	%rax, end_time(%rip)
    0000101c: 	subq	start_time(%rip), %rax
    00001023: 	cvtsi2sd	%rax, %xmm0
    00001028: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001030: 	callq	_Z13record_resultdPKc # Offset: 4144
    00001035: 	movq	0xa0(%rsp), %rdi
    0000103d: 	cmpq	%r13, %rdi
    00001040: 	je	.Ltmp6643 # Offset: 4160
    00001042: 	movq	0xb0(%rsp), %rax
    0000104a: 	leaq	0x1(%rax), %rsi
    0000104e: 	callq	_ZdlPvm@PLT # Offset: 4174
.Ltmp6643:
    00001053: 	leaq	DATAat0x57307(%rip), %rdx
    0000105a: 	movq	%r14, %rsi
    0000105d: 	movq	%r12, %rdi
    00001060: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4192
    00001065: 	movq	%r12, %rdx
    00001068: 	movl	$0x1f40, %esi
    0000106d: 	movq	%rbp, %rdi
    00001070: 	callq	_Z13test_constantIi27custom_multiply_shiftadd_42IiEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4208
    00001075: 	movq	0xa0(%rsp), %rdi
    0000107d: 	cmpq	%r13, %rdi
    00001080: 	je	.Ltmp6644 # Offset: 4224
    00001082: 	movq	0xb0(%rsp), %rax
    0000108a: 	leaq	0x1(%rax), %rsi
    0000108e: 	callq	_ZdlPvm@PLT # Offset: 4238
.Ltmp6644:
    00001093: 	leaq	DATAat0x57318(%rip), %rdx
    0000109a: 	movq	%r14, %rsi
    0000109d: 	movq	%r12, %rdi
    000010a0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4256
    000010a5: 	movq	%r12, %rcx
    000010a8: 	movl	$0x3f, %edx
    000010ad: 	movl	$0x1f40, %esi
    000010b2: 	movq	%rbp, %rdi
    000010b5: 	callq	_Z14test_variable1Ii24custom_multiply_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4277
    000010ba: 	movq	0xa0(%rsp), %rdi
    000010c2: 	cmpq	%r13, %rdi
    000010c5: 	je	.Ltmp6645 # Offset: 4293
    000010c7: 	movq	0xb0(%rsp), %rax
    000010cf: 	leaq	0x1(%rax), %rsi
    000010d3: 	callq	_ZdlPvm@PLT # Offset: 4307
.Ltmp6645:
    000010d8: 	leaq	DATAat0x57331(%rip), %rdx
    000010df: 	movq	%r14, %rsi
    000010e2: 	movq	%r12, %rdi
    000010e5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4325
    000010ea: 	callq	clock@PLT # Offset: 4330
    000010ef: 	movl	iterations(%rip), %ecx
    000010f5: 	movl	$0x0, (%rsp)
    000010fc: 	movq	%rax, start_time(%rip)
    00001103: 	testl	%ecx, %ecx
    00001105: 	jle	.Ltmp6646 # Offset: 4357
    0000110b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6649:
    00001110: 	movq	%rbp, %rax
    00001113: 	pxor	%xmm1, %xmm1
    00001117: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6647:
    00001120: 	movdqa	(%rax), %xmm0
    00001124: 	addq	$0x10, %rax
    00001128: 	pslld	$0x6, %xmm0
    0000112d: 	psubd	-0x10(%rax), %xmm0
    00001132: 	paddd	%xmm0, %xmm1
    00001136: 	cmpq	%rbx, %rax
    00001139: 	jne	.Ltmp6647 # Offset: 4409
    0000113b: 	movdqa	%xmm1, %xmm0
    0000113f: 	cvttsd2si	init_value(%rip), %edx
    00001147: 	psrldq	$0x8, %xmm0
    0000114c: 	paddd	%xmm0, %xmm1
    00001150: 	movdqa	%xmm1, %xmm0
    00001154: 	psrldq	$0x4, %xmm0
    00001159: 	imull	$0x7b0c0, %edx, %edx
    0000115f: 	paddd	%xmm0, %xmm1
    00001163: 	movd	%xmm1, %eax
    00001167: 	cmpl	%eax, %edx
    00001169: 	je	.Ltmp6648 # Offset: 4457
    0000116b: 	movl	current_test(%rip), %edx
    00001171: 	leaq	DATAat0x571d0(%rip), %rsi
    00001178: 	movl	$0x1, %edi
    0000117d: 	xorl	%eax, %eax
    0000117f: 	callq	__printf_chk@PLT # Offset: 4479
    00001184: 	movl	iterations(%rip), %ecx
.Ltmp6648:
    0000118a: 	addl	$0x1, (%rsp)
    0000118e: 	movl	(%rsp), %eax
    00001191: 	cmpl	%ecx, %eax
    00001193: 	jl	.Ltmp6649 # Offset: 4499
.Ltmp6646:
    00001199: 	movq	%r12, %rsi
    0000119c: 	movq	%r15, %rdi
    0000119f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4511
    000011a4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011ab: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011b2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011b9: 	je	.Ltmp6650 # Offset: 4537
.Ltmp7039:
    000011bf: 	movq	-0x20(%rax), %rdi
    000011c3: 	movq	%rdi, (%rsp)
    000011c7: 	callq	clock@PLT # Offset: 4551
    000011cc: 	movq	(%rsp), %rdi
    000011d0: 	pxor	%xmm0, %xmm0
    000011d4: 	movq	%rax, end_time(%rip)
    000011db: 	subq	start_time(%rip), %rax
    000011e2: 	cvtsi2sd	%rax, %xmm0
    000011e7: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000011ef: 	callq	_Z13record_resultdPKc # Offset: 4591
    000011f4: 	movq	0xa0(%rsp), %rdi
    000011fc: 	cmpq	%r13, %rdi
    000011ff: 	je	.Ltmp6651 # Offset: 4607
    00001201: 	movq	0xb0(%rsp), %rax
    00001209: 	leaq	0x1(%rax), %rsi
    0000120d: 	callq	_ZdlPvm@PLT # Offset: 4621
.Ltmp6651:
    00001212: 	leaq	DATAat0x5734a(%rip), %rdx
    00001219: 	movq	%r14, %rsi
    0000121c: 	movq	%r12, %rdi
    0000121f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4639
    00001224: 	callq	clock@PLT # Offset: 4644
    00001229: 	movl	iterations(%rip), %ecx
    0000122f: 	movl	$0x0, (%rsp)
    00001236: 	movq	%rax, start_time(%rip)
    0000123d: 	testl	%ecx, %ecx
    0000123f: 	jle	.Ltmp6652 # Offset: 4671
    00001245: 	nopl	(%rax) # Size: 3
.Ltmp6655:
    00001248: 	movq	%rbp, %rax
    0000124b: 	pxor	%xmm1, %xmm1
    0000124f: 	nop # Size: 1
.Ltmp6653:
    00001250: 	movdqa	(%rax), %xmm0
    00001254: 	addq	$0x10, %rax
    00001258: 	pslld	$0x6, %xmm0
    0000125d: 	psubd	-0x10(%rax), %xmm0
    00001262: 	paddd	%xmm0, %xmm1
    00001266: 	cmpq	%rbx, %rax
    00001269: 	jne	.Ltmp6653 # Offset: 4713
    0000126b: 	movdqa	%xmm1, %xmm0
    0000126f: 	cvttsd2si	init_value(%rip), %edx
    00001277: 	psrldq	$0x8, %xmm0
    0000127c: 	paddd	%xmm0, %xmm1
    00001280: 	movdqa	%xmm1, %xmm0
    00001284: 	psrldq	$0x4, %xmm0
    00001289: 	imull	$0x7b0c0, %edx, %edx
    0000128f: 	paddd	%xmm0, %xmm1
    00001293: 	movd	%xmm1, %eax
    00001297: 	cmpl	%eax, %edx
    00001299: 	je	.Ltmp6654 # Offset: 4761
    0000129b: 	movl	current_test(%rip), %edx
    000012a1: 	leaq	DATAat0x571d0(%rip), %rsi
    000012a8: 	movl	$0x1, %edi
    000012ad: 	xorl	%eax, %eax
    000012af: 	callq	__printf_chk@PLT # Offset: 4783
    000012b4: 	movl	iterations(%rip), %ecx
.Ltmp6654:
    000012ba: 	addl	$0x1, (%rsp)
    000012be: 	movl	(%rsp), %eax
    000012c1: 	cmpl	%ecx, %eax
    000012c3: 	jl	.Ltmp6655 # Offset: 4803
.Ltmp6652:
    000012c5: 	movq	%r12, %rsi
    000012c8: 	movq	%r15, %rdi
    000012cb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4811
    000012d0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012d7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000012de: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012e5: 	je	.Ltmp6656 # Offset: 4837
.Ltmp7038:
    000012eb: 	movq	-0x20(%rax), %rdi
    000012ef: 	movq	%rdi, (%rsp)
    000012f3: 	callq	clock@PLT # Offset: 4851
    000012f8: 	movq	(%rsp), %rdi
    000012fc: 	pxor	%xmm0, %xmm0
    00001300: 	movq	%rax, end_time(%rip)
    00001307: 	subq	start_time(%rip), %rax
    0000130e: 	cvtsi2sd	%rax, %xmm0
    00001313: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000131b: 	callq	_Z13record_resultdPKc # Offset: 4891
    00001320: 	movq	0xa0(%rsp), %rdi
    00001328: 	cmpq	%r13, %rdi
    0000132b: 	je	.Ltmp6657 # Offset: 4907
    0000132d: 	movq	0xb0(%rsp), %rax
    00001335: 	leaq	0x1(%rax), %rsi
    00001339: 	callq	_ZdlPvm@PLT # Offset: 4921
.Ltmp6657:
    0000133e: 	leaq	DATAat0x5735b(%rip), %rdx
    00001345: 	movq	%r14, %rsi
    00001348: 	movq	%r12, %rdi
    0000134b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4939
    00001350: 	movq	%r12, %rcx
    00001353: 	movl	$0x43, %edx
    00001358: 	movl	$0x1f40, %esi
    0000135d: 	movq	%rbp, %rdi
    00001360: 	callq	_Z14test_variable1Ii24custom_multiply_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4960
    00001365: 	movq	0xa0(%rsp), %rdi
    0000136d: 	cmpq	%r13, %rdi
    00001370: 	je	.Ltmp6658 # Offset: 4976
    00001372: 	movq	0xb0(%rsp), %rax
    0000137a: 	leaq	0x1(%rax), %rsi
    0000137e: 	callq	_ZdlPvm@PLT # Offset: 4990
.Ltmp6658:
    00001383: 	leaq	DATAat0x57374(%rip), %rdx
    0000138a: 	movq	%r14, %rsi
    0000138d: 	movq	%r12, %rdi
    00001390: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5008
    00001395: 	callq	clock@PLT # Offset: 5013
    0000139a: 	movl	iterations(%rip), %ecx
    000013a0: 	movl	$0x0, (%rsp)
    000013a7: 	movq	%rax, start_time(%rip)
    000013ae: 	testl	%ecx, %ecx
    000013b0: 	jle	.Ltmp6659 # Offset: 5040
    000013b6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp6662:
    000013c0: 	movq	%rbp, %rax
    000013c3: 	pxor	%xmm2, %xmm2
    000013c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6660:
    000013d0: 	movdqa	(%rax), %xmm1
    000013d4: 	addq	$0x10, %rax
    000013d8: 	movdqa	%xmm1, %xmm0
    000013dc: 	pslld	$0x4, %xmm0
    000013e1: 	paddd	%xmm1, %xmm0
    000013e5: 	pslld	$0x2, %xmm0
    000013ea: 	psubd	%xmm1, %xmm0
    000013ee: 	paddd	%xmm0, %xmm2
    000013f2: 	cmpq	%rbx, %rax
    000013f5: 	jne	.Ltmp6660 # Offset: 5109
    000013f7: 	movdqa	%xmm2, %xmm0
    000013fb: 	cvttsd2si	init_value(%rip), %edx
    00001403: 	psrldq	$0x8, %xmm0
    00001408: 	paddd	%xmm0, %xmm2
    0000140c: 	movdqa	%xmm2, %xmm0
    00001410: 	psrldq	$0x4, %xmm0
    00001415: 	imull	$0x82dc0, %edx, %edx
    0000141b: 	paddd	%xmm0, %xmm2
    0000141f: 	movd	%xmm2, %eax
    00001423: 	cmpl	%eax, %edx
    00001425: 	je	.Ltmp6661 # Offset: 5157
    00001427: 	movl	current_test(%rip), %edx
    0000142d: 	leaq	DATAat0x571d0(%rip), %rsi
    00001434: 	movl	$0x1, %edi
    00001439: 	xorl	%eax, %eax
    0000143b: 	callq	__printf_chk@PLT # Offset: 5179
    00001440: 	movl	iterations(%rip), %ecx
.Ltmp6661:
    00001446: 	addl	$0x1, (%rsp)
    0000144a: 	movl	(%rsp), %eax
    0000144d: 	cmpl	%ecx, %eax
    0000144f: 	jl	.Ltmp6662 # Offset: 5199
.Ltmp6659:
    00001455: 	movq	%r12, %rsi
    00001458: 	movq	%r15, %rdi
    0000145b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5211
    00001460: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001467: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000146e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001475: 	je	.Ltmp6663 # Offset: 5237
.Ltmp7037:
    0000147b: 	movq	-0x20(%rax), %rdi
    0000147f: 	movq	%rdi, (%rsp)
    00001483: 	callq	clock@PLT # Offset: 5251
    00001488: 	movq	(%rsp), %rdi
    0000148c: 	pxor	%xmm0, %xmm0
    00001490: 	movq	%rax, end_time(%rip)
    00001497: 	subq	start_time(%rip), %rax
    0000149e: 	cvtsi2sd	%rax, %xmm0
    000014a3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000014ab: 	callq	_Z13record_resultdPKc # Offset: 5291
    000014b0: 	movq	0xa0(%rsp), %rdi
    000014b8: 	cmpq	%r13, %rdi
    000014bb: 	je	.Ltmp6664 # Offset: 5307
    000014bd: 	movq	0xb0(%rsp), %rax
    000014c5: 	leaq	0x1(%rax), %rsi
    000014c9: 	callq	_ZdlPvm@PLT # Offset: 5321
.Ltmp6664:
    000014ce: 	leaq	DATAat0x5738d(%rip), %rdx
    000014d5: 	movq	%r14, %rsi
    000014d8: 	movq	%r12, %rdi
    000014db: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5339
    000014e0: 	callq	clock@PLT # Offset: 5344
    000014e5: 	movl	iterations(%rip), %ecx
    000014eb: 	movl	$0x0, (%rsp)
    000014f2: 	movq	%rax, start_time(%rip)
    000014f9: 	testl	%ecx, %ecx
    000014fb: 	jle	.Ltmp6665 # Offset: 5371
    00001501: 	nopl	(%rax) # Size: 7
.Ltmp6668:
    00001508: 	movq	%rbp, %rax
    0000150b: 	pxor	%xmm2, %xmm2
    0000150f: 	nop # Size: 1
.Ltmp6666:
    00001510: 	movdqa	(%rax), %xmm1
    00001514: 	addq	$0x10, %rax
    00001518: 	movdqa	%xmm1, %xmm0
    0000151c: 	pslld	$0x4, %xmm0
    00001521: 	paddd	%xmm1, %xmm0
    00001525: 	pslld	$0x2, %xmm0
    0000152a: 	psubd	%xmm1, %xmm0
    0000152e: 	paddd	%xmm0, %xmm2
    00001532: 	cmpq	%rbx, %rax
    00001535: 	jne	.Ltmp6666 # Offset: 5429
    00001537: 	movdqa	%xmm2, %xmm0
    0000153b: 	cvttsd2si	init_value(%rip), %edx
    00001543: 	psrldq	$0x8, %xmm0
    00001548: 	paddd	%xmm0, %xmm2
    0000154c: 	movdqa	%xmm2, %xmm0
    00001550: 	psrldq	$0x4, %xmm0
    00001555: 	imull	$0x82dc0, %edx, %edx
    0000155b: 	paddd	%xmm0, %xmm2
    0000155f: 	movd	%xmm2, %eax
    00001563: 	cmpl	%eax, %edx
    00001565: 	je	.Ltmp6667 # Offset: 5477
    00001567: 	movl	current_test(%rip), %edx
    0000156d: 	leaq	DATAat0x571d0(%rip), %rsi
    00001574: 	movl	$0x1, %edi
    00001579: 	xorl	%eax, %eax
    0000157b: 	callq	__printf_chk@PLT # Offset: 5499
    00001580: 	movl	iterations(%rip), %ecx
.Ltmp6667:
    00001586: 	addl	$0x1, (%rsp)
    0000158a: 	movl	(%rsp), %eax
    0000158d: 	cmpl	%ecx, %eax
    0000158f: 	jl	.Ltmp6668 # Offset: 5519
.Ltmp6665:
    00001595: 	movq	%r12, %rsi
    00001598: 	movq	%r15, %rdi
    0000159b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5531
    000015a0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015a7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000015ae: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015b5: 	je	.Ltmp6669 # Offset: 5557
.Ltmp7036:
    000015bb: 	movq	-0x20(%rax), %rdi
    000015bf: 	movq	%rdi, (%rsp)
    000015c3: 	callq	clock@PLT # Offset: 5571
    000015c8: 	movq	(%rsp), %rdi
    000015cc: 	pxor	%xmm0, %xmm0
    000015d0: 	movq	%rax, end_time(%rip)
    000015d7: 	subq	start_time(%rip), %rax
    000015de: 	cvtsi2sd	%rax, %xmm0
    000015e3: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000015eb: 	callq	_Z13record_resultdPKc # Offset: 5611
    000015f0: 	movq	0xa0(%rsp), %rdi
    000015f8: 	cmpq	%r13, %rdi
    000015fb: 	je	.Ltmp6670 # Offset: 5627
    000015fd: 	movq	0xb0(%rsp), %rax
    00001605: 	leaq	0x1(%rax), %rsi
    00001609: 	callq	_ZdlPvm@PLT # Offset: 5641
.Ltmp6670:
    0000160e: 	leaq	DATAat0x5739e(%rip), %rdx
    00001615: 	movq	%r14, %rsi
    00001618: 	movq	%r12, %rdi
    0000161b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5659
    00001620: 	callq	clock@PLT # Offset: 5664
    00001625: 	movl	iterations(%rip), %ecx
    0000162b: 	movl	$0x0, (%rsp)
    00001632: 	movq	%rax, start_time(%rip)
    00001639: 	testl	%ecx, %ecx
    0000163b: 	jle	.Ltmp6671 # Offset: 5691
    00001641: 	nopl	(%rax) # Size: 7
.Ltmp6674:
    00001648: 	movq	%rbp, %rax
    0000164b: 	pxor	%xmm2, %xmm2
    0000164f: 	nop # Size: 1
.Ltmp6672:
    00001650: 	movdqa	(%rax), %xmm1
    00001654: 	addq	$0x10, %rax
    00001658: 	movdqa	%xmm1, %xmm0
    0000165c: 	pslld	$0x4, %xmm0
    00001661: 	paddd	%xmm1, %xmm0
    00001665: 	pslld	$0x2, %xmm0
    0000166a: 	psubd	%xmm1, %xmm0
    0000166e: 	paddd	%xmm0, %xmm2
    00001672: 	cmpq	%rbx, %rax
    00001675: 	jne	.Ltmp6672 # Offset: 5749
    00001677: 	movdqa	%xmm2, %xmm0
    0000167b: 	cvttsd2si	init_value(%rip), %edx
    00001683: 	psrldq	$0x8, %xmm0
    00001688: 	paddd	%xmm0, %xmm2
    0000168c: 	movdqa	%xmm2, %xmm0
    00001690: 	psrldq	$0x4, %xmm0
    00001695: 	imull	$0x82dc0, %edx, %edx
    0000169b: 	paddd	%xmm0, %xmm2
    0000169f: 	movd	%xmm2, %eax
    000016a3: 	cmpl	%eax, %edx
    000016a5: 	je	.Ltmp6673 # Offset: 5797
    000016a7: 	movl	current_test(%rip), %edx
    000016ad: 	leaq	DATAat0x571d0(%rip), %rsi
    000016b4: 	movl	$0x1, %edi
    000016b9: 	xorl	%eax, %eax
    000016bb: 	callq	__printf_chk@PLT # Offset: 5819
    000016c0: 	movl	iterations(%rip), %ecx
.Ltmp6673:
    000016c6: 	addl	$0x1, (%rsp)
    000016ca: 	movl	(%rsp), %eax
    000016cd: 	cmpl	%ecx, %eax
    000016cf: 	jl	.Ltmp6674 # Offset: 5839
.Ltmp6671:
    000016d5: 	movq	%r12, %rsi
    000016d8: 	movq	%r15, %rdi
    000016db: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5851
    000016e0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016e7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000016ee: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016f5: 	je	.Ltmp6675 # Offset: 5877
.Ltmp7035:
    000016fb: 	movq	-0x20(%rax), %rdi
    000016ff: 	movq	%rdi, (%rsp)
    00001703: 	callq	clock@PLT # Offset: 5891
    00001708: 	movq	(%rsp), %rdi
    0000170c: 	pxor	%xmm0, %xmm0
    00001710: 	movq	%rax, end_time(%rip)
    00001717: 	subq	start_time(%rip), %rax
    0000171e: 	cvtsi2sd	%rax, %xmm0
    00001723: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000172b: 	callq	_Z13record_resultdPKc # Offset: 5931
    00001730: 	movq	0xa0(%rsp), %rdi
    00001738: 	cmpq	%r13, %rdi
    0000173b: 	je	.Ltmp6676 # Offset: 5947
    0000173d: 	movq	0xb0(%rsp), %rax
    00001745: 	leaq	0x1(%rax), %rsi
    00001749: 	callq	_ZdlPvm@PLT # Offset: 5961
.Ltmp6676:
    0000174e: 	leaq	DATAat0x573ad(%rip), %rdx
    00001755: 	movq	%r14, %rsi
    00001758: 	movq	%r12, %rdi
    0000175b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5979
    00001760: 	movq	%r12, %rcx
    00001763: 	movl	$0x53, %edx
    00001768: 	movl	$0x1f40, %esi
    0000176d: 	movq	%rbp, %rdi
    00001770: 	callq	_Z14test_variable1Ii24custom_multiply_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 6000
    00001775: 	movq	0xa0(%rsp), %rdi
    0000177d: 	cmpq	%r13, %rdi
    00001780: 	je	.Ltmp6677 # Offset: 6016
    00001782: 	movq	0xb0(%rsp), %rax
    0000178a: 	leaq	0x1(%rax), %rsi
    0000178e: 	callq	_ZdlPvm@PLT # Offset: 6030
.Ltmp6677:
    00001793: 	leaq	DATAat0x573c6(%rip), %rdx
    0000179a: 	movq	%r14, %rsi
    0000179d: 	movq	%r12, %rdi
    000017a0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6048
    000017a5: 	callq	clock@PLT # Offset: 6053
    000017aa: 	movl	iterations(%rip), %ecx
    000017b0: 	movl	$0x0, (%rsp)
    000017b7: 	movq	%rax, start_time(%rip)
    000017be: 	testl	%ecx, %ecx
    000017c0: 	jle	.Ltmp6678 # Offset: 6080
    000017c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp6681:
    000017d0: 	movq	%rbp, %rax
    000017d3: 	pxor	%xmm2, %xmm2
    000017d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6679:
    000017e0: 	movdqa	(%rax), %xmm1
    000017e4: 	addq	$0x10, %rax
    000017e8: 	movdqa	%xmm1, %xmm0
    000017ec: 	pslld	$0x2, %xmm0
    000017f1: 	paddd	%xmm1, %xmm0
    000017f5: 	pslld	$0x2, %xmm0
    000017fa: 	paddd	%xmm1, %xmm0
    000017fe: 	pslld	$0x2, %xmm0
    00001803: 	psubd	%xmm1, %xmm0
    00001807: 	paddd	%xmm0, %xmm2
    0000180b: 	cmpq	%rbx, %rax
    0000180e: 	jne	.Ltmp6679 # Offset: 6158
    00001810: 	movdqa	%xmm2, %xmm0
    00001814: 	cvttsd2si	init_value(%rip), %edx
    0000181c: 	psrldq	$0x8, %xmm0
    00001821: 	paddd	%xmm0, %xmm2
    00001825: 	movdqa	%xmm2, %xmm0
    00001829: 	psrldq	$0x4, %xmm0
    0000182e: 	imull	$0xa21c0, %edx, %edx
    00001834: 	paddd	%xmm0, %xmm2
    00001838: 	movd	%xmm2, %eax
    0000183c: 	cmpl	%eax, %edx
    0000183e: 	je	.Ltmp6680 # Offset: 6206
    00001840: 	movl	current_test(%rip), %edx
    00001846: 	leaq	DATAat0x571d0(%rip), %rsi
    0000184d: 	movl	$0x1, %edi
    00001852: 	xorl	%eax, %eax
    00001854: 	callq	__printf_chk@PLT # Offset: 6228
    00001859: 	movl	iterations(%rip), %ecx
.Ltmp6680:
    0000185f: 	addl	$0x1, (%rsp)
    00001863: 	movl	(%rsp), %eax
    00001866: 	cmpl	%ecx, %eax
    00001868: 	jl	.Ltmp6681 # Offset: 6248
.Ltmp6678:
    0000186e: 	movq	%r12, %rsi
    00001871: 	movq	%r15, %rdi
    00001874: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6260
    00001879: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001880: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001887: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000188e: 	je	.Ltmp6682 # Offset: 6286
.Ltmp7034:
    00001894: 	movq	-0x20(%rax), %rdi
    00001898: 	movq	%rdi, (%rsp)
    0000189c: 	callq	clock@PLT # Offset: 6300
    000018a1: 	movq	(%rsp), %rdi
    000018a5: 	pxor	%xmm0, %xmm0
    000018a9: 	movq	%rax, end_time(%rip)
    000018b0: 	subq	start_time(%rip), %rax
    000018b7: 	cvtsi2sd	%rax, %xmm0
    000018bc: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000018c4: 	callq	_Z13record_resultdPKc # Offset: 6340
    000018c9: 	movq	0xa0(%rsp), %rdi
    000018d1: 	cmpq	%r13, %rdi
    000018d4: 	je	.Ltmp6683 # Offset: 6356
    000018d6: 	movq	0xb0(%rsp), %rax
    000018de: 	leaq	0x1(%rax), %rsi
    000018e2: 	callq	_ZdlPvm@PLT # Offset: 6370
.Ltmp6683:
    000018e7: 	leaq	DATAat0x573df(%rip), %rdx
    000018ee: 	movq	%r14, %rsi
    000018f1: 	movq	%r12, %rdi
    000018f4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6388
    000018f9: 	callq	clock@PLT # Offset: 6393
    000018fe: 	movl	iterations(%rip), %ecx
    00001904: 	movl	$0x0, (%rsp)
    0000190b: 	movq	%rax, start_time(%rip)
    00001912: 	testl	%ecx, %ecx
    00001914: 	jle	.Ltmp6684 # Offset: 6420
    0000191a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6687:
    00001920: 	movq	%rbp, %rax
    00001923: 	pxor	%xmm3, %xmm3
    00001927: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6685:
    00001930: 	movdqa	(%rax), %xmm1
    00001934: 	addq	$0x10, %rax
    00001938: 	movdqa	%xmm1, %xmm0
    0000193c: 	pslld	$0x2, %xmm0
    00001941: 	movdqa	%xmm0, %xmm2
    00001945: 	paddd	%xmm1, %xmm2
    00001949: 	pslld	$0x4, %xmm2
    0000194e: 	paddd	%xmm2, %xmm0
    00001952: 	psubd	%xmm1, %xmm0
    00001956: 	paddd	%xmm0, %xmm3
    0000195a: 	cmpq	%rax, %rbx
    0000195d: 	jne	.Ltmp6685 # Offset: 6493
    0000195f: 	cvttsd2si	init_value(%rip), %eax
    00001967: 	movdqa	%xmm3, %xmm0
    0000196b: 	psrldq	$0x8, %xmm0
    00001970: 	paddd	%xmm0, %xmm3
    00001974: 	movdqa	%xmm3, %xmm0
    00001978: 	leal	(,%rax,4), %esi
    0000197f: 	psrldq	$0x4, %xmm0
    00001984: 	leal	(%rsi,%rax), %edx
    00001987: 	paddd	%xmm0, %xmm3
    0000198b: 	shll	$0x4, %edx
    0000198e: 	addl	%esi, %edx
    00001990: 	subl	%eax, %edx
    00001992: 	movd	%xmm3, %eax
    00001996: 	imull	$0x1f40, %edx, %edx
    0000199c: 	cmpl	%eax, %edx
    0000199e: 	je	.Ltmp6686 # Offset: 6558
    000019a0: 	movl	current_test(%rip), %edx
    000019a6: 	leaq	DATAat0x571d0(%rip), %rsi
    000019ad: 	movl	$0x1, %edi
    000019b2: 	xorl	%eax, %eax
    000019b4: 	callq	__printf_chk@PLT # Offset: 6580
    000019b9: 	movl	iterations(%rip), %ecx
.Ltmp6686:
    000019bf: 	addl	$0x1, (%rsp)
    000019c3: 	movl	(%rsp), %eax
    000019c6: 	cmpl	%ecx, %eax
    000019c8: 	jl	.Ltmp6687 # Offset: 6600
.Ltmp6684:
    000019ce: 	movq	%r12, %rsi
    000019d1: 	movq	%r15, %rdi
    000019d4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6612
    000019d9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019e0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000019e7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000019ee: 	je	.Ltmp6688 # Offset: 6638
.Ltmp7033:
    000019f4: 	movq	-0x20(%rax), %rdi
    000019f8: 	movq	%rdi, (%rsp)
    000019fc: 	callq	clock@PLT # Offset: 6652
    00001a01: 	movq	(%rsp), %rdi
    00001a05: 	pxor	%xmm0, %xmm0
    00001a09: 	movq	%rax, end_time(%rip)
    00001a10: 	subq	start_time(%rip), %rax
    00001a17: 	cvtsi2sd	%rax, %xmm0
    00001a1c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001a24: 	callq	_Z13record_resultdPKc # Offset: 6692
    00001a29: 	movq	0xa0(%rsp), %rdi
    00001a31: 	cmpq	%r13, %rdi
    00001a34: 	je	.Ltmp6689 # Offset: 6708
    00001a36: 	movq	0xb0(%rsp), %rax
    00001a3e: 	leaq	0x1(%rax), %rsi
    00001a42: 	callq	_ZdlPvm@PLT # Offset: 6722
.Ltmp6689:
    00001a47: 	leaq	DATAat0x573f0(%rip), %rdx
    00001a4e: 	movq	%r14, %rsi
    00001a51: 	movq	%r12, %rdi
    00001a54: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6740
    00001a59: 	callq	clock@PLT # Offset: 6745
    00001a5e: 	movl	iterations(%rip), %ecx
    00001a64: 	movl	$0x0, (%rsp)
    00001a6b: 	movq	%rax, start_time(%rip)
    00001a72: 	testl	%ecx, %ecx
    00001a74: 	jle	.Ltmp6690 # Offset: 6772
    00001a7a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6693:
    00001a80: 	movq	%rbp, %rax
    00001a83: 	pxor	%xmm2, %xmm2
    00001a87: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6691:
    00001a90: 	movdqa	(%rax), %xmm1
    00001a94: 	addq	$0x10, %rax
    00001a98: 	movdqa	%xmm1, %xmm0
    00001a9c: 	pslld	$0x2, %xmm0
    00001aa1: 	paddd	%xmm1, %xmm0
    00001aa5: 	pslld	$0x2, %xmm0
    00001aaa: 	paddd	%xmm1, %xmm0
    00001aae: 	pslld	$0x2, %xmm0
    00001ab3: 	psubd	%xmm1, %xmm0
    00001ab7: 	paddd	%xmm0, %xmm2
    00001abb: 	cmpq	%rbx, %rax
    00001abe: 	jne	.Ltmp6691 # Offset: 6846
    00001ac0: 	movdqa	%xmm2, %xmm0
    00001ac4: 	cvttsd2si	init_value(%rip), %edx
    00001acc: 	psrldq	$0x8, %xmm0
    00001ad1: 	paddd	%xmm0, %xmm2
    00001ad5: 	movdqa	%xmm2, %xmm0
    00001ad9: 	psrldq	$0x4, %xmm0
    00001ade: 	imull	$0xa21c0, %edx, %edx
    00001ae4: 	paddd	%xmm0, %xmm2
    00001ae8: 	movd	%xmm2, %eax
    00001aec: 	cmpl	%eax, %edx
    00001aee: 	je	.Ltmp6692 # Offset: 6894
    00001af0: 	movl	current_test(%rip), %edx
    00001af6: 	leaq	DATAat0x571d0(%rip), %rsi
    00001afd: 	movl	$0x1, %edi
    00001b02: 	xorl	%eax, %eax
    00001b04: 	callq	__printf_chk@PLT # Offset: 6916
    00001b09: 	movl	iterations(%rip), %ecx
.Ltmp6692:
    00001b0f: 	addl	$0x1, (%rsp)
    00001b13: 	movl	(%rsp), %eax
    00001b16: 	cmpl	%ecx, %eax
    00001b18: 	jl	.Ltmp6693 # Offset: 6936
.Ltmp6690:
    00001b1e: 	movq	%r12, %rsi
    00001b21: 	movq	%r15, %rdi
    00001b24: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6948
    00001b29: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b30: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001b37: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b3e: 	je	.Ltmp6694 # Offset: 6974
.Ltmp7032:
    00001b44: 	movq	-0x20(%rax), %rdi
    00001b48: 	movq	%rdi, (%rsp)
    00001b4c: 	callq	clock@PLT # Offset: 6988
    00001b51: 	movq	(%rsp), %rdi
    00001b55: 	pxor	%xmm0, %xmm0
    00001b59: 	movq	%rax, end_time(%rip)
    00001b60: 	subq	start_time(%rip), %rax
    00001b67: 	cvtsi2sd	%rax, %xmm0
    00001b6c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001b74: 	callq	_Z13record_resultdPKc # Offset: 7028
    00001b79: 	movq	0xa0(%rsp), %rdi
    00001b81: 	cmpq	%r13, %rdi
    00001b84: 	je	.Ltmp6695 # Offset: 7044
    00001b86: 	movq	0xb0(%rsp), %rax
    00001b8e: 	leaq	0x1(%rax), %rsi
    00001b92: 	callq	_ZdlPvm@PLT # Offset: 7058
.Ltmp6695:
    00001b97: 	leaq	DATAat0x573ff(%rip), %rdx
    00001b9e: 	movq	%r14, %rsi
    00001ba1: 	movq	%r12, %rdi
    00001ba4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7076
    00001ba9: 	movq	%r12, %rcx
    00001bac: 	movl	$0x7e, %edx
    00001bb1: 	movl	$0x1f40, %esi
    00001bb6: 	movq	%rbp, %rdi
    00001bb9: 	callq	_Z14test_variable1Ii24custom_multiply_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7097
    00001bbe: 	movq	0xa0(%rsp), %rdi
    00001bc6: 	cmpq	%r13, %rdi
    00001bc9: 	je	.Ltmp6696 # Offset: 7113
    00001bcb: 	movq	0xb0(%rsp), %rax
    00001bd3: 	leaq	0x1(%rax), %rsi
    00001bd7: 	callq	_ZdlPvm@PLT # Offset: 7127
.Ltmp6696:
    00001bdc: 	leaq	DATAat0x57419(%rip), %rdx
    00001be3: 	movq	%r14, %rsi
    00001be6: 	movq	%r12, %rdi
    00001be9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7145
    00001bee: 	callq	clock@PLT # Offset: 7150
    00001bf3: 	movl	iterations(%rip), %ecx
    00001bf9: 	movl	$0x0, (%rsp)
    00001c00: 	movq	%rax, start_time(%rip)
    00001c07: 	testl	%ecx, %ecx
    00001c09: 	jle	.Ltmp6697 # Offset: 7177
    00001c0f: 	nop # Size: 1
.Ltmp6700:
    00001c10: 	movq	%rbp, %rax
    00001c13: 	pxor	%xmm1, %xmm1
    00001c17: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6698:
    00001c20: 	movdqa	(%rax), %xmm0
    00001c24: 	addq	$0x10, %rax
    00001c28: 	pslld	$0x6, %xmm0
    00001c2d: 	psubd	-0x10(%rax), %xmm0
    00001c32: 	pslld	$0x1, %xmm0
    00001c37: 	paddd	%xmm0, %xmm1
    00001c3b: 	cmpq	%rax, %rbx
    00001c3e: 	jne	.Ltmp6698 # Offset: 7230
    00001c40: 	movdqa	%xmm1, %xmm0
    00001c44: 	cvttsd2si	init_value(%rip), %edx
    00001c4c: 	psrldq	$0x8, %xmm0
    00001c51: 	paddd	%xmm0, %xmm1
    00001c55: 	movdqa	%xmm1, %xmm0
    00001c59: 	psrldq	$0x4, %xmm0
    00001c5e: 	imull	$0xf6180, %edx, %edx
    00001c64: 	paddd	%xmm0, %xmm1
    00001c68: 	movd	%xmm1, %eax
    00001c6c: 	cmpl	%eax, %edx
    00001c6e: 	je	.Ltmp6699 # Offset: 7278
    00001c70: 	movl	current_test(%rip), %edx
    00001c76: 	leaq	DATAat0x571d0(%rip), %rsi
    00001c7d: 	movl	$0x1, %edi
    00001c82: 	xorl	%eax, %eax
    00001c84: 	callq	__printf_chk@PLT # Offset: 7300
    00001c89: 	movl	iterations(%rip), %ecx
.Ltmp6699:
    00001c8f: 	addl	$0x1, (%rsp)
    00001c93: 	movl	(%rsp), %eax
    00001c96: 	cmpl	%ecx, %eax
    00001c98: 	jl	.Ltmp6700 # Offset: 7320
.Ltmp6697:
    00001c9e: 	movq	%r12, %rsi
    00001ca1: 	movq	%r15, %rdi
    00001ca4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7332
    00001ca9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001cb0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001cb7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001cbe: 	je	.Ltmp6701 # Offset: 7358
.Ltmp7031:
    00001cc4: 	movq	-0x20(%rax), %rdi
    00001cc8: 	movq	%rdi, (%rsp)
    00001ccc: 	callq	clock@PLT # Offset: 7372
    00001cd1: 	movq	(%rsp), %rdi
    00001cd5: 	pxor	%xmm0, %xmm0
    00001cd9: 	movq	%rax, end_time(%rip)
    00001ce0: 	subq	start_time(%rip), %rax
    00001ce7: 	cvtsi2sd	%rax, %xmm0
    00001cec: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001cf4: 	callq	_Z13record_resultdPKc # Offset: 7412
    00001cf9: 	movq	0xa0(%rsp), %rdi
    00001d01: 	cmpq	%r13, %rdi
    00001d04: 	je	.Ltmp6702 # Offset: 7428
    00001d06: 	movq	0xb0(%rsp), %rax
    00001d0e: 	leaq	0x1(%rax), %rsi
    00001d12: 	callq	_ZdlPvm@PLT # Offset: 7442
.Ltmp6702:
    00001d17: 	leaq	DATAat0x57433(%rip), %rdx
    00001d1e: 	movq	%r14, %rsi
    00001d21: 	movq	%r12, %rdi
    00001d24: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7460
    00001d29: 	movq	%r12, %rdx
    00001d2c: 	movl	$0x1f40, %esi
    00001d31: 	movq	%rbp, %rdi
    00001d34: 	callq	_Z13test_constantIi28custom_multiply_shiftadd_126IiEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7476
    00001d39: 	movq	0xa0(%rsp), %rdi
    00001d41: 	cmpq	%r13, %rdi
    00001d44: 	je	.Ltmp6703 # Offset: 7492
    00001d46: 	movq	0xb0(%rsp), %rax
    00001d4e: 	leaq	0x1(%rax), %rsi
    00001d52: 	callq	_ZdlPvm@PLT # Offset: 7506
.Ltmp6703:
    00001d57: 	leaq	DATAat0x57445(%rip), %rdx
    00001d5e: 	movq	%r14, %rsi
    00001d61: 	movq	%r12, %rdi
    00001d64: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7524
    00001d69: 	callq	clock@PLT # Offset: 7529
    00001d6e: 	movl	iterations(%rip), %ecx
    00001d74: 	movl	$0x0, (%rsp)
    00001d7b: 	movq	%rax, start_time(%rip)
    00001d82: 	testl	%ecx, %ecx
    00001d84: 	jle	.Ltmp6704 # Offset: 7556
    00001d8a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6707:
    00001d90: 	movq	%rbp, %rax
    00001d93: 	pxor	%xmm1, %xmm1
    00001d97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6705:
    00001da0: 	movdqa	(%rax), %xmm0
    00001da4: 	addq	$0x10, %rax
    00001da8: 	pslld	$0x6, %xmm0
    00001dad: 	psubd	-0x10(%rax), %xmm0
    00001db2: 	pslld	$0x1, %xmm0
    00001db7: 	paddd	%xmm0, %xmm1
    00001dbb: 	cmpq	%rbx, %rax
    00001dbe: 	jne	.Ltmp6705 # Offset: 7614
    00001dc0: 	movdqa	%xmm1, %xmm0
    00001dc4: 	cvttsd2si	init_value(%rip), %edx
    00001dcc: 	psrldq	$0x8, %xmm0
    00001dd1: 	paddd	%xmm0, %xmm1
    00001dd5: 	movdqa	%xmm1, %xmm0
    00001dd9: 	psrldq	$0x4, %xmm0
    00001dde: 	imull	$0xf6180, %edx, %edx
    00001de4: 	paddd	%xmm0, %xmm1
    00001de8: 	movd	%xmm1, %eax
    00001dec: 	cmpl	%eax, %edx
    00001dee: 	je	.Ltmp6706 # Offset: 7662
    00001df0: 	movl	current_test(%rip), %edx
    00001df6: 	leaq	DATAat0x571d0(%rip), %rsi
    00001dfd: 	movl	$0x1, %edi
    00001e02: 	xorl	%eax, %eax
    00001e04: 	callq	__printf_chk@PLT # Offset: 7684
    00001e09: 	movl	iterations(%rip), %ecx
.Ltmp6706:
    00001e0f: 	addl	$0x1, (%rsp)
    00001e13: 	movl	(%rsp), %eax
    00001e16: 	cmpl	%ecx, %eax
    00001e18: 	jl	.Ltmp6707 # Offset: 7704
.Ltmp6704:
    00001e1e: 	movq	%r12, %rsi
    00001e21: 	movq	%r15, %rdi
    00001e24: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7716
    00001e29: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e30: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001e37: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e3e: 	je	.Ltmp6708 # Offset: 7742
.Ltmp7030:
    00001e44: 	movq	-0x20(%rax), %rdi
    00001e48: 	movq	%rdi, (%rsp)
    00001e4c: 	callq	clock@PLT # Offset: 7756
    00001e51: 	movq	(%rsp), %rdi
    00001e55: 	pxor	%xmm0, %xmm0
    00001e59: 	movq	%rax, end_time(%rip)
    00001e60: 	subq	start_time(%rip), %rax
    00001e67: 	cvtsi2sd	%rax, %xmm0
    00001e6c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001e74: 	callq	_Z13record_resultdPKc # Offset: 7796
    00001e79: 	movq	0xa0(%rsp), %rdi
    00001e81: 	cmpq	%r13, %rdi
    00001e84: 	je	.Ltmp6709 # Offset: 7812
    00001e86: 	movq	0xb0(%rsp), %rax
    00001e8e: 	leaq	0x1(%rax), %rsi
    00001e92: 	callq	_ZdlPvm@PLT # Offset: 7826
.Ltmp6709:
    00001e97: 	leaq	0x60(%rsp), %rdi
    00001e9c: 	leaq	DATAat0x57455(%rip), %rdx
    00001ea3: 	movq	%r14, %rsi
    00001ea6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7846
    00001eab: 	movl	iterations(%rip), %edx
    00001eb1: 	movq	0x60(%rsp), %rdi
    00001eb6: 	xorl	%r8d, %r8d
    00001eb9: 	xorl	%ecx, %ecx
    00001ebb: 	movl	$0x1f40, %esi
    00001ec0: 	callq	_Z9summarizePKciiii # Offset: 7872
    00001ec5: 	leaq	DATAat0x57472(%rip), %rdx
    00001ecc: 	movq	%r14, %rsi
    00001ecf: 	movq	%r12, %rdi
    00001ed2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7890
    00001ed7: 	callq	clock@PLT # Offset: 7895
    00001edc: 	movl	iterations(%rip), %ecx
    00001ee2: 	movl	$0x0, (%rsp)
    00001ee9: 	movq	%rax, start_time(%rip)
    00001ef0: 	testl	%ecx, %ecx
    00001ef2: 	jle	.Ltmp6710 # Offset: 7922
    00001ef4: 	nopl	(%rax) # Size: 4
.Ltmp6713:
    00001ef8: 	movq	%rbp, %rax
    00001efb: 	pxor	%xmm1, %xmm1
    00001eff: 	nop # Size: 1
.Ltmp6711:
    00001f00: 	movdqa	(%rax), %xmm0
    00001f04: 	addq	$0x10, %rax
    00001f08: 	psrad	$0x1, %xmm0
    00001f0d: 	paddd	%xmm0, %xmm1
    00001f11: 	cmpq	%rax, %rbx
    00001f14: 	jne	.Ltmp6711 # Offset: 7956
    00001f16: 	cvttsd2si	init_value(%rip), %edx
    00001f1e: 	movdqa	%xmm1, %xmm0
    00001f22: 	psrldq	$0x8, %xmm0
    00001f27: 	paddd	%xmm0, %xmm1
    00001f2b: 	movdqa	%xmm1, %xmm0
    00001f2f: 	sarl	%edx
    00001f31: 	psrldq	$0x4, %xmm0
    00001f36: 	imull	$0x1f40, %edx, %edx
    00001f3c: 	paddd	%xmm0, %xmm1
    00001f40: 	movd	%xmm1, %eax
    00001f44: 	cmpl	%eax, %edx
    00001f46: 	je	.Ltmp6712 # Offset: 8006
    00001f48: 	movl	current_test(%rip), %edx
    00001f4e: 	leaq	DATAat0x571d0(%rip), %rsi
    00001f55: 	movl	$0x1, %edi
    00001f5a: 	xorl	%eax, %eax
    00001f5c: 	callq	__printf_chk@PLT # Offset: 8028
    00001f61: 	movl	iterations(%rip), %ecx
.Ltmp6712:
    00001f67: 	addl	$0x1, (%rsp)
    00001f6b: 	movl	(%rsp), %eax
    00001f6e: 	cmpl	%ecx, %eax
    00001f70: 	jl	.Ltmp6713 # Offset: 8048
.Ltmp6710:
    00001f72: 	movq	%r12, %rsi
    00001f75: 	movq	%r15, %rdi
    00001f78: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8056
    00001f7d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f84: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f8b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f92: 	je	.Ltmp6714 # Offset: 8082
.Ltmp7029:
    00001f98: 	movq	-0x20(%rax), %rdi
    00001f9c: 	movq	%rdi, (%rsp)
    00001fa0: 	callq	clock@PLT # Offset: 8096
    00001fa5: 	movq	(%rsp), %rdi
    00001fa9: 	pxor	%xmm0, %xmm0
    00001fad: 	movq	%rax, end_time(%rip)
    00001fb4: 	subq	start_time(%rip), %rax
    00001fbb: 	cvtsi2sd	%rax, %xmm0
    00001fc0: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001fc8: 	callq	_Z13record_resultdPKc # Offset: 8136
    00001fcd: 	movq	0xa0(%rsp), %rdi
    00001fd5: 	cmpq	%r13, %rdi
    00001fd8: 	je	.Ltmp6715 # Offset: 8152
    00001fda: 	movq	0xb0(%rsp), %rax
    00001fe2: 	leaq	0x1(%rax), %rsi
    00001fe6: 	callq	_ZdlPvm@PLT # Offset: 8166
.Ltmp6715:
    00001feb: 	leaq	DATAat0x579c8(%rip), %rdx
    00001ff2: 	movq	%r14, %rsi
    00001ff5: 	movq	%r12, %rdi
    00001ff8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8184
    00001ffd: 	callq	clock@PLT # Offset: 8189
    00002002: 	movl	iterations(%rip), %esi
    00002008: 	movl	$0x0, (%rsp)
    0000200f: 	movq	%rax, start_time(%rip)
    00002016: 	testl	%esi, %esi
    00002018: 	jle	.Ltmp6716 # Offset: 8216
    0000201e: 	nop # Size: 2
.Ltmp6720:
    00002020: 	pxor	%xmm3, %xmm3
    00002024: 	movq	%rbp, %rax
    00002027: 	movdqa	%xmm3, %xmm4
    0000202b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6717:
    00002030: 	movdqa	(%rax), %xmm2
    00002034: 	movdqa	%xmm4, %xmm0
    00002038: 	movdqa	%xmm4, %xmm1
    0000203c: 	addq	$0x10, %rax
    00002040: 	psubd	%xmm2, %xmm0
    00002044: 	movdqa	%xmm2, %xmm5
    00002048: 	psrad	$0x1, %xmm0
    0000204d: 	psrad	$0x1, %xmm5
    00002052: 	psubd	%xmm0, %xmm1
    00002056: 	movdqa	%xmm4, %xmm0
    0000205a: 	pcmpgtd	%xmm2, %xmm0
    0000205e: 	pand	%xmm0, %xmm1
    00002062: 	pandn	%xmm5, %xmm0
    00002066: 	por	%xmm1, %xmm0
    0000206a: 	paddd	%xmm0, %xmm3
    0000206e: 	cmpq	%rbx, %rax
    00002071: 	jne	.Ltmp6717 # Offset: 8305
    00002073: 	movdqa	%xmm3, %xmm0
    00002077: 	cvttsd2si	init_value(%rip), %edx
    0000207f: 	psrldq	$0x8, %xmm0
    00002084: 	paddd	%xmm0, %xmm3
    00002088: 	movdqa	%xmm3, %xmm0
    0000208c: 	psrldq	$0x4, %xmm0
    00002091: 	movl	%edx, %ecx
    00002093: 	paddd	%xmm0, %xmm3
    00002097: 	sarl	%ecx
    00002099: 	movd	%xmm3, %eax
    0000209d: 	testl	%edx, %edx
    0000209f: 	jns	.Ltmp6718 # Offset: 8351
    000020a1: 	negl	%edx
    000020a3: 	sarl	%edx
    000020a5: 	movl	%edx, %ecx
    000020a7: 	negl	%ecx
.Ltmp6718:
    000020a9: 	imull	$0x1f40, %ecx, %ecx
    000020af: 	cmpl	%eax, %ecx
    000020b1: 	je	.Ltmp6719 # Offset: 8369
    000020b3: 	movl	current_test(%rip), %edx
    000020b9: 	leaq	DATAat0x571d0(%rip), %rsi
    000020c0: 	movl	$0x1, %edi
    000020c5: 	xorl	%eax, %eax
    000020c7: 	callq	__printf_chk@PLT # Offset: 8391
    000020cc: 	movl	iterations(%rip), %esi
.Ltmp6719:
    000020d2: 	addl	$0x1, (%rsp)
    000020d6: 	movl	(%rsp), %eax
    000020d9: 	cmpl	%esi, %eax
    000020db: 	jl	.Ltmp6720 # Offset: 8411
.Ltmp6716:
    000020e1: 	movq	%r12, %rsi
    000020e4: 	movq	%r15, %rdi
    000020e7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8423
    000020ec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020f3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000020fa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002101: 	je	.Ltmp6721 # Offset: 8449
.Ltmp7028:
    00002107: 	movq	-0x20(%rax), %rdi
    0000210b: 	movq	%rdi, (%rsp)
    0000210f: 	callq	clock@PLT # Offset: 8463
    00002114: 	movq	(%rsp), %rdi
    00002118: 	pxor	%xmm0, %xmm0
    0000211c: 	movq	%rax, end_time(%rip)
    00002123: 	subq	start_time(%rip), %rax
    0000212a: 	cvtsi2sd	%rax, %xmm0
    0000212f: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002137: 	callq	_Z13record_resultdPKc # Offset: 8503
    0000213c: 	movq	0xa0(%rsp), %rdi
    00002144: 	cmpq	%r13, %rdi
    00002147: 	je	.Ltmp6722 # Offset: 8519
    00002149: 	movq	0xb0(%rsp), %rax
    00002151: 	leaq	0x1(%rax), %rsi
    00002155: 	callq	_ZdlPvm@PLT # Offset: 8533
.Ltmp6722:
    0000215a: 	leaq	DATAat0x57484(%rip), %rdx
    00002161: 	movq	%r14, %rsi
    00002164: 	movq	%r12, %rdi
    00002167: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8551
    0000216c: 	callq	clock@PLT # Offset: 8556
    00002171: 	movl	iterations(%rip), %ecx
    00002177: 	movl	$0x0, (%rsp)
    0000217e: 	movq	%rax, start_time(%rip)
    00002185: 	testl	%ecx, %ecx
    00002187: 	jle	.Ltmp6723 # Offset: 8583
    0000218d: 	nopl	(%rax) # Size: 3
.Ltmp6726:
    00002190: 	pxor	%xmm1, %xmm1
    00002194: 	movq	%rbp, %rax
    00002197: 	movdqa	%xmm1, %xmm3
    0000219b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6724:
    000021a0: 	movdqa	%xmm3, %xmm2
    000021a4: 	movdqa	(%rax), %xmm0
    000021a8: 	addq	$0x10, %rax
    000021ac: 	pcmpgtd	-0x10(%rax), %xmm2
    000021b1: 	psubd	%xmm2, %xmm0
    000021b5: 	psrad	$0x1, %xmm0
    000021ba: 	paddd	%xmm0, %xmm1
    000021be: 	cmpq	%rax, %rbx
    000021c1: 	jne	.Ltmp6724 # Offset: 8641
    000021c3: 	cvttsd2si	init_value(%rip), %eax
    000021cb: 	movdqa	%xmm1, %xmm0
    000021cf: 	psrldq	$0x8, %xmm0
    000021d4: 	paddd	%xmm0, %xmm1
    000021d8: 	movdqa	%xmm1, %xmm0
    000021dc: 	movl	%eax, %edx
    000021de: 	psrldq	$0x4, %xmm0
    000021e3: 	shrl	$0x1f, %edx
    000021e6: 	paddd	%xmm0, %xmm1
    000021ea: 	addl	%eax, %edx
    000021ec: 	movd	%xmm1, %eax
    000021f0: 	sarl	%edx
    000021f2: 	imull	$0x1f40, %edx, %edx
    000021f8: 	cmpl	%eax, %edx
    000021fa: 	je	.Ltmp6725 # Offset: 8698
    000021fc: 	movl	current_test(%rip), %edx
    00002202: 	leaq	DATAat0x571d0(%rip), %rsi
    00002209: 	movl	$0x1, %edi
    0000220e: 	xorl	%eax, %eax
    00002210: 	callq	__printf_chk@PLT # Offset: 8720
    00002215: 	movl	iterations(%rip), %ecx
.Ltmp6725:
    0000221b: 	addl	$0x1, (%rsp)
    0000221f: 	movl	(%rsp), %eax
    00002222: 	cmpl	%ecx, %eax
    00002224: 	jl	.Ltmp6726 # Offset: 8740
.Ltmp6723:
    0000222a: 	movq	%r12, %rsi
    0000222d: 	movq	%r15, %rdi
    00002230: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8752
    00002235: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000223c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002243: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000224a: 	je	.Ltmp6727 # Offset: 8778
.Ltmp7027:
    00002250: 	movq	-0x20(%rax), %rdi
    00002254: 	movq	%rdi, (%rsp)
    00002258: 	callq	clock@PLT # Offset: 8792
    0000225d: 	movq	(%rsp), %rdi
    00002261: 	pxor	%xmm0, %xmm0
    00002265: 	movq	%rax, end_time(%rip)
    0000226c: 	subq	start_time(%rip), %rax
    00002273: 	cvtsi2sd	%rax, %xmm0
    00002278: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002280: 	callq	_Z13record_resultdPKc # Offset: 8832
    00002285: 	movq	0xa0(%rsp), %rdi
    0000228d: 	cmpq	%r13, %rdi
    00002290: 	je	.Ltmp6728 # Offset: 8848
    00002292: 	movq	0xb0(%rsp), %rax
    0000229a: 	leaq	0x1(%rax), %rsi
    0000229e: 	callq	_ZdlPvm@PLT # Offset: 8862
.Ltmp6728:
    000022a3: 	leaq	DATAat0x57498(%rip), %rdx
    000022aa: 	movq	%r14, %rsi
    000022ad: 	movq	%r12, %rdi
    000022b0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8880
    000022b5: 	movq	%r12, %rcx
    000022b8: 	movl	$0x2, %edx
    000022bd: 	movl	$0x1f40, %esi
    000022c2: 	movq	%rbp, %rdi
    000022c5: 	callq	_Z14test_variable1Ii22custom_divide_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 8901
    000022ca: 	movq	0xa0(%rsp), %rdi
    000022d2: 	cmpq	%r13, %rdi
    000022d5: 	je	.Ltmp6729 # Offset: 8917
    000022d7: 	movq	0xb0(%rsp), %rax
    000022df: 	leaq	0x1(%rax), %rsi
    000022e3: 	callq	_ZdlPvm@PLT # Offset: 8931
.Ltmp6729:
    000022e8: 	leaq	DATAat0x574ae(%rip), %rdx
    000022ef: 	movq	%r14, %rsi
    000022f2: 	movq	%r12, %rdi
    000022f5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8949
    000022fa: 	callq	clock@PLT # Offset: 8954
    000022ff: 	movl	iterations(%rip), %ecx
    00002305: 	movl	$0x0, (%rsp)
    0000230c: 	movq	%rax, start_time(%rip)
    00002313: 	testl	%ecx, %ecx
    00002315: 	jle	.Ltmp6730 # Offset: 8981
    0000231b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6733:
    00002320: 	pxor	%xmm1, %xmm1
    00002324: 	movq	%rbp, %rax
    00002327: 	movdqa	%xmm1, %xmm3
    0000232b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6731:
    00002330: 	movdqa	%xmm3, %xmm2
    00002334: 	movdqa	(%rax), %xmm0
    00002338: 	addq	$0x10, %rax
    0000233c: 	pcmpgtd	-0x10(%rax), %xmm2
    00002341: 	psubd	%xmm2, %xmm0
    00002345: 	psrad	$0x1, %xmm0
    0000234a: 	paddd	%xmm0, %xmm1
    0000234e: 	cmpq	%rbx, %rax
    00002351: 	jne	.Ltmp6731 # Offset: 9041
    00002353: 	cvttsd2si	init_value(%rip), %eax
    0000235b: 	movdqa	%xmm1, %xmm0
    0000235f: 	psrldq	$0x8, %xmm0
    00002364: 	paddd	%xmm0, %xmm1
    00002368: 	movdqa	%xmm1, %xmm0
    0000236c: 	movl	%eax, %edx
    0000236e: 	psrldq	$0x4, %xmm0
    00002373: 	shrl	$0x1f, %edx
    00002376: 	paddd	%xmm0, %xmm1
    0000237a: 	addl	%eax, %edx
    0000237c: 	movd	%xmm1, %eax
    00002380: 	sarl	%edx
    00002382: 	imull	$0x1f40, %edx, %edx
    00002388: 	cmpl	%eax, %edx
    0000238a: 	je	.Ltmp6732 # Offset: 9098
    0000238c: 	movl	current_test(%rip), %edx
    00002392: 	leaq	DATAat0x571d0(%rip), %rsi
    00002399: 	movl	$0x1, %edi
    0000239e: 	xorl	%eax, %eax
    000023a0: 	callq	__printf_chk@PLT # Offset: 9120
    000023a5: 	movl	iterations(%rip), %ecx
.Ltmp6732:
    000023ab: 	addl	$0x1, (%rsp)
    000023af: 	movl	(%rsp), %eax
    000023b2: 	cmpl	%ecx, %eax
    000023b4: 	jl	.Ltmp6733 # Offset: 9140
.Ltmp6730:
    000023ba: 	movq	%r12, %rsi
    000023bd: 	movq	%r15, %rdi
    000023c0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9152
    000023c5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023cc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000023d3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000023da: 	je	.Ltmp6734 # Offset: 9178
.Ltmp7026:
    000023e0: 	movq	-0x20(%rax), %rdi
    000023e4: 	movq	%rdi, (%rsp)
    000023e8: 	callq	clock@PLT # Offset: 9192
    000023ed: 	movq	(%rsp), %rdi
    000023f1: 	pxor	%xmm0, %xmm0
    000023f5: 	movq	%rax, end_time(%rip)
    000023fc: 	subq	start_time(%rip), %rax
    00002403: 	cvtsi2sd	%rax, %xmm0
    00002408: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002410: 	callq	_Z13record_resultdPKc # Offset: 9232
    00002415: 	movq	0xa0(%rsp), %rdi
    0000241d: 	cmpq	%r13, %rdi
    00002420: 	je	.Ltmp6735 # Offset: 9248
    00002422: 	movq	0xb0(%rsp), %rax
    0000242a: 	leaq	0x1(%rax), %rsi
    0000242e: 	callq	_ZdlPvm@PLT # Offset: 9262
.Ltmp6735:
    00002433: 	leaq	DATAat0x574c4(%rip), %rdx
    0000243a: 	movq	%r14, %rsi
    0000243d: 	movq	%r12, %rdi
    00002440: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9280
    00002445: 	callq	clock@PLT # Offset: 9285
    0000244a: 	movl	iterations(%rip), %ecx
    00002450: 	movl	$0x0, (%rsp)
    00002457: 	movq	%rax, start_time(%rip)
    0000245e: 	testl	%ecx, %ecx
    00002460: 	jle	.Ltmp6736 # Offset: 9312
    00002466: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp6739:
    00002470: 	movq	%rbp, %rax
    00002473: 	pxor	%xmm1, %xmm1
    00002477: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6737:
    00002480: 	movdqa	(%rax), %xmm0
    00002484: 	addq	$0x10, %rax
    00002488: 	psrad	$0x3, %xmm0
    0000248d: 	paddd	%xmm0, %xmm1
    00002491: 	cmpq	%rax, %rbx
    00002494: 	jne	.Ltmp6737 # Offset: 9364
    00002496: 	cvttsd2si	init_value(%rip), %edx
    0000249e: 	movdqa	%xmm1, %xmm0
    000024a2: 	psrldq	$0x8, %xmm0
    000024a7: 	paddd	%xmm0, %xmm1
    000024ab: 	movdqa	%xmm1, %xmm0
    000024af: 	sarl	$0x3, %edx
    000024b2: 	psrldq	$0x4, %xmm0
    000024b7: 	imull	$0x1f40, %edx, %edx
    000024bd: 	paddd	%xmm0, %xmm1
    000024c1: 	movd	%xmm1, %eax
    000024c5: 	cmpl	%eax, %edx
    000024c7: 	je	.Ltmp6738 # Offset: 9415
    000024c9: 	movl	current_test(%rip), %edx
    000024cf: 	leaq	DATAat0x571d0(%rip), %rsi
    000024d6: 	movl	$0x1, %edi
    000024db: 	xorl	%eax, %eax
    000024dd: 	callq	__printf_chk@PLT # Offset: 9437
    000024e2: 	movl	iterations(%rip), %ecx
.Ltmp6738:
    000024e8: 	addl	$0x1, (%rsp)
    000024ec: 	movl	(%rsp), %eax
    000024ef: 	cmpl	%ecx, %eax
    000024f1: 	jl	.Ltmp6739 # Offset: 9457
.Ltmp6736:
    000024f7: 	movq	%r12, %rsi
    000024fa: 	movq	%r15, %rdi
    000024fd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9469
    00002502: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002509: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002510: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002517: 	je	.Ltmp6740 # Offset: 9495
.Ltmp7025:
    0000251d: 	movq	-0x20(%rax), %rdi
    00002521: 	movq	%rdi, (%rsp)
    00002525: 	callq	clock@PLT # Offset: 9509
    0000252a: 	movq	(%rsp), %rdi
    0000252e: 	pxor	%xmm0, %xmm0
    00002532: 	movq	%rax, end_time(%rip)
    00002539: 	subq	start_time(%rip), %rax
    00002540: 	cvtsi2sd	%rax, %xmm0
    00002545: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000254d: 	callq	_Z13record_resultdPKc # Offset: 9549
    00002552: 	movq	0xa0(%rsp), %rdi
    0000255a: 	cmpq	%r13, %rdi
    0000255d: 	je	.Ltmp6741 # Offset: 9565
    0000255f: 	movq	0xb0(%rsp), %rax
    00002567: 	leaq	0x1(%rax), %rsi
    0000256b: 	callq	_ZdlPvm@PLT # Offset: 9579
.Ltmp6741:
    00002570: 	leaq	DATAat0x579e8(%rip), %rdx
    00002577: 	movq	%r14, %rsi
    0000257a: 	movq	%r12, %rdi
    0000257d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9597
    00002582: 	callq	clock@PLT # Offset: 9602
    00002587: 	movl	iterations(%rip), %esi
    0000258d: 	movl	$0x0, (%rsp)
    00002594: 	movq	%rax, start_time(%rip)
    0000259b: 	testl	%esi, %esi
    0000259d: 	jle	.Ltmp6742 # Offset: 9629
    000025a3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6746:
    000025a8: 	pxor	%xmm3, %xmm3
    000025ac: 	movq	%rbp, %rax
    000025af: 	movdqa	%xmm3, %xmm4
    000025b3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6743:
    000025b8: 	movdqa	(%rax), %xmm2
    000025bc: 	movdqa	%xmm4, %xmm0
    000025c0: 	movdqa	%xmm4, %xmm1
    000025c4: 	addq	$0x10, %rax
    000025c8: 	psubd	%xmm2, %xmm0
    000025cc: 	movdqa	%xmm2, %xmm5
    000025d0: 	psrad	$0x3, %xmm0
    000025d5: 	psrad	$0x3, %xmm5
    000025da: 	psubd	%xmm0, %xmm1
    000025de: 	movdqa	%xmm4, %xmm0
    000025e2: 	pcmpgtd	%xmm2, %xmm0
    000025e6: 	pand	%xmm0, %xmm1
    000025ea: 	pandn	%xmm5, %xmm0
    000025ee: 	por	%xmm1, %xmm0
    000025f2: 	paddd	%xmm0, %xmm3
    000025f6: 	cmpq	%rbx, %rax
    000025f9: 	jne	.Ltmp6743 # Offset: 9721
    000025fb: 	movdqa	%xmm3, %xmm0
    000025ff: 	cvttsd2si	init_value(%rip), %edx
    00002607: 	psrldq	$0x8, %xmm0
    0000260c: 	paddd	%xmm0, %xmm3
    00002610: 	movdqa	%xmm3, %xmm0
    00002614: 	psrldq	$0x4, %xmm0
    00002619: 	movl	%edx, %ecx
    0000261b: 	paddd	%xmm0, %xmm3
    0000261f: 	sarl	$0x3, %ecx
    00002622: 	movd	%xmm3, %eax
    00002626: 	testl	%edx, %edx
    00002628: 	jns	.Ltmp6744 # Offset: 9768
    0000262a: 	negl	%edx
    0000262c: 	sarl	$0x3, %edx
    0000262f: 	movl	%edx, %ecx
    00002631: 	negl	%ecx
.Ltmp6744:
    00002633: 	imull	$0x1f40, %ecx, %ecx
    00002639: 	cmpl	%eax, %ecx
    0000263b: 	je	.Ltmp6745 # Offset: 9787
    0000263d: 	movl	current_test(%rip), %edx
    00002643: 	leaq	DATAat0x571d0(%rip), %rsi
    0000264a: 	movl	$0x1, %edi
    0000264f: 	xorl	%eax, %eax
    00002651: 	callq	__printf_chk@PLT # Offset: 9809
    00002656: 	movl	iterations(%rip), %esi
.Ltmp6745:
    0000265c: 	addl	$0x1, (%rsp)
    00002660: 	movl	(%rsp), %eax
    00002663: 	cmpl	%esi, %eax
    00002665: 	jl	.Ltmp6746 # Offset: 9829
.Ltmp6742:
    0000266b: 	movq	%r12, %rsi
    0000266e: 	movq	%r15, %rdi
    00002671: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9841
    00002676: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000267d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002684: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000268b: 	je	.Ltmp6747 # Offset: 9867
.Ltmp7024:
    00002691: 	movq	-0x20(%rax), %rdi
    00002695: 	movq	%rdi, (%rsp)
    00002699: 	callq	clock@PLT # Offset: 9881
    0000269e: 	movq	(%rsp), %rdi
    000026a2: 	pxor	%xmm0, %xmm0
    000026a6: 	movq	%rax, end_time(%rip)
    000026ad: 	subq	start_time(%rip), %rax
    000026b4: 	cvtsi2sd	%rax, %xmm0
    000026b9: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000026c1: 	callq	_Z13record_resultdPKc # Offset: 9921
    000026c6: 	movq	0xa0(%rsp), %rdi
    000026ce: 	cmpq	%r13, %rdi
    000026d1: 	je	.Ltmp6748 # Offset: 9937
    000026d3: 	movq	0xb0(%rsp), %rax
    000026db: 	leaq	0x1(%rax), %rsi
    000026df: 	callq	_ZdlPvm@PLT # Offset: 9951
.Ltmp6748:
    000026e4: 	leaq	DATAat0x574d6(%rip), %rdx
    000026eb: 	movq	%r14, %rsi
    000026ee: 	movq	%r12, %rdi
    000026f1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9969
    000026f6: 	movq	%r12, %rcx
    000026f9: 	movl	$0x8, %edx
    000026fe: 	movl	$0x1f40, %esi
    00002703: 	movq	%rbp, %rdi
    00002706: 	callq	_Z14test_variable1Ii22custom_divide_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 9990
    0000270b: 	movq	0xa0(%rsp), %rdi
    00002713: 	cmpq	%r13, %rdi
    00002716: 	je	.Ltmp6749 # Offset: 10006
    00002718: 	movq	0xb0(%rsp), %rax
    00002720: 	leaq	0x1(%rax), %rsi
    00002724: 	callq	_ZdlPvm@PLT # Offset: 10020
.Ltmp6749:
    00002729: 	leaq	DATAat0x574ec(%rip), %rdx
    00002730: 	movq	%r14, %rsi
    00002733: 	movq	%r12, %rdi
    00002736: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10038
    0000273b: 	callq	clock@PLT # Offset: 10043
    00002740: 	movl	iterations(%rip), %ecx
    00002746: 	movq	%rax, start_time(%rip)
    0000274d: 	testl	%ecx, %ecx
    0000274f: 	jle	.Ltmp6750 # Offset: 10063
    00002755: 	movdqa	DATAat0x57e00(%rip), %xmm3
    0000275d: 	movl	$0x0, 0x1c(%rsp)
    00002765: 	movaps	%xmm3, (%rsp)
    00002769: 	nopl	(%rax) # Size: 7
.Ltmp6753:
    00002770: 	pxor	%xmm1, %xmm1
    00002774: 	movq	%rbp, %rax
    00002777: 	movdqa	%xmm1, %xmm2
    0000277b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6751:
    00002780: 	movdqa	%xmm2, %xmm0
    00002784: 	addq	$0x10, %rax
    00002788: 	pcmpgtd	-0x10(%rax), %xmm0
    0000278d: 	pand	(%rsp), %xmm0
    00002792: 	paddd	-0x10(%rax), %xmm0
    00002797: 	psrad	$0x3, %xmm0
    0000279c: 	paddd	%xmm0, %xmm1
    000027a0: 	cmpq	%rbx, %rax
    000027a3: 	jne	.Ltmp6751 # Offset: 10147
    000027a5: 	cvttsd2si	init_value(%rip), %eax
    000027ad: 	movdqa	%xmm1, %xmm0
    000027b1: 	psrldq	$0x8, %xmm0
    000027b6: 	paddd	%xmm0, %xmm1
    000027ba: 	movdqa	%xmm1, %xmm0
    000027be: 	testl	%eax, %eax
    000027c0: 	psrldq	$0x4, %xmm0
    000027c5: 	leal	0x7(%rax), %edx
    000027c8: 	cmovnsl	%eax, %edx
    000027cb: 	paddd	%xmm0, %xmm1
    000027cf: 	movd	%xmm1, %eax
    000027d3: 	sarl	$0x3, %edx
    000027d6: 	imull	$0x1f40, %edx, %edx
    000027dc: 	cmpl	%eax, %edx
    000027de: 	je	.Ltmp6752 # Offset: 10206
    000027e0: 	movl	current_test(%rip), %edx
    000027e6: 	leaq	DATAat0x571d0(%rip), %rsi
    000027ed: 	movl	$0x1, %edi
    000027f2: 	xorl	%eax, %eax
    000027f4: 	callq	__printf_chk@PLT # Offset: 10228
    000027f9: 	movl	iterations(%rip), %ecx
.Ltmp6752:
    000027ff: 	addl	$0x1, 0x1c(%rsp)
    00002804: 	movl	0x1c(%rsp), %eax
    00002808: 	cmpl	%ecx, %eax
    0000280a: 	jl	.Ltmp6753 # Offset: 10250
.Ltmp6750:
    00002810: 	movq	%r12, %rsi
    00002813: 	movq	%r15, %rdi
    00002816: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10262
    0000281b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002822: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002829: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002830: 	je	.Ltmp6754 # Offset: 10288
.Ltmp7023:
    00002836: 	movq	-0x20(%rax), %rdi
    0000283a: 	movq	%rdi, (%rsp)
    0000283e: 	callq	clock@PLT # Offset: 10302
    00002843: 	movq	(%rsp), %rdi
    00002847: 	pxor	%xmm0, %xmm0
    0000284b: 	movq	%rax, end_time(%rip)
    00002852: 	subq	start_time(%rip), %rax
    00002859: 	cvtsi2sd	%rax, %xmm0
    0000285e: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002866: 	callq	_Z13record_resultdPKc # Offset: 10342
    0000286b: 	movq	0xa0(%rsp), %rdi
    00002873: 	cmpq	%r13, %rdi
    00002876: 	je	.Ltmp6755 # Offset: 10358
    00002878: 	movq	0xb0(%rsp), %rax
    00002880: 	leaq	0x1(%rax), %rsi
    00002884: 	callq	_ZdlPvm@PLT # Offset: 10372
.Ltmp6755:
    00002889: 	leaq	DATAat0x57502(%rip), %rdx
    00002890: 	movq	%r14, %rsi
    00002893: 	movq	%r12, %rdi
    00002896: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10390
    0000289b: 	callq	clock@PLT # Offset: 10395
    000028a0: 	movl	iterations(%rip), %ecx
    000028a6: 	movl	$0x0, (%rsp)
    000028ad: 	movq	%rax, start_time(%rip)
    000028b4: 	testl	%ecx, %ecx
    000028b6: 	jle	.Ltmp6756 # Offset: 10422
    000028bc: 	nopl	(%rax) # Size: 4
.Ltmp6759:
    000028c0: 	movq	%rbp, %rax
    000028c3: 	pxor	%xmm1, %xmm1
    000028c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6757:
    000028d0: 	movdqa	(%rax), %xmm0
    000028d4: 	addq	$0x10, %rax
    000028d8: 	psrad	$0x6, %xmm0
    000028dd: 	paddd	%xmm0, %xmm1
    000028e1: 	cmpq	%rax, %rbx
    000028e4: 	jne	.Ltmp6757 # Offset: 10468
    000028e6: 	cvttsd2si	init_value(%rip), %edx
    000028ee: 	movdqa	%xmm1, %xmm0
    000028f2: 	psrldq	$0x8, %xmm0
    000028f7: 	paddd	%xmm0, %xmm1
    000028fb: 	movdqa	%xmm1, %xmm0
    000028ff: 	sarl	$0x6, %edx
    00002902: 	psrldq	$0x4, %xmm0
    00002907: 	imull	$0x1f40, %edx, %edx
    0000290d: 	paddd	%xmm0, %xmm1
    00002911: 	movd	%xmm1, %eax
    00002915: 	cmpl	%eax, %edx
    00002917: 	je	.Ltmp6758 # Offset: 10519
    00002919: 	movl	current_test(%rip), %edx
    0000291f: 	leaq	DATAat0x571d0(%rip), %rsi
    00002926: 	movl	$0x1, %edi
    0000292b: 	xorl	%eax, %eax
    0000292d: 	callq	__printf_chk@PLT # Offset: 10541
    00002932: 	movl	iterations(%rip), %ecx
.Ltmp6758:
    00002938: 	addl	$0x1, (%rsp)
    0000293c: 	movl	(%rsp), %eax
    0000293f: 	cmpl	%ecx, %eax
    00002941: 	jl	.Ltmp6759 # Offset: 10561
.Ltmp6756:
    00002947: 	movq	%r12, %rsi
    0000294a: 	movq	%r15, %rdi
    0000294d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10573
    00002952: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002959: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002960: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002967: 	je	.Ltmp6760 # Offset: 10599
.Ltmp7022:
    0000296d: 	movq	-0x20(%rax), %rdi
    00002971: 	movq	%rdi, (%rsp)
    00002975: 	callq	clock@PLT # Offset: 10613
    0000297a: 	movq	(%rsp), %rdi
    0000297e: 	pxor	%xmm0, %xmm0
    00002982: 	movq	%rax, end_time(%rip)
    00002989: 	subq	start_time(%rip), %rax
    00002990: 	cvtsi2sd	%rax, %xmm0
    00002995: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000299d: 	callq	_Z13record_resultdPKc # Offset: 10653
    000029a2: 	movq	0xa0(%rsp), %rdi
    000029aa: 	cmpq	%r13, %rdi
    000029ad: 	je	.Ltmp6761 # Offset: 10669
    000029af: 	movq	0xb0(%rsp), %rax
    000029b7: 	leaq	0x1(%rax), %rsi
    000029bb: 	callq	_ZdlPvm@PLT # Offset: 10683
.Ltmp6761:
    000029c0: 	leaq	DATAat0x57a08(%rip), %rdx
    000029c7: 	movq	%r14, %rsi
    000029ca: 	movq	%r12, %rdi
    000029cd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10701
    000029d2: 	callq	clock@PLT # Offset: 10706
    000029d7: 	movl	iterations(%rip), %esi
    000029dd: 	movl	$0x0, (%rsp)
    000029e4: 	movq	%rax, start_time(%rip)
    000029eb: 	testl	%esi, %esi
    000029ed: 	jle	.Ltmp6762 # Offset: 10733
    000029f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6766:
    000029f8: 	pxor	%xmm3, %xmm3
    000029fc: 	movq	%rbp, %rax
    000029ff: 	movdqa	%xmm3, %xmm4
    00002a03: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6763:
    00002a08: 	movdqa	(%rax), %xmm2
    00002a0c: 	movdqa	%xmm4, %xmm0
    00002a10: 	movdqa	%xmm4, %xmm1
    00002a14: 	addq	$0x10, %rax
    00002a18: 	psubd	%xmm2, %xmm0
    00002a1c: 	movdqa	%xmm2, %xmm5
    00002a20: 	psrad	$0x6, %xmm0
    00002a25: 	psrad	$0x6, %xmm5
    00002a2a: 	psubd	%xmm0, %xmm1
    00002a2e: 	movdqa	%xmm4, %xmm0
    00002a32: 	pcmpgtd	%xmm2, %xmm0
    00002a36: 	pand	%xmm0, %xmm1
    00002a3a: 	pandn	%xmm5, %xmm0
    00002a3e: 	por	%xmm1, %xmm0
    00002a42: 	paddd	%xmm0, %xmm3
    00002a46: 	cmpq	%rbx, %rax
    00002a49: 	jne	.Ltmp6763 # Offset: 10825
    00002a4b: 	movdqa	%xmm3, %xmm0
    00002a4f: 	cvttsd2si	init_value(%rip), %edx
    00002a57: 	psrldq	$0x8, %xmm0
    00002a5c: 	paddd	%xmm0, %xmm3
    00002a60: 	movdqa	%xmm3, %xmm0
    00002a64: 	psrldq	$0x4, %xmm0
    00002a69: 	movl	%edx, %ecx
    00002a6b: 	paddd	%xmm0, %xmm3
    00002a6f: 	sarl	$0x6, %ecx
    00002a72: 	movd	%xmm3, %eax
    00002a76: 	testl	%edx, %edx
    00002a78: 	jns	.Ltmp6764 # Offset: 10872
    00002a7a: 	negl	%edx
    00002a7c: 	sarl	$0x6, %edx
    00002a7f: 	movl	%edx, %ecx
    00002a81: 	negl	%ecx
.Ltmp6764:
    00002a83: 	imull	$0x1f40, %ecx, %ecx
    00002a89: 	cmpl	%eax, %ecx
    00002a8b: 	je	.Ltmp6765 # Offset: 10891
    00002a8d: 	movl	current_test(%rip), %edx
    00002a93: 	leaq	DATAat0x571d0(%rip), %rsi
    00002a9a: 	movl	$0x1, %edi
    00002a9f: 	xorl	%eax, %eax
    00002aa1: 	callq	__printf_chk@PLT # Offset: 10913
    00002aa6: 	movl	iterations(%rip), %esi
.Ltmp6765:
    00002aac: 	addl	$0x1, (%rsp)
    00002ab0: 	movl	(%rsp), %eax
    00002ab3: 	cmpl	%esi, %eax
    00002ab5: 	jl	.Ltmp6766 # Offset: 10933
.Ltmp6762:
    00002abb: 	movq	%r12, %rsi
    00002abe: 	movq	%r15, %rdi
    00002ac1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10945
    00002ac6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002acd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002ad4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002adb: 	je	.Ltmp6767 # Offset: 10971
.Ltmp7021:
    00002ae1: 	movq	-0x20(%rax), %rdi
    00002ae5: 	movq	%rdi, (%rsp)
    00002ae9: 	callq	clock@PLT # Offset: 10985
    00002aee: 	movq	(%rsp), %rdi
    00002af2: 	pxor	%xmm0, %xmm0
    00002af6: 	movq	%rax, end_time(%rip)
    00002afd: 	subq	start_time(%rip), %rax
    00002b04: 	cvtsi2sd	%rax, %xmm0
    00002b09: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002b11: 	callq	_Z13record_resultdPKc # Offset: 11025
    00002b16: 	movq	0xa0(%rsp), %rdi
    00002b1e: 	cmpq	%r13, %rdi
    00002b21: 	je	.Ltmp6768 # Offset: 11041
    00002b23: 	movq	0xb0(%rsp), %rax
    00002b2b: 	leaq	0x1(%rax), %rsi
    00002b2f: 	callq	_ZdlPvm@PLT # Offset: 11055
.Ltmp6768:
    00002b34: 	leaq	DATAat0x57514(%rip), %rdx
    00002b3b: 	movq	%r14, %rsi
    00002b3e: 	movq	%r12, %rdi
    00002b41: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11073
    00002b46: 	movq	%r12, %rcx
    00002b49: 	movl	$0x40, %edx
    00002b4e: 	movl	$0x1f40, %esi
    00002b53: 	movq	%rbp, %rdi
    00002b56: 	callq	_Z14test_variable1Ii22custom_divide_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11094
    00002b5b: 	movq	0xa0(%rsp), %rdi
    00002b63: 	cmpq	%r13, %rdi
    00002b66: 	je	.Ltmp6769 # Offset: 11110
    00002b68: 	movq	0xb0(%rsp), %rax
    00002b70: 	leaq	0x1(%rax), %rsi
    00002b74: 	callq	_ZdlPvm@PLT # Offset: 11124
.Ltmp6769:
    00002b79: 	leaq	DATAat0x5752b(%rip), %rdx
    00002b80: 	movq	%r14, %rsi
    00002b83: 	movq	%r12, %rdi
    00002b86: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11142
    00002b8b: 	callq	clock@PLT # Offset: 11147
    00002b90: 	movl	iterations(%rip), %ecx
    00002b96: 	movq	%rax, start_time(%rip)
    00002b9d: 	testl	%ecx, %ecx
    00002b9f: 	jle	.Ltmp6770 # Offset: 11167
    00002ba5: 	movdqa	DATAat0x57e40(%rip), %xmm3
    00002bad: 	movl	$0x0, 0x1c(%rsp)
    00002bb5: 	movaps	%xmm3, (%rsp)
    00002bb9: 	nopl	(%rax) # Size: 7
.Ltmp6773:
    00002bc0: 	pxor	%xmm1, %xmm1
    00002bc4: 	movq	%rbp, %rax
    00002bc7: 	movdqa	%xmm1, %xmm2
    00002bcb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6771:
    00002bd0: 	movdqa	%xmm2, %xmm0
    00002bd4: 	addq	$0x10, %rax
    00002bd8: 	pcmpgtd	-0x10(%rax), %xmm0
    00002bdd: 	pand	(%rsp), %xmm0
    00002be2: 	paddd	-0x10(%rax), %xmm0
    00002be7: 	psrad	$0x6, %xmm0
    00002bec: 	paddd	%xmm0, %xmm1
    00002bf0: 	cmpq	%rax, %rbx
    00002bf3: 	jne	.Ltmp6771 # Offset: 11251
    00002bf5: 	cvttsd2si	init_value(%rip), %eax
    00002bfd: 	movdqa	%xmm1, %xmm0
    00002c01: 	psrldq	$0x8, %xmm0
    00002c06: 	paddd	%xmm0, %xmm1
    00002c0a: 	movdqa	%xmm1, %xmm0
    00002c0e: 	testl	%eax, %eax
    00002c10: 	psrldq	$0x4, %xmm0
    00002c15: 	leal	0x3f(%rax), %edx
    00002c18: 	cmovnsl	%eax, %edx
    00002c1b: 	paddd	%xmm0, %xmm1
    00002c1f: 	movd	%xmm1, %eax
    00002c23: 	sarl	$0x6, %edx
    00002c26: 	imull	$0x1f40, %edx, %edx
    00002c2c: 	cmpl	%eax, %edx
    00002c2e: 	je	.Ltmp6772 # Offset: 11310
    00002c30: 	movl	current_test(%rip), %edx
    00002c36: 	leaq	DATAat0x571d0(%rip), %rsi
    00002c3d: 	movl	$0x1, %edi
    00002c42: 	xorl	%eax, %eax
    00002c44: 	callq	__printf_chk@PLT # Offset: 11332
    00002c49: 	movl	iterations(%rip), %ecx
.Ltmp6772:
    00002c4f: 	addl	$0x1, 0x1c(%rsp)
    00002c54: 	movl	0x1c(%rsp), %eax
    00002c58: 	cmpl	%ecx, %eax
    00002c5a: 	jl	.Ltmp6773 # Offset: 11354
.Ltmp6770:
    00002c60: 	movq	%r12, %rsi
    00002c63: 	movq	%r15, %rdi
    00002c66: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11366
    00002c6b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002c72: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002c79: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002c80: 	je	.Ltmp6774 # Offset: 11392
.Ltmp7020:
    00002c86: 	movq	-0x20(%rax), %rdi
    00002c8a: 	movq	%rdi, (%rsp)
    00002c8e: 	callq	clock@PLT # Offset: 11406
    00002c93: 	movq	(%rsp), %rdi
    00002c97: 	pxor	%xmm0, %xmm0
    00002c9b: 	movq	%rax, end_time(%rip)
    00002ca2: 	subq	start_time(%rip), %rax
    00002ca9: 	cvtsi2sd	%rax, %xmm0
    00002cae: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002cb6: 	callq	_Z13record_resultdPKc # Offset: 11446
    00002cbb: 	movq	0xa0(%rsp), %rdi
    00002cc3: 	cmpq	%r13, %rdi
    00002cc6: 	je	.Ltmp6775 # Offset: 11462
    00002cc8: 	movq	0xb0(%rsp), %rax
    00002cd0: 	leaq	0x1(%rax), %rsi
    00002cd4: 	callq	_ZdlPvm@PLT # Offset: 11476
.Ltmp6775:
    00002cd9: 	leaq	0x80(%rsp), %rdi
    00002ce1: 	leaq	DATAat0x57542(%rip), %rdx
    00002ce8: 	movq	%r14, %rsi
    00002ceb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11499
    00002cf0: 	movl	iterations(%rip), %edx
    00002cf6: 	xorl	%r8d, %r8d
    00002cf9: 	xorl	%ecx, %ecx
    00002cfb: 	movl	$0x1f40, %esi
    00002d00: 	movq	0x80(%rsp), %rdi
    00002d08: 	callq	_Z9summarizePKciiii # Offset: 11528
    00002d0d: 	leaq	DATAat0x5755d(%rip), %rdx
    00002d14: 	movq	%r14, %rsi
    00002d17: 	movq	%r12, %rdi
    00002d1a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11546
    00002d1f: 	callq	clock@PLT # Offset: 11551
    00002d24: 	movl	iterations(%rip), %ecx
    00002d2a: 	movq	%rax, start_time(%rip)
    00002d31: 	testl	%ecx, %ecx
    00002d33: 	jle	.Ltmp6776 # Offset: 11571
    00002d39: 	movdqa	DATAat0x57c70(%rip), %xmm3
    00002d41: 	movl	$0x0, 0x1c(%rsp)
    00002d49: 	movaps	%xmm3, (%rsp)
    00002d4d: 	nopl	(%rax) # Size: 3
.Ltmp6779:
    00002d50: 	movq	%rbp, %rax
    00002d53: 	pxor	%xmm0, %xmm0
    00002d57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6777:
    00002d60: 	movdqa	(%rsp), %xmm1
    00002d65: 	pand	(%rax), %xmm1
    00002d69: 	addq	$0x10, %rax
    00002d6d: 	paddd	%xmm1, %xmm0
    00002d71: 	cmpq	%rbx, %rax
    00002d74: 	jne	.Ltmp6777 # Offset: 11636
    00002d76: 	movdqa	%xmm0, %xmm1
    00002d7a: 	cvttsd2si	init_value(%rip), %edx
    00002d82: 	psrldq	$0x8, %xmm1
    00002d87: 	paddd	%xmm1, %xmm0
    00002d8b: 	movdqa	%xmm0, %xmm1
    00002d8f: 	andl	$0x1, %edx
    00002d92: 	psrldq	$0x4, %xmm1
    00002d97: 	negl	%edx
    00002d99: 	paddd	%xmm1, %xmm0
    00002d9d: 	andl	$0x1f40, %edx
    00002da3: 	movd	%xmm0, %eax
    00002da7: 	cmpl	%eax, %edx
    00002da9: 	je	.Ltmp6778 # Offset: 11689
    00002dab: 	movl	current_test(%rip), %edx
    00002db1: 	leaq	DATAat0x571d0(%rip), %rsi
    00002db8: 	movl	$0x1, %edi
    00002dbd: 	xorl	%eax, %eax
    00002dbf: 	callq	__printf_chk@PLT # Offset: 11711
    00002dc4: 	movl	iterations(%rip), %ecx
.Ltmp6778:
    00002dca: 	addl	$0x1, 0x1c(%rsp)
    00002dcf: 	movl	0x1c(%rsp), %eax
    00002dd3: 	cmpl	%ecx, %eax
    00002dd5: 	jl	.Ltmp6779 # Offset: 11733
.Ltmp6776:
    00002ddb: 	movq	%r12, %rsi
    00002dde: 	movq	%r15, %rdi
    00002de1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11745
    00002de6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002ded: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002df4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002dfb: 	je	.Ltmp6780 # Offset: 11771
.Ltmp7019:
    00002e01: 	movq	-0x20(%rax), %rdi
    00002e05: 	movq	%rdi, (%rsp)
    00002e09: 	callq	clock@PLT # Offset: 11785
    00002e0e: 	movq	(%rsp), %rdi
    00002e12: 	pxor	%xmm0, %xmm0
    00002e16: 	movq	%rax, end_time(%rip)
    00002e1d: 	subq	start_time(%rip), %rax
    00002e24: 	cvtsi2sd	%rax, %xmm0
    00002e29: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002e31: 	callq	_Z13record_resultdPKc # Offset: 11825
    00002e36: 	movq	0xa0(%rsp), %rdi
    00002e3e: 	cmpq	%r13, %rdi
    00002e41: 	je	.Ltmp6781 # Offset: 11841
    00002e43: 	movq	0xb0(%rsp), %rax
    00002e4b: 	leaq	0x1(%rax), %rsi
    00002e4f: 	callq	_ZdlPvm@PLT # Offset: 11855
.Ltmp6781:
    00002e54: 	leaq	DATAat0x57564(%rip), %rdx
    00002e5b: 	movq	%r14, %rsi
    00002e5e: 	movq	%r12, %rdi
    00002e61: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11873
    00002e66: 	callq	clock@PLT # Offset: 11878
    00002e6b: 	movl	iterations(%rip), %edi
    00002e71: 	movl	$0x0, (%rsp)
    00002e78: 	movq	%rax, start_time(%rip)
    00002e7f: 	testl	%edi, %edi
    00002e81: 	jle	.Ltmp6782 # Offset: 11905
    00002e83: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6789:
    00002e88: 	movq	%rbp, %rax
    00002e8b: 	xorl	%esi, %esi
    00002e8d: 	nopl	(%rax) # Size: 3
.Ltmp6785:
    00002e90: 	movl	(%rax), %edx
    00002e92: 	movl	%edx, %ecx
    00002e94: 	andl	$0x1, %ecx
    00002e97: 	testl	%edx, %edx
    00002e99: 	jns	.Ltmp6783 # Offset: 11929
    00002e9b: 	testb	%cl, %cl
    00002e9d: 	jne	.Ltmp6784 # Offset: 11933
.Ltmp6783:
    00002ea3: 	addq	$0x4, %rax
    00002ea7: 	addl	%ecx, %esi
    00002ea9: 	cmpq	%rax, %rbx
    00002eac: 	jne	.Ltmp6785 # Offset: 11948
.Ltmp6988:
    00002eae: 	cvttsd2si	init_value(%rip), %edx
    00002eb6: 	movl	%edx, %eax
    00002eb8: 	andl	$0x1, %eax
    00002ebb: 	testl	%edx, %edx
    00002ebd: 	jns	.Ltmp6786 # Offset: 11965
    00002ebf: 	testb	%al, %al
    00002ec1: 	jne	.Ltmp6787 # Offset: 11969
.Ltmp6786:
    00002ec7: 	imull	$0x1f40, %eax, %eax
.Ltmp7049:
    00002ecd: 	cmpl	%eax, %esi
    00002ecf: 	je	.Ltmp6788 # Offset: 11983
    00002ed1: 	movl	current_test(%rip), %edx
    00002ed7: 	leaq	DATAat0x571d0(%rip), %rsi
    00002ede: 	movl	$0x1, %edi
    00002ee3: 	xorl	%eax, %eax
    00002ee5: 	callq	__printf_chk@PLT # Offset: 12005
    00002eea: 	movl	iterations(%rip), %edi
.Ltmp6788:
    00002ef0: 	addl	$0x1, (%rsp)
    00002ef4: 	movl	(%rsp), %eax
    00002ef7: 	cmpl	%edi, %eax
    00002ef9: 	jl	.Ltmp6789 # Offset: 12025
.Ltmp6782:
    00002efb: 	movq	%r12, %rsi
    00002efe: 	movq	%r15, %rdi
    00002f01: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12033
    00002f06: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002f0d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002f14: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002f1b: 	je	.Ltmp6790 # Offset: 12059
.Ltmp7018:
    00002f21: 	movq	-0x20(%rax), %rdi
    00002f25: 	movq	%rdi, (%rsp)
    00002f29: 	callq	clock@PLT # Offset: 12073
    00002f2e: 	movq	(%rsp), %rdi
    00002f32: 	pxor	%xmm0, %xmm0
    00002f36: 	movq	%rax, end_time(%rip)
    00002f3d: 	subq	start_time(%rip), %rax
    00002f44: 	cvtsi2sd	%rax, %xmm0
    00002f49: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00002f51: 	callq	_Z13record_resultdPKc # Offset: 12113
    00002f56: 	movq	0xa0(%rsp), %rdi
    00002f5e: 	cmpq	%r13, %rdi
    00002f61: 	je	.Ltmp6791 # Offset: 12129
    00002f63: 	movq	0xb0(%rsp), %rax
    00002f6b: 	leaq	0x1(%rax), %rsi
    00002f6f: 	callq	_ZdlPvm@PLT # Offset: 12143
.Ltmp6791:
    00002f74: 	leaq	DATAat0x57575(%rip), %rdx
    00002f7b: 	movq	%r14, %rsi
    00002f7e: 	movq	%r12, %rdi
    00002f81: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12161
    00002f86: 	callq	clock@PLT # Offset: 12166
    00002f8b: 	movl	iterations(%rip), %edi
    00002f91: 	movl	$0x0, (%rsp)
    00002f98: 	movq	%rax, start_time(%rip)
    00002f9f: 	testl	%edi, %edi
    00002fa1: 	jle	.Ltmp6792 # Offset: 12193
    00002fa3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6799:
    00002fa8: 	movq	%rbp, %rax
    00002fab: 	xorl	%esi, %esi
    00002fad: 	nopl	(%rax) # Size: 3
.Ltmp6795:
    00002fb0: 	movl	(%rax), %edx
    00002fb2: 	movl	%edx, %ecx
    00002fb4: 	andl	$0x1, %ecx
    00002fb7: 	testl	%edx, %edx
    00002fb9: 	jns	.Ltmp6793 # Offset: 12217
    00002fbb: 	testb	%cl, %cl
    00002fbd: 	jne	.Ltmp6794 # Offset: 12221
.Ltmp6793:
    00002fc3: 	addq	$0x4, %rax
    00002fc7: 	addl	%ecx, %esi
    00002fc9: 	cmpq	%rax, %rbx
    00002fcc: 	jne	.Ltmp6795 # Offset: 12236
.Ltmp6989:
    00002fce: 	cvttsd2si	init_value(%rip), %edx
    00002fd6: 	movl	%edx, %eax
    00002fd8: 	andl	$0x1, %eax
    00002fdb: 	testl	%edx, %edx
    00002fdd: 	jns	.Ltmp6796 # Offset: 12253
    00002fdf: 	testb	%al, %al
    00002fe1: 	jne	.Ltmp6797 # Offset: 12257
.Ltmp6796:
    00002fe7: 	imull	$0x1f40, %eax, %eax
.Ltmp7048:
    00002fed: 	cmpl	%eax, %esi
    00002fef: 	je	.Ltmp6798 # Offset: 12271
    00002ff1: 	movl	current_test(%rip), %edx
    00002ff7: 	leaq	DATAat0x571d0(%rip), %rsi
    00002ffe: 	movl	$0x1, %edi
    00003003: 	xorl	%eax, %eax
    00003005: 	callq	__printf_chk@PLT # Offset: 12293
    0000300a: 	movl	iterations(%rip), %edi
.Ltmp6798:
    00003010: 	addl	$0x1, (%rsp)
    00003014: 	movl	(%rsp), %eax
    00003017: 	cmpl	%edi, %eax
    00003019: 	jl	.Ltmp6799 # Offset: 12313
.Ltmp6792:
    0000301b: 	movq	%r12, %rsi
    0000301e: 	movq	%r15, %rdi
    00003021: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12321
    00003026: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000302d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003034: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000303b: 	je	.Ltmp6800 # Offset: 12347
.Ltmp7017:
    00003041: 	movq	-0x20(%rax), %rdi
    00003045: 	movq	%rdi, (%rsp)
    00003049: 	callq	clock@PLT # Offset: 12361
    0000304e: 	movq	(%rsp), %rdi
    00003052: 	pxor	%xmm0, %xmm0
    00003056: 	movq	%rax, end_time(%rip)
    0000305d: 	subq	start_time(%rip), %rax
    00003064: 	cvtsi2sd	%rax, %xmm0
    00003069: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003071: 	callq	_Z13record_resultdPKc # Offset: 12401
    00003076: 	movq	0xa0(%rsp), %rdi
    0000307e: 	cmpq	%r13, %rdi
    00003081: 	je	.Ltmp6801 # Offset: 12417
    00003083: 	movq	0xb0(%rsp), %rax
    0000308b: 	leaq	0x1(%rax), %rsi
    0000308f: 	callq	_ZdlPvm@PLT # Offset: 12431
.Ltmp6801:
    00003094: 	leaq	DATAat0x57587(%rip), %rdx
    0000309b: 	movq	%r14, %rsi
    0000309e: 	movq	%r12, %rdi
    000030a1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12449
    000030a6: 	callq	clock@PLT # Offset: 12454
    000030ab: 	movl	iterations(%rip), %esi
    000030b1: 	movq	%rax, start_time(%rip)
    000030b8: 	testl	%esi, %esi
    000030ba: 	jle	.Ltmp6802 # Offset: 12474
    000030c0: 	movdqa	DATAat0x57c70(%rip), %xmm4
    000030c8: 	movl	$0x0, 0x1c(%rsp)
    000030d0: 	movaps	%xmm4, (%rsp)
    000030d4: 	nopl	(%rax) # Size: 4
.Ltmp6805:
    000030d8: 	movq	%rbp, %rax
    000030db: 	pxor	%xmm1, %xmm1
    000030df: 	nop # Size: 1
.Ltmp6803:
    000030e0: 	movdqa	(%rax), %xmm0
    000030e4: 	addq	$0x10, %rax
    000030e8: 	movdqa	%xmm0, %xmm2
    000030ec: 	psrld	$0x1f, %xmm2
    000030f1: 	paddd	%xmm2, %xmm0
    000030f5: 	pand	(%rsp), %xmm0
    000030fa: 	psubd	%xmm2, %xmm0
    000030fe: 	paddd	%xmm0, %xmm1
    00003102: 	cmpq	%rbx, %rax
    00003105: 	jne	.Ltmp6803 # Offset: 12549
    00003107: 	cvttsd2si	init_value(%rip), %eax
    0000310f: 	movdqa	%xmm1, %xmm0
    00003113: 	psrldq	$0x8, %xmm0
    00003118: 	paddd	%xmm0, %xmm1
    0000311c: 	movdqa	%xmm1, %xmm0
    00003120: 	movl	%eax, %ecx
    00003122: 	psrldq	$0x4, %xmm0
    00003127: 	shrl	$0x1f, %ecx
    0000312a: 	paddd	%xmm0, %xmm1
    0000312e: 	leal	(%rax,%rcx), %edx
    00003131: 	movd	%xmm1, %eax
    00003135: 	andl	$0x1, %edx
    00003138: 	subl	%ecx, %edx
    0000313a: 	imull	$0x1f40, %edx, %edx
    00003140: 	cmpl	%eax, %edx
    00003142: 	je	.Ltmp6804 # Offset: 12610
    00003144: 	movl	current_test(%rip), %edx
    0000314a: 	leaq	DATAat0x571d0(%rip), %rsi
    00003151: 	movl	$0x1, %edi
    00003156: 	xorl	%eax, %eax
    00003158: 	callq	__printf_chk@PLT # Offset: 12632
    0000315d: 	movl	iterations(%rip), %esi
.Ltmp6804:
    00003163: 	addl	$0x1, 0x1c(%rsp)
    00003168: 	movl	0x1c(%rsp), %eax
    0000316c: 	cmpl	%esi, %eax
    0000316e: 	jl	.Ltmp6805 # Offset: 12654
.Ltmp6802:
    00003174: 	movq	%r12, %rsi
    00003177: 	movq	%r15, %rdi
    0000317a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12666
    0000317f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003186: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000318d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003194: 	je	.Ltmp6806 # Offset: 12692
.Ltmp7016:
    0000319a: 	movq	-0x20(%rax), %rdi
    0000319e: 	movq	%rdi, (%rsp)
    000031a2: 	callq	clock@PLT # Offset: 12706
    000031a7: 	movq	(%rsp), %rdi
    000031ab: 	pxor	%xmm0, %xmm0
    000031af: 	movq	%rax, end_time(%rip)
    000031b6: 	subq	start_time(%rip), %rax
    000031bd: 	cvtsi2sd	%rax, %xmm0
    000031c2: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000031ca: 	callq	_Z13record_resultdPKc # Offset: 12746
    000031cf: 	movq	0xa0(%rsp), %rdi
    000031d7: 	cmpq	%r13, %rdi
    000031da: 	je	.Ltmp6807 # Offset: 12762
    000031dc: 	movq	0xb0(%rsp), %rax
    000031e4: 	leaq	0x1(%rax), %rsi
    000031e8: 	callq	_ZdlPvm@PLT # Offset: 12776
.Ltmp6807:
    000031ed: 	leaq	DATAat0x5759e(%rip), %rdx
    000031f4: 	movq	%r14, %rsi
    000031f7: 	movq	%r12, %rdi
    000031fa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12794
    000031ff: 	movq	%r12, %rcx
    00003202: 	movl	$0x2, %edx
    00003207: 	movl	$0x1f40, %esi
    0000320c: 	movq	%rbp, %rdi
    0000320f: 	callq	_Z14test_variable1Ii25custom_remainder_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 12815
    00003214: 	movq	0xa0(%rsp), %rdi
    0000321c: 	cmpq	%r13, %rdi
    0000321f: 	je	.Ltmp6808 # Offset: 12831
    00003221: 	movq	0xb0(%rsp), %rax
    00003229: 	leaq	0x1(%rax), %rsi
    0000322d: 	callq	_ZdlPvm@PLT # Offset: 12845
.Ltmp6808:
    00003232: 	leaq	DATAat0x575b7(%rip), %rdx
    00003239: 	movq	%r14, %rsi
    0000323c: 	movq	%r12, %rdi
    0000323f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12863
    00003244: 	callq	clock@PLT # Offset: 12868
    00003249: 	movl	iterations(%rip), %esi
    0000324f: 	movq	%rax, start_time(%rip)
    00003256: 	testl	%esi, %esi
    00003258: 	jle	.Ltmp6809 # Offset: 12888
    0000325e: 	movdqa	DATAat0x57c70(%rip), %xmm3
    00003266: 	movl	$0x0, 0x1c(%rsp)
    0000326e: 	movaps	%xmm3, (%rsp)
    00003272: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6812:
    00003278: 	movq	%rbp, %rax
    0000327b: 	pxor	%xmm1, %xmm1
    0000327f: 	nop # Size: 1
.Ltmp6810:
    00003280: 	movdqa	(%rax), %xmm0
    00003284: 	addq	$0x10, %rax
    00003288: 	movdqa	%xmm0, %xmm2
    0000328c: 	psrld	$0x1f, %xmm2
    00003291: 	paddd	%xmm2, %xmm0
    00003295: 	pand	(%rsp), %xmm0
    0000329a: 	psubd	%xmm2, %xmm0
    0000329e: 	paddd	%xmm0, %xmm1
    000032a2: 	cmpq	%rax, %rbx
    000032a5: 	jne	.Ltmp6810 # Offset: 12965
    000032a7: 	cvttsd2si	init_value(%rip), %eax
    000032af: 	movdqa	%xmm1, %xmm0
    000032b3: 	psrldq	$0x8, %xmm0
    000032b8: 	paddd	%xmm0, %xmm1
    000032bc: 	movdqa	%xmm1, %xmm0
    000032c0: 	movl	%eax, %ecx
    000032c2: 	psrldq	$0x4, %xmm0
    000032c7: 	shrl	$0x1f, %ecx
    000032ca: 	paddd	%xmm0, %xmm1
    000032ce: 	leal	(%rax,%rcx), %edx
    000032d1: 	movd	%xmm1, %eax
    000032d5: 	andl	$0x1, %edx
    000032d8: 	subl	%ecx, %edx
    000032da: 	imull	$0x1f40, %edx, %edx
    000032e0: 	cmpl	%eax, %edx
    000032e2: 	je	.Ltmp6811 # Offset: 13026
    000032e4: 	movl	current_test(%rip), %edx
    000032ea: 	leaq	DATAat0x571d0(%rip), %rsi
    000032f1: 	movl	$0x1, %edi
    000032f6: 	xorl	%eax, %eax
    000032f8: 	callq	__printf_chk@PLT # Offset: 13048
    000032fd: 	movl	iterations(%rip), %esi
.Ltmp6811:
    00003303: 	addl	$0x1, 0x1c(%rsp)
    00003308: 	movl	0x1c(%rsp), %eax
    0000330c: 	cmpl	%esi, %eax
    0000330e: 	jl	.Ltmp6812 # Offset: 13070
.Ltmp6809:
    00003314: 	movq	%r12, %rsi
    00003317: 	movq	%r15, %rdi
    0000331a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13082
    0000331f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003326: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000332d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003334: 	je	.Ltmp6813 # Offset: 13108
.Ltmp7015:
    0000333a: 	movq	-0x20(%rax), %rdi
    0000333e: 	movq	%rdi, (%rsp)
    00003342: 	callq	clock@PLT # Offset: 13122
    00003347: 	movq	(%rsp), %rdi
    0000334b: 	pxor	%xmm0, %xmm0
    0000334f: 	movq	%rax, end_time(%rip)
    00003356: 	subq	start_time(%rip), %rax
    0000335d: 	cvtsi2sd	%rax, %xmm0
    00003362: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000336a: 	callq	_Z13record_resultdPKc # Offset: 13162
    0000336f: 	movq	0xa0(%rsp), %rdi
    00003377: 	cmpq	%r13, %rdi
    0000337a: 	je	.Ltmp6814 # Offset: 13178
    0000337c: 	movq	0xb0(%rsp), %rax
    00003384: 	leaq	0x1(%rax), %rsi
    00003388: 	callq	_ZdlPvm@PLT # Offset: 13192
.Ltmp6814:
    0000338d: 	leaq	DATAat0x575d0(%rip), %rdx
    00003394: 	movq	%r14, %rsi
    00003397: 	movq	%r12, %rdi
    0000339a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13210
    0000339f: 	callq	clock@PLT # Offset: 13215
    000033a4: 	movl	iterations(%rip), %ecx
    000033aa: 	movq	%rax, start_time(%rip)
    000033b1: 	testl	%ecx, %ecx
    000033b3: 	jle	.Ltmp6815 # Offset: 13235
    000033b9: 	movdqa	DATAat0x57cd0(%rip), %xmm4
    000033c1: 	movl	$0x0, 0x1c(%rsp)
    000033c9: 	movaps	%xmm4, (%rsp)
    000033cd: 	nopl	(%rax) # Size: 3
.Ltmp6818:
    000033d0: 	movq	%rbp, %rax
    000033d3: 	pxor	%xmm0, %xmm0
    000033d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6816:
    000033e0: 	movdqa	(%rsp), %xmm1
    000033e5: 	pand	(%rax), %xmm1
    000033e9: 	addq	$0x10, %rax
    000033ed: 	paddd	%xmm1, %xmm0
    000033f1: 	cmpq	%rbx, %rax
    000033f4: 	jne	.Ltmp6816 # Offset: 13300
    000033f6: 	cvttsd2si	init_value(%rip), %edx
    000033fe: 	movdqa	%xmm0, %xmm1
    00003402: 	psrldq	$0x8, %xmm1
    00003407: 	paddd	%xmm1, %xmm0
    0000340b: 	movdqa	%xmm0, %xmm1
    0000340f: 	andl	$0x3, %edx
    00003412: 	psrldq	$0x4, %xmm1
    00003417: 	imull	$0x1f40, %edx, %edx
    0000341d: 	paddd	%xmm1, %xmm0
    00003421: 	movd	%xmm0, %eax
    00003425: 	cmpl	%eax, %edx
    00003427: 	je	.Ltmp6817 # Offset: 13351
    00003429: 	movl	current_test(%rip), %edx
    0000342f: 	leaq	DATAat0x571d0(%rip), %rsi
    00003436: 	movl	$0x1, %edi
    0000343b: 	xorl	%eax, %eax
    0000343d: 	callq	__printf_chk@PLT # Offset: 13373
    00003442: 	movl	iterations(%rip), %ecx
.Ltmp6817:
    00003448: 	addl	$0x1, 0x1c(%rsp)
    0000344d: 	movl	0x1c(%rsp), %eax
    00003451: 	cmpl	%ecx, %eax
    00003453: 	jl	.Ltmp6818 # Offset: 13395
.Ltmp6815:
    00003459: 	movq	%r12, %rsi
    0000345c: 	movq	%r15, %rdi
    0000345f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13407
    00003464: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000346b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003472: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003479: 	je	.Ltmp6819 # Offset: 13433
.Ltmp7014:
    0000347f: 	movq	-0x20(%rax), %rdi
    00003483: 	movq	%rdi, (%rsp)
    00003487: 	callq	clock@PLT # Offset: 13447
    0000348c: 	movq	(%rsp), %rdi
    00003490: 	pxor	%xmm0, %xmm0
    00003494: 	movq	%rax, end_time(%rip)
    0000349b: 	subq	start_time(%rip), %rax
    000034a2: 	cvtsi2sd	%rax, %xmm0
    000034a7: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000034af: 	callq	_Z13record_resultdPKc # Offset: 13487
    000034b4: 	movq	0xa0(%rsp), %rdi
    000034bc: 	cmpq	%r13, %rdi
    000034bf: 	je	.Ltmp6820 # Offset: 13503
    000034c1: 	movq	0xb0(%rsp), %rax
    000034c9: 	leaq	0x1(%rax), %rsi
    000034cd: 	callq	_ZdlPvm@PLT # Offset: 13517
.Ltmp6820:
    000034d2: 	leaq	DATAat0x575d7(%rip), %rdx
    000034d9: 	movq	%r14, %rsi
    000034dc: 	movq	%r12, %rdi
    000034df: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13535
    000034e4: 	movq	%r12, %rdx
    000034e7: 	movl	$0x1f40, %esi
    000034ec: 	movq	%rbp, %rdi
    000034ef: 	callq	_Z13test_constantIi13and_remainderIiLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 13551
    000034f4: 	movq	0xa0(%rsp), %rdi
    000034fc: 	cmpq	%r13, %rdi
    000034ff: 	je	.Ltmp6821 # Offset: 13567
    00003501: 	movq	0xb0(%rsp), %rax
    00003509: 	leaq	0x1(%rax), %rsi
    0000350d: 	callq	_ZdlPvm@PLT # Offset: 13581
.Ltmp6821:
    00003512: 	leaq	DATAat0x575e8(%rip), %rdx
    00003519: 	movq	%r14, %rsi
    0000351c: 	movq	%r12, %rdi
    0000351f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13599
    00003524: 	movq	%r12, %rdx
    00003527: 	movl	$0x1f40, %esi
    0000352c: 	movq	%rbp, %rdi
    0000352f: 	callq	_Z13test_constantIi14and_remainder2IiLi3EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 13615
    00003534: 	movq	0xa0(%rsp), %rdi
    0000353c: 	cmpq	%r13, %rdi
    0000353f: 	je	.Ltmp6822 # Offset: 13631
    00003541: 	movq	0xb0(%rsp), %rax
    00003549: 	leaq	0x1(%rax), %rsi
    0000354d: 	callq	_ZdlPvm@PLT # Offset: 13645
.Ltmp6822:
    00003552: 	leaq	DATAat0x575fa(%rip), %rdx
    00003559: 	movq	%r14, %rsi
    0000355c: 	movq	%r12, %rdi
    0000355f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13663
    00003564: 	callq	clock@PLT # Offset: 13668
    00003569: 	movl	iterations(%rip), %esi
    0000356f: 	movq	%rax, start_time(%rip)
    00003576: 	testl	%esi, %esi
    00003578: 	jle	.Ltmp6823 # Offset: 13688
    0000357e: 	movdqa	DATAat0x57cd0(%rip), %xmm3
    00003586: 	movl	$0x0, 0x1c(%rsp)
    0000358e: 	movaps	%xmm3, (%rsp)
    00003592: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6826:
    00003598: 	pxor	%xmm2, %xmm2
    0000359c: 	movq	%rbp, %rax
    0000359f: 	movdqa	%xmm2, %xmm3
    000035a3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6824:
    000035a8: 	movdqa	%xmm3, %xmm1
    000035ac: 	movdqa	(%rsp), %xmm6
    000035b1: 	movdqa	(%rax), %xmm0
    000035b5: 	addq	$0x10, %rax
    000035b9: 	pcmpgtd	-0x10(%rax), %xmm1
    000035be: 	pand	%xmm6, %xmm1
    000035c2: 	paddd	%xmm1, %xmm0
    000035c6: 	pand	%xmm6, %xmm0
    000035ca: 	psubd	%xmm1, %xmm0
    000035ce: 	paddd	%xmm0, %xmm2
    000035d2: 	cmpq	%rax, %rbx
    000035d5: 	jne	.Ltmp6824 # Offset: 13781
    000035d7: 	cvttsd2si	init_value(%rip), %eax
    000035df: 	movdqa	%xmm2, %xmm0
    000035e3: 	psrldq	$0x8, %xmm0
    000035e8: 	paddd	%xmm0, %xmm2
    000035ec: 	movdqa	%xmm2, %xmm0
    000035f0: 	movl	%eax, %ecx
    000035f2: 	psrldq	$0x4, %xmm0
    000035f7: 	sarl	$0x1f, %ecx
    000035fa: 	paddd	%xmm0, %xmm2
    000035fe: 	shrl	$0x1e, %ecx
    00003601: 	leal	(%rax,%rcx), %edx
    00003604: 	movd	%xmm2, %eax
    00003608: 	andl	$0x3, %edx
    0000360b: 	subl	%ecx, %edx
    0000360d: 	imull	$0x1f40, %edx, %edx
    00003613: 	cmpl	%eax, %edx
    00003615: 	je	.Ltmp6825 # Offset: 13845
    00003617: 	movl	current_test(%rip), %edx
    0000361d: 	leaq	DATAat0x571d0(%rip), %rsi
    00003624: 	movl	$0x1, %edi
    00003629: 	xorl	%eax, %eax
    0000362b: 	callq	__printf_chk@PLT # Offset: 13867
    00003630: 	movl	iterations(%rip), %esi
.Ltmp6825:
    00003636: 	addl	$0x1, 0x1c(%rsp)
    0000363b: 	movl	0x1c(%rsp), %eax
    0000363f: 	cmpl	%esi, %eax
    00003641: 	jl	.Ltmp6826 # Offset: 13889
.Ltmp6823:
    00003647: 	movq	%r12, %rsi
    0000364a: 	movq	%r15, %rdi
    0000364d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13901
    00003652: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003659: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003660: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003667: 	je	.Ltmp6827 # Offset: 13927
.Ltmp7013:
    0000366d: 	movq	-0x20(%rax), %rdi
    00003671: 	movq	%rdi, (%rsp)
    00003675: 	callq	clock@PLT # Offset: 13941
    0000367a: 	movq	(%rsp), %rdi
    0000367e: 	pxor	%xmm0, %xmm0
    00003682: 	movq	%rax, end_time(%rip)
    00003689: 	subq	start_time(%rip), %rax
    00003690: 	cvtsi2sd	%rax, %xmm0
    00003695: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000369d: 	callq	_Z13record_resultdPKc # Offset: 13981
    000036a2: 	movq	0xa0(%rsp), %rdi
    000036aa: 	cmpq	%r13, %rdi
    000036ad: 	je	.Ltmp6828 # Offset: 13997
    000036af: 	movq	0xb0(%rsp), %rax
    000036b7: 	leaq	0x1(%rax), %rsi
    000036bb: 	callq	_ZdlPvm@PLT # Offset: 14011
.Ltmp6828:
    000036c0: 	leaq	DATAat0x57611(%rip), %rdx
    000036c7: 	movq	%r14, %rsi
    000036ca: 	movq	%r12, %rdi
    000036cd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14029
    000036d2: 	movq	%r12, %rcx
    000036d5: 	movl	$0x4, %edx
    000036da: 	movl	$0x1f40, %esi
    000036df: 	movq	%rbp, %rdi
    000036e2: 	callq	_Z14test_variable1Ii25custom_remainder_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 14050
    000036e7: 	movq	0xa0(%rsp), %rdi
    000036ef: 	cmpq	%r13, %rdi
    000036f2: 	je	.Ltmp6829 # Offset: 14066
    000036f4: 	movq	0xb0(%rsp), %rax
    000036fc: 	leaq	0x1(%rax), %rsi
    00003700: 	callq	_ZdlPvm@PLT # Offset: 14080
.Ltmp6829:
    00003705: 	leaq	DATAat0x5762a(%rip), %rdx
    0000370c: 	movq	%r14, %rsi
    0000370f: 	movq	%r12, %rdi
    00003712: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14098
    00003717: 	callq	clock@PLT # Offset: 14103
    0000371c: 	movl	iterations(%rip), %esi
    00003722: 	movq	%rax, start_time(%rip)
    00003729: 	testl	%esi, %esi
    0000372b: 	jle	.Ltmp6830 # Offset: 14123
    00003731: 	movdqa	DATAat0x57cd0(%rip), %xmm4
    00003739: 	movl	$0x0, 0x1c(%rsp)
    00003741: 	movaps	%xmm4, (%rsp)
    00003745: 	nopl	(%rax) # Size: 3
.Ltmp6833:
    00003748: 	pxor	%xmm2, %xmm2
    0000374c: 	movq	%rbp, %rax
    0000374f: 	movdqa	%xmm2, %xmm3
    00003753: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6831:
    00003758: 	movdqa	%xmm3, %xmm1
    0000375c: 	movdqa	(%rsp), %xmm7
    00003761: 	movdqa	(%rax), %xmm0
    00003765: 	addq	$0x10, %rax
    00003769: 	pcmpgtd	-0x10(%rax), %xmm1
    0000376e: 	pand	%xmm7, %xmm1
    00003772: 	paddd	%xmm1, %xmm0
    00003776: 	pand	%xmm7, %xmm0
    0000377a: 	psubd	%xmm1, %xmm0
    0000377e: 	paddd	%xmm0, %xmm2
    00003782: 	cmpq	%rbx, %rax
    00003785: 	jne	.Ltmp6831 # Offset: 14213
    00003787: 	cvttsd2si	init_value(%rip), %eax
    0000378f: 	movdqa	%xmm2, %xmm0
    00003793: 	psrldq	$0x8, %xmm0
    00003798: 	paddd	%xmm0, %xmm2
    0000379c: 	movdqa	%xmm2, %xmm0
    000037a0: 	movl	%eax, %ecx
    000037a2: 	psrldq	$0x4, %xmm0
    000037a7: 	sarl	$0x1f, %ecx
    000037aa: 	paddd	%xmm0, %xmm2
    000037ae: 	shrl	$0x1e, %ecx
    000037b1: 	leal	(%rax,%rcx), %edx
    000037b4: 	movd	%xmm2, %eax
    000037b8: 	andl	$0x3, %edx
    000037bb: 	subl	%ecx, %edx
    000037bd: 	imull	$0x1f40, %edx, %edx
    000037c3: 	cmpl	%eax, %edx
    000037c5: 	je	.Ltmp6832 # Offset: 14277
    000037c7: 	movl	current_test(%rip), %edx
    000037cd: 	leaq	DATAat0x571d0(%rip), %rsi
    000037d4: 	movl	$0x1, %edi
    000037d9: 	xorl	%eax, %eax
    000037db: 	callq	__printf_chk@PLT # Offset: 14299
    000037e0: 	movl	iterations(%rip), %esi
.Ltmp6832:
    000037e6: 	addl	$0x1, 0x1c(%rsp)
    000037eb: 	movl	0x1c(%rsp), %eax
    000037ef: 	cmpl	%esi, %eax
    000037f1: 	jl	.Ltmp6833 # Offset: 14321
.Ltmp6830:
    000037f7: 	movq	%r12, %rsi
    000037fa: 	movq	%r15, %rdi
    000037fd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14333
    00003802: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003809: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003810: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003817: 	je	.Ltmp6834 # Offset: 14359
.Ltmp7012:
    0000381d: 	movq	-0x20(%rax), %rdi
    00003821: 	movq	%rdi, (%rsp)
    00003825: 	callq	clock@PLT # Offset: 14373
    0000382a: 	movq	(%rsp), %rdi
    0000382e: 	pxor	%xmm0, %xmm0
    00003832: 	movq	%rax, end_time(%rip)
    00003839: 	subq	start_time(%rip), %rax
    00003840: 	cvtsi2sd	%rax, %xmm0
    00003845: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000384d: 	callq	_Z13record_resultdPKc # Offset: 14413
    00003852: 	movq	0xa0(%rsp), %rdi
    0000385a: 	cmpq	%r13, %rdi
    0000385d: 	je	.Ltmp6835 # Offset: 14429
    0000385f: 	movq	0xb0(%rsp), %rax
    00003867: 	leaq	0x1(%rax), %rsi
    0000386b: 	callq	_ZdlPvm@PLT # Offset: 14443
.Ltmp6835:
    00003870: 	leaq	DATAat0x57643(%rip), %rdx
    00003877: 	movq	%r14, %rsi
    0000387a: 	movq	%r12, %rdi
    0000387d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14461
    00003882: 	callq	clock@PLT # Offset: 14466
    00003887: 	movl	iterations(%rip), %ecx
    0000388d: 	movq	%rax, start_time(%rip)
    00003894: 	testl	%ecx, %ecx
    00003896: 	jle	.Ltmp6836 # Offset: 14486
    0000389c: 	movdqa	DATAat0x57e00(%rip), %xmm3
    000038a4: 	movl	$0x0, 0x1c(%rsp)
    000038ac: 	movaps	%xmm3, (%rsp)
.Ltmp6839:
    000038b0: 	movq	%rbp, %rax
    000038b3: 	pxor	%xmm0, %xmm0
    000038b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6837:
    000038c0: 	movdqa	(%rsp), %xmm1
    000038c5: 	pand	(%rax), %xmm1
    000038c9: 	addq	$0x10, %rax
    000038cd: 	paddd	%xmm1, %xmm0
    000038d1: 	cmpq	%rax, %rbx
    000038d4: 	jne	.Ltmp6837 # Offset: 14548
    000038d6: 	cvttsd2si	init_value(%rip), %edx
    000038de: 	movdqa	%xmm0, %xmm1
    000038e2: 	psrldq	$0x8, %xmm1
    000038e7: 	paddd	%xmm1, %xmm0
    000038eb: 	movdqa	%xmm0, %xmm1
    000038ef: 	andl	$0x7, %edx
    000038f2: 	psrldq	$0x4, %xmm1
    000038f7: 	imull	$0x1f40, %edx, %edx
    000038fd: 	paddd	%xmm1, %xmm0
    00003901: 	movd	%xmm0, %eax
    00003905: 	cmpl	%eax, %edx
    00003907: 	je	.Ltmp6838 # Offset: 14599
    00003909: 	movl	current_test(%rip), %edx
    0000390f: 	leaq	DATAat0x571d0(%rip), %rsi
    00003916: 	movl	$0x1, %edi
    0000391b: 	xorl	%eax, %eax
    0000391d: 	callq	__printf_chk@PLT # Offset: 14621
    00003922: 	movl	iterations(%rip), %ecx
.Ltmp6838:
    00003928: 	addl	$0x1, 0x1c(%rsp)
    0000392d: 	movl	0x1c(%rsp), %eax
    00003931: 	cmpl	%ecx, %eax
    00003933: 	jl	.Ltmp6839 # Offset: 14643
.Ltmp6836:
    00003939: 	movq	%r12, %rsi
    0000393c: 	movq	%r15, %rdi
    0000393f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14655
    00003944: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000394b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003952: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003959: 	je	.Ltmp6840 # Offset: 14681
.Ltmp7011:
    0000395f: 	movq	-0x20(%rax), %rdi
    00003963: 	movq	%rdi, (%rsp)
    00003967: 	callq	clock@PLT # Offset: 14695
    0000396c: 	movq	(%rsp), %rdi
    00003970: 	pxor	%xmm0, %xmm0
    00003974: 	movq	%rax, end_time(%rip)
    0000397b: 	subq	start_time(%rip), %rax
    00003982: 	cvtsi2sd	%rax, %xmm0
    00003987: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000398f: 	callq	_Z13record_resultdPKc # Offset: 14735
    00003994: 	movq	0xa0(%rsp), %rdi
    0000399c: 	cmpq	%r13, %rdi
    0000399f: 	je	.Ltmp6841 # Offset: 14751
    000039a1: 	movq	0xb0(%rsp), %rax
    000039a9: 	leaq	0x1(%rax), %rsi
    000039ad: 	callq	_ZdlPvm@PLT # Offset: 14765
.Ltmp6841:
    000039b2: 	leaq	DATAat0x5764a(%rip), %rdx
    000039b9: 	movq	%r14, %rsi
    000039bc: 	movq	%r12, %rdi
    000039bf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14783
    000039c4: 	movq	%r12, %rdx
    000039c7: 	movl	$0x1f40, %esi
    000039cc: 	movq	%rbp, %rdi
    000039cf: 	callq	_Z13test_constantIi13and_remainderIiLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 14799
    000039d4: 	movq	0xa0(%rsp), %rdi
    000039dc: 	cmpq	%r13, %rdi
    000039df: 	je	.Ltmp6842 # Offset: 14815
    000039e1: 	movq	0xb0(%rsp), %rax
    000039e9: 	leaq	0x1(%rax), %rsi
    000039ed: 	callq	_ZdlPvm@PLT # Offset: 14829
.Ltmp6842:
    000039f2: 	leaq	DATAat0x5765b(%rip), %rdx
    000039f9: 	movq	%r14, %rsi
    000039fc: 	movq	%r12, %rdi
    000039ff: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14847
    00003a04: 	movq	%r12, %rdx
    00003a07: 	movl	$0x1f40, %esi
    00003a0c: 	movq	%rbp, %rdi
    00003a0f: 	callq	_Z13test_constantIi14and_remainder2IiLi7EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 14863
    00003a14: 	movq	0xa0(%rsp), %rdi
    00003a1c: 	cmpq	%r13, %rdi
    00003a1f: 	je	.Ltmp6843 # Offset: 14879
    00003a21: 	movq	0xb0(%rsp), %rax
    00003a29: 	leaq	0x1(%rax), %rsi
    00003a2d: 	callq	_ZdlPvm@PLT # Offset: 14893
.Ltmp6843:
    00003a32: 	leaq	DATAat0x5766d(%rip), %rdx
    00003a39: 	movq	%r14, %rsi
    00003a3c: 	movq	%r12, %rdi
    00003a3f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14911
    00003a44: 	callq	clock@PLT # Offset: 14916
    00003a49: 	movl	iterations(%rip), %esi
    00003a4f: 	movq	%rax, start_time(%rip)
    00003a56: 	testl	%esi, %esi
    00003a58: 	jle	.Ltmp6844 # Offset: 14936
    00003a5e: 	movdqa	DATAat0x57e00(%rip), %xmm4
    00003a66: 	movl	$0x0, 0x1c(%rsp)
    00003a6e: 	movaps	%xmm4, (%rsp)
    00003a72: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6847:
    00003a78: 	pxor	%xmm2, %xmm2
    00003a7c: 	movq	%rbp, %rax
    00003a7f: 	movdqa	%xmm2, %xmm3
    00003a83: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6845:
    00003a88: 	movdqa	%xmm3, %xmm1
    00003a8c: 	movdqa	(%rsp), %xmm6
    00003a91: 	movdqa	(%rax), %xmm0
    00003a95: 	addq	$0x10, %rax
    00003a99: 	pcmpgtd	-0x10(%rax), %xmm1
    00003a9e: 	pand	%xmm6, %xmm1
    00003aa2: 	paddd	%xmm1, %xmm0
    00003aa6: 	pand	%xmm6, %xmm0
    00003aaa: 	psubd	%xmm1, %xmm0
    00003aae: 	paddd	%xmm0, %xmm2
    00003ab2: 	cmpq	%rbx, %rax
    00003ab5: 	jne	.Ltmp6845 # Offset: 15029
    00003ab7: 	cvttsd2si	init_value(%rip), %eax
    00003abf: 	movdqa	%xmm2, %xmm0
    00003ac3: 	psrldq	$0x8, %xmm0
    00003ac8: 	paddd	%xmm0, %xmm2
    00003acc: 	movdqa	%xmm2, %xmm0
    00003ad0: 	movl	%eax, %ecx
    00003ad2: 	psrldq	$0x4, %xmm0
    00003ad7: 	sarl	$0x1f, %ecx
    00003ada: 	paddd	%xmm0, %xmm2
    00003ade: 	shrl	$0x1d, %ecx
    00003ae1: 	leal	(%rax,%rcx), %edx
    00003ae4: 	movd	%xmm2, %eax
    00003ae8: 	andl	$0x7, %edx
    00003aeb: 	subl	%ecx, %edx
    00003aed: 	imull	$0x1f40, %edx, %edx
    00003af3: 	cmpl	%eax, %edx
    00003af5: 	je	.Ltmp6846 # Offset: 15093
    00003af7: 	movl	current_test(%rip), %edx
    00003afd: 	leaq	DATAat0x571d0(%rip), %rsi
    00003b04: 	movl	$0x1, %edi
    00003b09: 	xorl	%eax, %eax
    00003b0b: 	callq	__printf_chk@PLT # Offset: 15115
    00003b10: 	movl	iterations(%rip), %esi
.Ltmp6846:
    00003b16: 	addl	$0x1, 0x1c(%rsp)
    00003b1b: 	movl	0x1c(%rsp), %eax
    00003b1f: 	cmpl	%esi, %eax
    00003b21: 	jl	.Ltmp6847 # Offset: 15137
.Ltmp6844:
    00003b27: 	movq	%r12, %rsi
    00003b2a: 	movq	%r15, %rdi
    00003b2d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15149
    00003b32: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003b39: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003b40: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003b47: 	je	.Ltmp6848 # Offset: 15175
.Ltmp7010:
    00003b4d: 	movq	-0x20(%rax), %rdi
    00003b51: 	movq	%rdi, (%rsp)
    00003b55: 	callq	clock@PLT # Offset: 15189
    00003b5a: 	movq	(%rsp), %rdi
    00003b5e: 	pxor	%xmm0, %xmm0
    00003b62: 	movq	%rax, end_time(%rip)
    00003b69: 	subq	start_time(%rip), %rax
    00003b70: 	cvtsi2sd	%rax, %xmm0
    00003b75: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003b7d: 	callq	_Z13record_resultdPKc # Offset: 15229
    00003b82: 	movq	0xa0(%rsp), %rdi
    00003b8a: 	cmpq	%r13, %rdi
    00003b8d: 	je	.Ltmp6849 # Offset: 15245
    00003b8f: 	movq	0xb0(%rsp), %rax
    00003b97: 	leaq	0x1(%rax), %rsi
    00003b9b: 	callq	_ZdlPvm@PLT # Offset: 15259
.Ltmp6849:
    00003ba0: 	leaq	DATAat0x57684(%rip), %rdx
    00003ba7: 	movq	%r14, %rsi
    00003baa: 	movq	%r12, %rdi
    00003bad: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15277
    00003bb2: 	movq	%r12, %rcx
    00003bb5: 	movl	$0x8, %edx
    00003bba: 	movl	$0x1f40, %esi
    00003bbf: 	movq	%rbp, %rdi
    00003bc2: 	callq	_Z14test_variable1Ii25custom_remainder_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 15298
    00003bc7: 	movq	0xa0(%rsp), %rdi
    00003bcf: 	cmpq	%r13, %rdi
    00003bd2: 	je	.Ltmp6850 # Offset: 15314
    00003bd4: 	movq	0xb0(%rsp), %rax
    00003bdc: 	leaq	0x1(%rax), %rsi
    00003be0: 	callq	_ZdlPvm@PLT # Offset: 15328
.Ltmp6850:
    00003be5: 	leaq	DATAat0x5769d(%rip), %rdx
    00003bec: 	movq	%r14, %rsi
    00003bef: 	movq	%r12, %rdi
    00003bf2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15346
    00003bf7: 	callq	clock@PLT # Offset: 15351
    00003bfc: 	movl	iterations(%rip), %esi
    00003c02: 	movq	%rax, start_time(%rip)
    00003c09: 	testl	%esi, %esi
    00003c0b: 	jle	.Ltmp6851 # Offset: 15371
    00003c11: 	movdqa	DATAat0x57e00(%rip), %xmm3
    00003c19: 	movl	$0x0, 0x1c(%rsp)
    00003c21: 	movaps	%xmm3, (%rsp)
    00003c25: 	nopl	(%rax) # Size: 3
.Ltmp6854:
    00003c28: 	pxor	%xmm2, %xmm2
    00003c2c: 	movq	%rbp, %rax
    00003c2f: 	movdqa	%xmm2, %xmm3
    00003c33: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6852:
    00003c38: 	movdqa	%xmm3, %xmm1
    00003c3c: 	movdqa	(%rsp), %xmm7
    00003c41: 	movdqa	(%rax), %xmm0
    00003c45: 	addq	$0x10, %rax
    00003c49: 	pcmpgtd	-0x10(%rax), %xmm1
    00003c4e: 	pand	%xmm7, %xmm1
    00003c52: 	paddd	%xmm1, %xmm0
    00003c56: 	pand	%xmm7, %xmm0
    00003c5a: 	psubd	%xmm1, %xmm0
    00003c5e: 	paddd	%xmm0, %xmm2
    00003c62: 	cmpq	%rax, %rbx
    00003c65: 	jne	.Ltmp6852 # Offset: 15461
    00003c67: 	cvttsd2si	init_value(%rip), %eax
    00003c6f: 	movdqa	%xmm2, %xmm0
    00003c73: 	psrldq	$0x8, %xmm0
    00003c78: 	paddd	%xmm0, %xmm2
    00003c7c: 	movdqa	%xmm2, %xmm0
    00003c80: 	movl	%eax, %ecx
    00003c82: 	psrldq	$0x4, %xmm0
    00003c87: 	sarl	$0x1f, %ecx
    00003c8a: 	paddd	%xmm0, %xmm2
    00003c8e: 	shrl	$0x1d, %ecx
    00003c91: 	leal	(%rax,%rcx), %edx
    00003c94: 	movd	%xmm2, %eax
    00003c98: 	andl	$0x7, %edx
    00003c9b: 	subl	%ecx, %edx
    00003c9d: 	imull	$0x1f40, %edx, %edx
    00003ca3: 	cmpl	%eax, %edx
    00003ca5: 	je	.Ltmp6853 # Offset: 15525
    00003ca7: 	movl	current_test(%rip), %edx
    00003cad: 	leaq	DATAat0x571d0(%rip), %rsi
    00003cb4: 	movl	$0x1, %edi
    00003cb9: 	xorl	%eax, %eax
    00003cbb: 	callq	__printf_chk@PLT # Offset: 15547
    00003cc0: 	movl	iterations(%rip), %esi
.Ltmp6853:
    00003cc6: 	addl	$0x1, 0x1c(%rsp)
    00003ccb: 	movl	0x1c(%rsp), %eax
    00003ccf: 	cmpl	%esi, %eax
    00003cd1: 	jl	.Ltmp6854 # Offset: 15569
.Ltmp6851:
    00003cd7: 	movq	%r12, %rsi
    00003cda: 	movq	%r15, %rdi
    00003cdd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15581
    00003ce2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003ce9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003cf0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003cf7: 	je	.Ltmp6855 # Offset: 15607
.Ltmp7009:
    00003cfd: 	movq	-0x20(%rax), %rdi
    00003d01: 	movq	%rdi, (%rsp)
    00003d05: 	callq	clock@PLT # Offset: 15621
    00003d0a: 	movq	(%rsp), %rdi
    00003d0e: 	pxor	%xmm0, %xmm0
    00003d12: 	movq	%rax, end_time(%rip)
    00003d19: 	subq	start_time(%rip), %rax
    00003d20: 	cvtsi2sd	%rax, %xmm0
    00003d25: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003d2d: 	callq	_Z13record_resultdPKc # Offset: 15661
    00003d32: 	movq	0xa0(%rsp), %rdi
    00003d3a: 	cmpq	%r13, %rdi
    00003d3d: 	je	.Ltmp6856 # Offset: 15677
    00003d3f: 	movq	0xb0(%rsp), %rax
    00003d47: 	leaq	0x1(%rax), %rsi
    00003d4b: 	callq	_ZdlPvm@PLT # Offset: 15691
.Ltmp6856:
    00003d50: 	leaq	DATAat0x576b6(%rip), %rdx
    00003d57: 	movq	%r14, %rsi
    00003d5a: 	movq	%r12, %rdi
    00003d5d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15709
    00003d62: 	callq	clock@PLT # Offset: 15714
    00003d67: 	movl	iterations(%rip), %ecx
    00003d6d: 	movq	%rax, start_time(%rip)
    00003d74: 	testl	%ecx, %ecx
    00003d76: 	jle	.Ltmp6857 # Offset: 15734
    00003d7c: 	movdqa	DATAat0x57e10(%rip), %xmm4
    00003d84: 	movl	$0x0, 0x1c(%rsp)
    00003d8c: 	movaps	%xmm4, (%rsp)
.Ltmp6860:
    00003d90: 	movq	%rbp, %rax
    00003d93: 	pxor	%xmm0, %xmm0
    00003d97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6858:
    00003da0: 	movdqa	(%rsp), %xmm1
    00003da5: 	pand	(%rax), %xmm1
    00003da9: 	addq	$0x10, %rax
    00003dad: 	paddd	%xmm1, %xmm0
    00003db1: 	cmpq	%rbx, %rax
    00003db4: 	jne	.Ltmp6858 # Offset: 15796
    00003db6: 	cvttsd2si	init_value(%rip), %edx
    00003dbe: 	movdqa	%xmm0, %xmm1
    00003dc2: 	psrldq	$0x8, %xmm1
    00003dc7: 	paddd	%xmm1, %xmm0
    00003dcb: 	movdqa	%xmm0, %xmm1
    00003dcf: 	andl	$0xf, %edx
    00003dd2: 	psrldq	$0x4, %xmm1
    00003dd7: 	imull	$0x1f40, %edx, %edx
    00003ddd: 	paddd	%xmm1, %xmm0
    00003de1: 	movd	%xmm0, %eax
    00003de5: 	cmpl	%eax, %edx
    00003de7: 	je	.Ltmp6859 # Offset: 15847
    00003de9: 	movl	current_test(%rip), %edx
    00003def: 	leaq	DATAat0x571d0(%rip), %rsi
    00003df6: 	movl	$0x1, %edi
    00003dfb: 	xorl	%eax, %eax
    00003dfd: 	callq	__printf_chk@PLT # Offset: 15869
    00003e02: 	movl	iterations(%rip), %ecx
.Ltmp6859:
    00003e08: 	addl	$0x1, 0x1c(%rsp)
    00003e0d: 	movl	0x1c(%rsp), %eax
    00003e11: 	cmpl	%ecx, %eax
    00003e13: 	jl	.Ltmp6860 # Offset: 15891
.Ltmp6857:
    00003e19: 	movq	%r12, %rsi
    00003e1c: 	movq	%r15, %rdi
    00003e1f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15903
    00003e24: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003e2b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003e32: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003e39: 	je	.Ltmp6861 # Offset: 15929
.Ltmp7008:
    00003e3f: 	movq	-0x20(%rax), %rdi
    00003e43: 	movq	%rdi, (%rsp)
    00003e47: 	callq	clock@PLT # Offset: 15943
    00003e4c: 	movq	(%rsp), %rdi
    00003e50: 	pxor	%xmm0, %xmm0
    00003e54: 	movq	%rax, end_time(%rip)
    00003e5b: 	subq	start_time(%rip), %rax
    00003e62: 	cvtsi2sd	%rax, %xmm0
    00003e67: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00003e6f: 	callq	_Z13record_resultdPKc # Offset: 15983
    00003e74: 	movq	0xa0(%rsp), %rdi
    00003e7c: 	cmpq	%r13, %rdi
    00003e7f: 	je	.Ltmp6862 # Offset: 15999
    00003e81: 	movq	0xb0(%rsp), %rax
    00003e89: 	leaq	0x1(%rax), %rsi
    00003e8d: 	callq	_ZdlPvm@PLT # Offset: 16013
.Ltmp6862:
    00003e92: 	leaq	DATAat0x576be(%rip), %rdx
    00003e99: 	movq	%r14, %rsi
    00003e9c: 	movq	%r12, %rdi
    00003e9f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16031
    00003ea4: 	movq	%r12, %rdx
    00003ea7: 	movl	$0x1f40, %esi
    00003eac: 	movq	%rbp, %rdi
    00003eaf: 	callq	_Z13test_constantIi13and_remainderIiLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 16047
    00003eb4: 	movq	0xa0(%rsp), %rdi
    00003ebc: 	cmpq	%r13, %rdi
    00003ebf: 	je	.Ltmp6863 # Offset: 16063
    00003ec1: 	movq	0xb0(%rsp), %rax
    00003ec9: 	leaq	0x1(%rax), %rsi
    00003ecd: 	callq	_ZdlPvm@PLT # Offset: 16077
.Ltmp6863:
    00003ed2: 	leaq	DATAat0x576d0(%rip), %rdx
    00003ed9: 	movq	%r14, %rsi
    00003edc: 	movq	%r12, %rdi
    00003edf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16095
    00003ee4: 	movq	%r12, %rdx
    00003ee7: 	movl	$0x1f40, %esi
    00003eec: 	movq	%rbp, %rdi
    00003eef: 	callq	_Z13test_constantIi14and_remainder2IiLi15EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 16111
    00003ef4: 	movq	0xa0(%rsp), %rdi
    00003efc: 	cmpq	%r13, %rdi
    00003eff: 	je	.Ltmp6864 # Offset: 16127
    00003f01: 	movq	0xb0(%rsp), %rax
    00003f09: 	leaq	0x1(%rax), %rsi
    00003f0d: 	callq	_ZdlPvm@PLT # Offset: 16141
.Ltmp6864:
    00003f12: 	leaq	DATAat0x576e3(%rip), %rdx
    00003f19: 	movq	%r14, %rsi
    00003f1c: 	movq	%r12, %rdi
    00003f1f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16159
    00003f24: 	callq	clock@PLT # Offset: 16164
    00003f29: 	movl	iterations(%rip), %esi
    00003f2f: 	movq	%rax, start_time(%rip)
    00003f36: 	testl	%esi, %esi
    00003f38: 	jle	.Ltmp6865 # Offset: 16184
    00003f3e: 	movdqa	DATAat0x57e10(%rip), %xmm3
    00003f46: 	movl	$0x0, 0x1c(%rsp)
    00003f4e: 	movaps	%xmm3, (%rsp)
    00003f52: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6868:
    00003f58: 	pxor	%xmm2, %xmm2
    00003f5c: 	movq	%rbp, %rax
    00003f5f: 	movdqa	%xmm2, %xmm3
    00003f63: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6866:
    00003f68: 	movdqa	%xmm3, %xmm1
    00003f6c: 	movdqa	(%rsp), %xmm4
    00003f71: 	movdqa	(%rax), %xmm0
    00003f75: 	addq	$0x10, %rax
    00003f79: 	pcmpgtd	-0x10(%rax), %xmm1
    00003f7e: 	pand	%xmm4, %xmm1
    00003f82: 	paddd	%xmm1, %xmm0
    00003f86: 	pand	%xmm4, %xmm0
    00003f8a: 	psubd	%xmm1, %xmm0
    00003f8e: 	paddd	%xmm0, %xmm2
    00003f92: 	cmpq	%rax, %rbx
    00003f95: 	jne	.Ltmp6866 # Offset: 16277
    00003f97: 	cvttsd2si	init_value(%rip), %eax
    00003f9f: 	movdqa	%xmm2, %xmm0
    00003fa3: 	psrldq	$0x8, %xmm0
    00003fa8: 	paddd	%xmm0, %xmm2
    00003fac: 	movdqa	%xmm2, %xmm0
    00003fb0: 	movl	%eax, %ecx
    00003fb2: 	psrldq	$0x4, %xmm0
    00003fb7: 	sarl	$0x1f, %ecx
    00003fba: 	paddd	%xmm0, %xmm2
    00003fbe: 	shrl	$0x1c, %ecx
    00003fc1: 	leal	(%rax,%rcx), %edx
    00003fc4: 	movd	%xmm2, %eax
    00003fc8: 	andl	$0xf, %edx
    00003fcb: 	subl	%ecx, %edx
    00003fcd: 	imull	$0x1f40, %edx, %edx
    00003fd3: 	cmpl	%eax, %edx
    00003fd5: 	je	.Ltmp6867 # Offset: 16341
    00003fd7: 	movl	current_test(%rip), %edx
    00003fdd: 	leaq	DATAat0x571d0(%rip), %rsi
    00003fe4: 	movl	$0x1, %edi
    00003fe9: 	xorl	%eax, %eax
    00003feb: 	callq	__printf_chk@PLT # Offset: 16363
    00003ff0: 	movl	iterations(%rip), %esi
.Ltmp6867:
    00003ff6: 	addl	$0x1, 0x1c(%rsp)
    00003ffb: 	movl	0x1c(%rsp), %eax
    00003fff: 	cmpl	%esi, %eax
    00004001: 	jl	.Ltmp6868 # Offset: 16385
.Ltmp6865:
    00004007: 	movq	%r12, %rsi
    0000400a: 	movq	%r15, %rdi
    0000400d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16397
    00004012: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004019: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004020: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004027: 	je	.Ltmp6869 # Offset: 16423
.Ltmp7007:
    0000402d: 	movq	-0x20(%rax), %rdi
    00004031: 	movq	%rdi, (%rsp)
    00004035: 	callq	clock@PLT # Offset: 16437
    0000403a: 	movq	(%rsp), %rdi
    0000403e: 	pxor	%xmm0, %xmm0
    00004042: 	movq	%rax, end_time(%rip)
    00004049: 	subq	start_time(%rip), %rax
    00004050: 	cvtsi2sd	%rax, %xmm0
    00004055: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000405d: 	callq	_Z13record_resultdPKc # Offset: 16477
    00004062: 	movq	0xa0(%rsp), %rdi
    0000406a: 	cmpq	%r13, %rdi
    0000406d: 	je	.Ltmp6870 # Offset: 16493
    0000406f: 	movq	0xb0(%rsp), %rax
    00004077: 	leaq	0x1(%rax), %rsi
    0000407b: 	callq	_ZdlPvm@PLT # Offset: 16507
.Ltmp6870:
    00004080: 	leaq	DATAat0x576fb(%rip), %rdx
    00004087: 	movq	%r14, %rsi
    0000408a: 	movq	%r12, %rdi
    0000408d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16525
    00004092: 	movq	%r12, %rcx
    00004095: 	movl	$0x10, %edx
    0000409a: 	movl	$0x1f40, %esi
    0000409f: 	movq	%rbp, %rdi
    000040a2: 	callq	_Z14test_variable1Ii25custom_remainder_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 16546
    000040a7: 	movq	0xa0(%rsp), %rdi
    000040af: 	cmpq	%r13, %rdi
    000040b2: 	je	.Ltmp6871 # Offset: 16562
    000040b4: 	movq	0xb0(%rsp), %rax
    000040bc: 	leaq	0x1(%rax), %rsi
    000040c0: 	callq	_ZdlPvm@PLT # Offset: 16576
.Ltmp6871:
    000040c5: 	leaq	DATAat0x57715(%rip), %rdx
    000040cc: 	movq	%r14, %rsi
    000040cf: 	movq	%r12, %rdi
    000040d2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16594
    000040d7: 	callq	clock@PLT # Offset: 16599
    000040dc: 	movl	iterations(%rip), %esi
    000040e2: 	movq	%rax, start_time(%rip)
    000040e9: 	testl	%esi, %esi
    000040eb: 	jle	.Ltmp6872 # Offset: 16619
    000040f1: 	movdqa	DATAat0x57e10(%rip), %xmm4
    000040f9: 	movl	$0x0, 0x1c(%rsp)
    00004101: 	movaps	%xmm4, (%rsp)
    00004105: 	nopl	(%rax) # Size: 3
.Ltmp6875:
    00004108: 	pxor	%xmm2, %xmm2
    0000410c: 	movq	%rbp, %rax
    0000410f: 	movdqa	%xmm2, %xmm3
    00004113: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6873:
    00004118: 	movdqa	%xmm3, %xmm1
    0000411c: 	movdqa	(%rsp), %xmm6
    00004121: 	movdqa	(%rax), %xmm0
    00004125: 	addq	$0x10, %rax
    00004129: 	pcmpgtd	-0x10(%rax), %xmm1
    0000412e: 	pand	%xmm6, %xmm1
    00004132: 	paddd	%xmm1, %xmm0
    00004136: 	pand	%xmm6, %xmm0
    0000413a: 	psubd	%xmm1, %xmm0
    0000413e: 	paddd	%xmm0, %xmm2
    00004142: 	cmpq	%rbx, %rax
    00004145: 	jne	.Ltmp6873 # Offset: 16709
    00004147: 	cvttsd2si	init_value(%rip), %eax
    0000414f: 	movdqa	%xmm2, %xmm0
    00004153: 	psrldq	$0x8, %xmm0
    00004158: 	paddd	%xmm0, %xmm2
    0000415c: 	movdqa	%xmm2, %xmm0
    00004160: 	movl	%eax, %ecx
    00004162: 	psrldq	$0x4, %xmm0
    00004167: 	sarl	$0x1f, %ecx
    0000416a: 	paddd	%xmm0, %xmm2
    0000416e: 	shrl	$0x1c, %ecx
    00004171: 	leal	(%rax,%rcx), %edx
    00004174: 	movd	%xmm2, %eax
    00004178: 	andl	$0xf, %edx
    0000417b: 	subl	%ecx, %edx
    0000417d: 	imull	$0x1f40, %edx, %edx
    00004183: 	cmpl	%eax, %edx
    00004185: 	je	.Ltmp6874 # Offset: 16773
    00004187: 	movl	current_test(%rip), %edx
    0000418d: 	leaq	DATAat0x571d0(%rip), %rsi
    00004194: 	movl	$0x1, %edi
    00004199: 	xorl	%eax, %eax
    0000419b: 	callq	__printf_chk@PLT # Offset: 16795
    000041a0: 	movl	iterations(%rip), %esi
.Ltmp6874:
    000041a6: 	addl	$0x1, 0x1c(%rsp)
    000041ab: 	movl	0x1c(%rsp), %eax
    000041af: 	cmpl	%esi, %eax
    000041b1: 	jl	.Ltmp6875 # Offset: 16817
.Ltmp6872:
    000041b7: 	movq	%r12, %rsi
    000041ba: 	movq	%r15, %rdi
    000041bd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 16829
    000041c2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000041c9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000041d0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000041d7: 	je	.Ltmp6876 # Offset: 16855
.Ltmp7006:
    000041dd: 	movq	-0x20(%rax), %rdi
    000041e1: 	movq	%rdi, (%rsp)
    000041e5: 	callq	clock@PLT # Offset: 16869
    000041ea: 	movq	(%rsp), %rdi
    000041ee: 	pxor	%xmm0, %xmm0
    000041f2: 	movq	%rax, end_time(%rip)
    000041f9: 	subq	start_time(%rip), %rax
    00004200: 	cvtsi2sd	%rax, %xmm0
    00004205: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000420d: 	callq	_Z13record_resultdPKc # Offset: 16909
    00004212: 	movq	0xa0(%rsp), %rdi
    0000421a: 	cmpq	%r13, %rdi
    0000421d: 	je	.Ltmp6877 # Offset: 16925
    0000421f: 	movq	0xb0(%rsp), %rax
    00004227: 	leaq	0x1(%rax), %rsi
    0000422b: 	callq	_ZdlPvm@PLT # Offset: 16939
.Ltmp6877:
    00004230: 	leaq	DATAat0x5772f(%rip), %rdx
    00004237: 	movq	%r14, %rsi
    0000423a: 	movq	%r12, %rdi
    0000423d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 16957
    00004242: 	callq	clock@PLT # Offset: 16962
    00004247: 	movl	iterations(%rip), %ecx
    0000424d: 	movq	%rax, start_time(%rip)
    00004254: 	testl	%ecx, %ecx
    00004256: 	jle	.Ltmp6878 # Offset: 16982
    0000425c: 	movdqa	DATAat0x57e50(%rip), %xmm3
    00004264: 	movl	$0x0, 0x1c(%rsp)
    0000426c: 	movaps	%xmm3, (%rsp)
.Ltmp6881:
    00004270: 	movq	%rbp, %rax
    00004273: 	pxor	%xmm0, %xmm0
    00004277: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6879:
    00004280: 	movdqa	(%rsp), %xmm1
    00004285: 	pand	(%rax), %xmm1
    00004289: 	addq	$0x10, %rax
    0000428d: 	paddd	%xmm1, %xmm0
    00004291: 	cmpq	%rax, %rbx
    00004294: 	jne	.Ltmp6879 # Offset: 17044
    00004296: 	cvttsd2si	init_value(%rip), %edx
    0000429e: 	movdqa	%xmm0, %xmm1
    000042a2: 	psrldq	$0x8, %xmm1
    000042a7: 	paddd	%xmm1, %xmm0
    000042ab: 	movdqa	%xmm0, %xmm1
    000042af: 	andl	$0x1f, %edx
    000042b2: 	psrldq	$0x4, %xmm1
    000042b7: 	imull	$0x1f40, %edx, %edx
    000042bd: 	paddd	%xmm1, %xmm0
    000042c1: 	movd	%xmm0, %eax
    000042c5: 	cmpl	%eax, %edx
    000042c7: 	je	.Ltmp6880 # Offset: 17095
    000042c9: 	movl	current_test(%rip), %edx
    000042cf: 	leaq	DATAat0x571d0(%rip), %rsi
    000042d6: 	movl	$0x1, %edi
    000042db: 	xorl	%eax, %eax
    000042dd: 	callq	__printf_chk@PLT # Offset: 17117
    000042e2: 	movl	iterations(%rip), %ecx
.Ltmp6880:
    000042e8: 	addl	$0x1, 0x1c(%rsp)
    000042ed: 	movl	0x1c(%rsp), %eax
    000042f1: 	cmpl	%ecx, %eax
    000042f3: 	jl	.Ltmp6881 # Offset: 17139
.Ltmp6878:
    000042f9: 	movq	%r12, %rsi
    000042fc: 	movq	%r15, %rdi
    000042ff: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17151
    00004304: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000430b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004312: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004319: 	je	.Ltmp6882 # Offset: 17177
.Ltmp7005:
    0000431f: 	movq	-0x20(%rax), %rdi
    00004323: 	movq	%rdi, (%rsp)
    00004327: 	callq	clock@PLT # Offset: 17191
    0000432c: 	movq	(%rsp), %rdi
    00004330: 	pxor	%xmm0, %xmm0
    00004334: 	movq	%rax, end_time(%rip)
    0000433b: 	subq	start_time(%rip), %rax
    00004342: 	cvtsi2sd	%rax, %xmm0
    00004347: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000434f: 	callq	_Z13record_resultdPKc # Offset: 17231
    00004354: 	movq	0xa0(%rsp), %rdi
    0000435c: 	cmpq	%r13, %rdi
    0000435f: 	je	.Ltmp6883 # Offset: 17247
    00004361: 	movq	0xb0(%rsp), %rax
    00004369: 	leaq	0x1(%rax), %rsi
    0000436d: 	callq	_ZdlPvm@PLT # Offset: 17261
.Ltmp6883:
    00004372: 	leaq	DATAat0x57737(%rip), %rdx
    00004379: 	movq	%r14, %rsi
    0000437c: 	movq	%r12, %rdi
    0000437f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17279
    00004384: 	movq	%r12, %rdx
    00004387: 	movl	$0x1f40, %esi
    0000438c: 	movq	%rbp, %rdi
    0000438f: 	callq	_Z13test_constantIi13and_remainderIiLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 17295
    00004394: 	movq	0xa0(%rsp), %rdi
    0000439c: 	cmpq	%r13, %rdi
    0000439f: 	je	.Ltmp6884 # Offset: 17311
    000043a1: 	movq	0xb0(%rsp), %rax
    000043a9: 	leaq	0x1(%rax), %rsi
    000043ad: 	callq	_ZdlPvm@PLT # Offset: 17325
.Ltmp6884:
    000043b2: 	leaq	DATAat0x57749(%rip), %rdx
    000043b9: 	movq	%r14, %rsi
    000043bc: 	movq	%r12, %rdi
    000043bf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17343
    000043c4: 	movq	%r12, %rdx
    000043c7: 	movl	$0x1f40, %esi
    000043cc: 	movq	%rbp, %rdi
    000043cf: 	callq	_Z13test_constantIi14and_remainder2IiLi31EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 17359
    000043d4: 	movq	0xa0(%rsp), %rdi
    000043dc: 	cmpq	%r13, %rdi
    000043df: 	je	.Ltmp6885 # Offset: 17375
    000043e1: 	movq	0xb0(%rsp), %rax
    000043e9: 	leaq	0x1(%rax), %rsi
    000043ed: 	callq	_ZdlPvm@PLT # Offset: 17389
.Ltmp6885:
    000043f2: 	leaq	DATAat0x5775c(%rip), %rdx
    000043f9: 	movq	%r14, %rsi
    000043fc: 	movq	%r12, %rdi
    000043ff: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17407
    00004404: 	callq	clock@PLT # Offset: 17412
    00004409: 	movl	iterations(%rip), %esi
    0000440f: 	movq	%rax, start_time(%rip)
    00004416: 	testl	%esi, %esi
    00004418: 	jle	.Ltmp6886 # Offset: 17432
    0000441e: 	movdqa	DATAat0x57e50(%rip), %xmm4
    00004426: 	movl	$0x0, 0x1c(%rsp)
    0000442e: 	movaps	%xmm4, (%rsp)
    00004432: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6889:
    00004438: 	pxor	%xmm2, %xmm2
    0000443c: 	movq	%rbp, %rax
    0000443f: 	movdqa	%xmm2, %xmm3
    00004443: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6887:
    00004448: 	movdqa	%xmm3, %xmm1
    0000444c: 	movdqa	(%rsp), %xmm7
    00004451: 	movdqa	(%rax), %xmm0
    00004455: 	addq	$0x10, %rax
    00004459: 	pcmpgtd	-0x10(%rax), %xmm1
    0000445e: 	pand	%xmm7, %xmm1
    00004462: 	paddd	%xmm1, %xmm0
    00004466: 	pand	%xmm7, %xmm0
    0000446a: 	psubd	%xmm1, %xmm0
    0000446e: 	paddd	%xmm0, %xmm2
    00004472: 	cmpq	%rbx, %rax
    00004475: 	jne	.Ltmp6887 # Offset: 17525
    00004477: 	cvttsd2si	init_value(%rip), %eax
    0000447f: 	movdqa	%xmm2, %xmm0
    00004483: 	psrldq	$0x8, %xmm0
    00004488: 	paddd	%xmm0, %xmm2
    0000448c: 	movdqa	%xmm2, %xmm0
    00004490: 	movl	%eax, %ecx
    00004492: 	psrldq	$0x4, %xmm0
    00004497: 	sarl	$0x1f, %ecx
    0000449a: 	paddd	%xmm0, %xmm2
    0000449e: 	shrl	$0x1b, %ecx
    000044a1: 	leal	(%rax,%rcx), %edx
    000044a4: 	movd	%xmm2, %eax
    000044a8: 	andl	$0x1f, %edx
    000044ab: 	subl	%ecx, %edx
    000044ad: 	imull	$0x1f40, %edx, %edx
    000044b3: 	cmpl	%eax, %edx
    000044b5: 	je	.Ltmp6888 # Offset: 17589
    000044b7: 	movl	current_test(%rip), %edx
    000044bd: 	leaq	DATAat0x571d0(%rip), %rsi
    000044c4: 	movl	$0x1, %edi
    000044c9: 	xorl	%eax, %eax
    000044cb: 	callq	__printf_chk@PLT # Offset: 17611
    000044d0: 	movl	iterations(%rip), %esi
.Ltmp6888:
    000044d6: 	addl	$0x1, 0x1c(%rsp)
    000044db: 	movl	0x1c(%rsp), %eax
    000044df: 	cmpl	%esi, %eax
    000044e1: 	jl	.Ltmp6889 # Offset: 17633
.Ltmp6886:
    000044e7: 	movq	%r12, %rsi
    000044ea: 	movq	%r15, %rdi
    000044ed: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 17645
    000044f2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000044f9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004500: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004507: 	je	.Ltmp6890 # Offset: 17671
.Ltmp7004:
    0000450d: 	movq	-0x20(%rax), %rdi
    00004511: 	movq	%rdi, (%rsp)
    00004515: 	callq	clock@PLT # Offset: 17685
    0000451a: 	movq	(%rsp), %rdi
    0000451e: 	pxor	%xmm0, %xmm0
    00004522: 	movq	%rax, end_time(%rip)
    00004529: 	subq	start_time(%rip), %rax
    00004530: 	cvtsi2sd	%rax, %xmm0
    00004535: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000453d: 	callq	_Z13record_resultdPKc # Offset: 17725
    00004542: 	movq	0xa0(%rsp), %rdi
    0000454a: 	cmpq	%r13, %rdi
    0000454d: 	je	.Ltmp6891 # Offset: 17741
    0000454f: 	movq	0xb0(%rsp), %rax
    00004557: 	leaq	0x1(%rax), %rsi
    0000455b: 	callq	_ZdlPvm@PLT # Offset: 17755
.Ltmp6891:
    00004560: 	leaq	DATAat0x57774(%rip), %rdx
    00004567: 	movq	%r14, %rsi
    0000456a: 	movq	%r12, %rdi
    0000456d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17773
    00004572: 	movq	%r12, %rcx
    00004575: 	movl	$0x20, %edx
    0000457a: 	movl	$0x1f40, %esi
    0000457f: 	movq	%rbp, %rdi
    00004582: 	callq	_Z14test_variable1Ii25custom_remainder_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 17794
    00004587: 	movq	0xa0(%rsp), %rdi
    0000458f: 	cmpq	%r13, %rdi
    00004592: 	je	.Ltmp6892 # Offset: 17810
    00004594: 	movq	0xb0(%rsp), %rax
    0000459c: 	leaq	0x1(%rax), %rsi
    000045a0: 	callq	_ZdlPvm@PLT # Offset: 17824
.Ltmp6892:
    000045a5: 	leaq	DATAat0x5778e(%rip), %rdx
    000045ac: 	movq	%r14, %rsi
    000045af: 	movq	%r12, %rdi
    000045b2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 17842
    000045b7: 	callq	clock@PLT # Offset: 17847
    000045bc: 	movl	iterations(%rip), %esi
    000045c2: 	movq	%rax, start_time(%rip)
    000045c9: 	testl	%esi, %esi
    000045cb: 	jle	.Ltmp6893 # Offset: 17867
    000045d1: 	movdqa	DATAat0x57e50(%rip), %xmm3
    000045d9: 	movl	$0x0, 0x1c(%rsp)
    000045e1: 	movaps	%xmm3, (%rsp)
    000045e5: 	nopl	(%rax) # Size: 3
.Ltmp6896:
    000045e8: 	pxor	%xmm2, %xmm2
    000045ec: 	movq	%rbp, %rax
    000045ef: 	movdqa	%xmm2, %xmm3
    000045f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6894:
    000045f8: 	movdqa	%xmm3, %xmm1
    000045fc: 	movdqa	(%rsp), %xmm5
    00004601: 	movdqa	(%rax), %xmm0
    00004605: 	addq	$0x10, %rax
    00004609: 	pcmpgtd	-0x10(%rax), %xmm1
    0000460e: 	pand	%xmm5, %xmm1
    00004612: 	paddd	%xmm1, %xmm0
    00004616: 	pand	%xmm5, %xmm0
    0000461a: 	psubd	%xmm1, %xmm0
    0000461e: 	paddd	%xmm0, %xmm2
    00004622: 	cmpq	%rax, %rbx
    00004625: 	jne	.Ltmp6894 # Offset: 17957
    00004627: 	cvttsd2si	init_value(%rip), %eax
    0000462f: 	movdqa	%xmm2, %xmm0
    00004633: 	psrldq	$0x8, %xmm0
    00004638: 	paddd	%xmm0, %xmm2
    0000463c: 	movdqa	%xmm2, %xmm0
    00004640: 	movl	%eax, %ecx
    00004642: 	psrldq	$0x4, %xmm0
    00004647: 	sarl	$0x1f, %ecx
    0000464a: 	paddd	%xmm0, %xmm2
    0000464e: 	shrl	$0x1b, %ecx
    00004651: 	leal	(%rax,%rcx), %edx
    00004654: 	movd	%xmm2, %eax
    00004658: 	andl	$0x1f, %edx
    0000465b: 	subl	%ecx, %edx
    0000465d: 	imull	$0x1f40, %edx, %edx
    00004663: 	cmpl	%eax, %edx
    00004665: 	je	.Ltmp6895 # Offset: 18021
    00004667: 	movl	current_test(%rip), %edx
    0000466d: 	leaq	DATAat0x571d0(%rip), %rsi
    00004674: 	movl	$0x1, %edi
    00004679: 	xorl	%eax, %eax
    0000467b: 	callq	__printf_chk@PLT # Offset: 18043
    00004680: 	movl	iterations(%rip), %esi
.Ltmp6895:
    00004686: 	addl	$0x1, 0x1c(%rsp)
    0000468b: 	movl	0x1c(%rsp), %eax
    0000468f: 	cmpl	%esi, %eax
    00004691: 	jl	.Ltmp6896 # Offset: 18065
.Ltmp6893:
    00004697: 	movq	%r12, %rsi
    0000469a: 	movq	%r15, %rdi
    0000469d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18077
    000046a2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000046a9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000046b0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000046b7: 	je	.Ltmp6897 # Offset: 18103
.Ltmp7003:
    000046bd: 	movq	-0x20(%rax), %rdi
    000046c1: 	movq	%rdi, (%rsp)
    000046c5: 	callq	clock@PLT # Offset: 18117
    000046ca: 	movq	(%rsp), %rdi
    000046ce: 	pxor	%xmm0, %xmm0
    000046d2: 	movq	%rax, end_time(%rip)
    000046d9: 	subq	start_time(%rip), %rax
    000046e0: 	cvtsi2sd	%rax, %xmm0
    000046e5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000046ed: 	callq	_Z13record_resultdPKc # Offset: 18157
    000046f2: 	movq	0xa0(%rsp), %rdi
    000046fa: 	cmpq	%r13, %rdi
    000046fd: 	je	.Ltmp6898 # Offset: 18173
    000046ff: 	movq	0xb0(%rsp), %rax
    00004707: 	leaq	0x1(%rax), %rsi
    0000470b: 	callq	_ZdlPvm@PLT # Offset: 18187
.Ltmp6898:
    00004710: 	leaq	DATAat0x577a8(%rip), %rdx
    00004717: 	movq	%r14, %rsi
    0000471a: 	movq	%r12, %rdi
    0000471d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18205
    00004722: 	callq	clock@PLT # Offset: 18210
    00004727: 	movl	iterations(%rip), %ecx
    0000472d: 	movq	%rax, start_time(%rip)
    00004734: 	testl	%ecx, %ecx
    00004736: 	jle	.Ltmp6899 # Offset: 18230
    0000473c: 	movdqa	DATAat0x57e40(%rip), %xmm4
    00004744: 	movl	$0x0, 0x1c(%rsp)
    0000474c: 	movaps	%xmm4, (%rsp)
.Ltmp6902:
    00004750: 	movq	%rbp, %rax
    00004753: 	pxor	%xmm0, %xmm0
    00004757: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6900:
    00004760: 	movdqa	(%rsp), %xmm1
    00004765: 	pand	(%rax), %xmm1
    00004769: 	addq	$0x10, %rax
    0000476d: 	paddd	%xmm1, %xmm0
    00004771: 	cmpq	%rbx, %rax
    00004774: 	jne	.Ltmp6900 # Offset: 18292
    00004776: 	cvttsd2si	init_value(%rip), %edx
    0000477e: 	movdqa	%xmm0, %xmm1
    00004782: 	psrldq	$0x8, %xmm1
    00004787: 	paddd	%xmm1, %xmm0
    0000478b: 	movdqa	%xmm0, %xmm1
    0000478f: 	andl	$0x3f, %edx
    00004792: 	psrldq	$0x4, %xmm1
    00004797: 	imull	$0x1f40, %edx, %edx
    0000479d: 	paddd	%xmm1, %xmm0
    000047a1: 	movd	%xmm0, %eax
    000047a5: 	cmpl	%eax, %edx
    000047a7: 	je	.Ltmp6901 # Offset: 18343
    000047a9: 	movl	current_test(%rip), %edx
    000047af: 	leaq	DATAat0x571d0(%rip), %rsi
    000047b6: 	movl	$0x1, %edi
    000047bb: 	xorl	%eax, %eax
    000047bd: 	callq	__printf_chk@PLT # Offset: 18365
    000047c2: 	movl	iterations(%rip), %ecx
.Ltmp6901:
    000047c8: 	addl	$0x1, 0x1c(%rsp)
    000047cd: 	movl	0x1c(%rsp), %eax
    000047d1: 	cmpl	%ecx, %eax
    000047d3: 	jl	.Ltmp6902 # Offset: 18387
.Ltmp6899:
    000047d9: 	movq	%r12, %rsi
    000047dc: 	movq	%r15, %rdi
    000047df: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18399
    000047e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000047eb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000047f2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000047f9: 	je	.Ltmp6903 # Offset: 18425
.Ltmp7002:
    000047ff: 	movq	-0x20(%rax), %rdi
    00004803: 	movq	%rdi, (%rsp)
    00004807: 	callq	clock@PLT # Offset: 18439
    0000480c: 	movq	(%rsp), %rdi
    00004810: 	pxor	%xmm0, %xmm0
    00004814: 	movq	%rax, end_time(%rip)
    0000481b: 	subq	start_time(%rip), %rax
    00004822: 	cvtsi2sd	%rax, %xmm0
    00004827: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000482f: 	callq	_Z13record_resultdPKc # Offset: 18479
    00004834: 	movq	0xa0(%rsp), %rdi
    0000483c: 	cmpq	%r13, %rdi
    0000483f: 	je	.Ltmp6904 # Offset: 18495
    00004841: 	movq	0xb0(%rsp), %rax
    00004849: 	leaq	0x1(%rax), %rsi
    0000484d: 	callq	_ZdlPvm@PLT # Offset: 18509
.Ltmp6904:
    00004852: 	leaq	DATAat0x577b0(%rip), %rdx
    00004859: 	movq	%r14, %rsi
    0000485c: 	movq	%r12, %rdi
    0000485f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18527
    00004864: 	movq	%r12, %rdx
    00004867: 	movl	$0x1f40, %esi
    0000486c: 	movq	%rbp, %rdi
    0000486f: 	callq	_Z13test_constantIi13and_remainderIiLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 18543
    00004874: 	movq	0xa0(%rsp), %rdi
    0000487c: 	cmpq	%r13, %rdi
    0000487f: 	je	.Ltmp6905 # Offset: 18559
    00004881: 	movq	0xb0(%rsp), %rax
    00004889: 	leaq	0x1(%rax), %rsi
    0000488d: 	callq	_ZdlPvm@PLT # Offset: 18573
.Ltmp6905:
    00004892: 	leaq	DATAat0x577c2(%rip), %rdx
    00004899: 	movq	%r14, %rsi
    0000489c: 	movq	%r12, %rdi
    0000489f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18591
    000048a4: 	movq	%r12, %rdx
    000048a7: 	movl	$0x1f40, %esi
    000048ac: 	movq	%rbp, %rdi
    000048af: 	callq	_Z13test_constantIi14and_remainder2IiLi63EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 18607
    000048b4: 	movq	0xa0(%rsp), %rdi
    000048bc: 	cmpq	%r13, %rdi
    000048bf: 	je	.Ltmp6906 # Offset: 18623
    000048c1: 	movq	0xb0(%rsp), %rax
    000048c9: 	leaq	0x1(%rax), %rsi
    000048cd: 	callq	_ZdlPvm@PLT # Offset: 18637
.Ltmp6906:
    000048d2: 	leaq	DATAat0x577d5(%rip), %rdx
    000048d9: 	movq	%r14, %rsi
    000048dc: 	movq	%r12, %rdi
    000048df: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 18655
    000048e4: 	callq	clock@PLT # Offset: 18660
    000048e9: 	movl	iterations(%rip), %esi
    000048ef: 	movq	%rax, start_time(%rip)
    000048f6: 	testl	%esi, %esi
    000048f8: 	jle	.Ltmp6907 # Offset: 18680
    000048fe: 	movdqa	DATAat0x57e40(%rip), %xmm3
    00004906: 	movl	$0x0, 0x1c(%rsp)
    0000490e: 	movaps	%xmm3, (%rsp)
    00004912: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6910:
    00004918: 	pxor	%xmm2, %xmm2
    0000491c: 	movq	%rbp, %rax
    0000491f: 	movdqa	%xmm2, %xmm3
    00004923: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6908:
    00004928: 	movdqa	%xmm3, %xmm1
    0000492c: 	movdqa	(%rsp), %xmm4
    00004931: 	movdqa	(%rax), %xmm0
    00004935: 	addq	$0x10, %rax
    00004939: 	pcmpgtd	-0x10(%rax), %xmm1
    0000493e: 	pand	%xmm4, %xmm1
    00004942: 	paddd	%xmm1, %xmm0
    00004946: 	pand	%xmm4, %xmm0
    0000494a: 	psubd	%xmm1, %xmm0
    0000494e: 	paddd	%xmm0, %xmm2
    00004952: 	cmpq	%rax, %rbx
    00004955: 	jne	.Ltmp6908 # Offset: 18773
    00004957: 	cvttsd2si	init_value(%rip), %eax
    0000495f: 	movdqa	%xmm2, %xmm0
    00004963: 	psrldq	$0x8, %xmm0
    00004968: 	paddd	%xmm0, %xmm2
    0000496c: 	movdqa	%xmm2, %xmm0
    00004970: 	movl	%eax, %ecx
    00004972: 	psrldq	$0x4, %xmm0
    00004977: 	sarl	$0x1f, %ecx
    0000497a: 	paddd	%xmm0, %xmm2
    0000497e: 	shrl	$0x1a, %ecx
    00004981: 	leal	(%rax,%rcx), %edx
    00004984: 	movd	%xmm2, %eax
    00004988: 	andl	$0x3f, %edx
    0000498b: 	subl	%ecx, %edx
    0000498d: 	imull	$0x1f40, %edx, %edx
    00004993: 	cmpl	%eax, %edx
    00004995: 	je	.Ltmp6909 # Offset: 18837
    00004997: 	movl	current_test(%rip), %edx
    0000499d: 	leaq	DATAat0x571d0(%rip), %rsi
    000049a4: 	movl	$0x1, %edi
    000049a9: 	xorl	%eax, %eax
    000049ab: 	callq	__printf_chk@PLT # Offset: 18859
    000049b0: 	movl	iterations(%rip), %esi
.Ltmp6909:
    000049b6: 	addl	$0x1, 0x1c(%rsp)
    000049bb: 	movl	0x1c(%rsp), %eax
    000049bf: 	cmpl	%esi, %eax
    000049c1: 	jl	.Ltmp6910 # Offset: 18881
.Ltmp6907:
    000049c7: 	movq	%r12, %rsi
    000049ca: 	movq	%r15, %rdi
    000049cd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 18893
    000049d2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000049d9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000049e0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000049e7: 	je	.Ltmp6911 # Offset: 18919
.Ltmp7001:
    000049ed: 	movq	-0x20(%rax), %rdi
    000049f1: 	movq	%rdi, (%rsp)
    000049f5: 	callq	clock@PLT # Offset: 18933
    000049fa: 	movq	(%rsp), %rdi
    000049fe: 	pxor	%xmm0, %xmm0
    00004a02: 	movq	%rax, end_time(%rip)
    00004a09: 	subq	start_time(%rip), %rax
    00004a10: 	cvtsi2sd	%rax, %xmm0
    00004a15: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004a1d: 	callq	_Z13record_resultdPKc # Offset: 18973
    00004a22: 	movq	0xa0(%rsp), %rdi
    00004a2a: 	cmpq	%r13, %rdi
    00004a2d: 	je	.Ltmp6912 # Offset: 18989
    00004a2f: 	movq	0xb0(%rsp), %rax
    00004a37: 	leaq	0x1(%rax), %rsi
    00004a3b: 	callq	_ZdlPvm@PLT # Offset: 19003
.Ltmp6912:
    00004a40: 	leaq	DATAat0x577ed(%rip), %rdx
    00004a47: 	movq	%r14, %rsi
    00004a4a: 	movq	%r12, %rdi
    00004a4d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19021
    00004a52: 	movq	%r12, %rcx
    00004a55: 	movl	$0x40, %edx
    00004a5a: 	movl	$0x1f40, %esi
    00004a5f: 	movq	%rbp, %rdi
    00004a62: 	callq	_Z14test_variable1Ii25custom_remainder_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 19042
    00004a67: 	movq	0xa0(%rsp), %rdi
    00004a6f: 	cmpq	%r13, %rdi
    00004a72: 	je	.Ltmp6913 # Offset: 19058
    00004a74: 	movq	0xb0(%rsp), %rax
    00004a7c: 	leaq	0x1(%rax), %rsi
    00004a80: 	callq	_ZdlPvm@PLT # Offset: 19072
.Ltmp6913:
    00004a85: 	leaq	DATAat0x57807(%rip), %rdx
    00004a8c: 	movq	%r14, %rsi
    00004a8f: 	movq	%r12, %rdi
    00004a92: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19090
    00004a97: 	callq	clock@PLT # Offset: 19095
    00004a9c: 	movl	iterations(%rip), %esi
    00004aa2: 	movq	%rax, start_time(%rip)
    00004aa9: 	testl	%esi, %esi
    00004aab: 	jle	.Ltmp6914 # Offset: 19115
    00004ab1: 	movdqa	DATAat0x57e40(%rip), %xmm4
    00004ab9: 	movl	$0x0, 0x1c(%rsp)
    00004ac1: 	movaps	%xmm4, (%rsp)
    00004ac5: 	nopl	(%rax) # Size: 3
.Ltmp6917:
    00004ac8: 	pxor	%xmm2, %xmm2
    00004acc: 	movq	%rbp, %rax
    00004acf: 	movdqa	%xmm2, %xmm3
    00004ad3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6915:
    00004ad8: 	movdqa	%xmm3, %xmm1
    00004adc: 	movdqa	(%rsp), %xmm6
    00004ae1: 	movdqa	(%rax), %xmm0
    00004ae5: 	addq	$0x10, %rax
    00004ae9: 	pcmpgtd	-0x10(%rax), %xmm1
    00004aee: 	pand	%xmm6, %xmm1
    00004af2: 	paddd	%xmm1, %xmm0
    00004af6: 	pand	%xmm6, %xmm0
    00004afa: 	psubd	%xmm1, %xmm0
    00004afe: 	paddd	%xmm0, %xmm2
    00004b02: 	cmpq	%rbx, %rax
    00004b05: 	jne	.Ltmp6915 # Offset: 19205
    00004b07: 	cvttsd2si	init_value(%rip), %eax
    00004b0f: 	movdqa	%xmm2, %xmm0
    00004b13: 	psrldq	$0x8, %xmm0
    00004b18: 	paddd	%xmm0, %xmm2
    00004b1c: 	movdqa	%xmm2, %xmm0
    00004b20: 	movl	%eax, %ecx
    00004b22: 	psrldq	$0x4, %xmm0
    00004b27: 	sarl	$0x1f, %ecx
    00004b2a: 	paddd	%xmm0, %xmm2
    00004b2e: 	shrl	$0x1a, %ecx
    00004b31: 	leal	(%rax,%rcx), %edx
    00004b34: 	movd	%xmm2, %eax
    00004b38: 	andl	$0x3f, %edx
    00004b3b: 	subl	%ecx, %edx
    00004b3d: 	imull	$0x1f40, %edx, %edx
    00004b43: 	cmpl	%eax, %edx
    00004b45: 	je	.Ltmp6916 # Offset: 19269
    00004b47: 	movl	current_test(%rip), %edx
    00004b4d: 	leaq	DATAat0x571d0(%rip), %rsi
    00004b54: 	movl	$0x1, %edi
    00004b59: 	xorl	%eax, %eax
    00004b5b: 	callq	__printf_chk@PLT # Offset: 19291
    00004b60: 	movl	iterations(%rip), %esi
.Ltmp6916:
    00004b66: 	addl	$0x1, 0x1c(%rsp)
    00004b6b: 	movl	0x1c(%rsp), %eax
    00004b6f: 	cmpl	%esi, %eax
    00004b71: 	jl	.Ltmp6917 # Offset: 19313
.Ltmp6914:
    00004b77: 	movq	%r12, %rsi
    00004b7a: 	movq	%r15, %rdi
    00004b7d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19325
    00004b82: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004b89: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004b90: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004b97: 	je	.Ltmp6918 # Offset: 19351
.Ltmp7000:
    00004b9d: 	movq	-0x20(%rax), %rdi
    00004ba1: 	movq	%rdi, (%rsp)
    00004ba5: 	callq	clock@PLT # Offset: 19365
    00004baa: 	movq	(%rsp), %rdi
    00004bae: 	pxor	%xmm0, %xmm0
    00004bb2: 	movq	%rax, end_time(%rip)
    00004bb9: 	subq	start_time(%rip), %rax
    00004bc0: 	cvtsi2sd	%rax, %xmm0
    00004bc5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004bcd: 	callq	_Z13record_resultdPKc # Offset: 19405
    00004bd2: 	movq	0xa0(%rsp), %rdi
    00004bda: 	cmpq	%r13, %rdi
    00004bdd: 	je	.Ltmp6919 # Offset: 19421
    00004bdf: 	movq	0xb0(%rsp), %rax
    00004be7: 	leaq	0x1(%rax), %rsi
    00004beb: 	callq	_ZdlPvm@PLT # Offset: 19435
.Ltmp6919:
    00004bf0: 	leaq	DATAat0x57821(%rip), %rdx
    00004bf7: 	movq	%r14, %rsi
    00004bfa: 	movq	%r12, %rdi
    00004bfd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19453
    00004c02: 	callq	clock@PLT # Offset: 19458
    00004c07: 	movl	iterations(%rip), %ecx
    00004c0d: 	movq	%rax, start_time(%rip)
    00004c14: 	testl	%ecx, %ecx
    00004c16: 	jle	.Ltmp6920 # Offset: 19478
    00004c1c: 	movdqa	DATAat0x57cf0(%rip), %xmm3
    00004c24: 	movl	$0x0, 0x1c(%rsp)
    00004c2c: 	movaps	%xmm3, (%rsp)
.Ltmp6923:
    00004c30: 	movq	%rbp, %rax
    00004c33: 	pxor	%xmm0, %xmm0
    00004c37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6921:
    00004c40: 	movdqa	(%rsp), %xmm1
    00004c45: 	pand	(%rax), %xmm1
    00004c49: 	addq	$0x10, %rax
    00004c4d: 	paddd	%xmm1, %xmm0
    00004c51: 	cmpq	%rax, %rbx
    00004c54: 	jne	.Ltmp6921 # Offset: 19540
    00004c56: 	cvttsd2si	init_value(%rip), %edx
    00004c5e: 	movdqa	%xmm0, %xmm1
    00004c62: 	psrldq	$0x8, %xmm1
    00004c67: 	paddd	%xmm1, %xmm0
    00004c6b: 	movdqa	%xmm0, %xmm1
    00004c6f: 	andl	$0x7f, %edx
    00004c72: 	psrldq	$0x4, %xmm1
    00004c77: 	imull	$0x1f40, %edx, %edx
    00004c7d: 	paddd	%xmm1, %xmm0
    00004c81: 	movd	%xmm0, %eax
    00004c85: 	cmpl	%eax, %edx
    00004c87: 	je	.Ltmp6922 # Offset: 19591
    00004c89: 	movl	current_test(%rip), %edx
    00004c8f: 	leaq	DATAat0x571d0(%rip), %rsi
    00004c96: 	movl	$0x1, %edi
    00004c9b: 	xorl	%eax, %eax
    00004c9d: 	callq	__printf_chk@PLT # Offset: 19613
    00004ca2: 	movl	iterations(%rip), %ecx
.Ltmp6922:
    00004ca8: 	addl	$0x1, 0x1c(%rsp)
    00004cad: 	movl	0x1c(%rsp), %eax
    00004cb1: 	cmpl	%ecx, %eax
    00004cb3: 	jl	.Ltmp6923 # Offset: 19635
.Ltmp6920:
    00004cb9: 	movq	%r12, %rsi
    00004cbc: 	movq	%r15, %rdi
    00004cbf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 19647
    00004cc4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004ccb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004cd2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004cd9: 	je	.Ltmp6924 # Offset: 19673
.Ltmp6999:
    00004cdf: 	movq	-0x20(%rax), %rdi
    00004ce3: 	movq	%rdi, (%rsp)
    00004ce7: 	callq	clock@PLT # Offset: 19687
    00004cec: 	movq	(%rsp), %rdi
    00004cf0: 	pxor	%xmm0, %xmm0
    00004cf4: 	movq	%rax, end_time(%rip)
    00004cfb: 	subq	start_time(%rip), %rax
    00004d02: 	cvtsi2sd	%rax, %xmm0
    00004d07: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004d0f: 	callq	_Z13record_resultdPKc # Offset: 19727
    00004d14: 	movq	0xa0(%rsp), %rdi
    00004d1c: 	cmpq	%r13, %rdi
    00004d1f: 	je	.Ltmp6925 # Offset: 19743
    00004d21: 	movq	0xb0(%rsp), %rax
    00004d29: 	leaq	0x1(%rax), %rsi
    00004d2d: 	callq	_ZdlPvm@PLT # Offset: 19757
.Ltmp6925:
    00004d32: 	leaq	DATAat0x5782a(%rip), %rdx
    00004d39: 	movq	%r14, %rsi
    00004d3c: 	movq	%r12, %rdi
    00004d3f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19775
    00004d44: 	movq	%r12, %rdx
    00004d47: 	movl	$0x1f40, %esi
    00004d4c: 	movq	%rbp, %rdi
    00004d4f: 	callq	_Z13test_constantIi13and_remainderIiLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 19791
    00004d54: 	movq	0xa0(%rsp), %rdi
    00004d5c: 	cmpq	%r13, %rdi
    00004d5f: 	je	.Ltmp6926 # Offset: 19807
    00004d61: 	movq	0xb0(%rsp), %rax
    00004d69: 	leaq	0x1(%rax), %rsi
    00004d6d: 	callq	_ZdlPvm@PLT # Offset: 19821
.Ltmp6926:
    00004d72: 	leaq	DATAat0x5783d(%rip), %rdx
    00004d79: 	movq	%r14, %rsi
    00004d7c: 	movq	%r12, %rdi
    00004d7f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19839
    00004d84: 	movq	%r12, %rdx
    00004d87: 	movl	$0x1f40, %esi
    00004d8c: 	movq	%rbp, %rdi
    00004d8f: 	callq	_Z13test_constantIi14and_remainder2IiLi127EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 19855
    00004d94: 	movq	0xa0(%rsp), %rdi
    00004d9c: 	cmpq	%r13, %rdi
    00004d9f: 	je	.Ltmp6927 # Offset: 19871
    00004da1: 	movq	0xb0(%rsp), %rax
    00004da9: 	leaq	0x1(%rax), %rsi
    00004dad: 	callq	_ZdlPvm@PLT # Offset: 19885
.Ltmp6927:
    00004db2: 	leaq	DATAat0x57851(%rip), %rdx
    00004db9: 	movq	%r14, %rsi
    00004dbc: 	movq	%r12, %rdi
    00004dbf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 19903
    00004dc4: 	callq	clock@PLT # Offset: 19908
    00004dc9: 	movl	iterations(%rip), %esi
    00004dcf: 	movq	%rax, start_time(%rip)
    00004dd6: 	testl	%esi, %esi
    00004dd8: 	jle	.Ltmp6928 # Offset: 19928
    00004dde: 	movdqa	DATAat0x57cf0(%rip), %xmm4
    00004de6: 	movl	$0x0, 0x1c(%rsp)
    00004dee: 	movaps	%xmm4, (%rsp)
    00004df2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6931:
    00004df8: 	pxor	%xmm2, %xmm2
    00004dfc: 	movq	%rbp, %rax
    00004dff: 	movdqa	%xmm2, %xmm3
    00004e03: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6929:
    00004e08: 	movdqa	%xmm3, %xmm1
    00004e0c: 	movdqa	(%rsp), %xmm7
    00004e11: 	movdqa	(%rax), %xmm0
    00004e15: 	addq	$0x10, %rax
    00004e19: 	pcmpgtd	-0x10(%rax), %xmm1
    00004e1e: 	pand	%xmm7, %xmm1
    00004e22: 	paddd	%xmm1, %xmm0
    00004e26: 	pand	%xmm7, %xmm0
    00004e2a: 	psubd	%xmm1, %xmm0
    00004e2e: 	paddd	%xmm0, %xmm2
    00004e32: 	cmpq	%rbx, %rax
    00004e35: 	jne	.Ltmp6929 # Offset: 20021
    00004e37: 	cvttsd2si	init_value(%rip), %eax
    00004e3f: 	movdqa	%xmm2, %xmm0
    00004e43: 	psrldq	$0x8, %xmm0
    00004e48: 	paddd	%xmm0, %xmm2
    00004e4c: 	movdqa	%xmm2, %xmm0
    00004e50: 	movl	%eax, %ecx
    00004e52: 	psrldq	$0x4, %xmm0
    00004e57: 	sarl	$0x1f, %ecx
    00004e5a: 	paddd	%xmm0, %xmm2
    00004e5e: 	shrl	$0x19, %ecx
    00004e61: 	leal	(%rax,%rcx), %edx
    00004e64: 	movd	%xmm2, %eax
    00004e68: 	andl	$0x7f, %edx
    00004e6b: 	subl	%ecx, %edx
    00004e6d: 	imull	$0x1f40, %edx, %edx
    00004e73: 	cmpl	%eax, %edx
    00004e75: 	je	.Ltmp6930 # Offset: 20085
    00004e77: 	movl	current_test(%rip), %edx
    00004e7d: 	leaq	DATAat0x571d0(%rip), %rsi
    00004e84: 	movl	$0x1, %edi
    00004e89: 	xorl	%eax, %eax
    00004e8b: 	callq	__printf_chk@PLT # Offset: 20107
    00004e90: 	movl	iterations(%rip), %esi
.Ltmp6930:
    00004e96: 	addl	$0x1, 0x1c(%rsp)
    00004e9b: 	movl	0x1c(%rsp), %eax
    00004e9f: 	cmpl	%esi, %eax
    00004ea1: 	jl	.Ltmp6931 # Offset: 20129
.Ltmp6928:
    00004ea7: 	movq	%r12, %rsi
    00004eaa: 	movq	%r15, %rdi
    00004ead: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 20141
    00004eb2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00004eb9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00004ec0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00004ec7: 	je	.Ltmp6932 # Offset: 20167
.Ltmp6998:
    00004ecd: 	movq	-0x20(%rax), %rdi
    00004ed1: 	movq	%rdi, (%rsp)
    00004ed5: 	callq	clock@PLT # Offset: 20181
    00004eda: 	movq	(%rsp), %rdi
    00004ede: 	pxor	%xmm0, %xmm0
    00004ee2: 	movq	%rax, end_time(%rip)
    00004ee9: 	subq	start_time(%rip), %rax
    00004ef0: 	cvtsi2sd	%rax, %xmm0
    00004ef5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00004efd: 	callq	_Z13record_resultdPKc # Offset: 20221
    00004f02: 	movq	0xa0(%rsp), %rdi
    00004f0a: 	cmpq	%r13, %rdi
    00004f0d: 	je	.Ltmp6933 # Offset: 20237
    00004f0f: 	movq	0xb0(%rsp), %rax
    00004f17: 	leaq	0x1(%rax), %rsi
    00004f1b: 	callq	_ZdlPvm@PLT # Offset: 20251
.Ltmp6933:
    00004f20: 	leaq	DATAat0x5786a(%rip), %rdx
    00004f27: 	movq	%r14, %rsi
    00004f2a: 	movq	%r12, %rdi
    00004f2d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20269
    00004f32: 	movq	%r12, %rcx
    00004f35: 	movl	$0x80, %edx
    00004f3a: 	movl	$0x1f40, %esi
    00004f3f: 	movq	%rbp, %rdi
    00004f42: 	callq	_Z14test_variable1Ii25custom_remainder_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 20290
    00004f47: 	movq	0xa0(%rsp), %rdi
    00004f4f: 	cmpq	%r13, %rdi
    00004f52: 	je	.Ltmp6934 # Offset: 20306
    00004f54: 	movq	0xb0(%rsp), %rax
    00004f5c: 	leaq	0x1(%rax), %rsi
    00004f60: 	callq	_ZdlPvm@PLT # Offset: 20320
.Ltmp6934:
    00004f65: 	leaq	DATAat0x57885(%rip), %rdx
    00004f6c: 	movq	%r14, %rsi
    00004f6f: 	movq	%r12, %rdi
    00004f72: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20338
    00004f77: 	callq	clock@PLT # Offset: 20343
    00004f7c: 	movl	iterations(%rip), %esi
    00004f82: 	movq	%rax, start_time(%rip)
    00004f89: 	testl	%esi, %esi
    00004f8b: 	jle	.Ltmp6935 # Offset: 20363
    00004f91: 	movdqa	DATAat0x57cf0(%rip), %xmm3
    00004f99: 	movl	$0x0, 0x1c(%rsp)
    00004fa1: 	movaps	%xmm3, (%rsp)
    00004fa5: 	nopl	(%rax) # Size: 3
.Ltmp6938:
    00004fa8: 	pxor	%xmm2, %xmm2
    00004fac: 	movq	%rbp, %rax
    00004faf: 	movdqa	%xmm2, %xmm3
    00004fb3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6936:
    00004fb8: 	movdqa	%xmm3, %xmm1
    00004fbc: 	movdqa	(%rsp), %xmm5
    00004fc1: 	movdqa	(%rax), %xmm0
    00004fc5: 	addq	$0x10, %rax
    00004fc9: 	pcmpgtd	-0x10(%rax), %xmm1
    00004fce: 	pand	%xmm5, %xmm1
    00004fd2: 	paddd	%xmm1, %xmm0
    00004fd6: 	pand	%xmm5, %xmm0
    00004fda: 	psubd	%xmm1, %xmm0
    00004fde: 	paddd	%xmm0, %xmm2
    00004fe2: 	cmpq	%rax, %rbx
    00004fe5: 	jne	.Ltmp6936 # Offset: 20453
    00004fe7: 	cvttsd2si	init_value(%rip), %eax
    00004fef: 	movdqa	%xmm2, %xmm0
    00004ff3: 	psrldq	$0x8, %xmm0
    00004ff8: 	paddd	%xmm0, %xmm2
    00004ffc: 	movdqa	%xmm2, %xmm0
    00005000: 	movl	%eax, %ecx
    00005002: 	psrldq	$0x4, %xmm0
    00005007: 	sarl	$0x1f, %ecx
    0000500a: 	paddd	%xmm0, %xmm2
    0000500e: 	shrl	$0x19, %ecx
    00005011: 	leal	(%rax,%rcx), %edx
    00005014: 	movd	%xmm2, %eax
    00005018: 	andl	$0x7f, %edx
    0000501b: 	subl	%ecx, %edx
    0000501d: 	imull	$0x1f40, %edx, %edx
    00005023: 	cmpl	%eax, %edx
    00005025: 	je	.Ltmp6937 # Offset: 20517
    00005027: 	movl	current_test(%rip), %edx
    0000502d: 	leaq	DATAat0x571d0(%rip), %rsi
    00005034: 	movl	$0x1, %edi
    00005039: 	xorl	%eax, %eax
    0000503b: 	callq	__printf_chk@PLT # Offset: 20539
    00005040: 	movl	iterations(%rip), %esi
.Ltmp6937:
    00005046: 	addl	$0x1, 0x1c(%rsp)
    0000504b: 	movl	0x1c(%rsp), %eax
    0000504f: 	cmpl	%esi, %eax
    00005051: 	jl	.Ltmp6938 # Offset: 20561
.Ltmp6935:
    00005057: 	movq	%r12, %rsi
    0000505a: 	movq	%r15, %rdi
    0000505d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 20573
    00005062: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005069: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005070: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005077: 	je	.Ltmp6939 # Offset: 20599
.Ltmp6997:
    0000507d: 	movq	-0x20(%rax), %rdi
    00005081: 	movq	%rdi, (%rsp)
    00005085: 	callq	clock@PLT # Offset: 20613
    0000508a: 	movq	(%rsp), %rdi
    0000508e: 	pxor	%xmm0, %xmm0
    00005092: 	movq	%rax, end_time(%rip)
    00005099: 	subq	start_time(%rip), %rax
    000050a0: 	cvtsi2sd	%rax, %xmm0
    000050a5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000050ad: 	callq	_Z13record_resultdPKc # Offset: 20653
    000050b2: 	movq	0xa0(%rsp), %rdi
    000050ba: 	cmpq	%r13, %rdi
    000050bd: 	je	.Ltmp6940 # Offset: 20669
    000050bf: 	movq	0xb0(%rsp), %rax
    000050c7: 	leaq	0x1(%rax), %rsi
    000050cb: 	callq	_ZdlPvm@PLT # Offset: 20683
.Ltmp6940:
    000050d0: 	leaq	DATAat0x578a0(%rip), %rdx
    000050d7: 	movq	%r14, %rsi
    000050da: 	movq	%r12, %rdi
    000050dd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 20701
    000050e2: 	callq	clock@PLT # Offset: 20706
    000050e7: 	movl	iterations(%rip), %ecx
    000050ed: 	movq	%rax, start_time(%rip)
    000050f4: 	testl	%ecx, %ecx
    000050f6: 	jle	.Ltmp6941 # Offset: 20726
    000050fc: 	movdqa	DATAat0x57ce0(%rip), %xmm4
    00005104: 	movl	$0x0, 0x1c(%rsp)
    0000510c: 	movaps	%xmm4, (%rsp)
.Ltmp6944:
    00005110: 	movq	%rbp, %rax
    00005113: 	pxor	%xmm0, %xmm0
    00005117: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6942:
    00005120: 	movdqa	(%rsp), %xmm1
    00005125: 	pand	(%rax), %xmm1
    00005129: 	addq	$0x10, %rax
    0000512d: 	paddd	%xmm1, %xmm0
    00005131: 	cmpq	%rbx, %rax
    00005134: 	jne	.Ltmp6942 # Offset: 20788
    00005136: 	cvttsd2si	init_value(%rip), %edx
    0000513e: 	movdqa	%xmm0, %xmm1
    00005142: 	psrldq	$0x8, %xmm1
    00005147: 	paddd	%xmm1, %xmm0
    0000514b: 	movdqa	%xmm0, %xmm1
    0000514f: 	movzbl	%dl, %edx
    00005152: 	psrldq	$0x4, %xmm1
    00005157: 	imull	$0x1f40, %edx, %edx
    0000515d: 	paddd	%xmm1, %xmm0
    00005161: 	movd	%xmm0, %eax
    00005165: 	cmpl	%eax, %edx
    00005167: 	je	.Ltmp6943 # Offset: 20839
    00005169: 	movl	current_test(%rip), %edx
    0000516f: 	leaq	DATAat0x571d0(%rip), %rsi
    00005176: 	movl	$0x1, %edi
    0000517b: 	xorl	%eax, %eax
    0000517d: 	callq	__printf_chk@PLT # Offset: 20861
    00005182: 	movl	iterations(%rip), %ecx
.Ltmp6943:
    00005188: 	addl	$0x1, 0x1c(%rsp)
    0000518d: 	movl	0x1c(%rsp), %eax
    00005191: 	cmpl	%ecx, %eax
    00005193: 	jl	.Ltmp6944 # Offset: 20883
.Ltmp6941:
    00005199: 	movq	%r12, %rsi
    0000519c: 	movq	%r15, %rdi
    0000519f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 20895
    000051a4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000051ab: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000051b2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000051b9: 	je	.Ltmp6945 # Offset: 20921
.Ltmp6996:
    000051bf: 	movq	-0x20(%rax), %rdi
    000051c3: 	movq	%rdi, (%rsp)
    000051c7: 	callq	clock@PLT # Offset: 20935
    000051cc: 	movq	(%rsp), %rdi
    000051d0: 	pxor	%xmm0, %xmm0
    000051d4: 	movq	%rax, end_time(%rip)
    000051db: 	subq	start_time(%rip), %rax
    000051e2: 	cvtsi2sd	%rax, %xmm0
    000051e7: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000051ef: 	callq	_Z13record_resultdPKc # Offset: 20975
    000051f4: 	movq	0xa0(%rsp), %rdi
    000051fc: 	cmpq	%r13, %rdi
    000051ff: 	je	.Ltmp6946 # Offset: 20991
    00005201: 	movq	0xb0(%rsp), %rax
    00005209: 	leaq	0x1(%rax), %rsi
    0000520d: 	callq	_ZdlPvm@PLT # Offset: 21005
.Ltmp6946:
    00005212: 	leaq	DATAat0x578a9(%rip), %rdx
    00005219: 	movq	%r14, %rsi
    0000521c: 	movq	%r12, %rdi
    0000521f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21023
    00005224: 	movq	%r12, %rdx
    00005227: 	movl	$0x1f40, %esi
    0000522c: 	movq	%rbp, %rdi
    0000522f: 	callq	_Z13test_constantIi13and_remainderIiLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 21039
    00005234: 	movq	0xa0(%rsp), %rdi
    0000523c: 	cmpq	%r13, %rdi
    0000523f: 	je	.Ltmp6947 # Offset: 21055
    00005241: 	movq	0xb0(%rsp), %rax
    00005249: 	leaq	0x1(%rax), %rsi
    0000524d: 	callq	_ZdlPvm@PLT # Offset: 21069
.Ltmp6947:
    00005252: 	leaq	DATAat0x578bc(%rip), %rdx
    00005259: 	movq	%r14, %rsi
    0000525c: 	movq	%r12, %rdi
    0000525f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21087
    00005264: 	movq	%r12, %rdx
    00005267: 	movl	$0x1f40, %esi
    0000526c: 	movq	%rbp, %rdi
    0000526f: 	callq	_Z13test_constantIi14and_remainder2IiLi255EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 21103
    00005274: 	movq	0xa0(%rsp), %rdi
    0000527c: 	cmpq	%r13, %rdi
    0000527f: 	je	.Ltmp6948 # Offset: 21119
    00005281: 	movq	0xb0(%rsp), %rax
    00005289: 	leaq	0x1(%rax), %rsi
    0000528d: 	callq	_ZdlPvm@PLT # Offset: 21133
.Ltmp6948:
    00005292: 	leaq	DATAat0x578d0(%rip), %rdx
    00005299: 	movq	%r14, %rsi
    0000529c: 	movq	%r12, %rdi
    0000529f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21151
    000052a4: 	callq	clock@PLT # Offset: 21156
    000052a9: 	movl	iterations(%rip), %esi
    000052af: 	movq	%rax, start_time(%rip)
    000052b6: 	testl	%esi, %esi
    000052b8: 	jle	.Ltmp6949 # Offset: 21176
    000052be: 	movdqa	DATAat0x57ce0(%rip), %xmm3
    000052c6: 	movl	$0x0, 0x1c(%rsp)
    000052ce: 	movaps	%xmm3, (%rsp)
    000052d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6952:
    000052d8: 	pxor	%xmm2, %xmm2
    000052dc: 	movq	%rbp, %rax
    000052df: 	movdqa	%xmm2, %xmm3
    000052e3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6950:
    000052e8: 	movdqa	%xmm3, %xmm1
    000052ec: 	movdqa	(%rsp), %xmm4
    000052f1: 	movdqa	(%rax), %xmm0
    000052f5: 	addq	$0x10, %rax
    000052f9: 	pcmpgtd	-0x10(%rax), %xmm1
    000052fe: 	pand	%xmm4, %xmm1
    00005302: 	paddd	%xmm1, %xmm0
    00005306: 	pand	%xmm4, %xmm0
    0000530a: 	psubd	%xmm1, %xmm0
    0000530e: 	paddd	%xmm0, %xmm2
    00005312: 	cmpq	%rax, %rbx
    00005315: 	jne	.Ltmp6950 # Offset: 21269
    00005317: 	cvttsd2si	init_value(%rip), %eax
    0000531f: 	movdqa	%xmm2, %xmm0
    00005323: 	psrldq	$0x8, %xmm0
    00005328: 	paddd	%xmm0, %xmm2
    0000532c: 	movdqa	%xmm2, %xmm0
    00005330: 	movl	%eax, %ecx
    00005332: 	psrldq	$0x4, %xmm0
    00005337: 	sarl	$0x1f, %ecx
    0000533a: 	paddd	%xmm0, %xmm2
    0000533e: 	shrl	$0x18, %ecx
    00005341: 	leal	(%rax,%rcx), %edx
    00005344: 	movd	%xmm2, %eax
    00005348: 	movzbl	%dl, %edx
    0000534b: 	subl	%ecx, %edx
    0000534d: 	imull	$0x1f40, %edx, %edx
    00005353: 	cmpl	%eax, %edx
    00005355: 	je	.Ltmp6951 # Offset: 21333
    00005357: 	movl	current_test(%rip), %edx
    0000535d: 	leaq	DATAat0x571d0(%rip), %rsi
    00005364: 	movl	$0x1, %edi
    00005369: 	xorl	%eax, %eax
    0000536b: 	callq	__printf_chk@PLT # Offset: 21355
    00005370: 	movl	iterations(%rip), %esi
.Ltmp6951:
    00005376: 	addl	$0x1, 0x1c(%rsp)
    0000537b: 	movl	0x1c(%rsp), %eax
    0000537f: 	cmpl	%esi, %eax
    00005381: 	jl	.Ltmp6952 # Offset: 21377
.Ltmp6949:
    00005387: 	movq	%r12, %rsi
    0000538a: 	movq	%r15, %rdi
    0000538d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 21389
    00005392: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005399: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000053a0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000053a7: 	je	.Ltmp6953 # Offset: 21415
.Ltmp6995:
    000053ad: 	movq	-0x20(%rax), %rdi
    000053b1: 	movq	%rdi, (%rsp)
    000053b5: 	callq	clock@PLT # Offset: 21429
    000053ba: 	movq	(%rsp), %rdi
    000053be: 	pxor	%xmm0, %xmm0
    000053c2: 	movq	%rax, end_time(%rip)
    000053c9: 	subq	start_time(%rip), %rax
    000053d0: 	cvtsi2sd	%rax, %xmm0
    000053d5: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000053dd: 	callq	_Z13record_resultdPKc # Offset: 21469
    000053e2: 	movq	0xa0(%rsp), %rdi
    000053ea: 	cmpq	%r13, %rdi
    000053ed: 	je	.Ltmp6954 # Offset: 21485
    000053ef: 	movq	0xb0(%rsp), %rax
    000053f7: 	leaq	0x1(%rax), %rsi
    000053fb: 	callq	_ZdlPvm@PLT # Offset: 21499
.Ltmp6954:
    00005400: 	leaq	DATAat0x578e9(%rip), %rdx
    00005407: 	movq	%r14, %rsi
    0000540a: 	movq	%r12, %rdi
    0000540d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21517
    00005412: 	movq	%r12, %rcx
    00005415: 	movl	$0x100, %edx
    0000541a: 	movl	$0x1f40, %esi
    0000541f: 	movq	%rbp, %rdi
    00005422: 	callq	_Z14test_variable1Ii25custom_remainder_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 21538
    00005427: 	movq	0xa0(%rsp), %rdi
    0000542f: 	cmpq	%r13, %rdi
    00005432: 	je	.Ltmp6955 # Offset: 21554
    00005434: 	movq	0xb0(%rsp), %rax
    0000543c: 	leaq	0x1(%rax), %rsi
    00005440: 	callq	_ZdlPvm@PLT # Offset: 21568
.Ltmp6955:
    00005445: 	leaq	DATAat0x57904(%rip), %rdx
    0000544c: 	movq	%r14, %rsi
    0000544f: 	movq	%r12, %rdi
    00005452: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21586
    00005457: 	callq	clock@PLT # Offset: 21591
    0000545c: 	movl	iterations(%rip), %esi
    00005462: 	movq	%rax, start_time(%rip)
    00005469: 	testl	%esi, %esi
    0000546b: 	jle	.Ltmp6956 # Offset: 21611
    00005471: 	movdqa	DATAat0x57ce0(%rip), %xmm4
    00005479: 	movl	$0x0, 0x1c(%rsp)
    00005481: 	movaps	%xmm4, (%rsp)
    00005485: 	nopl	(%rax) # Size: 3
.Ltmp6959:
    00005488: 	pxor	%xmm2, %xmm2
    0000548c: 	movq	%rbp, %rax
    0000548f: 	movdqa	%xmm2, %xmm3
    00005493: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6957:
    00005498: 	movdqa	%xmm3, %xmm1
    0000549c: 	movdqa	(%rsp), %xmm6
    000054a1: 	movdqa	(%rax), %xmm0
    000054a5: 	addq	$0x10, %rax
    000054a9: 	pcmpgtd	-0x10(%rax), %xmm1
    000054ae: 	pand	%xmm6, %xmm1
    000054b2: 	paddd	%xmm1, %xmm0
    000054b6: 	pand	%xmm6, %xmm0
    000054ba: 	psubd	%xmm1, %xmm0
    000054be: 	paddd	%xmm0, %xmm2
    000054c2: 	cmpq	%rbx, %rax
    000054c5: 	jne	.Ltmp6957 # Offset: 21701
    000054c7: 	cvttsd2si	init_value(%rip), %eax
    000054cf: 	movdqa	%xmm2, %xmm0
    000054d3: 	psrldq	$0x8, %xmm0
    000054d8: 	paddd	%xmm0, %xmm2
    000054dc: 	movdqa	%xmm2, %xmm0
    000054e0: 	movl	%eax, %ecx
    000054e2: 	psrldq	$0x4, %xmm0
    000054e7: 	sarl	$0x1f, %ecx
    000054ea: 	paddd	%xmm0, %xmm2
    000054ee: 	shrl	$0x18, %ecx
    000054f1: 	leal	(%rax,%rcx), %edx
    000054f4: 	movd	%xmm2, %eax
    000054f8: 	movzbl	%dl, %edx
    000054fb: 	subl	%ecx, %edx
    000054fd: 	imull	$0x1f40, %edx, %edx
    00005503: 	cmpl	%eax, %edx
    00005505: 	je	.Ltmp6958 # Offset: 21765
    00005507: 	movl	current_test(%rip), %edx
    0000550d: 	leaq	DATAat0x571d0(%rip), %rsi
    00005514: 	movl	$0x1, %edi
    00005519: 	xorl	%eax, %eax
    0000551b: 	callq	__printf_chk@PLT # Offset: 21787
    00005520: 	movl	iterations(%rip), %esi
.Ltmp6958:
    00005526: 	addl	$0x1, 0x1c(%rsp)
    0000552b: 	movl	0x1c(%rsp), %eax
    0000552f: 	cmpl	%esi, %eax
    00005531: 	jl	.Ltmp6959 # Offset: 21809
.Ltmp6956:
    00005537: 	movq	%r12, %rsi
    0000553a: 	movq	%r15, %rdi
    0000553d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 21821
    00005542: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005549: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005550: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005557: 	je	.Ltmp6960 # Offset: 21847
.Ltmp6994:
    0000555d: 	movq	-0x20(%rax), %rdi
    00005561: 	movq	%rdi, (%rsp)
    00005565: 	callq	clock@PLT # Offset: 21861
    0000556a: 	movq	(%rsp), %rdi
    0000556e: 	pxor	%xmm0, %xmm0
    00005572: 	movq	%rax, end_time(%rip)
    00005579: 	subq	start_time(%rip), %rax
    00005580: 	cvtsi2sd	%rax, %xmm0
    00005585: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000558d: 	callq	_Z13record_resultdPKc # Offset: 21901
    00005592: 	movq	0xa0(%rsp), %rdi
    0000559a: 	cmpq	%r13, %rdi
    0000559d: 	je	.Ltmp6961 # Offset: 21917
    0000559f: 	movq	0xb0(%rsp), %rax
    000055a7: 	leaq	0x1(%rax), %rsi
    000055ab: 	callq	_ZdlPvm@PLT # Offset: 21931
.Ltmp6961:
    000055b0: 	leaq	DATAat0x5791f(%rip), %rdx
    000055b7: 	movq	%r14, %rsi
    000055ba: 	movq	%r12, %rdi
    000055bd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 21949
    000055c2: 	callq	clock@PLT # Offset: 21954
    000055c7: 	movl	iterations(%rip), %ecx
    000055cd: 	movq	%rax, start_time(%rip)
    000055d4: 	testl	%ecx, %ecx
    000055d6: 	jle	.Ltmp6962 # Offset: 21974
    000055dc: 	movdqa	DATAat0x57c20(%rip), %xmm3
    000055e4: 	movl	$0x0, 0x1c(%rsp)
    000055ec: 	movaps	%xmm3, (%rsp)
.Ltmp6965:
    000055f0: 	movq	%rbp, %rax
    000055f3: 	pxor	%xmm0, %xmm0
    000055f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp6963:
    00005600: 	movdqa	(%rsp), %xmm1
    00005605: 	pand	(%rax), %xmm1
    00005609: 	addq	$0x10, %rax
    0000560d: 	paddd	%xmm1, %xmm0
    00005611: 	cmpq	%rax, %rbx
    00005614: 	jne	.Ltmp6963 # Offset: 22036
    00005616: 	cvttsd2si	init_value(%rip), %edx
    0000561e: 	movdqa	%xmm0, %xmm1
    00005622: 	psrldq	$0x8, %xmm1
    00005627: 	paddd	%xmm1, %xmm0
    0000562b: 	movdqa	%xmm0, %xmm1
    0000562f: 	andl	$0x3ff, %edx
    00005635: 	psrldq	$0x4, %xmm1
    0000563a: 	imull	$0x1f40, %edx, %edx
    00005640: 	paddd	%xmm1, %xmm0
    00005644: 	movd	%xmm0, %eax
    00005648: 	cmpl	%eax, %edx
    0000564a: 	je	.Ltmp6964 # Offset: 22090
    0000564c: 	movl	current_test(%rip), %edx
    00005652: 	leaq	DATAat0x571d0(%rip), %rsi
    00005659: 	movl	$0x1, %edi
    0000565e: 	xorl	%eax, %eax
    00005660: 	callq	__printf_chk@PLT # Offset: 22112
    00005665: 	movl	iterations(%rip), %ecx
.Ltmp6964:
    0000566b: 	addl	$0x1, 0x1c(%rsp)
    00005670: 	movl	0x1c(%rsp), %eax
    00005674: 	cmpl	%ecx, %eax
    00005676: 	jl	.Ltmp6965 # Offset: 22134
.Ltmp6962:
    0000567c: 	movq	%r12, %rsi
    0000567f: 	movq	%r15, %rdi
    00005682: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 22146
    00005687: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000568e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005695: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000569c: 	je	.Ltmp6966 # Offset: 22172
.Ltmp6993:
    000056a2: 	movq	-0x20(%rax), %rdi
    000056a6: 	movq	%rdi, (%rsp)
    000056aa: 	callq	clock@PLT # Offset: 22186
    000056af: 	movq	(%rsp), %rdi
    000056b3: 	pxor	%xmm0, %xmm0
    000056b7: 	movq	%rax, end_time(%rip)
    000056be: 	subq	start_time(%rip), %rax
    000056c5: 	cvtsi2sd	%rax, %xmm0
    000056ca: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000056d2: 	callq	_Z13record_resultdPKc # Offset: 22226
    000056d7: 	movq	0xa0(%rsp), %rdi
    000056df: 	cmpq	%r13, %rdi
    000056e2: 	je	.Ltmp6967 # Offset: 22242
    000056e4: 	movq	0xb0(%rsp), %rax
    000056ec: 	leaq	0x1(%rax), %rsi
    000056f0: 	callq	_ZdlPvm@PLT # Offset: 22256
.Ltmp6967:
    000056f5: 	leaq	DATAat0x57929(%rip), %rdx
    000056fc: 	movq	%r14, %rsi
    000056ff: 	movq	%r12, %rdi
    00005702: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22274
    00005707: 	movq	%r12, %rdx
    0000570a: 	movl	$0x1f40, %esi
    0000570f: 	movq	%rbp, %rdi
    00005712: 	callq	_Z13test_constantIi13and_remainderIiLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 22290
    00005717: 	movq	0xa0(%rsp), %rdi
    0000571f: 	cmpq	%r13, %rdi
    00005722: 	je	.Ltmp6968 # Offset: 22306
    00005724: 	movq	0xb0(%rsp), %rax
    0000572c: 	leaq	0x1(%rax), %rsi
    00005730: 	callq	_ZdlPvm@PLT # Offset: 22320
.Ltmp6968:
    00005735: 	leaq	DATAat0x5793d(%rip), %rdx
    0000573c: 	movq	%r14, %rsi
    0000573f: 	movq	%r12, %rdi
    00005742: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22338
    00005747: 	movq	%r12, %rdx
    0000574a: 	movl	$0x1f40, %esi
    0000574f: 	movq	%rbp, %rdi
    00005752: 	callq	_Z13test_constantIi14and_remainder2IiLi1023EEEvPKT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 22354
    00005757: 	movq	0xa0(%rsp), %rdi
    0000575f: 	cmpq	%r13, %rdi
    00005762: 	je	.Ltmp6969 # Offset: 22370
    00005764: 	movq	0xb0(%rsp), %rax
    0000576c: 	leaq	0x1(%rax), %rsi
    00005770: 	callq	_ZdlPvm@PLT # Offset: 22384
.Ltmp6969:
    00005775: 	leaq	DATAat0x57952(%rip), %rdx
    0000577c: 	movq	%r14, %rsi
    0000577f: 	movq	%r12, %rdi
    00005782: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22402
    00005787: 	callq	clock@PLT # Offset: 22407
    0000578c: 	movl	iterations(%rip), %esi
    00005792: 	movq	%rax, start_time(%rip)
    00005799: 	testl	%esi, %esi
    0000579b: 	jle	.Ltmp6970 # Offset: 22427
    000057a1: 	movdqa	DATAat0x57c20(%rip), %xmm4
    000057a9: 	movl	$0x0, 0x1c(%rsp)
    000057b1: 	movaps	%xmm4, (%rsp)
    000057b5: 	nopl	(%rax) # Size: 3
.Ltmp6973:
    000057b8: 	pxor	%xmm2, %xmm2
    000057bc: 	movq	%rbp, %rax
    000057bf: 	movdqa	%xmm2, %xmm3
    000057c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6971:
    000057c8: 	movdqa	%xmm3, %xmm1
    000057cc: 	movdqa	(%rsp), %xmm7
    000057d1: 	movdqa	(%rax), %xmm0
    000057d5: 	addq	$0x10, %rax
    000057d9: 	pcmpgtd	-0x10(%rax), %xmm1
    000057de: 	pand	%xmm7, %xmm1
    000057e2: 	paddd	%xmm1, %xmm0
    000057e6: 	pand	%xmm7, %xmm0
    000057ea: 	psubd	%xmm1, %xmm0
    000057ee: 	paddd	%xmm0, %xmm2
    000057f2: 	cmpq	%rbx, %rax
    000057f5: 	jne	.Ltmp6971 # Offset: 22517
    000057f7: 	cvttsd2si	init_value(%rip), %eax
    000057ff: 	movdqa	%xmm2, %xmm0
    00005803: 	psrldq	$0x8, %xmm0
    00005808: 	paddd	%xmm0, %xmm2
    0000580c: 	movdqa	%xmm2, %xmm0
    00005810: 	movl	%eax, %ecx
    00005812: 	psrldq	$0x4, %xmm0
    00005817: 	sarl	$0x1f, %ecx
    0000581a: 	paddd	%xmm0, %xmm2
    0000581e: 	shrl	$0x16, %ecx
    00005821: 	leal	(%rax,%rcx), %edx
    00005824: 	movd	%xmm2, %eax
    00005828: 	andl	$0x3ff, %edx
    0000582e: 	subl	%ecx, %edx
    00005830: 	imull	$0x1f40, %edx, %edx
    00005836: 	cmpl	%eax, %edx
    00005838: 	je	.Ltmp6972 # Offset: 22584
    0000583a: 	movl	current_test(%rip), %edx
    00005840: 	leaq	DATAat0x571d0(%rip), %rsi
    00005847: 	movl	$0x1, %edi
    0000584c: 	xorl	%eax, %eax
    0000584e: 	callq	__printf_chk@PLT # Offset: 22606
    00005853: 	movl	iterations(%rip), %esi
.Ltmp6972:
    00005859: 	addl	$0x1, 0x1c(%rsp)
    0000585e: 	movl	0x1c(%rsp), %eax
    00005862: 	cmpl	%esi, %eax
    00005864: 	jl	.Ltmp6973 # Offset: 22628
.Ltmp6970:
    0000586a: 	movq	%r12, %rsi
    0000586d: 	movq	%r15, %rdi
    00005870: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 22640
    00005875: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000587c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005883: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000588a: 	je	.Ltmp6974 # Offset: 22666
.Ltmp6992:
    00005890: 	movq	-0x20(%rax), %rdi
    00005894: 	movq	%rdi, (%rsp)
    00005898: 	callq	clock@PLT # Offset: 22680
    0000589d: 	movq	(%rsp), %rdi
    000058a1: 	pxor	%xmm0, %xmm0
    000058a5: 	movq	%rax, end_time(%rip)
    000058ac: 	subq	start_time(%rip), %rax
    000058b3: 	cvtsi2sd	%rax, %xmm0
    000058b8: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000058c0: 	callq	_Z13record_resultdPKc # Offset: 22720
    000058c5: 	movq	0xa0(%rsp), %rdi
    000058cd: 	cmpq	%r13, %rdi
    000058d0: 	je	.Ltmp6975 # Offset: 22736
    000058d2: 	movq	0xb0(%rsp), %rax
    000058da: 	leaq	0x1(%rax), %rsi
    000058de: 	callq	_ZdlPvm@PLT # Offset: 22750
.Ltmp6975:
    000058e3: 	leaq	DATAat0x5796c(%rip), %rdx
    000058ea: 	movq	%r14, %rsi
    000058ed: 	movq	%r12, %rdi
    000058f0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22768
    000058f5: 	movq	%r12, %rcx
    000058f8: 	movl	$0x400, %edx
    000058fd: 	movl	$0x1f40, %esi
    00005902: 	movq	%rbp, %rdi
    00005905: 	callq	_Z14test_variable1Ii25custom_remainder_variableIiEEvPKT_iS2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 22789
    0000590a: 	movq	0xa0(%rsp), %rdi
    00005912: 	cmpq	%r13, %rdi
    00005915: 	je	.Ltmp6976 # Offset: 22805
    00005917: 	movq	0xb0(%rsp), %rax
    0000591f: 	leaq	0x1(%rax), %rsi
    00005923: 	callq	_ZdlPvm@PLT # Offset: 22819
.Ltmp6976:
    00005928: 	leaq	DATAat0x57988(%rip), %rdx
    0000592f: 	movq	%r14, %rsi
    00005932: 	movq	%r12, %rdi
    00005935: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 22837
    0000593a: 	callq	clock@PLT # Offset: 22842
    0000593f: 	movl	iterations(%rip), %esi
    00005945: 	movq	%rax, start_time(%rip)
    0000594c: 	testl	%esi, %esi
    0000594e: 	jle	.Ltmp6977 # Offset: 22862
    00005954: 	movdqa	DATAat0x57c20(%rip), %xmm3
    0000595c: 	movl	$0x0, 0x1c(%rsp)
    00005964: 	movaps	%xmm3, (%rsp)
    00005968: 	nopl	(%rax,%rax) # Size: 8
.Ltmp6980:
    00005970: 	pxor	%xmm2, %xmm2
    00005974: 	movq	%rbp, %rax
    00005977: 	movdqa	%xmm2, %xmm3
    0000597b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp6978:
    00005980: 	movdqa	%xmm3, %xmm1
    00005984: 	movdqa	(%rsp), %xmm5
    00005989: 	movdqa	(%rax), %xmm0
    0000598d: 	addq	$0x10, %rax
    00005991: 	pcmpgtd	-0x10(%rax), %xmm1
    00005996: 	pand	%xmm5, %xmm1
    0000599a: 	paddd	%xmm1, %xmm0
    0000599e: 	pand	%xmm5, %xmm0
    000059a2: 	psubd	%xmm1, %xmm0
    000059a6: 	paddd	%xmm0, %xmm2
    000059aa: 	cmpq	%rbx, %rax
    000059ad: 	jne	.Ltmp6978 # Offset: 22957
    000059af: 	cvttsd2si	init_value(%rip), %eax
    000059b7: 	movdqa	%xmm2, %xmm0
    000059bb: 	psrldq	$0x8, %xmm0
    000059c0: 	paddd	%xmm0, %xmm2
    000059c4: 	movdqa	%xmm2, %xmm0
    000059c8: 	movl	%eax, %ecx
    000059ca: 	psrldq	$0x4, %xmm0
    000059cf: 	sarl	$0x1f, %ecx
    000059d2: 	paddd	%xmm0, %xmm2
    000059d6: 	shrl	$0x16, %ecx
    000059d9: 	leal	(%rax,%rcx), %edx
    000059dc: 	movd	%xmm2, %eax
    000059e0: 	andl	$0x3ff, %edx
    000059e6: 	subl	%ecx, %edx
    000059e8: 	imull	$0x1f40, %edx, %edx
    000059ee: 	cmpl	%eax, %edx
    000059f0: 	je	.Ltmp6979 # Offset: 23024
    000059f2: 	movl	current_test(%rip), %edx
    000059f8: 	leaq	DATAat0x571d0(%rip), %rsi
    000059ff: 	movl	$0x1, %edi
    00005a04: 	xorl	%eax, %eax
    00005a06: 	callq	__printf_chk@PLT # Offset: 23046
    00005a0b: 	movl	iterations(%rip), %esi
.Ltmp6979:
    00005a11: 	addl	$0x1, 0x1c(%rsp)
    00005a16: 	movl	0x1c(%rsp), %eax
    00005a1a: 	cmpl	%esi, %eax
    00005a1c: 	jl	.Ltmp6980 # Offset: 23068
.Ltmp6977:
    00005a22: 	movq	%r12, %rsi
    00005a25: 	movq	%r15, %rdi
    00005a28: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 23080
    00005a2d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00005a34: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00005a3b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00005a42: 	je	.Ltmp6981 # Offset: 23106
.Ltmp6991:
    00005a48: 	movq	-0x20(%rax), %rbp
    00005a4c: 	callq	clock@PLT # Offset: 23116
    00005a51: 	pxor	%xmm0, %xmm0
    00005a55: 	movq	%rax, end_time(%rip)
    00005a5c: 	movq	%rbp, %rdi
    00005a5f: 	subq	start_time(%rip), %rax
    00005a66: 	cvtsi2sd	%rax, %xmm0
    00005a6b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00005a73: 	callq	_Z13record_resultdPKc # Offset: 23155
    00005a78: 	movq	0xa0(%rsp), %rdi
    00005a80: 	cmpq	%r13, %rdi
    00005a83: 	je	.Ltmp6982 # Offset: 23171
    00005a85: 	movq	0xb0(%rsp), %rax
    00005a8d: 	leaq	0x1(%rax), %rsi
    00005a91: 	callq	_ZdlPvm@PLT # Offset: 23185
.Ltmp6982:
    00005a96: 	leaq	DATAat0x579a4(%rip), %rdx
    00005a9d: 	movq	%r14, %rsi
    00005aa0: 	movq	%r12, %rdi
    00005aa3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 23203
    00005aa8: 	movl	iterations(%rip), %edx
    00005aae: 	xorl	%r8d, %r8d
    00005ab1: 	xorl	%ecx, %ecx
    00005ab3: 	movl	$0x1f40, %esi
    00005ab8: 	movq	0xa0(%rsp), %rdi
    00005ac0: 	callq	_Z9summarizePKciiii # Offset: 23232
    00005ac5: 	movq	0xa0(%rsp), %rdi
    00005acd: 	cmpq	%r13, %rdi
    00005ad0: 	je	.Ltmp6983 # Offset: 23248
    00005ad2: 	movq	0xb0(%rsp), %rax
    00005ada: 	leaq	0x1(%rax), %rsi
    00005ade: 	callq	_ZdlPvm@PLT # Offset: 23262
.Ltmp6983:
    00005ae3: 	movq	0x80(%rsp), %rdi
    00005aeb: 	leaq	0x90(%rsp), %rax
    00005af3: 	cmpq	%rax, %rdi
    00005af6: 	je	.Ltmp6984 # Offset: 23286
    00005af8: 	movq	0x90(%rsp), %rax
    00005b00: 	leaq	0x1(%rax), %rsi
    00005b04: 	callq	_ZdlPvm@PLT # Offset: 23300
.Ltmp6984:
    00005b09: 	movq	0x60(%rsp), %rdi
    00005b0e: 	leaq	0x70(%rsp), %rax
    00005b13: 	cmpq	%rax, %rdi
    00005b16: 	je	.Ltmp6985 # Offset: 23318
    00005b18: 	movq	0x70(%rsp), %rax
    00005b1d: 	leaq	0x1(%rax), %rsi
    00005b21: 	callq	_ZdlPvm@PLT # Offset: 23329
.Ltmp6985:
    00005b26: 	movq	0x40(%rsp), %rdi
    00005b2b: 	leaq	0x50(%rsp), %rax
    00005b30: 	cmpq	%rax, %rdi
    00005b33: 	je	.Ltmp6986 # Offset: 23347
    00005b35: 	movq	0x50(%rsp), %rax
    00005b3a: 	leaq	0x1(%rax), %rsi
    00005b3e: 	callq	_ZdlPvm@PLT # Offset: 23358
.Ltmp6986:
    00005b43: 	movq	0x7dc8(%rsp), %rax
    00005b4b: 	subq	%fs:0x28, %rax
    00005b54: 	jne	.Ltmp6987 # Offset: 23380
    00005b5a: 	addq	$0x7dd8, %rsp
    00005b61: 	popq	%rbx
    00005b62: 	popq	%rbp
    00005b63: 	popq	%r12
    00005b65: 	popq	%r13
    00005b67: 	popq	%r14
    00005b69: 	popq	%r15
    00005b6b: 	retq # Offset: 23403
    00005b6c: 	nopl	(%rax) # Size: 4
.Ltmp6784:
    00005b70: 	addq	$0x4, %rax
    00005b74: 	subl	$0x1, %esi
    00005b77: 	cmpq	%rax, %rbx
    00005b7a: 	jne	.Ltmp6785 # Offset: 23418
    00005b80: 	jmp	.Ltmp6988 # Offset: 23424
    00005b85: 	nopl	(%rax) # Size: 3
.Ltmp6794:
    00005b88: 	addq	$0x4, %rax
    00005b8c: 	subl	$0x1, %esi
    00005b8f: 	cmpq	%rbx, %rax
    00005b92: 	jne	.Ltmp6795 # Offset: 23442
    00005b98: 	jmp	.Ltmp6989 # Offset: 23448
.Ltmp6589:
    00005b9d: 	movq	-0x8(%rdx), %rax
    00005ba1: 	addq	$0x200, %rax
    00005ba7: 	jmp	.Ltmp6990 # Offset: 23463
.Ltmp6981:
    00005bac: 	movq	-0x8(%rdx), %rax
    00005bb0: 	addq	$0x200, %rax
    00005bb6: 	jmp	.Ltmp6991 # Offset: 23478
.Ltmp6974:
    00005bbb: 	movq	-0x8(%rdx), %rax
    00005bbf: 	addq	$0x200, %rax
    00005bc5: 	jmp	.Ltmp6992 # Offset: 23493
.Ltmp6966:
    00005bca: 	movq	-0x8(%rdx), %rax
    00005bce: 	addq	$0x200, %rax
    00005bd4: 	jmp	.Ltmp6993 # Offset: 23508
.Ltmp6960:
    00005bd9: 	movq	-0x8(%rdx), %rax
    00005bdd: 	addq	$0x200, %rax
    00005be3: 	jmp	.Ltmp6994 # Offset: 23523
.Ltmp6953:
    00005be8: 	movq	-0x8(%rdx), %rax
    00005bec: 	addq	$0x200, %rax
    00005bf2: 	jmp	.Ltmp6995 # Offset: 23538
.Ltmp6945:
    00005bf7: 	movq	-0x8(%rdx), %rax
    00005bfb: 	addq	$0x200, %rax
    00005c01: 	jmp	.Ltmp6996 # Offset: 23553
.Ltmp6939:
    00005c06: 	movq	-0x8(%rdx), %rax
    00005c0a: 	addq	$0x200, %rax
    00005c10: 	jmp	.Ltmp6997 # Offset: 23568
.Ltmp6932:
    00005c15: 	movq	-0x8(%rdx), %rax
    00005c19: 	addq	$0x200, %rax
    00005c1f: 	jmp	.Ltmp6998 # Offset: 23583
.Ltmp6924:
    00005c24: 	movq	-0x8(%rdx), %rax
    00005c28: 	addq	$0x200, %rax
    00005c2e: 	jmp	.Ltmp6999 # Offset: 23598
.Ltmp6918:
    00005c33: 	movq	-0x8(%rdx), %rax
    00005c37: 	addq	$0x200, %rax
    00005c3d: 	jmp	.Ltmp7000 # Offset: 23613
.Ltmp6911:
    00005c42: 	movq	-0x8(%rdx), %rax
    00005c46: 	addq	$0x200, %rax
    00005c4c: 	jmp	.Ltmp7001 # Offset: 23628
.Ltmp6903:
    00005c51: 	movq	-0x8(%rdx), %rax
    00005c55: 	addq	$0x200, %rax
    00005c5b: 	jmp	.Ltmp7002 # Offset: 23643
.Ltmp6897:
    00005c60: 	movq	-0x8(%rdx), %rax
    00005c64: 	addq	$0x200, %rax
    00005c6a: 	jmp	.Ltmp7003 # Offset: 23658
.Ltmp6890:
    00005c6f: 	movq	-0x8(%rdx), %rax
    00005c73: 	addq	$0x200, %rax
    00005c79: 	jmp	.Ltmp7004 # Offset: 23673
.Ltmp6882:
    00005c7e: 	movq	-0x8(%rdx), %rax
    00005c82: 	addq	$0x200, %rax
    00005c88: 	jmp	.Ltmp7005 # Offset: 23688
.Ltmp6876:
    00005c8d: 	movq	-0x8(%rdx), %rax
    00005c91: 	addq	$0x200, %rax
    00005c97: 	jmp	.Ltmp7006 # Offset: 23703
.Ltmp6869:
    00005c9c: 	movq	-0x8(%rdx), %rax
    00005ca0: 	addq	$0x200, %rax
    00005ca6: 	jmp	.Ltmp7007 # Offset: 23718
.Ltmp6861:
    00005cab: 	movq	-0x8(%rdx), %rax
    00005caf: 	addq	$0x200, %rax
    00005cb5: 	jmp	.Ltmp7008 # Offset: 23733
.Ltmp6855:
    00005cba: 	movq	-0x8(%rdx), %rax
    00005cbe: 	addq	$0x200, %rax
    00005cc4: 	jmp	.Ltmp7009 # Offset: 23748
.Ltmp6848:
    00005cc9: 	movq	-0x8(%rdx), %rax
    00005ccd: 	addq	$0x200, %rax
    00005cd3: 	jmp	.Ltmp7010 # Offset: 23763
.Ltmp6840:
    00005cd8: 	movq	-0x8(%rdx), %rax
    00005cdc: 	addq	$0x200, %rax
    00005ce2: 	jmp	.Ltmp7011 # Offset: 23778
.Ltmp6834:
    00005ce7: 	movq	-0x8(%rdx), %rax
    00005ceb: 	addq	$0x200, %rax
    00005cf1: 	jmp	.Ltmp7012 # Offset: 23793
.Ltmp6827:
    00005cf6: 	movq	-0x8(%rdx), %rax
    00005cfa: 	addq	$0x200, %rax
    00005d00: 	jmp	.Ltmp7013 # Offset: 23808
.Ltmp6819:
    00005d05: 	movq	-0x8(%rdx), %rax
    00005d09: 	addq	$0x200, %rax
    00005d0f: 	jmp	.Ltmp7014 # Offset: 23823
.Ltmp6813:
    00005d14: 	movq	-0x8(%rdx), %rax
    00005d18: 	addq	$0x200, %rax
    00005d1e: 	jmp	.Ltmp7015 # Offset: 23838
.Ltmp6806:
    00005d23: 	movq	-0x8(%rdx), %rax
    00005d27: 	addq	$0x200, %rax
    00005d2d: 	jmp	.Ltmp7016 # Offset: 23853
.Ltmp6800:
    00005d32: 	movq	-0x8(%rdx), %rax
    00005d36: 	addq	$0x200, %rax
    00005d3c: 	jmp	.Ltmp7017 # Offset: 23868
.Ltmp6790:
    00005d41: 	movq	-0x8(%rdx), %rax
    00005d45: 	addq	$0x200, %rax
    00005d4b: 	jmp	.Ltmp7018 # Offset: 23883
.Ltmp6780:
    00005d50: 	movq	-0x8(%rdx), %rax
    00005d54: 	addq	$0x200, %rax
    00005d5a: 	jmp	.Ltmp7019 # Offset: 23898
.Ltmp6774:
    00005d5f: 	movq	-0x8(%rdx), %rax
    00005d63: 	addq	$0x200, %rax
    00005d69: 	jmp	.Ltmp7020 # Offset: 23913
.Ltmp6767:
    00005d6e: 	movq	-0x8(%rdx), %rax
    00005d72: 	addq	$0x200, %rax
    00005d78: 	jmp	.Ltmp7021 # Offset: 23928
.Ltmp6760:
    00005d7d: 	movq	-0x8(%rdx), %rax
    00005d81: 	addq	$0x200, %rax
    00005d87: 	jmp	.Ltmp7022 # Offset: 23943
.Ltmp6754:
    00005d8c: 	movq	-0x8(%rdx), %rax
    00005d90: 	addq	$0x200, %rax
    00005d96: 	jmp	.Ltmp7023 # Offset: 23958
.Ltmp6747:
    00005d9b: 	movq	-0x8(%rdx), %rax
    00005d9f: 	addq	$0x200, %rax
    00005da5: 	jmp	.Ltmp7024 # Offset: 23973
.Ltmp6740:
    00005daa: 	movq	-0x8(%rdx), %rax
    00005dae: 	addq	$0x200, %rax
    00005db4: 	jmp	.Ltmp7025 # Offset: 23988
.Ltmp6734:
    00005db9: 	movq	-0x8(%rdx), %rax
    00005dbd: 	addq	$0x200, %rax
    00005dc3: 	jmp	.Ltmp7026 # Offset: 24003
.Ltmp6727:
    00005dc8: 	movq	-0x8(%rdx), %rax
    00005dcc: 	addq	$0x200, %rax
    00005dd2: 	jmp	.Ltmp7027 # Offset: 24018
.Ltmp6721:
    00005dd7: 	movq	-0x8(%rdx), %rax
    00005ddb: 	addq	$0x200, %rax
    00005de1: 	jmp	.Ltmp7028 # Offset: 24033
.Ltmp6714:
    00005de6: 	movq	-0x8(%rdx), %rax
    00005dea: 	addq	$0x200, %rax
    00005df0: 	jmp	.Ltmp7029 # Offset: 24048
.Ltmp6708:
    00005df5: 	movq	-0x8(%rdx), %rax
    00005df9: 	addq	$0x200, %rax
    00005dff: 	jmp	.Ltmp7030 # Offset: 24063
.Ltmp6701:
    00005e04: 	movq	-0x8(%rdx), %rax
    00005e08: 	addq	$0x200, %rax
    00005e0e: 	jmp	.Ltmp7031 # Offset: 24078
.Ltmp6694:
    00005e13: 	movq	-0x8(%rdx), %rax
    00005e17: 	addq	$0x200, %rax
    00005e1d: 	jmp	.Ltmp7032 # Offset: 24093
.Ltmp6688:
    00005e22: 	movq	-0x8(%rdx), %rax
    00005e26: 	addq	$0x200, %rax
    00005e2c: 	jmp	.Ltmp7033 # Offset: 24108
.Ltmp6682:
    00005e31: 	movq	-0x8(%rdx), %rax
    00005e35: 	addq	$0x200, %rax
    00005e3b: 	jmp	.Ltmp7034 # Offset: 24123
.Ltmp6675:
    00005e40: 	movq	-0x8(%rdx), %rax
    00005e44: 	addq	$0x200, %rax
    00005e4a: 	jmp	.Ltmp7035 # Offset: 24138
.Ltmp6669:
    00005e4f: 	movq	-0x8(%rdx), %rax
    00005e53: 	addq	$0x200, %rax
    00005e59: 	jmp	.Ltmp7036 # Offset: 24153
.Ltmp6663:
    00005e5e: 	movq	-0x8(%rdx), %rax
    00005e62: 	addq	$0x200, %rax
    00005e68: 	jmp	.Ltmp7037 # Offset: 24168
.Ltmp6656:
    00005e6d: 	movq	-0x8(%rdx), %rax
    00005e71: 	addq	$0x200, %rax
    00005e77: 	jmp	.Ltmp7038 # Offset: 24183
.Ltmp6650:
    00005e7c: 	movq	-0x8(%rdx), %rax
    00005e80: 	addq	$0x200, %rax
    00005e86: 	jmp	.Ltmp7039 # Offset: 24198
.Ltmp6642:
    00005e8b: 	movq	-0x8(%rdx), %rax
    00005e8f: 	addq	$0x200, %rax
    00005e95: 	jmp	.Ltmp7040 # Offset: 24213
.Ltmp6635:
    00005e9a: 	movq	-0x8(%rdx), %rax
    00005e9e: 	addq	$0x200, %rax
    00005ea4: 	jmp	.Ltmp7041 # Offset: 24228
.Ltmp6628:
    00005ea9: 	movq	-0x8(%rdx), %rax
    00005ead: 	addq	$0x200, %rax
    00005eb3: 	jmp	.Ltmp7042 # Offset: 24243
.Ltmp6622:
    00005eb8: 	movq	-0x8(%rdx), %rax
    00005ebc: 	addq	$0x200, %rax
    00005ec2: 	jmp	.Ltmp7043 # Offset: 24258
.Ltmp6615:
    00005ec7: 	movq	-0x8(%rdx), %rax
    00005ecb: 	addq	$0x200, %rax
    00005ed1: 	jmp	.Ltmp7044 # Offset: 24273
.Ltmp6608:
    00005ed6: 	movq	-0x8(%rdx), %rax
    00005eda: 	addq	$0x200, %rax
    00005ee0: 	jmp	.Ltmp7045 # Offset: 24288
.Ltmp6601:
    00005ee5: 	movq	-0x8(%rdx), %rax
    00005ee9: 	addq	$0x200, %rax
    00005eef: 	jmp	.Ltmp7046 # Offset: 24303
.Ltmp6595:
    00005ef4: 	movq	-0x8(%rdx), %rax
    00005ef8: 	addq	$0x200, %rax
    00005efe: 	jmp	.Ltmp7047 # Offset: 24318
.Ltmp6797:
    00005f03: 	movl	$0xffffe0c0, %eax
    00005f08: 	jmp	.Ltmp7048 # Offset: 24328
.Ltmp6787:
    00005f0d: 	movl	$0xffffe0c0, %eax
    00005f12: 	jmp	.Ltmp7049 # Offset: 24338
.Ltmp6987:
    00005f17: 	callq	__stack_chk_fail@PLT # Offset: 24343
    00005f1c: 	endbr64
.Ltmp7051:
    00005f20: 	movq	%rax, %rbx
    00005f23: 	jmp	.Ltmp7050 # Offset: 24355
    00005f28: 	endbr64
    00005f2c: 	jmp	.Ltmp7051 # Offset: 24364
    00005f2e: 	endbr64
    00005f32: 	jmp	.Ltmp7051 # Offset: 24370
    00005f34: 	endbr64
    00005f38: 	jmp	.Ltmp7051 # Offset: 24376
    00005f3a: 	endbr64
    00005f3e: 	jmp	.Ltmp7051 # Offset: 24382
    00005f40: 	endbr64
    00005f44: 	jmp	.Ltmp7051 # Offset: 24388
    00005f46: 	endbr64
    00005f4a: 	movq	%rax, %rbx
    00005f4d: 	jmp	.Ltmp7052 # Offset: 24397
    00005f4f: 	endbr64
    00005f53: 	movq	%rax, %rbx
    00005f56: 	jmp	.Ltmp7053 # Offset: 24406
.Ltmp7052:
    00005f5b: 	movq	0xa0(%rsp), %rdi
    00005f63: 	cmpq	%r13, %rdi
    00005f66: 	je	.Ltmp7054 # Offset: 24422
    00005f68: 	movq	0xb0(%rsp), %rax
    00005f70: 	leaq	0x1(%rax), %rsi
    00005f74: 	callq	_ZdlPvm@PLT # Offset: 24436
.Ltmp7054:
    00005f79: 	movq	0x80(%rsp), %rdi
    00005f81: 	leaq	0x90(%rsp), %rax
    00005f89: 	cmpq	%rax, %rdi
    00005f8c: 	je	.Ltmp7055 # Offset: 24460
    00005f8e: 	movq	0x90(%rsp), %rax
    00005f96: 	leaq	0x1(%rax), %rsi
    00005f9a: 	callq	_ZdlPvm@PLT # Offset: 24474
.Ltmp7055:
    00005f9f: 	movq	0x60(%rsp), %rdi
    00005fa4: 	leaq	0x70(%rsp), %rax
    00005fa9: 	cmpq	%rax, %rdi
    00005fac: 	je	.Ltmp7056 # Offset: 24492
    00005fae: 	movq	0x70(%rsp), %rax
    00005fb3: 	leaq	0x1(%rax), %rsi
    00005fb7: 	callq	_ZdlPvm@PLT # Offset: 24503
.Ltmp7056:
    00005fbc: 	movq	%rbx, %rbp
.Ltmp7064:
    00005fbf: 	movq	0x40(%rsp), %rdi
    00005fc4: 	leaq	0x50(%rsp), %rax
    00005fc9: 	cmpq	%rax, %rdi
    00005fcc: 	je	.Ltmp7057 # Offset: 24524
    00005fce: 	movq	0x50(%rsp), %rax
    00005fd3: 	leaq	0x1(%rax), %rsi
    00005fd7: 	callq	_ZdlPvm@PLT # Offset: 24535
.Ltmp7057:
    00005fdc: 	movq	%rbp, %rdi
    00005fdf: 	callq	_Unwind_Resume@PLT # Offset: 24543
.Ltmp7053:
    00005fe4: 	movq	0xa0(%rsp), %rdi
    00005fec: 	cmpq	%r13, %rdi
    00005fef: 	je	.Ltmp7054 # Offset: 24559
    00005ff1: 	movq	0xb0(%rsp), %rax
    00005ff9: 	leaq	0x1(%rax), %rsi
    00005ffd: 	callq	_ZdlPvm@PLT # Offset: 24573
    00006002: 	jmp	.Ltmp7054 # Offset: 24578
    00006007: 	endbr64
    0000600b: 	movq	%rax, %rbx
    0000600e: 	jmp	.Ltmp7058 # Offset: 24590
    00006010: 	endbr64
    00006014: 	movq	%rax, %rbx
    00006017: 	jmp	.Ltmp7059 # Offset: 24599
.Ltmp7058:
    00006019: 	movq	0xa0(%rsp), %rdi
    00006021: 	cmpq	%r13, %rdi
    00006024: 	je	.Ltmp7054 # Offset: 24612
    0000602a: 	movq	0xb0(%rsp), %rax
    00006032: 	leaq	0x1(%rax), %rsi
    00006036: 	callq	_ZdlPvm@PLT # Offset: 24630
    0000603b: 	jmp	.Ltmp7054 # Offset: 24635
.Ltmp7059:
    00006040: 	movq	0xa0(%rsp), %rdi
    00006048: 	cmpq	%r13, %rdi
    0000604b: 	je	.Ltmp7054 # Offset: 24651
    00006051: 	movq	0xb0(%rsp), %rax
    00006059: 	leaq	0x1(%rax), %rsi
    0000605d: 	callq	_ZdlPvm@PLT # Offset: 24669
    00006062: 	jmp	.Ltmp7054 # Offset: 24674
    00006067: 	endbr64
    0000606b: 	movq	%rax, %rbx
    0000606e: 	jmp	.Ltmp7060 # Offset: 24686
    00006070: 	endbr64
    00006074: 	movq	%rax, %rbx
    00006077: 	jmp	.Ltmp7061 # Offset: 24695
.Ltmp7060:
    00006079: 	movq	0xa0(%rsp), %rdi
    00006081: 	cmpq	%r13, %rdi
    00006084: 	je	.Ltmp7054 # Offset: 24708
    0000608a: 	movq	0xb0(%rsp), %rax
    00006092: 	leaq	0x1(%rax), %rsi
    00006096: 	callq	_ZdlPvm@PLT # Offset: 24726
    0000609b: 	jmp	.Ltmp7054 # Offset: 24731
.Ltmp7061:
    000060a0: 	movq	0xa0(%rsp), %rdi
    000060a8: 	cmpq	%r13, %rdi
    000060ab: 	je	.Ltmp7054 # Offset: 24747
    000060b1: 	movq	0xb0(%rsp), %rax
    000060b9: 	leaq	0x1(%rax), %rsi
    000060bd: 	callq	_ZdlPvm@PLT # Offset: 24765
    000060c2: 	jmp	.Ltmp7054 # Offset: 24770
    000060c7: 	endbr64
    000060cb: 	movq	%rax, %rbx
    000060ce: 	jmp	.Ltmp7062 # Offset: 24782
    000060d0: 	endbr64
.Ltmp7065:
    000060d4: 	movq	%rax, %rbp
    000060d7: 	jmp	.Ltmp7063 # Offset: 24791
.Ltmp7062:
    000060d9: 	movq	0xa0(%rsp), %rdi
    000060e1: 	cmpq	%r13, %rdi
    000060e4: 	je	.Ltmp7054 # Offset: 24804
    000060ea: 	movq	0xb0(%rsp), %rax
    000060f2: 	leaq	0x1(%rax), %rsi
    000060f6: 	callq	_ZdlPvm@PLT # Offset: 24822
    000060fb: 	jmp	.Ltmp7054 # Offset: 24827
.Ltmp7063:
    00006100: 	movq	0xa0(%rsp), %rdi
    00006108: 	cmpq	%r13, %rdi
    0000610b: 	je	.Ltmp7064 # Offset: 24843
    00006111: 	movq	0xb0(%rsp), %rax
    00006119: 	leaq	0x1(%rax), %rsi
    0000611d: 	callq	_ZdlPvm@PLT # Offset: 24861
    00006122: 	jmp	.Ltmp7064 # Offset: 24866
    00006127: 	endbr64
    0000612b: 	jmp	.Ltmp7065 # Offset: 24875
    0000612d: 	endbr64
    00006131: 	jmp	.Ltmp7065 # Offset: 24881
    00006133: 	endbr64
    00006137: 	jmp	.Ltmp7065 # Offset: 24887
    00006139: 	endbr64
    0000613d: 	jmp	.Ltmp7065 # Offset: 24893
    0000613f: 	endbr64
    00006143: 	movq	%rax, %rbx
    00006146: 	jmp	.Ltmp7066 # Offset: 24902
    00006148: 	endbr64
    0000614c: 	movq	%rax, %rbx
    0000614f: 	jmp	.Ltmp7067 # Offset: 24911
.Ltmp7066:
    00006151: 	movq	0xa0(%rsp), %rdi
    00006159: 	cmpq	%r13, %rdi
    0000615c: 	je	.Ltmp7054 # Offset: 24924
    00006162: 	movq	0xb0(%rsp), %rax
    0000616a: 	leaq	0x1(%rax), %rsi
    0000616e: 	callq	_ZdlPvm@PLT # Offset: 24942
    00006173: 	jmp	.Ltmp7054 # Offset: 24947
.Ltmp7067:
    00006178: 	movq	0xa0(%rsp), %rdi
    00006180: 	cmpq	%r13, %rdi
    00006183: 	je	.Ltmp7054 # Offset: 24963
    00006189: 	movq	0xb0(%rsp), %rax
    00006191: 	leaq	0x1(%rax), %rsi
    00006195: 	callq	_ZdlPvm@PLT # Offset: 24981
    0000619a: 	jmp	.Ltmp7054 # Offset: 24986
    0000619f: 	endbr64
    000061a3: 	movq	%rax, %rbx
    000061a6: 	jmp	.Ltmp7068 # Offset: 24998
    000061a8: 	endbr64
    000061ac: 	movq	%rax, %rbx
    000061af: 	jmp	.Ltmp7069 # Offset: 25007
.Ltmp7068:
    000061b1: 	movq	0xa0(%rsp), %rdi
    000061b9: 	cmpq	%r13, %rdi
    000061bc: 	je	.Ltmp7054 # Offset: 25020
    000061c2: 	movq	0xb0(%rsp), %rax
    000061ca: 	leaq	0x1(%rax), %rsi
    000061ce: 	callq	_ZdlPvm@PLT # Offset: 25038
    000061d3: 	jmp	.Ltmp7054 # Offset: 25043
.Ltmp7069:
    000061d8: 	movq	0xa0(%rsp), %rdi
    000061e0: 	cmpq	%r13, %rdi
    000061e3: 	je	.Ltmp7054 # Offset: 25059
    000061e9: 	movq	0xb0(%rsp), %rax
    000061f1: 	leaq	0x1(%rax), %rsi
    000061f5: 	callq	_ZdlPvm@PLT # Offset: 25077
    000061fa: 	jmp	.Ltmp7054 # Offset: 25082
    000061ff: 	endbr64
    00006203: 	movq	%rax, %rbx
    00006206: 	jmp	.Ltmp7070 # Offset: 25094
    00006208: 	endbr64
    0000620c: 	movq	%rax, %rbx
    0000620f: 	jmp	.Ltmp7071 # Offset: 25103
.Ltmp7070:
    00006211: 	movq	0xa0(%rsp), %rdi
    00006219: 	cmpq	%r13, %rdi
    0000621c: 	je	.Ltmp7054 # Offset: 25116
    00006222: 	movq	0xb0(%rsp), %rax
    0000622a: 	leaq	0x1(%rax), %rsi
    0000622e: 	callq	_ZdlPvm@PLT # Offset: 25134
    00006233: 	jmp	.Ltmp7054 # Offset: 25139
.Ltmp7071:
    00006238: 	movq	0xa0(%rsp), %rdi
    00006240: 	cmpq	%r13, %rdi
    00006243: 	je	.Ltmp7054 # Offset: 25155
    00006249: 	movq	0xb0(%rsp), %rax
    00006251: 	leaq	0x1(%rax), %rsi
    00006255: 	callq	_ZdlPvm@PLT # Offset: 25173
    0000625a: 	jmp	.Ltmp7054 # Offset: 25178
    0000625f: 	endbr64
    00006263: 	jmp	.Ltmp7065 # Offset: 25187
    00006268: 	endbr64
    0000626c: 	movq	%rax, %rbx
    0000626f: 	jmp	.Ltmp7072 # Offset: 25199
    00006271: 	endbr64
    00006275: 	movq	%rax, %rbx
    00006278: 	jmp	.Ltmp7073 # Offset: 25208
    0000627a: 	endbr64
    0000627e: 	movq	%rax, %rbx
    00006281: 	jmp	.Ltmp7074 # Offset: 25217
.Ltmp7072:
    00006283: 	movq	0xa0(%rsp), %rdi
    0000628b: 	cmpq	%r13, %rdi
    0000628e: 	je	.Ltmp7054 # Offset: 25230
    00006294: 	movq	0xb0(%rsp), %rax
    0000629c: 	leaq	0x1(%rax), %rsi
    000062a0: 	callq	_ZdlPvm@PLT # Offset: 25248
    000062a5: 	jmp	.Ltmp7054 # Offset: 25253
.Ltmp7073:
    000062aa: 	movq	0xa0(%rsp), %rdi
    000062b2: 	cmpq	%r13, %rdi
    000062b5: 	je	.Ltmp7054 # Offset: 25269
    000062bb: 	movq	0xb0(%rsp), %rax
    000062c3: 	leaq	0x1(%rax), %rsi
    000062c7: 	callq	_ZdlPvm@PLT # Offset: 25287
    000062cc: 	jmp	.Ltmp7054 # Offset: 25292
.Ltmp7074:
    000062d1: 	movq	0xa0(%rsp), %rdi
    000062d9: 	cmpq	%r13, %rdi
    000062dc: 	je	.Ltmp7054 # Offset: 25308
    000062e2: 	movq	0xb0(%rsp), %rax
    000062ea: 	leaq	0x1(%rax), %rsi
    000062ee: 	callq	_ZdlPvm@PLT # Offset: 25326
    000062f3: 	jmp	.Ltmp7054 # Offset: 25331
    000062f8: 	endbr64
    000062fc: 	movq	%rax, %rbx
    000062ff: 	jmp	.Ltmp7075 # Offset: 25343
    00006301: 	endbr64
    00006305: 	movq	%rax, %rbx
    00006308: 	jmp	.Ltmp7076 # Offset: 25352
.Ltmp7075:
    0000630a: 	movq	0xa0(%rsp), %rdi
    00006312: 	cmpq	%r13, %rdi
    00006315: 	je	.Ltmp7054 # Offset: 25365
    0000631b: 	movq	0xb0(%rsp), %rax
    00006323: 	leaq	0x1(%rax), %rsi
    00006327: 	callq	_ZdlPvm@PLT # Offset: 25383
    0000632c: 	jmp	.Ltmp7054 # Offset: 25388
.Ltmp7076:
    00006331: 	movq	0xa0(%rsp), %rdi
    00006339: 	cmpq	%r13, %rdi
    0000633c: 	je	.Ltmp7054 # Offset: 25404
    00006342: 	movq	0xb0(%rsp), %rax
    0000634a: 	leaq	0x1(%rax), %rsi
    0000634e: 	callq	_ZdlPvm@PLT # Offset: 25422
    00006353: 	jmp	.Ltmp7054 # Offset: 25427
    00006358: 	endbr64
    0000635c: 	jmp	.Ltmp7051 # Offset: 25436
.Ltmp7050:
    00006361: 	movq	0xa0(%rsp), %rdi
    00006369: 	cmpq	%r13, %rdi
    0000636c: 	je	.Ltmp7055 # Offset: 25452
    00006372: 	movq	0xb0(%rsp), %rax
    0000637a: 	leaq	0x1(%rax), %rsi
    0000637e: 	callq	_ZdlPvm@PLT # Offset: 25470
    00006383: 	jmp	.Ltmp7055 # Offset: 25475
    00006388: 	endbr64
    0000638c: 	movq	%rax, %rbx
    0000638f: 	jmp	.Ltmp7077 # Offset: 25487
    00006394: 	endbr64
    00006398: 	movq	%rax, %rbx
    0000639b: 	jmp	.Ltmp7078 # Offset: 25499
    0000639d: 	endbr64
    000063a1: 	movq	%rax, %rbx
    000063a4: 	jmp	.Ltmp7079 # Offset: 25508
    000063a9: 	endbr64
    000063ad: 	movq	%rax, %rbx
    000063b0: 	movq	0xa0(%rsp), %rdi
    000063b8: 	cmpq	%r13, %rdi
    000063bb: 	je	.Ltmp7054 # Offset: 25531
    000063c1: 	movq	0xb0(%rsp), %rax
    000063c9: 	leaq	0x1(%rax), %rsi
    000063cd: 	callq	_ZdlPvm@PLT # Offset: 25549
    000063d2: 	jmp	.Ltmp7054 # Offset: 25554
    000063d7: 	endbr64
    000063db: 	movq	%rax, %rbx
    000063de: 	jmp	.Ltmp7080 # Offset: 25566
    000063e0: 	endbr64
    000063e4: 	movq	%rax, %rbx
    000063e7: 	jmp	.Ltmp7081 # Offset: 25575
.Ltmp7078:
    000063ec: 	movq	0xa0(%rsp), %rdi
    000063f4: 	cmpq	%r13, %rdi
    000063f7: 	je	.Ltmp7054 # Offset: 25591
    000063fd: 	movq	0xb0(%rsp), %rax
    00006405: 	leaq	0x1(%rax), %rsi
    00006409: 	callq	_ZdlPvm@PLT # Offset: 25609
    0000640e: 	jmp	.Ltmp7054 # Offset: 25614
.Ltmp7080:
    00006413: 	movq	0xa0(%rsp), %rdi
    0000641b: 	cmpq	%r13, %rdi
    0000641e: 	je	.Ltmp7054 # Offset: 25630
    00006424: 	movq	0xb0(%rsp), %rax
    0000642c: 	leaq	0x1(%rax), %rsi
    00006430: 	callq	_ZdlPvm@PLT # Offset: 25648
    00006435: 	jmp	.Ltmp7054 # Offset: 25653
.Ltmp7077:
    0000643a: 	movq	0xa0(%rsp), %rdi
    00006442: 	cmpq	%r13, %rdi
    00006445: 	je	.Ltmp7054 # Offset: 25669
    0000644b: 	movq	0xb0(%rsp), %rax
    00006453: 	leaq	0x1(%rax), %rsi
    00006457: 	callq	_ZdlPvm@PLT # Offset: 25687
    0000645c: 	jmp	.Ltmp7054 # Offset: 25692
.Ltmp7079:
    00006461: 	movq	0xa0(%rsp), %rdi
    00006469: 	cmpq	%r13, %rdi
    0000646c: 	je	.Ltmp7054 # Offset: 25708
    00006472: 	movq	0xb0(%rsp), %rax
    0000647a: 	leaq	0x1(%rax), %rsi
    0000647e: 	callq	_ZdlPvm@PLT # Offset: 25726
    00006483: 	jmp	.Ltmp7054 # Offset: 25731
.Ltmp7081:
    00006488: 	movq	0xa0(%rsp), %rdi
    00006490: 	cmpq	%r13, %rdi
    00006493: 	je	.Ltmp7054 # Offset: 25747
    00006499: 	movq	0xb0(%rsp), %rax
    000064a1: 	leaq	0x1(%rax), %rsi
    000064a5: 	callq	_ZdlPvm@PLT # Offset: 25765
    000064aa: 	jmp	.Ltmp7054 # Offset: 25770
    000064af: 	endbr64
    000064b3: 	jmp	.Ltmp7065 # Offset: 25779
    000064b8: 	endbr64
    000064bc: 	jmp	.Ltmp7065 # Offset: 25788
    000064c1: 	endbr64
    000064c5: 	jmp	.Ltmp7065 # Offset: 25797
    000064ca: 	endbr64
    000064ce: 	jmp	.Ltmp7065 # Offset: 25806
    000064d3: 	endbr64
    000064d7: 	jmp	.Ltmp7065 # Offset: 25815
    000064dc: 	endbr64
    000064e0: 	jmp	.Ltmp7065 # Offset: 25824
    000064e5: 	endbr64
    000064e9: 	movq	%rax, %rbx
    000064ec: 	jmp	.Ltmp7055 # Offset: 25836
    000064f1: 	endbr64
    000064f5: 	jmp	.Ltmp7065 # Offset: 25845
    000064fa: 	endbr64
    000064fe: 	jmp	.Ltmp7065 # Offset: 25854
    00006503: 	endbr64
    00006507: 	jmp	.Ltmp7065 # Offset: 25863
    0000650c: 	endbr64
    00006510: 	jmp	.Ltmp7051 # Offset: 25872
    00006515: 	endbr64
    00006519: 	jmp	.Ltmp7065 # Offset: 25881
    0000651e: 	endbr64
    00006522: 	jmp	.Ltmp7065 # Offset: 25890
    00006527: 	endbr64
    0000652b: 	jmp	.Ltmp7065 # Offset: 25899
    00006530: 	endbr64
    00006534: 	jmp	.Ltmp7065 # Offset: 25908
    00006539: 	endbr64
    0000653d: 	jmp	.Ltmp7065 # Offset: 25917
    00006542: 	endbr64
    00006546: 	jmp	.Ltmp7065 # Offset: 25926
    0000654b: 	endbr64
    0000654f: 	jmp	.Ltmp7065 # Offset: 25935
    00006554: 	endbr64
    00006558: 	jmp	.Ltmp7065 # Offset: 25944
    0000655d: 	endbr64
    00006561: 	movq	%rax, %rbx
    00006564: 	jmp	.Ltmp7082 # Offset: 25956
    00006566: 	endbr64
    0000656a: 	movq	%rax, %rbx
    0000656d: 	jmp	.Ltmp7083 # Offset: 25965
    0000656f: 	endbr64
    00006573: 	jmp	.Ltmp7065 # Offset: 25971
    00006578: 	endbr64
    0000657c: 	movq	%rax, %rbx
    0000657f: 	jmp	.Ltmp7084 # Offset: 25983
.Ltmp7082:
    00006581: 	movq	0xa0(%rsp), %rdi
    00006589: 	cmpq	%r13, %rdi
    0000658c: 	je	.Ltmp7054 # Offset: 25996
    00006592: 	movq	0xb0(%rsp), %rax
    0000659a: 	leaq	0x1(%rax), %rsi
    0000659e: 	callq	_ZdlPvm@PLT # Offset: 26014
    000065a3: 	jmp	.Ltmp7054 # Offset: 26019
.Ltmp7084:
    000065a8: 	movq	0xa0(%rsp), %rdi
    000065b0: 	cmpq	%r13, %rdi
    000065b3: 	je	.Ltmp7054 # Offset: 26035
    000065b9: 	movq	0xb0(%rsp), %rax
    000065c1: 	leaq	0x1(%rax), %rsi
    000065c5: 	callq	_ZdlPvm@PLT # Offset: 26053
    000065ca: 	jmp	.Ltmp7054 # Offset: 26058
    000065cf: 	endbr64
    000065d3: 	movq	%rax, %rbp
    000065d6: 	jmp	.Ltmp7064 # Offset: 26070
.Ltmp7083:
    000065db: 	movq	0xa0(%rsp), %rdi
    000065e3: 	cmpq	%r13, %rdi
    000065e6: 	je	.Ltmp7054 # Offset: 26086
    000065ec: 	movq	0xb0(%rsp), %rax
    000065f4: 	leaq	0x1(%rax), %rsi
    000065f8: 	callq	_ZdlPvm@PLT # Offset: 26104
    000065fd: 	jmp	.Ltmp7054 # Offset: 26109
    00006602: 	endbr64
    00006606: 	movq	%rax, %rbx
    00006609: 	jmp	.Ltmp7085 # Offset: 26121
    0000660b: 	endbr64
    0000660f: 	movq	%rax, %rbx
    00006612: 	jmp	.Ltmp7086 # Offset: 26130
    00006617: 	endbr64
    0000661b: 	movq	%rax, %rbx
    0000661e: 	jmp	.Ltmp7087 # Offset: 26142
    00006623: 	endbr64
    00006627: 	movq	%rax, %rbx
    0000662a: 	jmp	.Ltmp7088 # Offset: 26154
    0000662f: 	endbr64
    00006633: 	movq	%rax, %rbx
    00006636: 	jmp	.Ltmp7089 # Offset: 26166
    00006638: 	endbr64
    0000663c: 	movq	%rax, %rbx
    0000663f: 	jmp	.Ltmp7090 # Offset: 26175
    00006644: 	endbr64
    00006648: 	movq	%rax, %rbx
    0000664b: 	jmp	.Ltmp7091 # Offset: 26187
    00006650: 	endbr64
    00006654: 	movq	%rax, %rbx
    00006657: 	jmp	.Ltmp7092 # Offset: 26199
.Ltmp7085:
    0000665c: 	movq	0xa0(%rsp), %rdi
    00006664: 	cmpq	%r13, %rdi
    00006667: 	je	.Ltmp7054 # Offset: 26215
    0000666d: 	movq	0xb0(%rsp), %rax
    00006675: 	leaq	0x1(%rax), %rsi
    00006679: 	callq	_ZdlPvm@PLT # Offset: 26233
    0000667e: 	jmp	.Ltmp7054 # Offset: 26238
.Ltmp7089:
    00006683: 	movq	0xa0(%rsp), %rdi
    0000668b: 	cmpq	%r13, %rdi
    0000668e: 	je	.Ltmp7054 # Offset: 26254
    00006694: 	movq	0xb0(%rsp), %rax
    0000669c: 	leaq	0x1(%rax), %rsi
    000066a0: 	callq	_ZdlPvm@PLT # Offset: 26272
    000066a5: 	jmp	.Ltmp7054 # Offset: 26277
.Ltmp7087:
    000066aa: 	movq	0xa0(%rsp), %rdi
    000066b2: 	cmpq	%r13, %rdi
    000066b5: 	je	.Ltmp7054 # Offset: 26293
    000066bb: 	movq	0xb0(%rsp), %rax
    000066c3: 	leaq	0x1(%rax), %rsi
    000066c7: 	callq	_ZdlPvm@PLT # Offset: 26311
    000066cc: 	jmp	.Ltmp7054 # Offset: 26316
.Ltmp7091:
    000066d1: 	movq	0xa0(%rsp), %rdi
    000066d9: 	cmpq	%r13, %rdi
    000066dc: 	je	.Ltmp7054 # Offset: 26332
    000066e2: 	movq	0xb0(%rsp), %rax
    000066ea: 	leaq	0x1(%rax), %rsi
    000066ee: 	callq	_ZdlPvm@PLT # Offset: 26350
    000066f3: 	jmp	.Ltmp7054 # Offset: 26355
.Ltmp7086:
    000066f8: 	movq	0xa0(%rsp), %rdi
    00006700: 	cmpq	%r13, %rdi
    00006703: 	je	.Ltmp7054 # Offset: 26371
    00006709: 	movq	0xb0(%rsp), %rax
    00006711: 	leaq	0x1(%rax), %rsi
    00006715: 	callq	_ZdlPvm@PLT # Offset: 26389
    0000671a: 	jmp	.Ltmp7054 # Offset: 26394
.Ltmp7090:
    0000671f: 	movq	0xa0(%rsp), %rdi
    00006727: 	cmpq	%r13, %rdi
    0000672a: 	je	.Ltmp7054 # Offset: 26410
    00006730: 	movq	0xb0(%rsp), %rax
    00006738: 	leaq	0x1(%rax), %rsi
    0000673c: 	callq	_ZdlPvm@PLT # Offset: 26428
    00006741: 	jmp	.Ltmp7054 # Offset: 26433
.Ltmp7088:
    00006746: 	movq	0xa0(%rsp), %rdi
    0000674e: 	cmpq	%r13, %rdi
    00006751: 	je	.Ltmp7054 # Offset: 26449
    00006757: 	movq	0xb0(%rsp), %rax
    0000675f: 	leaq	0x1(%rax), %rsi
    00006763: 	callq	_ZdlPvm@PLT # Offset: 26467
    00006768: 	jmp	.Ltmp7054 # Offset: 26472
.Ltmp7092:
    0000676d: 	movq	0xa0(%rsp), %rdi
    00006775: 	cmpq	%r13, %rdi
    00006778: 	je	.Ltmp7054 # Offset: 26488
    0000677e: 	movq	0xb0(%rsp), %rax
    00006786: 	leaq	0x1(%rax), %rsi
    0000678a: 	callq	_ZdlPvm@PLT # Offset: 26506
    0000678f: 	jmp	.Ltmp7054 # Offset: 26511
    00006794: 	endbr64
    00006798: 	movq	%rax, %rbx
    0000679b: 	jmp	.Ltmp7093 # Offset: 26523
    0000679d: 	endbr64
    000067a1: 	movq	%rax, %rbx
    000067a4: 	jmp	.Ltmp7094 # Offset: 26532
.Ltmp7093:
    000067a6: 	movq	0xa0(%rsp), %rdi
    000067ae: 	cmpq	%r13, %rdi
    000067b1: 	je	.Ltmp7054 # Offset: 26545
    000067b7: 	movq	0xb0(%rsp), %rax
    000067bf: 	leaq	0x1(%rax), %rsi
    000067c3: 	callq	_ZdlPvm@PLT # Offset: 26563
    000067c8: 	jmp	.Ltmp7054 # Offset: 26568
.Ltmp7094:
    000067cd: 	movq	0xa0(%rsp), %rdi
    000067d5: 	cmpq	%r13, %rdi
    000067d8: 	je	.Ltmp7054 # Offset: 26584
    000067de: 	movq	0xb0(%rsp), %rax
    000067e6: 	leaq	0x1(%rax), %rsi
    000067ea: 	callq	_ZdlPvm@PLT # Offset: 26602
    000067ef: 	jmp	.Ltmp7054 # Offset: 26607
    000067f4: 	endbr64
    000067f8: 	jmp	.Ltmp7065 # Offset: 26616
    000067fd: 	endbr64
    00006801: 	jmp	.Ltmp7065 # Offset: 26625
    00006806: 	endbr64
    0000680a: 	jmp	.Ltmp7065 # Offset: 26634
    0000680f: 	endbr64
    00006813: 	jmp	.Ltmp7065 # Offset: 26643
    00006818: 	endbr64
    0000681c: 	jmp	.Ltmp7051 # Offset: 26652
    00006821: 	endbr64
    00006825: 	jmp	.Ltmp7051 # Offset: 26661
    0000682a: 	endbr64
    0000682e: 	jmp	.Ltmp7065 # Offset: 26670
    00006833: 	endbr64
    00006837: 	jmp	.Ltmp7065 # Offset: 26679
    0000683c: 	endbr64
    00006840: 	jmp	.Ltmp7051 # Offset: 26688
    00006845: 	endbr64
    00006849: 	jmp	.Ltmp7051 # Offset: 26697
    0000684e: 	endbr64
    00006852: 	movq	%rax, %rbx
    00006855: 	jmp	.Ltmp7054 # Offset: 26709
    0000685a: 	endbr64
    0000685e: 	jmp	.Ltmp7051 # Offset: 26718
    00006863: 	endbr64
    00006867: 	movq	%rax, %rbx
    0000686a: 	jmp	.Ltmp7095 # Offset: 26730
    0000686c: 	endbr64
    00006870: 	movq	%rax, %rbx
    00006873: 	jmp	.Ltmp7096 # Offset: 26739
.Ltmp7095:
    00006875: 	movq	0xa0(%rsp), %rdi
    0000687d: 	cmpq	%r13, %rdi
    00006880: 	je	.Ltmp7054 # Offset: 26752
    00006886: 	movq	0xb0(%rsp), %rax
    0000688e: 	leaq	0x1(%rax), %rsi
    00006892: 	callq	_ZdlPvm@PLT # Offset: 26770
    00006897: 	jmp	.Ltmp7054 # Offset: 26775
.Ltmp7096:
    0000689c: 	movq	0xa0(%rsp), %rdi
    000068a4: 	cmpq	%r13, %rdi
    000068a7: 	je	.Ltmp7054 # Offset: 26791
    000068ad: 	movq	0xb0(%rsp), %rax
    000068b5: 	leaq	0x1(%rax), %rsi
    000068b9: 	callq	_ZdlPvm@PLT # Offset: 26809
    000068be: 	jmp	.Ltmp7054 # Offset: 26814
    000068c3: 	endbr64
    000068c7: 	movq	%rax, %rbx
    000068ca: 	jmp	.Ltmp7097 # Offset: 26826
    000068cc: 	endbr64
    000068d0: 	movq	%rax, %rbx
    000068d3: 	jmp	.Ltmp7098 # Offset: 26835
.Ltmp7097:
    000068d5: 	movq	0xa0(%rsp), %rdi
    000068dd: 	cmpq	%r13, %rdi
    000068e0: 	je	.Ltmp7054 # Offset: 26848
    000068e6: 	movq	0xb0(%rsp), %rax
    000068ee: 	leaq	0x1(%rax), %rsi
    000068f2: 	callq	_ZdlPvm@PLT # Offset: 26866
    000068f7: 	jmp	.Ltmp7054 # Offset: 26871
.Ltmp7098:
    000068fc: 	movq	0xa0(%rsp), %rdi
    00006904: 	cmpq	%r13, %rdi
    00006907: 	je	.Ltmp7054 # Offset: 26887
    0000690d: 	movq	0xb0(%rsp), %rax
    00006915: 	leaq	0x1(%rax), %rsi
    00006919: 	callq	_ZdlPvm@PLT # Offset: 26905
    0000691e: 	jmp	.Ltmp7054 # Offset: 26910
    00006923: 	endbr64
    00006927: 	movq	%rax, %rbx
    0000692a: 	jmp	.Ltmp7099 # Offset: 26922
    0000692c: 	endbr64
    00006930: 	movq	%rax, %rbx
    00006933: 	jmp	.Ltmp7100 # Offset: 26931
.Ltmp7099:
    00006935: 	movq	0xa0(%rsp), %rdi
    0000693d: 	cmpq	%r13, %rdi
    00006940: 	je	.Ltmp7054 # Offset: 26944
    00006946: 	movq	0xb0(%rsp), %rax
    0000694e: 	leaq	0x1(%rax), %rsi
    00006952: 	callq	_ZdlPvm@PLT # Offset: 26962
    00006957: 	jmp	.Ltmp7054 # Offset: 26967
.Ltmp7100:
    0000695c: 	movq	0xa0(%rsp), %rdi
    00006964: 	cmpq	%r13, %rdi
    00006967: 	je	.Ltmp7054 # Offset: 26983
    0000696d: 	movq	0xb0(%rsp), %rax
    00006975: 	leaq	0x1(%rax), %rsi
    00006979: 	callq	_ZdlPvm@PLT # Offset: 27001
    0000697e: 	jmp	.Ltmp7054 # Offset: 27006
    00006983: 	endbr64
    00006987: 	movq	%rax, %rbx
    0000698a: 	jmp	.Ltmp7101 # Offset: 27018
    0000698c: 	endbr64
    00006990: 	movq	%rax, %rbx
    00006993: 	jmp	.Ltmp7102 # Offset: 27027
.Ltmp7101:
    00006995: 	movq	0xa0(%rsp), %rdi
    0000699d: 	cmpq	%r13, %rdi
    000069a0: 	je	.Ltmp7054 # Offset: 27040
    000069a6: 	movq	0xb0(%rsp), %rax
    000069ae: 	leaq	0x1(%rax), %rsi
    000069b2: 	callq	_ZdlPvm@PLT # Offset: 27058
    000069b7: 	jmp	.Ltmp7054 # Offset: 27063
.Ltmp7102:
    000069bc: 	movq	0xa0(%rsp), %rdi
    000069c4: 	cmpq	%r13, %rdi
    000069c7: 	je	.Ltmp7054 # Offset: 27079
    000069cd: 	movq	0xb0(%rsp), %rax
    000069d5: 	leaq	0x1(%rax), %rsi
    000069d9: 	callq	_ZdlPvm@PLT # Offset: 27097
    000069de: 	jmp	.Ltmp7054 # Offset: 27102
    000069e3: 	endbr64
    000069e7: 	movq	%rax, %rbx
    000069ea: 	jmp	.Ltmp7103 # Offset: 27114
    000069ec: 	endbr64
    000069f0: 	movq	%rax, %rbx
    000069f3: 	jmp	.Ltmp7104 # Offset: 27123
.Ltmp7103:
    000069f5: 	movq	0xa0(%rsp), %rdi
    000069fd: 	cmpq	%r13, %rdi
    00006a00: 	je	.Ltmp7054 # Offset: 27136
    00006a06: 	movq	0xb0(%rsp), %rax
    00006a0e: 	leaq	0x1(%rax), %rsi
    00006a12: 	callq	_ZdlPvm@PLT # Offset: 27154
    00006a17: 	jmp	.Ltmp7054 # Offset: 27159
.Ltmp7104:
    00006a1c: 	movq	0xa0(%rsp), %rdi
    00006a24: 	cmpq	%r13, %rdi
    00006a27: 	je	.Ltmp7054 # Offset: 27175
    00006a2d: 	movq	0xb0(%rsp), %rax
    00006a35: 	leaq	0x1(%rax), %rsi
    00006a39: 	callq	_ZdlPvm@PLT # Offset: 27193
    00006a3e: 	jmp	.Ltmp7054 # Offset: 27198
    00006a43: 	endbr64
    00006a47: 	movq	%rax, %rbx
    00006a4a: 	jmp	.Ltmp7105 # Offset: 27210
    00006a4c: 	endbr64
    00006a50: 	movq	%rax, %rbx
    00006a53: 	jmp	.Ltmp7106 # Offset: 27219
.Ltmp7105:
    00006a55: 	movq	0xa0(%rsp), %rdi
    00006a5d: 	cmpq	%r13, %rdi
    00006a60: 	je	.Ltmp7054 # Offset: 27232
    00006a66: 	movq	0xb0(%rsp), %rax
    00006a6e: 	leaq	0x1(%rax), %rsi
    00006a72: 	callq	_ZdlPvm@PLT # Offset: 27250
    00006a77: 	jmp	.Ltmp7054 # Offset: 27255
.Ltmp7106:
    00006a7c: 	movq	0xa0(%rsp), %rdi
    00006a84: 	cmpq	%r13, %rdi
    00006a87: 	je	.Ltmp7054 # Offset: 27271
    00006a8d: 	movq	0xb0(%rsp), %rax
    00006a95: 	leaq	0x1(%rax), %rsi
    00006a99: 	callq	_ZdlPvm@PLT # Offset: 27289
    00006a9e: 	jmp	.Ltmp7054 # Offset: 27294
    00006aa3: 	endbr64
    00006aa7: 	movq	%rax, %rbx
    00006aaa: 	jmp	.Ltmp7107 # Offset: 27306
    00006aac: 	endbr64
    00006ab0: 	movq	%rax, %rbx
    00006ab3: 	jmp	.Ltmp7108 # Offset: 27315
.Ltmp7107:
    00006ab5: 	movq	0xa0(%rsp), %rdi
    00006abd: 	cmpq	%r13, %rdi
    00006ac0: 	je	.Ltmp7054 # Offset: 27328
    00006ac6: 	movq	0xb0(%rsp), %rax
    00006ace: 	leaq	0x1(%rax), %rsi
    00006ad2: 	callq	_ZdlPvm@PLT # Offset: 27346
    00006ad7: 	jmp	.Ltmp7054 # Offset: 27351
.Ltmp7108:
    00006adc: 	movq	0xa0(%rsp), %rdi
    00006ae4: 	cmpq	%r13, %rdi
    00006ae7: 	je	.Ltmp7054 # Offset: 27367
    00006aed: 	movq	0xb0(%rsp), %rax
    00006af5: 	leaq	0x1(%rax), %rsi
    00006af9: 	callq	_ZdlPvm@PLT # Offset: 27385
    00006afe: 	jmp	.Ltmp7054 # Offset: 27390
    00006b03: 	endbr64
    00006b07: 	movq	%rax, %rbx
    00006b0a: 	jmp	.Ltmp7109 # Offset: 27402
    00006b0c: 	endbr64
    00006b10: 	movq	%rax, %rbx
    00006b13: 	jmp	.Ltmp7110 # Offset: 27411
.Ltmp7109:
    00006b15: 	movq	0xa0(%rsp), %rdi
    00006b1d: 	cmpq	%r13, %rdi
    00006b20: 	je	.Ltmp7054 # Offset: 27424
    00006b26: 	movq	0xb0(%rsp), %rax
    00006b2e: 	leaq	0x1(%rax), %rsi
    00006b32: 	callq	_ZdlPvm@PLT # Offset: 27442
    00006b37: 	jmp	.Ltmp7054 # Offset: 27447
.Ltmp7110:
    00006b3c: 	movq	0xa0(%rsp), %rdi
    00006b44: 	cmpq	%r13, %rdi
    00006b47: 	je	.Ltmp7054 # Offset: 27463
    00006b4d: 	movq	0xb0(%rsp), %rax
    00006b55: 	leaq	0x1(%rax), %rsi
    00006b59: 	callq	_ZdlPvm@PLT # Offset: 27481
    00006b5e: 	jmp	.Ltmp7054 # Offset: 27486
    00006b63: 	endbr64
    00006b67: 	movq	%rax, %rbx
    00006b6a: 	jmp	.Ltmp7111 # Offset: 27498
    00006b6c: 	endbr64
    00006b70: 	movq	%rax, %rbx
    00006b73: 	jmp	.Ltmp7112 # Offset: 27507
.Ltmp7111:
    00006b75: 	movq	0xa0(%rsp), %rdi
    00006b7d: 	cmpq	%r13, %rdi
    00006b80: 	je	.Ltmp7054 # Offset: 27520
    00006b86: 	movq	0xb0(%rsp), %rax
    00006b8e: 	leaq	0x1(%rax), %rsi
    00006b92: 	callq	_ZdlPvm@PLT # Offset: 27538
    00006b97: 	jmp	.Ltmp7054 # Offset: 27543
.Ltmp7112:
    00006b9c: 	movq	0xa0(%rsp), %rdi
    00006ba4: 	cmpq	%r13, %rdi
    00006ba7: 	je	.Ltmp7054 # Offset: 27559
    00006bad: 	movq	0xb0(%rsp), %rax
    00006bb5: 	leaq	0x1(%rax), %rsi
    00006bb9: 	callq	_ZdlPvm@PLT # Offset: 27577
    00006bbe: 	jmp	.Ltmp7054 # Offset: 27582
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIiEvv"

Binary Function "_Z20TestOneTypeInductionImEvv" after disassembly {
  Number      : 206
  State       : disassembled
  Address     : 0x53bd0
  Size        : 0x2a69
  MaxSize     : 0x2a69
  Offset      : 0x53bd0
  Section     : .text
  Orc Section : .local.text._Z20TestOneTypeInductionImEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0205:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp7113:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp7113 # Offset: 37
    00000027: 	subq	$0xab8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm2
    00000036: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm3
    0000003e: 	movq	"_ZL7gLabels/1"+56(%rip), %r14
    00000045: 	movhlps	%xmm2, %xmm6
    00000048: 	movq	%xmm3, %rbp
    0000004d: 	movq	%xmm6, %rdi
    00000052: 	leaq	0x8(%rdi), %r12
    00000056: 	movq	%r12, %r13
    00000059: 	movq	%fs:0x28, %rax
    00000062: 	movq	%rax, 0xfaa8(%rsp)
    0000006a: 	xorl	%eax, %eax
    0000006c: 	leaq	0x70(%rsp), %rax
    00000071: 	movb	$0x0, 0x78(%rsp)
    00000076: 	movq	%rax, 0x40(%rsp)
    0000007b: 	movq	%rax, 0x60(%rsp)
    00000080: 	movabsq	$0x745f3436746e6975, %rax
    0000008a: 	movq	%rax, 0x70(%rsp)
    0000008f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000096: 	movq	$0x8, 0x68(%rsp)
    0000009f: 	movq	%rax, 0x10(%rsp)
    000000a4: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000000ab: 	movaps	%xmm3, 0x30(%rsp)
    000000b0: 	movq	%rax, 0x8(%rsp)
    000000b5: 	movaps	%xmm2, 0x20(%rsp)
    000000ba: 	movq	%xmm6, 0x48(%rsp)
    000000c0: 	movq	%xmm2, 0x18(%rsp)
    000000c6: 	cmpq	%r12, %rax
    000000c9: 	jbe	.Ltmp7114 # Offset: 201
    000000cb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp7117:
    000000d0: 	movq	(%r13), %r15
    000000d4: 	leaq	0x200(%r15), %rbx
    000000db: 	nopl	(%rax,%rax) # Size: 5
.Ltmp7116:
    000000e0: 	movq	(%r15), %rdi
    000000e3: 	leaq	0x10(%r15), %rdx
    000000e7: 	cmpq	%rdx, %rdi
    000000ea: 	je	.Ltmp7115 # Offset: 234
    000000f0: 	movq	0x10(%r15), %rax
    000000f4: 	addq	$0x20, %r15
    000000f8: 	leaq	0x1(%rax), %rsi
    000000fc: 	callq	_ZdlPvm@PLT # Offset: 252
    00000101: 	cmpq	%rbx, %r15
    00000104: 	jne	.Ltmp7116 # Offset: 260
    00000106: 	addq	$0x8, %r13
    0000010a: 	cmpq	%r13, 0x8(%rsp)
    0000010f: 	ja	.Ltmp7117 # Offset: 271
.Ltmp7114:
    00000111: 	movq	0x48(%rsp), %rdi
    00000116: 	cmpq	%rdi, 0x8(%rsp)
    0000011b: 	je	.Ltmp7118 # Offset: 283
.Ltmp7122:
    00000121: 	cmpq	0x18(%rsp), %rbp
    00000126: 	je	.Ltmp7119 # Offset: 294
    00000128: 	movq	(%rbp), %rdi
    0000012c: 	leaq	0x10(%rbp), %rax
    00000130: 	cmpq	%rax, %rdi
    00000133: 	je	.Ltmp7120 # Offset: 307
.Ltmp7121:
    00000135: 	movq	0x10(%rbp), %rax
    00000139: 	addq	$0x20, %rbp
    0000013d: 	leaq	0x1(%rax), %rsi
    00000141: 	callq	_ZdlPvm@PLT # Offset: 321
    00000146: 	cmpq	%rbp, 0x18(%rsp)
    0000014b: 	je	.Ltmp7119 # Offset: 331
    0000014d: 	movq	(%rbp), %rdi
    00000151: 	leaq	0x10(%rbp), %rax
    00000155: 	cmpq	%rax, %rdi
    00000158: 	jne	.Ltmp7121 # Offset: 344
.Ltmp7120:
    0000015a: 	addq	$0x20, %rbp
    0000015e: 	jmp	.Ltmp7122 # Offset: 350
.Ltmp7124:
    00000160: 	movq	(%r14), %rdi
    00000163: 	leaq	0x10(%r14), %rax
    00000167: 	cmpq	%rax, %rdi
    0000016a: 	je	.Ltmp7123 # Offset: 362
    0000016c: 	movq	0x10(%r14), %rax
    00000170: 	leaq	0x1(%rax), %rsi
    00000174: 	callq	_ZdlPvm@PLT # Offset: 372
.Ltmp7123:
    00000179: 	addq	$0x20, %r14
.Ltmp7119:
    0000017d: 	cmpq	%r14, 0x10(%rsp)
    00000182: 	jne	.Ltmp7124 # Offset: 386
.Ltmp7336:
    00000184: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    0000018b: 	leaq	0x8(%rax), %rbx
    0000018f: 	cmpq	%r12, %rbx
    00000192: 	jbe	.Ltmp7125 # Offset: 402
    00000194: 	nopl	(%rax) # Size: 4
.Ltmp7126:
    00000198: 	movq	(%r12), %rdi
    0000019c: 	movl	$0x200, %esi
    000001a1: 	addq	$0x8, %r12
    000001a5: 	callq	_ZdlPvm@PLT # Offset: 421
    000001aa: 	cmpq	%r12, %rbx
    000001ad: 	ja	.Ltmp7126 # Offset: 429
.Ltmp7125:
    000001af: 	movsd	init_value(%rip), %xmm0
    000001b7: 	comisd	DATAat0x57bd8(%rip), %xmm0
    000001bf: 	movdqa	0x30(%rsp), %xmm4
    000001c5: 	movdqa	0x20(%rsp), %xmm5
    000001cb: 	movaps	%xmm4, "_ZL7gLabels/1"+48(%rip)
    000001d2: 	movaps	%xmm5, "_ZL7gLabels/1"+64(%rip)
    000001d9: 	jae	.Ltmp7127 # Offset: 473
    000001df: 	cvttsd2si	%xmm0, %rax
.Ltmp7339:
    000001e4: 	movq	%rax, %xmm0
    000001e9: 	leaq	0xa0(%rsp), %r12
    000001f1: 	leaq	0xfaa0(%rsp), %rbx
    000001f9: 	punpcklqdq	%xmm0, %xmm0
    000001fd: 	movq	%r12, %rax
.Ltmp7128:
    00000200: 	movaps	%xmm0, (%rax)
    00000203: 	addq	$0x10, %rax
    00000207: 	cmpq	%rax, %rbx
    0000020a: 	jne	.Ltmp7128 # Offset: 522
    0000020c: 	movslq	iterations(%rip), %rax
    00000213: 	movq	0x60(%rsp), %r14
    00000218: 	leaq	0x90(%rsp), %rbp
    00000220: 	movq	0x68(%rsp), %r13
    00000225: 	movq	%rbp, 0x80(%rsp)
    0000022d: 	movq	%rax, %rdi
    00000230: 	movl	%eax, 0x8(%rsp)
    00000234: 	imulq	$0x66666667, %rax, %rax
    0000023b: 	sarl	$0x1f, %edi
    0000023e: 	sarq	$0x22, %rax
    00000242: 	subl	%edi, %eax
    00000244: 	movl	%eax, iterations(%rip)
    0000024a: 	movq	%r14, %rax
    0000024d: 	addq	%r13, %rax
    00000250: 	je	.Ltmp7129 # Offset: 592
    00000252: 	testq	%r14, %r14
    00000255: 	je	.Ltmp7130 # Offset: 597
.Ltmp7129:
    0000025b: 	movq	%r13, 0x58(%rsp)
    00000260: 	cmpq	$0xf, %r13
    00000264: 	ja	.Ltmp7131 # Offset: 612
    0000026a: 	cmpq	$0x1, %r13
    0000026e: 	jne	.Ltmp7132 # Offset: 622
    00000274: 	movzbl	(%r14), %eax
    00000278: 	movb	%al, 0x90(%rsp)
    0000027f: 	movq	%rbp, %rax
.Ltmp7341:
    00000282: 	movq	%r13, 0x88(%rsp)
    0000028a: 	movb	$0x0, (%rax,%r13)
    0000028f: 	movabsq	$0x3fffffffffffffff, %rax
    00000299: 	subq	0x88(%rsp), %rax
    000002a1: 	cmpq	$0x12, %rax
    000002a5: 	jbe	.Ltmp7133 # Offset: 677
    000002ab: 	leaq	0x80(%rsp), %r13
    000002b3: 	movl	$0x13, %edx
    000002b8: 	leaq	DATAat0x57a4a(%rip), %rsi
    000002bf: 	movq	%r13, %rdi
    000002c2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 706
    000002c7: 	callq	clock@PLT # Offset: 711
    000002cc: 	movl	iterations(%rip), %ecx
    000002d2: 	xorl	%r14d, %r14d
    000002d5: 	leaq	DATAat0x571d0(%rip), %r15
    000002dc: 	movq	%rax, start_time(%rip)
    000002e3: 	testl	%ecx, %ecx
    000002e5: 	je	.Ltmp7134 # Offset: 741
    000002eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp7138:
    000002f0: 	movq	%r12, %rax
    000002f3: 	pxor	%xmm0, %xmm0
    000002f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp7135:
    00000300: 	paddq	(%rax), %xmm0
    00000304: 	addq	$0x10, %rax
    00000308: 	cmpq	%rbx, %rax
    0000030b: 	jne	.Ltmp7135 # Offset: 779
    0000030d: 	movsd	init_value(%rip), %xmm1
    00000315: 	comisd	DATAat0x57bd8(%rip), %xmm1
    0000031d: 	jae	.Ltmp7136 # Offset: 797
    00000323: 	cvttsd2si	%xmm1, %rax
.Ltmp7342:
    00000328: 	movdqa	%xmm0, %xmm1
    0000032c: 	imulq	$0x1f40, %rax, %rdx
    00000333: 	psrldq	$0x8, %xmm1
    00000338: 	paddq	%xmm1, %xmm0
    0000033c: 	movq	%xmm0, %rax
    00000341: 	cmpq	%rax, %rdx
    00000344: 	je	.Ltmp7137 # Offset: 836
    00000346: 	movl	current_test(%rip), %edx
    0000034c: 	movq	%r15, %rsi
    0000034f: 	movl	$0x1, %edi
    00000354: 	xorl	%eax, %eax
    00000356: 	callq	__printf_chk@PLT # Offset: 854
    0000035b: 	movl	iterations(%rip), %ecx
.Ltmp7137:
    00000361: 	addq	$0x1, %r14
    00000365: 	movslq	%ecx, %rax
    00000368: 	cmpq	%rax, %r14
    0000036b: 	jb	.Ltmp7138 # Offset: 875
.Ltmp7134:
    0000036d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000374: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000037b: 	subq	$0x20, %rax
    0000037f: 	cmpq	%rax, %r14
    00000382: 	je	.Ltmp7139 # Offset: 898
    00000388: 	leaq	0x10(%r14), %rdi
    0000038c: 	movq	0x88(%rsp), %r15
    00000394: 	movq	%rdi, (%r14)
    00000397: 	movq	0x80(%rsp), %rax
    0000039f: 	movq	%rax, %rsi
    000003a2: 	movq	%rax, 0x10(%rsp)
    000003a7: 	addq	%r15, %rsi
    000003aa: 	je	.Ltmp7140 # Offset: 938
    000003ac: 	testq	%rax, %rax
    000003af: 	je	.Ltmp7141 # Offset: 943
.Ltmp7140:
    000003b5: 	movq	%r15, 0x58(%rsp)
    000003ba: 	cmpq	$0xf, %r15
    000003be: 	ja	.Ltmp7142 # Offset: 958
    000003c4: 	cmpq	$0x1, %r15
    000003c8: 	jne	.Ltmp7143 # Offset: 968
    000003ce: 	movq	0x10(%rsp), %rax
    000003d3: 	movzbl	(%rax), %eax
    000003d6: 	movb	%al, 0x10(%r14)
.Ltmp7412:
    000003da: 	movq	%r15, 0x8(%r14)
    000003de: 	movb	$0x0, (%rdi,%r15)
    000003e3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003ea: 	addq	$0x20, %rax
    000003ee: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp7389:
    000003f5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003fc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000403: 	je	.Ltmp7144 # Offset: 1027
.Ltmp7388:
    00000409: 	movq	-0x20(%rax), %r14
    0000040d: 	callq	clock@PLT # Offset: 1037
    00000412: 	pxor	%xmm0, %xmm0
    00000416: 	movq	%rax, end_time(%rip)
    0000041d: 	movq	%r14, %rdi
    00000420: 	subq	start_time(%rip), %rax
    00000427: 	cvtsi2sd	%rax, %xmm0
    0000042c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000434: 	callq	_Z13record_resultdPKc # Offset: 1076
    00000439: 	movq	0x80(%rsp), %rdi
    00000441: 	cmpq	%rbp, %rdi
    00000444: 	je	.Ltmp7145 # Offset: 1092
    00000446: 	movq	0x90(%rsp), %rax
    0000044e: 	leaq	0x1(%rax), %rsi
    00000452: 	callq	_ZdlPvm@PLT # Offset: 1106
.Ltmp7145:
    00000457: 	movq	0x60(%rsp), %r15
    0000045c: 	movq	0x68(%rsp), %r14
    00000461: 	movq	%rbp, 0x80(%rsp)
    00000469: 	movq	%r15, %rax
    0000046c: 	addq	%r14, %rax
    0000046f: 	je	.Ltmp7146 # Offset: 1135
    00000471: 	testq	%r15, %r15
    00000474: 	je	.Ltmp7147 # Offset: 1140
.Ltmp7146:
    0000047a: 	movq	%r14, 0x58(%rsp)
    0000047f: 	cmpq	$0xf, %r14
    00000483: 	ja	.Ltmp7148 # Offset: 1155
    00000489: 	cmpq	$0x1, %r14
    0000048d: 	jne	.Ltmp7149 # Offset: 1165
    00000493: 	movzbl	(%r15), %eax
    00000497: 	movb	%al, 0x90(%rsp)
    0000049e: 	movq	%rbp, %rax
.Ltmp7364:
    000004a1: 	movq	%r14, 0x88(%rsp)
    000004a9: 	movb	$0x0, (%rax,%r14)
    000004ae: 	movabsq	$0x3fffffffffffffff, %rax
    000004b8: 	subq	0x88(%rsp), %rax
    000004c0: 	cmpq	$0x1b, %rax
    000004c4: 	jbe	.Ltmp7150 # Offset: 1220
    000004ca: 	movl	$0x1c, %edx
    000004cf: 	leaq	DATAat0x57a5e(%rip), %rsi
    000004d6: 	movq	%r13, %rdi
    000004d9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1241
    000004de: 	callq	clock@PLT # Offset: 1246
    000004e3: 	movl	iterations(%rip), %ecx
    000004e9: 	xorl	%r14d, %r14d
    000004ec: 	leaq	DATAat0x571d0(%rip), %r15
    000004f3: 	movq	%rax, start_time(%rip)
    000004fa: 	testl	%ecx, %ecx
    000004fc: 	je	.Ltmp7151 # Offset: 1276
    000004fe: 	nop # Size: 2
.Ltmp7155:
    00000500: 	movq	%r12, %rax
    00000503: 	pxor	%xmm0, %xmm0
    00000507: 	nopw	(%rax,%rax) # Size: 9
.Ltmp7152:
    00000510: 	paddq	(%rax), %xmm0
    00000514: 	addq	$0x10, %rax
    00000518: 	cmpq	%rbx, %rax
    0000051b: 	jne	.Ltmp7152 # Offset: 1307
    0000051d: 	movsd	init_value(%rip), %xmm1
    00000525: 	comisd	DATAat0x57bd8(%rip), %xmm1
    0000052d: 	jae	.Ltmp7153 # Offset: 1325
    00000533: 	cvttsd2si	%xmm1, %rax
.Ltmp7343:
    00000538: 	movdqa	%xmm0, %xmm1
    0000053c: 	imulq	$0x1f40, %rax, %rdx
    00000543: 	psrldq	$0x8, %xmm1
    00000548: 	paddq	%xmm1, %xmm0
    0000054c: 	movq	%xmm0, %rax
    00000551: 	cmpq	%rax, %rdx
    00000554: 	je	.Ltmp7154 # Offset: 1364
    00000556: 	movl	current_test(%rip), %edx
    0000055c: 	movq	%r15, %rsi
    0000055f: 	movl	$0x1, %edi
    00000564: 	xorl	%eax, %eax
    00000566: 	callq	__printf_chk@PLT # Offset: 1382
    0000056b: 	movl	iterations(%rip), %ecx
.Ltmp7154:
    00000571: 	addq	$0x1, %r14
    00000575: 	movslq	%ecx, %rax
    00000578: 	cmpq	%rax, %r14
    0000057b: 	jb	.Ltmp7155 # Offset: 1403
.Ltmp7151:
    0000057d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000584: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000058b: 	subq	$0x20, %rax
    0000058f: 	cmpq	%rax, %r14
    00000592: 	je	.Ltmp7156 # Offset: 1426
    00000598: 	leaq	0x10(%r14), %rdi
    0000059c: 	movq	0x88(%rsp), %r15
    000005a4: 	movq	%rdi, (%r14)
    000005a7: 	movq	0x80(%rsp), %rax
    000005af: 	movq	%rax, %rsi
    000005b2: 	movq	%rax, 0x10(%rsp)
    000005b7: 	addq	%r15, %rsi
    000005ba: 	je	.Ltmp7157 # Offset: 1466
    000005bc: 	testq	%rax, %rax
    000005bf: 	je	.Ltmp7158 # Offset: 1471
.Ltmp7157:
    000005c5: 	movq	%r15, 0x58(%rsp)
    000005ca: 	cmpq	$0xf, %r15
    000005ce: 	ja	.Ltmp7159 # Offset: 1486
    000005d4: 	cmpq	$0x1, %r15
    000005d8: 	jne	.Ltmp7160 # Offset: 1496
    000005de: 	movq	0x10(%rsp), %rax
    000005e3: 	movzbl	(%rax), %eax
    000005e6: 	movb	%al, 0x10(%r14)
.Ltmp7414:
    000005ea: 	movq	%r15, 0x8(%r14)
    000005ee: 	movb	$0x0, (%rdi,%r15)
    000005f3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005fa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000601: 	addq	$0x20, %rax
    00000605: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000060c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000613: 	je	.Ltmp7161 # Offset: 1555
.Ltmp7383:
    00000619: 	movq	-0x20(%rax), %r14
    0000061d: 	callq	clock@PLT # Offset: 1565
    00000622: 	pxor	%xmm0, %xmm0
    00000626: 	movq	%rax, end_time(%rip)
    0000062d: 	movq	%r14, %rdi
    00000630: 	subq	start_time(%rip), %rax
    00000637: 	cvtsi2sd	%rax, %xmm0
    0000063c: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000644: 	callq	_Z13record_resultdPKc # Offset: 1604
    00000649: 	movq	0x80(%rsp), %rdi
    00000651: 	cmpq	%rbp, %rdi
    00000654: 	je	.Ltmp7162 # Offset: 1620
    00000656: 	movq	0x90(%rsp), %rax
    0000065e: 	leaq	0x1(%rax), %rsi
    00000662: 	callq	_ZdlPvm@PLT # Offset: 1634
.Ltmp7162:
    00000667: 	movq	0x60(%rsp), %r15
    0000066c: 	movq	0x68(%rsp), %r14
    00000671: 	movq	%rbp, 0x80(%rsp)
    00000679: 	movq	%r15, %rax
    0000067c: 	addq	%r14, %rax
    0000067f: 	je	.Ltmp7163 # Offset: 1663
    00000681: 	testq	%r15, %r15
    00000684: 	je	.Ltmp7164 # Offset: 1668
.Ltmp7163:
    0000068a: 	movq	%r14, 0x58(%rsp)
    0000068f: 	cmpq	$0xf, %r14
    00000693: 	ja	.Ltmp7165 # Offset: 1683
    00000699: 	cmpq	$0x1, %r14
    0000069d: 	jne	.Ltmp7166 # Offset: 1693
    000006a3: 	movzbl	(%r15), %eax
    000006a7: 	movb	%al, 0x90(%rsp)
    000006ae: 	movq	%rbp, %rax
.Ltmp7362:
    000006b1: 	movq	%r14, 0x88(%rsp)
    000006b9: 	movb	$0x0, (%rax,%r14)
    000006be: 	movabsq	$0x3fffffffffffffff, %rax
    000006c8: 	subq	0x88(%rsp), %rax
    000006d0: 	cmpq	$0x1b, %rax
    000006d4: 	jbe	.Ltmp7167 # Offset: 1748
    000006da: 	movl	$0x1c, %edx
    000006df: 	leaq	DATAat0x57a7b(%rip), %rsi
    000006e6: 	movq	%r13, %rdi
    000006e9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1769
    000006ee: 	callq	clock@PLT # Offset: 1774
    000006f3: 	movl	iterations(%rip), %ecx
    000006f9: 	xorl	%r14d, %r14d
    000006fc: 	leaq	DATAat0x571d0(%rip), %r15
    00000703: 	movq	%rax, start_time(%rip)
    0000070a: 	testl	%ecx, %ecx
    0000070c: 	je	.Ltmp7168 # Offset: 1804
    0000070e: 	nop # Size: 2
.Ltmp7172:
    00000710: 	movq	%r12, %rax
    00000713: 	pxor	%xmm0, %xmm0
    00000717: 	nopw	(%rax,%rax) # Size: 9
.Ltmp7169:
    00000720: 	paddq	(%rax), %xmm0
    00000724: 	addq	$0x10, %rax
    00000728: 	cmpq	%rax, %rbx
    0000072b: 	jne	.Ltmp7169 # Offset: 1835
    0000072d: 	movsd	init_value(%rip), %xmm1
    00000735: 	comisd	DATAat0x57bd8(%rip), %xmm1
    0000073d: 	jae	.Ltmp7170 # Offset: 1853
    00000743: 	cvttsd2si	%xmm1, %rax
.Ltmp7344:
    00000748: 	movdqa	%xmm0, %xmm1
    0000074c: 	imulq	$0x1f40, %rax, %rdx
    00000753: 	psrldq	$0x8, %xmm1
    00000758: 	paddq	%xmm1, %xmm0
    0000075c: 	movq	%xmm0, %rax
    00000761: 	cmpq	%rax, %rdx
    00000764: 	je	.Ltmp7171 # Offset: 1892
    00000766: 	movl	current_test(%rip), %edx
    0000076c: 	movq	%r15, %rsi
    0000076f: 	movl	$0x1, %edi
    00000774: 	xorl	%eax, %eax
    00000776: 	callq	__printf_chk@PLT # Offset: 1910
    0000077b: 	movl	iterations(%rip), %ecx
.Ltmp7171:
    00000781: 	addq	$0x1, %r14
    00000785: 	movslq	%ecx, %rax
    00000788: 	cmpq	%rax, %r14
    0000078b: 	jb	.Ltmp7172 # Offset: 1931
.Ltmp7168:
    0000078d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000794: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000079b: 	subq	$0x20, %rax
    0000079f: 	cmpq	%rax, %rbx
    000007a2: 	je	.Ltmp7173 # Offset: 1954
    000007a8: 	leaq	0x10(%rbx), %rdi
    000007ac: 	movq	0x88(%rsp), %r14
    000007b4: 	movq	%rdi, (%rbx)
    000007b7: 	movq	0x80(%rsp), %r15
    000007bf: 	movq	%r15, %rax
    000007c2: 	addq	%r14, %rax
    000007c5: 	je	.Ltmp7174 # Offset: 1989
    000007c7: 	testq	%r15, %r15
    000007ca: 	je	.Ltmp7175 # Offset: 1994
.Ltmp7174:
    000007d0: 	movq	%r14, 0x58(%rsp)
    000007d5: 	cmpq	$0xf, %r14
    000007d9: 	ja	.Ltmp7176 # Offset: 2009
    000007df: 	cmpq	$0x1, %r14
    000007e3: 	jne	.Ltmp7177 # Offset: 2019
    000007e9: 	movzbl	(%r15), %eax
    000007ed: 	movb	%al, 0x10(%rbx)
.Ltmp7405:
    000007f0: 	movq	%r14, 0x8(%rbx)
    000007f4: 	movb	$0x0, (%rdi,%r14)
    000007f9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000800: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000807: 	addq	$0x20, %rax
    0000080b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000812: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000819: 	je	.Ltmp7178 # Offset: 2073
.Ltmp7380:
    0000081f: 	movq	-0x20(%rax), %r14
    00000823: 	callq	clock@PLT # Offset: 2083
    00000828: 	pxor	%xmm0, %xmm0
    0000082c: 	movq	%rax, end_time(%rip)
    00000833: 	movq	%r14, %rdi
    00000836: 	subq	start_time(%rip), %rax
    0000083d: 	cvtsi2sd	%rax, %xmm0
    00000842: 	divsd	DATAat0x57bc8(%rip), %xmm0
    0000084a: 	callq	_Z13record_resultdPKc # Offset: 2122
    0000084f: 	movq	0x80(%rsp), %rdi
    00000857: 	cmpq	%rbp, %rdi
    0000085a: 	je	.Ltmp7179 # Offset: 2138
    0000085c: 	movq	0x90(%rsp), %rax
    00000864: 	leaq	0x1(%rax), %rsi
    00000868: 	callq	_ZdlPvm@PLT # Offset: 2152
.Ltmp7179:
    0000086d: 	movq	0x60(%rsp), %r15
    00000872: 	movq	0x68(%rsp), %r14
    00000877: 	movq	%rbp, 0x80(%rsp)
    0000087f: 	movq	%r15, %rax
    00000882: 	addq	%r14, %rax
    00000885: 	je	.Ltmp7180 # Offset: 2181
    00000887: 	testq	%r15, %r15
    0000088a: 	je	.Ltmp7181 # Offset: 2186
.Ltmp7180:
    00000890: 	movq	%r14, 0x58(%rsp)
    00000895: 	cmpq	$0xf, %r14
    00000899: 	ja	.Ltmp7182 # Offset: 2201
    0000089f: 	cmpq	$0x1, %r14
    000008a3: 	jne	.Ltmp7183 # Offset: 2211
    000008a9: 	movzbl	(%r15), %eax
    000008ad: 	movb	%al, 0x90(%rsp)
    000008b4: 	movq	%rbp, %rax
.Ltmp7370:
    000008b7: 	movq	%r14, 0x88(%rsp)
    000008bf: 	movb	$0x0, (%rax,%r14)
    000008c4: 	movabsq	$0x3fffffffffffffff, %rax
    000008ce: 	subq	0x88(%rsp), %rax
    000008d6: 	cmpq	$0x1b, %rax
    000008da: 	jbe	.Ltmp7184 # Offset: 2266
    000008e0: 	movl	$0x1c, %edx
    000008e5: 	leaq	DATAat0x57a98(%rip), %rsi
    000008ec: 	movq	%r13, %rdi
    000008ef: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2287
    000008f4: 	callq	clock@PLT # Offset: 2292
    000008f9: 	movl	iterations(%rip), %edi
    000008ff: 	xorl	%r14d, %r14d
    00000902: 	movabsq	$0x2e8ba2e8ba2e8ba3, %rbx
    0000090c: 	movq	%rax, start_time(%rip)
    00000913: 	leaq	DATAat0x571d0(%rip), %r15
    0000091a: 	testl	%edi, %edi
    0000091c: 	je	.Ltmp7185 # Offset: 2332
    00000922: 	nopw	(%rax,%rax) # Size: 6
.Ltmp7189:
    00000928: 	movl	$0x5, %ecx
    0000092d: 	xorl	%esi, %esi
    0000092f: 	nop # Size: 1
.Ltmp7186:
    00000930: 	movq	%rcx, %rax
    00000933: 	addq	$0xb, %rcx
    00000937: 	mulq	%rbx
    0000093a: 	shrq	%rdx
    0000093d: 	movq	0xa0(%rsp,%rdx,8), %rax
    00000945: 	addq	%rsi, %rax
    00000948: 	movq	%rax, %rsi
    0000094b: 	cmpq	$0x157c5, %rcx
    00000952: 	jne	.Ltmp7186 # Offset: 2386
    00000954: 	movsd	init_value(%rip), %xmm0
    0000095c: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00000964: 	jae	.Ltmp7187 # Offset: 2404
    0000096a: 	cvttsd2si	%xmm0, %rdx
.Ltmp7345:
    0000096f: 	imulq	$0x1f40, %rdx, %rdx
    00000976: 	cmpq	%rdx, %rax
    00000979: 	je	.Ltmp7188 # Offset: 2425
    0000097b: 	movl	current_test(%rip), %edx
    00000981: 	movq	%r15, %rsi
    00000984: 	movl	$0x1, %edi
    00000989: 	xorl	%eax, %eax
    0000098b: 	callq	__printf_chk@PLT # Offset: 2443
    00000990: 	movl	iterations(%rip), %edi
.Ltmp7188:
    00000996: 	addq	$0x1, %r14
    0000099a: 	movslq	%edi, %rax
    0000099d: 	cmpq	%rax, %r14
    000009a0: 	jb	.Ltmp7189 # Offset: 2464
.Ltmp7185:
    000009a6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000009ad: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000009b4: 	subq	$0x20, %rax
    000009b8: 	cmpq	%rax, %rbx
    000009bb: 	je	.Ltmp7190 # Offset: 2491
    000009c1: 	leaq	0x10(%rbx), %rdi
    000009c5: 	movq	0x88(%rsp), %r14
    000009cd: 	movq	%rdi, (%rbx)
    000009d0: 	movq	0x80(%rsp), %r15
    000009d8: 	movq	%r15, %rax
    000009db: 	addq	%r14, %rax
    000009de: 	je	.Ltmp7191 # Offset: 2526
    000009e0: 	testq	%r15, %r15
    000009e3: 	je	.Ltmp7192 # Offset: 2531
.Ltmp7191:
    000009e9: 	movq	%r14, 0x58(%rsp)
    000009ee: 	cmpq	$0xf, %r14
    000009f2: 	ja	.Ltmp7193 # Offset: 2546
    000009f8: 	cmpq	$0x1, %r14
    000009fc: 	jne	.Ltmp7194 # Offset: 2556
    00000a02: 	movzbl	(%r15), %eax
    00000a06: 	movb	%al, 0x10(%rbx)
.Ltmp7407:
    00000a09: 	movq	%r14, 0x8(%rbx)
    00000a0d: 	movb	$0x0, (%rdi,%r14)
    00000a12: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a19: 	addq	$0x20, %rax
    00000a1d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp7391:
    00000a24: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000a2b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a32: 	je	.Ltmp7195 # Offset: 2610
.Ltmp7390:
    00000a38: 	movq	-0x20(%rax), %r14
    00000a3c: 	callq	clock@PLT # Offset: 2620
    00000a41: 	pxor	%xmm0, %xmm0
    00000a45: 	movq	%rax, end_time(%rip)
    00000a4c: 	movq	%r14, %rdi
    00000a4f: 	subq	start_time(%rip), %rax
    00000a56: 	cvtsi2sd	%rax, %xmm0
    00000a5b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000a63: 	callq	_Z13record_resultdPKc # Offset: 2659
    00000a68: 	movq	0x80(%rsp), %rdi
    00000a70: 	cmpq	%rbp, %rdi
    00000a73: 	je	.Ltmp7196 # Offset: 2675
    00000a75: 	movq	0x90(%rsp), %rax
    00000a7d: 	leaq	0x1(%rax), %rsi
    00000a81: 	callq	_ZdlPvm@PLT # Offset: 2689
.Ltmp7196:
    00000a86: 	movq	0x60(%rsp), %r15
    00000a8b: 	movq	0x68(%rsp), %r14
    00000a90: 	movq	%rbp, 0x80(%rsp)
    00000a98: 	movq	%r15, %rax
    00000a9b: 	addq	%r14, %rax
    00000a9e: 	je	.Ltmp7197 # Offset: 2718
    00000aa0: 	testq	%r15, %r15
    00000aa3: 	je	.Ltmp7198 # Offset: 2723
.Ltmp7197:
    00000aa9: 	movq	%r14, 0x58(%rsp)
    00000aae: 	cmpq	$0xf, %r14
    00000ab2: 	ja	.Ltmp7199 # Offset: 2738
    00000ab8: 	cmpq	$0x1, %r14
    00000abc: 	jne	.Ltmp7200 # Offset: 2748
    00000ac2: 	movzbl	(%r15), %eax
    00000ac6: 	movb	%al, 0x90(%rsp)
    00000acd: 	movq	%rbp, %rax
.Ltmp7354:
    00000ad0: 	movq	%r14, 0x88(%rsp)
    00000ad8: 	movb	$0x0, (%rax,%r14)
    00000add: 	movabsq	$0x3fffffffffffffff, %rax
    00000ae7: 	subq	0x88(%rsp), %rax
    00000aef: 	cmpq	$0x13, %rax
    00000af3: 	jbe	.Ltmp7201 # Offset: 2803
    00000af9: 	movl	$0x14, %edx
    00000afe: 	leaq	DATAat0x57ab5(%rip), %rsi
    00000b05: 	movq	%r13, %rdi
    00000b08: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2824
    00000b0d: 	callq	clock@PLT # Offset: 2829
    00000b12: 	movl	iterations(%rip), %edi
    00000b18: 	xorl	%r14d, %r14d
    00000b1b: 	movabsq	$0x2e8ba2e8ba2e8ba3, %rbx
    00000b25: 	movq	%rax, start_time(%rip)
    00000b2c: 	leaq	DATAat0x571d0(%rip), %r15
    00000b33: 	testl	%edi, %edi
    00000b35: 	je	.Ltmp7202 # Offset: 2869
    00000b3b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp7206:
    00000b40: 	xorl	%esi, %esi
    00000b42: 	xorl	%ecx, %ecx
    00000b44: 	nopl	(%rax) # Size: 4
.Ltmp7203:
    00000b48: 	movq	%rcx, %rax
    00000b4b: 	addq	$0xb, %rcx
    00000b4f: 	mulq	%rbx
    00000b52: 	shrq	%rdx
    00000b55: 	movq	0xa0(%rsp,%rdx,8), %rax
    00000b5d: 	addq	%rsi, %rax
    00000b60: 	movq	%rax, %rsi
    00000b63: 	cmpq	$0x157c0, %rcx
    00000b6a: 	jne	.Ltmp7203 # Offset: 2922
    00000b6c: 	movsd	init_value(%rip), %xmm0
    00000b74: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00000b7c: 	jae	.Ltmp7204 # Offset: 2940
    00000b82: 	cvttsd2si	%xmm0, %rdx
.Ltmp7346:
    00000b87: 	imulq	$0x1f40, %rdx, %rdx
    00000b8e: 	cmpq	%rdx, %rax
    00000b91: 	je	.Ltmp7205 # Offset: 2961
    00000b93: 	movl	current_test(%rip), %edx
    00000b99: 	movq	%r15, %rsi
    00000b9c: 	movl	$0x1, %edi
    00000ba1: 	xorl	%eax, %eax
    00000ba3: 	callq	__printf_chk@PLT # Offset: 2979
    00000ba8: 	movl	iterations(%rip), %edi
.Ltmp7205:
    00000bae: 	addq	$0x1, %r14
    00000bb2: 	movslq	%edi, %rax
    00000bb5: 	cmpq	%rax, %r14
    00000bb8: 	jb	.Ltmp7206 # Offset: 3000
.Ltmp7202:
    00000bba: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000bc1: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000bc8: 	subq	$0x20, %rax
    00000bcc: 	cmpq	%rax, %rbx
    00000bcf: 	je	.Ltmp7207 # Offset: 3023
    00000bd5: 	leaq	0x10(%rbx), %rdi
    00000bd9: 	movq	0x88(%rsp), %r14
    00000be1: 	movq	%rdi, (%rbx)
    00000be4: 	movq	0x80(%rsp), %r15
    00000bec: 	movq	%r15, %rax
    00000bef: 	addq	%r14, %rax
    00000bf2: 	je	.Ltmp7208 # Offset: 3058
    00000bf4: 	testq	%r15, %r15
    00000bf7: 	je	.Ltmp7209 # Offset: 3063
.Ltmp7208:
    00000bfd: 	movq	%r14, 0x58(%rsp)
    00000c02: 	cmpq	$0xf, %r14
    00000c06: 	ja	.Ltmp7210 # Offset: 3078
    00000c0c: 	cmpq	$0x1, %r14
    00000c10: 	jne	.Ltmp7211 # Offset: 3088
    00000c16: 	movzbl	(%r15), %eax
    00000c1a: 	movb	%al, 0x10(%rbx)
.Ltmp7410:
    00000c1d: 	movq	%r14, 0x8(%rbx)
    00000c21: 	movb	$0x0, (%rdi,%r14)
    00000c26: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c2d: 	addq	$0x20, %rax
    00000c31: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp7395:
    00000c38: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000c3f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c46: 	je	.Ltmp7212 # Offset: 3142
.Ltmp7394:
    00000c4c: 	movq	-0x20(%rax), %r14
    00000c50: 	callq	clock@PLT # Offset: 3152
    00000c55: 	pxor	%xmm0, %xmm0
    00000c59: 	movq	%rax, end_time(%rip)
    00000c60: 	movq	%r14, %rdi
    00000c63: 	subq	start_time(%rip), %rax
    00000c6a: 	cvtsi2sd	%rax, %xmm0
    00000c6f: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000c77: 	callq	_Z13record_resultdPKc # Offset: 3191
    00000c7c: 	movq	0x80(%rsp), %rdi
    00000c84: 	cmpq	%rbp, %rdi
    00000c87: 	je	.Ltmp7213 # Offset: 3207
    00000c89: 	movq	0x90(%rsp), %rax
    00000c91: 	leaq	0x1(%rax), %rsi
    00000c95: 	callq	_ZdlPvm@PLT # Offset: 3221
.Ltmp7213:
    00000c9a: 	movq	0x60(%rsp), %r15
    00000c9f: 	movq	0x68(%rsp), %r14
    00000ca4: 	movq	%rbp, 0x80(%rsp)
    00000cac: 	movq	%r15, %rax
    00000caf: 	addq	%r14, %rax
    00000cb2: 	je	.Ltmp7214 # Offset: 3250
    00000cb4: 	testq	%r15, %r15
    00000cb7: 	je	.Ltmp7215 # Offset: 3255
.Ltmp7214:
    00000cbd: 	movq	%r14, 0x58(%rsp)
    00000cc2: 	cmpq	$0xf, %r14
    00000cc6: 	ja	.Ltmp7216 # Offset: 3270
    00000ccc: 	cmpq	$0x1, %r14
    00000cd0: 	jne	.Ltmp7217 # Offset: 3280
    00000cd6: 	movzbl	(%r15), %eax
    00000cda: 	movb	%al, 0x90(%rsp)
    00000ce1: 	movq	%rbp, %rax
.Ltmp7356:
    00000ce4: 	movq	%r14, 0x88(%rsp)
    00000cec: 	movb	$0x0, (%rax,%r14)
    00000cf1: 	movabsq	$0x3fffffffffffffff, %rax
    00000cfb: 	subq	0x88(%rsp), %rax
    00000d03: 	cmpq	$0x13, %rax
    00000d07: 	jbe	.Ltmp7218 # Offset: 3335
    00000d0d: 	movl	$0x14, %edx
    00000d12: 	leaq	DATAat0x57aca(%rip), %rsi
    00000d19: 	movq	%r13, %rdi
    00000d1c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3356
    00000d21: 	callq	clock@PLT # Offset: 3361
    00000d26: 	movl	iterations(%rip), %edi
    00000d2c: 	xorl	%r14d, %r14d
    00000d2f: 	movabsq	$0x2e8ba2e8ba2e8ba3, %rbx
    00000d39: 	movq	%rax, start_time(%rip)
    00000d40: 	leaq	DATAat0x571d0(%rip), %r15
    00000d47: 	testl	%edi, %edi
    00000d49: 	je	.Ltmp7219 # Offset: 3401
    00000d4f: 	nop # Size: 1
.Ltmp7223:
    00000d50: 	xorl	%esi, %esi
    00000d52: 	movl	$0x5, %ecx
    00000d57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp7220:
    00000d60: 	movq	%rcx, %rax
    00000d63: 	addq	$0xb, %rcx
    00000d67: 	mulq	%rbx
    00000d6a: 	shrq	%rdx
    00000d6d: 	movq	0xa0(%rsp,%rdx,8), %rax
    00000d75: 	addq	%rsi, %rax
    00000d78: 	movq	%rax, %rsi
    00000d7b: 	cmpq	$0x157c5, %rcx
    00000d82: 	jne	.Ltmp7220 # Offset: 3458
    00000d84: 	movsd	init_value(%rip), %xmm0
    00000d8c: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00000d94: 	jae	.Ltmp7221 # Offset: 3476
    00000d9a: 	cvttsd2si	%xmm0, %rdx
.Ltmp7348:
    00000d9f: 	imulq	$0x1f40, %rdx, %rdx
    00000da6: 	cmpq	%rdx, %rax
    00000da9: 	je	.Ltmp7222 # Offset: 3497
    00000dab: 	movl	current_test(%rip), %edx
    00000db1: 	movq	%r15, %rsi
    00000db4: 	movl	$0x1, %edi
    00000db9: 	xorl	%eax, %eax
    00000dbb: 	callq	__printf_chk@PLT # Offset: 3515
    00000dc0: 	movl	iterations(%rip), %edi
.Ltmp7222:
    00000dc6: 	addq	$0x1, %r14
    00000dca: 	movslq	%edi, %rax
    00000dcd: 	cmpq	%rax, %r14
    00000dd0: 	jb	.Ltmp7223 # Offset: 3536
.Ltmp7219:
    00000dd6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000ddd: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000de4: 	subq	$0x20, %rax
    00000de8: 	cmpq	%rax, %rbx
    00000deb: 	je	.Ltmp7224 # Offset: 3563
    00000df1: 	leaq	0x10(%rbx), %rdi
    00000df5: 	movq	0x88(%rsp), %r14
    00000dfd: 	movq	%rdi, (%rbx)
    00000e00: 	movq	0x80(%rsp), %r15
    00000e08: 	movq	%r15, %rax
    00000e0b: 	addq	%r14, %rax
    00000e0e: 	je	.Ltmp7225 # Offset: 3598
    00000e10: 	testq	%r15, %r15
    00000e13: 	je	.Ltmp7226 # Offset: 3603
.Ltmp7225:
    00000e19: 	movq	%r14, 0x58(%rsp)
    00000e1e: 	cmpq	$0xf, %r14
    00000e22: 	ja	.Ltmp7227 # Offset: 3618
    00000e28: 	cmpq	$0x1, %r14
    00000e2c: 	jne	.Ltmp7228 # Offset: 3628
    00000e32: 	movzbl	(%r15), %eax
    00000e36: 	movb	%al, 0x10(%rbx)
.Ltmp7415:
    00000e39: 	movq	%r14, 0x8(%rbx)
    00000e3d: 	movb	$0x0, (%rdi,%r14)
    00000e42: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e49: 	addq	$0x20, %rax
    00000e4d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp7393:
    00000e54: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000e5b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e62: 	je	.Ltmp7229 # Offset: 3682
.Ltmp7392:
    00000e68: 	movq	-0x20(%rax), %r14
    00000e6c: 	callq	clock@PLT # Offset: 3692
    00000e71: 	pxor	%xmm0, %xmm0
    00000e75: 	movq	%rax, end_time(%rip)
    00000e7c: 	movq	%r14, %rdi
    00000e7f: 	subq	start_time(%rip), %rax
    00000e86: 	cvtsi2sd	%rax, %xmm0
    00000e8b: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00000e93: 	callq	_Z13record_resultdPKc # Offset: 3731
    00000e98: 	movq	0x80(%rsp), %rdi
    00000ea0: 	cmpq	%rbp, %rdi
    00000ea3: 	je	.Ltmp7230 # Offset: 3747
    00000ea5: 	movq	0x90(%rsp), %rax
    00000ead: 	leaq	0x1(%rax), %rsi
    00000eb1: 	callq	_ZdlPvm@PLT # Offset: 3761
.Ltmp7230:
    00000eb6: 	movq	0x60(%rsp), %r15
    00000ebb: 	movq	0x68(%rsp), %r14
    00000ec0: 	movq	%rbp, 0x80(%rsp)
    00000ec8: 	movq	%r15, %rax
    00000ecb: 	addq	%r14, %rax
    00000ece: 	je	.Ltmp7231 # Offset: 3790
    00000ed0: 	testq	%r15, %r15
    00000ed3: 	je	.Ltmp7232 # Offset: 3795
.Ltmp7231:
    00000ed9: 	movq	%r14, 0x58(%rsp)
    00000ede: 	cmpq	$0xf, %r14
    00000ee2: 	ja	.Ltmp7233 # Offset: 3810
    00000ee8: 	cmpq	$0x1, %r14
    00000eec: 	jne	.Ltmp7234 # Offset: 3820
    00000ef2: 	movzbl	(%r15), %eax
    00000ef6: 	movb	%al, 0x90(%rsp)
    00000efd: 	movq	%rbp, %rax
.Ltmp7368:
    00000f00: 	movq	%r14, 0x88(%rsp)
    00000f08: 	movb	$0x0, (%rax,%r14)
    00000f0d: 	movabsq	$0x3fffffffffffffff, %rax
    00000f17: 	subq	0x88(%rsp), %rax
    00000f1f: 	cmpq	$0x13, %rax
    00000f23: 	jbe	.Ltmp7235 # Offset: 3875
    00000f29: 	movl	$0x14, %edx
    00000f2e: 	leaq	DATAat0x57adf(%rip), %rsi
    00000f35: 	movq	%r13, %rdi
    00000f38: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3896
    00000f3d: 	callq	clock@PLT # Offset: 3901
    00000f42: 	movl	iterations(%rip), %edi
    00000f48: 	xorl	%r14d, %r14d
    00000f4b: 	movabsq	$0x2e8ba2e8ba2e8ba3, %rbx
    00000f55: 	movq	%rax, start_time(%rip)
    00000f5c: 	leaq	DATAat0x571d0(%rip), %r15
    00000f63: 	testl	%edi, %edi
    00000f65: 	je	.Ltmp7236 # Offset: 3941
    00000f6b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp7240:
    00000f70: 	movl	$0x5, %ecx
    00000f75: 	xorl	%esi, %esi
    00000f77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp7237:
    00000f80: 	movq	%rcx, %rax
    00000f83: 	addq	$0xb, %rcx
    00000f87: 	mulq	%rbx
    00000f8a: 	shrq	%rdx
    00000f8d: 	movq	0xa0(%rsp,%rdx,8), %rax
    00000f95: 	addq	%rsi, %rax
    00000f98: 	movq	%rax, %rsi
    00000f9b: 	cmpq	$0x157c5, %rcx
    00000fa2: 	jne	.Ltmp7237 # Offset: 4002
    00000fa4: 	movsd	init_value(%rip), %xmm0
    00000fac: 	comisd	DATAat0x57bd8(%rip), %xmm0
    00000fb4: 	jae	.Ltmp7238 # Offset: 4020
    00000fba: 	cvttsd2si	%xmm0, %rdx
.Ltmp7347:
    00000fbf: 	imulq	$0x1f40, %rdx, %rdx
    00000fc6: 	cmpq	%rdx, %rax
    00000fc9: 	je	.Ltmp7239 # Offset: 4041
    00000fcb: 	movl	current_test(%rip), %edx
    00000fd1: 	movq	%r15, %rsi
    00000fd4: 	movl	$0x1, %edi
    00000fd9: 	xorl	%eax, %eax
    00000fdb: 	callq	__printf_chk@PLT # Offset: 4059
    00000fe0: 	movl	iterations(%rip), %edi
.Ltmp7239:
    00000fe6: 	addq	$0x1, %r14
    00000fea: 	movslq	%edi, %rax
    00000fed: 	cmpq	%rax, %r14
    00000ff0: 	jb	.Ltmp7240 # Offset: 4080
.Ltmp7236:
    00000ff6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000ffd: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001004: 	subq	$0x20, %rax
    00001008: 	cmpq	%rax, %rbx
    0000100b: 	je	.Ltmp7241 # Offset: 4107
    00001011: 	leaq	0x10(%rbx), %rdi
    00001015: 	movq	0x88(%rsp), %r14
    0000101d: 	movq	%rdi, (%rbx)
    00001020: 	movq	0x80(%rsp), %r15
    00001028: 	movq	%r15, %rax
    0000102b: 	addq	%r14, %rax
    0000102e: 	je	.Ltmp7242 # Offset: 4142
    00001030: 	testq	%r15, %r15
    00001033: 	je	.Ltmp7243 # Offset: 4147
.Ltmp7242:
    00001039: 	movq	%r14, 0x58(%rsp)
    0000103e: 	cmpq	$0xf, %r14
    00001042: 	ja	.Ltmp7244 # Offset: 4162
    00001048: 	cmpq	$0x1, %r14
    0000104c: 	jne	.Ltmp7245 # Offset: 4172
    00001052: 	movzbl	(%r15), %eax
    00001056: 	movb	%al, 0x10(%rbx)
.Ltmp7403:
    00001059: 	movq	%r14, 0x8(%rbx)
    0000105d: 	movb	$0x0, (%rdi,%r14)
    00001062: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001069: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001070: 	addq	$0x20, %rax
    00001074: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000107b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001082: 	je	.Ltmp7246 # Offset: 4226
.Ltmp7382:
    00001088: 	movq	-0x20(%rax), %r14
    0000108c: 	callq	clock@PLT # Offset: 4236
    00001091: 	pxor	%xmm0, %xmm0
    00001095: 	movq	%rax, end_time(%rip)
    0000109c: 	movq	%r14, %rdi
    0000109f: 	subq	start_time(%rip), %rax
    000010a6: 	cvtsi2sd	%rax, %xmm0
    000010ab: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000010b3: 	callq	_Z13record_resultdPKc # Offset: 4275
    000010b8: 	movq	0x80(%rsp), %rdi
    000010c0: 	cmpq	%rbp, %rdi
    000010c3: 	je	.Ltmp7247 # Offset: 4291
    000010c5: 	movq	0x90(%rsp), %rax
    000010cd: 	leaq	0x1(%rax), %rsi
    000010d1: 	callq	_ZdlPvm@PLT # Offset: 4305
.Ltmp7247:
    000010d6: 	movq	0x60(%rsp), %r15
    000010db: 	movq	0x68(%rsp), %r14
    000010e0: 	movq	%rbp, 0x80(%rsp)
    000010e8: 	movq	%r15, %rax
    000010eb: 	addq	%r14, %rax
    000010ee: 	je	.Ltmp7248 # Offset: 4334
    000010f0: 	testq	%r15, %r15
    000010f3: 	je	.Ltmp7249 # Offset: 4339
.Ltmp7248:
    000010f9: 	movq	%r14, 0x58(%rsp)
    000010fe: 	cmpq	$0xf, %r14
    00001102: 	ja	.Ltmp7250 # Offset: 4354
    00001108: 	cmpq	$0x1, %r14
    0000110c: 	jne	.Ltmp7251 # Offset: 4364
    00001112: 	movzbl	(%r15), %eax
    00001116: 	movb	%al, 0x90(%rsp)
    0000111d: 	movq	%rbp, %rax
.Ltmp7366:
    00001120: 	movq	%r14, 0x88(%rsp)
    00001128: 	movb	$0x0, (%rax,%r14)
    0000112d: 	movabsq	$0x3fffffffffffffff, %rax
    00001137: 	subq	0x88(%rsp), %rax
    0000113f: 	cmpq	$0x1b, %rax
    00001143: 	jbe	.Ltmp7252 # Offset: 4419
    00001149: 	movl	$0x1c, %edx
    0000114e: 	leaq	DATAat0x57af4(%rip), %rsi
    00001155: 	movq	%r13, %rdi
    00001158: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4440
    0000115d: 	callq	clock@PLT # Offset: 4445
    00001162: 	movl	iterations(%rip), %esi
    00001168: 	xorl	%ebx, %ebx
    0000116a: 	movabsq	$-0x8000000000000000, %r15
    00001174: 	movq	%rax, start_time(%rip)
    0000117b: 	leaq	DATAat0x571d0(%rip), %r14
    00001182: 	testl	%esi, %esi
    00001184: 	je	.Ltmp7253 # Offset: 4484
    00001186: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp7257:
    00001190: 	xorl	%ecx, %ecx
    00001192: 	xorl	%eax, %eax
    00001194: 	nopl	(%rax) # Size: 4
.Ltmp7254:
    00001198: 	movq	%rax, %rdx
    0000119b: 	addq	$0x4, %rax
    0000119f: 	shrq	$0x2, %rdx
    000011a3: 	addq	0xa0(%rsp,%rdx,8), %rcx
    000011ab: 	movq	%rcx, %rdx
    000011ae: 	cmpq	$0x7d00, %rax
    000011b4: 	jne	.Ltmp7254 # Offset: 4532
    000011b6: 	movsd	init_value(%rip), %xmm0
    000011be: 	comisd	DATAat0x57bd8(%rip), %xmm0
    000011c6: 	jae	.Ltmp7255 # Offset: 4550
    000011cc: 	cvttsd2si	%xmm0, %rax
.Ltmp7350:
    000011d1: 	imulq	$0x1f40, %rax, %rax
    000011d8: 	cmpq	%rax, %rdx
    000011db: 	je	.Ltmp7256 # Offset: 4571
    000011dd: 	movl	current_test(%rip), %edx
    000011e3: 	movq	%r14, %rsi
    000011e6: 	movl	$0x1, %edi
    000011eb: 	xorl	%eax, %eax
    000011ed: 	callq	__printf_chk@PLT # Offset: 4589
    000011f2: 	movl	iterations(%rip), %esi
.Ltmp7256:
    000011f8: 	addq	$0x1, %rbx
    000011fc: 	movslq	%esi, %rax
    000011ff: 	cmpq	%rax, %rbx
    00001202: 	jb	.Ltmp7257 # Offset: 4610
.Ltmp7253:
    00001204: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000120b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001212: 	subq	$0x20, %rax
    00001216: 	cmpq	%rax, %rbx
    00001219: 	je	.Ltmp7258 # Offset: 4633
    0000121f: 	leaq	0x10(%rbx), %rdi
    00001223: 	movq	0x88(%rsp), %r14
    0000122b: 	movq	%rdi, (%rbx)
    0000122e: 	movq	0x80(%rsp), %r15
    00001236: 	movq	%r15, %rax
    00001239: 	addq	%r14, %rax
    0000123c: 	je	.Ltmp7259 # Offset: 4668
    0000123e: 	testq	%r15, %r15
    00001241: 	je	.Ltmp7260 # Offset: 4673
.Ltmp7259:
    00001247: 	movq	%r14, 0x58(%rsp)
    0000124c: 	cmpq	$0xf, %r14
    00001250: 	ja	.Ltmp7261 # Offset: 4688
    00001256: 	cmpq	$0x1, %r14
    0000125a: 	jne	.Ltmp7262 # Offset: 4698
    00001260: 	movzbl	(%r15), %eax
    00001264: 	movb	%al, 0x10(%rbx)
.Ltmp7401:
    00001267: 	movq	%r14, 0x8(%rbx)
    0000126b: 	movb	$0x0, (%rdi,%r14)
    00001270: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001277: 	addq	$0x20, %rax
    0000127b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp7381:
    00001282: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001289: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001290: 	je	.Ltmp7263 # Offset: 4752
.Ltmp7379:
    00001296: 	movq	-0x20(%rax), %r14
    0000129a: 	callq	clock@PLT # Offset: 4762
    0000129f: 	pxor	%xmm0, %xmm0
    000012a3: 	movq	%rax, end_time(%rip)
    000012aa: 	movq	%r14, %rdi
    000012ad: 	subq	start_time(%rip), %rax
    000012b4: 	cvtsi2sd	%rax, %xmm0
    000012b9: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000012c1: 	callq	_Z13record_resultdPKc # Offset: 4801
    000012c6: 	movq	0x80(%rsp), %rdi
    000012ce: 	cmpq	%rbp, %rdi
    000012d1: 	je	.Ltmp7264 # Offset: 4817
    000012d3: 	movq	0x90(%rsp), %rax
    000012db: 	leaq	0x1(%rax), %rsi
    000012df: 	callq	_ZdlPvm@PLT # Offset: 4831
.Ltmp7264:
    000012e4: 	movq	0x60(%rsp), %r15
    000012e9: 	movq	0x68(%rsp), %r14
    000012ee: 	movq	%rbp, 0x80(%rsp)
    000012f6: 	movq	%r15, %rax
    000012f9: 	addq	%r14, %rax
    000012fc: 	je	.Ltmp7265 # Offset: 4860
    000012fe: 	testq	%r15, %r15
    00001301: 	je	.Ltmp7266 # Offset: 4865
.Ltmp7265:
    00001307: 	movq	%r14, 0x58(%rsp)
    0000130c: 	cmpq	$0xf, %r14
    00001310: 	ja	.Ltmp7267 # Offset: 4880
    00001316: 	cmpq	$0x1, %r14
    0000131a: 	jne	.Ltmp7268 # Offset: 4890
    00001320: 	movzbl	(%r15), %eax
    00001324: 	movb	%al, 0x90(%rsp)
    0000132b: 	movq	%rbp, %rax
.Ltmp7358:
    0000132e: 	movq	%r14, 0x88(%rsp)
    00001336: 	movb	$0x0, (%rax,%r14)
    0000133b: 	movabsq	$0x3fffffffffffffff, %rax
    00001345: 	subq	0x88(%rsp), %rax
    0000134d: 	cmpq	$0x1b, %rax
    00001351: 	jbe	.Ltmp7269 # Offset: 4945
    00001357: 	movl	$0x1c, %edx
    0000135c: 	leaq	DATAat0x57b11(%rip), %rsi
    00001363: 	movq	%r13, %rdi
    00001366: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4966
    0000136b: 	callq	clock@PLT # Offset: 4971
    00001370: 	movl	iterations(%rip), %esi
    00001376: 	xorl	%ebx, %ebx
    00001378: 	movabsq	$-0x8000000000000000, %r15
    00001382: 	movq	%rax, start_time(%rip)
    00001389: 	leaq	DATAat0x571d0(%rip), %r14
    00001390: 	testl	%esi, %esi
    00001392: 	je	.Ltmp7270 # Offset: 5010
    00001394: 	nopl	(%rax) # Size: 4
.Ltmp7274:
    00001398: 	xorl	%ecx, %ecx
    0000139a: 	xorl	%eax, %eax
    0000139c: 	nopl	(%rax) # Size: 4
.Ltmp7271:
    000013a0: 	movq	%rax, %rdx
    000013a3: 	addq	$0x4, %rax
    000013a7: 	shrq	$0x2, %rdx
    000013ab: 	addq	0xa0(%rsp,%rdx,8), %rcx
    000013b3: 	movq	%rcx, %rdx
    000013b6: 	cmpq	$0x7d00, %rax
    000013bc: 	jne	.Ltmp7271 # Offset: 5052
    000013be: 	movsd	init_value(%rip), %xmm0
    000013c6: 	comisd	DATAat0x57bd8(%rip), %xmm0
    000013ce: 	jae	.Ltmp7272 # Offset: 5070
    000013d4: 	cvttsd2si	%xmm0, %rax
.Ltmp7351:
    000013d9: 	imulq	$0x1f40, %rax, %rax
    000013e0: 	cmpq	%rax, %rdx
    000013e3: 	je	.Ltmp7273 # Offset: 5091
    000013e5: 	movl	current_test(%rip), %edx
    000013eb: 	movq	%r14, %rsi
    000013ee: 	movl	$0x1, %edi
    000013f3: 	xorl	%eax, %eax
    000013f5: 	callq	__printf_chk@PLT # Offset: 5109
    000013fa: 	movl	iterations(%rip), %esi
.Ltmp7273:
    00001400: 	addq	$0x1, %rbx
    00001404: 	movslq	%esi, %rax
    00001407: 	cmpq	%rax, %rbx
    0000140a: 	jb	.Ltmp7274 # Offset: 5130
.Ltmp7270:
    0000140c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001413: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000141a: 	subq	$0x20, %rax
    0000141e: 	cmpq	%rax, %rbx
    00001421: 	je	.Ltmp7275 # Offset: 5153
    00001427: 	leaq	0x10(%rbx), %rdi
    0000142b: 	movq	0x88(%rsp), %r14
    00001433: 	movq	%rdi, (%rbx)
    00001436: 	movq	0x80(%rsp), %r15
    0000143e: 	movq	%r15, %rax
    00001441: 	addq	%r14, %rax
    00001444: 	je	.Ltmp7276 # Offset: 5188
    00001446: 	testq	%r15, %r15
    00001449: 	je	.Ltmp7277 # Offset: 5193
.Ltmp7276:
    0000144f: 	movq	%r14, 0x58(%rsp)
    00001454: 	cmpq	$0xf, %r14
    00001458: 	ja	.Ltmp7278 # Offset: 5208
    0000145e: 	cmpq	$0x1, %r14
    00001462: 	jne	.Ltmp7279 # Offset: 5218
    00001468: 	movzbl	(%r15), %eax
    0000146c: 	movb	%al, 0x10(%rbx)
.Ltmp7399:
    0000146f: 	movq	%r14, 0x8(%rbx)
    00001473: 	movb	$0x0, (%rdi,%r14)
    00001478: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000147f: 	addq	$0x20, %rax
    00001483: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp7385:
    0000148a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001491: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001498: 	je	.Ltmp7280 # Offset: 5272
.Ltmp7384:
    0000149e: 	movq	-0x20(%rax), %r14
    000014a2: 	callq	clock@PLT # Offset: 5282
    000014a7: 	pxor	%xmm0, %xmm0
    000014ab: 	movq	%rax, end_time(%rip)
    000014b2: 	movq	%r14, %rdi
    000014b5: 	subq	start_time(%rip), %rax
    000014bc: 	cvtsi2sd	%rax, %xmm0
    000014c1: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000014c9: 	callq	_Z13record_resultdPKc # Offset: 5321
    000014ce: 	movq	0x80(%rsp), %rdi
    000014d6: 	cmpq	%rbp, %rdi
    000014d9: 	je	.Ltmp7281 # Offset: 5337
    000014db: 	movq	0x90(%rsp), %rax
    000014e3: 	leaq	0x1(%rax), %rsi
    000014e7: 	callq	_ZdlPvm@PLT # Offset: 5351
.Ltmp7281:
    000014ec: 	movq	0x60(%rsp), %r15
    000014f1: 	movq	0x68(%rsp), %r14
    000014f6: 	movq	%rbp, 0x80(%rsp)
    000014fe: 	movq	%r15, %rax
    00001501: 	addq	%r14, %rax
    00001504: 	je	.Ltmp7282 # Offset: 5380
    00001506: 	testq	%r15, %r15
    00001509: 	je	.Ltmp7283 # Offset: 5385
.Ltmp7282:
    0000150f: 	movq	%r14, 0x58(%rsp)
    00001514: 	cmpq	$0xf, %r14
    00001518: 	ja	.Ltmp7284 # Offset: 5400
    0000151e: 	cmpq	$0x1, %r14
    00001522: 	jne	.Ltmp7285 # Offset: 5410
    00001528: 	movzbl	(%r15), %eax
    0000152c: 	movb	%al, 0x90(%rsp)
    00001533: 	movq	%rbp, %rax
.Ltmp7360:
    00001536: 	movq	%r14, 0x88(%rsp)
    0000153e: 	movb	$0x0, (%rax,%r14)
    00001543: 	movabsq	$0x3fffffffffffffff, %rax
    0000154d: 	subq	0x88(%rsp), %rax
    00001555: 	cmpq	$0x1b, %rax
    00001559: 	jbe	.Ltmp7286 # Offset: 5465
    0000155f: 	movl	$0x1c, %edx
    00001564: 	leaq	DATAat0x57b2e(%rip), %rsi
    0000156b: 	movq	%r13, %rdi
    0000156e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 5486
    00001573: 	callq	clock@PLT # Offset: 5491
    00001578: 	movl	iterations(%rip), %esi
    0000157e: 	xorl	%ebx, %ebx
    00001580: 	movabsq	$-0x8000000000000000, %r15
    0000158a: 	movq	%rax, start_time(%rip)
    00001591: 	leaq	DATAat0x571d0(%rip), %r14
    00001598: 	testl	%esi, %esi
    0000159a: 	je	.Ltmp7287 # Offset: 5530
    0000159c: 	nopl	(%rax) # Size: 4
.Ltmp7291:
    000015a0: 	xorl	%ecx, %ecx
    000015a2: 	xorl	%eax, %eax
    000015a4: 	nopl	(%rax) # Size: 4
.Ltmp7288:
    000015a8: 	movq	%rax, %rdx
    000015ab: 	addq	$0x4, %rax
    000015af: 	shrq	$0x2, %rdx
    000015b3: 	addq	0xa0(%rsp,%rdx,8), %rcx
    000015bb: 	movq	%rcx, %rdx
    000015be: 	cmpq	$0x7d00, %rax
    000015c4: 	jne	.Ltmp7288 # Offset: 5572
    000015c6: 	movsd	init_value(%rip), %xmm0
    000015ce: 	comisd	DATAat0x57bd8(%rip), %xmm0
    000015d6: 	jae	.Ltmp7289 # Offset: 5590
    000015dc: 	cvttsd2si	%xmm0, %rax
.Ltmp7349:
    000015e1: 	imulq	$0x1f40, %rax, %rax
    000015e8: 	cmpq	%rax, %rdx
    000015eb: 	je	.Ltmp7290 # Offset: 5611
    000015ed: 	movl	current_test(%rip), %edx
    000015f3: 	movq	%r14, %rsi
    000015f6: 	movl	$0x1, %edi
    000015fb: 	xorl	%eax, %eax
    000015fd: 	callq	__printf_chk@PLT # Offset: 5629
    00001602: 	movl	iterations(%rip), %esi
.Ltmp7290:
    00001608: 	addq	$0x1, %rbx
    0000160c: 	movslq	%esi, %rax
    0000160f: 	cmpq	%rax, %rbx
    00001612: 	jb	.Ltmp7291 # Offset: 5650
.Ltmp7287:
    00001614: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000161b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001622: 	subq	$0x20, %rax
    00001626: 	cmpq	%rax, %rbx
    00001629: 	je	.Ltmp7292 # Offset: 5673
    0000162f: 	leaq	0x10(%rbx), %rdi
    00001633: 	movq	0x88(%rsp), %r14
    0000163b: 	movq	%rdi, (%rbx)
    0000163e: 	movq	0x80(%rsp), %r15
    00001646: 	movq	%r15, %rax
    00001649: 	addq	%r14, %rax
    0000164c: 	je	.Ltmp7293 # Offset: 5708
    0000164e: 	testq	%r15, %r15
    00001651: 	je	.Ltmp7294 # Offset: 5713
.Ltmp7293:
    00001657: 	movq	%r14, 0x58(%rsp)
    0000165c: 	cmpq	$0xf, %r14
    00001660: 	ja	.Ltmp7295 # Offset: 5728
    00001666: 	cmpq	$0x1, %r14
    0000166a: 	jne	.Ltmp7296 # Offset: 5738
    00001670: 	movzbl	(%r15), %eax
    00001674: 	movb	%al, 0x10(%rbx)
.Ltmp7408:
    00001677: 	movq	%r14, 0x8(%rbx)
    0000167b: 	movb	$0x0, (%rdi,%r14)
    00001680: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001687: 	addq	$0x20, %rax
    0000168b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp7387:
    00001692: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001699: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016a0: 	je	.Ltmp7297 # Offset: 5792
.Ltmp7386:
    000016a6: 	movq	-0x20(%rax), %r14
    000016aa: 	callq	clock@PLT # Offset: 5802
    000016af: 	pxor	%xmm0, %xmm0
    000016b3: 	movq	%rax, end_time(%rip)
    000016ba: 	movq	%r14, %rdi
    000016bd: 	subq	start_time(%rip), %rax
    000016c4: 	cvtsi2sd	%rax, %xmm0
    000016c9: 	divsd	DATAat0x57bc8(%rip), %xmm0
    000016d1: 	callq	_Z13record_resultdPKc # Offset: 5841
    000016d6: 	movq	0x80(%rsp), %rdi
    000016de: 	cmpq	%rbp, %rdi
    000016e1: 	je	.Ltmp7298 # Offset: 5857
    000016e3: 	movq	0x90(%rsp), %rax
    000016eb: 	leaq	0x1(%rax), %rsi
    000016ef: 	callq	_ZdlPvm@PLT # Offset: 5871
.Ltmp7298:
    000016f4: 	movq	0x60(%rsp), %r15
    000016f9: 	movq	0x68(%rsp), %r14
    000016fe: 	movq	%rbp, 0x80(%rsp)
    00001706: 	movq	%r15, %rax
    00001709: 	addq	%r14, %rax
    0000170c: 	je	.Ltmp7299 # Offset: 5900
    0000170e: 	testq	%r15, %r15
    00001711: 	je	.Ltmp7300 # Offset: 5905
.Ltmp7299:
    00001717: 	movq	%r14, 0x58(%rsp)
    0000171c: 	cmpq	$0xf, %r14
    00001720: 	ja	.Ltmp7301 # Offset: 5920
    00001726: 	cmpq	$0x1, %r14
    0000172a: 	jne	.Ltmp7302 # Offset: 5930
    00001730: 	movzbl	(%r15), %eax
    00001734: 	movb	%al, 0x90(%rsp)
    0000173b: 	movq	%rbp, %rax
.Ltmp7374:
    0000173e: 	movq	%r14, 0x88(%rsp)
    00001746: 	movb	$0x0, (%rax,%r14)
    0000174b: 	movabsq	$0x3fffffffffffffff, %rax
    00001755: 	subq	0x88(%rsp), %rax
    0000175d: 	cmpq	$0x13, %rax
    00001761: 	jbe	.Ltmp7303 # Offset: 5985
    00001767: 	movl	$0x14, %edx
    0000176c: 	leaq	DATAat0x57b4b(%rip), %rsi
    00001773: 	movq	%r13, %rdi
    00001776: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 6006
    0000177b: 	callq	clock@PLT # Offset: 6011
    00001780: 	movq	%r13, %rsi
    00001783: 	movq	%r12, %rdi
    00001786: 	movq	%rax, start_time(%rip)
    0000178d: 	callq	"_Z18test_loopstep_mul1Im11shift_rightImLi2EEEvPKT_mmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0.constprop.0/1" # Offset: 6029
    00001792: 	movq	0x80(%rsp), %rdi
    0000179a: 	cmpq	%rbp, %rdi
    0000179d: 	je	.Ltmp7304 # Offset: 6045
    0000179f: 	movq	0x90(%rsp), %rax
    000017a7: 	leaq	0x1(%rax), %rsi
    000017ab: 	callq	_ZdlPvm@PLT # Offset: 6059
.Ltmp7304:
    000017b0: 	movq	0x60(%rsp), %r15
    000017b5: 	movq	0x68(%rsp), %r14
    000017ba: 	movq	%rbp, 0x80(%rsp)
    000017c2: 	movq	%r15, %rax
    000017c5: 	addq	%r14, %rax
    000017c8: 	je	.Ltmp7305 # Offset: 6088
    000017ca: 	testq	%r15, %r15
    000017cd: 	je	.Ltmp7306 # Offset: 6093
.Ltmp7305:
    000017d3: 	movq	%r14, 0x58(%rsp)
    000017d8: 	cmpq	$0xf, %r14
    000017dc: 	ja	.Ltmp7307 # Offset: 6108
    000017e2: 	cmpq	$0x1, %r14
    000017e6: 	jne	.Ltmp7308 # Offset: 6118
    000017ec: 	movzbl	(%r15), %eax
    000017f0: 	movb	%al, 0x90(%rsp)
    000017f7: 	movq	%rbp, %rax
.Ltmp7372:
    000017fa: 	movq	%r14, 0x88(%rsp)
    00001802: 	movb	$0x0, (%rax,%r14)
    00001807: 	movabsq	$0x3fffffffffffffff, %rax
    00001811: 	subq	0x88(%rsp), %rax
    00001819: 	cmpq	$0x13, %rax
    0000181d: 	jbe	.Ltmp7309 # Offset: 6173
    00001823: 	movl	$0x14, %edx
    00001828: 	leaq	DATAat0x57b60(%rip), %rsi
    0000182f: 	movq	%r13, %rdi
    00001832: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 6194
    00001837: 	callq	clock@PLT # Offset: 6199
    0000183c: 	movq	%r13, %rsi
    0000183f: 	movq	%r12, %rdi
    00001842: 	movq	%rax, start_time(%rip)
    00001849: 	callq	"_Z18test_loopstep_mul1Im11shift_rightImLi2EEEvPKT_mmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0.constprop.0/1" # Offset: 6217
    0000184e: 	movq	0x80(%rsp), %rdi
    00001856: 	cmpq	%rbp, %rdi
    00001859: 	je	.Ltmp7310 # Offset: 6233
    0000185b: 	movq	0x90(%rsp), %rax
    00001863: 	leaq	0x1(%rax), %rsi
    00001867: 	callq	_ZdlPvm@PLT # Offset: 6247
.Ltmp7310:
    0000186c: 	movq	0x60(%rsp), %r14
    00001871: 	movq	0x68(%rsp), %r12
    00001876: 	movq	%rbp, 0x80(%rsp)
    0000187e: 	movq	%r14, %rax
    00001881: 	addq	%r12, %rax
    00001884: 	je	.Ltmp7311 # Offset: 6276
    00001886: 	testq	%r14, %r14
    00001889: 	je	.Ltmp7312 # Offset: 6281
.Ltmp7311:
    0000188f: 	movq	%r12, 0x58(%rsp)
    00001894: 	cmpq	$0xf, %r12
    00001898: 	ja	.Ltmp7313 # Offset: 6296
    0000189e: 	cmpq	$0x1, %r12
    000018a2: 	jne	.Ltmp7314 # Offset: 6306
    000018a8: 	movzbl	(%r14), %eax
    000018ac: 	movb	%al, 0x90(%rsp)
    000018b3: 	movq	%rbp, %rax
.Ltmp7378:
    000018b6: 	movq	%r12, 0x88(%rsp)
    000018be: 	movb	$0x0, (%rax,%r12)
    000018c3: 	movabsq	$0x3fffffffffffffff, %rax
    000018cd: 	subq	0x88(%rsp), %rax
    000018d5: 	cmpq	$0x13, %rax
    000018d9: 	jbe	.Ltmp7315 # Offset: 6361
    000018df: 	movl	$0x14, %edx
    000018e4: 	leaq	DATAat0x57b75(%rip), %rsi
    000018eb: 	movq	%r13, %rdi
    000018ee: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 6382
    000018f3: 	callq	clock@PLT # Offset: 6387
    000018f8: 	movl	iterations(%rip), %esi
    000018fe: 	xorl	%ebx, %ebx
    00001900: 	movabsq	$-0x8000000000000000, %r12
    0000190a: 	movq	%rax, start_time(%rip)
    00001911: 	leaq	DATAat0x571d0(%rip), %r14
    00001918: 	testl	%esi, %esi
    0000191a: 	je	.Ltmp7316 # Offset: 6426
.Ltmp7320:
    00001920: 	movl	$0x1, %eax
    00001925: 	xorl	%ecx, %ecx
    00001927: 	nopw	(%rax,%rax) # Size: 9
.Ltmp7317:
    00001930: 	movq	%rax, %rdx
    00001933: 	addq	$0x4, %rax
    00001937: 	shrq	$0x2, %rdx
    0000193b: 	addq	0xa0(%rsp,%rdx,8), %rcx
    00001943: 	movq	%rcx, %rdx
    00001946: 	cmpq	$0x7d01, %rax
    0000194c: 	jne	.Ltmp7317 # Offset: 6476
    0000194e: 	movsd	init_value(%rip), %xmm0
    00001956: 	comisd	DATAat0x57bd8(%rip), %xmm0
    0000195e: 	jae	.Ltmp7318 # Offset: 6494
    00001964: 	cvttsd2si	%xmm0, %rax
.Ltmp7352:
    00001969: 	imulq	$0x1f40, %rax, %rax
    00001970: 	cmpq	%rax, %rdx
    00001973: 	je	.Ltmp7319 # Offset: 6515
    00001975: 	movl	current_test(%rip), %edx
    0000197b: 	movq	%r14, %rsi
    0000197e: 	movl	$0x1, %edi
    00001983: 	xorl	%eax, %eax
    00001985: 	callq	__printf_chk@PLT # Offset: 6533
    0000198a: 	movl	iterations(%rip), %esi
.Ltmp7319:
    00001990: 	addq	$0x1, %rbx
    00001994: 	movslq	%esi, %rax
    00001997: 	cmpq	%rax, %rbx
    0000199a: 	jb	.Ltmp7320 # Offset: 6554
.Ltmp7316:
    0000199c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000019a3: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000019aa: 	subq	$0x20, %rax
    000019ae: 	cmpq	%rax, %rbx
    000019b1: 	je	.Ltmp7321 # Offset: 6577
    000019b7: 	leaq	0x10(%rbx), %rdi
    000019bb: 	movq	0x88(%rsp), %r12
    000019c3: 	movq	%rdi, (%rbx)
    000019c6: 	movq	0x80(%rsp), %r14
    000019ce: 	movq	%r14, %rax
    000019d1: 	addq	%r12, %rax
    000019d4: 	je	.Ltmp7322 # Offset: 6612
    000019d6: 	testq	%r14, %r14
    000019d9: 	je	.Ltmp7323 # Offset: 6617
.Ltmp7322:
    000019df: 	movq	%r12, 0x58(%rsp)
    000019e4: 	cmpq	$0xf, %r12
    000019e8: 	ja	.Ltmp7324 # Offset: 6632
    000019ee: 	cmpq	$0x1, %r12
    000019f2: 	jne	.Ltmp7325 # Offset: 6642
    000019f8: 	movzbl	(%r14), %eax
    000019fc: 	movb	%al, 0x10(%rbx)
.Ltmp7397:
    000019ff: 	movq	%r12, 0x8(%rbx)
    00001a03: 	movb	$0x0, (%rdi,%r12)
    00001a08: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a0f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a16: 	addq	$0x20, %rax
    00001a1a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001a21: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001a28: 	je	.Ltmp7326 # Offset: 6696
.Ltmp7396:
    00001a2e: 	movq	-0x20(%rax), %r12
    00001a32: 	callq	clock@PLT # Offset: 6706
    00001a37: 	pxor	%xmm0, %xmm0
    00001a3b: 	movq	%rax, end_time(%rip)
    00001a42: 	movq	%r12, %rdi
    00001a45: 	subq	start_time(%rip), %rax
    00001a4c: 	cvtsi2sd	%rax, %xmm0
    00001a51: 	divsd	DATAat0x57bc8(%rip), %xmm0
    00001a59: 	callq	_Z13record_resultdPKc # Offset: 6745
    00001a5e: 	movq	0x80(%rsp), %rdi
    00001a66: 	cmpq	%rbp, %rdi
    00001a69: 	je	.Ltmp7327 # Offset: 6761
    00001a6b: 	movq	0x90(%rsp), %rax
    00001a73: 	leaq	0x1(%rax), %rsi
    00001a77: 	callq	_ZdlPvm@PLT # Offset: 6775
.Ltmp7327:
    00001a7c: 	movq	0x60(%rsp), %r14
    00001a81: 	movq	0x68(%rsp), %r12
    00001a86: 	movq	%rbp, 0x80(%rsp)
    00001a8e: 	movq	%r14, %rax
    00001a91: 	addq	%r12, %rax
    00001a94: 	je	.Ltmp7328 # Offset: 6804
    00001a96: 	testq	%r14, %r14
    00001a99: 	je	.Ltmp7329 # Offset: 6809
.Ltmp7328:
    00001a9f: 	movq	%r12, 0x58(%rsp)
    00001aa4: 	cmpq	$0xf, %r12
    00001aa8: 	ja	.Ltmp7330 # Offset: 6824
    00001aae: 	cmpq	$0x1, %r12
    00001ab2: 	jne	.Ltmp7331 # Offset: 6834
    00001ab8: 	movzbl	(%r14), %eax
    00001abc: 	movb	%al, 0x90(%rsp)
    00001ac3: 	movq	%rbp, %rax
.Ltmp7376:
    00001ac6: 	movq	%r12, 0x88(%rsp)
    00001ace: 	movb	$0x0, (%rax,%r12)
    00001ad3: 	movabsq	$0x3fffffffffffffff, %rax
    00001add: 	subq	0x88(%rsp), %rax
    00001ae5: 	cmpq	$0x21, %rax
    00001ae9: 	jbe	.Ltmp7332 # Offset: 6889
    00001aef: 	movl	$0x22, %edx
    00001af4: 	leaq	DATAat0x57b90(%rip), %rsi
    00001afb: 	movq	%r13, %rdi
    00001afe: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 6910
    00001b03: 	movl	iterations(%rip), %edx
    00001b09: 	xorl	%r8d, %r8d
    00001b0c: 	xorl	%ecx, %ecx
    00001b0e: 	movl	$0x1f40, %esi
    00001b13: 	movq	0x80(%rsp), %rdi
    00001b1b: 	callq	_Z9summarizePKciiii # Offset: 6939
    00001b20: 	movl	0x8(%rsp), %eax
    00001b24: 	movq	0x80(%rsp), %rdi
    00001b2c: 	movl	%eax, iterations(%rip)
    00001b32: 	cmpq	%rbp, %rdi
    00001b35: 	je	.Ltmp7333 # Offset: 6965
    00001b37: 	movq	0x90(%rsp), %rax
    00001b3f: 	leaq	0x1(%rax), %rsi
    00001b43: 	callq	_ZdlPvm@PLT # Offset: 6979
.Ltmp7333:
    00001b48: 	movq	0x60(%rsp), %rdi
    00001b4d: 	cmpq	0x40(%rsp), %rdi
    00001b52: 	je	.Ltmp7334 # Offset: 6994
    00001b54: 	movq	0x70(%rsp), %rax
    00001b59: 	leaq	0x1(%rax), %rsi
    00001b5d: 	callq	_ZdlPvm@PLT # Offset: 7005
.Ltmp7334:
    00001b62: 	movq	0xfaa8(%rsp), %rax
    00001b6a: 	subq	%fs:0x28, %rax
    00001b73: 	jne	.Ltmp7335 # Offset: 7027
    00001b79: 	addq	$0xfab8, %rsp
    00001b80: 	popq	%rbx
    00001b81: 	popq	%rbp
    00001b82: 	popq	%r12
    00001b84: 	popq	%r13
    00001b86: 	popq	%r14
    00001b88: 	popq	%r15
    00001b8a: 	retq # Offset: 7050
    00001b8b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp7337:
    00001b90: 	addq	$0x20, %rbp
.Ltmp7118:
    00001b94: 	cmpq	%rbp, 0x10(%rsp)
    00001b99: 	je	.Ltmp7336 # Offset: 7065
.Ltmp7338:
    00001b9f: 	movq	(%rbp), %rdi
    00001ba3: 	leaq	0x10(%rbp), %rax
    00001ba7: 	cmpq	%rax, %rdi
    00001baa: 	je	.Ltmp7337 # Offset: 7082
    00001bac: 	movq	0x10(%rbp), %rax
    00001bb0: 	addq	$0x20, %rbp
    00001bb4: 	leaq	0x1(%rax), %rsi
    00001bb8: 	callq	_ZdlPvm@PLT # Offset: 7096
    00001bbd: 	cmpq	%rbp, 0x10(%rsp)
    00001bc2: 	jne	.Ltmp7338 # Offset: 7106
    00001bc4: 	jmp	.Ltmp7336 # Offset: 7108
    00001bc9: 	nopl	(%rax) # Size: 7
.Ltmp7115:
    00001bd0: 	addq	$0x20, %r15
    00001bd4: 	cmpq	%rbx, %r15
    00001bd7: 	jne	.Ltmp7116 # Offset: 7127
    00001bdd: 	addq	$0x8, %r13
    00001be1: 	cmpq	%r13, 0x8(%rsp)
    00001be6: 	ja	.Ltmp7117 # Offset: 7142
    00001bec: 	jmp	.Ltmp7114 # Offset: 7148
.Ltmp7127:
    00001bf1: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00001bf9: 	cvttsd2si	%xmm0, %rax
    00001bfe: 	btcq	$0x3f, %rax
    00001c03: 	jmp	.Ltmp7339 # Offset: 7171
.Ltmp7132:
    00001c08: 	testq	%r13, %r13
    00001c0b: 	jne	.Ltmp7340 # Offset: 7179
    00001c11: 	movq	%rbp, %rax
    00001c14: 	jmp	.Ltmp7341 # Offset: 7188
    00001c19: 	nopl	(%rax) # Size: 7
.Ltmp7136:
    00001c20: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00001c28: 	movabsq	$-0x8000000000000000, %rdi
    00001c32: 	cvttsd2si	%xmm1, %rax
    00001c37: 	xorq	%rdi, %rax
    00001c3a: 	jmp	.Ltmp7342 # Offset: 7226
    00001c3f: 	nop # Size: 1
.Ltmp7153:
    00001c40: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00001c48: 	movabsq	$-0x8000000000000000, %rdi
    00001c52: 	cvttsd2si	%xmm1, %rax
    00001c57: 	xorq	%rdi, %rax
    00001c5a: 	jmp	.Ltmp7343 # Offset: 7258
    00001c5f: 	nop # Size: 1
.Ltmp7170:
    00001c60: 	subsd	DATAat0x57bd8(%rip), %xmm1
    00001c68: 	movabsq	$-0x8000000000000000, %rdi
    00001c72: 	cvttsd2si	%xmm1, %rax
    00001c77: 	xorq	%rdi, %rax
    00001c7a: 	jmp	.Ltmp7344 # Offset: 7290
    00001c7f: 	nop # Size: 1
.Ltmp7187:
    00001c80: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00001c88: 	movabsq	$-0x8000000000000000, %rsi
    00001c92: 	cvttsd2si	%xmm0, %rdx
    00001c97: 	xorq	%rsi, %rdx
    00001c9a: 	jmp	.Ltmp7345 # Offset: 7322
    00001c9f: 	nop # Size: 1
.Ltmp7204:
    00001ca0: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00001ca8: 	movabsq	$-0x8000000000000000, %rsi
    00001cb2: 	cvttsd2si	%xmm0, %rdx
    00001cb7: 	xorq	%rsi, %rdx
    00001cba: 	jmp	.Ltmp7346 # Offset: 7354
    00001cbf: 	nop # Size: 1
.Ltmp7238:
    00001cc0: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00001cc8: 	movabsq	$-0x8000000000000000, %rsi
    00001cd2: 	cvttsd2si	%xmm0, %rdx
    00001cd7: 	xorq	%rsi, %rdx
    00001cda: 	jmp	.Ltmp7347 # Offset: 7386
    00001cdf: 	nop # Size: 1
.Ltmp7221:
    00001ce0: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00001ce8: 	movabsq	$-0x8000000000000000, %rsi
    00001cf2: 	cvttsd2si	%xmm0, %rdx
    00001cf7: 	xorq	%rsi, %rdx
    00001cfa: 	jmp	.Ltmp7348 # Offset: 7418
    00001cff: 	nop # Size: 1
.Ltmp7289:
    00001d00: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00001d08: 	cvttsd2si	%xmm0, %rax
    00001d0d: 	xorq	%r15, %rax
    00001d10: 	jmp	.Ltmp7349 # Offset: 7440
    00001d15: 	nopl	(%rax) # Size: 3
.Ltmp7255:
    00001d18: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00001d20: 	cvttsd2si	%xmm0, %rax
    00001d25: 	xorq	%r15, %rax
    00001d28: 	jmp	.Ltmp7350 # Offset: 7464
    00001d2d: 	nopl	(%rax) # Size: 3
.Ltmp7272:
    00001d30: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00001d38: 	cvttsd2si	%xmm0, %rax
    00001d3d: 	xorq	%r15, %rax
    00001d40: 	jmp	.Ltmp7351 # Offset: 7488
    00001d45: 	nopl	(%rax) # Size: 3
.Ltmp7318:
    00001d48: 	subsd	DATAat0x57bd8(%rip), %xmm0
    00001d50: 	cvttsd2si	%xmm0, %rax
    00001d55: 	xorq	%r12, %rax
    00001d58: 	jmp	.Ltmp7352 # Offset: 7512
.Ltmp7200:
    00001d5d: 	testq	%r14, %r14
    00001d60: 	jne	.Ltmp7353 # Offset: 7520
    00001d66: 	movq	%rbp, %rax
    00001d69: 	jmp	.Ltmp7354 # Offset: 7529
.Ltmp7217:
    00001d6e: 	testq	%r14, %r14
    00001d71: 	jne	.Ltmp7355 # Offset: 7537
    00001d77: 	movq	%rbp, %rax
    00001d7a: 	jmp	.Ltmp7356 # Offset: 7546
.Ltmp7268:
    00001d7f: 	testq	%r14, %r14
    00001d82: 	jne	.Ltmp7357 # Offset: 7554
    00001d88: 	movq	%rbp, %rax
    00001d8b: 	jmp	.Ltmp7358 # Offset: 7563
.Ltmp7285:
    00001d90: 	testq	%r14, %r14
    00001d93: 	jne	.Ltmp7359 # Offset: 7571
    00001d99: 	movq	%rbp, %rax
    00001d9c: 	jmp	.Ltmp7360 # Offset: 7580
.Ltmp7166:
    00001da1: 	testq	%r14, %r14
    00001da4: 	jne	.Ltmp7361 # Offset: 7588
    00001daa: 	movq	%rbp, %rax
    00001dad: 	jmp	.Ltmp7362 # Offset: 7597
.Ltmp7149:
    00001db2: 	testq	%r14, %r14
    00001db5: 	jne	.Ltmp7363 # Offset: 7605
    00001dbb: 	movq	%rbp, %rax
    00001dbe: 	jmp	.Ltmp7364 # Offset: 7614
.Ltmp7251:
    00001dc3: 	testq	%r14, %r14
    00001dc6: 	jne	.Ltmp7365 # Offset: 7622
    00001dcc: 	movq	%rbp, %rax
    00001dcf: 	jmp	.Ltmp7366 # Offset: 7631
.Ltmp7234:
    00001dd4: 	testq	%r14, %r14
    00001dd7: 	jne	.Ltmp7367 # Offset: 7639
    00001ddd: 	movq	%rbp, %rax
    00001de0: 	jmp	.Ltmp7368 # Offset: 7648
.Ltmp7183:
    00001de5: 	testq	%r14, %r14
    00001de8: 	jne	.Ltmp7369 # Offset: 7656
    00001dee: 	movq	%rbp, %rax
    00001df1: 	jmp	.Ltmp7370 # Offset: 7665
.Ltmp7308:
    00001df6: 	testq	%r14, %r14
    00001df9: 	jne	.Ltmp7371 # Offset: 7673
    00001dff: 	movq	%rbp, %rax
    00001e02: 	jmp	.Ltmp7372 # Offset: 7682
.Ltmp7302:
    00001e07: 	testq	%r14, %r14
    00001e0a: 	jne	.Ltmp7373 # Offset: 7690
    00001e10: 	movq	%rbp, %rax
    00001e13: 	jmp	.Ltmp7374 # Offset: 7699
.Ltmp7331:
    00001e18: 	testq	%r12, %r12
    00001e1b: 	jne	.Ltmp7375 # Offset: 7707
    00001e21: 	movq	%rbp, %rax
    00001e24: 	jmp	.Ltmp7376 # Offset: 7716
.Ltmp7314:
    00001e29: 	testq	%r12, %r12
    00001e2c: 	jne	.Ltmp7377 # Offset: 7724
    00001e32: 	movq	%rbp, %rax
    00001e35: 	jmp	.Ltmp7378 # Offset: 7733
.Ltmp7313:
    00001e3a: 	leaq	0x58(%rsp), %rsi
    00001e3f: 	xorl	%edx, %edx
    00001e41: 	movq	%r13, %rdi
    00001e44: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7748
    00001e49: 	movq	%rax, 0x80(%rsp)
    00001e51: 	movq	%rax, %rdi
    00001e54: 	movq	0x58(%rsp), %rax
    00001e59: 	movq	%rax, 0x90(%rsp)
.Ltmp7432:
    00001e61: 	movq	%r12, %rdx
    00001e64: 	movq	%r14, %rsi
    00001e67: 	callq	memcpy@PLT # Offset: 7783
    00001e6c: 	movq	0x58(%rsp), %r12
    00001e71: 	movq	0x80(%rsp), %rax
    00001e79: 	jmp	.Ltmp7378 # Offset: 7801
.Ltmp7131:
    00001e7e: 	leaq	0x58(%rsp), %rsi
    00001e83: 	leaq	0x80(%rsp), %rdi
    00001e8b: 	xorl	%edx, %edx
    00001e8d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7821
    00001e92: 	movq	%rax, 0x80(%rsp)
    00001e9a: 	movq	%rax, %rdi
    00001e9d: 	movq	0x58(%rsp), %rax
    00001ea2: 	movq	%rax, 0x90(%rsp)
.Ltmp7419:
    00001eaa: 	movq	%r13, %rdx
    00001ead: 	movq	%r14, %rsi
    00001eb0: 	callq	memcpy@PLT # Offset: 7856
    00001eb5: 	movq	0x58(%rsp), %r13
    00001eba: 	movq	0x80(%rsp), %rax
    00001ec2: 	jmp	.Ltmp7341 # Offset: 7874
.Ltmp7301:
    00001ec7: 	leaq	0x58(%rsp), %rsi
    00001ecc: 	xorl	%edx, %edx
    00001ece: 	movq	%r13, %rdi
    00001ed1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7889
    00001ed6: 	movq	%rax, 0x80(%rsp)
    00001ede: 	movq	%rax, %rdi
    00001ee1: 	movq	0x58(%rsp), %rax
    00001ee6: 	movq	%rax, 0x90(%rsp)
.Ltmp7430:
    00001eee: 	movq	%r14, %rdx
    00001ef1: 	movq	%r15, %rsi
    00001ef4: 	callq	memcpy@PLT # Offset: 7924
    00001ef9: 	movq	0x58(%rsp), %r14
    00001efe: 	movq	0x80(%rsp), %rax
    00001f06: 	jmp	.Ltmp7374 # Offset: 7942
.Ltmp7330:
    00001f0b: 	leaq	0x58(%rsp), %rsi
    00001f10: 	xorl	%edx, %edx
    00001f12: 	movq	%r13, %rdi
    00001f15: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7957
    00001f1a: 	movq	%rax, 0x80(%rsp)
    00001f22: 	movq	%rax, %rdi
    00001f25: 	movq	0x58(%rsp), %rax
    00001f2a: 	movq	%rax, 0x90(%rsp)
.Ltmp7431:
    00001f32: 	movq	%r12, %rdx
    00001f35: 	movq	%r14, %rsi
    00001f38: 	callq	memcpy@PLT # Offset: 7992
    00001f3d: 	movq	0x58(%rsp), %r12
    00001f42: 	movq	0x80(%rsp), %rax
    00001f4a: 	jmp	.Ltmp7376 # Offset: 8010
.Ltmp7182:
    00001f4f: 	leaq	0x58(%rsp), %rsi
    00001f54: 	xorl	%edx, %edx
    00001f56: 	movq	%r13, %rdi
    00001f59: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8025
    00001f5e: 	movq	%rax, 0x80(%rsp)
    00001f66: 	movq	%rax, %rdi
    00001f69: 	movq	0x58(%rsp), %rax
    00001f6e: 	movq	%rax, 0x90(%rsp)
.Ltmp7428:
    00001f76: 	movq	%r14, %rdx
    00001f79: 	movq	%r15, %rsi
    00001f7c: 	callq	memcpy@PLT # Offset: 8060
    00001f81: 	movq	0x58(%rsp), %r14
    00001f86: 	movq	0x80(%rsp), %rax
    00001f8e: 	jmp	.Ltmp7370 # Offset: 8078
.Ltmp7307:
    00001f93: 	leaq	0x58(%rsp), %rsi
    00001f98: 	xorl	%edx, %edx
    00001f9a: 	movq	%r13, %rdi
    00001f9d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8093
    00001fa2: 	movq	%rax, 0x80(%rsp)
    00001faa: 	movq	%rax, %rdi
    00001fad: 	movq	0x58(%rsp), %rax
    00001fb2: 	movq	%rax, 0x90(%rsp)
.Ltmp7429:
    00001fba: 	movq	%r14, %rdx
    00001fbd: 	movq	%r15, %rsi
    00001fc0: 	callq	memcpy@PLT # Offset: 8128
    00001fc5: 	movq	0x58(%rsp), %r14
    00001fca: 	movq	0x80(%rsp), %rax
    00001fd2: 	jmp	.Ltmp7372 # Offset: 8146
.Ltmp7250:
    00001fd7: 	leaq	0x58(%rsp), %rsi
    00001fdc: 	xorl	%edx, %edx
    00001fde: 	movq	%r13, %rdi
    00001fe1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8161
    00001fe6: 	movq	%rax, 0x80(%rsp)
    00001fee: 	movq	%rax, %rdi
    00001ff1: 	movq	0x58(%rsp), %rax
    00001ff6: 	movq	%rax, 0x90(%rsp)
.Ltmp7426:
    00001ffe: 	movq	%r14, %rdx
    00002001: 	movq	%r15, %rsi
    00002004: 	callq	memcpy@PLT # Offset: 8196
    00002009: 	movq	0x58(%rsp), %r14
    0000200e: 	movq	0x80(%rsp), %rax
    00002016: 	jmp	.Ltmp7366 # Offset: 8214
.Ltmp7233:
    0000201b: 	leaq	0x58(%rsp), %rsi
    00002020: 	xorl	%edx, %edx
    00002022: 	movq	%r13, %rdi
    00002025: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8229
    0000202a: 	movq	%rax, 0x80(%rsp)
    00002032: 	movq	%rax, %rdi
    00002035: 	movq	0x58(%rsp), %rax
    0000203a: 	movq	%rax, 0x90(%rsp)
.Ltmp7427:
    00002042: 	movq	%r14, %rdx
    00002045: 	movq	%r15, %rsi
    00002048: 	callq	memcpy@PLT # Offset: 8264
    0000204d: 	movq	0x58(%rsp), %r14
    00002052: 	movq	0x80(%rsp), %rax
    0000205a: 	jmp	.Ltmp7368 # Offset: 8282
.Ltmp7165:
    0000205f: 	leaq	0x58(%rsp), %rsi
    00002064: 	xorl	%edx, %edx
    00002066: 	movq	%r13, %rdi
    00002069: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8297
    0000206e: 	movq	%rax, 0x80(%rsp)
    00002076: 	movq	%rax, %rdi
    00002079: 	movq	0x58(%rsp), %rax
    0000207e: 	movq	%rax, 0x90(%rsp)
.Ltmp7424:
    00002086: 	movq	%r14, %rdx
    00002089: 	movq	%r15, %rsi
    0000208c: 	callq	memcpy@PLT # Offset: 8332
    00002091: 	movq	0x58(%rsp), %r14
    00002096: 	movq	0x80(%rsp), %rax
    0000209e: 	jmp	.Ltmp7362 # Offset: 8350
.Ltmp7148:
    000020a3: 	leaq	0x58(%rsp), %rsi
    000020a8: 	xorl	%edx, %edx
    000020aa: 	movq	%r13, %rdi
    000020ad: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8365
    000020b2: 	movq	%rax, 0x80(%rsp)
    000020ba: 	movq	%rax, %rdi
    000020bd: 	movq	0x58(%rsp), %rax
    000020c2: 	movq	%rax, 0x90(%rsp)
.Ltmp7425:
    000020ca: 	movq	%r14, %rdx
    000020cd: 	movq	%r15, %rsi
    000020d0: 	callq	memcpy@PLT # Offset: 8400
    000020d5: 	movq	0x58(%rsp), %r14
    000020da: 	movq	0x80(%rsp), %rax
    000020e2: 	jmp	.Ltmp7364 # Offset: 8418
.Ltmp7284:
    000020e7: 	leaq	0x58(%rsp), %rsi
    000020ec: 	xorl	%edx, %edx
    000020ee: 	movq	%r13, %rdi
    000020f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8433
    000020f6: 	movq	%rax, 0x80(%rsp)
    000020fe: 	movq	%rax, %rdi
    00002101: 	movq	0x58(%rsp), %rax
    00002106: 	movq	%rax, 0x90(%rsp)
.Ltmp7423:
    0000210e: 	movq	%r14, %rdx
    00002111: 	movq	%r15, %rsi
    00002114: 	callq	memcpy@PLT # Offset: 8468
    00002119: 	movq	0x58(%rsp), %r14
    0000211e: 	movq	0x80(%rsp), %rax
    00002126: 	jmp	.Ltmp7360 # Offset: 8486
.Ltmp7199:
    0000212b: 	leaq	0x58(%rsp), %rsi
    00002130: 	xorl	%edx, %edx
    00002132: 	movq	%r13, %rdi
    00002135: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8501
    0000213a: 	movq	%rax, 0x80(%rsp)
    00002142: 	movq	%rax, %rdi
    00002145: 	movq	0x58(%rsp), %rax
    0000214a: 	movq	%rax, 0x90(%rsp)
.Ltmp7420:
    00002152: 	movq	%r14, %rdx
    00002155: 	movq	%r15, %rsi
    00002158: 	callq	memcpy@PLT # Offset: 8536
    0000215d: 	movq	0x58(%rsp), %r14
    00002162: 	movq	0x80(%rsp), %rax
    0000216a: 	jmp	.Ltmp7354 # Offset: 8554
.Ltmp7216:
    0000216f: 	leaq	0x58(%rsp), %rsi
    00002174: 	xorl	%edx, %edx
    00002176: 	movq	%r13, %rdi
    00002179: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8569
    0000217e: 	movq	%rax, 0x80(%rsp)
    00002186: 	movq	%rax, %rdi
    00002189: 	movq	0x58(%rsp), %rax
    0000218e: 	movq	%rax, 0x90(%rsp)
.Ltmp7421:
    00002196: 	movq	%r14, %rdx
    00002199: 	movq	%r15, %rsi
    0000219c: 	callq	memcpy@PLT # Offset: 8604
    000021a1: 	movq	0x58(%rsp), %r14
    000021a6: 	movq	0x80(%rsp), %rax
    000021ae: 	jmp	.Ltmp7356 # Offset: 8622
.Ltmp7267:
    000021b3: 	leaq	0x58(%rsp), %rsi
    000021b8: 	xorl	%edx, %edx
    000021ba: 	movq	%r13, %rdi
    000021bd: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8637
    000021c2: 	movq	%rax, 0x80(%rsp)
    000021ca: 	movq	%rax, %rdi
    000021cd: 	movq	0x58(%rsp), %rax
    000021d2: 	movq	%rax, 0x90(%rsp)
.Ltmp7422:
    000021da: 	movq	%r14, %rdx
    000021dd: 	movq	%r15, %rsi
    000021e0: 	callq	memcpy@PLT # Offset: 8672
    000021e5: 	movq	0x58(%rsp), %r14
    000021ea: 	movq	0x80(%rsp), %rax
    000021f2: 	jmp	.Ltmp7358 # Offset: 8690
.Ltmp7263:
    000021f7: 	movq	-0x8(%rdx), %rax
    000021fb: 	addq	$0x200, %rax
    00002201: 	jmp	.Ltmp7379 # Offset: 8705
.Ltmp7173:
    00002206: 	movq	%r13, %rsi
    00002209: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002210: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8720
    00002215: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000221c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002223: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000222a: 	jne	.Ltmp7380 # Offset: 8746
.Ltmp7178:
    00002230: 	movq	-0x8(%rdx), %rax
    00002234: 	addq	$0x200, %rax
    0000223a: 	jmp	.Ltmp7380 # Offset: 8762
.Ltmp7258:
    0000223f: 	movq	%r13, %rsi
    00002242: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002249: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8777
    0000224e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002255: 	jmp	.Ltmp7381 # Offset: 8789
.Ltmp7241:
    0000225a: 	movq	%r13, %rsi
    0000225d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002264: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8804
    00002269: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002270: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002277: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000227e: 	jne	.Ltmp7382 # Offset: 8830
.Ltmp7246:
    00002284: 	movq	-0x8(%rdx), %rax
    00002288: 	addq	$0x200, %rax
    0000228e: 	jmp	.Ltmp7382 # Offset: 8846
.Ltmp7156:
    00002293: 	movq	%r13, %rsi
    00002296: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000229d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8861
    000022a2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000022a9: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000022b0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000022b7: 	jne	.Ltmp7383 # Offset: 8887
.Ltmp7161:
    000022bd: 	movq	-0x8(%rdx), %rax
    000022c1: 	addq	$0x200, %rax
    000022c7: 	jmp	.Ltmp7383 # Offset: 8903
.Ltmp7280:
    000022cc: 	movq	-0x8(%rdx), %rax
    000022d0: 	addq	$0x200, %rax
    000022d6: 	jmp	.Ltmp7384 # Offset: 8918
.Ltmp7275:
    000022db: 	movq	%r13, %rsi
    000022de: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000022e5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8933
    000022ea: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000022f1: 	jmp	.Ltmp7385 # Offset: 8945
.Ltmp7297:
    000022f6: 	movq	-0x8(%rdx), %rax
    000022fa: 	addq	$0x200, %rax
    00002300: 	jmp	.Ltmp7386 # Offset: 8960
.Ltmp7292:
    00002305: 	movq	%r13, %rsi
    00002308: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000230f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8975
    00002314: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000231b: 	jmp	.Ltmp7387 # Offset: 8987
.Ltmp7144:
    00002320: 	movq	-0x8(%rdx), %rax
    00002324: 	addq	$0x200, %rax
    0000232a: 	jmp	.Ltmp7388 # Offset: 9002
.Ltmp7139:
    0000232f: 	movq	%r13, %rsi
    00002332: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002339: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9017
    0000233e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002345: 	jmp	.Ltmp7389 # Offset: 9029
.Ltmp7195:
    0000234a: 	movq	-0x8(%rdx), %rax
    0000234e: 	addq	$0x200, %rax
    00002354: 	jmp	.Ltmp7390 # Offset: 9044
.Ltmp7190:
    00002359: 	movq	%r13, %rsi
    0000235c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002363: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9059
    00002368: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000236f: 	jmp	.Ltmp7391 # Offset: 9071
.Ltmp7229:
    00002374: 	movq	-0x8(%rdx), %rax
    00002378: 	addq	$0x200, %rax
    0000237e: 	jmp	.Ltmp7392 # Offset: 9086
.Ltmp7224:
    00002383: 	movq	%r13, %rsi
    00002386: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000238d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9101
    00002392: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002399: 	jmp	.Ltmp7393 # Offset: 9113
.Ltmp7212:
    0000239e: 	movq	-0x8(%rdx), %rax
    000023a2: 	addq	$0x200, %rax
    000023a8: 	jmp	.Ltmp7394 # Offset: 9128
.Ltmp7207:
    000023ad: 	movq	%r13, %rsi
    000023b0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000023b7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9143
    000023bc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023c3: 	jmp	.Ltmp7395 # Offset: 9155
.Ltmp7321:
    000023c8: 	movq	%r13, %rsi
    000023cb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000023d2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9170
    000023d7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023de: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000023e5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000023ec: 	jne	.Ltmp7396 # Offset: 9196
.Ltmp7326:
    000023f2: 	movq	-0x8(%rdx), %rax
    000023f6: 	addq	$0x200, %rax
    000023fc: 	jmp	.Ltmp7396 # Offset: 9212
.Ltmp7325:
    00002401: 	testq	%r12, %r12
    00002404: 	je	.Ltmp7397 # Offset: 9220
    0000240a: 	jmp	.Ltmp7398 # Offset: 9226
    0000240f: 	nop # Size: 1
.Ltmp7279:
    00002410: 	testq	%r14, %r14
    00002413: 	je	.Ltmp7399 # Offset: 9235
    00002419: 	jmp	.Ltmp7400 # Offset: 9241
    0000241e: 	nop # Size: 2
.Ltmp7262:
    00002420: 	testq	%r14, %r14
    00002423: 	je	.Ltmp7401 # Offset: 9251
    00002429: 	jmp	.Ltmp7402 # Offset: 9257
    0000242e: 	nop # Size: 2
.Ltmp7245:
    00002430: 	testq	%r14, %r14
    00002433: 	je	.Ltmp7403 # Offset: 9267
    00002439: 	jmp	.Ltmp7404 # Offset: 9273
    0000243e: 	nop # Size: 2
.Ltmp7177:
    00002440: 	testq	%r14, %r14
    00002443: 	je	.Ltmp7405 # Offset: 9283
    00002449: 	jmp	.Ltmp7406 # Offset: 9289
    0000244e: 	nop # Size: 2
.Ltmp7194:
    00002450: 	testq	%r14, %r14
    00002453: 	je	.Ltmp7407 # Offset: 9299
.Ltmp7417:
    00002459: 	movq	%r14, %rdx
    0000245c: 	movq	%r15, %rsi
    0000245f: 	callq	memcpy@PLT # Offset: 9311
    00002464: 	movq	0x58(%rsp), %r14
    00002469: 	movq	(%rbx), %rdi
    0000246c: 	jmp	.Ltmp7407 # Offset: 9324
.Ltmp7296:
    00002471: 	testq	%r14, %r14
    00002474: 	je	.Ltmp7408 # Offset: 9332
    0000247a: 	jmp	.Ltmp7409 # Offset: 9338
    0000247f: 	nop # Size: 1
.Ltmp7211:
    00002480: 	testq	%r14, %r14
    00002483: 	je	.Ltmp7410 # Offset: 9347
    00002489: 	jmp	.Ltmp7411 # Offset: 9353
    0000248e: 	nop # Size: 2
.Ltmp7143:
    00002490: 	testq	%r15, %r15
    00002493: 	je	.Ltmp7412 # Offset: 9363
    00002499: 	jmp	.Ltmp7413 # Offset: 9369
    0000249e: 	nop # Size: 2
.Ltmp7160:
    000024a0: 	testq	%r15, %r15
    000024a3: 	je	.Ltmp7414 # Offset: 9379
.Ltmp7416:
    000024a9: 	movq	0x10(%rsp), %rsi
    000024ae: 	movq	%r15, %rdx
    000024b1: 	callq	memcpy@PLT # Offset: 9393
    000024b6: 	movq	0x58(%rsp), %r15
    000024bb: 	movq	(%r14), %rdi
    000024be: 	jmp	.Ltmp7414 # Offset: 9406
.Ltmp7228:
    000024c3: 	testq	%r14, %r14
    000024c6: 	je	.Ltmp7415 # Offset: 9414
.Ltmp7418:
    000024cc: 	movq	%r14, %rdx
    000024cf: 	movq	%r15, %rsi
    000024d2: 	callq	memcpy@PLT # Offset: 9426
    000024d7: 	movq	0x58(%rsp), %r14
    000024dc: 	movq	(%rbx), %rdi
    000024df: 	jmp	.Ltmp7415 # Offset: 9439
.Ltmp7278:
    000024e4: 	leaq	0x58(%rsp), %rsi
    000024e9: 	xorl	%edx, %edx
    000024eb: 	movq	%rbx, %rdi
    000024ee: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9454
    000024f3: 	movq	%rax, (%rbx)
    000024f6: 	movq	%rax, %rdi
    000024f9: 	movq	0x58(%rsp), %rax
    000024fe: 	movq	%rax, 0x10(%rbx)
.Ltmp7400:
    00002502: 	movq	%r14, %rdx
    00002505: 	movq	%r15, %rsi
    00002508: 	callq	memcpy@PLT # Offset: 9480
    0000250d: 	movq	0x58(%rsp), %r14
    00002512: 	movq	(%rbx), %rdi
    00002515: 	jmp	.Ltmp7399 # Offset: 9493
.Ltmp7244:
    0000251a: 	leaq	0x58(%rsp), %rsi
    0000251f: 	xorl	%edx, %edx
    00002521: 	movq	%rbx, %rdi
    00002524: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9508
    00002529: 	movq	%rax, (%rbx)
    0000252c: 	movq	%rax, %rdi
    0000252f: 	movq	0x58(%rsp), %rax
    00002534: 	movq	%rax, 0x10(%rbx)
.Ltmp7404:
    00002538: 	movq	%r14, %rdx
    0000253b: 	movq	%r15, %rsi
    0000253e: 	callq	memcpy@PLT # Offset: 9534
    00002543: 	movq	0x58(%rsp), %r14
    00002548: 	movq	(%rbx), %rdi
    0000254b: 	jmp	.Ltmp7403 # Offset: 9547
.Ltmp7261:
    00002550: 	leaq	0x58(%rsp), %rsi
    00002555: 	xorl	%edx, %edx
    00002557: 	movq	%rbx, %rdi
    0000255a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9562
    0000255f: 	movq	%rax, (%rbx)
    00002562: 	movq	%rax, %rdi
    00002565: 	movq	0x58(%rsp), %rax
    0000256a: 	movq	%rax, 0x10(%rbx)
.Ltmp7402:
    0000256e: 	movq	%r14, %rdx
    00002571: 	movq	%r15, %rsi
    00002574: 	callq	memcpy@PLT # Offset: 9588
    00002579: 	movq	0x58(%rsp), %r14
    0000257e: 	movq	(%rbx), %rdi
    00002581: 	jmp	.Ltmp7401 # Offset: 9601
.Ltmp7159:
    00002586: 	leaq	0x58(%rsp), %rsi
    0000258b: 	xorl	%edx, %edx
    0000258d: 	movq	%r14, %rdi
    00002590: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9616
    00002595: 	movq	%rax, (%r14)
    00002598: 	movq	%rax, %rdi
    0000259b: 	movq	0x58(%rsp), %rax
    000025a0: 	movq	%rax, 0x10(%r14)
    000025a4: 	jmp	.Ltmp7416 # Offset: 9636
.Ltmp7210:
    000025a9: 	leaq	0x58(%rsp), %rsi
    000025ae: 	xorl	%edx, %edx
    000025b0: 	movq	%rbx, %rdi
    000025b3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9651
    000025b8: 	movq	%rax, (%rbx)
    000025bb: 	movq	%rax, %rdi
    000025be: 	movq	0x58(%rsp), %rax
    000025c3: 	movq	%rax, 0x10(%rbx)
.Ltmp7411:
    000025c7: 	movq	%r14, %rdx
    000025ca: 	movq	%r15, %rsi
    000025cd: 	callq	memcpy@PLT # Offset: 9677
    000025d2: 	movq	0x58(%rsp), %r14
    000025d7: 	movq	(%rbx), %rdi
    000025da: 	jmp	.Ltmp7410 # Offset: 9690
.Ltmp7176:
    000025df: 	leaq	0x58(%rsp), %rsi
    000025e4: 	xorl	%edx, %edx
    000025e6: 	movq	%rbx, %rdi
    000025e9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9705
    000025ee: 	movq	%rax, (%rbx)
    000025f1: 	movq	%rax, %rdi
    000025f4: 	movq	0x58(%rsp), %rax
    000025f9: 	movq	%rax, 0x10(%rbx)
.Ltmp7406:
    000025fd: 	movq	%r14, %rdx
    00002600: 	movq	%r15, %rsi
    00002603: 	callq	memcpy@PLT # Offset: 9731
    00002608: 	movq	0x58(%rsp), %r14
    0000260d: 	movq	(%rbx), %rdi
    00002610: 	jmp	.Ltmp7405 # Offset: 9744
.Ltmp7324:
    00002615: 	leaq	0x58(%rsp), %rsi
    0000261a: 	xorl	%edx, %edx
    0000261c: 	movq	%rbx, %rdi
    0000261f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9759
    00002624: 	movq	%rax, (%rbx)
    00002627: 	movq	%rax, %rdi
    0000262a: 	movq	0x58(%rsp), %rax
    0000262f: 	movq	%rax, 0x10(%rbx)
.Ltmp7398:
    00002633: 	movq	%r12, %rdx
    00002636: 	movq	%r14, %rsi
    00002639: 	callq	memcpy@PLT # Offset: 9785
    0000263e: 	movq	0x58(%rsp), %r12
    00002643: 	movq	(%rbx), %rdi
    00002646: 	jmp	.Ltmp7397 # Offset: 9798
.Ltmp7142:
    0000264b: 	leaq	0x58(%rsp), %rsi
    00002650: 	xorl	%edx, %edx
    00002652: 	movq	%r14, %rdi
    00002655: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9813
    0000265a: 	movq	%rax, (%r14)
    0000265d: 	movq	%rax, %rdi
    00002660: 	movq	0x58(%rsp), %rax
    00002665: 	movq	%rax, 0x10(%r14)
.Ltmp7413:
    00002669: 	movq	0x10(%rsp), %rsi
    0000266e: 	movq	%r15, %rdx
    00002671: 	callq	memcpy@PLT # Offset: 9841
    00002676: 	movq	0x58(%rsp), %r15
    0000267b: 	movq	(%r14), %rdi
    0000267e: 	jmp	.Ltmp7412 # Offset: 9854
.Ltmp7193:
    00002683: 	leaq	0x58(%rsp), %rsi
    00002688: 	xorl	%edx, %edx
    0000268a: 	movq	%rbx, %rdi
    0000268d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9869
    00002692: 	movq	%rax, (%rbx)
    00002695: 	movq	%rax, %rdi
    00002698: 	movq	0x58(%rsp), %rax
    0000269d: 	movq	%rax, 0x10(%rbx)
    000026a1: 	jmp	.Ltmp7417 # Offset: 9889
.Ltmp7295:
    000026a6: 	leaq	0x58(%rsp), %rsi
    000026ab: 	xorl	%edx, %edx
    000026ad: 	movq	%rbx, %rdi
    000026b0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9904
    000026b5: 	movq	%rax, (%rbx)
    000026b8: 	movq	%rax, %rdi
    000026bb: 	movq	0x58(%rsp), %rax
    000026c0: 	movq	%rax, 0x10(%rbx)
.Ltmp7409:
    000026c4: 	movq	%r14, %rdx
    000026c7: 	movq	%r15, %rsi
    000026ca: 	callq	memcpy@PLT # Offset: 9930
    000026cf: 	movq	0x58(%rsp), %r14
    000026d4: 	movq	(%rbx), %rdi
    000026d7: 	jmp	.Ltmp7408 # Offset: 9943
.Ltmp7227:
    000026dc: 	leaq	0x58(%rsp), %rsi
    000026e1: 	xorl	%edx, %edx
    000026e3: 	movq	%rbx, %rdi
    000026e6: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9958
    000026eb: 	movq	%rax, (%rbx)
    000026ee: 	movq	%rax, %rdi
    000026f1: 	movq	0x58(%rsp), %rax
    000026f6: 	movq	%rax, 0x10(%rbx)
    000026fa: 	jmp	.Ltmp7418 # Offset: 9978
.Ltmp7133:
    000026ff: 	leaq	DATAat0x57184(%rip), %rdi
    00002706: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 9990
.Ltmp7141:
    0000270b: 	leaq	DATAat0x57008(%rip), %rdi
    00002712: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10002
.Ltmp7147:
    00002717: 	leaq	DATAat0x57008(%rip), %rdi
    0000271e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10014
.Ltmp7150:
    00002723: 	leaq	DATAat0x57184(%rip), %rdi
    0000272a: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 10026
.Ltmp7158:
    0000272f: 	leaq	DATAat0x57008(%rip), %rdi
    00002736: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10038
.Ltmp7164:
    0000273b: 	leaq	DATAat0x57008(%rip), %rdi
    00002742: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10050
.Ltmp7167:
    00002747: 	leaq	DATAat0x57184(%rip), %rdi
    0000274e: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 10062
.Ltmp7175:
    00002753: 	leaq	DATAat0x57008(%rip), %rdi
    0000275a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10074
.Ltmp7181:
    0000275f: 	leaq	DATAat0x57008(%rip), %rdi
    00002766: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10086
.Ltmp7184:
    0000276b: 	leaq	DATAat0x57184(%rip), %rdi
    00002772: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 10098
.Ltmp7192:
    00002777: 	leaq	DATAat0x57008(%rip), %rdi
    0000277e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10110
.Ltmp7198:
    00002783: 	leaq	DATAat0x57008(%rip), %rdi
    0000278a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10122
.Ltmp7201:
    0000278f: 	leaq	DATAat0x57184(%rip), %rdi
    00002796: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 10134
.Ltmp7209:
    0000279b: 	leaq	DATAat0x57008(%rip), %rdi
    000027a2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10146
.Ltmp7215:
    000027a7: 	leaq	DATAat0x57008(%rip), %rdi
    000027ae: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10158
.Ltmp7218:
    000027b3: 	leaq	DATAat0x57184(%rip), %rdi
    000027ba: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 10170
.Ltmp7226:
    000027bf: 	leaq	DATAat0x57008(%rip), %rdi
    000027c6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10182
.Ltmp7232:
    000027cb: 	leaq	DATAat0x57008(%rip), %rdi
    000027d2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10194
.Ltmp7235:
    000027d7: 	leaq	DATAat0x57184(%rip), %rdi
    000027de: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 10206
.Ltmp7243:
    000027e3: 	leaq	DATAat0x57008(%rip), %rdi
    000027ea: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10218
.Ltmp7249:
    000027ef: 	leaq	DATAat0x57008(%rip), %rdi
    000027f6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10230
.Ltmp7252:
    000027fb: 	leaq	DATAat0x57184(%rip), %rdi
    00002802: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 10242
.Ltmp7260:
    00002807: 	leaq	DATAat0x57008(%rip), %rdi
    0000280e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10254
.Ltmp7266:
    00002813: 	leaq	DATAat0x57008(%rip), %rdi
    0000281a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10266
.Ltmp7269:
    0000281f: 	leaq	DATAat0x57184(%rip), %rdi
    00002826: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 10278
.Ltmp7277:
    0000282b: 	leaq	DATAat0x57008(%rip), %rdi
    00002832: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10290
.Ltmp7283:
    00002837: 	leaq	DATAat0x57008(%rip), %rdi
    0000283e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10302
.Ltmp7286:
    00002843: 	leaq	DATAat0x57184(%rip), %rdi
    0000284a: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 10314
.Ltmp7294:
    0000284f: 	leaq	DATAat0x57008(%rip), %rdi
    00002856: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10326
.Ltmp7300:
    0000285b: 	leaq	DATAat0x57008(%rip), %rdi
    00002862: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10338
.Ltmp7303:
    00002867: 	leaq	DATAat0x57184(%rip), %rdi
    0000286e: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 10350
.Ltmp7306:
    00002873: 	leaq	DATAat0x57008(%rip), %rdi
    0000287a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10362
.Ltmp7309:
    0000287f: 	leaq	DATAat0x57184(%rip), %rdi
    00002886: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 10374
.Ltmp7312:
    0000288b: 	leaq	DATAat0x57008(%rip), %rdi
    00002892: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10386
.Ltmp7315:
    00002897: 	leaq	DATAat0x57184(%rip), %rdi
    0000289e: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 10398
.Ltmp7323:
    000028a3: 	leaq	DATAat0x57008(%rip), %rdi
    000028aa: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10410
.Ltmp7329:
    000028af: 	leaq	DATAat0x57008(%rip), %rdi
    000028b6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10422
.Ltmp7332:
    000028bb: 	leaq	DATAat0x57184(%rip), %rdi
    000028c2: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 10434
.Ltmp7335:
    000028c7: 	callq	__stack_chk_fail@PLT # Offset: 10439
.Ltmp7340:
    000028cc: 	movq	%rbp, %rdi
    000028cf: 	jmp	.Ltmp7419 # Offset: 10447
.Ltmp7353:
    000028d4: 	movq	%rbp, %rdi
    000028d7: 	jmp	.Ltmp7420 # Offset: 10455
.Ltmp7355:
    000028dc: 	movq	%rbp, %rdi
    000028df: 	jmp	.Ltmp7421 # Offset: 10463
.Ltmp7357:
    000028e4: 	movq	%rbp, %rdi
    000028e7: 	jmp	.Ltmp7422 # Offset: 10471
.Ltmp7359:
    000028ec: 	movq	%rbp, %rdi
    000028ef: 	jmp	.Ltmp7423 # Offset: 10479
.Ltmp7361:
    000028f4: 	movq	%rbp, %rdi
    000028f7: 	jmp	.Ltmp7424 # Offset: 10487
.Ltmp7363:
    000028fc: 	movq	%rbp, %rdi
    000028ff: 	jmp	.Ltmp7425 # Offset: 10495
.Ltmp7365:
    00002904: 	movq	%rbp, %rdi
    00002907: 	jmp	.Ltmp7426 # Offset: 10503
.Ltmp7367:
    0000290c: 	movq	%rbp, %rdi
    0000290f: 	jmp	.Ltmp7427 # Offset: 10511
.Ltmp7369:
    00002914: 	movq	%rbp, %rdi
    00002917: 	jmp	.Ltmp7428 # Offset: 10519
.Ltmp7371:
    0000291c: 	movq	%rbp, %rdi
    0000291f: 	jmp	.Ltmp7429 # Offset: 10527
.Ltmp7373:
    00002924: 	movq	%rbp, %rdi
    00002927: 	jmp	.Ltmp7430 # Offset: 10535
.Ltmp7375:
    0000292c: 	movq	%rbp, %rdi
    0000292f: 	jmp	.Ltmp7431 # Offset: 10543
.Ltmp7377:
    00002934: 	movq	%rbp, %rdi
    00002937: 	jmp	.Ltmp7432 # Offset: 10551
.Ltmp7130:
    0000293c: 	leaq	DATAat0x57008(%rip), %rdi
    00002943: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10563
    00002948: 	endbr64
.Ltmp7434:
    0000294c: 	movq	%rax, %rbx
    0000294f: 	jmp	.Ltmp7433 # Offset: 10575
    00002951: 	endbr64
    00002955: 	jmp	.Ltmp7434 # Offset: 10581
    00002957: 	endbr64
    0000295b: 	jmp	.Ltmp7434 # Offset: 10587
    0000295d: 	endbr64
    00002961: 	jmp	.Ltmp7434 # Offset: 10593
    00002963: 	endbr64
    00002967: 	jmp	.Ltmp7434 # Offset: 10599
    00002969: 	endbr64
    0000296d: 	jmp	.Ltmp7434 # Offset: 10605
    0000296f: 	endbr64
    00002973: 	jmp	.Ltmp7434 # Offset: 10611
    00002975: 	endbr64
    00002979: 	jmp	.Ltmp7434 # Offset: 10617
    0000297b: 	endbr64
    0000297f: 	jmp	.Ltmp7434 # Offset: 10623
    00002981: 	endbr64
    00002985: 	jmp	.Ltmp7434 # Offset: 10629
    00002987: 	endbr64
    0000298b: 	jmp	.Ltmp7434 # Offset: 10635
    0000298d: 	endbr64
    00002991: 	jmp	.Ltmp7434 # Offset: 10641
    00002993: 	endbr64
    00002997: 	jmp	.Ltmp7434 # Offset: 10647
.Ltmp7433:
    00002999: 	movq	0x80(%rsp), %rdi
    000029a1: 	cmpq	%rbp, %rdi
    000029a4: 	je	.Ltmp7435 # Offset: 10660
    000029a6: 	movq	0x90(%rsp), %rax
    000029ae: 	leaq	0x1(%rax), %rsi
    000029b2: 	callq	_ZdlPvm@PLT # Offset: 10674
.Ltmp7435:
    000029b7: 	movq	0x60(%rsp), %rdi
    000029bc: 	cmpq	0x40(%rsp), %rdi
    000029c1: 	je	.Ltmp7436 # Offset: 10689
    000029c3: 	movq	0x70(%rsp), %rax
    000029c8: 	leaq	0x1(%rax), %rsi
    000029cc: 	callq	_ZdlPvm@PLT # Offset: 10700
.Ltmp7436:
    000029d1: 	movq	%rbx, %rdi
    000029d4: 	callq	_Unwind_Resume@PLT # Offset: 10708
    000029d9: 	endbr64
    000029dd: 	jmp	.Ltmp7434 # Offset: 10717
    000029e2: 	endbr64
    000029e6: 	jmp	.Ltmp7434 # Offset: 10726
    000029eb: 	endbr64
    000029ef: 	jmp	.Ltmp7434 # Offset: 10735
    000029f4: 	endbr64
    000029f8: 	movq	%rax, %rbx
    000029fb: 	jmp	.Ltmp7435 # Offset: 10747
    000029fd: 	endbr64
    00002a01: 	jmp	.Ltmp7434 # Offset: 10753
    00002a06: 	endbr64
    00002a0a: 	jmp	.Ltmp7434 # Offset: 10762
    00002a0f: 	endbr64
    00002a13: 	jmp	.Ltmp7434 # Offset: 10771
    00002a18: 	endbr64
    00002a1c: 	jmp	.Ltmp7434 # Offset: 10780
    00002a21: 	endbr64
    00002a25: 	jmp	.Ltmp7434 # Offset: 10789
    00002a2a: 	endbr64
    00002a2e: 	jmp	.Ltmp7434 # Offset: 10798
    00002a33: 	endbr64
    00002a37: 	jmp	.Ltmp7434 # Offset: 10807
    00002a3c: 	endbr64
    00002a40: 	jmp	.Ltmp7434 # Offset: 10816
    00002a45: 	endbr64
    00002a49: 	jmp	.Ltmp7434 # Offset: 10825
    00002a4e: 	endbr64
    00002a52: 	jmp	.Ltmp7434 # Offset: 10834
    00002a57: 	endbr64
    00002a5b: 	jmp	.Ltmp7434 # Offset: 10843
    00002a60: 	endbr64
    00002a64: 	jmp	.Ltmp7434 # Offset: 10852
DWARF CFI Instructions:
    <empty>
End of Function "_Z20TestOneTypeInductionImEvv"

Binary Function "_fini" after disassembly {
  Number      : 207
  State       : disassembled
  Address     : 0x5663c
  Size        : 0xd
  MaxSize     : 0xd
  Offset      : 0x5663c
  Section     : .fini
  Orc Section : .local.text._fini
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0206:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	addq	$0x8, %rsp
    0000000c: 	retq # Offset: 12
DWARF CFI Instructions:
    <empty>
End of Function "_fini"

BOLT-INFO: 0 out of 208 functions in the binary (0.0%) have non-empty execution profile
BOLT-INFO: 5535 instructions were shortened
BOLT-INFO: removed 549 empty blocks
BOLT-INFO: patched build-id (flipped last bit)
BOLT: 203 out of 236 functions were overwritten.
BOLT-INFO: rewriting .eh_frame_hdr in-place
BOLT-INFO: setting _end to 0x209fcc
