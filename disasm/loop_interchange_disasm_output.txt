BOLT-INFO: shared object or position-independent executable detected
BOLT-INFO: Target architecture: x86_64
BOLT-INFO: BOLT version: <unknown>
BOLT-INFO: first alloc address is 0x0
BOLT-INFO: creating new program header table at address 0x200000, offset 0x200000
BOLT-INFO: enabling lite mode
BOLT-WARNING: ignoring symbol __bss_start at 0x19028, which lies outside .bss
BOLT-WARNING: split function detected on input : _GLOBAL__sub_I_results.cold
Binary Function "_init" after disassembly {
  Number      : 1
  State       : disassembled
  Address     : 0x2000
  Size        : 0x1b
  MaxSize     : 0x1b
  Offset      : 0x2000
  Section     : .init
  Orc Section : .local.text._init
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB00:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	movq	DATAat0x18fe8(%rip), %rax
    0000000f: 	testq	%rax, %rax
    00000012: 	je	.Ltmp0 # Offset: 18
    00000014: 	callq	*%rax # Offset: 20
.Ltmp0:
    00000016: 	addq	$0x8, %rsp
    0000001a: 	retq # Offset: 26
DWARF CFI Instructions:
    <empty>
End of Function "_init"

Binary Function "main" after disassembly {
  Number      : 3
  State       : disassembled
  Address     : 0x2550
  Size        : 0xe3
  MaxSize     : 0xf0
  Offset      : 0x2550
  Section     : .text
  Orc Section : .local.text.main
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB02:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	pushq	%rbp
    0000000b: 	pushq	%rbx
    0000000c: 	testl	%edi, %edi
    0000000e: 	jle	.Ltmp1 # Offset: 14
    00000014: 	leal	-0x1(%rdi), %eax
    00000017: 	movl	%edi, %r13d
    0000001a: 	movq	%rsi, %r14
    0000001d: 	movq	%rsi, %rbx
    00000020: 	leaq	0x8(%rsi,%rax,8), %r12
    00000025: 	leaq	DATAat0x15042(%rip), %rbp
    0000002c: 	nopl	(%rax) # Size: 4
.Ltmp2:
    00000030: 	movq	(%rbx), %rdx
    00000033: 	movq	%rbp, %rsi
    00000036: 	movl	$0x1, %edi
    0000003b: 	xorl	%eax, %eax
    0000003d: 	addq	$0x8, %rbx
    00000041: 	callq	__printf_chk@PLT # Offset: 65
    00000046: 	cmpq	%r12, %rbx
    00000049: 	jne	.Ltmp2 # Offset: 73
    0000004b: 	xorl	%eax, %eax
    0000004d: 	leaq	DATAat0x15028(%rip), %rsi
    00000054: 	movl	$0x1, %edi
    00000059: 	callq	__printf_chk@PLT # Offset: 89
    0000005e: 	cmpl	$0x1, %r13d
    00000062: 	jg	.Ltmp3 # Offset: 98
.Ltmp4:
    00000064: 	callq	_Z11TestOneTypeIhEvv # Offset: 100
    00000069: 	callq	_Z11TestOneTypeIiEvv # Offset: 105
    0000006e: 	movl	iterations(%rip), %edx
    00000074: 	testl	%edx, %edx
    00000076: 	leal	0x7(%rdx), %eax
    00000079: 	cmovnsl	%edx, %eax
    0000007c: 	movl	$0x1, %edx
    00000081: 	sarl	$0x3, %eax
    00000084: 	cmovel	%edx, %eax
    00000087: 	movl	%eax, iterations(%rip)
    0000008d: 	callq	_Z11TestOneTypeIdEvv # Offset: 141
    00000092: 	popq	%rbx
    00000093: 	xorl	%eax, %eax
    00000095: 	popq	%rbp
    00000096: 	popq	%r12
    00000098: 	popq	%r13
    0000009a: 	popq	%r14
    0000009c: 	retq # Offset: 156
.Ltmp3:
    0000009d: 	movq	0x8(%r14), %rdi
    000000a1: 	movl	$0xa, %edx
    000000a6: 	xorl	%esi, %esi
    000000a8: 	callq	strtol@PLT # Offset: 168
    000000ad: 	movl	%eax, iterations(%rip)
    000000b3: 	cmpl	$0x2, %r13d
    000000b7: 	jle	.Ltmp4 # Offset: 183
    000000b9: 	movq	0x10(%r14), %rdi
    000000bd: 	xorl	%esi, %esi
    000000bf: 	callq	strtod@PLT # Offset: 191
    000000c4: 	movsd	%xmm0, init_value(%rip)
    000000cc: 	jmp	.Ltmp4 # Offset: 204
.Ltmp1:
    000000ce: 	leaq	DATAat0x15028(%rip), %rsi
    000000d5: 	movl	$0x1, %edi
    000000da: 	xorl	%eax, %eax
    000000dc: 	callq	__printf_chk@PLT # Offset: 220
    000000e1: 	jmp	.Ltmp4 # Offset: 225
DWARF CFI Instructions:
    <empty>
End of Function "main"

Binary Function "_start" after disassembly {
  Number      : 5
  State       : disassembled
  Address     : 0x2740
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x2740
  Section     : .text
  Orc Section : .local.text._start
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB04:
    00000000: 	endbr64
    00000004: 	xorl	%ebp, %ebp
    00000006: 	movq	%rdx, %r9
    00000009: 	popq	%rsi
    0000000a: 	movq	%rsp, %rdx
    0000000d: 	andq	$-0x10, %rsp
    00000011: 	pushq	%rax
    00000012: 	pushq	%rsp
    00000013: 	xorl	%r8d, %r8d
    00000016: 	xorl	%ecx, %ecx
    00000018: 	leaq	main(%rip), %rdi
    0000001f: 	callq	*DATAat0x18fd8(%rip) # Offset: 31
    00000025: 	hlt
DWARF CFI Instructions:
    <empty>
End of Function "_start"

Binary Function "deregister_tm_clones/1(*2)" after disassembly {
  All names   : deregister_tm_clones/1
                deregister_tm_clones/crtstuff.c/1
  Number      : 6
  State       : disassembled
  Address     : 0x2770
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x2770
  Section     : .text
  Orc Section : .local.text.deregister_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB05:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rax
    0000000e: 	cmpq	%rdi, %rax
    00000011: 	je	.Ltmp5 # Offset: 17
    00000013: 	movq	DATAat0x18fe0(%rip), %rax
    0000001a: 	testq	%rax, %rax
    0000001d: 	je	.Ltmp5 # Offset: 29
    0000001f: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 31
    00000021: 	nopl	(%rax) # Size: 7
.Ltmp5:
    00000028: 	retq # Offset: 40
    00000029: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "deregister_tm_clones/1(*2)"

Binary Function "register_tm_clones/1(*2)" after disassembly {
  All names   : register_tm_clones/1
                register_tm_clones/crtstuff.c/1
  Number      : 7
  State       : disassembled
  Address     : 0x27a0
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x27a0
  Section     : .text
  Orc Section : .local.text.register_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB06:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rsi
    0000000e: 	subq	%rdi, %rsi
    00000011: 	movq	%rsi, %rax
    00000014: 	shrq	$0x3f, %rsi
    00000018: 	sarq	$0x3, %rax
    0000001c: 	addq	%rax, %rsi
    0000001f: 	sarq	%rsi
    00000022: 	je	.Ltmp6 # Offset: 34
    00000024: 	movq	DATAat0x18ff0(%rip), %rax
    0000002b: 	testq	%rax, %rax
    0000002e: 	je	.Ltmp6 # Offset: 46
    00000030: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 48
    00000032: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "register_tm_clones/1(*2)"

Binary Function "__do_global_dtors_aux/1(*2)" after disassembly {
  All names   : __do_global_dtors_aux/1
                __do_global_dtors_aux/crtstuff.c/1
  Number      : 8
  State       : disassembled
  Address     : 0x27e0
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x27e0
  Section     : .text
  Orc Section : .local.text.__do_global_dtors_aux/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB07:
    00000000: 	endbr64
    00000004: 	cmpb	$0x0, "completed.0/1"(%rip)
    0000000b: 	jne	.Ltmp7 # Offset: 11
    0000000d: 	pushq	%rbp
    0000000e: 	cmpq	$0x0, __cxa_finalize@GOT(%rip)
    00000016: 	movq	%rsp, %rbp
    00000019: 	je	.Ltmp8 # Offset: 25
    0000001b: 	movq	__dso_handle(%rip), %rdi
    00000022: 	callq	__cxa_finalize@PLT # Offset: 34
.Ltmp8:
    00000027: 	callq	"deregister_tm_clones/1" # Offset: 39
    0000002c: 	movb	$0x1, "completed.0/1"(%rip)
    00000033: 	popq	%rbp
    00000034: 	retq # Offset: 52
    00000035: 	nopl	(%rax) # Size: 3
.Ltmp7:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "__do_global_dtors_aux/1(*2)"

Binary Function "frame_dummy/1(*2)" after disassembly {
  All names   : frame_dummy/1
                frame_dummy/crtstuff.c/1
  Number      : 9
  State       : disassembled
  Address     : 0x2820
  Size        : 0x10
  MaxSize     : 0x10
  Offset      : 0x2820
  Section     : .text
  Orc Section : .local.text.frame_dummy/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB08:
    00000000: 	endbr64
    00000004: 	jmp	"register_tm_clones/1" # TAILCALL  # Offset: 4
    00000009: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "frame_dummy/1(*2)"

Binary Function "_Z9summarizePKciiii.constprop.0/1(*2)" after disassembly {
  All names   : _Z9summarizePKciiii.constprop.0/1
                _Z9summarizePKciiii.constprop.0/loop_interchange.cpp/1
  Number      : 10
  State       : disassembled
  Address     : 0x2830
  Size        : 0x26e
  MaxSize     : 0x270
  Offset      : 0x2830
  Section     : .text
  Orc Section : .local.text._Z9summarizePKciiii.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB09:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	pushq	%rbx
    0000000a: 	subq	$0x28, %rsp
    0000000e: 	movl	current_test(%rip), %eax
    00000014: 	testl	%eax, %eax
    00000016: 	je	.Ltmp9 # Offset: 22
    0000001c: 	movq	%rdi, %r12
    0000001f: 	movl	%esi, %r14d
    00000022: 	movl	%edx, %r13d
    00000025: 	jle	.Ltmp10 # Offset: 37
    0000002b: 	movq	results(%rip), %rdx
    00000032: 	subl	$0x1, %eax
    00000035: 	movl	$0xc, %ebx
    0000003a: 	shlq	$0x4, %rax
    0000003e: 	leaq	0x8(%rdx), %r15
    00000042: 	leaq	0x18(%rdx,%rax), %rbp
    00000047: 	nopw	(%rax,%rax) # Size: 9
.Ltmp11:
    00000050: 	movq	(%r15), %rdi
    00000053: 	callq	strlen@PLT # Offset: 83
    00000058: 	cmpl	%eax, %ebx
    0000005a: 	cmovll	%eax, %ebx
    0000005d: 	addq	$0x10, %r15
    00000061: 	cmpq	%r15, %rbp
    00000064: 	jne	.Ltmp11 # Offset: 100
    00000066: 	leal	-0xc(%rbx), %edx
.Ltmp21:
    00000069: 	leaq	DATAat0x15199(%rip), %r15
    00000070: 	leaq	DATAat0x15048(%rip), %rsi
    00000077: 	movl	$0x1, %edi
    0000007c: 	xorl	%eax, %eax
    0000007e: 	movq	%r15, %rcx
    00000081: 	callq	__printf_chk@PLT # Offset: 129
    00000086: 	movq	%r15, %rcx
    00000089: 	movl	%ebx, %edx
    0000008b: 	movl	$0x1, %edi
    00000090: 	leaq	DATAat0x15088(%rip), %rsi
    00000097: 	xorl	%eax, %eax
    00000099: 	callq	__printf_chk@PLT # Offset: 153
    0000009e: 	movl	current_test(%rip), %eax
    000000a4: 	testl	%eax, %eax
    000000a6: 	jle	.Ltmp12 # Offset: 166
    000000ac: 	pxor	%xmm0, %xmm0
    000000b0: 	pxor	%xmm1, %xmm1
    000000b4: 	movsd	DATAat0x15760(%rip), %xmm3
    000000bc: 	leaq	DATAat0x150b8(%rip), %rbp
    000000c3: 	cvtsi2sd	%r13d, %xmm1
    000000c8: 	xorl	%r13d, %r13d
    000000cb: 	cvtsi2sd	%r14d, %xmm0
    000000d0: 	mulsd	%xmm1, %xmm0
    000000d4: 	divsd	DATAat0x15758(%rip), %xmm0
    000000dc: 	movsd	%xmm0, 0x18(%rsp)
    000000e2: 	jmp	.Ltmp13 # Offset: 226
    000000e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp17:
    000000f0: 	comisd	%xmm0, %xmm3
    000000f4: 	ja	.Ltmp14 # Offset: 244
    000000fa: 	movq	DATAat0x15748(%rip), %rdi
    00000101: 	movq	%rdi, %xmm2
.Ltmp18:
    00000106: 	comisd	%xmm0, %xmm3
    0000010a: 	movq	DATAat0x15748(%rip), %rsi
    00000111: 	movq	%rsi, %xmm1
    00000116: 	ja	.Ltmp15 # Offset: 278
    00000118: 	movsd	0x18(%rsp), %xmm1
    0000011e: 	divsd	%xmm0, %xmm1
.Ltmp15:
    00000122: 	movq	0x8(%rax), %r14
    00000126: 	movsd	%xmm0, 0x10(%rsp)
    0000012c: 	addq	$0x1, %r13
    00000130: 	movsd	%xmm2, 0x8(%rsp)
    00000136: 	movq	%r14, %rdi
    00000139: 	movsd	%xmm1, (%rsp)
    0000013e: 	callq	strlen@PLT # Offset: 318
    00000143: 	movsd	0x8(%rsp), %xmm2
    00000149: 	movl	%ebx, %ecx
    0000014b: 	movq	%rbp, %rsi
    0000014e: 	movsd	(%rsp), %xmm1
    00000153: 	movsd	0x10(%rsp), %xmm0
    00000159: 	subl	%eax, %ecx
    0000015b: 	movq	%r14, %r9
    0000015e: 	leaq	DATAat0x15029(%rip), %r8
    00000165: 	movl	%r15d, %edx
    00000168: 	movl	$0x1, %edi
    0000016d: 	movl	$0x3, %eax
    00000172: 	callq	__printf_chk@PLT # Offset: 370
    00000177: 	movl	current_test(%rip), %eax
    0000017d: 	movq	DATAat0x15760(%rip), %rsi
    00000184: 	cmpl	%r13d, %eax
    00000187: 	movq	%rsi, %xmm3
    0000018c: 	jle	.Ltmp16 # Offset: 396
.Ltmp13:
    0000018e: 	movq	results(%rip), %rax
    00000195: 	movq	%r13, %rdx
    00000198: 	movl	%r13d, %r15d
    0000019b: 	shlq	$0x4, %rdx
    0000019f: 	movsd	(%rax), %xmm1
    000001a3: 	addq	%rdx, %rax
    000001a6: 	movsd	(%rax), %xmm0
    000001aa: 	comisd	%xmm1, %xmm3
    000001ae: 	ja	.Ltmp17 # Offset: 430
    000001b4: 	movapd	%xmm0, %xmm2
    000001b8: 	divsd	%xmm1, %xmm2
    000001bc: 	jmp	.Ltmp18 # Offset: 444
    000001c1: 	nopl	(%rax) # Size: 7
.Ltmp14:
    000001c8: 	movq	DATAat0x15750(%rip), %rsi
    000001cf: 	movq	DATAat0x15748(%rip), %rdi
    000001d6: 	movq	%rsi, %xmm2
    000001db: 	movq	%rdi, %xmm1
    000001e0: 	jmp	.Ltmp15 # Offset: 480
    000001e5: 	nopl	(%rax) # Size: 3
.Ltmp16:
    000001e8: 	testl	%eax, %eax
    000001ea: 	jle	.Ltmp12 # Offset: 490
    000001ec: 	movq	results(%rip), %rdx
    000001f3: 	leal	-0x1(%rax), %ecx
    000001f6: 	pxor	%xmm0, %xmm0
    000001fa: 	shlq	$0x4, %rcx
    000001fe: 	leaq	0x10(%rdx), %rax
    00000202: 	addq	%rax, %rcx
    00000205: 	jmp	.Ltmp19 # Offset: 517
    00000207: 	nopw	(%rax,%rax) # Size: 9
.Ltmp20:
    00000210: 	addq	$0x10, %rax
.Ltmp19:
    00000214: 	addsd	(%rdx), %xmm0
    00000218: 	movq	%rax, %rdx
    0000021b: 	cmpq	%rax, %rcx
    0000021e: 	jne	.Ltmp20 # Offset: 542
.Ltmp22:
    00000220: 	movq	%r12, %rdx
    00000223: 	movl	$0x1, %edi
    00000228: 	movl	$0x1, %eax
    0000022d: 	leaq	DATAat0x150e8(%rip), %rsi
    00000234: 	callq	__printf_chk@PLT # Offset: 564
    00000239: 	movl	$0x0, current_test(%rip)
.Ltmp9:
    00000243: 	addq	$0x28, %rsp
    00000247: 	popq	%rbx
    00000248: 	popq	%rbp
    00000249: 	popq	%r12
    0000024b: 	popq	%r13
    0000024d: 	popq	%r14
    0000024f: 	popq	%r15
    00000251: 	retq # Offset: 593
    00000252: 	nopw	(%rax,%rax) # Size: 6
.Ltmp10:
    00000258: 	xorl	%edx, %edx
    0000025a: 	movl	$0xc, %ebx
    0000025f: 	jmp	.Ltmp21 # Offset: 607
    00000264: 	nopl	(%rax) # Size: 4
.Ltmp12:
    00000268: 	pxor	%xmm0, %xmm0
    0000026c: 	jmp	.Ltmp22 # Offset: 620
DWARF CFI Instructions:
    <empty>
End of Function "_Z9summarizePKciiii.constprop.0/1(*2)"

Binary Function "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1(*2)" after disassembly {
  All names   : _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1
                _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/loop_interchange.cpp/1
  Number      : 11
  State       : disassembled
  Address     : 0x2aa0
  Size        : 0xd3
  MaxSize     : 0xe0
  Offset      : 0x2aa0
  Section     : .text
  Orc Section : .local.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB010:
    00000000: 	pushq	%r13
    00000002: 	pushq	%r12
    00000004: 	leaq	0x10(%rdi), %r12
    00000008: 	pushq	%rbp
    00000009: 	pushq	%rbx
    0000000a: 	subq	$0x18, %rsp
    0000000e: 	movq	%fs:0x28, %rax
    00000017: 	movq	%rax, 0x8(%rsp)
    0000001c: 	xorl	%eax, %eax
    0000001e: 	movq	%r12, (%rdi)
    00000021: 	testq	%rsi, %rsi
    00000024: 	je	.Ltmp23 # Offset: 36
    0000002a: 	movq	%rdi, %rbx
    0000002d: 	movq	%rsi, %rdi
    00000030: 	movq	%rsi, %rbp
    00000033: 	callq	strlen@PLT # Offset: 51
    00000038: 	movq	%rax, (%rsp)
    0000003c: 	movq	%rax, %r13
    0000003f: 	cmpq	$0xf, %rax
    00000043: 	ja	.Ltmp24 # Offset: 67
    00000045: 	cmpq	$0x1, %rax
    00000049: 	jne	.Ltmp25 # Offset: 73
    0000004b: 	movzbl	(%rbp), %edx
    0000004f: 	movb	%dl, 0x10(%rbx)
.Ltmp27:
    00000052: 	movq	%rax, 0x8(%rbx)
    00000056: 	movb	$0x0, (%r12,%rax)
    0000005b: 	movq	0x8(%rsp), %rax
    00000060: 	subq	%fs:0x28, %rax
    00000069: 	jne	.Ltmp26 # Offset: 105
    0000006b: 	addq	$0x18, %rsp
    0000006f: 	popq	%rbx
    00000070: 	popq	%rbp
    00000071: 	popq	%r12
    00000073: 	popq	%r13
    00000075: 	retq # Offset: 117
    00000076: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp25:
    00000080: 	testq	%rax, %rax
    00000083: 	je	.Ltmp27 # Offset: 131
    00000085: 	jmp	.Ltmp28 # Offset: 133
    00000087: 	nopw	(%rax,%rax) # Size: 9
.Ltmp24:
    00000090: 	movq	%rsp, %rsi
    00000093: 	xorl	%edx, %edx
    00000095: 	movq	%rbx, %rdi
    00000098: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 152
    0000009d: 	movq	%rax, (%rbx)
    000000a0: 	movq	%rax, %r12
    000000a3: 	movq	(%rsp), %rax
    000000a7: 	movq	%rax, 0x10(%rbx)
.Ltmp28:
    000000ab: 	movq	%r12, %rdi
    000000ae: 	movq	%r13, %rdx
    000000b1: 	movq	%rbp, %rsi
    000000b4: 	callq	memcpy@PLT # Offset: 180
    000000b9: 	movq	(%rsp), %rax
    000000bd: 	movq	(%rbx), %r12
    000000c0: 	jmp	.Ltmp27 # Offset: 192
.Ltmp26:
    000000c2: 	callq	__stack_chk_fail@PLT # Offset: 194
.Ltmp23:
    000000c7: 	leaq	DATAat0x15110(%rip), %rdi
    000000ce: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 206
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1(*2)"

Binary Function "_Z13record_resultdPKc" after disassembly {
  Number      : 12
  State       : disassembled
  Address     : 0x2b80
  Size        : 0xa0
  MaxSize     : 0xa0
  Offset      : 0x2b80
  Section     : .text
  Orc Section : .local.text._Z13record_resultdPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB011:
    00000000: 	endbr64
    00000004: 	pushq	%rbx
    00000005: 	movq	%rdi, %rbx
    00000008: 	subq	$0x10, %rsp
    0000000c: 	movq	results(%rip), %rdi
    00000013: 	movl	allocated_results(%rip), %esi
    00000019: 	testq	%rdi, %rdi
    0000001c: 	je	.Ltmp29 # Offset: 28
    0000001e: 	movl	current_test(%rip), %eax
    00000024: 	cmpl	%esi, %eax
    00000026: 	jl	.Ltmp30 # Offset: 38
.Ltmp29:
    00000028: 	addl	$0xa, %esi
    0000002b: 	movsd	%xmm0, 0x8(%rsp)
    00000031: 	movl	%esi, allocated_results(%rip)
    00000037: 	movslq	%esi, %rsi
    0000003a: 	shlq	$0x4, %rsi
    0000003e: 	callq	realloc@PLT # Offset: 62
    00000043: 	movq	%rax, results(%rip)
    0000004a: 	movq	%rax, %rdi
    0000004d: 	testq	%rax, %rax
    00000050: 	je	.Ltmp31 # Offset: 80
    00000052: 	movl	current_test(%rip), %eax
    00000058: 	movsd	0x8(%rsp), %xmm0
.Ltmp30:
    0000005e: 	movslq	%eax, %rdx
    00000061: 	addl	$0x1, %eax
    00000064: 	shlq	$0x4, %rdx
    00000068: 	addq	%rdx, %rdi
    0000006b: 	movsd	%xmm0, (%rdi)
    0000006f: 	movq	%rbx, 0x8(%rdi)
    00000073: 	movl	%eax, current_test(%rip)
    00000079: 	addq	$0x10, %rsp
    0000007d: 	popq	%rbx
    0000007e: 	retq # Offset: 126
.Ltmp31:
    0000007f: 	movl	allocated_results(%rip), %edx
    00000085: 	movl	$0x1, %edi
    0000008a: 	leaq	DATAat0x15140(%rip), %rsi
    00000091: 	xorl	%eax, %eax
    00000093: 	callq	__printf_chk@PLT # Offset: 147
    00000098: 	orl	$-0x1, %edi
    0000009b: 	callq	exit@PLT # Offset: 155
DWARF CFI Instructions:
    <empty>
End of Function "_Z13record_resultdPKc"

Binary Function "_Z9summarizePKciiii" after disassembly {
  Number      : 13
  State       : disassembled
  Address     : 0x2c20
  Size        : 0x325
  MaxSize     : 0x330
  Offset      : 0x2c20
  Section     : .text
  Orc Section : .local.text._Z9summarizePKciiii
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB012:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x38, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movl	%r8d, 0x2c(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp32 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	movl	%esi, %r15d
    0000002b: 	movl	%edx, %r13d
    0000002e: 	jle	.Ltmp33 # Offset: 46
    00000034: 	movq	results(%rip), %rcx
    0000003b: 	subl	$0x1, %eax
    0000003e: 	movl	$0xc, %ebx
    00000043: 	shlq	$0x4, %rax
    00000047: 	leaq	0x8(%rcx), %r14
    0000004b: 	leaq	0x18(%rcx,%rax), %rbp
.Ltmp34:
    00000050: 	movq	(%r14), %rdi
    00000053: 	callq	strlen@PLT # Offset: 83
    00000058: 	cmpl	%eax, %ebx
    0000005a: 	cmovll	%eax, %ebx
    0000005d: 	addq	$0x10, %r14
    00000061: 	cmpq	%r14, %rbp
    00000064: 	jne	.Ltmp34 # Offset: 100
    00000066: 	leal	-0xc(%rbx), %edx
.Ltmp47:
    00000069: 	leaq	DATAat0x15199(%rip), %rbp
    00000070: 	leaq	DATAat0x15048(%rip), %rsi
    00000077: 	movl	$0x1, %edi
    0000007c: 	xorl	%eax, %eax
    0000007e: 	movq	%rbp, %rcx
    00000081: 	callq	__printf_chk@PLT # Offset: 129
    00000086: 	movl	%ebx, %edx
    00000088: 	movq	%rbp, %rcx
    0000008b: 	movl	$0x1, %edi
    00000090: 	leaq	DATAat0x15088(%rip), %rsi
    00000097: 	xorl	%eax, %eax
    00000099: 	callq	__printf_chk@PLT # Offset: 153
    0000009e: 	movl	current_test(%rip), %edx
    000000a4: 	testl	%edx, %edx
    000000a6: 	jle	.Ltmp35 # Offset: 166
    000000ac: 	pxor	%xmm0, %xmm0
    000000b0: 	pxor	%xmm1, %xmm1
    000000b4: 	xorl	%r14d, %r14d
    000000b7: 	movsd	DATAat0x15760(%rip), %xmm3
    000000bf: 	cvtsi2sd	%r15d, %xmm0
    000000c4: 	leaq	DATAat0x150b8(%rip), %rbp
    000000cb: 	cvtsi2sd	%r13d, %xmm1
    000000d0: 	mulsd	%xmm1, %xmm0
    000000d4: 	divsd	DATAat0x15758(%rip), %xmm0
    000000dc: 	movsd	%xmm0, 0x20(%rsp)
    000000e2: 	jmp	.Ltmp36 # Offset: 226
    000000e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp40:
    000000f0: 	comisd	%xmm0, %xmm3
    000000f4: 	ja	.Ltmp37 # Offset: 244
    000000fa: 	movq	DATAat0x15748(%rip), %rdi
    00000101: 	movq	%rdi, %xmm2
.Ltmp41:
    00000106: 	comisd	%xmm0, %xmm3
    0000010a: 	movq	DATAat0x15748(%rip), %rsi
    00000111: 	movq	%rsi, %xmm1
    00000116: 	ja	.Ltmp38 # Offset: 278
    00000118: 	movsd	0x20(%rsp), %xmm1
    0000011e: 	divsd	%xmm0, %xmm1
.Ltmp38:
    00000122: 	movq	0x8(%rax), %r15
    00000126: 	movsd	%xmm0, 0x18(%rsp)
    0000012c: 	addq	$0x1, %r14
    00000130: 	movsd	%xmm1, 0x10(%rsp)
    00000136: 	movq	%r15, %rdi
    00000139: 	movsd	%xmm2, 0x8(%rsp)
    0000013f: 	callq	strlen@PLT # Offset: 319
    00000144: 	movsd	0x8(%rsp), %xmm2
    0000014a: 	movl	%ebx, %ecx
    0000014c: 	movq	%r15, %r9
    0000014f: 	movsd	0x10(%rsp), %xmm1
    00000155: 	subl	%eax, %ecx
    00000157: 	movl	$0x1, %edi
    0000015c: 	movl	%r13d, %edx
    0000015f: 	movsd	0x18(%rsp), %xmm0
    00000165: 	leaq	DATAat0x15029(%rip), %r8
    0000016c: 	movq	%rbp, %rsi
    0000016f: 	movl	$0x3, %eax
    00000174: 	callq	__printf_chk@PLT # Offset: 372
    00000179: 	movl	current_test(%rip), %eax
    0000017f: 	movq	DATAat0x15760(%rip), %rdi
    00000186: 	cmpl	%r14d, %eax
    00000189: 	movq	%rdi, %xmm3
    0000018e: 	jle	.Ltmp39 # Offset: 398
.Ltmp36:
    00000190: 	movq	results(%rip), %rax
    00000197: 	movq	%r14, %rcx
    0000019a: 	movl	%r14d, %r13d
    0000019d: 	shlq	$0x4, %rcx
    000001a1: 	movsd	(%rax), %xmm1
    000001a5: 	addq	%rcx, %rax
    000001a8: 	movsd	(%rax), %xmm0
    000001ac: 	comisd	%xmm1, %xmm3
    000001b0: 	ja	.Ltmp40 # Offset: 432
    000001b6: 	movapd	%xmm0, %xmm2
    000001ba: 	divsd	%xmm1, %xmm2
    000001be: 	jmp	.Ltmp41 # Offset: 446
    000001c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp37:
    000001c8: 	movq	DATAat0x15750(%rip), %rsi
    000001cf: 	movq	DATAat0x15748(%rip), %rdx
    000001d6: 	movq	%rsi, %xmm2
    000001db: 	movq	%rdx, %xmm1
    000001e0: 	jmp	.Ltmp38 # Offset: 480
    000001e5: 	nopl	(%rax) # Size: 3
.Ltmp39:
    000001e8: 	testl	%eax, %eax
    000001ea: 	jle	.Ltmp35 # Offset: 490
    000001f0: 	movq	results(%rip), %rdx
    000001f7: 	leal	-0x1(%rax), %ecx
    000001fa: 	pxor	%xmm1, %xmm1
    000001fe: 	shlq	$0x4, %rcx
    00000202: 	movapd	%xmm1, %xmm0
    00000206: 	leaq	0x10(%rdx), %rax
    0000020a: 	addq	%rax, %rcx
    0000020d: 	jmp	.Ltmp42 # Offset: 525
    0000020f: 	nop # Size: 1
.Ltmp43:
    00000210: 	addq	$0x10, %rax
.Ltmp42:
    00000214: 	addsd	(%rdx), %xmm0
    00000218: 	movq	%rax, %rdx
    0000021b: 	cmpq	%rax, %rcx
    0000021e: 	jne	.Ltmp43 # Offset: 542
.Ltmp48:
    00000220: 	movq	%r12, %rdx
    00000223: 	movl	$0x1, %edi
    00000228: 	movl	$0x1, %eax
    0000022d: 	movsd	%xmm1, 0x8(%rsp)
    00000233: 	leaq	DATAat0x150e8(%rip), %rsi
    0000023a: 	callq	__printf_chk@PLT # Offset: 570
    0000023f: 	movl	0x2c(%rsp), %eax
    00000243: 	movl	current_test(%rip), %ebp
    00000249: 	testl	%eax, %eax
    0000024b: 	je	.Ltmp44 # Offset: 587
    0000024d: 	cmpl	$0x1, %ebp
    00000250: 	jg	.Ltmp45 # Offset: 592
.Ltmp44:
    00000252: 	movl	$0x0, current_test(%rip)
.Ltmp32:
    0000025c: 	addq	$0x38, %rsp
    00000260: 	popq	%rbx
    00000261: 	popq	%rbp
    00000262: 	popq	%r12
    00000264: 	popq	%r13
    00000266: 	popq	%r14
    00000268: 	popq	%r15
    0000026a: 	retq # Offset: 618
    0000026b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp45:
    00000270: 	movq	results(%rip), %rbx
    00000277: 	movsd	0x8(%rsp), %xmm1
    0000027d: 	movl	$0x1, %r13d
    00000283: 	movsd	(%rbx), %xmm5
    00000287: 	addq	$0x10, %rbx
    0000028b: 	movsd	%xmm5, 0x10(%rsp)
    00000291: 	nopl	(%rax) # Size: 7
.Ltmp46:
    00000298: 	movsd	(%rbx), %xmm0
    0000029c: 	movsd	%xmm1, 0x8(%rsp)
    000002a2: 	addl	$0x1, %r13d
    000002a6: 	addq	$0x10, %rbx
    000002aa: 	divsd	0x10(%rsp), %xmm0
    000002b0: 	callq	log@PLT # Offset: 688
    000002b5: 	movsd	0x8(%rsp), %xmm1
    000002bb: 	addsd	%xmm0, %xmm1
    000002bf: 	cmpl	%r13d, %ebp
    000002c2: 	jg	.Ltmp46 # Offset: 706
    000002c4: 	subl	$0x1, %ebp
    000002c7: 	pxor	%xmm0, %xmm0
    000002cb: 	cvtsi2sd	%ebp, %xmm0
    000002cf: 	divsd	%xmm0, %xmm1
    000002d3: 	movapd	%xmm1, %xmm0
    000002d7: 	callq	exp@PLT # Offset: 727
    000002dc: 	movq	%r12, %rdx
    000002df: 	movl	$0x1, %edi
    000002e4: 	leaq	DATAat0x15004(%rip), %rsi
    000002eb: 	movl	$0x1, %eax
    000002f0: 	callq	__printf_chk@PLT # Offset: 752
    000002f5: 	movl	$0x0, current_test(%rip)
    000002ff: 	jmp	.Ltmp32 # Offset: 767
    00000304: 	nopl	(%rax) # Size: 4
.Ltmp33:
    00000308: 	xorl	%edx, %edx
    0000030a: 	movl	$0xc, %ebx
    0000030f: 	jmp	.Ltmp47 # Offset: 783
    00000314: 	nopl	(%rax) # Size: 4
.Ltmp35:
    00000318: 	pxor	%xmm1, %xmm1
    0000031c: 	movapd	%xmm1, %xmm0
    00000320: 	jmp	.Ltmp48 # Offset: 800
DWARF CFI Instructions:
    <empty>
End of Function "_Z9summarizePKciiii"

Binary Function "_Z17summarize_simplefP8_IO_FILEPKc" after disassembly {
  Number      : 14
  State       : disassembled
  Address     : 0x2f50
  Size        : 0x1a6
  MaxSize     : 0x1b0
  Offset      : 0x2f50
  Section     : .text
  Orc Section : .local.text._Z17summarize_simplefP8_IO_FILEPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB013:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x18, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movq	%rsi, 0x8(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp49 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	jle	.Ltmp50 # Offset: 40
    0000002e: 	movq	results(%rip), %rdx
    00000035: 	subl	$0x1, %eax
    00000038: 	movl	$0xc, %ebp
    0000003d: 	shlq	$0x4, %rax
    00000041: 	leaq	0x8(%rdx), %r13
    00000045: 	leaq	0x18(%rdx,%rax), %rbx
    0000004a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp51:
    00000050: 	movq	(%r13), %rdi
    00000054: 	callq	strlen@PLT # Offset: 84
    00000059: 	cmpl	%eax, %ebp
    0000005b: 	cmovll	%eax, %ebp
    0000005e: 	addq	$0x10, %r13
    00000062: 	cmpq	%r13, %rbx
    00000065: 	jne	.Ltmp51 # Offset: 101
    00000067: 	leal	-0xc(%rbp), %ecx
.Ltmp56:
    0000006a: 	leaq	DATAat0x15199(%rip), %r8
    00000071: 	movl	$0x1, %esi
    00000076: 	xorl	%eax, %eax
    00000078: 	xorl	%ebx, %ebx
    0000007a: 	leaq	DATAat0x15160(%rip), %rdx
    00000081: 	movq	%r12, %rdi
    00000084: 	leaq	DATAat0x1502a(%rip), %r14
    0000008b: 	callq	__fprintf_chk@PLT # Offset: 139
    00000090: 	movl	$0x1, %esi
    00000095: 	movl	%ebp, %ecx
    00000097: 	movq	%r12, %rdi
    0000009a: 	leaq	DATAat0x15199(%rip), %r8
    000000a1: 	leaq	DATAat0x15018(%rip), %rdx
    000000a8: 	xorl	%eax, %eax
    000000aa: 	callq	__fprintf_chk@PLT # Offset: 170
    000000af: 	movl	current_test(%rip), %esi
    000000b5: 	testl	%esi, %esi
    000000b7: 	jle	.Ltmp52 # Offset: 183
    000000bd: 	nopl	(%rax) # Size: 3
.Ltmp53:
    000000c0: 	movq	%rbx, %rdx
    000000c3: 	shlq	$0x4, %rdx
    000000c7: 	addq	results(%rip), %rdx
    000000ce: 	movq	0x8(%rdx), %r13
    000000d2: 	movq	%rdx, %r15
    000000d5: 	movq	%r13, %rdi
    000000d8: 	callq	strlen@PLT # Offset: 216
    000000dd: 	subq	$0x8, %rsp
    000000e1: 	movsd	(%r15), %xmm0
    000000e6: 	movl	%ebx, %ecx
    000000e8: 	pushq	%r13
    000000ea: 	movl	%ebp, %r8d
    000000ed: 	movq	%r14, %rdx
    000000f0: 	leaq	DATAat0x15029(%rip), %r9
    000000f7: 	subl	%eax, %r8d
    000000fa: 	movl	$0x1, %esi
    000000ff: 	movq	%r12, %rdi
    00000102: 	movl	$0x1, %eax
    00000107: 	addq	$0x1, %rbx
    0000010b: 	callq	__fprintf_chk@PLT # Offset: 267
    00000110: 	movl	current_test(%rip), %eax
    00000116: 	popq	%rdx
    00000117: 	popq	%rcx
    00000118: 	cmpl	%ebx, %eax
    0000011a: 	jg	.Ltmp53 # Offset: 282
    0000011c: 	testl	%eax, %eax
    0000011e: 	jle	.Ltmp52 # Offset: 286
    00000124: 	movq	results(%rip), %rdx
    0000012b: 	leal	-0x1(%rax), %ecx
    0000012e: 	pxor	%xmm0, %xmm0
    00000132: 	shlq	$0x4, %rcx
    00000136: 	leaq	0x10(%rdx), %rax
    0000013a: 	addq	%rax, %rcx
    0000013d: 	jmp	.Ltmp54 # Offset: 317
    0000013f: 	nop # Size: 1
.Ltmp55:
    00000140: 	addq	$0x10, %rax
.Ltmp54:
    00000144: 	addsd	(%rdx), %xmm0
    00000148: 	movq	%rax, %rdx
    0000014b: 	cmpq	%rax, %rcx
    0000014e: 	jne	.Ltmp55 # Offset: 334
.Ltmp57:
    00000150: 	movq	0x8(%rsp), %rcx
    00000155: 	movl	$0x1, %esi
    0000015a: 	movq	%r12, %rdi
    0000015d: 	movl	$0x1, %eax
    00000162: 	leaq	DATAat0x150e8(%rip), %rdx
    00000169: 	callq	__fprintf_chk@PLT # Offset: 361
    0000016e: 	movl	$0x0, current_test(%rip)
.Ltmp49:
    00000178: 	addq	$0x18, %rsp
    0000017c: 	popq	%rbx
    0000017d: 	popq	%rbp
    0000017e: 	popq	%r12
    00000180: 	popq	%r13
    00000182: 	popq	%r14
    00000184: 	popq	%r15
    00000186: 	retq # Offset: 390
    00000187: 	nopw	(%rax,%rax) # Size: 9
.Ltmp50:
    00000190: 	xorl	%ecx, %ecx
    00000192: 	movl	$0xc, %ebp
    00000197: 	jmp	.Ltmp56 # Offset: 407
    0000019c: 	nopl	(%rax) # Size: 4
.Ltmp52:
    000001a0: 	pxor	%xmm0, %xmm0
    000001a4: 	jmp	.Ltmp57 # Offset: 420
DWARF CFI Instructions:
    <empty>
End of Function "_Z17summarize_simplefP8_IO_FILEPKc"

Binary Function "_Z11start_timerv" after disassembly {
  Number      : 15
  State       : disassembled
  Address     : 0x3100
  Size        : 0x19
  MaxSize     : 0x20
  Offset      : 0x3100
  Section     : .text
  Orc Section : .local.text._Z11start_timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB014:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	movq	%rax, start_time(%rip)
    00000014: 	addq	$0x8, %rsp
    00000018: 	retq # Offset: 24
DWARF CFI Instructions:
    <empty>
End of Function "_Z11start_timerv"

Binary Function "_Z5timerv" after disassembly {
  Number      : 16
  State       : disassembled
  Address     : 0x3120
  Size        : 0x31
  MaxSize     : 0x40
  Offset      : 0x3120
  Section     : .text
  Orc Section : .local.text._Z5timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB015:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	pxor	%xmm0, %xmm0
    00000011: 	movq	%rax, end_time(%rip)
    00000018: 	subq	start_time(%rip), %rax
    0000001f: 	cvtsi2sd	%rax, %xmm0
    00000024: 	divsd	DATAat0x15758(%rip), %xmm0
    0000002c: 	addq	$0x8, %rsp
    00000030: 	retq # Offset: 48
DWARF CFI Instructions:
    <empty>
End of Function "_Z5timerv"

Binary Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 17
  State       : disassembled
  Address     : 0x3160
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x3160
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB016:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f38, %edx
    00000017: 	movl	$0x746e6975, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 18
  State       : disassembled
  Address     : 0x3190
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x3190
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB017:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3631746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 19
  State       : disassembled
  Address     : 0x31c0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x31c0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB018:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3233746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 20
  State       : disassembled
  Address     : 0x31f0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x31f0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB019:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3436746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 21
  State       : disassembled
  Address     : 0x3220
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x3220
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB020:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 22
  State       : disassembled
  Address     : 0x3250
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x3250
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB021:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 23
  State       : disassembled
  Address     : 0x3280
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x3280
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB022:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f36, %edx
    00000017: 	movl	$0x31746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 24
  State       : disassembled
  Address     : 0x32b0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x32b0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB023:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f32, %edx
    00000017: 	movl	$0x33746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 25
  State       : disassembled
  Address     : 0x32e0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x32e0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB024:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f34, %edx
    00000017: 	movl	$0x36746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 26
  State       : disassembled
  Address     : 0x3310
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x3310
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB025:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x14(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x616f6c66, 0x10(%rdi)
    00000019: 	movq	$0x5, 0x8(%rdi)
    00000021: 	movb	$0x0, 0x15(%rdi)
    00000025: 	retq # Offset: 37
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 27
  State       : disassembled
  Address     : 0x3340
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x3340
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB026:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x62756f64, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x656c, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 28
  State       : disassembled
  Address     : 0x3370
  Size        : 0x36
  MaxSize     : 0x40
  Offset      : 0x3370
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB027:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x65, 0x1a(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movl	$0x6c62, %edx
    00000021: 	movq	%rcx, 0x10(%rdi)
    00000025: 	movw	%dx, 0x18(%rdi)
    00000029: 	movq	$0xb, 0x8(%rdi)
    00000031: 	movb	$0x0, 0x1b(%rdi)
    00000035: 	retq # Offset: 53
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 29
  State       : disassembled
  Address     : 0x33b0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x33b0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB028:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f38746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 30
  State       : disassembled
  Address     : 0x33e0
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x33e0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB029:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3631746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 31
  State       : disassembled
  Address     : 0x3410
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x3410
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB030:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3233746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 32
  State       : disassembled
  Address     : 0x3440
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x3440
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB031:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3436746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 33
  State       : disassembled
  Address     : 0x3470
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x3470
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB032:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x745f, %edx
    00000017: 	movl	$0x38746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 34
  State       : disassembled
  Address     : 0x34a0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x34a0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB033:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3631746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 35
  State       : disassembled
  Address     : 0x34d0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x34d0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB034:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3233746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 36
  State       : disassembled
  Address     : 0x3500
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x3500
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB035:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3436746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 37
  State       : disassembled
  Address     : 0x3530
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x3530
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB036:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x616f6c66, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x2a74, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 38
  State       : disassembled
  Address     : 0x3560
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x3560
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB037:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x656c, %edx
    00000017: 	movl	$0x62756f64, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 39
  State       : disassembled
  Address     : 0x3590
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x3590
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB038:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x0, 0x1c(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movl	$0x2a656c62, 0x18(%rdi)
    00000027: 	movq	$0xc, 0x8(%rdi)
    0000002f: 	retq # Offset: 47
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1(*2)" after disassembly {
  All names   : _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1
                _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/loop_interchange.cpp/1
  Number      : 40
  State       : disassembled
  Address     : 0x35c0
  Size        : 0x114
  MaxSize     : 0x120
  Offset      : 0x35c0
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB039:
    00000000: 	pushq	%r12
    00000002: 	movq	%rdi, %rsi
    00000005: 	pushq	%rbp
    00000006: 	pushq	%rbx
    00000007: 	subq	$0x10, %rsp
    0000000b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000029: 	subq	$0x20, %rax
    0000002d: 	cmpq	%rax, %rbx
    00000030: 	je	.Ltmp58 # Offset: 48
    00000036: 	leaq	0x10(%rbx), %rdi
    0000003a: 	movq	0x8(%rsi), %r12
    0000003e: 	movq	%rdi, (%rbx)
    00000041: 	movq	(%rsi), %rbp
    00000044: 	movq	%rbp, %rax
    00000047: 	addq	%r12, %rax
    0000004a: 	je	.Ltmp59 # Offset: 74
    0000004c: 	testq	%rbp, %rbp
    0000004f: 	je	.Ltmp60 # Offset: 79
.Ltmp59:
    00000055: 	movq	%r12, (%rsp)
    00000059: 	cmpq	$0xf, %r12
    0000005d: 	ja	.Ltmp61 # Offset: 93
    0000005f: 	cmpq	$0x1, %r12
    00000063: 	jne	.Ltmp62 # Offset: 99
    00000069: 	movzbl	(%rbp), %eax
    0000006d: 	movb	%al, 0x10(%rbx)
.Ltmp64:
    00000070: 	movq	%r12, 0x8(%rbx)
    00000074: 	movb	$0x0, (%rdi,%r12)
    00000079: 	addq	$0x20, "_ZL7gLabels/1"+48(%rip)
    00000081: 	movq	0x8(%rsp), %rax
    00000086: 	subq	%fs:0x28, %rax
    0000008f: 	jne	.Ltmp63 # Offset: 143
    00000091: 	addq	$0x10, %rsp
    00000095: 	popq	%rbx
    00000096: 	popq	%rbp
    00000097: 	popq	%r12
    00000099: 	retq # Offset: 153
    0000009a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp61:
    000000a0: 	movq	%rbx, %rdi
    000000a3: 	movq	%rsp, %rsi
    000000a6: 	xorl	%edx, %edx
    000000a8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 168
    000000ad: 	movq	%rax, (%rbx)
    000000b0: 	movq	%rax, %rdi
    000000b3: 	movq	(%rsp), %rax
    000000b7: 	movq	%rax, 0x10(%rbx)
.Ltmp65:
    000000bb: 	movq	%r12, %rdx
    000000be: 	movq	%rbp, %rsi
    000000c1: 	callq	memcpy@PLT # Offset: 193
    000000c6: 	movq	(%rsp), %r12
    000000ca: 	movq	(%rbx), %rdi
    000000cd: 	jmp	.Ltmp64 # Offset: 205
    000000cf: 	nop # Size: 1
.Ltmp58:
    000000d0: 	movq	0x8(%rsp), %rax
    000000d5: 	subq	%fs:0x28, %rax
    000000de: 	jne	.Ltmp63 # Offset: 222
    000000e0: 	addq	$0x10, %rsp
    000000e4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000000eb: 	popq	%rbx
    000000ec: 	popq	%rbp
    000000ed: 	popq	%r12
    000000ef: 	jmp	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # TAILCALL  # Offset: 239
    000000f4: 	nopl	(%rax) # Size: 4
.Ltmp62:
    000000f8: 	testq	%r12, %r12
    000000fb: 	je	.Ltmp64 # Offset: 251
    00000101: 	jmp	.Ltmp65 # Offset: 257
.Ltmp60:
    00000103: 	leaq	DATAat0x15110(%rip), %rdi
    0000010a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 266
.Ltmp63:
    0000010f: 	callq	__stack_chk_fail@PLT # Offset: 271
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1(*2)"

Binary Function "_ZNKSt5ctypeIcE8do_widenEc" after disassembly {
  Number      : 41
  State       : disassembled
  Address     : 0x36e0
  Size        : 0x7
  MaxSize     : 0x10
  Offset      : 0x36e0
  Section     : .text
  Orc Section : .local.text._ZNKSt5ctypeIcE8do_widenEc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB040:
    00000000: 	endbr64
    00000004: 	movl	%esi, %eax
    00000006: 	retq # Offset: 6
DWARF CFI Instructions:
    <empty>
End of Function "_ZNKSt5ctypeIcE8do_widenEc"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)" after disassembly {
  All names   : _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
                _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
  Number      : 42
  State       : disassembled
  Address     : 0x36f0
  Size        : 0x1f7
  MaxSize     : 0x200
  Offset      : 0x36f0
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB041:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x28, %rsp
    00000015: 	movq	0x20(%rdi), %rcx
    00000019: 	movq	0x30(%rdi), %rax
    0000001d: 	movq	0x38(%rdi), %r13
    00000021: 	movq	0x10(%rdi), %rbp
    00000025: 	movq	%rcx, 0x10(%rsp)
    0000002a: 	movq	0x28(%rdi), %rcx
    0000002e: 	movq	%rax, 0x8(%rsp)
    00000033: 	movq	0x48(%rdi), %rax
    00000037: 	leaq	0x8(%rcx), %r12
    0000003b: 	movq	%rcx, 0x18(%rsp)
    00000040: 	movq	%rax, (%rsp)
    00000044: 	cmpq	%r12, %rax
    00000047: 	jbe	.Ltmp66 # Offset: 71
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp69:
    00000050: 	movq	(%r12), %r15
    00000054: 	leaq	0x200(%r15), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp68:
    00000060: 	movq	(%r15), %rdi
    00000063: 	leaq	0x10(%r15), %rdx
    00000067: 	cmpq	%rdx, %rdi
    0000006a: 	je	.Ltmp67 # Offset: 106
    00000070: 	movq	0x10(%r15), %rax
    00000074: 	addq	$0x20, %r15
    00000078: 	leaq	0x1(%rax), %rsi
    0000007c: 	callq	_ZdlPvm@PLT # Offset: 124
    00000081: 	cmpq	%r15, %rbx
    00000084: 	jne	.Ltmp68 # Offset: 132
    00000086: 	addq	$0x8, %r12
    0000008a: 	cmpq	%r12, (%rsp)
    0000008e: 	ja	.Ltmp69 # Offset: 142
.Ltmp66:
    00000090: 	movq	(%rsp), %rcx
    00000094: 	cmpq	%rcx, 0x18(%rsp)
    00000099: 	je	.Ltmp70 # Offset: 153
    0000009f: 	cmpq	0x10(%rsp), %rbp
    000000a4: 	je	.Ltmp71 # Offset: 164
.Ltmp74:
    000000a6: 	movq	(%rbp), %rdi
    000000aa: 	leaq	0x10(%rbp), %rax
    000000ae: 	cmpq	%rax, %rdi
    000000b1: 	je	.Ltmp72 # Offset: 177
.Ltmp73:
    000000b3: 	movq	0x10(%rbp), %rax
    000000b7: 	addq	$0x20, %rbp
    000000bb: 	leaq	0x1(%rax), %rsi
    000000bf: 	callq	_ZdlPvm@PLT # Offset: 191
    000000c4: 	cmpq	%rbp, 0x10(%rsp)
    000000c9: 	je	.Ltmp71 # Offset: 201
    000000cb: 	movq	(%rbp), %rdi
    000000cf: 	leaq	0x10(%rbp), %rax
    000000d3: 	cmpq	%rax, %rdi
    000000d6: 	jne	.Ltmp73 # Offset: 214
.Ltmp72:
    000000d8: 	addq	$0x20, %rbp
    000000dc: 	cmpq	%rbp, 0x10(%rsp)
    000000e1: 	jne	.Ltmp74 # Offset: 225
    000000e3: 	cmpq	%r13, 0x8(%rsp)
    000000e8: 	je	.Ltmp75 # Offset: 232
    000000ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp77:
    000000f0: 	movq	(%r13), %rdi
    000000f4: 	leaq	0x10(%r13), %rax
    000000f8: 	cmpq	%rax, %rdi
    000000fb: 	je	.Ltmp76 # Offset: 251
    000000fd: 	movq	0x10(%r13), %rax
    00000101: 	leaq	0x1(%rax), %rsi
    00000105: 	callq	_ZdlPvm@PLT # Offset: 261
.Ltmp76:
    0000010a: 	addq	$0x20, %r13
.Ltmp71:
    0000010e: 	cmpq	%r13, 0x8(%rsp)
    00000113: 	jne	.Ltmp77 # Offset: 275
.Ltmp75:
    00000115: 	movq	(%r14), %rdi
    00000118: 	testq	%rdi, %rdi
    0000011b: 	je	.Ltmp78 # Offset: 283
.Ltmp84:
    00000121: 	movq	0x48(%r14), %rax
    00000125: 	movq	0x28(%r14), %rbx
    00000129: 	leaq	0x8(%rax), %rbp
    0000012d: 	cmpq	%rbx, %rbp
    00000130: 	jbe	.Ltmp79 # Offset: 304
    00000132: 	nopw	(%rax,%rax) # Size: 6
.Ltmp80:
    00000138: 	movq	(%rbx), %rdi
    0000013b: 	movl	$0x200, %esi
    00000140: 	addq	$0x8, %rbx
    00000144: 	callq	_ZdlPvm@PLT # Offset: 324
    00000149: 	cmpq	%rbx, %rbp
    0000014c: 	ja	.Ltmp80 # Offset: 332
    0000014e: 	movq	(%r14), %rdi
.Ltmp79:
    00000151: 	movq	0x8(%r14), %rsi
    00000155: 	addq	$0x28, %rsp
    00000159: 	popq	%rbx
    0000015a: 	popq	%rbp
    0000015b: 	shlq	$0x3, %rsi
    0000015f: 	popq	%r12
    00000161: 	popq	%r13
    00000163: 	popq	%r14
    00000165: 	popq	%r15
    00000167: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 359
    0000016c: 	nopl	(%rax) # Size: 4
.Ltmp67:
    00000170: 	addq	$0x20, %r15
    00000174: 	cmpq	%r15, %rbx
    00000177: 	jne	.Ltmp68 # Offset: 375
    0000017d: 	addq	$0x8, %r12
    00000181: 	cmpq	%r12, (%rsp)
    00000185: 	ja	.Ltmp69 # Offset: 389
    0000018b: 	jmp	.Ltmp66 # Offset: 395
.Ltmp70:
    00000190: 	cmpq	0x8(%rsp), %rbp
    00000195: 	je	.Ltmp75 # Offset: 405
.Ltmp83:
    0000019b: 	movq	(%rbp), %rdi
    0000019f: 	leaq	0x10(%rbp), %rax
    000001a3: 	cmpq	%rax, %rdi
    000001a6: 	je	.Ltmp81 # Offset: 422
.Ltmp82:
    000001a8: 	movq	0x10(%rbp), %rax
    000001ac: 	addq	$0x20, %rbp
    000001b0: 	leaq	0x1(%rax), %rsi
    000001b4: 	callq	_ZdlPvm@PLT # Offset: 436
    000001b9: 	cmpq	%rbp, 0x8(%rsp)
    000001be: 	je	.Ltmp75 # Offset: 446
    000001c4: 	movq	(%rbp), %rdi
    000001c8: 	leaq	0x10(%rbp), %rax
    000001cc: 	cmpq	%rax, %rdi
    000001cf: 	jne	.Ltmp82 # Offset: 463
.Ltmp81:
    000001d1: 	addq	$0x20, %rbp
    000001d5: 	cmpq	%rbp, 0x8(%rsp)
    000001da: 	jne	.Ltmp83 # Offset: 474
    000001dc: 	movq	(%r14), %rdi
    000001df: 	testq	%rdi, %rdi
    000001e2: 	jne	.Ltmp84 # Offset: 482
.Ltmp78:
    000001e8: 	addq	$0x28, %rsp
    000001ec: 	popq	%rbx
    000001ed: 	popq	%rbp
    000001ee: 	popq	%r12
    000001f0: 	popq	%r13
    000001f2: 	popq	%r14
    000001f4: 	popq	%r15
    000001f6: 	retq # Offset: 502
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)"

Binary Function "_Z9check_sumIhEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0/1(*2)" after disassembly {
  All names   : _Z9check_sumIhEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0/1
                _Z9check_sumIhEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0/loop_interchange.cpp/1
  Number      : 43
  State       : disassembled
  Address     : 0x38f0
  Size        : 0x12d
  MaxSize     : 0x130
  Offset      : 0x38f0
  Section     : .text
  Orc Section : .local.text._Z9check_sumIhEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB042:
    00000000: 	pushq	%r13
    00000002: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r13
    00000009: 	movl	$0x5, %edx
    0000000e: 	pushq	%r12
    00000010: 	movl	%edi, %r12d
    00000013: 	movq	%r13, %rdi
    00000016: 	pushq	%rbp
    00000017: 	movq	%rsi, %rbp
    0000001a: 	leaq	DATAat0x15182(%rip), %rsi
    00000021: 	subq	$0x10, %rsp
    00000025: 	movq	%fs:0x28, %rax
    0000002e: 	movq	%rax, 0x8(%rsp)
    00000033: 	xorl	%eax, %eax
    00000035: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 53
    0000003a: 	movq	0x8(%rbp), %rdx
    0000003e: 	movq	(%rbp), %rsi
    00000042: 	movq	%r13, %rdi
    00000045: 	leaq	0x7(%rsp), %r13
    0000004a: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 74
    0000004f: 	movl	$0x12, %edx
    00000054: 	leaq	DATAat0x15188(%rip), %rsi
    0000005b: 	movq	%rax, %rbp
    0000005e: 	movq	%rax, %rdi
    00000061: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 97
    00000066: 	movq	%rbp, %rdi
    00000069: 	movl	$0x1, %edx
    0000006e: 	movq	%r13, %rsi
    00000071: 	movb	$0x0, 0x7(%rsp)
    00000076: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 118
    0000007b: 	movl	$0x5, %edx
    00000080: 	leaq	DATAat0x1519b(%rip), %rsi
    00000087: 	movq	%rax, %rbp
    0000008a: 	movq	%rax, %rdi
    0000008d: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 141
    00000092: 	movq	%rbp, %rdi
    00000095: 	movl	$0x1, %edx
    0000009a: 	movq	%r13, %rsi
    0000009d: 	movb	%r12b, 0x7(%rsp)
    000000a2: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 162
    000000a7: 	movq	%rax, %rbp
    000000aa: 	movq	(%rax), %rax
    000000ad: 	movq	-0x18(%rax), %rax
    000000b1: 	movq	0xf0(%rbp,%rax), %r12
    000000b9: 	testq	%r12, %r12
    000000bc: 	je	.Ltmp85 # Offset: 188
    000000be: 	cmpb	$0x0, 0x38(%r12)
    000000c4: 	je	.Ltmp86 # Offset: 196
    000000c6: 	movsbl	0x43(%r12), %esi
.Ltmp88:
    000000cc: 	movq	%rbp, %rdi
    000000cf: 	callq	_ZNSo3putEc@PLT # Offset: 207
    000000d4: 	movq	%rax, %rdi
    000000d7: 	movq	0x8(%rsp), %rax
    000000dc: 	subq	%fs:0x28, %rax
    000000e5: 	jne	.Ltmp87 # Offset: 229
    000000e7: 	addq	$0x10, %rsp
    000000eb: 	popq	%rbp
    000000ec: 	popq	%r12
    000000ee: 	popq	%r13
    000000f0: 	jmp	_ZNSo5flushEv@PLT # TAILCALL  # Offset: 240
    000000f5: 	nopl	(%rax) # Size: 3
.Ltmp86:
    000000f8: 	movq	%r12, %rdi
    000000fb: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 251
    00000100: 	movq	(%r12), %rax
    00000104: 	movl	$0xa, %esi
    00000109: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000110: 	movq	0x30(%rax), %rax
    00000114: 	cmpq	%rdx, %rax
    00000117: 	je	.Ltmp88 # Offset: 279
    00000119: 	movq	%r12, %rdi
    0000011c: 	callq	*%rax # Offset: 284
    0000011e: 	movsbl	%al, %esi
    00000121: 	jmp	.Ltmp88 # Offset: 289
.Ltmp87:
    00000123: 	callq	__stack_chk_fail@PLT # Offset: 291
.Ltmp85:
    00000128: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 296
DWARF CFI Instructions:
    <empty>
End of Function "_Z9check_sumIhEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0/1(*2)"

Binary Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_" after disassembly {
  Number      : 44
  State       : disassembled
  Address     : 0x3a20
  Size        : 0x145
  MaxSize     : 0x150
  Offset      : 0x3a20
  Section     : .text
  Orc Section : .local.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB043:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rdi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdx, %rbp
    00000011: 	pushq	%rbx
    00000012: 	leaq	0x10(%rdi), %rbx
    00000016: 	subq	$0x10, %rsp
    0000001a: 	movq	0x8(%rsi), %r13
    0000001e: 	movq	%fs:0x28, %rax
    00000027: 	movq	%rax, 0x8(%rsp)
    0000002c: 	xorl	%eax, %eax
    0000002e: 	movq	%rbx, (%rdi)
    00000031: 	movq	(%rsi), %r14
    00000034: 	movq	%r14, %rax
    00000037: 	addq	%r13, %rax
    0000003a: 	je	.Ltmp89 # Offset: 58
    0000003c: 	testq	%r14, %r14
    0000003f: 	je	.Ltmp90 # Offset: 63
.Ltmp89:
    00000045: 	movq	%r13, (%rsp)
    00000049: 	cmpq	$0xf, %r13
    0000004d: 	ja	.Ltmp91 # Offset: 77
    0000004f: 	cmpq	$0x1, %r13
    00000053: 	jne	.Ltmp92 # Offset: 83
    00000055: 	movzbl	(%r14), %eax
    00000059: 	movb	%al, 0x10(%r12)
    0000005e: 	movq	%rbx, %rax
.Ltmp96:
    00000061: 	movq	%r13, 0x8(%r12)
    00000066: 	movq	%rbp, %rdi
    00000069: 	movb	$0x0, (%rax,%r13)
    0000006e: 	callq	strlen@PLT # Offset: 110
    00000073: 	movq	%rax, %rdx
    00000076: 	movabsq	$0x3fffffffffffffff, %rax
    00000080: 	subq	0x8(%r12), %rax
    00000085: 	cmpq	%rax, %rdx
    00000088: 	ja	.Ltmp93 # Offset: 136
    0000008a: 	movq	%rbp, %rsi
    0000008d: 	movq	%r12, %rdi
    00000090: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 144
    00000095: 	movq	0x8(%rsp), %rax
    0000009a: 	subq	%fs:0x28, %rax
    000000a3: 	jne	.Ltmp94 # Offset: 163
    000000a5: 	addq	$0x10, %rsp
    000000a9: 	movq	%r12, %rax
    000000ac: 	popq	%rbx
    000000ad: 	popq	%rbp
    000000ae: 	popq	%r12
    000000b0: 	popq	%r13
    000000b2: 	popq	%r14
    000000b4: 	retq # Offset: 180
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp92:
    000000b8: 	testq	%r13, %r13
    000000bb: 	jne	.Ltmp95 # Offset: 187
    000000bd: 	movq	%rbx, %rax
    000000c0: 	jmp	.Ltmp96 # Offset: 192
    000000c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp91:
    000000c8: 	movq	%r12, %rdi
    000000cb: 	movq	%rsp, %rsi
    000000ce: 	xorl	%edx, %edx
    000000d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 208
    000000d5: 	movq	%rax, (%r12)
    000000d9: 	movq	%rax, %rdi
    000000dc: 	movq	(%rsp), %rax
    000000e0: 	movq	%rax, 0x10(%r12)
.Ltmp97:
    000000e5: 	movq	%r13, %rdx
    000000e8: 	movq	%r14, %rsi
    000000eb: 	callq	memcpy@PLT # Offset: 235
    000000f0: 	movq	(%rsp), %r13
    000000f4: 	movq	(%r12), %rax
    000000f8: 	jmp	.Ltmp96 # Offset: 248
.Ltmp90:
    000000fd: 	leaq	DATAat0x15110(%rip), %rdi
    00000104: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 260
.Ltmp93:
    00000109: 	leaq	DATAat0x151a1(%rip), %rdi
    00000110: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 272
.Ltmp94:
    00000115: 	callq	__stack_chk_fail@PLT # Offset: 277
.Ltmp95:
    0000011a: 	movq	%rbx, %rdi
    0000011d: 	jmp	.Ltmp97 # Offset: 285
    0000011f: 	endbr64
    00000123: 	movq	%rax, %rbp
    00000126: 	movq	(%r12), %rdi
    0000012a: 	cmpq	%rdi, %rbx
    0000012d: 	je	.Ltmp98 # Offset: 301
    0000012f: 	movq	0x10(%r12), %rsi
    00000134: 	addq	$0x1, %rsi
    00000138: 	callq	_ZdlPvm@PLT # Offset: 312
.Ltmp98:
    0000013d: 	movq	%rbp, %rdi
    00000140: 	callq	_Unwind_Resume@PLT # Offset: 320
DWARF CFI Instructions:
    <empty>
End of Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"

Binary Function "_Z18check_sum_channelsIhEvT_mmmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 45
  State       : disassembled
  Address     : 0x3b70
  Size        : 0x175
  MaxSize     : 0x180
  Offset      : 0x3b70
  Section     : .text
  Orc Section : .local.text._Z18check_sum_channelsIhEvT_mmmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB044:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	movq	%rdx, %r9
    00000009: 	pushq	%r12
    0000000b: 	pushq	%rbp
    0000000c: 	pushq	%rbx
    0000000d: 	subq	$0x18, %rsp
    00000011: 	cvttsd2si	init_value(%rip), %edx
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x8(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	movl	%edx, %eax
    0000002b: 	imull	%ecx, %eax
    0000002e: 	imull	%r9d, %eax
    00000032: 	imull	%esi, %eax
    00000035: 	cmpb	%dil, %al
    00000038: 	jne	.Ltmp99 # Offset: 56
    0000003a: 	movq	0x8(%rsp), %rax
    0000003f: 	subq	%fs:0x28, %rax
    00000048: 	jne	.Ltmp100 # Offset: 72
    0000004e: 	addq	$0x18, %rsp
    00000052: 	popq	%rbx
    00000053: 	popq	%rbp
    00000054: 	popq	%r12
    00000056: 	popq	%r13
    00000058: 	retq # Offset: 88
    00000059: 	nopl	(%rax) # Size: 7
.Ltmp99:
    00000060: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r13
    00000067: 	movq	%r8, %r12
    0000006a: 	movl	%edi, %ebp
    0000006c: 	movl	%eax, %ebx
    0000006e: 	movq	%r13, %rdi
    00000071: 	movl	$0x5, %edx
    00000076: 	leaq	DATAat0x15182(%rip), %rsi
    0000007d: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 125
    00000082: 	movq	0x8(%r12), %rdx
    00000087: 	movq	(%r12), %rsi
    0000008b: 	movq	%r13, %rdi
    0000008e: 	leaq	0x7(%rsp), %r13
    00000093: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 147
    00000098: 	movl	$0x12, %edx
    0000009d: 	leaq	DATAat0x15188(%rip), %rsi
    000000a4: 	movq	%rax, %r12
    000000a7: 	movq	%rax, %rdi
    000000aa: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 170
    000000af: 	movq	%r12, %rdi
    000000b2: 	movl	$0x1, %edx
    000000b7: 	movq	%r13, %rsi
    000000ba: 	movb	%bl, 0x7(%rsp)
    000000be: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 190
    000000c3: 	movl	$0x5, %edx
    000000c8: 	leaq	DATAat0x1519b(%rip), %rsi
    000000cf: 	movq	%rax, %r12
    000000d2: 	movq	%rax, %rdi
    000000d5: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 213
    000000da: 	movq	%r12, %rdi
    000000dd: 	movl	$0x1, %edx
    000000e2: 	movq	%r13, %rsi
    000000e5: 	movb	%bpl, 0x7(%rsp)
    000000ea: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 234
    000000ef: 	movq	%rax, %rbp
    000000f2: 	movq	(%rax), %rax
    000000f5: 	movq	-0x18(%rax), %rax
    000000f9: 	movq	0xf0(%rbp,%rax), %r12
    00000101: 	testq	%r12, %r12
    00000104: 	je	.Ltmp101 # Offset: 260
    00000106: 	cmpb	$0x0, 0x38(%r12)
    0000010c: 	je	.Ltmp102 # Offset: 268
    0000010e: 	movsbl	0x43(%r12), %esi
.Ltmp103:
    00000114: 	movq	%rbp, %rdi
    00000117: 	callq	_ZNSo3putEc@PLT # Offset: 279
    0000011c: 	movq	%rax, %rdi
    0000011f: 	movq	0x8(%rsp), %rax
    00000124: 	subq	%fs:0x28, %rax
    0000012d: 	jne	.Ltmp100 # Offset: 301
    0000012f: 	addq	$0x18, %rsp
    00000133: 	popq	%rbx
    00000134: 	popq	%rbp
    00000135: 	popq	%r12
    00000137: 	popq	%r13
    00000139: 	jmp	_ZNSo5flushEv@PLT # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp102:
    00000140: 	movq	%r12, %rdi
    00000143: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 323
    00000148: 	movq	(%r12), %rax
    0000014c: 	movl	$0xa, %esi
    00000151: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000158: 	movq	0x30(%rax), %rax
    0000015c: 	cmpq	%rdx, %rax
    0000015f: 	je	.Ltmp103 # Offset: 351
    00000161: 	movq	%r12, %rdi
    00000164: 	callq	*%rax # Offset: 356
    00000166: 	movsbl	%al, %esi
    00000169: 	jmp	.Ltmp103 # Offset: 361
.Ltmp100:
    0000016b: 	callq	__stack_chk_fail@PLT # Offset: 363
.Ltmp101:
    00000170: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 368
DWARF CFI Instructions:
    <empty>
End of Function "_Z18check_sum_channelsIhEvT_mmmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9check_sumIiEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 46
  State       : disassembled
  Address     : 0x3cf0
  Size        : 0x118
  MaxSize     : 0x120
  Offset      : 0x3cf0
  Section     : .text
  Orc Section : .local.text._Z9check_sumIiEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB045:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	pushq	%rbx
    0000000a: 	subq	$0x8, %rsp
    0000000e: 	cvttsd2si	init_value(%rip), %r12d
    00000017: 	imull	$0xf42400, %r12d, %r12d
    0000001e: 	cmpl	%edi, %r12d
    00000021: 	jne	.Ltmp104 # Offset: 33
    00000023: 	addq	$0x8, %rsp
    00000027: 	popq	%rbx
    00000028: 	popq	%rbp
    00000029: 	popq	%r12
    0000002b: 	popq	%r13
    0000002d: 	retq # Offset: 45
    0000002e: 	nop # Size: 2
.Ltmp104:
    00000030: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r13
    00000037: 	movl	%edi, %ebp
    00000039: 	movq	%rsi, %rbx
    0000003c: 	movl	$0x5, %edx
    00000041: 	movq	%r13, %rdi
    00000044: 	leaq	DATAat0x15182(%rip), %rsi
    0000004b: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 75
    00000050: 	movq	0x8(%rbx), %rdx
    00000054: 	movq	(%rbx), %rsi
    00000057: 	movq	%r13, %rdi
    0000005a: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 90
    0000005f: 	movl	$0x12, %edx
    00000064: 	leaq	DATAat0x15188(%rip), %rsi
    0000006b: 	movq	%rax, %r13
    0000006e: 	movq	%rax, %rdi
    00000071: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 113
    00000076: 	movl	%r12d, %esi
    00000079: 	movq	%r13, %rdi
    0000007c: 	callq	_ZNSolsEi@PLT # Offset: 124
    00000081: 	movl	$0x5, %edx
    00000086: 	leaq	DATAat0x1519b(%rip), %rsi
    0000008d: 	movq	%rax, %r12
    00000090: 	movq	%rax, %rdi
    00000093: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 147
    00000098: 	movl	%ebp, %esi
    0000009a: 	movq	%r12, %rdi
    0000009d: 	callq	_ZNSolsEi@PLT # Offset: 157
    000000a2: 	movq	%rax, %rbp
    000000a5: 	movq	(%rax), %rax
    000000a8: 	movq	-0x18(%rax), %rax
    000000ac: 	movq	0xf0(%rbp,%rax), %r12
    000000b4: 	testq	%r12, %r12
    000000b7: 	je	.Ltmp105 # Offset: 183
    000000b9: 	cmpb	$0x0, 0x38(%r12)
    000000bf: 	je	.Ltmp106 # Offset: 191
    000000c1: 	movsbl	0x43(%r12), %esi
.Ltmp107:
    000000c7: 	movq	%rbp, %rdi
    000000ca: 	callq	_ZNSo3putEc@PLT # Offset: 202
    000000cf: 	addq	$0x8, %rsp
    000000d3: 	popq	%rbx
    000000d4: 	movq	%rax, %rdi
    000000d7: 	popq	%rbp
    000000d8: 	popq	%r12
    000000da: 	popq	%r13
    000000dc: 	jmp	_ZNSo5flushEv@PLT # TAILCALL  # Offset: 220
    000000e1: 	nopl	(%rax) # Size: 7
.Ltmp106:
    000000e8: 	movq	%r12, %rdi
    000000eb: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 235
    000000f0: 	movq	(%r12), %rax
    000000f4: 	movl	$0xa, %esi
    000000f9: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000100: 	movq	0x30(%rax), %rax
    00000104: 	cmpq	%rdx, %rax
    00000107: 	je	.Ltmp107 # Offset: 263
    00000109: 	movq	%r12, %rdi
    0000010c: 	callq	*%rax # Offset: 268
    0000010e: 	movsbl	%al, %esi
    00000111: 	jmp	.Ltmp107 # Offset: 273
.Ltmp105:
    00000113: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 275
DWARF CFI Instructions:
    <empty>
End of Function "_Z9check_sumIiEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z18check_sum_channelsIiEvT_mmmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 47
  State       : disassembled
  Address     : 0x3e10
  Size        : 0x118
  MaxSize     : 0x120
  Offset      : 0x3e10
  Section     : .text
  Orc Section : .local.text._Z18check_sum_channelsIiEvT_mmmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB046:
    00000000: 	endbr64
    00000004: 	cvttsd2si	init_value(%rip), %eax
    0000000c: 	imull	%ecx, %eax
    0000000f: 	imull	%edx, %eax
    00000012: 	imull	%esi, %eax
    00000015: 	cmpl	%edi, %eax
    00000017: 	jne	.Ltmp108 # Offset: 23
    00000019: 	retq # Offset: 25
    0000001a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp108:
    00000020: 	pushq	%r14
    00000022: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r14
    00000029: 	movl	$0x5, %edx
    0000002e: 	leaq	DATAat0x15182(%rip), %rsi
    00000035: 	pushq	%r13
    00000037: 	movq	%r8, %r13
    0000003a: 	pushq	%r12
    0000003c: 	movl	%edi, %r12d
    0000003f: 	movq	%r14, %rdi
    00000042: 	pushq	%rbp
    00000043: 	movl	%eax, %ebp
    00000045: 	subq	$0x8, %rsp
    00000049: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 73
    0000004e: 	movq	0x8(%r13), %rdx
    00000052: 	movq	(%r13), %rsi
    00000056: 	movq	%r14, %rdi
    00000059: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 89
    0000005e: 	movl	$0x12, %edx
    00000063: 	leaq	DATAat0x15188(%rip), %rsi
    0000006a: 	movq	%rax, %r13
    0000006d: 	movq	%rax, %rdi
    00000070: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 112
    00000075: 	movl	%ebp, %esi
    00000077: 	movq	%r13, %rdi
    0000007a: 	callq	_ZNSolsEi@PLT # Offset: 122
    0000007f: 	movl	$0x5, %edx
    00000084: 	leaq	DATAat0x1519b(%rip), %rsi
    0000008b: 	movq	%rax, %rbp
    0000008e: 	movq	%rax, %rdi
    00000091: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 145
    00000096: 	movl	%r12d, %esi
    00000099: 	movq	%rbp, %rdi
    0000009c: 	callq	_ZNSolsEi@PLT # Offset: 156
    000000a1: 	movq	%rax, %rbp
    000000a4: 	movq	(%rax), %rax
    000000a7: 	movq	-0x18(%rax), %rax
    000000ab: 	movq	0xf0(%rbp,%rax), %r12
    000000b3: 	testq	%r12, %r12
    000000b6: 	je	.Ltmp109 # Offset: 182
    000000b8: 	cmpb	$0x0, 0x38(%r12)
    000000be: 	je	.Ltmp110 # Offset: 190
    000000c0: 	movsbl	0x43(%r12), %esi
.Ltmp111:
    000000c6: 	movq	%rbp, %rdi
    000000c9: 	callq	_ZNSo3putEc@PLT # Offset: 201
    000000ce: 	addq	$0x8, %rsp
    000000d2: 	popq	%rbp
    000000d3: 	movq	%rax, %rdi
    000000d6: 	popq	%r12
    000000d8: 	popq	%r13
    000000da: 	popq	%r14
    000000dc: 	jmp	_ZNSo5flushEv@PLT # TAILCALL  # Offset: 220
    000000e1: 	nopl	(%rax) # Size: 7
.Ltmp110:
    000000e8: 	movq	%r12, %rdi
    000000eb: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 235
    000000f0: 	movq	(%r12), %rax
    000000f4: 	movl	$0xa, %esi
    000000f9: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000100: 	movq	0x30(%rax), %rax
    00000104: 	cmpq	%rdx, %rax
    00000107: 	je	.Ltmp111 # Offset: 263
    00000109: 	movq	%r12, %rdi
    0000010c: 	callq	*%rax # Offset: 268
    0000010e: 	movsbl	%al, %esi
    00000111: 	jmp	.Ltmp111 # Offset: 273
.Ltmp109:
    00000113: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 275
DWARF CFI Instructions:
    <empty>
End of Function "_Z18check_sum_channelsIiEvT_mmmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9check_sumIdEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 48
  State       : disassembled
  Address     : 0x3f30
  Size        : 0x160
  MaxSize     : 0x160
  Offset      : 0x3f30
  Section     : .text
  Orc Section : .local.text._Z9check_sumIdEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB047:
    00000000: 	endbr64
    00000004: 	pushq	%r12
    00000006: 	movapd	%xmm0, %xmm1
    0000000a: 	pushq	%rbp
    0000000b: 	movapd	%xmm1, %xmm4
    0000000f: 	movapd	%xmm1, %xmm2
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x10, %rsp
    0000001b: 	movsd	DATAat0x15768(%rip), %xmm0
    00000023: 	movq	DATAat0x15790(%rip), %xmm3
    0000002b: 	mulsd	init_value(%rip), %xmm0
    00000033: 	andpd	%xmm3, %xmm4
    00000037: 	comisd	DATAat0x15770(%rip), %xmm4
    0000003f: 	subsd	%xmm0, %xmm2
    00000043: 	jbe	.Ltmp112 # Offset: 67
    00000045: 	divsd	%xmm1, %xmm2
.Ltmp112:
    00000049: 	andpd	%xmm3, %xmm2
    0000004d: 	movsd	DATAat0x15778(%rip), %xmm3
    00000055: 	comisd	%xmm2, %xmm3
    00000059: 	jbe	.Ltmp113 # Offset: 89
    0000005b: 	addq	$0x10, %rsp
    0000005f: 	popq	%rbx
    00000060: 	popq	%rbp
    00000061: 	popq	%r12
    00000063: 	retq # Offset: 99
    00000064: 	nopl	(%rax) # Size: 4
.Ltmp113:
    00000068: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rbp
    0000006f: 	movl	$0x5, %edx
    00000074: 	movsd	%xmm0, (%rsp)
    00000079: 	leaq	DATAat0x15182(%rip), %rsi
    00000080: 	movq	%rbp, %rdi
    00000083: 	movsd	%xmm1, 0x8(%rsp)
    00000089: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 137
    0000008e: 	movq	0x8(%rbx), %rdx
    00000092: 	movq	(%rbx), %rsi
    00000095: 	movq	%rbp, %rdi
    00000098: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 152
    0000009d: 	movl	$0x12, %edx
    000000a2: 	leaq	DATAat0x15188(%rip), %rsi
    000000a9: 	movq	%rax, %rdi
    000000ac: 	movq	%rax, %rbp
    000000af: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 175
    000000b4: 	movsd	(%rsp), %xmm0
    000000b9: 	movq	%rbp, %rdi
    000000bc: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 188
    000000c1: 	movl	$0x5, %edx
    000000c6: 	leaq	DATAat0x1519b(%rip), %rsi
    000000cd: 	movq	%rax, %rdi
    000000d0: 	movq	%rax, %rbp
    000000d3: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 211
    000000d8: 	movsd	0x8(%rsp), %xmm1
    000000de: 	movq	%rbp, %rdi
    000000e1: 	movapd	%xmm1, %xmm0
    000000e5: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 229
    000000ea: 	movq	%rax, %rbp
    000000ed: 	movq	(%rax), %rax
    000000f0: 	movq	-0x18(%rax), %rax
    000000f4: 	movq	0xf0(%rbp,%rax), %r12
    000000fc: 	testq	%r12, %r12
    000000ff: 	je	.Ltmp114 # Offset: 255
    00000101: 	cmpb	$0x0, 0x38(%r12)
    00000107: 	je	.Ltmp115 # Offset: 263
    00000109: 	movsbl	0x43(%r12), %esi
.Ltmp116:
    0000010f: 	movq	%rbp, %rdi
    00000112: 	callq	_ZNSo3putEc@PLT # Offset: 274
    00000117: 	addq	$0x10, %rsp
    0000011b: 	popq	%rbx
    0000011c: 	movq	%rax, %rdi
    0000011f: 	popq	%rbp
    00000120: 	popq	%r12
    00000122: 	jmp	_ZNSo5flushEv@PLT # TAILCALL  # Offset: 290
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp115:
    00000130: 	movq	%r12, %rdi
    00000133: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 307
    00000138: 	movq	(%r12), %rax
    0000013c: 	movl	$0xa, %esi
    00000141: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000148: 	movq	0x30(%rax), %rax
    0000014c: 	cmpq	%rdx, %rax
    0000014f: 	je	.Ltmp116 # Offset: 335
    00000151: 	movq	%r12, %rdi
    00000154: 	callq	*%rax # Offset: 340
    00000156: 	movsbl	%al, %esi
    00000159: 	jmp	.Ltmp116 # Offset: 345
.Ltmp114:
    0000015b: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 347
DWARF CFI Instructions:
    <empty>
End of Function "_Z9check_sumIdEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z18check_sum_channelsIdEvT_mmmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 49
  State       : disassembled
  Address     : 0x4090
  Size        : 0x190
  MaxSize     : 0x190
  Offset      : 0x4090
  Section     : .text
  Orc Section : .local.text._Z18check_sum_channelsIdEvT_mmmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB048:
    00000000: 	endbr64
    00000004: 	imulq	%rdx, %rsi
    00000008: 	pushq	%r12
    0000000a: 	movapd	%xmm0, %xmm1
    0000000e: 	pushq	%rbp
    0000000f: 	pushq	%rbx
    00000010: 	movq	%rcx, %rbx
    00000013: 	imulq	%rdi, %rsi
    00000017: 	subq	$0x10, %rsp
    0000001b: 	testq	%rsi, %rsi
    0000001e: 	js	.Ltmp117 # Offset: 30
    00000020: 	pxor	%xmm0, %xmm0
    00000024: 	cvtsi2sd	%rsi, %xmm0
.Ltmp120:
    00000029: 	mulsd	init_value(%rip), %xmm0
    00000031: 	movq	DATAat0x15790(%rip), %xmm3
    00000039: 	movapd	%xmm1, %xmm4
    0000003d: 	movapd	%xmm1, %xmm2
    00000041: 	andpd	%xmm3, %xmm4
    00000045: 	comisd	DATAat0x15770(%rip), %xmm4
    0000004d: 	subsd	%xmm0, %xmm2
    00000051: 	jbe	.Ltmp118 # Offset: 81
    00000053: 	divsd	%xmm1, %xmm2
.Ltmp118:
    00000057: 	andpd	%xmm3, %xmm2
    0000005b: 	movsd	DATAat0x15778(%rip), %xmm3
    00000063: 	comisd	%xmm2, %xmm3
    00000067: 	jbe	.Ltmp119 # Offset: 103
    00000069: 	addq	$0x10, %rsp
    0000006d: 	popq	%rbx
    0000006e: 	popq	%rbp
    0000006f: 	popq	%r12
    00000071: 	retq # Offset: 113
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp117:
    00000078: 	movq	%rsi, %rax
    0000007b: 	andl	$0x1, %esi
    0000007e: 	pxor	%xmm0, %xmm0
    00000082: 	shrq	%rax
    00000085: 	orq	%rsi, %rax
    00000088: 	cvtsi2sd	%rax, %xmm0
    0000008d: 	addsd	%xmm0, %xmm0
    00000091: 	jmp	.Ltmp120 # Offset: 145
    00000093: 	nopl	(%rax,%rax) # Size: 5
.Ltmp119:
    00000098: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rbp
    0000009f: 	movl	$0x5, %edx
    000000a4: 	movsd	%xmm0, (%rsp)
    000000a9: 	leaq	DATAat0x15182(%rip), %rsi
    000000b0: 	movq	%rbp, %rdi
    000000b3: 	movsd	%xmm1, 0x8(%rsp)
    000000b9: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 185
    000000be: 	movq	0x8(%rbx), %rdx
    000000c2: 	movq	(%rbx), %rsi
    000000c5: 	movq	%rbp, %rdi
    000000c8: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 200
    000000cd: 	movl	$0x12, %edx
    000000d2: 	leaq	DATAat0x15188(%rip), %rsi
    000000d9: 	movq	%rax, %rdi
    000000dc: 	movq	%rax, %rbp
    000000df: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 223
    000000e4: 	movsd	(%rsp), %xmm0
    000000e9: 	movq	%rbp, %rdi
    000000ec: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 236
    000000f1: 	movl	$0x5, %edx
    000000f6: 	leaq	DATAat0x1519b(%rip), %rsi
    000000fd: 	movq	%rax, %rdi
    00000100: 	movq	%rax, %rbp
    00000103: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 259
    00000108: 	movsd	0x8(%rsp), %xmm1
    0000010e: 	movq	%rbp, %rdi
    00000111: 	movapd	%xmm1, %xmm0
    00000115: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 277
    0000011a: 	movq	%rax, %rbp
    0000011d: 	movq	(%rax), %rax
    00000120: 	movq	-0x18(%rax), %rax
    00000124: 	movq	0xf0(%rbp,%rax), %r12
    0000012c: 	testq	%r12, %r12
    0000012f: 	je	.Ltmp121 # Offset: 303
    00000131: 	cmpb	$0x0, 0x38(%r12)
    00000137: 	je	.Ltmp122 # Offset: 311
    00000139: 	movsbl	0x43(%r12), %esi
.Ltmp123:
    0000013f: 	movq	%rbp, %rdi
    00000142: 	callq	_ZNSo3putEc@PLT # Offset: 322
    00000147: 	addq	$0x10, %rsp
    0000014b: 	popq	%rbx
    0000014c: 	movq	%rax, %rdi
    0000014f: 	popq	%rbp
    00000150: 	popq	%r12
    00000152: 	jmp	_ZNSo5flushEv@PLT # TAILCALL  # Offset: 338
    00000157: 	nopw	(%rax,%rax) # Size: 9
.Ltmp122:
    00000160: 	movq	%r12, %rdi
    00000163: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 355
    00000168: 	movq	(%r12), %rax
    0000016c: 	movl	$0xa, %esi
    00000171: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000178: 	movq	0x30(%rax), %rax
    0000017c: 	cmpq	%rdx, %rax
    0000017f: 	je	.Ltmp123 # Offset: 383
    00000181: 	movq	%r12, %rdi
    00000184: 	callq	*%rax # Offset: 388
    00000186: 	movsbl	%al, %esi
    00000189: 	jmp	.Ltmp123 # Offset: 393
.Ltmp121:
    0000018b: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 395
DWARF CFI Instructions:
    <empty>
End of Function "_Z18check_sum_channelsIdEvT_mmmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_" after disassembly {
  Number      : 50
  State       : disassembled
  Address     : 0x4220
  Size        : 0x328
  MaxSize     : 0x330
  Offset      : 0x4220
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB049:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movq	%rsi, %rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x18, %rsp
    00000015: 	movq	0x48(%rdi), %r12
    00000019: 	movq	0x28(%rdi), %rsi
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x8(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	movq	0x30(%rdi), %rax
    00000031: 	subq	0x38(%rdi), %rax
    00000035: 	movq	%r12, %r13
    00000038: 	sarq	$0x5, %rax
    0000003c: 	subq	%rsi, %r13
    0000003f: 	movq	%r13, %rcx
    00000042: 	sarq	$0x3, %rcx
    00000046: 	cmpq	$0x1, %r12
    0000004a: 	movq	%rcx, %rdx
    0000004d: 	adcq	$-0x1, %rdx
    00000051: 	shlq	$0x4, %rdx
    00000055: 	addq	%rdx, %rax
    00000058: 	movq	0x20(%rdi), %rdx
    0000005c: 	subq	0x10(%rdi), %rdx
    00000060: 	sarq	$0x5, %rdx
    00000064: 	addq	%rdx, %rax
    00000067: 	movabsq	$0x3ffffffffffffff, %rdx
    00000071: 	cmpq	%rdx, %rax
    00000074: 	je	.Ltmp124 # Offset: 116
    0000007a: 	movq	0x8(%rdi), %rdx
    0000007e: 	movq	%rdi, %rbx
    00000081: 	movq	(%rdi), %rdi
    00000084: 	movq	%r12, %rax
    00000087: 	subq	%rdi, %rax
    0000008a: 	movq	%rdx, %r8
    0000008d: 	sarq	$0x3, %rax
    00000091: 	subq	%rax, %r8
    00000094: 	cmpq	$0x1, %r8
    00000098: 	jbe	.Ltmp125 # Offset: 152
.Ltmp136:
    0000009e: 	movl	$0x200, %edi
    000000a3: 	callq	_Znwm@PLT # Offset: 163
    000000a8: 	movq	%rax, 0x8(%r12)
    000000ad: 	movq	0x30(%rbx), %r13
    000000b1: 	movq	0x8(%rbp), %r12
    000000b5: 	leaq	0x10(%r13), %rdi
    000000b9: 	movq	%rdi, (%r13)
    000000bd: 	movq	(%rbp), %r14
    000000c1: 	movq	%r14, %rax
    000000c4: 	addq	%r12, %rax
    000000c7: 	je	.Ltmp126 # Offset: 199
    000000c9: 	testq	%r14, %r14
    000000cc: 	je	.Ltmp127 # Offset: 204
.Ltmp126:
    000000d2: 	movq	%r12, (%rsp)
    000000d6: 	cmpq	$0xf, %r12
    000000da: 	ja	.Ltmp128 # Offset: 218
    000000e0: 	cmpq	$0x1, %r12
    000000e4: 	jne	.Ltmp129 # Offset: 228
    000000e6: 	movzbl	(%r14), %eax
    000000ea: 	movb	%al, 0x10(%r13)
.Ltmp131:
    000000ee: 	movq	%r12, 0x8(%r13)
    000000f2: 	movb	$0x0, (%rdi,%r12)
    000000f7: 	movq	0x48(%rbx), %rdx
    000000fb: 	movq	0x8(%rdx), %rax
    000000ff: 	addq	$0x8, %rdx
    00000103: 	movq	%rdx, %xmm1
    00000108: 	movq	%rax, %xmm0
    0000010d: 	addq	$0x200, %rax
    00000113: 	punpcklqdq	%xmm0, %xmm0
    00000117: 	movups	%xmm0, 0x30(%rbx)
    0000011b: 	movq	%rax, %xmm0
    00000120: 	punpcklqdq	%xmm1, %xmm0
    00000124: 	movups	%xmm0, 0x40(%rbx)
    00000128: 	movq	0x8(%rsp), %rax
    0000012d: 	subq	%fs:0x28, %rax
    00000136: 	jne	.Ltmp130 # Offset: 310
    0000013c: 	addq	$0x18, %rsp
    00000140: 	popq	%rbx
    00000141: 	popq	%rbp
    00000142: 	popq	%r12
    00000144: 	popq	%r13
    00000146: 	popq	%r14
    00000148: 	popq	%r15
    0000014a: 	retq # Offset: 330
    0000014b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp129:
    00000150: 	testq	%r12, %r12
    00000153: 	je	.Ltmp131 # Offset: 339
    00000155: 	jmp	.Ltmp132 # Offset: 341
    0000015a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp125:
    00000160: 	leaq	0x2(%rcx), %r14
    00000164: 	leaq	(%r14,%r14), %rax
    00000168: 	cmpq	%rax, %rdx
    0000016b: 	ja	.Ltmp133 # Offset: 363
    00000171: 	testq	%rdx, %rdx
    00000174: 	movl	$0x1, %eax
    00000179: 	cmovneq	%rdx, %rax
    0000017d: 	leaq	0x2(%rdx,%rax), %r15
    00000182: 	movq	%r15, %rax
    00000185: 	shrq	$0x3c, %rax
    00000189: 	jne	.Ltmp134 # Offset: 393
    0000018f: 	leaq	(,%r15,8), %rdi
    00000197: 	callq	_Znwm@PLT # Offset: 407
    0000019c: 	movq	0x28(%rbx), %rsi
    000001a0: 	movq	%rax, %r12
    000001a3: 	movq	%r15, %rax
    000001a6: 	subq	%r14, %rax
    000001a9: 	shrq	%rax
    000001ac: 	leaq	(%r12,%rax,8), %r14
    000001b0: 	movq	0x48(%rbx), %rax
    000001b4: 	leaq	0x8(%rax), %rdx
    000001b8: 	cmpq	%rsi, %rdx
    000001bb: 	je	.Ltmp135 # Offset: 443
    000001bd: 	subq	%rsi, %rdx
    000001c0: 	movq	%r14, %rdi
    000001c3: 	callq	memmove@PLT # Offset: 451
.Ltmp135:
    000001c8: 	movq	0x8(%rbx), %rax
    000001cc: 	movq	(%rbx), %rdi
    000001cf: 	leaq	(,%rax,8), %rsi
    000001d7: 	callq	_ZdlPvm@PLT # Offset: 471
    000001dc: 	movq	%r12, (%rbx)
    000001df: 	movq	%r15, 0x8(%rbx)
.Ltmp138:
    000001e3: 	movq	(%r14), %rax
    000001e6: 	movq	(%r14), %xmm0
    000001eb: 	leaq	(%r14,%r13), %r12
    000001ef: 	movq	%r14, 0x28(%rbx)
    000001f3: 	movq	%r12, 0x48(%rbx)
    000001f7: 	addq	$0x200, %rax
    000001fd: 	movq	%rax, %xmm2
    00000202: 	punpcklqdq	%xmm2, %xmm0
    00000206: 	movups	%xmm0, 0x18(%rbx)
    0000020a: 	movq	(%r12), %rax
    0000020e: 	movq	(%r12), %xmm0
    00000214: 	addq	$0x200, %rax
    0000021a: 	movq	%rax, %xmm3
    0000021f: 	punpcklqdq	%xmm3, %xmm0
    00000223: 	movups	%xmm0, 0x38(%rbx)
    00000227: 	jmp	.Ltmp136 # Offset: 551
    0000022c: 	nopl	(%rax) # Size: 4
.Ltmp128:
    00000230: 	movq	%rsp, %rsi
    00000233: 	xorl	%edx, %edx
    00000235: 	movq	%r13, %rdi
    00000238: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 568
    0000023d: 	movq	%rax, (%r13)
    00000241: 	movq	%rax, %rdi
    00000244: 	movq	(%rsp), %rax
    00000248: 	movq	%rax, 0x10(%r13)
.Ltmp132:
    0000024c: 	movq	%r12, %rdx
    0000024f: 	movq	%r14, %rsi
    00000252: 	callq	memcpy@PLT # Offset: 594
    00000257: 	movq	(%rsp), %r12
    0000025b: 	movq	(%r13), %rdi
    0000025f: 	jmp	.Ltmp131 # Offset: 607
    00000264: 	nopl	(%rax) # Size: 4
.Ltmp133:
    00000268: 	subq	%r14, %rdx
    0000026b: 	addq	$0x8, %r12
    0000026f: 	shrq	%rdx
    00000272: 	leaq	(%rdi,%rdx,8), %r14
    00000276: 	movq	%r12, %rdx
    00000279: 	subq	%rsi, %rdx
    0000027c: 	cmpq	%r14, %rsi
    0000027f: 	jbe	.Ltmp137 # Offset: 639
    00000281: 	cmpq	%r12, %rsi
    00000284: 	je	.Ltmp138 # Offset: 644
    0000028a: 	movq	%r14, %rdi
    0000028d: 	callq	memmove@PLT # Offset: 653
    00000292: 	jmp	.Ltmp138 # Offset: 658
    00000297: 	nopw	(%rax,%rax) # Size: 9
.Ltmp137:
    000002a0: 	cmpq	%r12, %rsi
    000002a3: 	je	.Ltmp138 # Offset: 675
    000002a9: 	leaq	0x8(%r13), %rdi
    000002ad: 	subq	%rdx, %rdi
    000002b0: 	addq	%r14, %rdi
    000002b3: 	callq	memmove@PLT # Offset: 691
    000002b8: 	jmp	.Ltmp138 # Offset: 696
.Ltmp127:
    000002bd: 	leaq	DATAat0x15110(%rip), %rdi
    000002c4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 708
    000002c9: 	nopl	(%rax) # Size: 7
.Ltmp134:
    000002d0: 	shrq	$0x3d, %r15
    000002d4: 	je	.Ltmp139 # Offset: 724
    000002d6: 	callq	_ZSt28__throw_bad_array_new_lengthv@PLT # Offset: 726
.Ltmp139:
    000002db: 	callq	_ZSt17__throw_bad_allocv@PLT # Offset: 731
.Ltmp124:
    000002e0: 	leaq	DATAat0x151b8(%rip), %rdi
    000002e7: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 743
.Ltmp130:
    000002ec: 	callq	__stack_chk_fail@PLT # Offset: 748
    000002f1: 	endbr64
    000002f5: 	movq	%rax, %rdi
    000002f8: 	callq	__cxa_begin_catch@PLT # Offset: 760
    000002fd: 	movq	0x48(%rbx), %rax
    00000301: 	movl	$0x200, %esi
    00000306: 	movq	0x8(%rax), %rdi
    0000030a: 	callq	_ZdlPvm@PLT # Offset: 778
    0000030f: 	callq	__cxa_rethrow@PLT # Offset: 783
    00000314: 	endbr64
    00000318: 	movq	%rax, %rbp
    0000031b: 	callq	__cxa_end_catch@PLT # Offset: 795
    00000320: 	movq	%rbp, %rdi
    00000323: 	callq	_Unwind_Resume@PLT # Offset: 803
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_"

Binary Function "_Z18test_loop_4D_ABCD2IdEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 51
  State       : disassembled
  Address     : 0x4550
  Size        : 0x288
  MaxSize     : 0x290
  Offset      : 0x4550
  Section     : .text
  Orc Section : .local.text._Z18test_loop_4D_ABCD2IdEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB050:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movq	%rsi, %rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	callq	clock@PLT # Offset: 24
    0000001d: 	movl	iterations(%rip), %r9d
    00000024: 	movq	%rax, start_time(%rip)
    0000002b: 	testl	%r9d, %r9d
    0000002e: 	jle	.Ltmp140 # Offset: 46
    00000034: 	leaq	0x363c40(%rbx), %rax
    0000003b: 	xorl	%r12d, %r12d
    0000003e: 	leaq	DATAat0x15182(%rip), %r15
    00000045: 	movq	%rax, 0x8(%rsp)
    0000004a: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r13
.Ltmp147:
    00000051: 	xorl	%r8d, %r8d
    00000054: 	pxor	%xmm2, %xmm2
.Ltmp144:
    00000058: 	movq	0x8(%rsp), %rax
    0000005d: 	leaq	(%r8,%rbx), %rdi
    00000061: 	leaq	(%rax,%r8), %r10
.Ltmp143:
    00000065: 	leaq	0x260(%rdi), %rdx
    0000006c: 	movq	%rdi, %rcx
    0000006f: 	pxor	%xmm0, %xmm0
    00000073: 	leaq	0xb220(%rdi), %rsi
    0000007a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp142:
    00000080: 	movq	%rcx, %rax
    00000083: 	nopl	(%rax,%rax) # Size: 5
.Ltmp141:
    00000088: 	movsd	(%rax), %xmm1
    0000008c: 	addq	$0x10, %rax
    00000090: 	addsd	%xmm0, %xmm1
    00000094: 	movsd	-0x8(%rax), %xmm0
    00000099: 	addsd	%xmm1, %xmm0
    0000009d: 	cmpq	%rdx, %rax
    000000a0: 	jne	.Ltmp141 # Offset: 160
    000000a2: 	leaq	0x260(%rax), %rdx
    000000a9: 	addq	$0x260, %rcx
    000000b0: 	cmpq	%rdx, %rsi
    000000b3: 	jne	.Ltmp142 # Offset: 179
    000000b5: 	addq	$0xafc0, %rdi
    000000bc: 	addsd	%xmm0, %xmm2
    000000c0: 	cmpq	%rdi, %r10
    000000c3: 	jne	.Ltmp143 # Offset: 195
    000000c5: 	addq	$0x363c40, %r8
    000000cc: 	cmpq	$0xfe3a6c0, %r8
    000000d3: 	jne	.Ltmp144 # Offset: 211
    000000d5: 	movsd	DATAat0x15780(%rip), %xmm1
    000000dd: 	movapd	%xmm2, %xmm3
    000000e1: 	movapd	%xmm2, %xmm0
    000000e5: 	andpd	DATAat0x15790(%rip), %xmm3
    000000ed: 	mulsd	init_value(%rip), %xmm1
    000000f5: 	comisd	DATAat0x15770(%rip), %xmm3
    000000fd: 	subsd	%xmm1, %xmm0
    00000101: 	jbe	.Ltmp145 # Offset: 257
    00000103: 	divsd	%xmm2, %xmm0
.Ltmp145:
    00000107: 	andpd	DATAat0x15790(%rip), %xmm0
    0000010f: 	movsd	DATAat0x15778(%rip), %xmm4
    00000117: 	comisd	%xmm0, %xmm4
    0000011b: 	jbe	.Ltmp146 # Offset: 283
.Ltmp151:
    0000011d: 	addl	$0x1, %r12d
    00000121: 	cmpl	%r9d, %r12d
    00000124: 	jl	.Ltmp147 # Offset: 292
.Ltmp140:
    0000012a: 	movq	%rbp, %rdi
    0000012d: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 301
    00000132: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000139: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000140: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000147: 	je	.Ltmp148 # Offset: 327
.Ltmp153:
    0000014d: 	movq	-0x20(%rax), %rbp
    00000151: 	callq	clock@PLT # Offset: 337
    00000156: 	pxor	%xmm0, %xmm0
    0000015a: 	movq	%rax, end_time(%rip)
    00000161: 	subq	start_time(%rip), %rax
    00000168: 	movq	%rbp, %rdi
    0000016b: 	cvtsi2sd	%rax, %xmm0
    00000170: 	divsd	DATAat0x15758(%rip), %xmm0
    00000178: 	addq	$0x28, %rsp
    0000017c: 	popq	%rbx
    0000017d: 	popq	%rbp
    0000017e: 	popq	%r12
    00000180: 	popq	%r13
    00000182: 	popq	%r14
    00000184: 	popq	%r15
    00000186: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 390
.Ltmp146:
    0000018b: 	movl	$0x5, %edx
    00000190: 	movq	%r15, %rsi
    00000193: 	movq	%r13, %rdi
    00000196: 	movsd	%xmm2, 0x10(%rsp)
    0000019c: 	movsd	%xmm1, 0x18(%rsp)
    000001a2: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 418
    000001a7: 	movq	0x8(%rbp), %rdx
    000001ab: 	movq	(%rbp), %rsi
    000001af: 	movq	%r13, %rdi
    000001b2: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 434
    000001b7: 	movl	$0x12, %edx
    000001bc: 	leaq	DATAat0x15188(%rip), %rsi
    000001c3: 	movq	%rax, %rdi
    000001c6: 	movq	%rax, %r14
    000001c9: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 457
    000001ce: 	movsd	0x18(%rsp), %xmm1
    000001d4: 	movq	%r14, %rdi
    000001d7: 	movapd	%xmm1, %xmm0
    000001db: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 475
    000001e0: 	movl	$0x5, %edx
    000001e5: 	leaq	DATAat0x1519b(%rip), %rsi
    000001ec: 	movq	%rax, %rdi
    000001ef: 	movq	%rax, %r14
    000001f2: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 498
    000001f7: 	movsd	0x10(%rsp), %xmm2
    000001fd: 	movq	%r14, %rdi
    00000200: 	movapd	%xmm2, %xmm0
    00000204: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 516
    00000209: 	movq	%rax, %r14
    0000020c: 	movq	(%rax), %rax
    0000020f: 	movq	-0x18(%rax), %rax
    00000213: 	movq	0xf0(%r14,%rax), %rdi
    0000021b: 	testq	%rdi, %rdi
    0000021e: 	je	.Ltmp149 # Offset: 542
    00000220: 	cmpb	$0x0, 0x38(%rdi)
    00000224: 	je	.Ltmp150 # Offset: 548
    00000226: 	movsbl	0x43(%rdi), %esi
.Ltmp152:
    0000022a: 	movq	%r14, %rdi
    0000022d: 	callq	_ZNSo3putEc@PLT # Offset: 557
    00000232: 	movq	%rax, %rdi
    00000235: 	callq	_ZNSo5flushEv@PLT # Offset: 565
    0000023a: 	movl	iterations(%rip), %r9d
    00000241: 	jmp	.Ltmp151 # Offset: 577
.Ltmp150:
    00000246: 	movq	%rdi, 0x10(%rsp)
    0000024b: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 587
    00000250: 	movq	0x10(%rsp), %rdi
    00000255: 	movl	$0xa, %esi
    0000025a: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000261: 	movq	(%rdi), %rax
    00000264: 	movq	0x30(%rax), %rax
    00000268: 	cmpq	%rdx, %rax
    0000026b: 	je	.Ltmp152 # Offset: 619
    0000026d: 	callq	*%rax # Offset: 621
    0000026f: 	movsbl	%al, %esi
    00000272: 	jmp	.Ltmp152 # Offset: 626
.Ltmp148:
    00000274: 	movq	-0x8(%rdx), %rax
    00000278: 	addq	$0x200, %rax
    0000027e: 	jmp	.Ltmp153 # Offset: 638
.Ltmp149:
    00000283: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 643
DWARF CFI Instructions:
    <empty>
End of Function "_Z18test_loop_4D_ABCD2IdEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_XZYIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 52
  State       : disassembled
  Address     : 0x47e0
  Size        : 0x3a5
  MaxSize     : 0x3b0
  Offset      : 0x47e0
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_XZYIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB051:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdx, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	xorl	%r12d, %r12d
    00000012: 	pushq	%rbp
    00000013: 	movq	%rsi, %rbp
    00000016: 	pushq	%rbx
    00000017: 	movq	%rdi, %rbx
    0000001a: 	subq	$0x28, %rsp
    0000001e: 	callq	clock@PLT # Offset: 30
    00000023: 	movl	iterations(%rip), %r13d
    0000002a: 	movq	%rax, start_time(%rip)
    00000031: 	leaq	-0x74040(%rbp), %rax
    00000038: 	movq	%rax, 0x10(%rsp)
    0000003d: 	leaq	0x752d0(%rbp), %rax
    00000044: 	movq	%rax, 0x8(%rsp)
    00000049: 	testl	%r13d, %r13d
    0000004c: 	jle	.Ltmp154 # Offset: 76
.Ltmp160:
    00000052: 	movl	$0x74670, %esi
    00000057: 	xorl	%r10d, %r10d
.Ltmp159:
    0000005a: 	movq	%r10, %rdi
    0000005d: 	movq	0x10(%rsp), %rax
    00000062: 	movq	0x8(%rsp), %r9
    00000067: 	leaq	(%rbx,%rsi), %rdx
    0000006b: 	negq	%rdi
    0000006e: 	shlq	$0x3, %rdi
    00000072: 	leaq	(%rax,%rsi), %rcx
    00000076: 	movq	%rdi, %r11
    00000079: 	subq	%rdi, %r9
    0000007c: 	leaq	-0x74670(%rdi), %r8
    00000083: 	negq	%r11
.Ltmp158:
    00000086: 	leaq	0x74048(%rdx), %rax
    0000008d: 	leaq	(%r8,%rdx), %rbp
    00000091: 	leaq	(%rdx,%rdi), %r14
    00000095: 	cmpq	%rax, %rcx
    00000098: 	jae	.Ltmp155 # Offset: 152
    0000009a: 	leaq	0x8(%rcx), %rax
    0000009e: 	cmpq	%rax, %rdx
    000000a1: 	jb	.Ltmp156 # Offset: 161
.Ltmp155:
    000000a7: 	movsd	(%rcx), %xmm1
    000000ab: 	leaq	-0x74670(%rdx), %rbp
    000000b2: 	xorl	%eax, %eax
    000000b4: 	unpcklpd	%xmm1, %xmm1
    000000b8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp157:
    000000c0: 	movsd	(%rbp,%rax), %xmm0
    000000c6: 	movhpd	0x630(%rbp,%rax), %xmm0
    000000cf: 	addpd	%xmm1, %xmm0
    000000d3: 	movlpd	%xmm0, (%rdx,%rax)
    000000d8: 	addq	$0xc60, %rax
    000000de: 	movhpd	%xmm0, -0x630(%rax,%rdx)
    000000e7: 	cmpq	$0x74040, %rax
    000000ed: 	jne	.Ltmp157 # Offset: 237
    000000ef: 	movsd	(%rcx), %xmm0
    000000f3: 	addsd	-0x630(%rdx), %xmm0
    000000fb: 	movsd	%xmm0, 0x74040(%rdx)
.Ltmp171:
    00000103: 	addq	$0x630, %rcx
    0000010a: 	addq	$0x74670, %rdx
    00000111: 	cmpq	%rcx, %r9
    00000114: 	jne	.Ltmp158 # Offset: 276
    0000011a: 	addq	$0x1, %r10
    0000011e: 	addq	$0x8, %rsi
    00000122: 	cmpq	$0xc6, %r10
    00000129: 	jne	.Ltmp159 # Offset: 297
    0000012f: 	addl	$0x1, %r12d
    00000133: 	cmpl	%r13d, %r12d
    00000136: 	jne	.Ltmp160 # Offset: 310
.Ltmp154:
    0000013c: 	movq	%r15, %rdi
    0000013f: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 319
    00000144: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000014b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000152: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000159: 	je	.Ltmp161 # Offset: 345
.Ltmp173:
    0000015f: 	movq	-0x20(%rax), %rbp
    00000163: 	addq	$0x74670, %rbx
    0000016a: 	movl	$0x1, %r12d
    00000170: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r14
    00000177: 	callq	clock@PLT # Offset: 375
    0000017c: 	pxor	%xmm0, %xmm0
    00000180: 	movq	%rax, end_time(%rip)
    00000187: 	movq	%rbp, %rdi
    0000018a: 	subq	start_time(%rip), %rax
    00000191: 	cvtsi2sd	%rax, %xmm0
    00000196: 	divsd	DATAat0x15758(%rip), %xmm0
    0000019e: 	callq	_Z13record_resultdPKc # Offset: 414
.Ltmp169:
    000001a3: 	addl	$0x1, %r12d
    000001a7: 	pxor	%xmm0, %xmm0
    000001ab: 	leaq	0x630(%rbx), %r13
    000001b2: 	cvtsi2sd	%r12d, %xmm0
    000001b7: 	mulsd	init_value(%rip), %xmm0
    000001bf: 	movsd	%xmm0, 0x8(%rsp)
.Ltmp168:
    000001c5: 	leaq	-0x630(%r13), %rbp
    000001cc: 	jmp	.Ltmp162 # Offset: 460
.Ltmp165:
    000001ce: 	addq	$0x8, %rbp
    000001d2: 	cmpq	%r13, %rbp
    000001d5: 	je	.Ltmp163 # Offset: 469
.Ltmp162:
    000001db: 	movsd	(%rbp), %xmm1
    000001e0: 	movapd	%xmm1, %xmm2
    000001e4: 	andpd	DATAat0x15790(%rip), %xmm2
    000001ec: 	movapd	%xmm1, %xmm0
    000001f0: 	comisd	DATAat0x15770(%rip), %xmm2
    000001f8: 	subsd	0x8(%rsp), %xmm0
    000001fe: 	jbe	.Ltmp164 # Offset: 510
    00000200: 	divsd	%xmm1, %xmm0
.Ltmp164:
    00000204: 	andpd	DATAat0x15790(%rip), %xmm0
    0000020c: 	movsd	DATAat0x15778(%rip), %xmm4
    00000214: 	comisd	%xmm0, %xmm4
    00000218: 	ja	.Ltmp165 # Offset: 536
    0000021a: 	movl	$0x5, %edx
    0000021f: 	leaq	DATAat0x15182(%rip), %rsi
    00000226: 	movq	%r14, %rdi
    00000229: 	movsd	%xmm1, 0x18(%rsp)
    0000022f: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 559
    00000234: 	movq	0x8(%r15), %rdx
    00000238: 	movq	(%r15), %rsi
    0000023b: 	movq	%r14, %rdi
    0000023e: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 574
    00000243: 	movl	$0x12, %edx
    00000248: 	leaq	DATAat0x15188(%rip), %rsi
    0000024f: 	movq	%rax, %rdi
    00000252: 	movq	%rax, 0x10(%rsp)
    00000257: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 599
    0000025c: 	movsd	0x8(%rsp), %xmm0
    00000262: 	movq	0x10(%rsp), %rdi
    00000267: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 615
    0000026c: 	movl	$0x5, %edx
    00000271: 	leaq	DATAat0x1519b(%rip), %rsi
    00000278: 	movq	%rax, %rdi
    0000027b: 	movq	%rax, 0x10(%rsp)
    00000280: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 640
    00000285: 	movsd	0x18(%rsp), %xmm1
    0000028b: 	movq	0x10(%rsp), %rdi
    00000290: 	movapd	%xmm1, %xmm0
    00000294: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 660
    00000299: 	movq	%rax, %r8
    0000029c: 	movq	(%rax), %rax
    0000029f: 	movq	-0x18(%rax), %rax
    000002a3: 	movq	0xf0(%r8,%rax), %rdi
    000002ab: 	testq	%rdi, %rdi
    000002ae: 	je	.Ltmp166 # Offset: 686
    000002b4: 	cmpb	$0x0, 0x38(%rdi)
    000002b8: 	je	.Ltmp167 # Offset: 696
    000002be: 	movsbl	0x43(%rdi), %esi
.Ltmp172:
    000002c2: 	movq	%r8, %rdi
    000002c5: 	addq	$0x8, %rbp
    000002c9: 	callq	_ZNSo3putEc@PLT # Offset: 713
    000002ce: 	movq	%rax, %rdi
    000002d1: 	callq	_ZNSo5flushEv@PLT # Offset: 721
    000002d6: 	cmpq	%r13, %rbp
    000002d9: 	jne	.Ltmp162 # Offset: 729
.Ltmp163:
    000002df: 	leaq	0x630(%rbp), %r13
    000002e6: 	leaq	0x74ca0(%rbx), %rax
    000002ed: 	cmpq	%r13, %rax
    000002f0: 	jne	.Ltmp168 # Offset: 752
    000002f6: 	addq	$0x74670, %rbx
    000002fd: 	cmpl	$0x12f, %r12d
    00000304: 	jne	.Ltmp169 # Offset: 772
    0000030a: 	addq	$0x28, %rsp
    0000030e: 	popq	%rbx
    0000030f: 	popq	%rbp
    00000310: 	popq	%r12
    00000312: 	popq	%r13
    00000314: 	popq	%r14
    00000316: 	popq	%r15
    00000318: 	retq # Offset: 792
    00000319: 	nopl	(%rax) # Size: 7
.Ltmp156:
    00000320: 	movq	%r11, %rax
    00000323: 	nopl	(%rax,%rax) # Size: 5
.Ltmp170:
    00000328: 	movsd	(%rcx), %xmm0
    0000032c: 	addsd	(%rbp,%rax), %xmm0
    00000332: 	movsd	%xmm0, (%r14,%rax)
    00000338: 	addq	$0x630, %rax
    0000033e: 	cmpq	%rsi, %rax
    00000341: 	jne	.Ltmp170 # Offset: 833
    00000343: 	jmp	.Ltmp171 # Offset: 835
.Ltmp167:
    00000348: 	movq	%r8, 0x18(%rsp)
    0000034d: 	movq	%rdi, 0x10(%rsp)
    00000352: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 850
    00000357: 	movq	0x10(%rsp), %rdi
    0000035c: 	movq	0x18(%rsp), %r8
    00000361: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000368: 	movl	$0xa, %esi
    0000036d: 	movq	(%rdi), %rax
    00000370: 	movq	0x30(%rax), %rax
    00000374: 	cmpq	%rdx, %rax
    00000377: 	je	.Ltmp172 # Offset: 887
    0000037d: 	movq	%r8, 0x10(%rsp)
    00000382: 	callq	*%rax # Offset: 898
    00000384: 	movq	0x10(%rsp), %r8
    00000389: 	movsbl	%al, %esi
    0000038c: 	jmp	.Ltmp172 # Offset: 908
.Ltmp166:
    00000391: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 913
.Ltmp161:
    00000396: 	movq	-0x8(%rdx), %rax
    0000039a: 	addq	$0x200, %rax
    000003a0: 	jmp	.Ltmp173 # Offset: 928
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_XZYIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_XYZIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 53
  State       : disassembled
  Address     : 0x4b90
  Size        : 0x2ed
  MaxSize     : 0x2f0
  Offset      : 0x4b90
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_XYZIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB052:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rsi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdx, %rbp
    00000013: 	addq	$0x752d0, %r12
    0000001a: 	pushq	%rbx
    0000001b: 	movq	%rdi, %rbx
    0000001e: 	addq	$0x74670, %rbx
    00000025: 	subq	$0x28, %rsp
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movl	iterations(%rip), %r13d
    00000035: 	xorl	%r10d, %r10d
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%r13d, %r13d
    00000042: 	jle	.Ltmp174 # Offset: 66
.Ltmp178:
    00000044: 	movq	%r12, %rcx
    00000047: 	movq	%rbx, %r9
    0000004a: 	xorl	%r11d, %r11d
.Ltmp177:
    0000004d: 	movq	%r9, %rsi
    00000050: 	leaq	0x74670(%r9), %r8
    00000057: 	leaq	-0x74ca0(%rcx), %rdi
.Ltmp176:
    0000005e: 	movsd	-0x74670(%rsi), %xmm0
    00000066: 	movq	%rdi, %rax
    00000069: 	movq	%rsi, %rdx
    0000006c: 	nopl	(%rax) # Size: 4
.Ltmp175:
    00000070: 	addsd	(%rax), %xmm0
    00000074: 	addq	$0x630, %rax
    0000007a: 	addq	$0x74670, %rdx
    00000081: 	movsd	%xmm0, -0x74670(%rdx)
    00000089: 	cmpq	%rcx, %rax
    0000008c: 	jne	.Ltmp175 # Offset: 140
    0000008e: 	addq	$0x630, %rsi
    00000095: 	cmpq	%r8, %rsi
    00000098: 	jne	.Ltmp176 # Offset: 152
    0000009a: 	addq	$0x1, %r11
    0000009e: 	leaq	0x8(%rax), %rcx
    000000a2: 	addq	$0x8, %r9
    000000a6: 	cmpq	$0xc6, %r11
    000000ad: 	jne	.Ltmp177 # Offset: 173
    000000af: 	addl	$0x1, %r10d
    000000b3: 	cmpl	%r13d, %r10d
    000000b6: 	jne	.Ltmp178 # Offset: 182
.Ltmp174:
    000000b8: 	movq	%rbp, %rdi
    000000bb: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 187
    000000c0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000c7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000000ce: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d5: 	je	.Ltmp179 # Offset: 213
.Ltmp189:
    000000db: 	movq	-0x20(%rax), %r12
    000000df: 	movl	$0x1, %r13d
    000000e5: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r15
    000000ec: 	callq	clock@PLT # Offset: 236
    000000f1: 	pxor	%xmm0, %xmm0
    000000f5: 	movq	%rax, end_time(%rip)
    000000fc: 	movq	%r12, %rdi
    000000ff: 	subq	start_time(%rip), %rax
    00000106: 	cvtsi2sd	%rax, %xmm0
    0000010b: 	divsd	DATAat0x15758(%rip), %xmm0
    00000113: 	callq	_Z13record_resultdPKc # Offset: 275
.Ltmp187:
    00000118: 	addl	$0x1, %r13d
    0000011c: 	pxor	%xmm0, %xmm0
    00000120: 	leaq	0x630(%rbx), %r12
    00000127: 	cvtsi2sd	%r13d, %xmm0
    0000012c: 	mulsd	init_value(%rip), %xmm0
    00000134: 	movsd	%xmm0, 0x8(%rsp)
.Ltmp186:
    0000013a: 	leaq	-0x630(%r12), %r14
    00000142: 	jmp	.Ltmp180 # Offset: 322
.Ltmp183:
    00000144: 	addq	$0x8, %r14
    00000148: 	cmpq	%r14, %r12
    0000014b: 	je	.Ltmp181 # Offset: 331
.Ltmp180:
    00000151: 	movsd	(%r14), %xmm1
    00000156: 	movapd	%xmm1, %xmm2
    0000015a: 	andpd	DATAat0x15790(%rip), %xmm2
    00000162: 	movapd	%xmm1, %xmm0
    00000166: 	comisd	DATAat0x15770(%rip), %xmm2
    0000016e: 	subsd	0x8(%rsp), %xmm0
    00000174: 	jbe	.Ltmp182 # Offset: 372
    00000176: 	divsd	%xmm1, %xmm0
.Ltmp182:
    0000017a: 	andpd	DATAat0x15790(%rip), %xmm0
    00000182: 	movsd	DATAat0x15778(%rip), %xmm4
    0000018a: 	comisd	%xmm0, %xmm4
    0000018e: 	ja	.Ltmp183 # Offset: 398
    00000190: 	movl	$0x5, %edx
    00000195: 	leaq	DATAat0x15182(%rip), %rsi
    0000019c: 	movq	%r15, %rdi
    0000019f: 	movsd	%xmm1, 0x18(%rsp)
    000001a5: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 421
    000001aa: 	movq	0x8(%rbp), %rdx
    000001ae: 	movq	(%rbp), %rsi
    000001b2: 	movq	%r15, %rdi
    000001b5: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 437
    000001ba: 	movl	$0x12, %edx
    000001bf: 	leaq	DATAat0x15188(%rip), %rsi
    000001c6: 	movq	%rax, %rdi
    000001c9: 	movq	%rax, 0x10(%rsp)
    000001ce: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 462
    000001d3: 	movsd	0x8(%rsp), %xmm0
    000001d9: 	movq	0x10(%rsp), %rdi
    000001de: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 478
    000001e3: 	movl	$0x5, %edx
    000001e8: 	leaq	DATAat0x1519b(%rip), %rsi
    000001ef: 	movq	%rax, %rdi
    000001f2: 	movq	%rax, 0x10(%rsp)
    000001f7: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 503
    000001fc: 	movsd	0x18(%rsp), %xmm1
    00000202: 	movq	0x10(%rsp), %rdi
    00000207: 	movapd	%xmm1, %xmm0
    0000020b: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 523
    00000210: 	movq	%rax, %r8
    00000213: 	movq	(%rax), %rax
    00000216: 	movq	-0x18(%rax), %rax
    0000021a: 	movq	0xf0(%r8,%rax), %rdi
    00000222: 	testq	%rdi, %rdi
    00000225: 	je	.Ltmp184 # Offset: 549
    0000022b: 	cmpb	$0x0, 0x38(%rdi)
    0000022f: 	je	.Ltmp185 # Offset: 559
    00000231: 	movsbl	0x43(%rdi), %esi
.Ltmp188:
    00000235: 	movq	%r8, %rdi
    00000238: 	addq	$0x8, %r14
    0000023c: 	callq	_ZNSo3putEc@PLT # Offset: 572
    00000241: 	movq	%rax, %rdi
    00000244: 	callq	_ZNSo5flushEv@PLT # Offset: 580
    00000249: 	cmpq	%r14, %r12
    0000024c: 	jne	.Ltmp180 # Offset: 588
.Ltmp181:
    00000252: 	addq	$0x630, %r12
    00000259: 	leaq	0x74ca0(%rbx), %rax
    00000260: 	cmpq	%r12, %rax
    00000263: 	jne	.Ltmp186 # Offset: 611
    00000269: 	addq	$0x74670, %rbx
    00000270: 	cmpl	$0x12f, %r13d
    00000277: 	jne	.Ltmp187 # Offset: 631
    0000027d: 	addq	$0x28, %rsp
    00000281: 	popq	%rbx
    00000282: 	popq	%rbp
    00000283: 	popq	%r12
    00000285: 	popq	%r13
    00000287: 	popq	%r14
    00000289: 	popq	%r15
    0000028b: 	retq # Offset: 651
    0000028c: 	nopl	(%rax) # Size: 4
.Ltmp185:
    00000290: 	movq	%r8, 0x18(%rsp)
    00000295: 	movq	%rdi, 0x10(%rsp)
    0000029a: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 666
    0000029f: 	movq	0x10(%rsp), %rdi
    000002a4: 	movq	0x18(%rsp), %r8
    000002a9: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000002b0: 	movl	$0xa, %esi
    000002b5: 	movq	(%rdi), %rax
    000002b8: 	movq	0x30(%rax), %rax
    000002bc: 	cmpq	%rdx, %rax
    000002bf: 	je	.Ltmp188 # Offset: 703
    000002c5: 	movq	%r8, 0x10(%rsp)
    000002ca: 	callq	*%rax # Offset: 714
    000002cc: 	movq	0x10(%rsp), %r8
    000002d1: 	movsbl	%al, %esi
    000002d4: 	jmp	.Ltmp188 # Offset: 724
.Ltmp184:
    000002d9: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 729
.Ltmp179:
    000002de: 	movq	-0x8(%rdx), %rax
    000002e2: 	addq	$0x200, %rax
    000002e8: 	jmp	.Ltmp189 # Offset: 744
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_XYZIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_YXZIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 54
  State       : disassembled
  Address     : 0x4e80
  Size        : 0x2f9
  MaxSize     : 0x300
  Offset      : 0x4e80
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_YXZIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB053:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rsi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdx, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x28, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %r11d
    00000027: 	movq	%rax, start_time(%rip)
    0000002e: 	testl	%r11d, %r11d
    00000031: 	jle	.Ltmp190 # Offset: 49
    00000037: 	xorl	%r8d, %r8d
    0000003a: 	leaq	0x752d0(%r12), %r13
    00000042: 	leaq	0x75900(%r12), %rdi
    0000004a: 	addq	$0x74670, %rbx
.Ltmp194:
    00000051: 	movq	%rbx, %r10
    00000054: 	xorl	%r9d, %r9d
.Ltmp193:
    00000057: 	movq	%r13, %rcx
    0000005a: 	movq	%r10, %rsi
.Ltmp192:
    0000005d: 	movsd	-0x74670(%rsi), %xmm0
    00000065: 	leaq	-0x74ca0(%rcx), %rax
    0000006c: 	movq	%rsi, %rdx
    0000006f: 	nop # Size: 1
.Ltmp191:
    00000070: 	addsd	(%rax), %xmm0
    00000074: 	addq	$0x630, %rax
    0000007a: 	addq	$0x74670, %rdx
    00000081: 	movsd	%xmm0, -0x74670(%rdx)
    00000089: 	cmpq	%rcx, %rax
    0000008c: 	jne	.Ltmp191 # Offset: 140
    0000008e: 	leaq	0x8(%rax), %rcx
    00000092: 	addq	$0x8, %rsi
    00000096: 	cmpq	%rdi, %rcx
    00000099: 	jne	.Ltmp192 # Offset: 153
    0000009b: 	addq	$0x1, %r9
    0000009f: 	addq	$0x630, %r10
    000000a6: 	cmpq	$0x12d, %r9
    000000ad: 	jne	.Ltmp193 # Offset: 173
    000000af: 	addl	$0x1, %r8d
    000000b3: 	cmpl	%r11d, %r8d
    000000b6: 	jne	.Ltmp194 # Offset: 182
.Ltmp206:
    000000b8: 	movq	%rbp, %rdi
    000000bb: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 187
    000000c0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000c7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000000ce: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d5: 	je	.Ltmp195 # Offset: 213
.Ltmp205:
    000000db: 	movq	-0x20(%rax), %r12
    000000df: 	movl	$0x1, %r13d
    000000e5: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r15
    000000ec: 	callq	clock@PLT # Offset: 236
    000000f1: 	pxor	%xmm0, %xmm0
    000000f5: 	movq	%rax, end_time(%rip)
    000000fc: 	movq	%r12, %rdi
    000000ff: 	subq	start_time(%rip), %rax
    00000106: 	cvtsi2sd	%rax, %xmm0
    0000010b: 	divsd	DATAat0x15758(%rip), %xmm0
    00000113: 	callq	_Z13record_resultdPKc # Offset: 275
.Ltmp203:
    00000118: 	addl	$0x1, %r13d
    0000011c: 	pxor	%xmm0, %xmm0
    00000120: 	leaq	0x630(%rbx), %r12
    00000127: 	cvtsi2sd	%r13d, %xmm0
    0000012c: 	mulsd	init_value(%rip), %xmm0
    00000134: 	movsd	%xmm0, 0x8(%rsp)
.Ltmp202:
    0000013a: 	leaq	-0x630(%r12), %r14
    00000142: 	jmp	.Ltmp196 # Offset: 322
.Ltmp199:
    00000144: 	addq	$0x8, %r14
    00000148: 	cmpq	%r14, %r12
    0000014b: 	je	.Ltmp197 # Offset: 331
.Ltmp196:
    00000151: 	movsd	(%r14), %xmm1
    00000156: 	movapd	%xmm1, %xmm2
    0000015a: 	andpd	DATAat0x15790(%rip), %xmm2
    00000162: 	movapd	%xmm1, %xmm0
    00000166: 	comisd	DATAat0x15770(%rip), %xmm2
    0000016e: 	subsd	0x8(%rsp), %xmm0
    00000174: 	jbe	.Ltmp198 # Offset: 372
    00000176: 	divsd	%xmm1, %xmm0
.Ltmp198:
    0000017a: 	andpd	DATAat0x15790(%rip), %xmm0
    00000182: 	movsd	DATAat0x15778(%rip), %xmm4
    0000018a: 	comisd	%xmm0, %xmm4
    0000018e: 	ja	.Ltmp199 # Offset: 398
    00000190: 	movl	$0x5, %edx
    00000195: 	leaq	DATAat0x15182(%rip), %rsi
    0000019c: 	movq	%r15, %rdi
    0000019f: 	movsd	%xmm1, 0x18(%rsp)
    000001a5: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 421
    000001aa: 	movq	0x8(%rbp), %rdx
    000001ae: 	movq	(%rbp), %rsi
    000001b2: 	movq	%r15, %rdi
    000001b5: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 437
    000001ba: 	movl	$0x12, %edx
    000001bf: 	leaq	DATAat0x15188(%rip), %rsi
    000001c6: 	movq	%rax, %rdi
    000001c9: 	movq	%rax, 0x10(%rsp)
    000001ce: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 462
    000001d3: 	movsd	0x8(%rsp), %xmm0
    000001d9: 	movq	0x10(%rsp), %rdi
    000001de: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 478
    000001e3: 	movl	$0x5, %edx
    000001e8: 	leaq	DATAat0x1519b(%rip), %rsi
    000001ef: 	movq	%rax, %rdi
    000001f2: 	movq	%rax, 0x10(%rsp)
    000001f7: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 503
    000001fc: 	movsd	0x18(%rsp), %xmm1
    00000202: 	movq	0x10(%rsp), %rdi
    00000207: 	movapd	%xmm1, %xmm0
    0000020b: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 523
    00000210: 	movq	%rax, %r8
    00000213: 	movq	(%rax), %rax
    00000216: 	movq	-0x18(%rax), %rax
    0000021a: 	movq	0xf0(%r8,%rax), %rdi
    00000222: 	testq	%rdi, %rdi
    00000225: 	je	.Ltmp200 # Offset: 549
    0000022b: 	cmpb	$0x0, 0x38(%rdi)
    0000022f: 	je	.Ltmp201 # Offset: 559
    00000231: 	movsbl	0x43(%rdi), %esi
.Ltmp204:
    00000235: 	movq	%r8, %rdi
    00000238: 	addq	$0x8, %r14
    0000023c: 	callq	_ZNSo3putEc@PLT # Offset: 572
    00000241: 	movq	%rax, %rdi
    00000244: 	callq	_ZNSo5flushEv@PLT # Offset: 580
    00000249: 	cmpq	%r14, %r12
    0000024c: 	jne	.Ltmp196 # Offset: 588
.Ltmp197:
    00000252: 	addq	$0x630, %r12
    00000259: 	leaq	0x74ca0(%rbx), %rax
    00000260: 	cmpq	%r12, %rax
    00000263: 	jne	.Ltmp202 # Offset: 611
    00000269: 	addq	$0x74670, %rbx
    00000270: 	cmpl	$0x12f, %r13d
    00000277: 	jne	.Ltmp203 # Offset: 631
    0000027d: 	addq	$0x28, %rsp
    00000281: 	popq	%rbx
    00000282: 	popq	%rbp
    00000283: 	popq	%r12
    00000285: 	popq	%r13
    00000287: 	popq	%r14
    00000289: 	popq	%r15
    0000028b: 	retq # Offset: 651
    0000028c: 	nopl	(%rax) # Size: 4
.Ltmp201:
    00000290: 	movq	%r8, 0x18(%rsp)
    00000295: 	movq	%rdi, 0x10(%rsp)
    0000029a: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 666
    0000029f: 	movq	0x10(%rsp), %rdi
    000002a4: 	movq	0x18(%rsp), %r8
    000002a9: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000002b0: 	movl	$0xa, %esi
    000002b5: 	movq	(%rdi), %rax
    000002b8: 	movq	0x30(%rax), %rax
    000002bc: 	cmpq	%rdx, %rax
    000002bf: 	je	.Ltmp204 # Offset: 703
    000002c5: 	movq	%r8, 0x10(%rsp)
    000002ca: 	callq	*%rax # Offset: 714
    000002cc: 	movq	0x10(%rsp), %r8
    000002d1: 	movsbl	%al, %esi
    000002d4: 	jmp	.Ltmp204 # Offset: 724
.Ltmp200:
    000002d9: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 729
.Ltmp195:
    000002de: 	movq	-0x8(%rdx), %rax
    000002e2: 	addq	$0x200, %rax
    000002e8: 	jmp	.Ltmp205 # Offset: 744
.Ltmp190:
    000002ed: 	addq	$0x74670, %rbx
    000002f4: 	jmp	.Ltmp206 # Offset: 756
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_YXZIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_YZXIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 55
  State       : disassembled
  Address     : 0x5180
  Size        : 0x2f9
  MaxSize     : 0x300
  Offset      : 0x5180
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_YZXIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB054:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rsi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdx, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x28, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %r11d
    00000027: 	movq	%rax, start_time(%rip)
    0000002e: 	testl	%r11d, %r11d
    00000031: 	jle	.Ltmp207 # Offset: 49
    00000037: 	xorl	%r8d, %r8d
    0000003a: 	leaq	0x752d0(%r12), %r13
    00000042: 	leaq	0x75900(%r12), %rdi
    0000004a: 	addq	$0x74670, %rbx
.Ltmp211:
    00000051: 	movq	%rbx, %r10
    00000054: 	xorl	%r9d, %r9d
.Ltmp210:
    00000057: 	movq	%r13, %rcx
    0000005a: 	movq	%r10, %rsi
.Ltmp209:
    0000005d: 	movsd	-0x74670(%rsi), %xmm0
    00000065: 	leaq	-0x74ca0(%rcx), %rax
    0000006c: 	movq	%rsi, %rdx
    0000006f: 	nop # Size: 1
.Ltmp208:
    00000070: 	addsd	(%rax), %xmm0
    00000074: 	addq	$0x630, %rax
    0000007a: 	addq	$0x74670, %rdx
    00000081: 	movsd	%xmm0, -0x74670(%rdx)
    00000089: 	cmpq	%rcx, %rax
    0000008c: 	jne	.Ltmp208 # Offset: 140
    0000008e: 	leaq	0x8(%rax), %rcx
    00000092: 	addq	$0x8, %rsi
    00000096: 	cmpq	%rdi, %rcx
    00000099: 	jne	.Ltmp209 # Offset: 153
    0000009b: 	addq	$0x1, %r9
    0000009f: 	addq	$0x630, %r10
    000000a6: 	cmpq	$0x12d, %r9
    000000ad: 	jne	.Ltmp210 # Offset: 173
    000000af: 	addl	$0x1, %r8d
    000000b3: 	cmpl	%r11d, %r8d
    000000b6: 	jne	.Ltmp211 # Offset: 182
.Ltmp223:
    000000b8: 	movq	%rbp, %rdi
    000000bb: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 187
    000000c0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000c7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000000ce: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d5: 	je	.Ltmp212 # Offset: 213
.Ltmp222:
    000000db: 	movq	-0x20(%rax), %r12
    000000df: 	movl	$0x1, %r13d
    000000e5: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r15
    000000ec: 	callq	clock@PLT # Offset: 236
    000000f1: 	pxor	%xmm0, %xmm0
    000000f5: 	movq	%rax, end_time(%rip)
    000000fc: 	movq	%r12, %rdi
    000000ff: 	subq	start_time(%rip), %rax
    00000106: 	cvtsi2sd	%rax, %xmm0
    0000010b: 	divsd	DATAat0x15758(%rip), %xmm0
    00000113: 	callq	_Z13record_resultdPKc # Offset: 275
.Ltmp220:
    00000118: 	addl	$0x1, %r13d
    0000011c: 	pxor	%xmm0, %xmm0
    00000120: 	leaq	0x630(%rbx), %r12
    00000127: 	cvtsi2sd	%r13d, %xmm0
    0000012c: 	mulsd	init_value(%rip), %xmm0
    00000134: 	movsd	%xmm0, 0x8(%rsp)
.Ltmp219:
    0000013a: 	leaq	-0x630(%r12), %r14
    00000142: 	jmp	.Ltmp213 # Offset: 322
.Ltmp216:
    00000144: 	addq	$0x8, %r14
    00000148: 	cmpq	%r14, %r12
    0000014b: 	je	.Ltmp214 # Offset: 331
.Ltmp213:
    00000151: 	movsd	(%r14), %xmm1
    00000156: 	movapd	%xmm1, %xmm2
    0000015a: 	andpd	DATAat0x15790(%rip), %xmm2
    00000162: 	movapd	%xmm1, %xmm0
    00000166: 	comisd	DATAat0x15770(%rip), %xmm2
    0000016e: 	subsd	0x8(%rsp), %xmm0
    00000174: 	jbe	.Ltmp215 # Offset: 372
    00000176: 	divsd	%xmm1, %xmm0
.Ltmp215:
    0000017a: 	andpd	DATAat0x15790(%rip), %xmm0
    00000182: 	movsd	DATAat0x15778(%rip), %xmm4
    0000018a: 	comisd	%xmm0, %xmm4
    0000018e: 	ja	.Ltmp216 # Offset: 398
    00000190: 	movl	$0x5, %edx
    00000195: 	leaq	DATAat0x15182(%rip), %rsi
    0000019c: 	movq	%r15, %rdi
    0000019f: 	movsd	%xmm1, 0x18(%rsp)
    000001a5: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 421
    000001aa: 	movq	0x8(%rbp), %rdx
    000001ae: 	movq	(%rbp), %rsi
    000001b2: 	movq	%r15, %rdi
    000001b5: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 437
    000001ba: 	movl	$0x12, %edx
    000001bf: 	leaq	DATAat0x15188(%rip), %rsi
    000001c6: 	movq	%rax, %rdi
    000001c9: 	movq	%rax, 0x10(%rsp)
    000001ce: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 462
    000001d3: 	movsd	0x8(%rsp), %xmm0
    000001d9: 	movq	0x10(%rsp), %rdi
    000001de: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 478
    000001e3: 	movl	$0x5, %edx
    000001e8: 	leaq	DATAat0x1519b(%rip), %rsi
    000001ef: 	movq	%rax, %rdi
    000001f2: 	movq	%rax, 0x10(%rsp)
    000001f7: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 503
    000001fc: 	movsd	0x18(%rsp), %xmm1
    00000202: 	movq	0x10(%rsp), %rdi
    00000207: 	movapd	%xmm1, %xmm0
    0000020b: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 523
    00000210: 	movq	%rax, %r8
    00000213: 	movq	(%rax), %rax
    00000216: 	movq	-0x18(%rax), %rax
    0000021a: 	movq	0xf0(%r8,%rax), %rdi
    00000222: 	testq	%rdi, %rdi
    00000225: 	je	.Ltmp217 # Offset: 549
    0000022b: 	cmpb	$0x0, 0x38(%rdi)
    0000022f: 	je	.Ltmp218 # Offset: 559
    00000231: 	movsbl	0x43(%rdi), %esi
.Ltmp221:
    00000235: 	movq	%r8, %rdi
    00000238: 	addq	$0x8, %r14
    0000023c: 	callq	_ZNSo3putEc@PLT # Offset: 572
    00000241: 	movq	%rax, %rdi
    00000244: 	callq	_ZNSo5flushEv@PLT # Offset: 580
    00000249: 	cmpq	%r14, %r12
    0000024c: 	jne	.Ltmp213 # Offset: 588
.Ltmp214:
    00000252: 	addq	$0x630, %r12
    00000259: 	leaq	0x74ca0(%rbx), %rax
    00000260: 	cmpq	%r12, %rax
    00000263: 	jne	.Ltmp219 # Offset: 611
    00000269: 	addq	$0x74670, %rbx
    00000270: 	cmpl	$0x12f, %r13d
    00000277: 	jne	.Ltmp220 # Offset: 631
    0000027d: 	addq	$0x28, %rsp
    00000281: 	popq	%rbx
    00000282: 	popq	%rbp
    00000283: 	popq	%r12
    00000285: 	popq	%r13
    00000287: 	popq	%r14
    00000289: 	popq	%r15
    0000028b: 	retq # Offset: 651
    0000028c: 	nopl	(%rax) # Size: 4
.Ltmp218:
    00000290: 	movq	%r8, 0x18(%rsp)
    00000295: 	movq	%rdi, 0x10(%rsp)
    0000029a: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 666
    0000029f: 	movq	0x10(%rsp), %rdi
    000002a4: 	movq	0x18(%rsp), %r8
    000002a9: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000002b0: 	movl	$0xa, %esi
    000002b5: 	movq	(%rdi), %rax
    000002b8: 	movq	0x30(%rax), %rax
    000002bc: 	cmpq	%rdx, %rax
    000002bf: 	je	.Ltmp221 # Offset: 703
    000002c5: 	movq	%r8, 0x10(%rsp)
    000002ca: 	callq	*%rax # Offset: 714
    000002cc: 	movq	0x10(%rsp), %r8
    000002d1: 	movsbl	%al, %esi
    000002d4: 	jmp	.Ltmp221 # Offset: 724
.Ltmp217:
    000002d9: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 729
.Ltmp212:
    000002de: 	movq	-0x8(%rdx), %rax
    000002e2: 	addq	$0x200, %rax
    000002e8: 	jmp	.Ltmp222 # Offset: 744
.Ltmp207:
    000002ed: 	addq	$0x74670, %rbx
    000002f4: 	jmp	.Ltmp223 # Offset: 756
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_YZXIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_ZXYIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 56
  State       : disassembled
  Address     : 0x5480
  Size        : 0x3ad
  MaxSize     : 0x3b0
  Offset      : 0x5480
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_ZXYIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB055:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdx, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	xorl	%r13d, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdi, %rbp
    00000016: 	pushq	%rbx
    00000017: 	movq	%rsi, %rbx
    0000001a: 	addq	$0x630, %rbx
    00000021: 	subq	$0x28, %rsp
    00000025: 	callq	clock@PLT # Offset: 37
    0000002a: 	leaq	0x74670(%rbp), %rsi
    00000031: 	movq	%rbx, 0x18(%rsp)
    00000036: 	movq	%rax, start_time(%rip)
    0000003d: 	movl	iterations(%rip), %eax
    00000043: 	movq	%rsi, 0x8(%rsp)
    00000048: 	movl	%eax, 0x10(%rsp)
    0000004c: 	testl	%eax, %eax
    0000004e: 	jle	.Ltmp224 # Offset: 78
.Ltmp230:
    00000054: 	movq	0x8(%rsp), %r9
    00000059: 	movq	0x18(%rsp), %rbp
    0000005e: 	xorl	%r12d, %r12d
.Ltmp229:
    00000061: 	leaq	-0x74670(%r9), %r10
    00000068: 	movq	%rbp, %rdx
    0000006b: 	movq	%rbp, %r11
    0000006e: 	movq	%r9, %rcx
    00000071: 	leaq	-0x630(%r9), %rdi
    00000078: 	leaq	0x74040(%r9), %rsi
    0000007f: 	movl	$0x74670, %r8d
    00000085: 	leaq	0x630(%r9), %rbx
.Ltmp228:
    0000008c: 	movq	%r11, %r14
    0000008f: 	leaq	0x74048(%rcx), %rax
    00000096: 	addq	$0x8, %r11
    0000009a: 	cmpq	%rax, %r14
    0000009d: 	jae	.Ltmp225 # Offset: 157
    0000009f: 	cmpq	%r11, %rcx
    000000a2: 	jb	.Ltmp226 # Offset: 162
.Ltmp225:
    000000a8: 	movsd	(%rdx), %xmm1
    000000ac: 	leaq	-0x74670(%rcx), %r14
    000000b3: 	xorl	%eax, %eax
    000000b5: 	unpcklpd	%xmm1, %xmm1
    000000b9: 	nopl	(%rax) # Size: 7
.Ltmp227:
    000000c0: 	movsd	(%r14,%rax), %xmm0
    000000c6: 	movhpd	0x630(%r14,%rax), %xmm0
    000000d0: 	addpd	%xmm1, %xmm0
    000000d4: 	movlpd	%xmm0, (%rcx,%rax)
    000000d9: 	movhpd	%xmm0, 0x630(%rcx,%rax)
    000000e2: 	addq	$0xc60, %rax
    000000e8: 	cmpq	$0x74040, %rax
    000000ee: 	jne	.Ltmp227 # Offset: 238
    000000f0: 	movsd	(%rdx), %xmm0
    000000f4: 	addsd	(%rdi), %xmm0
    000000f8: 	movsd	%xmm0, (%rsi)
.Ltmp241:
    000000fc: 	addq	$0x8, %rcx
    00000100: 	addq	$0x8, %rdi
    00000104: 	addq	$0x8, %rdx
    00000108: 	addq	$0x8, %rsi
    0000010c: 	addq	$0x8, %r8
    00000110: 	cmpq	%rbx, %rcx
    00000113: 	jne	.Ltmp228 # Offset: 275
    00000119: 	addq	$0x1, %r12
    0000011d: 	addq	$0x74670, %r9
    00000124: 	addq	$0x630, %rbp
    0000012b: 	cmpq	$0x12e, %r12
    00000132: 	jne	.Ltmp229 # Offset: 306
    00000138: 	addl	$0x1, %r13d
    0000013c: 	cmpl	0x10(%rsp), %r13d
    00000141: 	jne	.Ltmp230 # Offset: 321
.Ltmp224:
    00000147: 	movq	%r15, %rdi
    0000014a: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 330
    0000014f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000156: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000015d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000164: 	je	.Ltmp231 # Offset: 356
.Ltmp243:
    0000016a: 	movq	-0x20(%rax), %rbp
    0000016e: 	movl	$0x1, %r12d
    00000174: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r14
    0000017b: 	callq	clock@PLT # Offset: 379
    00000180: 	pxor	%xmm0, %xmm0
    00000184: 	movq	%rax, end_time(%rip)
    0000018b: 	movq	%rbp, %rdi
    0000018e: 	subq	start_time(%rip), %rax
    00000195: 	cvtsi2sd	%rax, %xmm0
    0000019a: 	divsd	DATAat0x15758(%rip), %xmm0
    000001a2: 	callq	_Z13record_resultdPKc # Offset: 418
    000001a7: 	movq	0x8(%rsp), %rbx
.Ltmp239:
    000001ac: 	addl	$0x1, %r12d
    000001b0: 	pxor	%xmm0, %xmm0
    000001b4: 	leaq	0x630(%rbx), %rbp
    000001bb: 	cvtsi2sd	%r12d, %xmm0
    000001c0: 	mulsd	init_value(%rip), %xmm0
    000001c8: 	movsd	%xmm0, 0x8(%rsp)
.Ltmp238:
    000001ce: 	leaq	-0x630(%rbp), %r13
    000001d5: 	jmp	.Ltmp232 # Offset: 469
.Ltmp235:
    000001d7: 	addq	$0x8, %r13
    000001db: 	cmpq	%r13, %rbp
    000001de: 	je	.Ltmp233 # Offset: 478
.Ltmp232:
    000001e4: 	movsd	(%r13), %xmm1
    000001ea: 	movapd	%xmm1, %xmm2
    000001ee: 	andpd	DATAat0x15790(%rip), %xmm2
    000001f6: 	movapd	%xmm1, %xmm0
    000001fa: 	comisd	DATAat0x15770(%rip), %xmm2
    00000202: 	subsd	0x8(%rsp), %xmm0
    00000208: 	jbe	.Ltmp234 # Offset: 520
    0000020a: 	divsd	%xmm1, %xmm0
.Ltmp234:
    0000020e: 	andpd	DATAat0x15790(%rip), %xmm0
    00000216: 	movsd	DATAat0x15778(%rip), %xmm4
    0000021e: 	comisd	%xmm0, %xmm4
    00000222: 	ja	.Ltmp235 # Offset: 546
    00000224: 	movl	$0x5, %edx
    00000229: 	leaq	DATAat0x15182(%rip), %rsi
    00000230: 	movq	%r14, %rdi
    00000233: 	movsd	%xmm1, 0x18(%rsp)
    00000239: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 569
    0000023e: 	movq	0x8(%r15), %rdx
    00000242: 	movq	(%r15), %rsi
    00000245: 	movq	%r14, %rdi
    00000248: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 584
    0000024d: 	movl	$0x12, %edx
    00000252: 	leaq	DATAat0x15188(%rip), %rsi
    00000259: 	movq	%rax, %rdi
    0000025c: 	movq	%rax, 0x10(%rsp)
    00000261: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 609
    00000266: 	movsd	0x8(%rsp), %xmm0
    0000026c: 	movq	0x10(%rsp), %rdi
    00000271: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 625
    00000276: 	movl	$0x5, %edx
    0000027b: 	leaq	DATAat0x1519b(%rip), %rsi
    00000282: 	movq	%rax, %rdi
    00000285: 	movq	%rax, 0x10(%rsp)
    0000028a: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 650
    0000028f: 	movsd	0x18(%rsp), %xmm1
    00000295: 	movq	0x10(%rsp), %rdi
    0000029a: 	movapd	%xmm1, %xmm0
    0000029e: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 670
    000002a3: 	movq	%rax, %r8
    000002a6: 	movq	(%rax), %rax
    000002a9: 	movq	-0x18(%rax), %rax
    000002ad: 	movq	0xf0(%r8,%rax), %rdi
    000002b5: 	testq	%rdi, %rdi
    000002b8: 	je	.Ltmp236 # Offset: 696
    000002be: 	cmpb	$0x0, 0x38(%rdi)
    000002c2: 	je	.Ltmp237 # Offset: 706
    000002c8: 	movsbl	0x43(%rdi), %esi
.Ltmp242:
    000002cc: 	movq	%r8, %rdi
    000002cf: 	addq	$0x8, %r13
    000002d3: 	callq	_ZNSo3putEc@PLT # Offset: 723
    000002d8: 	movq	%rax, %rdi
    000002db: 	callq	_ZNSo5flushEv@PLT # Offset: 731
    000002e0: 	cmpq	%r13, %rbp
    000002e3: 	jne	.Ltmp232 # Offset: 739
.Ltmp233:
    000002e9: 	addq	$0x630, %rbp
    000002f0: 	leaq	0x74ca0(%rbx), %rax
    000002f7: 	cmpq	%rbp, %rax
    000002fa: 	jne	.Ltmp238 # Offset: 762
    00000300: 	addq	$0x74670, %rbx
    00000307: 	cmpl	$0x12f, %r12d
    0000030e: 	jne	.Ltmp239 # Offset: 782
    00000314: 	addq	$0x28, %rsp
    00000318: 	popq	%rbx
    00000319: 	popq	%rbp
    0000031a: 	popq	%r12
    0000031c: 	popq	%r13
    0000031e: 	popq	%r14
    00000320: 	popq	%r15
    00000322: 	retq # Offset: 802
    00000323: 	nopl	(%rax,%rax) # Size: 5
.Ltmp226:
    00000328: 	leaq	-0x74670(%r8), %rax
    0000032f: 	nop # Size: 1
.Ltmp240:
    00000330: 	movsd	(%rdx), %xmm0
    00000334: 	addsd	(%r10,%rax), %xmm0
    0000033a: 	movsd	%xmm0, (%r9,%rax)
    00000340: 	addq	$0x630, %rax
    00000346: 	cmpq	%r8, %rax
    00000349: 	jne	.Ltmp240 # Offset: 841
    0000034b: 	jmp	.Ltmp241 # Offset: 843
.Ltmp237:
    00000350: 	movq	%r8, 0x18(%rsp)
    00000355: 	movq	%rdi, 0x10(%rsp)
    0000035a: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 858
    0000035f: 	movq	0x10(%rsp), %rdi
    00000364: 	movq	0x18(%rsp), %r8
    00000369: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000370: 	movl	$0xa, %esi
    00000375: 	movq	(%rdi), %rax
    00000378: 	movq	0x30(%rax), %rax
    0000037c: 	cmpq	%rdx, %rax
    0000037f: 	je	.Ltmp242 # Offset: 895
    00000385: 	movq	%r8, 0x10(%rsp)
    0000038a: 	callq	*%rax # Offset: 906
    0000038c: 	movq	0x10(%rsp), %r8
    00000391: 	movsbl	%al, %esi
    00000394: 	jmp	.Ltmp242 # Offset: 916
.Ltmp236:
    00000399: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 921
.Ltmp231:
    0000039e: 	movq	-0x8(%rdx), %rax
    000003a2: 	addq	$0x200, %rax
    000003a8: 	jmp	.Ltmp243 # Offset: 936
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_ZXYIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_ZYXIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 57
  State       : disassembled
  Address     : 0x5830
  Size        : 0x335
  MaxSize     : 0x340
  Offset      : 0x5830
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_ZYXIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB056:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rsi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdx, %rbp
    00000016: 	pushq	%rbx
    00000017: 	leaq	0x74670(%r12), %rbx
    0000001f: 	subq	$0x28, %rsp
    00000023: 	callq	clock@PLT # Offset: 35
    00000028: 	movl	iterations(%rip), %r11d
    0000002f: 	movq	%rax, start_time(%rip)
    00000036: 	testl	%r11d, %r11d
    00000039: 	jle	.Ltmp244 # Offset: 57
    0000003f: 	leaq	0x74670(%r12), %rbx
    00000047: 	xorl	%r10d, %r10d
    0000004a: 	addq	$0x630, %r13
    00000051: 	addq	$0x89c5e90, %r12
.Ltmp249:
    00000058: 	movq	%rbx, %r8
    0000005b: 	movq	%r13, %rdx
.Ltmp248:
    0000005e: 	leaq	-0x74670(%r8), %rsi
    00000065: 	movq	%r8, %rdi
    00000068: 	leaq	0x8(%rdx), %r9
    0000006c: 	movq	%r8, %rcx
.Ltmp247:
    0000006f: 	leaq	-0x74670(%rcx), %r14
    00000076: 	xorl	%eax, %eax
    00000078: 	cmpq	%r9, %rcx
    0000007b: 	je	.Ltmp245 # Offset: 123
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp246:
    00000088: 	movupd	(%rdx,%rax), %xmm0
    0000008d: 	movupd	(%r14,%rax), %xmm3
    00000093: 	addpd	%xmm3, %xmm0
    00000097: 	movups	%xmm0, (%rcx,%rax)
    0000009b: 	addq	$0x10, %rax
    0000009f: 	cmpq	$0x630, %rax
    000000a5: 	jne	.Ltmp246 # Offset: 165
.Ltmp259:
    000000a7: 	addq	$0x630, %rsi
    000000ae: 	addq	$0x630, %rcx
    000000b5: 	addq	$0x630, %rdi
    000000bc: 	cmpq	%r8, %rsi
    000000bf: 	jne	.Ltmp247 # Offset: 191
    000000c1: 	leaq	0x74670(%rsi), %r8
    000000c8: 	addq	$0x630, %rdx
    000000cf: 	cmpq	%r12, %r8
    000000d2: 	jne	.Ltmp248 # Offset: 210
    000000d4: 	addl	$0x1, %r10d
    000000d8: 	cmpl	%r11d, %r10d
    000000db: 	jne	.Ltmp249 # Offset: 219
.Ltmp244:
    000000e1: 	movq	%rbp, %rdi
    000000e4: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 228
    000000e9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000f0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000000f7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000fe: 	je	.Ltmp250 # Offset: 254
.Ltmp261:
    00000104: 	movq	-0x20(%rax), %r12
    00000108: 	movl	$0x1, %r13d
    0000010e: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r15
    00000115: 	callq	clock@PLT # Offset: 277
    0000011a: 	pxor	%xmm0, %xmm0
    0000011e: 	movq	%rax, end_time(%rip)
    00000125: 	movq	%r12, %rdi
    00000128: 	subq	start_time(%rip), %rax
    0000012f: 	cvtsi2sd	%rax, %xmm0
    00000134: 	divsd	DATAat0x15758(%rip), %xmm0
    0000013c: 	callq	_Z13record_resultdPKc # Offset: 316
.Ltmp258:
    00000141: 	addl	$0x1, %r13d
    00000145: 	pxor	%xmm0, %xmm0
    00000149: 	leaq	0x630(%rbx), %r12
    00000150: 	cvtsi2sd	%r13d, %xmm0
    00000155: 	mulsd	init_value(%rip), %xmm0
    0000015d: 	movsd	%xmm0, 0x8(%rsp)
.Ltmp257:
    00000163: 	leaq	-0x630(%r12), %r14
    0000016b: 	jmp	.Ltmp251 # Offset: 363
.Ltmp254:
    0000016d: 	addq	$0x8, %r14
    00000171: 	cmpq	%r14, %r12
    00000174: 	je	.Ltmp252 # Offset: 372
.Ltmp251:
    0000017a: 	movsd	(%r14), %xmm1
    0000017f: 	movapd	%xmm1, %xmm2
    00000183: 	andpd	DATAat0x15790(%rip), %xmm2
    0000018b: 	movapd	%xmm1, %xmm0
    0000018f: 	comisd	DATAat0x15770(%rip), %xmm2
    00000197: 	subsd	0x8(%rsp), %xmm0
    0000019d: 	jbe	.Ltmp253 # Offset: 413
    0000019f: 	divsd	%xmm1, %xmm0
.Ltmp253:
    000001a3: 	andpd	DATAat0x15790(%rip), %xmm0
    000001ab: 	movsd	DATAat0x15778(%rip), %xmm5
    000001b3: 	comisd	%xmm0, %xmm5
    000001b7: 	ja	.Ltmp254 # Offset: 439
    000001b9: 	movl	$0x5, %edx
    000001be: 	leaq	DATAat0x15182(%rip), %rsi
    000001c5: 	movq	%r15, %rdi
    000001c8: 	movsd	%xmm1, 0x18(%rsp)
    000001ce: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 462
    000001d3: 	movq	0x8(%rbp), %rdx
    000001d7: 	movq	(%rbp), %rsi
    000001db: 	movq	%r15, %rdi
    000001de: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 478
    000001e3: 	movl	$0x12, %edx
    000001e8: 	leaq	DATAat0x15188(%rip), %rsi
    000001ef: 	movq	%rax, %rdi
    000001f2: 	movq	%rax, 0x10(%rsp)
    000001f7: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 503
    000001fc: 	movsd	0x8(%rsp), %xmm0
    00000202: 	movq	0x10(%rsp), %rdi
    00000207: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 519
    0000020c: 	movl	$0x5, %edx
    00000211: 	leaq	DATAat0x1519b(%rip), %rsi
    00000218: 	movq	%rax, %rdi
    0000021b: 	movq	%rax, 0x10(%rsp)
    00000220: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 544
    00000225: 	movsd	0x18(%rsp), %xmm1
    0000022b: 	movq	0x10(%rsp), %rdi
    00000230: 	movapd	%xmm1, %xmm0
    00000234: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 564
    00000239: 	movq	%rax, %r8
    0000023c: 	movq	(%rax), %rax
    0000023f: 	movq	-0x18(%rax), %rax
    00000243: 	movq	0xf0(%r8,%rax), %rdi
    0000024b: 	testq	%rdi, %rdi
    0000024e: 	je	.Ltmp255 # Offset: 590
    00000254: 	cmpb	$0x0, 0x38(%rdi)
    00000258: 	je	.Ltmp256 # Offset: 600
    0000025a: 	movsbl	0x43(%rdi), %esi
.Ltmp260:
    0000025e: 	movq	%r8, %rdi
    00000261: 	addq	$0x8, %r14
    00000265: 	callq	_ZNSo3putEc@PLT # Offset: 613
    0000026a: 	movq	%rax, %rdi
    0000026d: 	callq	_ZNSo5flushEv@PLT # Offset: 621
    00000272: 	cmpq	%r14, %r12
    00000275: 	jne	.Ltmp251 # Offset: 629
.Ltmp252:
    0000027b: 	addq	$0x630, %r12
    00000282: 	leaq	0x74ca0(%rbx), %rax
    00000289: 	cmpq	%rax, %r12
    0000028c: 	jne	.Ltmp257 # Offset: 652
    00000292: 	addq	$0x74670, %rbx
    00000299: 	cmpl	$0x12f, %r13d
    000002a0: 	jne	.Ltmp258 # Offset: 672
    000002a6: 	addq	$0x28, %rsp
    000002aa: 	popq	%rbx
    000002ab: 	popq	%rbp
    000002ac: 	popq	%r12
    000002ae: 	popq	%r13
    000002b0: 	popq	%r14
    000002b2: 	popq	%r15
    000002b4: 	retq # Offset: 692
    000002b5: 	nopl	(%rax) # Size: 3
.Ltmp245:
    000002b8: 	movsd	(%rdx,%rax), %xmm0
    000002bd: 	addsd	(%rsi,%rax), %xmm0
    000002c2: 	movsd	%xmm0, (%rdi,%rax)
    000002c7: 	addq	$0x8, %rax
    000002cb: 	cmpq	$0x630, %rax
    000002d1: 	jne	.Ltmp245 # Offset: 721
    000002d3: 	jmp	.Ltmp259 # Offset: 723
.Ltmp256:
    000002d8: 	movq	%r8, 0x18(%rsp)
    000002dd: 	movq	%rdi, 0x10(%rsp)
    000002e2: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 738
    000002e7: 	movq	0x10(%rsp), %rdi
    000002ec: 	movq	0x18(%rsp), %r8
    000002f1: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000002f8: 	movl	$0xa, %esi
    000002fd: 	movq	(%rdi), %rax
    00000300: 	movq	0x30(%rax), %rax
    00000304: 	cmpq	%rdx, %rax
    00000307: 	je	.Ltmp260 # Offset: 775
    0000030d: 	movq	%r8, 0x10(%rsp)
    00000312: 	callq	*%rax # Offset: 786
    00000314: 	movq	0x10(%rsp), %r8
    00000319: 	movsbl	%al, %esi
    0000031c: 	jmp	.Ltmp260 # Offset: 796
.Ltmp255:
    00000321: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 801
.Ltmp250:
    00000326: 	movq	-0x8(%rdx), %rax
    0000032a: 	addq	$0x200, %rax
    00000330: 	jmp	.Ltmp261 # Offset: 816
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_ZYXIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z29test_loop_2D_flat_chan_revCXYIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z29test_loop_2D_flat_chan_revCXYIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z29test_loop_2D_flat_chan_revCXYIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 58
  State       : disassembled
  Address     : 0x5b70
  Size        : 0x2b2
  MaxSize     : 0x2c0
  Offset      : 0x5b70
  Section     : .text
  Orc Section : .local.text._Z29test_loop_2D_flat_chan_revCXYIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB057:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	movq	%rdx, %rbp
    0000000c: 	pushq	%rbx
    0000000d: 	movl	%esi, %ebx
    0000000f: 	subq	$0x28, %rsp
    00000013: 	movq	%rdi, 0x8(%rsp)
    00000018: 	callq	clock@PLT # Offset: 24
    0000001d: 	movl	iterations(%rip), %edi
    00000023: 	movq	%rax, start_time(%rip)
    0000002a: 	testl	%edi, %edi
    0000002c: 	jle	.Ltmp262 # Offset: 44
    00000032: 	movslq	%ebx, %r14
    00000035: 	imulq	$0x3d0900, %r14, %rax
    0000003c: 	testq	%rax, %rax
    0000003f: 	js	.Ltmp263 # Offset: 63
    00000045: 	pxor	%xmm5, %xmm5
    00000049: 	cvtsi2sd	%rax, %xmm5
    0000004e: 	movsd	%xmm5, (%rsp)
.Ltmp277:
    00000053: 	xorl	%r12d, %r12d
    00000056: 	pxor	%xmm2, %xmm2
    0000005a: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r13
.Ltmp270:
    00000061: 	movsd	(%rsp), %xmm3
    00000066: 	mulsd	init_value(%rip), %xmm3
    0000006e: 	testl	%ebx, %ebx
    00000070: 	jle	.Ltmp264 # Offset: 112
    00000076: 	movq	0x8(%rsp), %rax
    0000007b: 	xorl	%esi, %esi
    0000007d: 	movapd	%xmm2, %xmm1
    00000081: 	leaq	0x7a19d00(%rax), %rcx
    00000088: 	nopl	(%rax,%rax) # Size: 8
.Ltmp267:
    00000090: 	leaq	-0x7d00(%rcx), %rdx
    00000097: 	movapd	%xmm2, %xmm0
    0000009b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp266:
    000000a0: 	leaq	-0x7a12000(%rdx), %rax
    000000a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp265:
    000000b0: 	addsd	(%rax), %xmm0
    000000b4: 	addq	$0x7d00, %rax
    000000ba: 	cmpq	%rax, %rdx
    000000bd: 	jne	.Ltmp265 # Offset: 189
    000000bf: 	addq	$0x20, %rdx
    000000c3: 	cmpq	%rdx, %rcx
    000000c6: 	jne	.Ltmp266 # Offset: 198
    000000c8: 	addq	$0x1, %rsi
    000000cc: 	addsd	%xmm0, %xmm1
    000000d0: 	addq	$0x8, %rcx
    000000d4: 	cmpq	%rsi, %r14
    000000d7: 	jne	.Ltmp267 # Offset: 215
    000000d9: 	movapd	%xmm1, %xmm4
    000000dd: 	andpd	DATAat0x15790(%rip), %xmm4
    000000e5: 	movapd	%xmm1, %xmm0
    000000e9: 	comisd	DATAat0x15770(%rip), %xmm4
    000000f1: 	subsd	%xmm3, %xmm0
    000000f5: 	jbe	.Ltmp268 # Offset: 245
    000000f7: 	divsd	%xmm1, %xmm0
.Ltmp268:
    000000fb: 	andpd	DATAat0x15790(%rip), %xmm0
    00000103: 	movsd	DATAat0x15778(%rip), %xmm6
    0000010b: 	comisd	%xmm0, %xmm6
    0000010f: 	jbe	.Ltmp269 # Offset: 271
.Ltmp274:
    00000111: 	addl	$0x1, %r12d
    00000115: 	cmpl	%edi, %r12d
    00000118: 	jl	.Ltmp270 # Offset: 280
.Ltmp262:
    0000011e: 	movq	%rbp, %rdi
    00000121: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 289
    00000126: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000012d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000134: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000013b: 	je	.Ltmp271 # Offset: 315
.Ltmp276:
    00000141: 	movq	-0x20(%rax), %rbp
    00000145: 	callq	clock@PLT # Offset: 325
    0000014a: 	pxor	%xmm0, %xmm0
    0000014e: 	movq	%rax, end_time(%rip)
    00000155: 	subq	start_time(%rip), %rax
    0000015c: 	movq	%rbp, %rdi
    0000015f: 	cvtsi2sd	%rax, %xmm0
    00000164: 	divsd	DATAat0x15758(%rip), %xmm0
    0000016c: 	addq	$0x28, %rsp
    00000170: 	popq	%rbx
    00000171: 	popq	%rbp
    00000172: 	popq	%r12
    00000174: 	popq	%r13
    00000176: 	popq	%r14
    00000178: 	popq	%r15
    0000017a: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 378
.Ltmp269:
    0000017f: 	movl	$0x5, %edx
    00000184: 	leaq	DATAat0x15182(%rip), %rsi
    0000018b: 	movq	%r13, %rdi
    0000018e: 	movsd	%xmm1, 0x10(%rsp)
    00000194: 	movsd	%xmm3, 0x18(%rsp)
    0000019a: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 410
    0000019f: 	movq	0x8(%rbp), %rdx
    000001a3: 	movq	(%rbp), %rsi
    000001a7: 	movq	%r13, %rdi
    000001aa: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 426
    000001af: 	movl	$0x12, %edx
    000001b4: 	leaq	DATAat0x15188(%rip), %rsi
    000001bb: 	movq	%rax, %rdi
    000001be: 	movq	%rax, %r15
    000001c1: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 449
    000001c6: 	movsd	0x18(%rsp), %xmm3
    000001cc: 	movq	%r15, %rdi
    000001cf: 	movapd	%xmm3, %xmm0
    000001d3: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 467
    000001d8: 	movl	$0x5, %edx
    000001dd: 	leaq	DATAat0x1519b(%rip), %rsi
    000001e4: 	movq	%rax, %rdi
    000001e7: 	movq	%rax, %r15
    000001ea: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 490
    000001ef: 	movsd	0x10(%rsp), %xmm1
    000001f5: 	movq	%r15, %rdi
    000001f8: 	movapd	%xmm1, %xmm0
    000001fc: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 508
    00000201: 	movq	%rax, %r15
    00000204: 	movq	(%rax), %rax
    00000207: 	movq	-0x18(%rax), %rax
    0000020b: 	movq	0xf0(%r15,%rax), %rdi
    00000213: 	testq	%rdi, %rdi
    00000216: 	je	.Ltmp272 # Offset: 534
    0000021c: 	cmpb	$0x0, 0x38(%rdi)
    00000220: 	je	.Ltmp273 # Offset: 544
    00000222: 	movsbl	0x43(%rdi), %esi
.Ltmp275:
    00000226: 	movq	%r15, %rdi
    00000229: 	callq	_ZNSo3putEc@PLT # Offset: 553
    0000022e: 	movq	%rax, %rdi
    00000231: 	callq	_ZNSo5flushEv@PLT # Offset: 561
    00000236: 	movl	iterations(%rip), %edi
    0000023c: 	pxor	%xmm2, %xmm2
    00000240: 	jmp	.Ltmp274 # Offset: 576
.Ltmp273:
    00000245: 	movq	%rdi, 0x10(%rsp)
    0000024a: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 586
    0000024f: 	movq	0x10(%rsp), %rdi
    00000254: 	movl	$0xa, %esi
    00000259: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000260: 	movq	(%rdi), %rax
    00000263: 	movq	0x30(%rax), %rax
    00000267: 	cmpq	%rdx, %rax
    0000026a: 	je	.Ltmp275 # Offset: 618
    0000026c: 	callq	*%rax # Offset: 620
    0000026e: 	movsbl	%al, %esi
    00000271: 	jmp	.Ltmp275 # Offset: 625
.Ltmp264:
    00000273: 	movapd	%xmm2, %xmm0
    00000277: 	movapd	%xmm2, %xmm1
    0000027b: 	subsd	%xmm3, %xmm0
    0000027f: 	jmp	.Ltmp268 # Offset: 639
.Ltmp271:
    00000284: 	movq	-0x8(%rdx), %rax
    00000288: 	addq	$0x200, %rax
    0000028e: 	jmp	.Ltmp276 # Offset: 654
.Ltmp263:
    00000293: 	shrq	%rax
    00000296: 	pxor	%xmm0, %xmm0
    0000029a: 	cvtsi2sd	%rax, %xmm0
    0000029f: 	addsd	%xmm0, %xmm0
    000002a3: 	movsd	%xmm0, (%rsp)
    000002a8: 	jmp	.Ltmp277 # Offset: 680
.Ltmp272:
    000002ad: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 685
DWARF CFI Instructions:
    <empty>
End of Function "_Z29test_loop_2D_flat_chan_revCXYIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z29test_loop_2D_flat_chan_revXYCIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z29test_loop_2D_flat_chan_revXYCIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z29test_loop_2D_flat_chan_revXYCIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 59
  State       : disassembled
  Address     : 0x5e30
  Size        : 0x326
  MaxSize     : 0x330
  Offset      : 0x5e30
  Section     : .text
  Orc Section : .local.text._Z29test_loop_2D_flat_chan_revXYCIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB058:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	movl	%esi, %r14d
    00000007: 	pushq	%r13
    00000009: 	pushq	%r12
    0000000b: 	pushq	%rbp
    0000000c: 	movq	%rdx, %rbp
    0000000f: 	pushq	%rbx
    00000010: 	movq	%rdi, %rbx
    00000013: 	subq	$0x38, %rsp
    00000017: 	callq	clock@PLT # Offset: 23
    0000001c: 	movl	iterations(%rip), %r11d
    00000023: 	movq	%rax, start_time(%rip)
    0000002a: 	testl	%r11d, %r11d
    0000002d: 	jle	.Ltmp278 # Offset: 45
    00000033: 	movslq	%r14d, %rax
    00000036: 	imulq	$0x3d0900, %rax, %rax
    0000003d: 	testq	%rax, %rax
    00000040: 	js	.Ltmp279 # Offset: 64
    00000046: 	pxor	%xmm5, %xmm5
    0000004a: 	cvtsi2sd	%rax, %xmm5
    0000004f: 	movsd	%xmm5, 0x8(%rsp)
.Ltmp295:
    00000055: 	movl	%r14d, %eax
    00000058: 	movl	$0x0, 0x4(%rsp)
    00000060: 	movl	%r14d, %r15d
    00000063: 	pxor	%xmm3, %xmm3
    00000067: 	shrl	%eax
    00000069: 	andl	$-0x2, %r15d
    0000006d: 	leaq	0x7a19d00(%rbx), %r12
    00000074: 	leal	-0x1(%rax), %r8d
    00000078: 	leaq	0x7a12000(%rbx), %rax
    0000007f: 	addq	$0x1, %r8
    00000083: 	movq	%rax, 0x10(%rsp)
    00000088: 	shlq	$0x4, %r8
    0000008c: 	movq	%r8, %r13
.Ltmp287:
    0000008f: 	movq	0x10(%rsp), %rsi
    00000094: 	xorl	%edi, %edi
    00000096: 	movapd	%xmm3, %xmm2
    0000009a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp284:
    000000a0: 	movl	%edi, %edx
    000000a2: 	leaq	-0x7a12000(%rsi), %rcx
    000000a9: 	movapd	%xmm3, %xmm0
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp283:
    000000b0: 	testl	%r14d, %r14d
    000000b3: 	jle	.Ltmp280 # Offset: 179
    000000b5: 	cmpl	$0x1, %r14d
    000000b9: 	je	.Ltmp281 # Offset: 185
    000000bf: 	leaq	(%r13,%rcx), %r8
    000000c4: 	movq	%rcx, %rax
    000000c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp282:
    000000d0: 	movsd	(%rax), %xmm1
    000000d4: 	addq	$0x10, %rax
    000000d8: 	addsd	%xmm1, %xmm0
    000000dc: 	movsd	-0x8(%rax), %xmm1
    000000e1: 	addsd	%xmm1, %xmm0
    000000e5: 	cmpq	%r8, %rax
    000000e8: 	jne	.Ltmp282 # Offset: 232
    000000ea: 	movl	%r15d, %eax
    000000ed: 	cmpl	%r14d, %r15d
    000000f0: 	je	.Ltmp280 # Offset: 240
.Ltmp289:
    000000f2: 	addl	%edx, %eax
    000000f4: 	cltq
    000000f6: 	addsd	(%rbx,%rax,8), %xmm0
.Ltmp280:
    000000fb: 	addq	$0x7d00, %rcx
    00000102: 	addl	$0xfa0, %edx
    00000108: 	cmpq	%rsi, %rcx
    0000010b: 	jne	.Ltmp283 # Offset: 267
    0000010d: 	leaq	0x20(%rcx), %rsi
    00000111: 	addsd	%xmm0, %xmm2
    00000115: 	addq	$0x4, %rdi
    00000119: 	cmpq	%r12, %rsi
    0000011c: 	jne	.Ltmp284 # Offset: 284
    0000011e: 	movsd	0x8(%rsp), %xmm1
    00000124: 	movapd	%xmm2, %xmm4
    00000128: 	movapd	%xmm2, %xmm0
    0000012c: 	andpd	DATAat0x15790(%rip), %xmm4
    00000134: 	mulsd	init_value(%rip), %xmm1
    0000013c: 	comisd	DATAat0x15770(%rip), %xmm4
    00000144: 	subsd	%xmm1, %xmm0
    00000148: 	jbe	.Ltmp285 # Offset: 328
    0000014a: 	divsd	%xmm2, %xmm0
.Ltmp285:
    0000014e: 	andpd	DATAat0x15790(%rip), %xmm0
    00000156: 	movsd	DATAat0x15778(%rip), %xmm6
    0000015e: 	comisd	%xmm0, %xmm6
    00000162: 	jbe	.Ltmp286 # Offset: 354
.Ltmp292:
    00000164: 	addl	$0x1, 0x4(%rsp)
    00000169: 	movl	0x4(%rsp), %eax
    0000016d: 	cmpl	%r11d, %eax
    00000170: 	jl	.Ltmp287 # Offset: 368
.Ltmp278:
    00000176: 	movq	%rbp, %rdi
    00000179: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 377
    0000017e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000185: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000018c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000193: 	je	.Ltmp288 # Offset: 403
.Ltmp294:
    00000199: 	movq	-0x20(%rax), %rbp
    0000019d: 	callq	clock@PLT # Offset: 413
    000001a2: 	pxor	%xmm0, %xmm0
    000001a6: 	movq	%rax, end_time(%rip)
    000001ad: 	subq	start_time(%rip), %rax
    000001b4: 	movq	%rbp, %rdi
    000001b7: 	cvtsi2sd	%rax, %xmm0
    000001bc: 	divsd	DATAat0x15758(%rip), %xmm0
    000001c4: 	addq	$0x38, %rsp
    000001c8: 	popq	%rbx
    000001c9: 	popq	%rbp
    000001ca: 	popq	%r12
    000001cc: 	popq	%r13
    000001ce: 	popq	%r14
    000001d0: 	popq	%r15
    000001d2: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 466
.Ltmp281:
    000001d7: 	xorl	%eax, %eax
    000001d9: 	jmp	.Ltmp289 # Offset: 473
.Ltmp286:
    000001de: 	movl	$0x5, %edx
    000001e3: 	leaq	DATAat0x15182(%rip), %rsi
    000001ea: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    000001f1: 	movsd	%xmm2, 0x20(%rsp)
    000001f7: 	movsd	%xmm1, 0x28(%rsp)
    000001fd: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 509
    00000202: 	movq	0x8(%rbp), %rdx
    00000206: 	movq	(%rbp), %rsi
    0000020a: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    00000211: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 529
    00000216: 	movl	$0x12, %edx
    0000021b: 	leaq	DATAat0x15188(%rip), %rsi
    00000222: 	movq	%rax, %rdi
    00000225: 	movq	%rax, 0x18(%rsp)
    0000022a: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 554
    0000022f: 	movsd	0x28(%rsp), %xmm1
    00000235: 	movq	0x18(%rsp), %rdi
    0000023a: 	movapd	%xmm1, %xmm0
    0000023e: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 574
    00000243: 	movl	$0x5, %edx
    00000248: 	leaq	DATAat0x1519b(%rip), %rsi
    0000024f: 	movq	%rax, %rdi
    00000252: 	movq	%rax, 0x18(%rsp)
    00000257: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 599
    0000025c: 	movsd	0x20(%rsp), %xmm2
    00000262: 	movq	0x18(%rsp), %rdi
    00000267: 	movapd	%xmm2, %xmm0
    0000026b: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 619
    00000270: 	movq	%rax, %r8
    00000273: 	movq	(%rax), %rax
    00000276: 	movq	-0x18(%rax), %rax
    0000027a: 	movq	0xf0(%r8,%rax), %rdi
    00000282: 	testq	%rdi, %rdi
    00000285: 	je	.Ltmp290 # Offset: 645
    0000028b: 	cmpb	$0x0, 0x38(%rdi)
    0000028f: 	je	.Ltmp291 # Offset: 655
    00000291: 	movsbl	0x43(%rdi), %esi
.Ltmp293:
    00000295: 	movq	%r8, %rdi
    00000298: 	callq	_ZNSo3putEc@PLT # Offset: 664
    0000029d: 	movq	%rax, %rdi
    000002a0: 	callq	_ZNSo5flushEv@PLT # Offset: 672
    000002a5: 	movl	iterations(%rip), %r11d
    000002ac: 	pxor	%xmm3, %xmm3
    000002b0: 	jmp	.Ltmp292 # Offset: 688
.Ltmp291:
    000002b5: 	movq	%r8, 0x20(%rsp)
    000002ba: 	movq	%rdi, 0x18(%rsp)
    000002bf: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 703
    000002c4: 	movq	0x18(%rsp), %rdi
    000002c9: 	movq	0x20(%rsp), %r8
    000002ce: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000002d5: 	movl	$0xa, %esi
    000002da: 	movq	(%rdi), %rax
    000002dd: 	movq	0x30(%rax), %rax
    000002e1: 	cmpq	%rdx, %rax
    000002e4: 	je	.Ltmp293 # Offset: 740
    000002e6: 	movq	%r8, 0x18(%rsp)
    000002eb: 	callq	*%rax # Offset: 747
    000002ed: 	movq	0x18(%rsp), %r8
    000002f2: 	movsbl	%al, %esi
    000002f5: 	jmp	.Ltmp293 # Offset: 757
.Ltmp288:
    000002f7: 	movq	-0x8(%rdx), %rax
    000002fb: 	addq	$0x200, %rax
    00000301: 	jmp	.Ltmp294 # Offset: 769
.Ltmp279:
    00000306: 	shrq	%rax
    00000309: 	pxor	%xmm0, %xmm0
    0000030d: 	cvtsi2sd	%rax, %xmm0
    00000312: 	addsd	%xmm0, %xmm0
    00000316: 	movsd	%xmm0, 0x8(%rsp)
    0000031c: 	jmp	.Ltmp295 # Offset: 796
.Ltmp290:
    00000321: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 801
DWARF CFI Instructions:
    <empty>
End of Function "_Z29test_loop_2D_flat_chan_revXYCIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z27test_loop_2D_flat_chan_opt4IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z27test_loop_2D_flat_chan_opt4IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z27test_loop_2D_flat_chan_opt4IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 60
  State       : disassembled
  Address     : 0x6160
  Size        : 0x313
  MaxSize     : 0x320
  Offset      : 0x6160
  Section     : .text
  Orc Section : .local.text._Z27test_loop_2D_flat_chan_opt4IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB059:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	movl	%esi, %r14d
    00000007: 	pushq	%r13
    00000009: 	movq	%rdi, %r13
    0000000c: 	pushq	%r12
    0000000e: 	pushq	%rbp
    0000000f: 	movq	%rdx, %rbp
    00000012: 	pushq	%rbx
    00000013: 	subq	$0x38, %rsp
    00000017: 	callq	clock@PLT # Offset: 23
    0000001c: 	movl	iterations(%rip), %r9d
    00000023: 	movq	%rax, start_time(%rip)
    0000002a: 	testl	%r9d, %r9d
    0000002d: 	jle	.Ltmp296 # Offset: 45
    00000033: 	movslq	%r14d, %rax
    00000036: 	imulq	$0x3d0900, %rax, %rax
    0000003d: 	testq	%rax, %rax
    00000040: 	js	.Ltmp297 # Offset: 64
    00000046: 	pxor	%xmm5, %xmm5
    0000004a: 	cvtsi2sd	%rax, %xmm5
    0000004f: 	movsd	%xmm5, 0x10(%rsp)
.Ltmp313:
    00000055: 	movl	%r14d, %eax
    00000058: 	movl	$0x0, 0xc(%rsp)
    00000060: 	movl	%r14d, %r15d
    00000063: 	pxor	%xmm3, %xmm3
    00000067: 	shrl	%eax
    00000069: 	andl	$-0x2, %r15d
    0000006d: 	leal	-0x1(%rax), %ecx
    00000070: 	leaq	0x7d00(%r13), %rax
    00000077: 	addq	$0x1, %rcx
    0000007b: 	movq	%rax, 0x18(%rsp)
    00000080: 	shlq	$0x4, %rcx
    00000084: 	movq	%rcx, %r12
.Ltmp305:
    00000087: 	movq	0x18(%rsp), %rdi
    0000008c: 	xorl	%r8d, %r8d
    0000008f: 	movapd	%xmm3, %xmm2
    00000093: 	nopl	(%rax,%rax) # Size: 5
.Ltmp302:
    00000098: 	movl	%r8d, %edx
    0000009b: 	leaq	-0x7d00(%rdi), %rsi
    000000a2: 	movapd	%xmm3, %xmm0
    000000a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp301:
    000000b0: 	testl	%r14d, %r14d
    000000b3: 	jle	.Ltmp298 # Offset: 179
    000000b5: 	cmpl	$0x1, %r14d
    000000b9: 	je	.Ltmp299 # Offset: 185
    000000bf: 	leaq	(%r12,%rsi), %r10
    000000c3: 	movq	%rsi, %rax
    000000c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp300:
    000000d0: 	movsd	(%rax), %xmm1
    000000d4: 	addq	$0x10, %rax
    000000d8: 	addsd	%xmm1, %xmm0
    000000dc: 	movsd	-0x8(%rax), %xmm1
    000000e1: 	addsd	%xmm1, %xmm0
    000000e5: 	cmpq	%r10, %rax
    000000e8: 	jne	.Ltmp300 # Offset: 232
    000000ea: 	movl	%r15d, %eax
    000000ed: 	cmpl	%r14d, %r15d
    000000f0: 	je	.Ltmp298 # Offset: 240
.Ltmp307:
    000000f2: 	addl	%edx, %eax
    000000f4: 	cltq
    000000f6: 	addsd	(%r13,%rax,8), %xmm0
.Ltmp298:
    000000fd: 	addq	$0x20, %rsi
    00000101: 	addl	$0x4, %edx
    00000104: 	cmpq	%rdi, %rsi
    00000107: 	jne	.Ltmp301 # Offset: 263
    00000109: 	addq	$0xfa0, %r8
    00000110: 	addsd	%xmm0, %xmm2
    00000114: 	leaq	0x7d00(%rsi), %rdi
    0000011b: 	cmpq	$0xf42400, %r8
    00000122: 	jne	.Ltmp302 # Offset: 290
    00000128: 	movsd	0x10(%rsp), %xmm1
    0000012e: 	movapd	%xmm2, %xmm4
    00000132: 	movapd	%xmm2, %xmm0
    00000136: 	andpd	DATAat0x15790(%rip), %xmm4
    0000013e: 	mulsd	init_value(%rip), %xmm1
    00000146: 	comisd	DATAat0x15770(%rip), %xmm4
    0000014e: 	subsd	%xmm1, %xmm0
    00000152: 	jbe	.Ltmp303 # Offset: 338
    00000154: 	divsd	%xmm2, %xmm0
.Ltmp303:
    00000158: 	andpd	DATAat0x15790(%rip), %xmm0
    00000160: 	movsd	DATAat0x15778(%rip), %xmm6
    00000168: 	comisd	%xmm0, %xmm6
    0000016c: 	jbe	.Ltmp304 # Offset: 364
.Ltmp310:
    0000016e: 	addl	$0x1, 0xc(%rsp)
    00000173: 	movl	0xc(%rsp), %eax
    00000177: 	cmpl	%r9d, %eax
    0000017a: 	jl	.Ltmp305 # Offset: 378
.Ltmp296:
    00000180: 	movq	%rbp, %rdi
    00000183: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 387
    00000188: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000018f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000196: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000019d: 	je	.Ltmp306 # Offset: 413
.Ltmp312:
    000001a3: 	movq	-0x20(%rax), %rbp
    000001a7: 	callq	clock@PLT # Offset: 423
    000001ac: 	pxor	%xmm0, %xmm0
    000001b0: 	movq	%rax, end_time(%rip)
    000001b7: 	subq	start_time(%rip), %rax
    000001be: 	movq	%rbp, %rdi
    000001c1: 	cvtsi2sd	%rax, %xmm0
    000001c6: 	divsd	DATAat0x15758(%rip), %xmm0
    000001ce: 	addq	$0x38, %rsp
    000001d2: 	popq	%rbx
    000001d3: 	popq	%rbp
    000001d4: 	popq	%r12
    000001d6: 	popq	%r13
    000001d8: 	popq	%r14
    000001da: 	popq	%r15
    000001dc: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 476
.Ltmp299:
    000001e1: 	xorl	%eax, %eax
    000001e3: 	jmp	.Ltmp307 # Offset: 483
.Ltmp304:
    000001e8: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rbx
    000001ef: 	movl	$0x5, %edx
    000001f4: 	leaq	DATAat0x15182(%rip), %rsi
    000001fb: 	movsd	%xmm2, 0x20(%rsp)
    00000201: 	movq	%rbx, %rdi
    00000204: 	movsd	%xmm1, 0x28(%rsp)
    0000020a: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 522
    0000020f: 	movq	0x8(%rbp), %rdx
    00000213: 	movq	(%rbp), %rsi
    00000217: 	movq	%rbx, %rdi
    0000021a: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 538
    0000021f: 	movl	$0x12, %edx
    00000224: 	leaq	DATAat0x15188(%rip), %rsi
    0000022b: 	movq	%rax, %rdi
    0000022e: 	movq	%rax, %rbx
    00000231: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 561
    00000236: 	movsd	0x28(%rsp), %xmm1
    0000023c: 	movq	%rbx, %rdi
    0000023f: 	movapd	%xmm1, %xmm0
    00000243: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 579
    00000248: 	movl	$0x5, %edx
    0000024d: 	leaq	DATAat0x1519b(%rip), %rsi
    00000254: 	movq	%rax, %rdi
    00000257: 	movq	%rax, %rbx
    0000025a: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 602
    0000025f: 	movsd	0x20(%rsp), %xmm2
    00000265: 	movq	%rbx, %rdi
    00000268: 	movapd	%xmm2, %xmm0
    0000026c: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 620
    00000271: 	movq	%rax, %rbx
    00000274: 	movq	(%rax), %rax
    00000277: 	movq	-0x18(%rax), %rax
    0000027b: 	movq	0xf0(%rbx,%rax), %rdi
    00000283: 	testq	%rdi, %rdi
    00000286: 	je	.Ltmp308 # Offset: 646
    0000028c: 	cmpb	$0x0, 0x38(%rdi)
    00000290: 	je	.Ltmp309 # Offset: 656
    00000292: 	movsbl	0x43(%rdi), %esi
.Ltmp311:
    00000296: 	movq	%rbx, %rdi
    00000299: 	callq	_ZNSo3putEc@PLT # Offset: 665
    0000029e: 	movq	%rax, %rdi
    000002a1: 	callq	_ZNSo5flushEv@PLT # Offset: 673
    000002a6: 	movl	iterations(%rip), %r9d
    000002ad: 	pxor	%xmm3, %xmm3
    000002b1: 	jmp	.Ltmp310 # Offset: 689
.Ltmp309:
    000002b6: 	movq	%rdi, 0x20(%rsp)
    000002bb: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 699
    000002c0: 	movq	0x20(%rsp), %rdi
    000002c5: 	movl	$0xa, %esi
    000002ca: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000002d1: 	movq	(%rdi), %rax
    000002d4: 	movq	0x30(%rax), %rax
    000002d8: 	cmpq	%rdx, %rax
    000002db: 	je	.Ltmp311 # Offset: 731
    000002dd: 	callq	*%rax # Offset: 733
    000002df: 	movsbl	%al, %esi
    000002e2: 	jmp	.Ltmp311 # Offset: 738
.Ltmp306:
    000002e4: 	movq	-0x8(%rdx), %rax
    000002e8: 	addq	$0x200, %rax
    000002ee: 	jmp	.Ltmp312 # Offset: 750
.Ltmp297:
    000002f3: 	shrq	%rax
    000002f6: 	pxor	%xmm0, %xmm0
    000002fa: 	cvtsi2sd	%rax, %xmm0
    000002ff: 	addsd	%xmm0, %xmm0
    00000303: 	movsd	%xmm0, 0x10(%rsp)
    00000309: 	jmp	.Ltmp313 # Offset: 777
.Ltmp308:
    0000030e: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 782
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_loop_2D_flat_chan_opt4IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z27test_loop_2D_flat_chan_opt3IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z27test_loop_2D_flat_chan_opt3IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z27test_loop_2D_flat_chan_opt3IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 61
  State       : disassembled
  Address     : 0x6480
  Size        : 0x316
  MaxSize     : 0x320
  Offset      : 0x6480
  Section     : .text
  Orc Section : .local.text._Z27test_loop_2D_flat_chan_opt3IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB060:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	movl	%esi, %r14d
    00000007: 	pushq	%r13
    00000009: 	movq	%rdi, %r13
    0000000c: 	pushq	%r12
    0000000e: 	pushq	%rbp
    0000000f: 	movq	%rdx, %rbp
    00000012: 	pushq	%rbx
    00000013: 	subq	$0x38, %rsp
    00000017: 	callq	clock@PLT # Offset: 23
    0000001c: 	movl	iterations(%rip), %r11d
    00000023: 	movq	%rax, start_time(%rip)
    0000002a: 	testl	%r11d, %r11d
    0000002d: 	jle	.Ltmp314 # Offset: 45
    00000033: 	movslq	%r14d, %rax
    00000036: 	imulq	$0x3d0900, %rax, %rax
    0000003d: 	testq	%rax, %rax
    00000040: 	js	.Ltmp315 # Offset: 64
    00000046: 	pxor	%xmm5, %xmm5
    0000004a: 	cvtsi2sd	%rax, %xmm5
    0000004f: 	movsd	%xmm5, 0x10(%rsp)
.Ltmp331:
    00000055: 	movl	%r14d, %eax
    00000058: 	movl	$0x0, 0xc(%rsp)
    00000060: 	movl	%r14d, %r15d
    00000063: 	pxor	%xmm3, %xmm3
    00000067: 	shrl	%eax
    00000069: 	andl	$-0x2, %r15d
    0000006d: 	leal	-0x1(%rax), %r8d
    00000071: 	leaq	0x7d00(%r13), %rax
    00000078: 	addq	$0x1, %r8
    0000007c: 	movq	%rax, 0x18(%rsp)
    00000081: 	shlq	$0x4, %r8
    00000085: 	movq	%r8, %r12
.Ltmp323:
    00000088: 	movq	0x18(%rsp), %rdi
    0000008d: 	xorl	%r8d, %r8d
    00000090: 	movapd	%xmm3, %xmm2
    00000094: 	nopl	(%rax) # Size: 4
.Ltmp320:
    00000098: 	leaq	(,%r8,4), %rcx
    000000a0: 	leaq	-0x7d00(%rdi), %rsi
    000000a7: 	movapd	%xmm3, %xmm0
    000000ab: 	xorl	%edx, %edx
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp319:
    000000b0: 	testl	%r14d, %r14d
    000000b3: 	jle	.Ltmp316 # Offset: 179
    000000b5: 	cmpl	$0x1, %r14d
    000000b9: 	je	.Ltmp317 # Offset: 185
    000000bf: 	leaq	(%r12,%rsi), %r9
    000000c3: 	movq	%rsi, %rax
    000000c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp318:
    000000d0: 	movsd	(%rax), %xmm1
    000000d4: 	addq	$0x10, %rax
    000000d8: 	addsd	%xmm1, %xmm0
    000000dc: 	movsd	-0x8(%rax), %xmm1
    000000e1: 	addsd	%xmm1, %xmm0
    000000e5: 	cmpq	%rax, %r9
    000000e8: 	jne	.Ltmp318 # Offset: 232
    000000ea: 	movl	%r15d, %eax
    000000ed: 	cmpl	%r14d, %r15d
    000000f0: 	je	.Ltmp316 # Offset: 240
.Ltmp325:
    000000f2: 	addl	%edx, %eax
    000000f4: 	cltq
    000000f6: 	addq	%rcx, %rax
    000000f9: 	addsd	(%r13,%rax,8), %xmm0
.Ltmp316:
    00000100: 	addq	$0x20, %rsi
    00000104: 	addl	$0x4, %edx
    00000107: 	cmpq	%rsi, %rdi
    0000010a: 	jne	.Ltmp319 # Offset: 266
    0000010c: 	addq	$0x3e8, %r8
    00000113: 	addsd	%xmm0, %xmm2
    00000117: 	addq	$0x7d00, %rdi
    0000011e: 	cmpq	$0x3d0900, %r8
    00000125: 	jne	.Ltmp320 # Offset: 293
    0000012b: 	movsd	0x10(%rsp), %xmm1
    00000131: 	movapd	%xmm2, %xmm4
    00000135: 	movapd	%xmm2, %xmm0
    00000139: 	andpd	DATAat0x15790(%rip), %xmm4
    00000141: 	mulsd	init_value(%rip), %xmm1
    00000149: 	comisd	DATAat0x15770(%rip), %xmm4
    00000151: 	subsd	%xmm1, %xmm0
    00000155: 	jbe	.Ltmp321 # Offset: 341
    00000157: 	divsd	%xmm2, %xmm0
.Ltmp321:
    0000015b: 	andpd	DATAat0x15790(%rip), %xmm0
    00000163: 	movsd	DATAat0x15778(%rip), %xmm6
    0000016b: 	comisd	%xmm0, %xmm6
    0000016f: 	jbe	.Ltmp322 # Offset: 367
.Ltmp328:
    00000171: 	addl	$0x1, 0xc(%rsp)
    00000176: 	movl	0xc(%rsp), %eax
    0000017a: 	cmpl	%r11d, %eax
    0000017d: 	jl	.Ltmp323 # Offset: 381
.Ltmp314:
    00000183: 	movq	%rbp, %rdi
    00000186: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 390
    0000018b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000192: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000199: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001a0: 	je	.Ltmp324 # Offset: 416
.Ltmp330:
    000001a6: 	movq	-0x20(%rax), %rbp
    000001aa: 	callq	clock@PLT # Offset: 426
    000001af: 	pxor	%xmm0, %xmm0
    000001b3: 	movq	%rax, end_time(%rip)
    000001ba: 	subq	start_time(%rip), %rax
    000001c1: 	movq	%rbp, %rdi
    000001c4: 	cvtsi2sd	%rax, %xmm0
    000001c9: 	divsd	DATAat0x15758(%rip), %xmm0
    000001d1: 	addq	$0x38, %rsp
    000001d5: 	popq	%rbx
    000001d6: 	popq	%rbp
    000001d7: 	popq	%r12
    000001d9: 	popq	%r13
    000001db: 	popq	%r14
    000001dd: 	popq	%r15
    000001df: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 479
.Ltmp317:
    000001e4: 	xorl	%eax, %eax
    000001e6: 	jmp	.Ltmp325 # Offset: 486
.Ltmp322:
    000001eb: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rbx
    000001f2: 	movl	$0x5, %edx
    000001f7: 	leaq	DATAat0x15182(%rip), %rsi
    000001fe: 	movsd	%xmm2, 0x20(%rsp)
    00000204: 	movq	%rbx, %rdi
    00000207: 	movsd	%xmm1, 0x28(%rsp)
    0000020d: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 525
    00000212: 	movq	0x8(%rbp), %rdx
    00000216: 	movq	(%rbp), %rsi
    0000021a: 	movq	%rbx, %rdi
    0000021d: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 541
    00000222: 	movl	$0x12, %edx
    00000227: 	leaq	DATAat0x15188(%rip), %rsi
    0000022e: 	movq	%rax, %rdi
    00000231: 	movq	%rax, %rbx
    00000234: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 564
    00000239: 	movsd	0x28(%rsp), %xmm1
    0000023f: 	movq	%rbx, %rdi
    00000242: 	movapd	%xmm1, %xmm0
    00000246: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 582
    0000024b: 	movl	$0x5, %edx
    00000250: 	leaq	DATAat0x1519b(%rip), %rsi
    00000257: 	movq	%rax, %rdi
    0000025a: 	movq	%rax, %rbx
    0000025d: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 605
    00000262: 	movsd	0x20(%rsp), %xmm2
    00000268: 	movq	%rbx, %rdi
    0000026b: 	movapd	%xmm2, %xmm0
    0000026f: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 623
    00000274: 	movq	%rax, %rbx
    00000277: 	movq	(%rax), %rax
    0000027a: 	movq	-0x18(%rax), %rax
    0000027e: 	movq	0xf0(%rbx,%rax), %rdi
    00000286: 	testq	%rdi, %rdi
    00000289: 	je	.Ltmp326 # Offset: 649
    0000028f: 	cmpb	$0x0, 0x38(%rdi)
    00000293: 	je	.Ltmp327 # Offset: 659
    00000295: 	movsbl	0x43(%rdi), %esi
.Ltmp329:
    00000299: 	movq	%rbx, %rdi
    0000029c: 	callq	_ZNSo3putEc@PLT # Offset: 668
    000002a1: 	movq	%rax, %rdi
    000002a4: 	callq	_ZNSo5flushEv@PLT # Offset: 676
    000002a9: 	movl	iterations(%rip), %r11d
    000002b0: 	pxor	%xmm3, %xmm3
    000002b4: 	jmp	.Ltmp328 # Offset: 692
.Ltmp327:
    000002b9: 	movq	%rdi, 0x20(%rsp)
    000002be: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 702
    000002c3: 	movq	0x20(%rsp), %rdi
    000002c8: 	movl	$0xa, %esi
    000002cd: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000002d4: 	movq	(%rdi), %rax
    000002d7: 	movq	0x30(%rax), %rax
    000002db: 	cmpq	%rdx, %rax
    000002de: 	je	.Ltmp329 # Offset: 734
    000002e0: 	callq	*%rax # Offset: 736
    000002e2: 	movsbl	%al, %esi
    000002e5: 	jmp	.Ltmp329 # Offset: 741
.Ltmp324:
    000002e7: 	movq	-0x8(%rdx), %rax
    000002eb: 	addq	$0x200, %rax
    000002f1: 	jmp	.Ltmp330 # Offset: 753
.Ltmp315:
    000002f6: 	shrq	%rax
    000002f9: 	pxor	%xmm0, %xmm0
    000002fd: 	cvtsi2sd	%rax, %xmm0
    00000302: 	addsd	%xmm0, %xmm0
    00000306: 	movsd	%xmm0, 0x10(%rsp)
    0000030c: 	jmp	.Ltmp331 # Offset: 780
.Ltmp326:
    00000311: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 785
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_loop_2D_flat_chan_opt3IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z27test_loop_2D_flat_chan_opt2IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z27test_loop_2D_flat_chan_opt2IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z27test_loop_2D_flat_chan_opt2IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 62
  State       : disassembled
  Address     : 0x67a0
  Size        : 0x313
  MaxSize     : 0x320
  Offset      : 0x67a0
  Section     : .text
  Orc Section : .local.text._Z27test_loop_2D_flat_chan_opt2IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB061:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	movl	%esi, %r14d
    00000007: 	pushq	%r13
    00000009: 	movq	%rdi, %r13
    0000000c: 	pushq	%r12
    0000000e: 	pushq	%rbp
    0000000f: 	movq	%rdx, %rbp
    00000012: 	pushq	%rbx
    00000013: 	subq	$0x38, %rsp
    00000017: 	callq	clock@PLT # Offset: 23
    0000001c: 	movl	iterations(%rip), %r9d
    00000023: 	movq	%rax, start_time(%rip)
    0000002a: 	testl	%r9d, %r9d
    0000002d: 	jle	.Ltmp332 # Offset: 45
    00000033: 	movslq	%r14d, %rax
    00000036: 	imulq	$0x3d0900, %rax, %rax
    0000003d: 	testq	%rax, %rax
    00000040: 	js	.Ltmp333 # Offset: 64
    00000046: 	pxor	%xmm5, %xmm5
    0000004a: 	cvtsi2sd	%rax, %xmm5
    0000004f: 	movsd	%xmm5, 0x10(%rsp)
.Ltmp349:
    00000055: 	movl	%r14d, %eax
    00000058: 	movl	$0x0, 0xc(%rsp)
    00000060: 	movl	%r14d, %r15d
    00000063: 	pxor	%xmm3, %xmm3
    00000067: 	shrl	%eax
    00000069: 	andl	$-0x2, %r15d
    0000006d: 	leal	-0x1(%rax), %ecx
    00000070: 	leaq	0x7d00(%r13), %rax
    00000077: 	addq	$0x1, %rcx
    0000007b: 	movq	%rax, 0x18(%rsp)
    00000080: 	shlq	$0x4, %rcx
    00000084: 	movq	%rcx, %r12
.Ltmp341:
    00000087: 	movq	0x18(%rsp), %rdi
    0000008c: 	xorl	%r8d, %r8d
    0000008f: 	movapd	%xmm3, %xmm2
    00000093: 	nopl	(%rax,%rax) # Size: 5
.Ltmp338:
    00000098: 	leaq	(,%r8,4), %rdx
    000000a0: 	leaq	-0x7d00(%rdi), %rsi
    000000a7: 	movapd	%xmm3, %xmm0
    000000ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp337:
    000000b0: 	testl	%r14d, %r14d
    000000b3: 	jle	.Ltmp334 # Offset: 179
    000000b5: 	cmpl	$0x1, %r14d
    000000b9: 	je	.Ltmp335 # Offset: 185
    000000bf: 	leaq	(%r12,%rsi), %r10
    000000c3: 	movq	%rsi, %rax
    000000c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp336:
    000000d0: 	movsd	(%rax), %xmm1
    000000d4: 	addq	$0x10, %rax
    000000d8: 	addsd	%xmm1, %xmm0
    000000dc: 	movsd	-0x8(%rax), %xmm1
    000000e1: 	addsd	%xmm1, %xmm0
    000000e5: 	cmpq	%r10, %rax
    000000e8: 	jne	.Ltmp336 # Offset: 232
    000000ea: 	movslq	%r15d, %rax
    000000ed: 	cmpl	%r14d, %r15d
    000000f0: 	je	.Ltmp334 # Offset: 240
.Ltmp343:
    000000f2: 	addq	%rdx, %rax
    000000f5: 	addsd	(%r13,%rax,8), %xmm0
.Ltmp334:
    000000fc: 	addq	$0x20, %rsi
    00000100: 	addq	$0x4, %rdx
    00000104: 	cmpq	%rdi, %rsi
    00000107: 	jne	.Ltmp337 # Offset: 263
    00000109: 	addq	$0x3e8, %r8
    00000110: 	addsd	%xmm0, %xmm2
    00000114: 	leaq	0x7d00(%rsi), %rdi
    0000011b: 	cmpq	$0x3d0900, %r8
    00000122: 	jne	.Ltmp338 # Offset: 290
    00000128: 	movsd	0x10(%rsp), %xmm1
    0000012e: 	movapd	%xmm2, %xmm4
    00000132: 	movapd	%xmm2, %xmm0
    00000136: 	andpd	DATAat0x15790(%rip), %xmm4
    0000013e: 	mulsd	init_value(%rip), %xmm1
    00000146: 	comisd	DATAat0x15770(%rip), %xmm4
    0000014e: 	subsd	%xmm1, %xmm0
    00000152: 	jbe	.Ltmp339 # Offset: 338
    00000154: 	divsd	%xmm2, %xmm0
.Ltmp339:
    00000158: 	andpd	DATAat0x15790(%rip), %xmm0
    00000160: 	movsd	DATAat0x15778(%rip), %xmm6
    00000168: 	comisd	%xmm0, %xmm6
    0000016c: 	jbe	.Ltmp340 # Offset: 364
.Ltmp346:
    0000016e: 	addl	$0x1, 0xc(%rsp)
    00000173: 	movl	0xc(%rsp), %eax
    00000177: 	cmpl	%r9d, %eax
    0000017a: 	jl	.Ltmp341 # Offset: 378
.Ltmp332:
    00000180: 	movq	%rbp, %rdi
    00000183: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 387
    00000188: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000018f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000196: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000019d: 	je	.Ltmp342 # Offset: 413
.Ltmp348:
    000001a3: 	movq	-0x20(%rax), %rbp
    000001a7: 	callq	clock@PLT # Offset: 423
    000001ac: 	pxor	%xmm0, %xmm0
    000001b0: 	movq	%rax, end_time(%rip)
    000001b7: 	subq	start_time(%rip), %rax
    000001be: 	movq	%rbp, %rdi
    000001c1: 	cvtsi2sd	%rax, %xmm0
    000001c6: 	divsd	DATAat0x15758(%rip), %xmm0
    000001ce: 	addq	$0x38, %rsp
    000001d2: 	popq	%rbx
    000001d3: 	popq	%rbp
    000001d4: 	popq	%r12
    000001d6: 	popq	%r13
    000001d8: 	popq	%r14
    000001da: 	popq	%r15
    000001dc: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 476
.Ltmp335:
    000001e1: 	xorl	%eax, %eax
    000001e3: 	jmp	.Ltmp343 # Offset: 483
.Ltmp340:
    000001e8: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rbx
    000001ef: 	movl	$0x5, %edx
    000001f4: 	leaq	DATAat0x15182(%rip), %rsi
    000001fb: 	movsd	%xmm2, 0x20(%rsp)
    00000201: 	movq	%rbx, %rdi
    00000204: 	movsd	%xmm1, 0x28(%rsp)
    0000020a: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 522
    0000020f: 	movq	0x8(%rbp), %rdx
    00000213: 	movq	(%rbp), %rsi
    00000217: 	movq	%rbx, %rdi
    0000021a: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 538
    0000021f: 	movl	$0x12, %edx
    00000224: 	leaq	DATAat0x15188(%rip), %rsi
    0000022b: 	movq	%rax, %rdi
    0000022e: 	movq	%rax, %rbx
    00000231: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 561
    00000236: 	movsd	0x28(%rsp), %xmm1
    0000023c: 	movq	%rbx, %rdi
    0000023f: 	movapd	%xmm1, %xmm0
    00000243: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 579
    00000248: 	movl	$0x5, %edx
    0000024d: 	leaq	DATAat0x1519b(%rip), %rsi
    00000254: 	movq	%rax, %rdi
    00000257: 	movq	%rax, %rbx
    0000025a: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 602
    0000025f: 	movsd	0x20(%rsp), %xmm2
    00000265: 	movq	%rbx, %rdi
    00000268: 	movapd	%xmm2, %xmm0
    0000026c: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 620
    00000271: 	movq	%rax, %rbx
    00000274: 	movq	(%rax), %rax
    00000277: 	movq	-0x18(%rax), %rax
    0000027b: 	movq	0xf0(%rbx,%rax), %rdi
    00000283: 	testq	%rdi, %rdi
    00000286: 	je	.Ltmp344 # Offset: 646
    0000028c: 	cmpb	$0x0, 0x38(%rdi)
    00000290: 	je	.Ltmp345 # Offset: 656
    00000292: 	movsbl	0x43(%rdi), %esi
.Ltmp347:
    00000296: 	movq	%rbx, %rdi
    00000299: 	callq	_ZNSo3putEc@PLT # Offset: 665
    0000029e: 	movq	%rax, %rdi
    000002a1: 	callq	_ZNSo5flushEv@PLT # Offset: 673
    000002a6: 	movl	iterations(%rip), %r9d
    000002ad: 	pxor	%xmm3, %xmm3
    000002b1: 	jmp	.Ltmp346 # Offset: 689
.Ltmp345:
    000002b6: 	movq	%rdi, 0x20(%rsp)
    000002bb: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 699
    000002c0: 	movq	0x20(%rsp), %rdi
    000002c5: 	movl	$0xa, %esi
    000002ca: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000002d1: 	movq	(%rdi), %rax
    000002d4: 	movq	0x30(%rax), %rax
    000002d8: 	cmpq	%rdx, %rax
    000002db: 	je	.Ltmp347 # Offset: 731
    000002dd: 	callq	*%rax # Offset: 733
    000002df: 	movsbl	%al, %esi
    000002e2: 	jmp	.Ltmp347 # Offset: 738
.Ltmp342:
    000002e4: 	movq	-0x8(%rdx), %rax
    000002e8: 	addq	$0x200, %rax
    000002ee: 	jmp	.Ltmp348 # Offset: 750
.Ltmp333:
    000002f3: 	shrq	%rax
    000002f6: 	pxor	%xmm0, %xmm0
    000002fa: 	cvtsi2sd	%rax, %xmm0
    000002ff: 	addsd	%xmm0, %xmm0
    00000303: 	movsd	%xmm0, 0x10(%rsp)
    00000309: 	jmp	.Ltmp349 # Offset: 777
.Ltmp344:
    0000030e: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 782
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_loop_2D_flat_chan_opt2IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z16test_loop_3D_XZYIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 63
  State       : disassembled
  Address     : 0x6ac0
  Size        : 0x39f
  MaxSize     : 0x3a0
  Offset      : 0x6ac0
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_XZYIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB062:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movq	%rsi, %rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x10(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r15d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r15d, %r15d
    00000033: 	jle	.Ltmp350 # Offset: 51
    00000039: 	leaq	0x630(%rbp), %rax
    00000040: 	xorl	%r14d, %r14d
    00000043: 	movq	%rax, 0x18(%rsp)
    00000048: 	leaq	-0x3a338(%rbx), %rax
    0000004f: 	movq	%rax, 0x8(%rsp)
    00000054: 	leaq	-0x3a020(%rbp), %rax
    0000005b: 	movq	%rax, 0x28(%rsp)
    00000060: 	leaq	-0x318(%rbx), %rax
    00000067: 	movq	%rax, 0x20(%rsp)
.Ltmp356:
    0000006c: 	movl	$0x3a338, %edi
.Ltmp355:
    00000071: 	movq	0x8(%rsp), %rax
    00000076: 	movl	$0x318, %ebp
    0000007b: 	movl	$0x3a650, %r11d
    00000081: 	leaq	(%rdi,%rbx), %r8
    00000085: 	subq	%rdi, %rbp
    00000088: 	subq	%rdi, %r11
    0000008b: 	leaq	(%rax,%rdi), %r9
    0000008f: 	movq	0x28(%rsp), %rax
    00000094: 	leaq	(%rax,%rdi), %rsi
    00000098: 	movq	0x20(%rsp), %rax
    0000009d: 	leaq	(%rax,%rdi), %rdx
    000000a1: 	movq	0x18(%rsp), %rax
    000000a6: 	leaq	(%rax,%rdi), %r10
.Ltmp354:
    000000aa: 	leaq	0x3a33c(%rdx), %rax
    000000b1: 	leaq	(%rbp,%rdx), %r12
    000000b6: 	leaq	(%r11,%rdx), %r13
    000000ba: 	cmpq	%rax, %rsi
    000000bd: 	jae	.Ltmp351 # Offset: 189
    000000bf: 	leaq	0x4(%rsi), %rax
    000000c3: 	cmpq	%rax, %r8
    000000c6: 	jb	.Ltmp352 # Offset: 198
.Ltmp351:
    000000cc: 	movd	(%rsi), %xmm5
    000000d0: 	movq	%r8, %rcx
    000000d3: 	movq	%r9, %rax
    000000d6: 	pshufd	$0x0, %xmm5, %xmm2
    000000db: 	nopl	(%rax,%rax) # Size: 5
.Ltmp353:
    000000e0: 	movd	0x630(%rax), %xmm1
    000000e8: 	movd	0x948(%rax), %xmm3
    000000f0: 	addq	$0xc60, %rax
    000000f6: 	addq	$0xc60, %rcx
    000000fd: 	movd	-0xc60(%rax), %xmm0
    00000105: 	movd	-0x948(%rax), %xmm4
    0000010d: 	punpckldq	%xmm3, %xmm1
    00000111: 	punpckldq	%xmm4, %xmm0
    00000115: 	punpcklqdq	%xmm1, %xmm0
    00000119: 	paddd	%xmm2, %xmm0
    0000011d: 	pshufd	$0x55, %xmm0, %xmm1
    00000122: 	movd	%xmm0, -0xc60(%rcx)
    0000012a: 	movd	%xmm1, -0x948(%rcx)
    00000132: 	movdqa	%xmm0, %xmm1
    00000136: 	punpckhdq	%xmm0, %xmm1
    0000013a: 	pshufd	$0xff, %xmm0, %xmm0
    0000013f: 	movd	%xmm1, -0x630(%rcx)
    00000147: 	movd	%xmm0, -0x318(%rcx)
    0000014f: 	cmpq	%rdx, %rax
    00000152: 	jne	.Ltmp353 # Offset: 338
    00000154: 	movl	(%rsi), %eax
    00000156: 	addl	(%rdx), %eax
    00000158: 	movl	%eax, 0x3a338(%rdx)
.Ltmp365:
    0000015e: 	addq	$0x318, %rsi
    00000165: 	addq	$0x3a338, %r8
    0000016c: 	addq	$0x3a338, %r9
    00000173: 	addq	$0x3a338, %rdx
    0000017a: 	cmpq	%r10, %rsi
    0000017d: 	jne	.Ltmp354 # Offset: 381
    00000183: 	addq	$0x4, %rdi
    00000187: 	cmpq	$0x3a650, %rdi
    0000018e: 	jne	.Ltmp355 # Offset: 398
    00000194: 	addl	$0x1, %r14d
    00000198: 	cmpl	%r15d, %r14d
    0000019b: 	jne	.Ltmp356 # Offset: 411
.Ltmp350:
    000001a1: 	movq	0x10(%rsp), %rdi
    000001a6: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 422
    000001ab: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001b2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000001b9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001c0: 	je	.Ltmp357 # Offset: 448
.Ltmp368:
    000001c6: 	movq	-0x20(%rax), %rbp
    000001ca: 	addq	$0x3a338, %rbx
    000001d1: 	movl	$0x1, %r12d
    000001d7: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r15
    000001de: 	callq	clock@PLT # Offset: 478
    000001e3: 	pxor	%xmm0, %xmm0
    000001e7: 	movq	%rax, end_time(%rip)
    000001ee: 	movq	%rbp, %rdi
    000001f1: 	subq	start_time(%rip), %rax
    000001f8: 	cvtsi2sd	%rax, %xmm0
    000001fd: 	divsd	DATAat0x15758(%rip), %xmm0
    00000205: 	callq	_Z13record_resultdPKc # Offset: 517
.Ltmp367:
    0000020a: 	cvttsd2si	init_value(%rip), %r14d
    00000213: 	addl	$0x1, %r12d
    00000217: 	leaq	0x318(%rbx), %r13
    0000021e: 	imull	%r12d, %r14d
    00000222: 	movl	%r14d, 0x8(%rsp)
.Ltmp366:
    00000227: 	leaq	-0x318(%r13), %rbp
    0000022e: 	jmp	.Ltmp358 # Offset: 558
.Ltmp362:
    00000230: 	movsbl	0x43(%rdi), %esi
.Ltmp363:
    00000234: 	movq	%r14, %rdi
    00000237: 	callq	_ZNSo3putEc@PLT # Offset: 567
    0000023c: 	movq	%rax, %rdi
    0000023f: 	callq	_ZNSo5flushEv@PLT # Offset: 575
.Ltmp360:
    00000244: 	addq	$0x4, %rbp
    00000248: 	cmpq	%r13, %rbp
    0000024b: 	je	.Ltmp359 # Offset: 587
.Ltmp358:
    00000251: 	movl	(%rbp), %r8d
    00000255: 	cmpl	%r8d, 0x8(%rsp)
    0000025a: 	movl	%r8d, 0x18(%rsp)
    0000025f: 	je	.Ltmp360 # Offset: 607
    00000261: 	movl	$0x5, %edx
    00000266: 	leaq	DATAat0x15182(%rip), %rsi
    0000026d: 	movq	%r15, %rdi
    00000270: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 624
    00000275: 	movq	0x10(%rsp), %rdi
    0000027a: 	movq	0x8(%rdi), %rdx
    0000027e: 	movq	(%rdi), %rsi
    00000281: 	movq	%r15, %rdi
    00000284: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 644
    00000289: 	movl	$0x12, %edx
    0000028e: 	leaq	DATAat0x15188(%rip), %rsi
    00000295: 	movq	%rax, %rdi
    00000298: 	movq	%rax, %r14
    0000029b: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 667
    000002a0: 	movl	0x8(%rsp), %esi
    000002a4: 	movq	%r14, %rdi
    000002a7: 	callq	_ZNSolsEi@PLT # Offset: 679
    000002ac: 	movl	$0x5, %edx
    000002b1: 	leaq	DATAat0x1519b(%rip), %rsi
    000002b8: 	movq	%rax, %rdi
    000002bb: 	movq	%rax, %r14
    000002be: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 702
    000002c3: 	movl	0x18(%rsp), %esi
    000002c7: 	movq	%r14, %rdi
    000002ca: 	callq	_ZNSolsEi@PLT # Offset: 714
    000002cf: 	movq	%rax, %r14
    000002d2: 	movq	(%rax), %rax
    000002d5: 	movq	-0x18(%rax), %rax
    000002d9: 	movq	0xf0(%r14,%rax), %rdi
    000002e1: 	testq	%rdi, %rdi
    000002e4: 	je	.Ltmp361 # Offset: 740
    000002e6: 	cmpb	$0x0, 0x38(%rdi)
    000002ea: 	jne	.Ltmp362 # Offset: 746
    000002f0: 	movq	%rdi, 0x18(%rsp)
    000002f5: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 757
    000002fa: 	movq	0x18(%rsp), %rdi
    000002ff: 	movl	$0xa, %esi
    00000304: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    0000030b: 	movq	(%rdi), %rax
    0000030e: 	movq	0x30(%rax), %rax
    00000312: 	cmpq	%rdx, %rax
    00000315: 	je	.Ltmp363 # Offset: 789
    0000031b: 	callq	*%rax # Offset: 795
    0000031d: 	movsbl	%al, %esi
    00000320: 	jmp	.Ltmp363 # Offset: 800
.Ltmp352:
    00000325: 	leaq	-0x3a338(%rdi), %rax
    0000032c: 	nopl	(%rax) # Size: 4
.Ltmp364:
    00000330: 	movl	(%rsi), %ecx
    00000332: 	addl	(%r12,%rax), %ecx
    00000336: 	movl	%ecx, (%r13,%rax)
    0000033b: 	addq	$0x318, %rax
    00000341: 	cmpq	%rdi, %rax
    00000344: 	jne	.Ltmp364 # Offset: 836
    00000346: 	jmp	.Ltmp365 # Offset: 838
.Ltmp361:
    0000034b: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 843
.Ltmp359:
    00000350: 	leaq	0x318(%rbp), %r13
    00000357: 	leaq	0x3a650(%rbx), %rax
    0000035e: 	cmpq	%r13, %rax
    00000361: 	jne	.Ltmp366 # Offset: 865
    00000367: 	addq	$0x3a338, %rbx
    0000036e: 	cmpl	$0x12f, %r12d
    00000375: 	jne	.Ltmp367 # Offset: 885
    0000037b: 	addq	$0x38, %rsp
    0000037f: 	popq	%rbx
    00000380: 	popq	%rbp
    00000381: 	popq	%r12
    00000383: 	popq	%r13
    00000385: 	popq	%r14
    00000387: 	popq	%r15
    00000389: 	retq # Offset: 905
    0000038a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp357:
    00000390: 	movq	-0x8(%rdx), %rax
    00000394: 	addq	$0x200, %rax
    0000039a: 	jmp	.Ltmp368 # Offset: 922
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_XZYIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_XYZIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 64
  State       : disassembled
  Address     : 0x6e60
  Size        : 0x297
  MaxSize     : 0x2a0
  Offset      : 0x6e60
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_XYZIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB063:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rsi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdx, %rbp
    00000013: 	leaq	0x3a968(%r12), %r14
    0000001b: 	pushq	%rbx
    0000001c: 	movq	%rdi, %rbx
    0000001f: 	addq	$0x3a338, %rbx
    00000026: 	subq	$0x28, %rsp
    0000002a: 	callq	clock@PLT # Offset: 42
    0000002f: 	movl	iterations(%rip), %r13d
    00000036: 	xorl	%r11d, %r11d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r13d, %r13d
    00000043: 	jle	.Ltmp369 # Offset: 67
.Ltmp373:
    00000045: 	movq	%r14, %rsi
    00000048: 	movq	%rbx, %r10
    0000004b: 	xorl	%r12d, %r12d
.Ltmp372:
    0000004e: 	movq	%r10, %rdi
    00000051: 	leaq	0x3a338(%r10), %r9
    00000058: 	leaq	-0x3a650(%rsi), %r8
.Ltmp371:
    0000005f: 	movl	-0x3a338(%rdi), %ecx
    00000065: 	movq	%r8, %rax
    00000068: 	movq	%rdi, %rdx
    0000006b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp370:
    00000070: 	addl	(%rax), %ecx
    00000072: 	addq	$0x318, %rax
    00000078: 	addq	$0x3a338, %rdx
    0000007f: 	movl	%ecx, -0x3a338(%rdx)
    00000085: 	cmpq	%rsi, %rax
    00000088: 	jne	.Ltmp370 # Offset: 136
    0000008a: 	addq	$0x318, %rdi
    00000091: 	cmpq	%r9, %rdi
    00000094: 	jne	.Ltmp371 # Offset: 148
    00000096: 	addq	$0x1, %r12
    0000009a: 	leaq	0x4(%rax), %rsi
    0000009e: 	addq	$0x4, %r10
    000000a2: 	cmpq	$0xc6, %r12
    000000a9: 	jne	.Ltmp372 # Offset: 169
    000000ab: 	addl	$0x1, %r11d
    000000af: 	cmpl	%r13d, %r11d
    000000b2: 	jne	.Ltmp373 # Offset: 178
.Ltmp369:
    000000b4: 	movq	%rbp, %rdi
    000000b7: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 183
    000000bc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000c3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000000ca: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d1: 	je	.Ltmp374 # Offset: 209
.Ltmp383:
    000000d7: 	movq	-0x20(%rax), %r12
    000000db: 	movl	$0x1, %r13d
    000000e1: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r15
    000000e8: 	callq	clock@PLT # Offset: 232
    000000ed: 	pxor	%xmm0, %xmm0
    000000f1: 	movq	%rax, end_time(%rip)
    000000f8: 	movq	%r12, %rdi
    000000fb: 	subq	start_time(%rip), %rax
    00000102: 	cvtsi2sd	%rax, %xmm0
    00000107: 	divsd	DATAat0x15758(%rip), %xmm0
    0000010f: 	callq	_Z13record_resultdPKc # Offset: 271
.Ltmp382:
    00000114: 	cvttsd2si	init_value(%rip), %eax
    0000011c: 	addl	$0x1, %r13d
    00000120: 	leaq	0x318(%rbx), %r12
    00000127: 	imull	%r13d, %eax
    0000012b: 	movl	%eax, 0xc(%rsp)
.Ltmp381:
    0000012f: 	leaq	-0x318(%r12), %r14
    00000137: 	jmp	.Ltmp375 # Offset: 311
.Ltmp379:
    00000139: 	movsbl	0x43(%rdi), %esi
.Ltmp380:
    0000013d: 	movq	%r8, %rdi
    00000140: 	callq	_ZNSo3putEc@PLT # Offset: 320
    00000145: 	movq	%rax, %rdi
    00000148: 	callq	_ZNSo5flushEv@PLT # Offset: 328
.Ltmp377:
    0000014d: 	addq	$0x4, %r14
    00000151: 	cmpq	%r14, %r12
    00000154: 	je	.Ltmp376 # Offset: 340
.Ltmp375:
    0000015a: 	movl	(%r14), %r8d
    0000015d: 	cmpl	%r8d, 0xc(%rsp)
    00000162: 	movl	%r8d, 0x18(%rsp)
    00000167: 	je	.Ltmp377 # Offset: 359
    00000169: 	movl	$0x5, %edx
    0000016e: 	leaq	DATAat0x15182(%rip), %rsi
    00000175: 	movq	%r15, %rdi
    00000178: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 376
    0000017d: 	movq	0x8(%rbp), %rdx
    00000181: 	movq	(%rbp), %rsi
    00000185: 	movq	%r15, %rdi
    00000188: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 392
    0000018d: 	movl	$0x12, %edx
    00000192: 	leaq	DATAat0x15188(%rip), %rsi
    00000199: 	movq	%rax, %rdi
    0000019c: 	movq	%rax, 0x10(%rsp)
    000001a1: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 417
    000001a6: 	movl	0xc(%rsp), %esi
    000001aa: 	movq	0x10(%rsp), %rdi
    000001af: 	callq	_ZNSolsEi@PLT # Offset: 431
    000001b4: 	movl	$0x5, %edx
    000001b9: 	leaq	DATAat0x1519b(%rip), %rsi
    000001c0: 	movq	%rax, %rdi
    000001c3: 	movq	%rax, 0x10(%rsp)
    000001c8: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 456
    000001cd: 	movq	0x10(%rsp), %rdi
    000001d2: 	movl	0x18(%rsp), %esi
    000001d6: 	callq	_ZNSolsEi@PLT # Offset: 470
    000001db: 	movq	%rax, %r8
    000001de: 	movq	(%rax), %rax
    000001e1: 	movq	-0x18(%rax), %rax
    000001e5: 	movq	0xf0(%r8,%rax), %rdi
    000001ed: 	testq	%rdi, %rdi
    000001f0: 	je	.Ltmp378 # Offset: 496
    000001f2: 	cmpb	$0x0, 0x38(%rdi)
    000001f6: 	jne	.Ltmp379 # Offset: 502
    000001fc: 	movq	%r8, 0x18(%rsp)
    00000201: 	movq	%rdi, 0x10(%rsp)
    00000206: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 518
    0000020b: 	movq	0x10(%rsp), %rdi
    00000210: 	movq	0x18(%rsp), %r8
    00000215: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    0000021c: 	movl	$0xa, %esi
    00000221: 	movq	(%rdi), %rax
    00000224: 	movq	0x30(%rax), %rax
    00000228: 	cmpq	%rdx, %rax
    0000022b: 	je	.Ltmp380 # Offset: 555
    00000231: 	movq	%r8, 0x10(%rsp)
    00000236: 	callq	*%rax # Offset: 566
    00000238: 	movq	0x10(%rsp), %r8
    0000023d: 	movsbl	%al, %esi
    00000240: 	jmp	.Ltmp380 # Offset: 576
.Ltmp378:
    00000245: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 581
.Ltmp376:
    0000024a: 	addq	$0x318, %r12
    00000251: 	leaq	0x3a650(%rbx), %rax
    00000258: 	cmpq	%r12, %rax
    0000025b: 	jne	.Ltmp381 # Offset: 603
    00000261: 	addq	$0x3a338, %rbx
    00000268: 	cmpl	$0x12f, %r13d
    0000026f: 	jne	.Ltmp382 # Offset: 623
    00000275: 	addq	$0x28, %rsp
    00000279: 	popq	%rbx
    0000027a: 	popq	%rbp
    0000027b: 	popq	%r12
    0000027d: 	popq	%r13
    0000027f: 	popq	%r14
    00000281: 	popq	%r15
    00000283: 	retq # Offset: 643
    00000284: 	nopl	(%rax) # Size: 4
.Ltmp374:
    00000288: 	movq	-0x8(%rdx), %rax
    0000028c: 	addq	$0x200, %rax
    00000292: 	jmp	.Ltmp383 # Offset: 658
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_XYZIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_YXZIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 65
  State       : disassembled
  Address     : 0x7100
  Size        : 0x2a3
  MaxSize     : 0x2b0
  Offset      : 0x7100
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_YXZIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB064:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rsi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdx, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x28, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %r13d
    00000027: 	movq	%rax, start_time(%rip)
    0000002e: 	testl	%r13d, %r13d
    00000031: 	jle	.Ltmp384 # Offset: 49
    00000037: 	xorl	%r9d, %r9d
    0000003a: 	leaq	0x3a968(%r12), %r14
    00000042: 	leaq	0x3ac80(%r12), %r8
    0000004a: 	addq	$0x3a338, %rbx
.Ltmp388:
    00000051: 	movq	%rbx, %r11
    00000054: 	xorl	%r10d, %r10d
.Ltmp387:
    00000057: 	movq	%r14, %rsi
    0000005a: 	movq	%r11, %rdi
.Ltmp386:
    0000005d: 	movl	-0x3a338(%rdi), %ecx
    00000063: 	leaq	-0x3a650(%rsi), %rax
    0000006a: 	movq	%rdi, %rdx
    0000006d: 	nopl	(%rax) # Size: 3
.Ltmp385:
    00000070: 	addl	(%rax), %ecx
    00000072: 	addq	$0x318, %rax
    00000078: 	addq	$0x3a338, %rdx
    0000007f: 	movl	%ecx, -0x3a338(%rdx)
    00000085: 	cmpq	%rsi, %rax
    00000088: 	jne	.Ltmp385 # Offset: 136
    0000008a: 	leaq	0x4(%rax), %rsi
    0000008e: 	addq	$0x4, %rdi
    00000092: 	cmpq	%r8, %rsi
    00000095: 	jne	.Ltmp386 # Offset: 149
    00000097: 	addq	$0x1, %r10
    0000009b: 	addq	$0x318, %r11
    000000a2: 	cmpq	$0x12d, %r10
    000000a9: 	jne	.Ltmp387 # Offset: 169
    000000ab: 	addl	$0x1, %r9d
    000000af: 	cmpl	%r13d, %r9d
    000000b2: 	jne	.Ltmp388 # Offset: 178
.Ltmp399:
    000000b4: 	movq	%rbp, %rdi
    000000b7: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 183
    000000bc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000c3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000000ca: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d1: 	je	.Ltmp389 # Offset: 209
.Ltmp398:
    000000d7: 	movq	-0x20(%rax), %r12
    000000db: 	movl	$0x1, %r13d
    000000e1: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r15
    000000e8: 	callq	clock@PLT # Offset: 232
    000000ed: 	pxor	%xmm0, %xmm0
    000000f1: 	movq	%rax, end_time(%rip)
    000000f8: 	movq	%r12, %rdi
    000000fb: 	subq	start_time(%rip), %rax
    00000102: 	cvtsi2sd	%rax, %xmm0
    00000107: 	divsd	DATAat0x15758(%rip), %xmm0
    0000010f: 	callq	_Z13record_resultdPKc # Offset: 271
.Ltmp397:
    00000114: 	cvttsd2si	init_value(%rip), %eax
    0000011c: 	addl	$0x1, %r13d
    00000120: 	leaq	0x318(%rbx), %r12
    00000127: 	imull	%r13d, %eax
    0000012b: 	movl	%eax, 0xc(%rsp)
.Ltmp396:
    0000012f: 	leaq	-0x318(%r12), %r14
    00000137: 	jmp	.Ltmp390 # Offset: 311
.Ltmp394:
    00000139: 	movsbl	0x43(%rdi), %esi
.Ltmp395:
    0000013d: 	movq	%r8, %rdi
    00000140: 	callq	_ZNSo3putEc@PLT # Offset: 320
    00000145: 	movq	%rax, %rdi
    00000148: 	callq	_ZNSo5flushEv@PLT # Offset: 328
.Ltmp392:
    0000014d: 	addq	$0x4, %r14
    00000151: 	cmpq	%r14, %r12
    00000154: 	je	.Ltmp391 # Offset: 340
.Ltmp390:
    0000015a: 	movl	(%r14), %r8d
    0000015d: 	cmpl	%r8d, 0xc(%rsp)
    00000162: 	movl	%r8d, 0x18(%rsp)
    00000167: 	je	.Ltmp392 # Offset: 359
    00000169: 	movl	$0x5, %edx
    0000016e: 	leaq	DATAat0x15182(%rip), %rsi
    00000175: 	movq	%r15, %rdi
    00000178: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 376
    0000017d: 	movq	0x8(%rbp), %rdx
    00000181: 	movq	(%rbp), %rsi
    00000185: 	movq	%r15, %rdi
    00000188: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 392
    0000018d: 	movl	$0x12, %edx
    00000192: 	leaq	DATAat0x15188(%rip), %rsi
    00000199: 	movq	%rax, %rdi
    0000019c: 	movq	%rax, 0x10(%rsp)
    000001a1: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 417
    000001a6: 	movl	0xc(%rsp), %esi
    000001aa: 	movq	0x10(%rsp), %rdi
    000001af: 	callq	_ZNSolsEi@PLT # Offset: 431
    000001b4: 	movl	$0x5, %edx
    000001b9: 	leaq	DATAat0x1519b(%rip), %rsi
    000001c0: 	movq	%rax, %rdi
    000001c3: 	movq	%rax, 0x10(%rsp)
    000001c8: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 456
    000001cd: 	movq	0x10(%rsp), %rdi
    000001d2: 	movl	0x18(%rsp), %esi
    000001d6: 	callq	_ZNSolsEi@PLT # Offset: 470
    000001db: 	movq	%rax, %r8
    000001de: 	movq	(%rax), %rax
    000001e1: 	movq	-0x18(%rax), %rax
    000001e5: 	movq	0xf0(%r8,%rax), %rdi
    000001ed: 	testq	%rdi, %rdi
    000001f0: 	je	.Ltmp393 # Offset: 496
    000001f2: 	cmpb	$0x0, 0x38(%rdi)
    000001f6: 	jne	.Ltmp394 # Offset: 502
    000001fc: 	movq	%r8, 0x18(%rsp)
    00000201: 	movq	%rdi, 0x10(%rsp)
    00000206: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 518
    0000020b: 	movq	0x10(%rsp), %rdi
    00000210: 	movq	0x18(%rsp), %r8
    00000215: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    0000021c: 	movl	$0xa, %esi
    00000221: 	movq	(%rdi), %rax
    00000224: 	movq	0x30(%rax), %rax
    00000228: 	cmpq	%rdx, %rax
    0000022b: 	je	.Ltmp395 # Offset: 555
    00000231: 	movq	%r8, 0x10(%rsp)
    00000236: 	callq	*%rax # Offset: 566
    00000238: 	movq	0x10(%rsp), %r8
    0000023d: 	movsbl	%al, %esi
    00000240: 	jmp	.Ltmp395 # Offset: 576
.Ltmp393:
    00000245: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 581
.Ltmp391:
    0000024a: 	addq	$0x318, %r12
    00000251: 	leaq	0x3a650(%rbx), %rax
    00000258: 	cmpq	%r12, %rax
    0000025b: 	jne	.Ltmp396 # Offset: 603
    00000261: 	addq	$0x3a338, %rbx
    00000268: 	cmpl	$0x12f, %r13d
    0000026f: 	jne	.Ltmp397 # Offset: 623
    00000275: 	addq	$0x28, %rsp
    00000279: 	popq	%rbx
    0000027a: 	popq	%rbp
    0000027b: 	popq	%r12
    0000027d: 	popq	%r13
    0000027f: 	popq	%r14
    00000281: 	popq	%r15
    00000283: 	retq # Offset: 643
    00000284: 	nopl	(%rax) # Size: 4
.Ltmp389:
    00000288: 	movq	-0x8(%rdx), %rax
    0000028c: 	addq	$0x200, %rax
    00000292: 	jmp	.Ltmp398 # Offset: 658
.Ltmp384:
    00000297: 	addq	$0x3a338, %rbx
    0000029e: 	jmp	.Ltmp399 # Offset: 670
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_YXZIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_YZXIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 66
  State       : disassembled
  Address     : 0x73b0
  Size        : 0x2a3
  MaxSize     : 0x2b0
  Offset      : 0x73b0
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_YZXIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB065:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rsi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdx, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x28, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %r13d
    00000027: 	movq	%rax, start_time(%rip)
    0000002e: 	testl	%r13d, %r13d
    00000031: 	jle	.Ltmp400 # Offset: 49
    00000037: 	xorl	%r9d, %r9d
    0000003a: 	leaq	0x3a968(%r12), %r14
    00000042: 	leaq	0x3ac80(%r12), %r8
    0000004a: 	addq	$0x3a338, %rbx
.Ltmp404:
    00000051: 	movq	%rbx, %r11
    00000054: 	xorl	%r10d, %r10d
.Ltmp403:
    00000057: 	movq	%r14, %rsi
    0000005a: 	movq	%r11, %rdi
.Ltmp402:
    0000005d: 	movl	-0x3a338(%rdi), %ecx
    00000063: 	leaq	-0x3a650(%rsi), %rax
    0000006a: 	movq	%rdi, %rdx
    0000006d: 	nopl	(%rax) # Size: 3
.Ltmp401:
    00000070: 	addl	(%rax), %ecx
    00000072: 	addq	$0x318, %rax
    00000078: 	addq	$0x3a338, %rdx
    0000007f: 	movl	%ecx, -0x3a338(%rdx)
    00000085: 	cmpq	%rsi, %rax
    00000088: 	jne	.Ltmp401 # Offset: 136
    0000008a: 	leaq	0x4(%rax), %rsi
    0000008e: 	addq	$0x4, %rdi
    00000092: 	cmpq	%r8, %rsi
    00000095: 	jne	.Ltmp402 # Offset: 149
    00000097: 	addq	$0x1, %r10
    0000009b: 	addq	$0x318, %r11
    000000a2: 	cmpq	$0x12d, %r10
    000000a9: 	jne	.Ltmp403 # Offset: 169
    000000ab: 	addl	$0x1, %r9d
    000000af: 	cmpl	%r13d, %r9d
    000000b2: 	jne	.Ltmp404 # Offset: 178
.Ltmp415:
    000000b4: 	movq	%rbp, %rdi
    000000b7: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 183
    000000bc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000c3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000000ca: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d1: 	je	.Ltmp405 # Offset: 209
.Ltmp414:
    000000d7: 	movq	-0x20(%rax), %r12
    000000db: 	movl	$0x1, %r13d
    000000e1: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r15
    000000e8: 	callq	clock@PLT # Offset: 232
    000000ed: 	pxor	%xmm0, %xmm0
    000000f1: 	movq	%rax, end_time(%rip)
    000000f8: 	movq	%r12, %rdi
    000000fb: 	subq	start_time(%rip), %rax
    00000102: 	cvtsi2sd	%rax, %xmm0
    00000107: 	divsd	DATAat0x15758(%rip), %xmm0
    0000010f: 	callq	_Z13record_resultdPKc # Offset: 271
.Ltmp413:
    00000114: 	cvttsd2si	init_value(%rip), %eax
    0000011c: 	addl	$0x1, %r13d
    00000120: 	leaq	0x318(%rbx), %r12
    00000127: 	imull	%r13d, %eax
    0000012b: 	movl	%eax, 0xc(%rsp)
.Ltmp412:
    0000012f: 	leaq	-0x318(%r12), %r14
    00000137: 	jmp	.Ltmp406 # Offset: 311
.Ltmp410:
    00000139: 	movsbl	0x43(%rdi), %esi
.Ltmp411:
    0000013d: 	movq	%r8, %rdi
    00000140: 	callq	_ZNSo3putEc@PLT # Offset: 320
    00000145: 	movq	%rax, %rdi
    00000148: 	callq	_ZNSo5flushEv@PLT # Offset: 328
.Ltmp408:
    0000014d: 	addq	$0x4, %r14
    00000151: 	cmpq	%r14, %r12
    00000154: 	je	.Ltmp407 # Offset: 340
.Ltmp406:
    0000015a: 	movl	(%r14), %r8d
    0000015d: 	cmpl	%r8d, 0xc(%rsp)
    00000162: 	movl	%r8d, 0x18(%rsp)
    00000167: 	je	.Ltmp408 # Offset: 359
    00000169: 	movl	$0x5, %edx
    0000016e: 	leaq	DATAat0x15182(%rip), %rsi
    00000175: 	movq	%r15, %rdi
    00000178: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 376
    0000017d: 	movq	0x8(%rbp), %rdx
    00000181: 	movq	(%rbp), %rsi
    00000185: 	movq	%r15, %rdi
    00000188: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 392
    0000018d: 	movl	$0x12, %edx
    00000192: 	leaq	DATAat0x15188(%rip), %rsi
    00000199: 	movq	%rax, %rdi
    0000019c: 	movq	%rax, 0x10(%rsp)
    000001a1: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 417
    000001a6: 	movl	0xc(%rsp), %esi
    000001aa: 	movq	0x10(%rsp), %rdi
    000001af: 	callq	_ZNSolsEi@PLT # Offset: 431
    000001b4: 	movl	$0x5, %edx
    000001b9: 	leaq	DATAat0x1519b(%rip), %rsi
    000001c0: 	movq	%rax, %rdi
    000001c3: 	movq	%rax, 0x10(%rsp)
    000001c8: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 456
    000001cd: 	movq	0x10(%rsp), %rdi
    000001d2: 	movl	0x18(%rsp), %esi
    000001d6: 	callq	_ZNSolsEi@PLT # Offset: 470
    000001db: 	movq	%rax, %r8
    000001de: 	movq	(%rax), %rax
    000001e1: 	movq	-0x18(%rax), %rax
    000001e5: 	movq	0xf0(%r8,%rax), %rdi
    000001ed: 	testq	%rdi, %rdi
    000001f0: 	je	.Ltmp409 # Offset: 496
    000001f2: 	cmpb	$0x0, 0x38(%rdi)
    000001f6: 	jne	.Ltmp410 # Offset: 502
    000001fc: 	movq	%r8, 0x18(%rsp)
    00000201: 	movq	%rdi, 0x10(%rsp)
    00000206: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 518
    0000020b: 	movq	0x10(%rsp), %rdi
    00000210: 	movq	0x18(%rsp), %r8
    00000215: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    0000021c: 	movl	$0xa, %esi
    00000221: 	movq	(%rdi), %rax
    00000224: 	movq	0x30(%rax), %rax
    00000228: 	cmpq	%rdx, %rax
    0000022b: 	je	.Ltmp411 # Offset: 555
    00000231: 	movq	%r8, 0x10(%rsp)
    00000236: 	callq	*%rax # Offset: 566
    00000238: 	movq	0x10(%rsp), %r8
    0000023d: 	movsbl	%al, %esi
    00000240: 	jmp	.Ltmp411 # Offset: 576
.Ltmp409:
    00000245: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 581
.Ltmp407:
    0000024a: 	addq	$0x318, %r12
    00000251: 	leaq	0x3a650(%rbx), %rax
    00000258: 	cmpq	%r12, %rax
    0000025b: 	jne	.Ltmp412 # Offset: 603
    00000261: 	addq	$0x3a338, %rbx
    00000268: 	cmpl	$0x12f, %r13d
    0000026f: 	jne	.Ltmp413 # Offset: 623
    00000275: 	addq	$0x28, %rsp
    00000279: 	popq	%rbx
    0000027a: 	popq	%rbp
    0000027b: 	popq	%r12
    0000027d: 	popq	%r13
    0000027f: 	popq	%r14
    00000281: 	popq	%r15
    00000283: 	retq # Offset: 643
    00000284: 	nopl	(%rax) # Size: 4
.Ltmp405:
    00000288: 	movq	-0x8(%rdx), %rax
    0000028c: 	addq	$0x200, %rax
    00000292: 	jmp	.Ltmp414 # Offset: 658
.Ltmp400:
    00000297: 	addq	$0x3a338, %rbx
    0000029e: 	jmp	.Ltmp415 # Offset: 670
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_YZXIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_ZXYIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 67
  State       : disassembled
  Address     : 0x7660
  Size        : 0x38f
  MaxSize     : 0x390
  Offset      : 0x7660
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_ZXYIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB066:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	xorl	%r15d, %r15d
    00000009: 	pushq	%r14
    0000000b: 	movq	%rdi, %r14
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rsi, %rbx
    00000017: 	addq	$0x31c, %rbx
    0000001e: 	subq	$0x38, %rsp
    00000022: 	movq	%rdi, 0x18(%rsp)
    00000027: 	movq	%rdx, 0x10(%rsp)
    0000002c: 	callq	clock@PLT # Offset: 44
    00000031: 	movq	%rbx, 0x28(%rsp)
    00000036: 	leaq	0x3a020(%r14), %rbx
    0000003d: 	movq	%rax, start_time(%rip)
    00000044: 	movl	iterations(%rip), %eax
    0000004a: 	movq	%rbx, 0x20(%rsp)
    0000004f: 	movl	%eax, 0xc(%rsp)
    00000053: 	testl	%eax, %eax
    00000055: 	jle	.Ltmp416 # Offset: 85
.Ltmp422:
    0000005b: 	movq	0x28(%rsp), %r11
    00000060: 	movq	0x20(%rsp), %rbp
    00000065: 	xorl	%r12d, %r12d
.Ltmp421:
    00000068: 	movq	%rbp, %rcx
    0000006b: 	leaq	-0x3a020(%rbp), %r10
    00000072: 	leaq	-0x4(%r11), %rdx
    00000076: 	movl	$0x3a338, %r8d
    0000007c: 	leaq	0x318(%rbp), %r9
    00000083: 	addq	$0x3a338, %rbp
    0000008a: 	movq	%rcx, %rdi
    0000008d: 	movq	%rbp, %rsi
    00000090: 	leaq	0x318(%r11), %rbx
.Ltmp420:
    00000097: 	leaq	-0x4(%r11), %r14
    0000009b: 	leaq	0x3a33c(%rdi), %rax
    000000a2: 	leaq	0x318(%rdi), %r13
    000000a9: 	cmpq	%rax, %r14
    000000ac: 	jae	.Ltmp417 # Offset: 172
    000000ae: 	cmpq	%r13, %r11
    000000b1: 	ja	.Ltmp418 # Offset: 177
.Ltmp417:
    000000b7: 	movd	(%rdx), %xmm5
    000000bb: 	leaq	-0x3a020(%rdi), %rax
    000000c2: 	pshufd	$0x0, %xmm5, %xmm2
    000000c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp419:
    000000d0: 	movd	0x630(%rax), %xmm1
    000000d8: 	movd	0x948(%rax), %xmm3
    000000e0: 	addq	$0xc60, %rax
    000000e6: 	addq	$0xc60, %r13
    000000ed: 	movd	-0xc60(%rax), %xmm0
    000000f5: 	movd	-0x948(%rax), %xmm4
    000000fd: 	punpckldq	%xmm3, %xmm1
    00000101: 	punpckldq	%xmm4, %xmm0
    00000105: 	punpcklqdq	%xmm1, %xmm0
    00000109: 	paddd	%xmm2, %xmm0
    0000010d: 	movd	%xmm0, -0xc60(%r13)
    00000116: 	pshufd	$0x55, %xmm0, %xmm1
    0000011b: 	movd	%xmm1, -0x948(%r13)
    00000124: 	movdqa	%xmm0, %xmm1
    00000128: 	punpckhdq	%xmm0, %xmm1
    0000012c: 	pshufd	$0xff, %xmm0, %xmm0
    00000131: 	movd	%xmm1, -0x630(%r13)
    0000013a: 	movd	%xmm0, -0x318(%r13)
    00000143: 	cmpq	%rdi, %rax
    00000146: 	jne	.Ltmp419 # Offset: 326
    00000148: 	movl	(%rdx), %eax
    0000014a: 	addl	(%rcx), %eax
    0000014c: 	movl	%eax, (%rsi)
.Ltmp431:
    0000014e: 	addq	$0x4, %r11
    00000152: 	addq	$0x4, %rcx
    00000156: 	addq	$0x4, %rdx
    0000015a: 	addq	$0x4, %rsi
    0000015e: 	addq	$0x4, %r8
    00000162: 	addq	$0x4, %rdi
    00000166: 	cmpq	%rbx, %r11
    00000169: 	jne	.Ltmp420 # Offset: 361
    0000016f: 	addq	$0x1, %r12
    00000173: 	cmpq	$0x12e, %r12
    0000017a: 	jne	.Ltmp421 # Offset: 378
    00000180: 	addl	$0x1, %r15d
    00000184: 	cmpl	0xc(%rsp), %r15d
    00000189: 	jne	.Ltmp422 # Offset: 393
.Ltmp416:
    0000018f: 	movq	0x10(%rsp), %rdi
    00000194: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 404
    00000199: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001a0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000001a7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001ae: 	je	.Ltmp423 # Offset: 430
.Ltmp434:
    000001b4: 	movq	-0x20(%rax), %rbp
    000001b8: 	movl	$0x1, %r12d
    000001be: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r15
    000001c5: 	callq	clock@PLT # Offset: 453
    000001ca: 	pxor	%xmm0, %xmm0
    000001ce: 	movq	%rax, end_time(%rip)
    000001d5: 	movq	%rbp, %rdi
    000001d8: 	subq	start_time(%rip), %rax
    000001df: 	cvtsi2sd	%rax, %xmm0
    000001e4: 	divsd	DATAat0x15758(%rip), %xmm0
    000001ec: 	callq	_Z13record_resultdPKc # Offset: 492
    000001f1: 	movq	0x18(%rsp), %rbx
    000001f6: 	addq	$0x3a338, %rbx
.Ltmp433:
    000001fd: 	cvttsd2si	init_value(%rip), %r14d
    00000206: 	addl	$0x1, %r12d
    0000020a: 	leaq	0x318(%rbx), %r13
    00000211: 	imull	%r12d, %r14d
    00000215: 	movl	%r14d, 0xc(%rsp)
.Ltmp432:
    0000021a: 	leaq	-0x318(%r13), %rbp
    00000221: 	jmp	.Ltmp424 # Offset: 545
.Ltmp428:
    00000223: 	movsbl	0x43(%rdi), %esi
.Ltmp429:
    00000227: 	movq	%r14, %rdi
    0000022a: 	callq	_ZNSo3putEc@PLT # Offset: 554
    0000022f: 	movq	%rax, %rdi
    00000232: 	callq	_ZNSo5flushEv@PLT # Offset: 562
.Ltmp426:
    00000237: 	addq	$0x4, %rbp
    0000023b: 	cmpq	%r13, %rbp
    0000023e: 	je	.Ltmp425 # Offset: 574
.Ltmp424:
    00000244: 	movl	(%rbp), %r8d
    00000248: 	cmpl	%r8d, 0xc(%rsp)
    0000024d: 	movl	%r8d, 0x18(%rsp)
    00000252: 	je	.Ltmp426 # Offset: 594
    00000254: 	movl	$0x5, %edx
    00000259: 	leaq	DATAat0x15182(%rip), %rsi
    00000260: 	movq	%r15, %rdi
    00000263: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 611
    00000268: 	movq	0x10(%rsp), %rdi
    0000026d: 	movq	0x8(%rdi), %rdx
    00000271: 	movq	(%rdi), %rsi
    00000274: 	movq	%r15, %rdi
    00000277: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 631
    0000027c: 	movl	$0x12, %edx
    00000281: 	leaq	DATAat0x15188(%rip), %rsi
    00000288: 	movq	%rax, %rdi
    0000028b: 	movq	%rax, %r14
    0000028e: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 654
    00000293: 	movl	0xc(%rsp), %esi
    00000297: 	movq	%r14, %rdi
    0000029a: 	callq	_ZNSolsEi@PLT # Offset: 666
    0000029f: 	movl	$0x5, %edx
    000002a4: 	leaq	DATAat0x1519b(%rip), %rsi
    000002ab: 	movq	%rax, %rdi
    000002ae: 	movq	%rax, %r14
    000002b1: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 689
    000002b6: 	movl	0x18(%rsp), %esi
    000002ba: 	movq	%r14, %rdi
    000002bd: 	callq	_ZNSolsEi@PLT # Offset: 701
    000002c2: 	movq	%rax, %r14
    000002c5: 	movq	(%rax), %rax
    000002c8: 	movq	-0x18(%rax), %rax
    000002cc: 	movq	0xf0(%r14,%rax), %rdi
    000002d4: 	testq	%rdi, %rdi
    000002d7: 	je	.Ltmp427 # Offset: 727
    000002d9: 	cmpb	$0x0, 0x38(%rdi)
    000002dd: 	jne	.Ltmp428 # Offset: 733
    000002e3: 	movq	%rdi, 0x18(%rsp)
    000002e8: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 744
    000002ed: 	movq	0x18(%rsp), %rdi
    000002f2: 	movl	$0xa, %esi
    000002f7: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000002fe: 	movq	(%rdi), %rax
    00000301: 	movq	0x30(%rax), %rax
    00000305: 	cmpq	%rdx, %rax
    00000308: 	je	.Ltmp429 # Offset: 776
    0000030e: 	callq	*%rax # Offset: 782
    00000310: 	movsbl	%al, %esi
    00000313: 	jmp	.Ltmp429 # Offset: 787
.Ltmp418:
    00000318: 	leaq	-0x3a338(%r8), %rax
    0000031f: 	nop # Size: 1
.Ltmp430:
    00000320: 	movl	(%rdx), %r13d
    00000323: 	addl	(%r10,%rax), %r13d
    00000327: 	movl	%r13d, (%r9,%rax)
    0000032b: 	addq	$0x318, %rax
    00000331: 	cmpq	%r8, %rax
    00000334: 	jne	.Ltmp430 # Offset: 820
    00000336: 	jmp	.Ltmp431 # Offset: 822
.Ltmp427:
    0000033b: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 827
.Ltmp425:
    00000340: 	leaq	0x318(%rbp), %r13
    00000347: 	leaq	0x3a650(%rbx), %rax
    0000034e: 	cmpq	%r13, %rax
    00000351: 	jne	.Ltmp432 # Offset: 849
    00000357: 	addq	$0x3a338, %rbx
    0000035e: 	cmpl	$0x12f, %r12d
    00000365: 	jne	.Ltmp433 # Offset: 869
    0000036b: 	addq	$0x38, %rsp
    0000036f: 	popq	%rbx
    00000370: 	popq	%rbp
    00000371: 	popq	%r12
    00000373: 	popq	%r13
    00000375: 	popq	%r14
    00000377: 	popq	%r15
    00000379: 	retq # Offset: 889
    0000037a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp423:
    00000380: 	movq	-0x8(%rdx), %rax
    00000384: 	addq	$0x200, %rax
    0000038a: 	jmp	.Ltmp434 # Offset: 906
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_ZXYIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_ZYXIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 68
  State       : disassembled
  Address     : 0x79f0
  Size        : 0x307
  MaxSize     : 0x310
  Offset      : 0x79f0
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_ZYXIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB067:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rsi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdx, %rbp
    00000013: 	leaq	0x318(%r12), %r14
    0000001b: 	pushq	%rbx
    0000001c: 	movq	%rdi, %rbx
    0000001f: 	addq	$0x3a338, %rbx
    00000026: 	subq	$0x28, %rsp
    0000002a: 	callq	clock@PLT # Offset: 42
    0000002f: 	movl	iterations(%rip), %r13d
    00000036: 	xorl	%r11d, %r11d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r13d, %r13d
    00000043: 	jle	.Ltmp435 # Offset: 67
.Ltmp440:
    00000049: 	movq	%rbx, %r9
    0000004c: 	movq	%r14, %rcx
    0000004f: 	movl	$0x3a338, %r12d
.Ltmp439:
    00000055: 	leaq	-0x3a338(%r9), %rdi
    0000005c: 	movq	%r9, %r8
    0000005f: 	leaq	0x4(%rcx), %r10
    00000063: 	movq	%r9, %rsi
.Ltmp438:
    00000066: 	movq	%rsi, %r15
    00000069: 	leaq	-0x3a338(%rsi), %rdx
    00000070: 	xorl	%eax, %eax
    00000072: 	subq	%r10, %r15
    00000075: 	cmpq	$0x8, %r15
    00000079: 	jbe	.Ltmp436 # Offset: 121
    0000007f: 	nop # Size: 1
.Ltmp437:
    00000080: 	movdqu	(%rdx,%rax), %xmm0
    00000085: 	movdqu	(%rcx,%rax), %xmm2
    0000008a: 	paddd	%xmm2, %xmm0
    0000008e: 	movups	%xmm0, (%rsi,%rax)
    00000092: 	addq	$0x10, %rax
    00000096: 	cmpq	$0x310, %rax
    0000009c: 	jne	.Ltmp437 # Offset: 156
    0000009e: 	movq	0x310(%rcx), %xmm1
    000000a6: 	movq	-0x3a028(%rsi), %xmm0
    000000ae: 	paddd	%xmm1, %xmm0
    000000b2: 	movq	%xmm0, 0x310(%rsi)
.Ltmp448:
    000000ba: 	addq	$0x318, %rdi
    000000c1: 	addq	$0x318, %rsi
    000000c8: 	addq	$0x318, %r8
    000000cf: 	cmpq	%r9, %rdi
    000000d2: 	jne	.Ltmp438 # Offset: 210
    000000d4: 	addq	$0x3a338, %r12
    000000db: 	leaq	0x3a338(%rdi), %r9
    000000e2: 	addq	$0x318, %rcx
    000000e9: 	cmpq	$0x44e2f48, %r12
    000000f0: 	jne	.Ltmp439 # Offset: 240
    000000f6: 	addl	$0x1, %r11d
    000000fa: 	cmpl	%r13d, %r11d
    000000fd: 	jne	.Ltmp440 # Offset: 253
.Ltmp435:
    00000103: 	movq	%rbp, %rdi
    00000106: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 262
    0000010b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000112: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000119: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000120: 	je	.Ltmp441 # Offset: 288
.Ltmp451:
    00000126: 	movq	-0x20(%rax), %r12
    0000012a: 	movl	$0x1, %r13d
    00000130: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r15
    00000137: 	callq	clock@PLT # Offset: 311
    0000013c: 	pxor	%xmm0, %xmm0
    00000140: 	movq	%rax, end_time(%rip)
    00000147: 	movq	%r12, %rdi
    0000014a: 	subq	start_time(%rip), %rax
    00000151: 	cvtsi2sd	%rax, %xmm0
    00000156: 	divsd	DATAat0x15758(%rip), %xmm0
    0000015e: 	callq	_Z13record_resultdPKc # Offset: 350
.Ltmp450:
    00000163: 	cvttsd2si	init_value(%rip), %eax
    0000016b: 	addl	$0x1, %r13d
    0000016f: 	leaq	0x318(%rbx), %r14
    00000176: 	imull	%r13d, %eax
    0000017a: 	movl	%eax, 0xc(%rsp)
.Ltmp449:
    0000017e: 	leaq	-0x318(%r14), %r12
    00000185: 	jmp	.Ltmp442 # Offset: 389
.Ltmp446:
    00000187: 	movsbl	0x43(%rdi), %esi
.Ltmp447:
    0000018b: 	movq	%r8, %rdi
    0000018e: 	callq	_ZNSo3putEc@PLT # Offset: 398
    00000193: 	movq	%rax, %rdi
    00000196: 	callq	_ZNSo5flushEv@PLT # Offset: 406
.Ltmp444:
    0000019b: 	addq	$0x4, %r12
    0000019f: 	cmpq	%r14, %r12
    000001a2: 	je	.Ltmp443 # Offset: 418
.Ltmp442:
    000001a8: 	movl	(%r12), %r8d
    000001ac: 	cmpl	%r8d, 0xc(%rsp)
    000001b1: 	movl	%r8d, 0x18(%rsp)
    000001b6: 	je	.Ltmp444 # Offset: 438
    000001b8: 	movl	$0x5, %edx
    000001bd: 	leaq	DATAat0x15182(%rip), %rsi
    000001c4: 	movq	%r15, %rdi
    000001c7: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 455
    000001cc: 	movq	0x8(%rbp), %rdx
    000001d0: 	movq	(%rbp), %rsi
    000001d4: 	movq	%r15, %rdi
    000001d7: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 471
    000001dc: 	movl	$0x12, %edx
    000001e1: 	leaq	DATAat0x15188(%rip), %rsi
    000001e8: 	movq	%rax, %rdi
    000001eb: 	movq	%rax, 0x10(%rsp)
    000001f0: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 496
    000001f5: 	movl	0xc(%rsp), %esi
    000001f9: 	movq	0x10(%rsp), %rdi
    000001fe: 	callq	_ZNSolsEi@PLT # Offset: 510
    00000203: 	movl	$0x5, %edx
    00000208: 	leaq	DATAat0x1519b(%rip), %rsi
    0000020f: 	movq	%rax, %rdi
    00000212: 	movq	%rax, 0x10(%rsp)
    00000217: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 535
    0000021c: 	movq	0x10(%rsp), %rdi
    00000221: 	movl	0x18(%rsp), %esi
    00000225: 	callq	_ZNSolsEi@PLT # Offset: 549
    0000022a: 	movq	%rax, %r8
    0000022d: 	movq	(%rax), %rax
    00000230: 	movq	-0x18(%rax), %rax
    00000234: 	movq	0xf0(%r8,%rax), %rdi
    0000023c: 	testq	%rdi, %rdi
    0000023f: 	je	.Ltmp445 # Offset: 575
    00000241: 	cmpb	$0x0, 0x38(%rdi)
    00000245: 	jne	.Ltmp446 # Offset: 581
    0000024b: 	movq	%r8, 0x18(%rsp)
    00000250: 	movq	%rdi, 0x10(%rsp)
    00000255: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 597
    0000025a: 	movq	0x10(%rsp), %rdi
    0000025f: 	movq	0x18(%rsp), %r8
    00000264: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    0000026b: 	movl	$0xa, %esi
    00000270: 	movq	(%rdi), %rax
    00000273: 	movq	0x30(%rax), %rax
    00000277: 	cmpq	%rdx, %rax
    0000027a: 	je	.Ltmp447 # Offset: 634
    00000280: 	movq	%r8, 0x10(%rsp)
    00000285: 	callq	*%rax # Offset: 645
    00000287: 	movq	0x10(%rsp), %r8
    0000028c: 	movsbl	%al, %esi
    0000028f: 	jmp	.Ltmp447 # Offset: 655
    00000294: 	nopl	(%rax) # Size: 4
.Ltmp436:
    00000298: 	movl	(%rdi,%rax), %edx
    0000029b: 	addl	(%rcx,%rax), %edx
    0000029e: 	movl	%edx, (%r8,%rax)
    000002a2: 	addq	$0x4, %rax
    000002a6: 	cmpq	$0x318, %rax
    000002ac: 	jne	.Ltmp436 # Offset: 684
    000002ae: 	jmp	.Ltmp448 # Offset: 686
.Ltmp445:
    000002b3: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 691
.Ltmp443:
    000002b8: 	leaq	0x318(%r12), %r14
    000002c0: 	leaq	0x3a650(%rbx), %rax
    000002c7: 	cmpq	%rax, %r14
    000002ca: 	jne	.Ltmp449 # Offset: 714
    000002d0: 	addq	$0x3a338, %rbx
    000002d7: 	cmpl	$0x12f, %r13d
    000002de: 	jne	.Ltmp450 # Offset: 734
    000002e4: 	addq	$0x28, %rsp
    000002e8: 	popq	%rbx
    000002e9: 	popq	%rbp
    000002ea: 	popq	%r12
    000002ec: 	popq	%r13
    000002ee: 	popq	%r14
    000002f0: 	popq	%r15
    000002f2: 	retq # Offset: 754
    000002f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp441:
    000002f8: 	movq	-0x8(%rdx), %rax
    000002fc: 	addq	$0x200, %rax
    00000302: 	jmp	.Ltmp451 # Offset: 770
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_ZYXIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_XZYIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 69
  State       : disassembled
  Address     : 0x7d00
  Size        : 0x77c
  MaxSize     : 0x780
  Offset      : 0x7d00
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_XZYIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB068:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	movq	%rsi, %rbx
    00000011: 	subq	$0x198, %rsp
    00000018: 	movq	%rdi, 0x20(%rsp)
    0000001d: 	movq	%rdx, 0x30(%rsp)
    00000022: 	movq	%fs:0x28, %rax
    0000002b: 	movq	%rax, 0x188(%rsp)
    00000033: 	xorl	%eax, %eax
    00000035: 	callq	clock@PLT # Offset: 53
    0000003a: 	movq	%rax, start_time(%rip)
    00000041: 	movl	iterations(%rip), %eax
    00000047: 	testl	%eax, %eax
    00000049: 	jle	.Ltmp452 # Offset: 73
    0000004f: 	leaq	0x18c(%rbx), %rax
    00000056: 	movl	$0x0, 0x1c(%rsp)
    0000005e: 	movq	%rax, 0x38(%rsp)
    00000063: 	leaq	-0xe808(%rbx), %rax
    0000006a: 	movq	%rax, 0x40(%rsp)
    0000006f: 	movq	0x20(%rsp), %rax
    00000074: 	subq	$0xa0e, %rax
    0000007a: 	movq	%rax, 0x48(%rsp)
.Ltmp458:
    0000007f: 	movq	$0x0, 0x28(%rsp)
    00000088: 	movl	$0xe8ce, %r9d
.Ltmp457:
    0000008e: 	movq	0x28(%rsp), %rsi
    00000093: 	movq	0x20(%rsp), %rax
    00000098: 	leaq	-0xe8ce(%r9), %r13
    0000009f: 	leaq	(%r9,%rax), %rbx
    000000a3: 	subq	%rsi, %rax
    000000a6: 	leaq	-0xdec0(%rsi), %r15
    000000ad: 	movq	%rax, %rbp
    000000b0: 	movq	0x40(%rsp), %rax
    000000b5: 	leaq	0xa0e(%rsi), %r14
    000000bc: 	leaq	(%rax,%r9), %r8
    000000c0: 	movq	0x48(%rsp), %rax
    000000c5: 	leaq	(%rax,%r9), %rdi
    000000c9: 	movq	0x38(%rsp), %rax
    000000ce: 	leaq	(%rax,%r9), %r12
.Ltmp456:
    000000d2: 	leaq	0xf217(%rdi), %rdx
    000000d9: 	leaq	(%r15,%rdi), %rcx
    000000dd: 	movq	%r13, %rax
    000000e0: 	leaq	(%r14,%rdi), %rsi
    000000e4: 	cmpq	%rdx, %r8
    000000e7: 	jae	.Ltmp453 # Offset: 231
    000000e9: 	leaq	0x1(%r8), %rdx
    000000ed: 	cmpq	%rdx, %rbx
    000000f0: 	jb	.Ltmp454 # Offset: 240
.Ltmp453:
    000000f6: 	movzbl	(%r8), %eax
    000000fa: 	movq	%rbx, %rsi
    000000fd: 	movq	%rbp, %rcx
    00000100: 	movd	%eax, %xmm1
    00000104: 	punpcklbw	%xmm1, %xmm1
    00000108: 	punpcklwd	%xmm1, %xmm1
    0000010c: 	pshufd	$0x0, %xmm1, %xmm1
    00000111: 	nopl	(%rax) # Size: 7
.Ltmp455:
    00000118: 	movzbl	0x56a(%rcx), %edx
    0000011f: 	movzbl	(%rcx), %r11d
    00000123: 	addq	$0xc60, %rcx
    0000012a: 	addq	$0xc60, %rsi
    00000131: 	movzbl	-0x7bc(%rcx), %eax
    00000138: 	movzbl	-0x18c(%rcx), %r10d
    00000140: 	shlq	$0x8, %rdx
    00000144: 	orq	%rax, %rdx
    00000147: 	movzbl	-0x882(%rcx), %eax
    0000014e: 	shlq	$0x8, %rdx
    00000152: 	orq	%rax, %rdx
    00000155: 	movzbl	-0x948(%rcx), %eax
    0000015c: 	shlq	$0x8, %rdx
    00000160: 	orq	%rax, %rdx
    00000163: 	movzbl	-0xa0e(%rcx), %eax
    0000016a: 	shlq	$0x8, %rdx
    0000016e: 	orq	%rax, %rdx
    00000171: 	movzbl	-0xad4(%rcx), %eax
    00000178: 	shlq	$0x8, %rdx
    0000017c: 	orq	%rax, %rdx
    0000017f: 	movzbl	-0xb9a(%rcx), %eax
    00000186: 	shlq	$0x8, %rdx
    0000018a: 	orq	%rax, %rdx
    0000018d: 	movzbl	-0xc6(%rcx), %eax
    00000194: 	shlq	$0x8, %rdx
    00000198: 	shlq	$0x8, %rax
    0000019c: 	orq	%r11, %rdx
    0000019f: 	orq	%r10, %rax
    000001a2: 	movzbl	-0x252(%rcx), %r10d
    000001aa: 	movq	%rdx, (%rsp)
    000001ae: 	shlq	$0x8, %rax
    000001b2: 	orq	%r10, %rax
    000001b5: 	movzbl	-0x318(%rcx), %r10d
    000001bd: 	shlq	$0x8, %rax
    000001c1: 	orq	%r10, %rax
    000001c4: 	movzbl	-0x3de(%rcx), %r10d
    000001cc: 	shlq	$0x8, %rax
    000001d0: 	orq	%r10, %rax
    000001d3: 	movzbl	-0x4a4(%rcx), %r10d
    000001db: 	shlq	$0x8, %rax
    000001df: 	orq	%r10, %rax
    000001e2: 	movzbl	-0x56a(%rcx), %r10d
    000001ea: 	shlq	$0x8, %rax
    000001ee: 	orq	%r10, %rax
    000001f1: 	movzbl	-0x630(%rcx), %r10d
    000001f9: 	shlq	$0x8, %rax
    000001fd: 	orq	%r10, %rax
    00000200: 	movq	%rax, 0x8(%rsp)
    00000205: 	movdqa	(%rsp), %xmm0
    0000020a: 	paddb	%xmm1, %xmm0
    0000020e: 	movd	%xmm0, %eax
    00000212: 	movb	%al, -0xc60(%rsi)
    00000218: 	movaps	%xmm0, 0x130(%rsp)
    00000220: 	movzbl	0x131(%rsp), %eax
    00000228: 	movb	%al, -0xb9a(%rsi)
    0000022e: 	movaps	%xmm0, 0x120(%rsp)
    00000236: 	movzbl	0x122(%rsp), %eax
    0000023e: 	movb	%al, -0xad4(%rsi)
    00000244: 	movaps	%xmm0, 0x110(%rsp)
    0000024c: 	movzbl	0x113(%rsp), %eax
    00000254: 	movb	%al, -0xa0e(%rsi)
    0000025a: 	movaps	%xmm0, 0x100(%rsp)
    00000262: 	movzbl	0x104(%rsp), %eax
    0000026a: 	movb	%al, -0x948(%rsi)
    00000270: 	movaps	%xmm0, 0xf0(%rsp)
    00000278: 	movzbl	0xf5(%rsp), %eax
    00000280: 	movb	%al, -0x882(%rsi)
    00000286: 	movaps	%xmm0, 0xe0(%rsp)
    0000028e: 	movzbl	0xe6(%rsp), %eax
    00000296: 	movb	%al, -0x7bc(%rsi)
    0000029c: 	movaps	%xmm0, 0xd0(%rsp)
    000002a4: 	movzbl	0xd7(%rsp), %eax
    000002ac: 	movb	%al, -0x6f6(%rsi)
    000002b2: 	movaps	%xmm0, 0xc0(%rsp)
    000002ba: 	movzbl	0xc8(%rsp), %eax
    000002c2: 	movb	%al, -0x630(%rsi)
    000002c8: 	movaps	%xmm0, 0xb0(%rsp)
    000002d0: 	movzbl	0xb9(%rsp), %eax
    000002d8: 	movb	%al, -0x56a(%rsi)
    000002de: 	movaps	%xmm0, 0xa0(%rsp)
    000002e6: 	movzbl	0xaa(%rsp), %eax
    000002ee: 	movb	%al, -0x4a4(%rsi)
    000002f4: 	movaps	%xmm0, 0x90(%rsp)
    000002fc: 	movzbl	0x9b(%rsp), %eax
    00000304: 	movb	%al, -0x3de(%rsi)
    0000030a: 	movaps	%xmm0, 0x80(%rsp)
    00000312: 	movzbl	0x8c(%rsp), %eax
    0000031a: 	movb	%al, -0x318(%rsi)
    00000320: 	movaps	%xmm0, 0x70(%rsp)
    00000325: 	movzbl	0x7d(%rsp), %eax
    0000032a: 	movb	%al, -0x252(%rsi)
    00000330: 	movaps	%xmm0, 0x60(%rsp)
    00000335: 	movzbl	0x6e(%rsp), %eax
    0000033a: 	movb	%al, -0x18c(%rsi)
    00000340: 	movaps	%xmm0, 0x50(%rsp)
    00000345: 	movzbl	0x5f(%rsp), %eax
    0000034a: 	movb	%al, -0xc6(%rsi)
    00000350: 	cmpq	%rdi, %rcx
    00000353: 	jne	.Ltmp455 # Offset: 851
    00000359: 	movzbl	0x56a(%rdi), %eax
    00000360: 	movzbl	0x4a4(%rdi), %edx
    00000367: 	movzbl	(%r8), %ecx
    0000036b: 	shlq	$0x8, %rax
    0000036f: 	orq	%rdx, %rax
    00000372: 	movzbl	0x3de(%rdi), %edx
    00000379: 	shlq	$0x8, %rax
    0000037d: 	orq	%rdx, %rax
    00000380: 	movzbl	0x318(%rdi), %edx
    00000387: 	shlq	$0x8, %rax
    0000038b: 	orq	%rdx, %rax
    0000038e: 	movzbl	0x252(%rdi), %edx
    00000395: 	shlq	$0x8, %rax
    00000399: 	orq	%rdx, %rax
    0000039c: 	movzbl	0x18c(%rdi), %edx
    000003a3: 	shlq	$0x8, %rax
    000003a7: 	orq	%rdx, %rax
    000003aa: 	movzbl	0xc6(%rdi), %edx
    000003b1: 	shlq	$0x8, %rax
    000003b5: 	orq	%rdx, %rax
    000003b8: 	movzbl	(%rdi), %edx
    000003bb: 	shlq	$0x8, %rax
    000003bf: 	orq	%rdx, %rax
    000003c2: 	movl	%ecx, %edx
    000003c4: 	shll	$0x8, %edx
    000003c7: 	movq	%rax, %xmm2
    000003cc: 	orl	%ecx, %edx
    000003ce: 	movd	%edx, %xmm3
    000003d2: 	pshuflw	$0x0, %xmm3, %xmm0
    000003d7: 	paddb	%xmm0, %xmm2
    000003db: 	movq	%xmm2, %rdx
    000003e0: 	movq	%xmm2, %rax
    000003e5: 	movq	%xmm2, %rsi
    000003ea: 	movq	%xmm2, 0x178(%rsp)
    000003f3: 	shrq	$0x10, %rdx
    000003f7: 	movb	%al, 0xe8ce(%rdi)
    000003fd: 	shrq	$0x38, %rsi
    00000401: 	movq	%xmm2, 0x170(%rsp)
    0000040a: 	movb	%ah, 0xe994(%rdi)
    00000410: 	movq	%xmm2, 0x168(%rsp)
    00000419: 	movb	%dl, 0xea5a(%rdi)
    0000041f: 	movq	%xmm2, %rdx
    00000424: 	movq	%xmm2, 0x160(%rsp)
    0000042d: 	shrq	$0x18, %rdx
    00000431: 	movb	%dl, 0xeb20(%rdi)
    00000437: 	movq	%xmm2, %rdx
    0000043c: 	movq	%xmm2, 0x158(%rsp)
    00000445: 	shrq	$0x20, %rdx
    00000449: 	movb	%dl, 0xebe6(%rdi)
    0000044f: 	movq	%xmm2, %rdx
    00000454: 	movq	%xmm2, 0x150(%rsp)
    0000045d: 	shrq	$0x28, %rdx
    00000461: 	movb	%dl, 0xecac(%rdi)
    00000467: 	movq	%xmm2, %rdx
    0000046c: 	movq	%xmm2, 0x148(%rsp)
    00000475: 	shrq	$0x30, %rdx
    00000479: 	movb	%dl, 0xed72(%rdi)
    0000047f: 	movq	%xmm2, 0x140(%rsp)
    00000488: 	movb	%sil, 0xee38(%rdi)
    0000048f: 	movzbl	(%r8), %eax
    00000493: 	addb	0x630(%rdi), %al
    00000499: 	movb	%al, 0xeefe(%rdi)
    0000049f: 	movzbl	0x6f6(%rdi), %eax
    000004a6: 	addb	(%r8), %al
    000004a9: 	movb	%al, 0xefc4(%rdi)
    000004af: 	movzbl	0x7bc(%rdi), %eax
    000004b6: 	addb	(%r8), %al
    000004b9: 	movb	%al, 0xf08a(%rdi)
    000004bf: 	movzbl	(%r8), %eax
    000004c3: 	addb	0x882(%rdi), %al
    000004c9: 	movb	%al, 0xf150(%rdi)
    000004cf: 	movzbl	(%r8), %eax
    000004d3: 	addb	0x948(%rdi), %al
    000004d9: 	movb	%al, 0xf216(%rdi)
.Ltmp466:
    000004df: 	addq	$0xc6, %r8
    000004e6: 	addq	$0xe8ce, %rbx
    000004ed: 	addq	$0xe8ce, %rbp
    000004f4: 	addq	$0xe8ce, %rdi
    000004fb: 	cmpq	%r12, %r8
    000004fe: 	jne	.Ltmp456 # Offset: 1278
    00000504: 	addq	$0x1, %r9
    00000508: 	subq	$0x1, 0x28(%rsp)
    0000050e: 	cmpq	$0xe994, %r9
    00000515: 	jne	.Ltmp457 # Offset: 1301
    0000051b: 	addl	$0x1, 0x1c(%rsp)
    00000520: 	movl	0x1c(%rsp), %eax
    00000524: 	cmpl	%eax, iterations(%rip)
    0000052a: 	jg	.Ltmp458 # Offset: 1322
.Ltmp452:
    00000530: 	movq	0x30(%rsp), %rdi
    00000535: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1333
    0000053a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000541: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000548: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000054f: 	je	.Ltmp459 # Offset: 1359
.Ltmp470:
    00000555: 	movq	-0x20(%rax), %rbp
    00000559: 	movl	$0x1, %r12d
    0000055f: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r13
    00000566: 	callq	clock@PLT # Offset: 1382
    0000056b: 	pxor	%xmm0, %xmm0
    0000056f: 	movq	%rax, end_time(%rip)
    00000576: 	movq	%rbp, %rdi
    00000579: 	subq	start_time(%rip), %rax
    00000580: 	cvtsi2sd	%rax, %xmm0
    00000585: 	divsd	DATAat0x15758(%rip), %xmm0
    0000058d: 	callq	_Z13record_resultdPKc # Offset: 1421
    00000592: 	movq	0x20(%rsp), %rbx
    00000597: 	addq	$0xe8ce, %rbx
.Ltmp468:
    0000059e: 	cvttsd2si	init_value(%rip), %eax
    000005a6: 	addl	$0x1, %r12d
    000005aa: 	leaq	0xc6(%rbx), %rbp
    000005b1: 	movl	%r12d, 0x1c(%rsp)
    000005b6: 	imull	%r12d, %eax
    000005ba: 	movb	%al, (%rsp)
.Ltmp467:
    000005bd: 	leaq	-0xc6(%rbp), %r14
    000005c4: 	leaq	DATAat0x1519b(%rip), %r15
    000005cb: 	jmp	.Ltmp460 # Offset: 1483
.Ltmp464:
    000005cd: 	movsbl	0x43(%rdi), %esi
.Ltmp465:
    000005d1: 	movq	%r12, %rdi
    000005d4: 	callq	_ZNSo3putEc@PLT # Offset: 1492
    000005d9: 	movq	%rax, %rdi
    000005dc: 	callq	_ZNSo5flushEv@PLT # Offset: 1500
.Ltmp462:
    000005e1: 	addq	$0x1, %r14
    000005e5: 	cmpq	%r14, %rbp
    000005e8: 	je	.Ltmp461 # Offset: 1512
.Ltmp460:
    000005ee: 	movzbl	(%r14), %ecx
    000005f2: 	cmpb	%cl, (%rsp)
    000005f5: 	movb	%cl, 0x28(%rsp)
    000005f9: 	je	.Ltmp462 # Offset: 1529
    000005fb: 	movl	$0x5, %edx
    00000600: 	leaq	DATAat0x15182(%rip), %rsi
    00000607: 	movq	%r13, %rdi
    0000060a: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1546
    0000060f: 	movq	0x30(%rsp), %rdi
    00000614: 	movq	0x8(%rdi), %rdx
    00000618: 	movq	(%rdi), %rsi
    0000061b: 	movq	%r13, %rdi
    0000061e: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1566
    00000623: 	movl	$0x12, %edx
    00000628: 	leaq	DATAat0x15188(%rip), %rsi
    0000062f: 	movq	%rax, %rdi
    00000632: 	movq	%rax, %r12
    00000635: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1589
    0000063a: 	leaq	0x187(%rsp), %r8
    00000642: 	movzbl	(%rsp), %eax
    00000646: 	movq	%r12, %rdi
    00000649: 	movq	%r8, %rsi
    0000064c: 	movl	$0x1, %edx
    00000651: 	movq	%r8, 0x20(%rsp)
    00000656: 	movb	%al, 0x187(%rsp)
    0000065d: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1629
    00000662: 	movl	$0x5, %edx
    00000667: 	movq	%r15, %rsi
    0000066a: 	movq	%rax, %rdi
    0000066d: 	movq	%rax, %r12
    00000670: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1648
    00000675: 	movzbl	0x28(%rsp), %ecx
    0000067a: 	movq	0x20(%rsp), %rsi
    0000067f: 	movq	%r12, %rdi
    00000682: 	movl	$0x1, %edx
    00000687: 	movb	%cl, 0x187(%rsp)
    0000068e: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1678
    00000693: 	movq	%rax, %r12
    00000696: 	movq	(%rax), %rax
    00000699: 	movq	-0x18(%rax), %rax
    0000069d: 	movq	0xf0(%r12,%rax), %rdi
    000006a5: 	testq	%rdi, %rdi
    000006a8: 	je	.Ltmp463 # Offset: 1704
    000006aa: 	cmpb	$0x0, 0x38(%rdi)
    000006ae: 	jne	.Ltmp464 # Offset: 1710
    000006b4: 	movq	%rdi, 0x20(%rsp)
    000006b9: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 1721
    000006be: 	movq	0x20(%rsp), %rdi
    000006c3: 	movl	$0xa, %esi
    000006c8: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000006cf: 	movq	(%rdi), %rax
    000006d2: 	movq	0x30(%rax), %rax
    000006d6: 	cmpq	%rdx, %rax
    000006d9: 	je	.Ltmp465 # Offset: 1753
    000006df: 	callq	*%rax # Offset: 1759
    000006e1: 	movsbl	%al, %esi
    000006e4: 	jmp	.Ltmp465 # Offset: 1764
    000006e9: 	nopl	(%rax) # Size: 7
.Ltmp454:
    000006f0: 	movzbl	(%rcx,%rax), %edx
    000006f4: 	addb	(%r8), %dl
    000006f7: 	movb	%dl, (%rsi,%rax)
    000006fa: 	addq	$0xc6, %rax
    00000700: 	cmpq	%r9, %rax
    00000703: 	jne	.Ltmp454 # Offset: 1795
    00000705: 	jmp	.Ltmp466 # Offset: 1797
.Ltmp463:
    0000070a: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 1802
.Ltmp461:
    0000070f: 	addq	$0xc6, %rbp
    00000716: 	leaq	0xe994(%rbx), %rax
    0000071d: 	cmpq	%rax, %rbp
    00000720: 	jne	.Ltmp467 # Offset: 1824
    00000726: 	movl	0x1c(%rsp), %r12d
    0000072b: 	addq	$0xe8ce, %rbx
    00000732: 	cmpl	$0x12f, %r12d
    00000739: 	jne	.Ltmp468 # Offset: 1849
    0000073f: 	movq	0x188(%rsp), %rax
    00000747: 	subq	%fs:0x28, %rax
    00000750: 	jne	.Ltmp469 # Offset: 1872
    00000752: 	addq	$0x198, %rsp
    00000759: 	popq	%rbx
    0000075a: 	popq	%rbp
    0000075b: 	popq	%r12
    0000075d: 	popq	%r13
    0000075f: 	popq	%r14
    00000761: 	popq	%r15
    00000763: 	retq # Offset: 1891
    00000764: 	nopl	(%rax) # Size: 4
.Ltmp459:
    00000768: 	movq	-0x8(%rdx), %rax
    0000076c: 	addq	$0x200, %rax
    00000772: 	jmp	.Ltmp470 # Offset: 1906
.Ltmp469:
    00000777: 	callq	__stack_chk_fail@PLT # Offset: 1911
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_XZYIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_XYZIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 70
  State       : disassembled
  Address     : 0x8480
  Size        : 0x2e1
  MaxSize     : 0x2f0
  Offset      : 0x8480
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_XYZIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB069:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rdi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdx, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rsi, %rbx
    00000017: 	subq	$0x28, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x18(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movq	%rax, start_time(%rip)
    00000037: 	movl	iterations(%rip), %eax
    0000003d: 	testl	%eax, %eax
    0000003f: 	jle	.Ltmp471 # Offset: 63
    00000045: 	leaq	0xea5a(%rbx), %r13
    0000004c: 	xorl	%r11d, %r11d
    0000004f: 	leaq	0xe8ce(%r12), %rbx
    00000057: 	addq	$0xe994, %r12
.Ltmp475:
    0000005e: 	movq	%r13, %rsi
    00000061: 	movq	%rbx, %r10
.Ltmp474:
    00000064: 	movq	%r10, %rdi
    00000067: 	leaq	0xe8ce(%r10), %r9
    0000006e: 	leaq	-0xe994(%rsi), %r8
.Ltmp473:
    00000075: 	movzbl	-0xe8ce(%rdi), %ecx
    0000007c: 	movq	%r8, %rax
    0000007f: 	movq	%rdi, %rdx
    00000082: 	nopw	(%rax,%rax) # Size: 6
.Ltmp472:
    00000088: 	addb	(%rax), %cl
    0000008a: 	addq	$0xc6, %rax
    00000090: 	addq	$0xe8ce, %rdx
    00000097: 	movb	%cl, -0xe8ce(%rdx)
    0000009d: 	cmpq	%rsi, %rax
    000000a0: 	jne	.Ltmp472 # Offset: 160
    000000a2: 	addq	$0xc6, %rdi
    000000a9: 	cmpq	%r9, %rdi
    000000ac: 	jne	.Ltmp473 # Offset: 172
    000000ae: 	addq	$0x1, %r10
    000000b2: 	leaq	0x1(%rax), %rsi
    000000b6: 	cmpq	%r12, %r10
    000000b9: 	jne	.Ltmp474 # Offset: 185
    000000bb: 	addl	$0x1, %r11d
    000000bf: 	cmpl	%r11d, iterations(%rip)
    000000c6: 	jg	.Ltmp475 # Offset: 198
.Ltmp487:
    000000c8: 	movq	%rbp, %rdi
    000000cb: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 203
    000000d0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000d7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000000de: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000e5: 	je	.Ltmp476 # Offset: 229
.Ltmp486:
    000000eb: 	movq	-0x20(%rax), %r12
    000000ef: 	movl	$0x1, %r15d
    000000f5: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r13
    000000fc: 	callq	clock@PLT # Offset: 252
    00000101: 	pxor	%xmm0, %xmm0
    00000105: 	movq	%rax, end_time(%rip)
    0000010c: 	movq	%r12, %rdi
    0000010f: 	subq	start_time(%rip), %rax
    00000116: 	cvtsi2sd	%rax, %xmm0
    0000011b: 	divsd	DATAat0x15758(%rip), %xmm0
    00000123: 	callq	_Z13record_resultdPKc # Offset: 291
.Ltmp484:
    00000128: 	cvttsd2si	init_value(%rip), %eax
    00000130: 	addl	$0x1, %r15d
    00000134: 	leaq	0xc6(%rbx), %r14
    0000013b: 	movl	%r15d, 0x8(%rsp)
    00000140: 	imull	%r15d, %eax
    00000144: 	movb	%al, 0xe(%rsp)
.Ltmp483:
    00000148: 	movq	%rbx, (%rsp)
    0000014c: 	leaq	-0xc6(%r14), %r12
    00000153: 	jmp	.Ltmp477 # Offset: 339
.Ltmp481:
    00000155: 	movsbl	0x43(%r15), %esi
.Ltmp482:
    0000015a: 	movq	%rbx, %rdi
    0000015d: 	callq	_ZNSo3putEc@PLT # Offset: 349
    00000162: 	movq	%rax, %rdi
    00000165: 	callq	_ZNSo5flushEv@PLT # Offset: 357
.Ltmp479:
    0000016a: 	addq	$0x1, %r12
    0000016e: 	cmpq	%r12, %r14
    00000171: 	je	.Ltmp478 # Offset: 369
.Ltmp477:
    00000177: 	movzbl	(%r12), %ecx
    0000017c: 	movzbl	0xe(%rsp), %ebx
    00000181: 	cmpb	%cl, %bl
    00000183: 	movb	%cl, 0xf(%rsp)
    00000187: 	je	.Ltmp479 # Offset: 391
    00000189: 	movl	$0x5, %edx
    0000018e: 	leaq	DATAat0x15182(%rip), %rsi
    00000195: 	movq	%r13, %rdi
    00000198: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 408
    0000019d: 	movq	0x8(%rbp), %rdx
    000001a1: 	movq	(%rbp), %rsi
    000001a5: 	movq	%r13, %rdi
    000001a8: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 424
    000001ad: 	movl	$0x12, %edx
    000001b2: 	leaq	DATAat0x15188(%rip), %rsi
    000001b9: 	movq	%rax, %rdi
    000001bc: 	movq	%rax, %r15
    000001bf: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 447
    000001c4: 	movb	%bl, 0x17(%rsp)
    000001c8: 	leaq	0x17(%rsp), %rbx
    000001cd: 	movq	%r15, %rdi
    000001d0: 	movq	%rbx, %rsi
    000001d3: 	movl	$0x1, %edx
    000001d8: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 472
    000001dd: 	movl	$0x5, %edx
    000001e2: 	leaq	DATAat0x1519b(%rip), %rsi
    000001e9: 	movq	%rax, %rdi
    000001ec: 	movq	%rax, %r15
    000001ef: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 495
    000001f4: 	movzbl	0xf(%rsp), %ecx
    000001f9: 	movq	%rbx, %rsi
    000001fc: 	movq	%r15, %rdi
    000001ff: 	movl	$0x1, %edx
    00000204: 	movb	%cl, 0x17(%rsp)
    00000208: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 520
    0000020d: 	movq	%rax, %rbx
    00000210: 	movq	(%rax), %rax
    00000213: 	movq	-0x18(%rax), %rax
    00000217: 	movq	0xf0(%rbx,%rax), %r15
    0000021f: 	testq	%r15, %r15
    00000222: 	je	.Ltmp480 # Offset: 546
    00000224: 	cmpb	$0x0, 0x38(%r15)
    00000229: 	jne	.Ltmp481 # Offset: 553
    0000022f: 	movq	%r15, %rdi
    00000232: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 562
    00000237: 	movq	(%r15), %rax
    0000023a: 	movl	$0xa, %esi
    0000023f: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000246: 	movq	0x30(%rax), %rax
    0000024a: 	cmpq	%rdx, %rax
    0000024d: 	je	.Ltmp482 # Offset: 589
    00000253: 	movq	%r15, %rdi
    00000256: 	callq	*%rax # Offset: 598
    00000258: 	movsbl	%al, %esi
    0000025b: 	jmp	.Ltmp482 # Offset: 603
.Ltmp480:
    00000260: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 608
.Ltmp478:
    00000265: 	movq	(%rsp), %rbx
    00000269: 	addq	$0xc6, %r14
    00000270: 	leaq	0xe994(%rbx), %rax
    00000277: 	cmpq	%r14, %rax
    0000027a: 	jne	.Ltmp483 # Offset: 634
    00000280: 	movl	0x8(%rsp), %r15d
    00000285: 	addq	$0xe8ce, %rbx
    0000028c: 	cmpl	$0x12f, %r15d
    00000293: 	jne	.Ltmp484 # Offset: 659
    00000299: 	movq	0x18(%rsp), %rax
    0000029e: 	subq	%fs:0x28, %rax
    000002a7: 	jne	.Ltmp485 # Offset: 679
    000002a9: 	addq	$0x28, %rsp
    000002ad: 	popq	%rbx
    000002ae: 	popq	%rbp
    000002af: 	popq	%r12
    000002b1: 	popq	%r13
    000002b3: 	popq	%r14
    000002b5: 	popq	%r15
    000002b7: 	retq # Offset: 695
    000002b8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp476:
    000002c0: 	movq	-0x8(%rdx), %rax
    000002c4: 	addq	$0x200, %rax
    000002ca: 	jmp	.Ltmp486 # Offset: 714
.Ltmp471:
    000002cf: 	leaq	0xe8ce(%r12), %rbx
    000002d7: 	jmp	.Ltmp487 # Offset: 727
.Ltmp485:
    000002dc: 	callq	__stack_chk_fail@PLT # Offset: 732
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_XYZIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_YXZIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 71
  State       : disassembled
  Address     : 0x8770
  Size        : 0x2d1
  MaxSize     : 0x2e0
  Offset      : 0x8770
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_YXZIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB070:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rdi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdx, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rsi, %rbx
    00000017: 	subq	$0x28, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x18(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movq	%rax, start_time(%rip)
    00000037: 	movl	iterations(%rip), %eax
    0000003d: 	testl	%eax, %eax
    0000003f: 	jle	.Ltmp488 # Offset: 63
    00000045: 	leaq	0xea5a(%rbx), %r13
    0000004c: 	leaq	0xeb20(%rbx), %r8
    00000053: 	xorl	%r10d, %r10d
    00000056: 	leaq	0xe8ce(%r12), %rbx
    0000005e: 	leaq	0x1d19c(%r12), %r11
.Ltmp492:
    00000066: 	movq	%rbx, %r9
.Ltmp491:
    00000069: 	movq	%r13, %rsi
    0000006c: 	movq	%r9, %rdi
.Ltmp490:
    0000006f: 	movzbl	-0xe8ce(%rdi), %ecx
    00000076: 	leaq	-0xe994(%rsi), %rax
    0000007d: 	movq	%rdi, %rdx
.Ltmp489:
    00000080: 	addb	(%rax), %cl
    00000082: 	addq	$0xc6, %rax
    00000088: 	addq	$0xe8ce, %rdx
    0000008f: 	movb	%cl, -0xe8ce(%rdx)
    00000095: 	cmpq	%rsi, %rax
    00000098: 	jne	.Ltmp489 # Offset: 152
    0000009a: 	leaq	0x1(%rax), %rsi
    0000009e: 	addq	$0x1, %rdi
    000000a2: 	cmpq	%r8, %rsi
    000000a5: 	jne	.Ltmp490 # Offset: 165
    000000a7: 	addq	$0xc6, %r9
    000000ae: 	cmpq	%r11, %r9
    000000b1: 	jne	.Ltmp491 # Offset: 177
    000000b3: 	addl	$0x1, %r10d
    000000b7: 	cmpl	%r10d, iterations(%rip)
    000000be: 	jg	.Ltmp492 # Offset: 190
.Ltmp504:
    000000c0: 	movq	%rbp, %rdi
    000000c3: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 195
    000000c8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000cf: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000000d6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000dd: 	je	.Ltmp493 # Offset: 221
.Ltmp503:
    000000e3: 	movq	-0x20(%rax), %r12
    000000e7: 	movl	$0x1, %r15d
    000000ed: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r13
    000000f4: 	callq	clock@PLT # Offset: 244
    000000f9: 	pxor	%xmm0, %xmm0
    000000fd: 	movq	%rax, end_time(%rip)
    00000104: 	movq	%r12, %rdi
    00000107: 	subq	start_time(%rip), %rax
    0000010e: 	cvtsi2sd	%rax, %xmm0
    00000113: 	divsd	DATAat0x15758(%rip), %xmm0
    0000011b: 	callq	_Z13record_resultdPKc # Offset: 283
.Ltmp501:
    00000120: 	cvttsd2si	init_value(%rip), %eax
    00000128: 	addl	$0x1, %r15d
    0000012c: 	leaq	0xc6(%rbx), %r14
    00000133: 	movl	%r15d, 0x8(%rsp)
    00000138: 	imull	%r15d, %eax
    0000013c: 	movb	%al, 0xe(%rsp)
.Ltmp500:
    00000140: 	movq	%rbx, (%rsp)
    00000144: 	leaq	-0xc6(%r14), %r12
    0000014b: 	jmp	.Ltmp494 # Offset: 331
.Ltmp498:
    0000014d: 	movsbl	0x43(%r15), %esi
.Ltmp499:
    00000152: 	movq	%rbx, %rdi
    00000155: 	callq	_ZNSo3putEc@PLT # Offset: 341
    0000015a: 	movq	%rax, %rdi
    0000015d: 	callq	_ZNSo5flushEv@PLT # Offset: 349
.Ltmp496:
    00000162: 	addq	$0x1, %r12
    00000166: 	cmpq	%r12, %r14
    00000169: 	je	.Ltmp495 # Offset: 361
.Ltmp494:
    0000016f: 	movzbl	(%r12), %ecx
    00000174: 	movzbl	0xe(%rsp), %ebx
    00000179: 	cmpb	%cl, %bl
    0000017b: 	movb	%cl, 0xf(%rsp)
    0000017f: 	je	.Ltmp496 # Offset: 383
    00000181: 	movl	$0x5, %edx
    00000186: 	leaq	DATAat0x15182(%rip), %rsi
    0000018d: 	movq	%r13, %rdi
    00000190: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 400
    00000195: 	movq	0x8(%rbp), %rdx
    00000199: 	movq	(%rbp), %rsi
    0000019d: 	movq	%r13, %rdi
    000001a0: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 416
    000001a5: 	movl	$0x12, %edx
    000001aa: 	leaq	DATAat0x15188(%rip), %rsi
    000001b1: 	movq	%rax, %rdi
    000001b4: 	movq	%rax, %r15
    000001b7: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 439
    000001bc: 	movb	%bl, 0x17(%rsp)
    000001c0: 	leaq	0x17(%rsp), %rbx
    000001c5: 	movq	%r15, %rdi
    000001c8: 	movq	%rbx, %rsi
    000001cb: 	movl	$0x1, %edx
    000001d0: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 464
    000001d5: 	movl	$0x5, %edx
    000001da: 	leaq	DATAat0x1519b(%rip), %rsi
    000001e1: 	movq	%rax, %rdi
    000001e4: 	movq	%rax, %r15
    000001e7: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 487
    000001ec: 	movzbl	0xf(%rsp), %ecx
    000001f1: 	movq	%rbx, %rsi
    000001f4: 	movq	%r15, %rdi
    000001f7: 	movl	$0x1, %edx
    000001fc: 	movb	%cl, 0x17(%rsp)
    00000200: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 512
    00000205: 	movq	%rax, %rbx
    00000208: 	movq	(%rax), %rax
    0000020b: 	movq	-0x18(%rax), %rax
    0000020f: 	movq	0xf0(%rbx,%rax), %r15
    00000217: 	testq	%r15, %r15
    0000021a: 	je	.Ltmp497 # Offset: 538
    0000021c: 	cmpb	$0x0, 0x38(%r15)
    00000221: 	jne	.Ltmp498 # Offset: 545
    00000227: 	movq	%r15, %rdi
    0000022a: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 554
    0000022f: 	movq	(%r15), %rax
    00000232: 	movl	$0xa, %esi
    00000237: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    0000023e: 	movq	0x30(%rax), %rax
    00000242: 	cmpq	%rdx, %rax
    00000245: 	je	.Ltmp499 # Offset: 581
    0000024b: 	movq	%r15, %rdi
    0000024e: 	callq	*%rax # Offset: 590
    00000250: 	movsbl	%al, %esi
    00000253: 	jmp	.Ltmp499 # Offset: 595
.Ltmp497:
    00000258: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 600
.Ltmp495:
    0000025d: 	movq	(%rsp), %rbx
    00000261: 	addq	$0xc6, %r14
    00000268: 	leaq	0xe994(%rbx), %rax
    0000026f: 	cmpq	%r14, %rax
    00000272: 	jne	.Ltmp500 # Offset: 626
    00000278: 	movl	0x8(%rsp), %r15d
    0000027d: 	addq	$0xe8ce, %rbx
    00000284: 	cmpl	$0x12f, %r15d
    0000028b: 	jne	.Ltmp501 # Offset: 651
    00000291: 	movq	0x18(%rsp), %rax
    00000296: 	subq	%fs:0x28, %rax
    0000029f: 	jne	.Ltmp502 # Offset: 671
    000002a1: 	addq	$0x28, %rsp
    000002a5: 	popq	%rbx
    000002a6: 	popq	%rbp
    000002a7: 	popq	%r12
    000002a9: 	popq	%r13
    000002ab: 	popq	%r14
    000002ad: 	popq	%r15
    000002af: 	retq # Offset: 687
.Ltmp493:
    000002b0: 	movq	-0x8(%rdx), %rax
    000002b4: 	addq	$0x200, %rax
    000002ba: 	jmp	.Ltmp503 # Offset: 698
.Ltmp488:
    000002bf: 	leaq	0xe8ce(%r12), %rbx
    000002c7: 	jmp	.Ltmp504 # Offset: 711
.Ltmp502:
    000002cc: 	callq	__stack_chk_fail@PLT # Offset: 716
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_YXZIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_YZXIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 72
  State       : disassembled
  Address     : 0x8a50
  Size        : 0x2d1
  MaxSize     : 0x2e0
  Offset      : 0x8a50
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_YZXIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB071:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rdi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdx, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rsi, %rbx
    00000017: 	subq	$0x28, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x18(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movq	%rax, start_time(%rip)
    00000037: 	movl	iterations(%rip), %eax
    0000003d: 	testl	%eax, %eax
    0000003f: 	jle	.Ltmp505 # Offset: 63
    00000045: 	leaq	0xea5a(%rbx), %r13
    0000004c: 	leaq	0xeb20(%rbx), %r8
    00000053: 	xorl	%r10d, %r10d
    00000056: 	leaq	0xe8ce(%r12), %rbx
    0000005e: 	leaq	0x1d19c(%r12), %r11
.Ltmp509:
    00000066: 	movq	%rbx, %r9
.Ltmp508:
    00000069: 	movq	%r13, %rsi
    0000006c: 	movq	%r9, %rdi
.Ltmp507:
    0000006f: 	movzbl	-0xe8ce(%rdi), %ecx
    00000076: 	leaq	-0xe994(%rsi), %rax
    0000007d: 	movq	%rdi, %rdx
.Ltmp506:
    00000080: 	addb	(%rax), %cl
    00000082: 	addq	$0xc6, %rax
    00000088: 	addq	$0xe8ce, %rdx
    0000008f: 	movb	%cl, -0xe8ce(%rdx)
    00000095: 	cmpq	%rsi, %rax
    00000098: 	jne	.Ltmp506 # Offset: 152
    0000009a: 	leaq	0x1(%rax), %rsi
    0000009e: 	addq	$0x1, %rdi
    000000a2: 	cmpq	%r8, %rsi
    000000a5: 	jne	.Ltmp507 # Offset: 165
    000000a7: 	addq	$0xc6, %r9
    000000ae: 	cmpq	%r11, %r9
    000000b1: 	jne	.Ltmp508 # Offset: 177
    000000b3: 	addl	$0x1, %r10d
    000000b7: 	cmpl	%r10d, iterations(%rip)
    000000be: 	jg	.Ltmp509 # Offset: 190
.Ltmp521:
    000000c0: 	movq	%rbp, %rdi
    000000c3: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 195
    000000c8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000cf: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000000d6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000dd: 	je	.Ltmp510 # Offset: 221
.Ltmp520:
    000000e3: 	movq	-0x20(%rax), %r12
    000000e7: 	movl	$0x1, %r15d
    000000ed: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r13
    000000f4: 	callq	clock@PLT # Offset: 244
    000000f9: 	pxor	%xmm0, %xmm0
    000000fd: 	movq	%rax, end_time(%rip)
    00000104: 	movq	%r12, %rdi
    00000107: 	subq	start_time(%rip), %rax
    0000010e: 	cvtsi2sd	%rax, %xmm0
    00000113: 	divsd	DATAat0x15758(%rip), %xmm0
    0000011b: 	callq	_Z13record_resultdPKc # Offset: 283
.Ltmp518:
    00000120: 	cvttsd2si	init_value(%rip), %eax
    00000128: 	addl	$0x1, %r15d
    0000012c: 	leaq	0xc6(%rbx), %r14
    00000133: 	movl	%r15d, 0x8(%rsp)
    00000138: 	imull	%r15d, %eax
    0000013c: 	movb	%al, 0xe(%rsp)
.Ltmp517:
    00000140: 	movq	%rbx, (%rsp)
    00000144: 	leaq	-0xc6(%r14), %r12
    0000014b: 	jmp	.Ltmp511 # Offset: 331
.Ltmp515:
    0000014d: 	movsbl	0x43(%r15), %esi
.Ltmp516:
    00000152: 	movq	%rbx, %rdi
    00000155: 	callq	_ZNSo3putEc@PLT # Offset: 341
    0000015a: 	movq	%rax, %rdi
    0000015d: 	callq	_ZNSo5flushEv@PLT # Offset: 349
.Ltmp513:
    00000162: 	addq	$0x1, %r12
    00000166: 	cmpq	%r12, %r14
    00000169: 	je	.Ltmp512 # Offset: 361
.Ltmp511:
    0000016f: 	movzbl	(%r12), %ecx
    00000174: 	movzbl	0xe(%rsp), %ebx
    00000179: 	cmpb	%cl, %bl
    0000017b: 	movb	%cl, 0xf(%rsp)
    0000017f: 	je	.Ltmp513 # Offset: 383
    00000181: 	movl	$0x5, %edx
    00000186: 	leaq	DATAat0x15182(%rip), %rsi
    0000018d: 	movq	%r13, %rdi
    00000190: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 400
    00000195: 	movq	0x8(%rbp), %rdx
    00000199: 	movq	(%rbp), %rsi
    0000019d: 	movq	%r13, %rdi
    000001a0: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 416
    000001a5: 	movl	$0x12, %edx
    000001aa: 	leaq	DATAat0x15188(%rip), %rsi
    000001b1: 	movq	%rax, %rdi
    000001b4: 	movq	%rax, %r15
    000001b7: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 439
    000001bc: 	movb	%bl, 0x17(%rsp)
    000001c0: 	leaq	0x17(%rsp), %rbx
    000001c5: 	movq	%r15, %rdi
    000001c8: 	movq	%rbx, %rsi
    000001cb: 	movl	$0x1, %edx
    000001d0: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 464
    000001d5: 	movl	$0x5, %edx
    000001da: 	leaq	DATAat0x1519b(%rip), %rsi
    000001e1: 	movq	%rax, %rdi
    000001e4: 	movq	%rax, %r15
    000001e7: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 487
    000001ec: 	movzbl	0xf(%rsp), %ecx
    000001f1: 	movq	%rbx, %rsi
    000001f4: 	movq	%r15, %rdi
    000001f7: 	movl	$0x1, %edx
    000001fc: 	movb	%cl, 0x17(%rsp)
    00000200: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 512
    00000205: 	movq	%rax, %rbx
    00000208: 	movq	(%rax), %rax
    0000020b: 	movq	-0x18(%rax), %rax
    0000020f: 	movq	0xf0(%rbx,%rax), %r15
    00000217: 	testq	%r15, %r15
    0000021a: 	je	.Ltmp514 # Offset: 538
    0000021c: 	cmpb	$0x0, 0x38(%r15)
    00000221: 	jne	.Ltmp515 # Offset: 545
    00000227: 	movq	%r15, %rdi
    0000022a: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 554
    0000022f: 	movq	(%r15), %rax
    00000232: 	movl	$0xa, %esi
    00000237: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    0000023e: 	movq	0x30(%rax), %rax
    00000242: 	cmpq	%rdx, %rax
    00000245: 	je	.Ltmp516 # Offset: 581
    0000024b: 	movq	%r15, %rdi
    0000024e: 	callq	*%rax # Offset: 590
    00000250: 	movsbl	%al, %esi
    00000253: 	jmp	.Ltmp516 # Offset: 595
.Ltmp514:
    00000258: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 600
.Ltmp512:
    0000025d: 	movq	(%rsp), %rbx
    00000261: 	addq	$0xc6, %r14
    00000268: 	leaq	0xe994(%rbx), %rax
    0000026f: 	cmpq	%r14, %rax
    00000272: 	jne	.Ltmp517 # Offset: 626
    00000278: 	movl	0x8(%rsp), %r15d
    0000027d: 	addq	$0xe8ce, %rbx
    00000284: 	cmpl	$0x12f, %r15d
    0000028b: 	jne	.Ltmp518 # Offset: 651
    00000291: 	movq	0x18(%rsp), %rax
    00000296: 	subq	%fs:0x28, %rax
    0000029f: 	jne	.Ltmp519 # Offset: 671
    000002a1: 	addq	$0x28, %rsp
    000002a5: 	popq	%rbx
    000002a6: 	popq	%rbp
    000002a7: 	popq	%r12
    000002a9: 	popq	%r13
    000002ab: 	popq	%r14
    000002ad: 	popq	%r15
    000002af: 	retq # Offset: 687
.Ltmp510:
    000002b0: 	movq	-0x8(%rdx), %rax
    000002b4: 	addq	$0x200, %rax
    000002ba: 	jmp	.Ltmp520 # Offset: 698
.Ltmp505:
    000002bf: 	leaq	0xe8ce(%r12), %rbx
    000002c7: 	jmp	.Ltmp521 # Offset: 711
.Ltmp519:
    000002cc: 	callq	__stack_chk_fail@PLT # Offset: 716
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_YZXIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_ZXYIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 73
  State       : disassembled
  Address     : 0x8d30
  Size        : 0x775
  MaxSize     : 0x780
  Offset      : 0x8d30
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_ZXYIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB072:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movq	%rsi, %rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x188, %rsp
    0000001b: 	movq	%rdx, 0x28(%rsp)
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x178(%rsp)
    00000031: 	xorl	%eax, %eax
    00000033: 	callq	clock@PLT # Offset: 51
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	movl	iterations(%rip), %eax
    00000045: 	testl	%eax, %eax
    00000047: 	jle	.Ltmp522 # Offset: 71
    0000004d: 	leaq	0xe8ce(%rbx), %rax
    00000054: 	movl	$0x0, 0x1c(%rsp)
    0000005c: 	movq	%rax, 0x20(%rsp)
    00000061: 	leaq	0xc6(%rbp), %rax
    00000068: 	movq	%rax, 0x38(%rsp)
    0000006d: 	leaq	0x1138bd2(%rbx), %rax
    00000074: 	movq	%rax, 0x30(%rsp)
.Ltmp528:
    00000079: 	movq	0x20(%rsp), %r10
    0000007e: 	movq	0x38(%rsp), %r15
.Ltmp527:
    00000083: 	leaq	-0xe8ce(%r10), %r11
    0000008a: 	leaq	-0xa0e(%r10), %r8
    00000091: 	movq	%r15, %r9
    00000094: 	movq	%r10, %r12
    00000097: 	movl	$0xe8ce, %edi
    0000009c: 	leaq	-0xe8ce(%r15), %r13
    000000a3: 	leaq	-0xe8cd(%r15), %r14
.Ltmp526:
    000000aa: 	leaq	(%r13,%rdi), %rdx
    000000af: 	leaq	0xf217(%r8), %rax
    000000b6: 	cmpq	%rax, %rdx
    000000b9: 	jae	.Ltmp523 # Offset: 185
    000000bb: 	leaq	(%r14,%rdi), %rax
    000000bf: 	cmpq	%rax, %r12
    000000c2: 	jb	.Ltmp524 # Offset: 194
.Ltmp523:
    000000c8: 	movzbl	(%r9), %eax
    000000cc: 	leaq	-0xe8ce(%r12), %rcx
    000000d4: 	movq	%r12, %rsi
    000000d7: 	movd	%eax, %xmm1
    000000db: 	punpcklbw	%xmm1, %xmm1
    000000df: 	punpcklwd	%xmm1, %xmm1
    000000e3: 	pshufd	$0x0, %xmm1, %xmm1
    000000e8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp525:
    000000f0: 	movzbl	0x56a(%rcx), %edx
    000000f7: 	movzbl	(%rcx), %ebp
    000000fa: 	addq	$0xc60, %rcx
    00000101: 	addq	$0xc60, %rsi
    00000108: 	movzbl	-0x7bc(%rcx), %eax
    0000010f: 	movzbl	-0x18c(%rcx), %ebx
    00000116: 	shlq	$0x8, %rdx
    0000011a: 	orq	%rax, %rdx
    0000011d: 	movzbl	-0x882(%rcx), %eax
    00000124: 	shlq	$0x8, %rdx
    00000128: 	orq	%rax, %rdx
    0000012b: 	movzbl	-0x948(%rcx), %eax
    00000132: 	shlq	$0x8, %rdx
    00000136: 	orq	%rax, %rdx
    00000139: 	movzbl	-0xa0e(%rcx), %eax
    00000140: 	shlq	$0x8, %rdx
    00000144: 	orq	%rax, %rdx
    00000147: 	movzbl	-0xad4(%rcx), %eax
    0000014e: 	shlq	$0x8, %rdx
    00000152: 	orq	%rax, %rdx
    00000155: 	movzbl	-0xb9a(%rcx), %eax
    0000015c: 	shlq	$0x8, %rdx
    00000160: 	orq	%rax, %rdx
    00000163: 	movzbl	-0xc6(%rcx), %eax
    0000016a: 	shlq	$0x8, %rdx
    0000016e: 	shlq	$0x8, %rax
    00000172: 	orq	%rbp, %rdx
    00000175: 	orq	%rbx, %rax
    00000178: 	movzbl	-0x252(%rcx), %ebx
    0000017f: 	movq	%rdx, (%rsp)
    00000183: 	shlq	$0x8, %rax
    00000187: 	orq	%rbx, %rax
    0000018a: 	movzbl	-0x318(%rcx), %ebx
    00000191: 	shlq	$0x8, %rax
    00000195: 	orq	%rbx, %rax
    00000198: 	movzbl	-0x3de(%rcx), %ebx
    0000019f: 	shlq	$0x8, %rax
    000001a3: 	orq	%rbx, %rax
    000001a6: 	movzbl	-0x4a4(%rcx), %ebx
    000001ad: 	shlq	$0x8, %rax
    000001b1: 	orq	%rbx, %rax
    000001b4: 	movzbl	-0x56a(%rcx), %ebx
    000001bb: 	shlq	$0x8, %rax
    000001bf: 	orq	%rbx, %rax
    000001c2: 	movzbl	-0x630(%rcx), %ebx
    000001c9: 	shlq	$0x8, %rax
    000001cd: 	orq	%rbx, %rax
    000001d0: 	movq	%rax, 0x8(%rsp)
    000001d5: 	movdqa	(%rsp), %xmm0
    000001da: 	paddb	%xmm1, %xmm0
    000001de: 	movd	%xmm0, %eax
    000001e2: 	movb	%al, -0xc60(%rsi)
    000001e8: 	movaps	%xmm0, 0x120(%rsp)
    000001f0: 	movzbl	0x121(%rsp), %eax
    000001f8: 	movb	%al, -0xb9a(%rsi)
    000001fe: 	movaps	%xmm0, 0x110(%rsp)
    00000206: 	movzbl	0x112(%rsp), %eax
    0000020e: 	movb	%al, -0xad4(%rsi)
    00000214: 	movaps	%xmm0, 0x100(%rsp)
    0000021c: 	movzbl	0x103(%rsp), %eax
    00000224: 	movb	%al, -0xa0e(%rsi)
    0000022a: 	movaps	%xmm0, 0xf0(%rsp)
    00000232: 	movzbl	0xf4(%rsp), %eax
    0000023a: 	movb	%al, -0x948(%rsi)
    00000240: 	movaps	%xmm0, 0xe0(%rsp)
    00000248: 	movzbl	0xe5(%rsp), %eax
    00000250: 	movb	%al, -0x882(%rsi)
    00000256: 	movaps	%xmm0, 0xd0(%rsp)
    0000025e: 	movzbl	0xd6(%rsp), %eax
    00000266: 	movb	%al, -0x7bc(%rsi)
    0000026c: 	movaps	%xmm0, 0xc0(%rsp)
    00000274: 	movzbl	0xc7(%rsp), %eax
    0000027c: 	movb	%al, -0x6f6(%rsi)
    00000282: 	movaps	%xmm0, 0xb0(%rsp)
    0000028a: 	movzbl	0xb8(%rsp), %eax
    00000292: 	movb	%al, -0x630(%rsi)
    00000298: 	movaps	%xmm0, 0xa0(%rsp)
    000002a0: 	movzbl	0xa9(%rsp), %eax
    000002a8: 	movb	%al, -0x56a(%rsi)
    000002ae: 	movaps	%xmm0, 0x90(%rsp)
    000002b6: 	movzbl	0x9a(%rsp), %eax
    000002be: 	movb	%al, -0x4a4(%rsi)
    000002c4: 	movaps	%xmm0, 0x80(%rsp)
    000002cc: 	movzbl	0x8b(%rsp), %eax
    000002d4: 	movb	%al, -0x3de(%rsi)
    000002da: 	movaps	%xmm0, 0x70(%rsp)
    000002df: 	movzbl	0x7c(%rsp), %eax
    000002e4: 	movb	%al, -0x318(%rsi)
    000002ea: 	movaps	%xmm0, 0x60(%rsp)
    000002ef: 	movzbl	0x6d(%rsp), %eax
    000002f4: 	movb	%al, -0x252(%rsi)
    000002fa: 	movaps	%xmm0, 0x50(%rsp)
    000002ff: 	movzbl	0x5e(%rsp), %eax
    00000304: 	movb	%al, -0x18c(%rsi)
    0000030a: 	movaps	%xmm0, 0x40(%rsp)
    0000030f: 	movzbl	0x4f(%rsp), %eax
    00000314: 	movb	%al, -0xc6(%rsi)
    0000031a: 	cmpq	%r8, %rcx
    0000031d: 	jne	.Ltmp525 # Offset: 797
    00000323: 	movzbl	0x56a(%r8), %eax
    0000032b: 	movzbl	0x4a4(%r8), %edx
    00000333: 	movzbl	(%r9), %ecx
    00000337: 	shlq	$0x8, %rax
    0000033b: 	orq	%rdx, %rax
    0000033e: 	movzbl	0x3de(%r8), %edx
    00000346: 	shlq	$0x8, %rax
    0000034a: 	orq	%rdx, %rax
    0000034d: 	movzbl	0x318(%r8), %edx
    00000355: 	shlq	$0x8, %rax
    00000359: 	orq	%rdx, %rax
    0000035c: 	movzbl	0x252(%r8), %edx
    00000364: 	shlq	$0x8, %rax
    00000368: 	orq	%rdx, %rax
    0000036b: 	movzbl	0x18c(%r8), %edx
    00000373: 	shlq	$0x8, %rax
    00000377: 	orq	%rdx, %rax
    0000037a: 	movzbl	0xc6(%r8), %edx
    00000382: 	shlq	$0x8, %rax
    00000386: 	orq	%rdx, %rax
    00000389: 	movzbl	(%r8), %edx
    0000038d: 	shlq	$0x8, %rax
    00000391: 	orq	%rdx, %rax
    00000394: 	movl	%ecx, %edx
    00000396: 	shll	$0x8, %edx
    00000399: 	movq	%rax, %xmm2
    0000039e: 	orl	%ecx, %edx
    000003a0: 	movd	%edx, %xmm3
    000003a4: 	pshuflw	$0x0, %xmm3, %xmm0
    000003a9: 	paddb	%xmm0, %xmm2
    000003ad: 	movq	%xmm2, %rax
    000003b2: 	movq	%xmm2, %rdx
    000003b7: 	movq	%xmm2, 0x168(%rsp)
    000003c0: 	movzbl	%ah, %ebx
    000003c3: 	shrq	$0x10, %rdx
    000003c7: 	movb	%al, 0xe8ce(%r8)
    000003ce: 	movq	%xmm2, 0x160(%rsp)
    000003d7: 	movb	%bl, 0xe994(%r8)
    000003de: 	movq	%xmm2, %rbx
    000003e3: 	movq	%xmm2, 0x158(%rsp)
    000003ec: 	shrq	$0x38, %rbx
    000003f0: 	movb	%dl, 0xea5a(%r8)
    000003f7: 	movq	%xmm2, %rdx
    000003fc: 	movq	%xmm2, 0x150(%rsp)
    00000405: 	shrq	$0x18, %rdx
    00000409: 	movb	%dl, 0xeb20(%r8)
    00000410: 	movq	%xmm2, %rdx
    00000415: 	movq	%xmm2, 0x148(%rsp)
    0000041e: 	shrq	$0x20, %rdx
    00000422: 	movb	%dl, 0xebe6(%r8)
    00000429: 	movq	%xmm2, %rdx
    0000042e: 	movq	%xmm2, 0x140(%rsp)
    00000437: 	shrq	$0x28, %rdx
    0000043b: 	movb	%dl, 0xecac(%r8)
    00000442: 	movq	%xmm2, %rdx
    00000447: 	movq	%xmm2, 0x138(%rsp)
    00000450: 	shrq	$0x30, %rdx
    00000454: 	movb	%dl, 0xed72(%r8)
    0000045b: 	movq	%xmm2, 0x130(%rsp)
    00000464: 	movb	%bl, 0xee38(%r8)
    0000046b: 	movzbl	(%r9), %eax
    0000046f: 	addb	-0x3de(%r11,%rdi), %al
    00000477: 	movb	%al, -0x3de(%r10,%rdi)
    0000047f: 	movzbl	-0x318(%r11,%rdi), %eax
    00000488: 	addb	(%r9), %al
    0000048b: 	movb	%al, -0x318(%r10,%rdi)
    00000493: 	movzbl	-0x252(%r11,%rdi), %eax
    0000049c: 	addb	(%r9), %al
    0000049f: 	movb	%al, -0x252(%r10,%rdi)
    000004a7: 	movzbl	(%r9), %eax
    000004ab: 	addb	-0x18c(%r11,%rdi), %al
    000004b3: 	movb	%al, -0x18c(%r10,%rdi)
    000004bb: 	movzbl	(%r9), %eax
    000004bf: 	addb	-0xc6(%r11,%rdi), %al
    000004c7: 	movb	%al, -0xc6(%r10,%rdi)
.Ltmp537:
    000004cf: 	addq	$0x1, %rdi
    000004d3: 	addq	$0x1, %r12
    000004d7: 	addq	$0x1, %r9
    000004db: 	addq	$0x1, %r8
    000004df: 	cmpq	$0xe994, %rdi
    000004e6: 	jne	.Ltmp526 # Offset: 1254
    000004ec: 	addq	$0xe8ce, %r10
    000004f3: 	addq	$0xc6, %r15
    000004fa: 	cmpq	0x30(%rsp), %r10
    000004ff: 	jne	.Ltmp527 # Offset: 1279
    00000505: 	addl	$0x1, 0x1c(%rsp)
    0000050a: 	movl	0x1c(%rsp), %eax
    0000050e: 	cmpl	%eax, iterations(%rip)
    00000514: 	jg	.Ltmp528 # Offset: 1300
.Ltmp542:
    0000051a: 	movq	0x28(%rsp), %rdi
    0000051f: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1311
    00000524: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000052b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000532: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000539: 	je	.Ltmp529 # Offset: 1337
.Ltmp541:
    0000053f: 	movq	-0x20(%rax), %rbp
    00000543: 	movl	$0x1, %r12d
    00000549: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r13
    00000550: 	callq	clock@PLT # Offset: 1360
    00000555: 	pxor	%xmm0, %xmm0
    00000559: 	movq	%rax, end_time(%rip)
    00000560: 	movq	%rbp, %rdi
    00000563: 	subq	start_time(%rip), %rax
    0000056a: 	cvtsi2sd	%rax, %xmm0
    0000056f: 	divsd	DATAat0x15758(%rip), %xmm0
    00000577: 	callq	_Z13record_resultdPKc # Offset: 1399
    0000057c: 	movq	0x20(%rsp), %rbx
.Ltmp539:
    00000581: 	cvttsd2si	init_value(%rip), %eax
    00000589: 	addl	$0x1, %r12d
    0000058d: 	leaq	0xc6(%rbx), %rbp
    00000594: 	movl	%r12d, 0x1c(%rsp)
    00000599: 	imull	%r12d, %eax
    0000059d: 	movb	%al, (%rsp)
.Ltmp538:
    000005a0: 	leaq	-0xc6(%rbp), %r14
    000005a7: 	leaq	DATAat0x1519b(%rip), %r15
    000005ae: 	jmp	.Ltmp530 # Offset: 1454
.Ltmp534:
    000005b0: 	movsbl	0x43(%rdi), %esi
.Ltmp535:
    000005b4: 	movq	%r12, %rdi
    000005b7: 	callq	_ZNSo3putEc@PLT # Offset: 1463
    000005bc: 	movq	%rax, %rdi
    000005bf: 	callq	_ZNSo5flushEv@PLT # Offset: 1471
.Ltmp532:
    000005c4: 	addq	$0x1, %r14
    000005c8: 	cmpq	%r14, %rbp
    000005cb: 	je	.Ltmp531 # Offset: 1483
.Ltmp530:
    000005d1: 	movzbl	(%r14), %ecx
    000005d5: 	cmpb	%cl, (%rsp)
    000005d8: 	movb	%cl, 0x30(%rsp)
    000005dc: 	je	.Ltmp532 # Offset: 1500
    000005de: 	movl	$0x5, %edx
    000005e3: 	leaq	DATAat0x15182(%rip), %rsi
    000005ea: 	movq	%r13, %rdi
    000005ed: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1517
    000005f2: 	movq	0x28(%rsp), %rdi
    000005f7: 	movq	0x8(%rdi), %rdx
    000005fb: 	movq	(%rdi), %rsi
    000005fe: 	movq	%r13, %rdi
    00000601: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1537
    00000606: 	movl	$0x12, %edx
    0000060b: 	leaq	DATAat0x15188(%rip), %rsi
    00000612: 	movq	%rax, %rdi
    00000615: 	movq	%rax, %r12
    00000618: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1560
    0000061d: 	leaq	0x177(%rsp), %r8
    00000625: 	movzbl	(%rsp), %eax
    00000629: 	movq	%r12, %rdi
    0000062c: 	movq	%r8, %rsi
    0000062f: 	movl	$0x1, %edx
    00000634: 	movq	%r8, 0x20(%rsp)
    00000639: 	movb	%al, 0x177(%rsp)
    00000640: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1600
    00000645: 	movl	$0x5, %edx
    0000064a: 	movq	%r15, %rsi
    0000064d: 	movq	%rax, %rdi
    00000650: 	movq	%rax, %r12
    00000653: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1619
    00000658: 	movzbl	0x30(%rsp), %ecx
    0000065d: 	movq	0x20(%rsp), %rsi
    00000662: 	movq	%r12, %rdi
    00000665: 	movl	$0x1, %edx
    0000066a: 	movb	%cl, 0x177(%rsp)
    00000671: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1649
    00000676: 	movq	%rax, %r12
    00000679: 	movq	(%rax), %rax
    0000067c: 	movq	-0x18(%rax), %rax
    00000680: 	movq	0xf0(%r12,%rax), %rdi
    00000688: 	testq	%rdi, %rdi
    0000068b: 	je	.Ltmp533 # Offset: 1675
    0000068d: 	cmpb	$0x0, 0x38(%rdi)
    00000691: 	jne	.Ltmp534 # Offset: 1681
    00000697: 	movq	%rdi, 0x20(%rsp)
    0000069c: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 1692
    000006a1: 	movq	0x20(%rsp), %rdi
    000006a6: 	movl	$0xa, %esi
    000006ab: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000006b2: 	movq	(%rdi), %rax
    000006b5: 	movq	0x30(%rax), %rax
    000006b9: 	cmpq	%rdx, %rax
    000006bc: 	je	.Ltmp535 # Offset: 1724
    000006c2: 	callq	*%rax # Offset: 1730
    000006c4: 	movsbl	%al, %esi
    000006c7: 	jmp	.Ltmp535 # Offset: 1735
.Ltmp524:
    000006cc: 	leaq	-0xe8ce(%rdi), %rax
    000006d3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp536:
    000006d8: 	movzbl	(%r11,%rax), %edx
    000006dd: 	addb	(%r9), %dl
    000006e0: 	movb	%dl, (%r10,%rax)
    000006e4: 	addq	$0xc6, %rax
    000006ea: 	cmpq	%rdi, %rax
    000006ed: 	jne	.Ltmp536 # Offset: 1773
    000006ef: 	jmp	.Ltmp537 # Offset: 1775
.Ltmp533:
    000006f4: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 1780
.Ltmp531:
    000006f9: 	addq	$0xc6, %rbp
    00000700: 	leaq	0xe994(%rbx), %rax
    00000707: 	cmpq	%rax, %rbp
    0000070a: 	jne	.Ltmp538 # Offset: 1802
    00000710: 	movl	0x1c(%rsp), %r12d
    00000715: 	addq	$0xe8ce, %rbx
    0000071c: 	cmpl	$0x12f, %r12d
    00000723: 	jne	.Ltmp539 # Offset: 1827
    00000729: 	movq	0x178(%rsp), %rax
    00000731: 	subq	%fs:0x28, %rax
    0000073a: 	jne	.Ltmp540 # Offset: 1850
    0000073c: 	addq	$0x188, %rsp
    00000743: 	popq	%rbx
    00000744: 	popq	%rbp
    00000745: 	popq	%r12
    00000747: 	popq	%r13
    00000749: 	popq	%r14
    0000074b: 	popq	%r15
    0000074d: 	retq # Offset: 1869
    0000074e: 	nop # Size: 2
.Ltmp529:
    00000750: 	movq	-0x8(%rdx), %rax
    00000754: 	addq	$0x200, %rax
    0000075a: 	jmp	.Ltmp541 # Offset: 1882
.Ltmp522:
    0000075f: 	leaq	0xe8ce(%rbx), %rax
    00000766: 	movq	%rax, 0x20(%rsp)
    0000076b: 	jmp	.Ltmp542 # Offset: 1899
.Ltmp540:
    00000770: 	callq	__stack_chk_fail@PLT # Offset: 1904
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_ZXYIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16test_loop_3D_ZYXIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 74
  State       : disassembled
  Address     : 0x94b0
  Size        : 0x494
  MaxSize     : 0x4a0
  Offset      : 0x94b0
  Section     : .text
  Orc Section : .local.text._Z16test_loop_3D_ZYXIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB073:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rsi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdx, %rbp
    00000016: 	pushq	%rbx
    00000017: 	leaq	0xe8ce(%r12), %rbx
    0000001f: 	subq	$0x28, %rsp
    00000023: 	movq	%fs:0x28, %rax
    0000002c: 	movq	%rax, 0x18(%rsp)
    00000031: 	xorl	%eax, %eax
    00000033: 	callq	clock@PLT # Offset: 51
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	movl	iterations(%rip), %eax
    00000045: 	testl	%eax, %eax
    00000047: 	jle	.Ltmp543 # Offset: 71
    0000004d: 	leaq	0xe8ce(%r12), %rbx
    00000055: 	xorl	%r11d, %r11d
    00000058: 	addq	$0xc6, %r13
    0000005f: 	addq	$0x1138bd2, %r12
.Ltmp550:
    00000066: 	movq	%rbx, %r9
    00000069: 	movq	%r13, %rcx
.Ltmp549:
    0000006c: 	leaq	-0xe8ce(%r9), %rsi
    00000073: 	movq	%r9, %rdi
    00000076: 	leaq	0x1(%rcx), %r10
    0000007a: 	movq	%r9, %r8
    0000007d: 	jmp	.Ltmp544 # Offset: 125
.Ltmp546:
    00000082: 	movdqu	-0xe8ce(%r8), %xmm0
    0000008b: 	movdqu	(%rcx), %xmm1
    0000008f: 	paddb	%xmm1, %xmm0
    00000093: 	movups	%xmm0, (%r8)
    00000097: 	movdqu	0x10(%rcx), %xmm2
    0000009c: 	movdqu	-0xe8be(%r8), %xmm0
    000000a5: 	paddb	%xmm2, %xmm0
    000000a9: 	movups	%xmm0, 0x10(%r8)
    000000ae: 	movdqu	0x20(%rcx), %xmm3
    000000b3: 	movdqu	-0xe8ae(%r8), %xmm0
    000000bc: 	paddb	%xmm3, %xmm0
    000000c0: 	movups	%xmm0, 0x20(%r8)
    000000c5: 	movdqu	0x30(%rcx), %xmm4
    000000ca: 	movdqu	-0xe89e(%r8), %xmm0
    000000d3: 	paddb	%xmm4, %xmm0
    000000d7: 	movups	%xmm0, 0x30(%r8)
    000000dc: 	movdqu	0x40(%rcx), %xmm5
    000000e1: 	movdqu	-0xe88e(%r8), %xmm0
    000000ea: 	paddb	%xmm5, %xmm0
    000000ee: 	movups	%xmm0, 0x40(%r8)
    000000f3: 	movdqu	0x50(%rcx), %xmm6
    000000f8: 	movdqu	-0xe87e(%r8), %xmm0
    00000101: 	paddb	%xmm6, %xmm0
    00000105: 	movups	%xmm0, 0x50(%r8)
    0000010a: 	movdqu	0x60(%rcx), %xmm7
    0000010f: 	movdqu	-0xe86e(%r8), %xmm0
    00000118: 	paddb	%xmm7, %xmm0
    0000011c: 	movups	%xmm0, 0x60(%r8)
    00000121: 	movdqu	0x70(%rcx), %xmm1
    00000126: 	movdqu	-0xe85e(%r8), %xmm0
    0000012f: 	paddb	%xmm1, %xmm0
    00000133: 	movups	%xmm0, 0x70(%r8)
    00000138: 	movdqu	0x80(%rcx), %xmm2
    00000140: 	movdqu	-0xe84e(%r8), %xmm0
    00000149: 	paddb	%xmm2, %xmm0
    0000014d: 	movups	%xmm0, 0x80(%r8)
    00000155: 	movdqu	0x90(%rcx), %xmm3
    0000015d: 	movdqu	-0xe83e(%r8), %xmm0
    00000166: 	paddb	%xmm3, %xmm0
    0000016a: 	movups	%xmm0, 0x90(%r8)
    00000172: 	movdqu	0xa0(%rcx), %xmm4
    0000017a: 	movdqu	-0xe82e(%r8), %xmm0
    00000183: 	paddb	%xmm4, %xmm0
    00000187: 	movups	%xmm0, 0xa0(%r8)
    0000018f: 	movdqu	0xb0(%rcx), %xmm5
    00000197: 	movdqu	-0xe81e(%r8), %xmm0
    000001a0: 	paddb	%xmm5, %xmm0
    000001a4: 	movups	%xmm0, 0xb0(%r8)
    000001ac: 	movzbl	0xc0(%rcx), %eax
    000001b3: 	addb	0xc0(%rsi), %al
    000001b9: 	movb	%al, 0xc0(%rdi)
    000001bf: 	movzbl	0xc1(%rcx), %eax
    000001c6: 	addb	0xc1(%rsi), %al
    000001cc: 	movb	%al, 0xc1(%rdi)
    000001d2: 	movzbl	0xc2(%rcx), %eax
    000001d9: 	addb	0xc2(%rsi), %al
    000001df: 	movb	%al, 0xc2(%rdi)
    000001e5: 	movzbl	0xc3(%rcx), %eax
    000001ec: 	addb	0xc3(%rsi), %al
    000001f2: 	movb	%al, 0xc3(%rdi)
    000001f8: 	movzbl	0xc4(%rcx), %eax
    000001ff: 	addb	0xc4(%rsi), %al
    00000205: 	movb	%al, 0xc4(%rdi)
    0000020b: 	movzbl	0xc5(%rsi), %eax
    00000212: 	addb	0xc5(%rcx), %al
    00000218: 	movb	%al, 0xc5(%rdi)
.Ltmp548:
    0000021e: 	addq	$0xc6, %rsi
    00000225: 	addq	$0xc6, %r8
    0000022c: 	addq	$0xc6, %rdi
    00000233: 	cmpq	%r9, %rsi
    00000236: 	je	.Ltmp545 # Offset: 566
.Ltmp544:
    00000238: 	movq	%r8, %rax
    0000023b: 	subq	%r10, %rax
    0000023e: 	cmpq	$0xe, %rax
    00000242: 	ja	.Ltmp546 # Offset: 578
    00000248: 	xorl	%eax, %eax
    0000024a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp547:
    00000250: 	movzbl	(%rsi,%rax), %edx
    00000254: 	addb	(%rcx,%rax), %dl
    00000257: 	movb	%dl, (%rdi,%rax)
    0000025a: 	addq	$0x1, %rax
    0000025e: 	cmpq	$0xc6, %rax
    00000264: 	jne	.Ltmp547 # Offset: 612
    00000266: 	jmp	.Ltmp548 # Offset: 614
.Ltmp545:
    00000268: 	leaq	0xe8ce(%rsi), %r9
    0000026f: 	addq	$0xc6, %rcx
    00000276: 	cmpq	%r9, %r12
    00000279: 	jne	.Ltmp549 # Offset: 633
    0000027f: 	addl	$0x1, %r11d
    00000283: 	cmpl	%r11d, iterations(%rip)
    0000028a: 	jg	.Ltmp550 # Offset: 650
.Ltmp543:
    00000290: 	movq	%rbp, %rdi
    00000293: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 659
    00000298: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000029f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000002a6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002ad: 	je	.Ltmp551 # Offset: 685
.Ltmp561:
    000002b3: 	movq	-0x20(%rax), %r12
    000002b7: 	movl	$0x1, %r15d
    000002bd: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r13
    000002c4: 	callq	clock@PLT # Offset: 708
    000002c9: 	pxor	%xmm0, %xmm0
    000002cd: 	movq	%rax, end_time(%rip)
    000002d4: 	movq	%r12, %rdi
    000002d7: 	subq	start_time(%rip), %rax
    000002de: 	cvtsi2sd	%rax, %xmm0
    000002e3: 	divsd	DATAat0x15758(%rip), %xmm0
    000002eb: 	callq	_Z13record_resultdPKc # Offset: 747
.Ltmp559:
    000002f0: 	cvttsd2si	init_value(%rip), %eax
    000002f8: 	addl	$0x1, %r15d
    000002fc: 	leaq	0xc6(%rbx), %r14
    00000303: 	movl	%r15d, 0x8(%rsp)
    00000308: 	imull	%r15d, %eax
    0000030c: 	movb	%al, 0xe(%rsp)
.Ltmp558:
    00000310: 	movq	%rbx, (%rsp)
    00000314: 	leaq	-0xc6(%r14), %r12
    0000031b: 	jmp	.Ltmp552 # Offset: 795
.Ltmp556:
    0000031d: 	movsbl	0x43(%r15), %esi
.Ltmp557:
    00000322: 	movq	%rbx, %rdi
    00000325: 	callq	_ZNSo3putEc@PLT # Offset: 805
    0000032a: 	movq	%rax, %rdi
    0000032d: 	callq	_ZNSo5flushEv@PLT # Offset: 813
.Ltmp554:
    00000332: 	addq	$0x1, %r12
    00000336: 	cmpq	%r12, %r14
    00000339: 	je	.Ltmp553 # Offset: 825
.Ltmp552:
    0000033f: 	movzbl	(%r12), %ecx
    00000344: 	movzbl	0xe(%rsp), %ebx
    00000349: 	cmpb	%cl, %bl
    0000034b: 	movb	%cl, 0xf(%rsp)
    0000034f: 	je	.Ltmp554 # Offset: 847
    00000351: 	movl	$0x5, %edx
    00000356: 	leaq	DATAat0x15182(%rip), %rsi
    0000035d: 	movq	%r13, %rdi
    00000360: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 864
    00000365: 	movq	0x8(%rbp), %rdx
    00000369: 	movq	(%rbp), %rsi
    0000036d: 	movq	%r13, %rdi
    00000370: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 880
    00000375: 	movl	$0x12, %edx
    0000037a: 	leaq	DATAat0x15188(%rip), %rsi
    00000381: 	movq	%rax, %rdi
    00000384: 	movq	%rax, %r15
    00000387: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 903
    0000038c: 	movb	%bl, 0x17(%rsp)
    00000390: 	leaq	0x17(%rsp), %rbx
    00000395: 	movq	%r15, %rdi
    00000398: 	movq	%rbx, %rsi
    0000039b: 	movl	$0x1, %edx
    000003a0: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 928
    000003a5: 	movl	$0x5, %edx
    000003aa: 	leaq	DATAat0x1519b(%rip), %rsi
    000003b1: 	movq	%rax, %rdi
    000003b4: 	movq	%rax, %r15
    000003b7: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 951
    000003bc: 	movzbl	0xf(%rsp), %ecx
    000003c1: 	movq	%rbx, %rsi
    000003c4: 	movq	%r15, %rdi
    000003c7: 	movl	$0x1, %edx
    000003cc: 	movb	%cl, 0x17(%rsp)
    000003d0: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 976
    000003d5: 	movq	%rax, %rbx
    000003d8: 	movq	(%rax), %rax
    000003db: 	movq	-0x18(%rax), %rax
    000003df: 	movq	0xf0(%rbx,%rax), %r15
    000003e7: 	testq	%r15, %r15
    000003ea: 	je	.Ltmp555 # Offset: 1002
    000003ec: 	cmpb	$0x0, 0x38(%r15)
    000003f1: 	jne	.Ltmp556 # Offset: 1009
    000003f7: 	movq	%r15, %rdi
    000003fa: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 1018
    000003ff: 	movq	(%r15), %rax
    00000402: 	movl	$0xa, %esi
    00000407: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    0000040e: 	movq	0x30(%rax), %rax
    00000412: 	cmpq	%rdx, %rax
    00000415: 	je	.Ltmp557 # Offset: 1045
    0000041b: 	movq	%r15, %rdi
    0000041e: 	callq	*%rax # Offset: 1054
    00000420: 	movsbl	%al, %esi
    00000423: 	jmp	.Ltmp557 # Offset: 1059
.Ltmp555:
    00000428: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 1064
.Ltmp553:
    0000042d: 	movq	(%rsp), %rbx
    00000431: 	addq	$0xc6, %r14
    00000438: 	leaq	0xe994(%rbx), %rax
    0000043f: 	cmpq	%r14, %rax
    00000442: 	jne	.Ltmp558 # Offset: 1090
    00000448: 	movl	0x8(%rsp), %r15d
    0000044d: 	addq	$0xe8ce, %rbx
    00000454: 	cmpl	$0x12f, %r15d
    0000045b: 	jne	.Ltmp559 # Offset: 1115
    00000461: 	movq	0x18(%rsp), %rax
    00000466: 	subq	%fs:0x28, %rax
    0000046f: 	jne	.Ltmp560 # Offset: 1135
    00000471: 	addq	$0x28, %rsp
    00000475: 	popq	%rbx
    00000476: 	popq	%rbp
    00000477: 	popq	%r12
    00000479: 	popq	%r13
    0000047b: 	popq	%r14
    0000047d: 	popq	%r15
    0000047f: 	retq # Offset: 1151
.Ltmp551:
    00000480: 	movq	-0x8(%rdx), %rax
    00000484: 	addq	$0x200, %rax
    0000048a: 	jmp	.Ltmp561 # Offset: 1162
.Ltmp560:
    0000048f: 	callq	__stack_chk_fail@PLT # Offset: 1167
DWARF CFI Instructions:
    <empty>
End of Function "_Z16test_loop_3D_ZYXIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z29test_loop_2D_flat_chan_revCXYIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z29test_loop_2D_flat_chan_revCXYIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z29test_loop_2D_flat_chan_revCXYIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 75
  State       : disassembled
  Address     : 0x9950
  Size        : 0x3c5
  MaxSize     : 0x3d0
  Offset      : 0x9950
  Section     : .text
  Orc Section : .local.text._Z29test_loop_2D_flat_chan_revCXYIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB074:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	movq	%rdx, %rbp
    0000000c: 	pushq	%rbx
    0000000d: 	movl	%esi, %ebx
    0000000f: 	subq	$0x38, %rsp
    00000013: 	movq	%rdi, 0x8(%rsp)
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x28(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movl	iterations(%rip), %r10d
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	testl	%r10d, %r10d
    0000003e: 	jle	.Ltmp562 # Offset: 62
    00000044: 	xorl	%r12d, %r12d
    00000047: 	leaq	DATAat0x15182(%rip), %r15
    0000004e: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r14
.Ltmp570:
    00000055: 	testl	%ebx, %ebx
    00000057: 	jle	.Ltmp563 # Offset: 87
    0000005d: 	movq	0x8(%rsp), %rax
    00000062: 	movslq	%ebx, %r9
    00000065: 	xorl	%edi, %edi
    00000067: 	xorl	%r8d, %r8d
    0000006a: 	leaq	0x3d0ce40(%rax), %rsi
    00000071: 	nopl	(%rax) # Size: 7
.Ltmp566:
    00000078: 	leaq	-0x3d09000(%rsi), %rdx
    0000007f: 	leaq	-0x3d0ce40(%rsi), %rcx
    00000086: 	xorl	%r11d, %r11d
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp565:
    00000090: 	movq	%rcx, %rax
    00000093: 	pxor	%xmm1, %xmm1
    00000097: 	nopw	(%rax,%rax) # Size: 9
.Ltmp564:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	movdqu	0x10(%rax), %xmm3
    000000a9: 	addq	$0x40, %rax
    000000ad: 	movdqu	-0x20(%rax), %xmm2
    000000b2: 	movdqu	-0x10(%rax), %xmm4
    000000b7: 	shufps	$0x88, %xmm3, %xmm0
    000000bb: 	shufps	$0x88, %xmm4, %xmm2
    000000bf: 	shufps	$0x88, %xmm2, %xmm0
    000000c3: 	paddd	%xmm0, %xmm1
    000000c7: 	cmpq	%rax, %rdx
    000000ca: 	jne	.Ltmp564 # Offset: 202
    000000cc: 	movdqa	%xmm1, %xmm0
    000000d0: 	addq	$0x3e80, %rdx
    000000d7: 	addq	$0x3e80, %rcx
    000000de: 	psrldq	$0x8, %xmm0
    000000e3: 	paddd	%xmm0, %xmm1
    000000e7: 	movdqa	%xmm1, %xmm0
    000000eb: 	psrldq	$0x4, %xmm0
    000000f0: 	paddd	%xmm0, %xmm1
    000000f4: 	movd	%xmm1, %eax
    000000f8: 	addl	%r11d, %eax
    000000fb: 	addl	-0x3e80(%rdx), %eax
    00000101: 	addl	-0x3e70(%rdx), %eax
    00000107: 	addl	-0x3e60(%rdx), %eax
    0000010d: 	addl	-0x3e50(%rdx), %eax
    00000113: 	movl	%eax, %r11d
    00000116: 	cmpq	%rsi, %rdx
    00000119: 	jne	.Ltmp565 # Offset: 281
    0000011f: 	addq	$0x1, %rdi
    00000123: 	addl	%eax, %r8d
    00000126: 	addq	$0x4, %rsi
    0000012a: 	cmpq	%r9, %rdi
    0000012d: 	jne	.Ltmp566 # Offset: 301
.Ltmp579:
    00000133: 	cvttsd2si	init_value(%rip), %r9d
    0000013c: 	movl	%r8d, 0x1c(%rsp)
    00000141: 	imull	%ebx, %r9d
    00000145: 	imull	$0x3d0900, %r9d, %r9d
    0000014c: 	cmpl	%r8d, %r9d
    0000014f: 	movl	%r9d, 0x10(%rsp)
    00000154: 	je	.Ltmp567 # Offset: 340
    0000015a: 	movl	$0x5, %edx
    0000015f: 	movq	%r15, %rsi
    00000162: 	movq	%r14, %rdi
    00000165: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 357
    0000016a: 	movq	0x8(%rbp), %rdx
    0000016e: 	movq	(%rbp), %rsi
    00000172: 	movq	%r14, %rdi
    00000175: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 373
    0000017a: 	movl	$0x12, %edx
    0000017f: 	leaq	DATAat0x15188(%rip), %rsi
    00000186: 	movq	%rax, %rdi
    00000189: 	movq	%rax, %r13
    0000018c: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 396
    00000191: 	movl	0x10(%rsp), %esi
    00000195: 	movq	%r13, %rdi
    00000198: 	callq	_ZNSolsEi@PLT # Offset: 408
    0000019d: 	movl	$0x5, %edx
    000001a2: 	leaq	DATAat0x1519b(%rip), %rsi
    000001a9: 	movq	%rax, %rdi
    000001ac: 	movq	%rax, %r13
    000001af: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 431
    000001b4: 	movl	0x1c(%rsp), %esi
    000001b8: 	movq	%r13, %rdi
    000001bb: 	callq	_ZNSolsEi@PLT # Offset: 443
    000001c0: 	movq	%rax, %r13
    000001c3: 	movq	(%rax), %rax
    000001c6: 	movq	-0x18(%rax), %rax
    000001ca: 	movq	0xf0(%r13,%rax), %rdi
    000001d2: 	testq	%rdi, %rdi
    000001d5: 	je	.Ltmp568 # Offset: 469
    000001db: 	cmpb	$0x0, 0x38(%rdi)
    000001df: 	je	.Ltmp569 # Offset: 479
    000001e5: 	movsbl	0x43(%rdi), %esi
.Ltmp578:
    000001e9: 	movq	%r13, %rdi
    000001ec: 	callq	_ZNSo3putEc@PLT # Offset: 492
    000001f1: 	movq	%rax, %rdi
    000001f4: 	callq	_ZNSo5flushEv@PLT # Offset: 500
    000001f9: 	movl	iterations(%rip), %r10d
.Ltmp567:
    00000200: 	addl	$0x1, %r12d
    00000204: 	cmpl	%r10d, %r12d
    00000207: 	jl	.Ltmp570 # Offset: 519
.Ltmp562:
    0000020d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000214: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000021b: 	subq	$0x20, %rax
    0000021f: 	cmpq	%rax, %rbx
    00000222: 	je	.Ltmp571 # Offset: 546
    00000228: 	leaq	0x10(%rbx), %rdi
    0000022c: 	movq	0x8(%rbp), %r12
    00000230: 	movq	%rdi, (%rbx)
    00000233: 	movq	(%rbp), %r13
    00000237: 	movq	%r13, %rax
    0000023a: 	addq	%r12, %rax
    0000023d: 	je	.Ltmp572 # Offset: 573
    0000023f: 	testq	%r13, %r13
    00000242: 	je	.Ltmp573 # Offset: 578
.Ltmp572:
    00000248: 	movq	%r12, 0x20(%rsp)
    0000024d: 	cmpq	$0xf, %r12
    00000251: 	ja	.Ltmp574 # Offset: 593
    00000257: 	cmpq	$0x1, %r12
    0000025b: 	jne	.Ltmp575 # Offset: 603
    00000261: 	movzbl	(%r13), %eax
    00000266: 	movb	%al, 0x10(%rbx)
.Ltmp581:
    00000269: 	movq	%r12, 0x8(%rbx)
    0000026d: 	movb	$0x0, (%rdi,%r12)
    00000272: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000279: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000280: 	addq	$0x20, %rax
    00000284: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000292: 	je	.Ltmp576 # Offset: 658
.Ltmp580:
    00000298: 	movq	-0x20(%rax), %rbp
    0000029c: 	callq	clock@PLT # Offset: 668
    000002a1: 	movq	%rax, end_time(%rip)
    000002a8: 	movq	0x28(%rsp), %rdx
    000002ad: 	subq	%fs:0x28, %rdx
    000002b6: 	jne	.Ltmp577 # Offset: 694
    000002bc: 	subq	start_time(%rip), %rax
    000002c3: 	pxor	%xmm0, %xmm0
    000002c7: 	movq	%rbp, %rdi
    000002ca: 	cvtsi2sd	%rax, %xmm0
    000002cf: 	divsd	DATAat0x15758(%rip), %xmm0
    000002d7: 	addq	$0x38, %rsp
    000002db: 	popq	%rbx
    000002dc: 	popq	%rbp
    000002dd: 	popq	%r12
    000002df: 	popq	%r13
    000002e1: 	popq	%r14
    000002e3: 	popq	%r15
    000002e5: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 741
.Ltmp569:
    000002ea: 	movq	%rdi, 0x10(%rsp)
    000002ef: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 751
    000002f4: 	movq	0x10(%rsp), %rdi
    000002f9: 	movl	$0xa, %esi
    000002fe: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000305: 	movq	(%rdi), %rax
    00000308: 	movq	0x30(%rax), %rax
    0000030c: 	cmpq	%rdx, %rax
    0000030f: 	je	.Ltmp578 # Offset: 783
    00000315: 	callq	*%rax # Offset: 789
    00000317: 	movsbl	%al, %esi
    0000031a: 	jmp	.Ltmp578 # Offset: 794
.Ltmp563:
    0000031f: 	xorl	%r8d, %r8d
    00000322: 	jmp	.Ltmp579 # Offset: 802
.Ltmp571:
    00000327: 	movq	%rbp, %rsi
    0000032a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000331: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 817
    00000336: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000033d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000344: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000034b: 	jne	.Ltmp580 # Offset: 843
.Ltmp576:
    00000351: 	movq	-0x8(%rdx), %rax
    00000355: 	addq	$0x200, %rax
    0000035b: 	jmp	.Ltmp580 # Offset: 859
.Ltmp575:
    00000360: 	testq	%r12, %r12
    00000363: 	je	.Ltmp581 # Offset: 867
    00000369: 	jmp	.Ltmp582 # Offset: 873
    0000036b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp574:
    00000370: 	movq	%rbx, %rdi
    00000373: 	leaq	0x20(%rsp), %rsi
    00000378: 	xorl	%edx, %edx
    0000037a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 890
    0000037f: 	movq	%rax, (%rbx)
    00000382: 	movq	%rax, %rdi
    00000385: 	movq	0x20(%rsp), %rax
    0000038a: 	movq	%rax, 0x10(%rbx)
.Ltmp582:
    0000038e: 	movq	%r12, %rdx
    00000391: 	movq	%r13, %rsi
    00000394: 	callq	memcpy@PLT # Offset: 916
    00000399: 	movq	0x20(%rsp), %r12
    0000039e: 	movq	(%rbx), %rdi
    000003a1: 	jmp	.Ltmp581 # Offset: 929
.Ltmp577:
    000003a6: 	callq	__stack_chk_fail@PLT # Offset: 934
.Ltmp573:
    000003ab: 	leaq	DATAat0x15110(%rip), %rdi
    000003b2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 946
    000003b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp568:
    000003c0: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 960
DWARF CFI Instructions:
    <empty>
End of Function "_Z29test_loop_2D_flat_chan_revCXYIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z29test_loop_2D_flat_chan_revXCYIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z29test_loop_2D_flat_chan_revXCYIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z29test_loop_2D_flat_chan_revXCYIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 76
  State       : disassembled
  Address     : 0x9d20
  Size        : 0x435
  MaxSize     : 0x440
  Offset      : 0x9d20
  Section     : .text
  Orc Section : .local.text._Z29test_loop_2D_flat_chan_revXCYIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB075:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	movl	%esi, %r12d
    0000000b: 	pushq	%rbp
    0000000c: 	pushq	%rbx
    0000000d: 	movq	%rdi, %rbx
    00000010: 	subq	$0x48, %rsp
    00000014: 	movq	%rdx, 0x8(%rsp)
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x38(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movq	%rax, start_time(%rip)
    00000035: 	movl	iterations(%rip), %eax
    0000003b: 	movl	%eax, 0x10(%rsp)
    0000003f: 	testl	%eax, %eax
    00000041: 	jle	.Ltmp583 # Offset: 65
    00000047: 	movl	%r12d, %eax
    0000004a: 	movl	%r12d, %ebp
    0000004d: 	leal	-0x1(%r12), %r13d
    00000052: 	movl	%r12d, %r15d
    00000055: 	shrl	$0x2, %eax
    00000058: 	movl	$0x0, 0x28(%rsp)
    00000060: 	andl	$-0x4, %ebp
    00000063: 	andl	$0x3, %r15d
    00000067: 	leal	-0x1(%rax), %r14d
    0000006b: 	leaq	0x3d09000(%rbx), %rax
    00000072: 	movq	%rax, 0x18(%rsp)
    00000077: 	addq	$0x1, %r14
    0000007b: 	shlq	$0x4, %r14
.Ltmp593:
    0000007f: 	movq	0x18(%rsp), %r10
    00000084: 	xorl	%r11d, %r11d
    00000087: 	xorl	%r8d, %r8d
    0000008a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp589:
    00000090: 	leal	(,%r11,4), %esi
    00000098: 	leaq	-0x3d09000(%r10), %rcx
    0000009f: 	xorl	%edx, %edx
    000000a1: 	testl	%r12d, %r12d
    000000a4: 	jle	.Ltmp584 # Offset: 164
    000000aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp588:
    000000b0: 	cmpl	$0x2, %r13d
    000000b4: 	jbe	.Ltmp585 # Offset: 180
    000000ba: 	leaq	(%r14,%rcx), %rdi
    000000be: 	movq	%rcx, %rax
    000000c1: 	pxor	%xmm0, %xmm0
    000000c5: 	nopl	(%rax) # Size: 3
.Ltmp586:
    000000c8: 	movdqu	(%rax), %xmm2
    000000cc: 	addq	$0x10, %rax
    000000d0: 	paddd	%xmm2, %xmm0
    000000d4: 	cmpq	%rax, %rdi
    000000d7: 	jne	.Ltmp586 # Offset: 215
    000000d9: 	movdqa	%xmm0, %xmm1
    000000dd: 	psrldq	$0x8, %xmm1
    000000e2: 	paddd	%xmm1, %xmm0
    000000e6: 	movdqa	%xmm0, %xmm1
    000000ea: 	psrldq	$0x4, %xmm1
    000000ef: 	paddd	%xmm1, %xmm0
    000000f3: 	movd	%xmm0, %eax
    000000f7: 	addl	%eax, %edx
    000000f9: 	cmpl	%r12d, %ebp
    000000fc: 	je	.Ltmp587 # Offset: 252
    000000fe: 	movl	%r15d, %edi
    00000101: 	movl	%ebp, %eax
.Ltmp601:
    00000103: 	leal	(%rsi,%rax), %r9d
    00000107: 	movslq	%r9d, %r9
    0000010a: 	addl	(%rbx,%r9,4), %edx
    0000010e: 	leal	0x1(%rax), %r9d
    00000112: 	cmpl	$0x1, %edi
    00000115: 	je	.Ltmp587 # Offset: 277
    00000117: 	addl	%esi, %r9d
    0000011a: 	addl	$0x2, %eax
    0000011d: 	movslq	%r9d, %r9
    00000120: 	addl	(%rbx,%r9,4), %edx
    00000124: 	cmpl	$0x2, %edi
    00000127: 	je	.Ltmp587 # Offset: 295
    00000129: 	addl	%esi, %eax
    0000012b: 	cltq
    0000012d: 	addl	(%rbx,%rax,4), %edx
.Ltmp587:
    00000130: 	addq	$0x3e80, %rcx
    00000137: 	addl	$0xfa0, %esi
    0000013d: 	cmpq	%r10, %rcx
    00000140: 	jne	.Ltmp588 # Offset: 320
    00000146: 	addl	%edx, %r8d
.Ltmp584:
    00000149: 	addq	$0x1, %r11
    0000014d: 	addq	$0x10, %r10
    00000151: 	cmpq	$0x3e8, %r11
    00000158: 	jne	.Ltmp589 # Offset: 344
    0000015e: 	cvttsd2si	init_value(%rip), %r9d
    00000167: 	movl	%r8d, 0x2c(%rsp)
    0000016c: 	imull	%r12d, %r9d
    00000170: 	imull	$0x3d0900, %r9d, %r9d
    00000177: 	cmpl	%r8d, %r9d
    0000017a: 	movl	%r9d, 0x20(%rsp)
    0000017f: 	je	.Ltmp590 # Offset: 383
    00000185: 	movl	$0x5, %edx
    0000018a: 	leaq	DATAat0x15182(%rip), %rsi
    00000191: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    00000198: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 408
    0000019d: 	movq	0x8(%rsp), %rax
    000001a2: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    000001a9: 	movq	0x8(%rax), %rdx
    000001ad: 	movq	(%rax), %rsi
    000001b0: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 432
    000001b5: 	movl	$0x12, %edx
    000001ba: 	leaq	DATAat0x15188(%rip), %rsi
    000001c1: 	movq	%rax, %rdi
    000001c4: 	movq	%rax, 0x10(%rsp)
    000001c9: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 457
    000001ce: 	movl	0x20(%rsp), %esi
    000001d2: 	movq	0x10(%rsp), %rdi
    000001d7: 	callq	_ZNSolsEi@PLT # Offset: 471
    000001dc: 	movl	$0x5, %edx
    000001e1: 	leaq	DATAat0x1519b(%rip), %rsi
    000001e8: 	movq	%rax, %rdi
    000001eb: 	movq	%rax, 0x10(%rsp)
    000001f0: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 496
    000001f5: 	movq	0x10(%rsp), %rdi
    000001fa: 	movl	0x2c(%rsp), %esi
    000001fe: 	callq	_ZNSolsEi@PLT # Offset: 510
    00000203: 	movq	%rax, %r8
    00000206: 	movq	(%rax), %rax
    00000209: 	movq	-0x18(%rax), %rax
    0000020d: 	movq	0xf0(%r8,%rax), %rdi
    00000215: 	testq	%rdi, %rdi
    00000218: 	je	.Ltmp591 # Offset: 536
    0000021e: 	cmpb	$0x0, 0x38(%rdi)
    00000222: 	je	.Ltmp592 # Offset: 546
    00000228: 	movsbl	0x43(%rdi), %esi
.Ltmp602:
    0000022c: 	movq	%r8, %rdi
    0000022f: 	callq	_ZNSo3putEc@PLT # Offset: 559
    00000234: 	movq	%rax, %rdi
    00000237: 	callq	_ZNSo5flushEv@PLT # Offset: 567
    0000023c: 	movl	iterations(%rip), %eax
    00000242: 	movl	%eax, 0x10(%rsp)
.Ltmp590:
    00000246: 	addl	$0x1, 0x28(%rsp)
    0000024b: 	movl	0x28(%rsp), %eax
    0000024f: 	cmpl	0x10(%rsp), %eax
    00000253: 	jl	.Ltmp593 # Offset: 595
.Ltmp583:
    00000259: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000260: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000267: 	subq	$0x20, %rax
    0000026b: 	cmpq	%rax, %rbx
    0000026e: 	je	.Ltmp594 # Offset: 622
    00000274: 	movq	0x8(%rsp), %rax
    00000279: 	leaq	0x10(%rbx), %rdi
    0000027d: 	movq	%rdi, (%rbx)
    00000280: 	movq	(%rax), %rbp
    00000283: 	movq	0x8(%rax), %r12
    00000287: 	movq	%rbp, %rax
    0000028a: 	addq	%r12, %rax
    0000028d: 	je	.Ltmp595 # Offset: 653
    0000028f: 	testq	%rbp, %rbp
    00000292: 	je	.Ltmp596 # Offset: 658
.Ltmp595:
    00000298: 	movq	%r12, 0x30(%rsp)
    0000029d: 	cmpq	$0xf, %r12
    000002a1: 	ja	.Ltmp597 # Offset: 673
    000002a7: 	cmpq	$0x1, %r12
    000002ab: 	jne	.Ltmp598 # Offset: 683
    000002b1: 	movzbl	(%rbp), %eax
    000002b5: 	movb	%al, 0x10(%rbx)
.Ltmp604:
    000002b8: 	movq	%r12, 0x8(%rbx)
    000002bc: 	movb	$0x0, (%rdi,%r12)
    000002c1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002c8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002cf: 	addq	$0x20, %rax
    000002d3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002da: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002e1: 	je	.Ltmp599 # Offset: 737
.Ltmp603:
    000002e7: 	movq	-0x20(%rax), %rbp
    000002eb: 	callq	clock@PLT # Offset: 747
    000002f0: 	movq	%rax, end_time(%rip)
    000002f7: 	movq	0x38(%rsp), %rdx
    000002fc: 	subq	%fs:0x28, %rdx
    00000305: 	jne	.Ltmp600 # Offset: 773
    0000030b: 	subq	start_time(%rip), %rax
    00000312: 	pxor	%xmm0, %xmm0
    00000316: 	movq	%rbp, %rdi
    00000319: 	cvtsi2sd	%rax, %xmm0
    0000031e: 	divsd	DATAat0x15758(%rip), %xmm0
    00000326: 	addq	$0x48, %rsp
    0000032a: 	popq	%rbx
    0000032b: 	popq	%rbp
    0000032c: 	popq	%r12
    0000032e: 	popq	%r13
    00000330: 	popq	%r14
    00000332: 	popq	%r15
    00000334: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 820
    00000339: 	nopl	(%rax) # Size: 7
.Ltmp585:
    00000340: 	movl	%r12d, %edi
    00000343: 	xorl	%eax, %eax
    00000345: 	jmp	.Ltmp601 # Offset: 837
.Ltmp592:
    0000034a: 	movq	%r8, 0x20(%rsp)
    0000034f: 	movq	%rdi, 0x10(%rsp)
    00000354: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 852
    00000359: 	movq	0x10(%rsp), %rdi
    0000035e: 	movq	0x20(%rsp), %r8
    00000363: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    0000036a: 	movl	$0xa, %esi
    0000036f: 	movq	(%rdi), %rax
    00000372: 	movq	0x30(%rax), %rax
    00000376: 	cmpq	%rdx, %rax
    00000379: 	je	.Ltmp602 # Offset: 889
    0000037f: 	movq	%r8, 0x10(%rsp)
    00000384: 	callq	*%rax # Offset: 900
    00000386: 	movq	0x10(%rsp), %r8
    0000038b: 	movsbl	%al, %esi
    0000038e: 	jmp	.Ltmp602 # Offset: 910
.Ltmp594:
    00000393: 	movq	0x8(%rsp), %rsi
    00000398: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000039f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 927
    000003a4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003ab: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003b2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003b9: 	jne	.Ltmp603 # Offset: 953
.Ltmp599:
    000003bf: 	movq	-0x8(%rdx), %rax
    000003c3: 	addq	$0x200, %rax
    000003c9: 	jmp	.Ltmp603 # Offset: 969
.Ltmp598:
    000003ce: 	testq	%r12, %r12
    000003d1: 	je	.Ltmp604 # Offset: 977
    000003d7: 	jmp	.Ltmp605 # Offset: 983
    000003d9: 	nopl	(%rax) # Size: 7
.Ltmp597:
    000003e0: 	movq	%rbx, %rdi
    000003e3: 	leaq	0x30(%rsp), %rsi
    000003e8: 	xorl	%edx, %edx
    000003ea: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1002
    000003ef: 	movq	%rax, (%rbx)
    000003f2: 	movq	%rax, %rdi
    000003f5: 	movq	0x30(%rsp), %rax
    000003fa: 	movq	%rax, 0x10(%rbx)
.Ltmp605:
    000003fe: 	movq	%r12, %rdx
    00000401: 	movq	%rbp, %rsi
    00000404: 	callq	memcpy@PLT # Offset: 1028
    00000409: 	movq	0x30(%rsp), %r12
    0000040e: 	movq	(%rbx), %rdi
    00000411: 	jmp	.Ltmp604 # Offset: 1041
.Ltmp600:
    00000416: 	callq	__stack_chk_fail@PLT # Offset: 1046
.Ltmp596:
    0000041b: 	leaq	DATAat0x15110(%rip), %rdi
    00000422: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1058
    00000427: 	nopw	(%rax,%rax) # Size: 9
.Ltmp591:
    00000430: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 1072
DWARF CFI Instructions:
    <empty>
End of Function "_Z29test_loop_2D_flat_chan_revXCYIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z17test_loop_4D_DCBAIiEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 77
  State       : disassembled
  Address     : 0xa160
  Size        : 0x33c
  MaxSize     : 0x340
  Offset      : 0xa160
  Section     : .text
  Orc Section : .local.text._Z17test_loop_4D_DCBAIiEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB076:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	leaq	DATAat0x15182(%rip), %r14
    0000000f: 	pushq	%r13
    00000011: 	leaq	DATAat0x15188(%rip), %r13
    00000018: 	pushq	%r12
    0000001a: 	movq	%rdi, %r12
    0000001d: 	pushq	%rbp
    0000001e: 	movq	%rsi, %rbp
    00000021: 	pushq	%rbx
    00000022: 	xorl	%ebx, %ebx
    00000024: 	subq	$0x38, %rsp
    00000028: 	movq	%fs:0x28, %rax
    00000031: 	movq	%rax, 0x28(%rsp)
    00000036: 	xorl	%eax, %eax
    00000038: 	callq	clock@PLT # Offset: 56
    0000003d: 	movl	iterations(%rip), %r10d
    00000044: 	movq	%rax, start_time(%rip)
    0000004b: 	leaq	0x1b7600(%r12), %rax
    00000053: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r12
    0000005a: 	movq	%rax, 0x8(%rsp)
    0000005f: 	testl	%r10d, %r10d
    00000062: 	jle	.Ltmp606 # Offset: 98
.Ltmp614:
    00000068: 	movq	0x8(%rsp), %r11
    0000006d: 	xorl	%r9d, %r9d
    00000070: 	xorl	%r15d, %r15d
.Ltmp610:
    00000073: 	leaq	-0x57e0(%r11), %rdi
.Ltmp609:
    0000007a: 	movq	%rdi, %rcx
    0000007d: 	xorl	%edx, %edx
    0000007f: 	leaq	0x7f1d360(%rdi), %rsi
    00000086: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp608:
    00000090: 	leaq	-0x1b1e20(%rcx), %rax
    00000097: 	nopw	(%rax,%rax) # Size: 9
.Ltmp607:
    000000a0: 	addl	(%rax), %edx
    000000a2: 	addq	$0x57e0, %rax
    000000a8: 	cmpq	%rax, %rcx
    000000ab: 	jne	.Ltmp607 # Offset: 171
    000000ad: 	addq	$0x1b1e20, %rcx
    000000b4: 	cmpq	%rsi, %rcx
    000000b7: 	jne	.Ltmp608 # Offset: 183
    000000b9: 	addq	$0x130, %rdi
    000000c0: 	addl	%edx, %r15d
    000000c3: 	cmpq	%r11, %rdi
    000000c6: 	jne	.Ltmp609 # Offset: 198
    000000c8: 	addq	$0x1, %r9
    000000cc: 	leaq	0x4(%rdi), %r11
    000000d0: 	cmpq	$0x4c, %r9
    000000d4: 	jne	.Ltmp610 # Offset: 212
    000000d6: 	cvttsd2si	init_value(%rip), %r9d
    000000df: 	imull	$0x1fc74d8, %r9d, %r9d
    000000e6: 	cmpl	%r9d, %r15d
    000000e9: 	movl	%r9d, 0x1c(%rsp)
    000000ee: 	je	.Ltmp611 # Offset: 238
    000000f4: 	movl	$0x5, %edx
    000000f9: 	movq	%r14, %rsi
    000000fc: 	movq	%r12, %rdi
    000000ff: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 255
    00000104: 	movq	0x8(%rbp), %rdx
    00000108: 	movq	(%rbp), %rsi
    0000010c: 	movq	%r12, %rdi
    0000010f: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 271
    00000114: 	movl	$0x12, %edx
    00000119: 	movq	%r13, %rsi
    0000011c: 	movq	%rax, %rdi
    0000011f: 	movq	%rax, 0x10(%rsp)
    00000124: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 292
    00000129: 	movl	0x1c(%rsp), %esi
    0000012d: 	movq	0x10(%rsp), %rdi
    00000132: 	callq	_ZNSolsEi@PLT # Offset: 306
    00000137: 	movl	$0x5, %edx
    0000013c: 	leaq	DATAat0x1519b(%rip), %rsi
    00000143: 	movq	%rax, %rdi
    00000146: 	movq	%rax, 0x10(%rsp)
    0000014b: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 331
    00000150: 	movq	0x10(%rsp), %rdi
    00000155: 	movl	%r15d, %esi
    00000158: 	callq	_ZNSolsEi@PLT # Offset: 344
    0000015d: 	movq	%rax, %r15
    00000160: 	movq	(%rax), %rax
    00000163: 	movq	-0x18(%rax), %rax
    00000167: 	movq	0xf0(%r15,%rax), %rdi
    0000016f: 	testq	%rdi, %rdi
    00000172: 	je	.Ltmp612 # Offset: 370
    00000178: 	cmpb	$0x0, 0x38(%rdi)
    0000017c: 	je	.Ltmp613 # Offset: 380
    00000182: 	movsbl	0x43(%rdi), %esi
.Ltmp621:
    00000186: 	movq	%r15, %rdi
    00000189: 	callq	_ZNSo3putEc@PLT # Offset: 393
    0000018e: 	movq	%rax, %rdi
    00000191: 	callq	_ZNSo5flushEv@PLT # Offset: 401
    00000196: 	movl	iterations(%rip), %r10d
.Ltmp611:
    0000019d: 	addl	$0x1, %ebx
    000001a0: 	cmpl	%r10d, %ebx
    000001a3: 	jl	.Ltmp614 # Offset: 419
.Ltmp606:
    000001a9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001b0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001b7: 	subq	$0x20, %rax
    000001bb: 	cmpq	%rax, %rbx
    000001be: 	je	.Ltmp615 # Offset: 446
    000001c4: 	leaq	0x10(%rbx), %rdi
    000001c8: 	movq	0x8(%rbp), %r12
    000001cc: 	movq	%rdi, (%rbx)
    000001cf: 	movq	(%rbp), %r13
    000001d3: 	movq	%r13, %rax
    000001d6: 	addq	%r12, %rax
    000001d9: 	je	.Ltmp616 # Offset: 473
    000001db: 	testq	%r13, %r13
    000001de: 	je	.Ltmp617 # Offset: 478
.Ltmp616:
    000001e4: 	movq	%r12, 0x20(%rsp)
    000001e9: 	cmpq	$0xf, %r12
    000001ed: 	ja	.Ltmp618 # Offset: 493
    000001f3: 	cmpq	$0x1, %r12
    000001f7: 	jne	.Ltmp619 # Offset: 503
    000001fd: 	movzbl	(%r13), %eax
    00000202: 	movb	%al, 0x10(%rbx)
.Ltmp624:
    00000205: 	movq	%r12, 0x8(%rbx)
    00000209: 	movb	$0x0, (%rdi,%r12)
    0000020e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000215: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000021c: 	addq	$0x20, %rax
    00000220: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000227: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000022e: 	jne	.Ltmp620 # Offset: 558
.Ltmp622:
    00000230: 	movq	-0x8(%rdx), %rax
    00000234: 	addq	$0x200, %rax
    0000023a: 	jmp	.Ltmp620 # Offset: 570
.Ltmp613:
    0000023c: 	movq	%rdi, 0x10(%rsp)
    00000241: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 577
    00000246: 	movq	0x10(%rsp), %rdi
    0000024b: 	movl	$0xa, %esi
    00000250: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000257: 	movq	(%rdi), %rax
    0000025a: 	movq	0x30(%rax), %rax
    0000025e: 	cmpq	%rdx, %rax
    00000261: 	je	.Ltmp621 # Offset: 609
    00000267: 	callq	*%rax # Offset: 615
    00000269: 	movsbl	%al, %esi
    0000026c: 	jmp	.Ltmp621 # Offset: 620
.Ltmp615:
    00000271: 	movq	%rbp, %rsi
    00000274: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000027b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 635
    00000280: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000287: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000295: 	je	.Ltmp622 # Offset: 661
.Ltmp620:
    00000297: 	movq	-0x20(%rax), %rbp
    0000029b: 	callq	clock@PLT # Offset: 667
    000002a0: 	movq	%rax, end_time(%rip)
    000002a7: 	movq	0x28(%rsp), %rdx
    000002ac: 	subq	%fs:0x28, %rdx
    000002b5: 	jne	.Ltmp623 # Offset: 693
    000002b7: 	subq	start_time(%rip), %rax
    000002be: 	pxor	%xmm0, %xmm0
    000002c2: 	movq	%rbp, %rdi
    000002c5: 	cvtsi2sd	%rax, %xmm0
    000002ca: 	divsd	DATAat0x15758(%rip), %xmm0
    000002d2: 	addq	$0x38, %rsp
    000002d6: 	popq	%rbx
    000002d7: 	popq	%rbp
    000002d8: 	popq	%r12
    000002da: 	popq	%r13
    000002dc: 	popq	%r14
    000002de: 	popq	%r15
    000002e0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 736
.Ltmp618:
    000002e5: 	movq	%rbx, %rdi
    000002e8: 	leaq	0x20(%rsp), %rsi
    000002ed: 	xorl	%edx, %edx
    000002ef: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 751
    000002f4: 	movq	%rax, (%rbx)
    000002f7: 	movq	%rax, %rdi
    000002fa: 	movq	0x20(%rsp), %rax
    000002ff: 	movq	%rax, 0x10(%rbx)
.Ltmp625:
    00000303: 	movq	%r12, %rdx
    00000306: 	movq	%r13, %rsi
    00000309: 	callq	memcpy@PLT # Offset: 777
    0000030e: 	movq	0x20(%rsp), %r12
    00000313: 	movq	(%rbx), %rdi
    00000316: 	jmp	.Ltmp624 # Offset: 790
.Ltmp619:
    0000031b: 	testq	%r12, %r12
    0000031e: 	je	.Ltmp624 # Offset: 798
    00000324: 	jmp	.Ltmp625 # Offset: 804
.Ltmp623:
    00000326: 	callq	__stack_chk_fail@PLT # Offset: 806
.Ltmp612:
    0000032b: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 811
.Ltmp617:
    00000330: 	leaq	DATAat0x15110(%rip), %rdi
    00000337: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 823
DWARF CFI Instructions:
    <empty>
End of Function "_Z17test_loop_4D_DCBAIiEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z27test_loop_2D_flat_chan_opt3IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z27test_loop_2D_flat_chan_opt3IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z27test_loop_2D_flat_chan_opt3IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 78
  State       : disassembled
  Address     : 0xa4a0
  Size        : 0x405
  MaxSize     : 0x410
  Offset      : 0xa4a0
  Section     : .text
  Orc Section : .local.text._Z27test_loop_2D_flat_chan_opt3IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB077:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	movq	%rdi, %r12
    0000000b: 	pushq	%rbp
    0000000c: 	movq	%rdx, %rbp
    0000000f: 	pushq	%rbx
    00000010: 	movl	%esi, %ebx
    00000012: 	subq	$0x38, %rsp
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x28(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	callq	clock@PLT # Offset: 38
    0000002b: 	movq	%rax, start_time(%rip)
    00000032: 	movl	iterations(%rip), %eax
    00000038: 	movl	%eax, (%rsp)
    0000003b: 	testl	%eax, %eax
    0000003d: 	jle	.Ltmp626 # Offset: 61
    00000043: 	movl	%ebx, %eax
    00000045: 	movl	$0x0, 0x18(%rsp)
    0000004d: 	movl	%ebx, %r13d
    00000050: 	leal	-0x1(%rbx), %r14d
    00000054: 	shrl	$0x2, %eax
    00000057: 	andl	$-0x4, %r13d
    0000005b: 	leal	-0x1(%rax), %r15d
    0000005f: 	leaq	0x3e80(%r12), %rax
    00000067: 	movq	%rax, 0x8(%rsp)
    0000006c: 	addq	$0x1, %r15
    00000070: 	shlq	$0x4, %r15
.Ltmp635:
    00000074: 	movq	0x8(%rsp), %r9
    00000079: 	xorl	%r10d, %r10d
    0000007c: 	xorl	%r8d, %r8d
    0000007f: 	nop # Size: 1
.Ltmp631:
    00000080: 	leaq	(,%r10,4), %rdi
    00000088: 	leaq	-0x3e80(%r9), %rcx
    0000008f: 	xorl	%esi, %esi
    00000091: 	xorl	%edx, %edx
    00000093: 	nopl	(%rax,%rax) # Size: 5
.Ltmp630:
    00000098: 	testl	%ebx, %ebx
    0000009a: 	jle	.Ltmp627 # Offset: 154
    000000a0: 	cmpl	$0x2, %r14d
    000000a4: 	jbe	.Ltmp628 # Offset: 164
    000000aa: 	leaq	(%r15,%rcx), %r11
    000000ae: 	movq	%rcx, %rax
    000000b1: 	pxor	%xmm0, %xmm0
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp629:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	addq	$0x10, %rax
    000000c0: 	paddd	%xmm2, %xmm0
    000000c4: 	cmpq	%rax, %r11
    000000c7: 	jne	.Ltmp629 # Offset: 199
    000000c9: 	movdqa	%xmm0, %xmm1
    000000cd: 	psrldq	$0x8, %xmm1
    000000d2: 	paddd	%xmm1, %xmm0
    000000d6: 	movdqa	%xmm0, %xmm1
    000000da: 	psrldq	$0x4, %xmm1
    000000df: 	paddd	%xmm1, %xmm0
    000000e3: 	movd	%xmm0, %eax
    000000e7: 	addl	%eax, %edx
    000000e9: 	movl	%r13d, %eax
    000000ec: 	cmpl	%ebx, %r13d
    000000ef: 	je	.Ltmp627 # Offset: 239
.Ltmp643:
    000000f1: 	leal	(%rsi,%rax), %r11d
    000000f5: 	movslq	%r11d, %r11
    000000f8: 	addq	%rdi, %r11
    000000fb: 	addl	(%r12,%r11,4), %edx
    000000ff: 	leal	0x1(%rax), %r11d
    00000103: 	cmpl	%ebx, %r11d
    00000106: 	jge	.Ltmp627 # Offset: 262
    00000108: 	addl	%esi, %r11d
    0000010b: 	addl	$0x2, %eax
    0000010e: 	movslq	%r11d, %r11
    00000111: 	addq	%rdi, %r11
    00000114: 	addl	(%r12,%r11,4), %edx
    00000118: 	cmpl	%eax, %ebx
    0000011a: 	jle	.Ltmp627 # Offset: 282
    0000011c: 	addl	%esi, %eax
    0000011e: 	cltq
    00000120: 	addq	%rdi, %rax
    00000123: 	addl	(%r12,%rax,4), %edx
.Ltmp627:
    00000127: 	addq	$0x10, %rcx
    0000012b: 	addl	$0x4, %esi
    0000012e: 	cmpq	%r9, %rcx
    00000131: 	jne	.Ltmp630 # Offset: 305
    00000137: 	addq	$0x3e8, %r10
    0000013e: 	addl	%edx, %r8d
    00000141: 	leaq	0x3e80(%rcx), %r9
    00000148: 	cmpq	$0x3d0900, %r10
    0000014f: 	jne	.Ltmp631 # Offset: 335
    00000155: 	cvttsd2si	init_value(%rip), %r9d
    0000015e: 	movl	%r8d, 0x10(%rsp)
    00000163: 	imull	%ebx, %r9d
    00000167: 	imull	$0x3d0900, %r9d, %r9d
    0000016e: 	cmpl	%r9d, %r8d
    00000171: 	movl	%r9d, 0x1c(%rsp)
    00000176: 	je	.Ltmp632 # Offset: 374
    0000017c: 	movl	$0x5, %edx
    00000181: 	leaq	DATAat0x15182(%rip), %rsi
    00000188: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    0000018f: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 399
    00000194: 	movq	0x8(%rbp), %rdx
    00000198: 	movq	(%rbp), %rsi
    0000019c: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    000001a3: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 419
    000001a8: 	movl	$0x12, %edx
    000001ad: 	leaq	DATAat0x15188(%rip), %rsi
    000001b4: 	movq	%rax, %rdi
    000001b7: 	movq	%rax, (%rsp)
    000001bb: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 443
    000001c0: 	movl	0x1c(%rsp), %esi
    000001c4: 	movq	(%rsp), %rdi
    000001c8: 	callq	_ZNSolsEi@PLT # Offset: 456
    000001cd: 	movl	$0x5, %edx
    000001d2: 	leaq	DATAat0x1519b(%rip), %rsi
    000001d9: 	movq	%rax, %rdi
    000001dc: 	movq	%rax, (%rsp)
    000001e0: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 480
    000001e5: 	movq	(%rsp), %rdi
    000001e9: 	movl	0x10(%rsp), %esi
    000001ed: 	callq	_ZNSolsEi@PLT # Offset: 493
    000001f2: 	movq	%rax, %r8
    000001f5: 	movq	(%rax), %rax
    000001f8: 	movq	-0x18(%rax), %rax
    000001fc: 	movq	0xf0(%r8,%rax), %rdi
    00000204: 	testq	%rdi, %rdi
    00000207: 	je	.Ltmp633 # Offset: 519
    0000020d: 	cmpb	$0x0, 0x38(%rdi)
    00000211: 	je	.Ltmp634 # Offset: 529
    00000217: 	movsbl	0x43(%rdi), %esi
.Ltmp644:
    0000021b: 	movq	%r8, %rdi
    0000021e: 	callq	_ZNSo3putEc@PLT # Offset: 542
    00000223: 	movq	%rax, %rdi
    00000226: 	callq	_ZNSo5flushEv@PLT # Offset: 550
    0000022b: 	movl	iterations(%rip), %eax
    00000231: 	movl	%eax, (%rsp)
.Ltmp632:
    00000234: 	addl	$0x1, 0x18(%rsp)
    00000239: 	movl	0x18(%rsp), %eax
    0000023d: 	cmpl	(%rsp), %eax
    00000240: 	jl	.Ltmp635 # Offset: 576
.Ltmp626:
    00000246: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000024d: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000254: 	subq	$0x20, %rax
    00000258: 	cmpq	%rax, %rbx
    0000025b: 	je	.Ltmp636 # Offset: 603
    00000261: 	leaq	0x10(%rbx), %rdi
    00000265: 	movq	0x8(%rbp), %r12
    00000269: 	movq	%rdi, (%rbx)
    0000026c: 	movq	(%rbp), %r13
    00000270: 	movq	%r13, %rax
    00000273: 	addq	%r12, %rax
    00000276: 	je	.Ltmp637 # Offset: 630
    00000278: 	testq	%r13, %r13
    0000027b: 	je	.Ltmp638 # Offset: 635
.Ltmp637:
    00000281: 	movq	%r12, 0x20(%rsp)
    00000286: 	cmpq	$0xf, %r12
    0000028a: 	ja	.Ltmp639 # Offset: 650
    00000290: 	cmpq	$0x1, %r12
    00000294: 	jne	.Ltmp640 # Offset: 660
    0000029a: 	movzbl	(%r13), %eax
    0000029f: 	movb	%al, 0x10(%rbx)
.Ltmp646:
    000002a2: 	movq	%r12, 0x8(%rbx)
    000002a6: 	movb	$0x0, (%rdi,%r12)
    000002ab: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002b2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b9: 	addq	$0x20, %rax
    000002bd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002c4: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002cb: 	je	.Ltmp641 # Offset: 715
.Ltmp645:
    000002d1: 	movq	-0x20(%rax), %rbp
    000002d5: 	callq	clock@PLT # Offset: 725
    000002da: 	movq	%rax, end_time(%rip)
    000002e1: 	movq	0x28(%rsp), %rdx
    000002e6: 	subq	%fs:0x28, %rdx
    000002ef: 	jne	.Ltmp642 # Offset: 751
    000002f5: 	subq	start_time(%rip), %rax
    000002fc: 	pxor	%xmm0, %xmm0
    00000300: 	movq	%rbp, %rdi
    00000303: 	cvtsi2sd	%rax, %xmm0
    00000308: 	divsd	DATAat0x15758(%rip), %xmm0
    00000310: 	addq	$0x38, %rsp
    00000314: 	popq	%rbx
    00000315: 	popq	%rbp
    00000316: 	popq	%r12
    00000318: 	popq	%r13
    0000031a: 	popq	%r14
    0000031c: 	popq	%r15
    0000031e: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 798
.Ltmp628:
    00000323: 	xorl	%eax, %eax
    00000325: 	jmp	.Ltmp643 # Offset: 805
.Ltmp634:
    0000032a: 	movq	%r8, 0x10(%rsp)
    0000032f: 	movq	%rdi, (%rsp)
    00000333: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 819
    00000338: 	movq	(%rsp), %rdi
    0000033c: 	movq	0x10(%rsp), %r8
    00000341: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000348: 	movl	$0xa, %esi
    0000034d: 	movq	(%rdi), %rax
    00000350: 	movq	0x30(%rax), %rax
    00000354: 	cmpq	%rdx, %rax
    00000357: 	je	.Ltmp644 # Offset: 855
    0000035d: 	movq	%r8, (%rsp)
    00000361: 	callq	*%rax # Offset: 865
    00000363: 	movq	(%rsp), %r8
    00000367: 	movsbl	%al, %esi
    0000036a: 	jmp	.Ltmp644 # Offset: 874
.Ltmp636:
    0000036f: 	movq	%rbp, %rsi
    00000372: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000379: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 889
    0000037e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000385: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000038c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000393: 	jne	.Ltmp645 # Offset: 915
.Ltmp641:
    00000399: 	movq	-0x8(%rdx), %rax
    0000039d: 	addq	$0x200, %rax
    000003a3: 	jmp	.Ltmp645 # Offset: 931
.Ltmp640:
    000003a8: 	testq	%r12, %r12
    000003ab: 	je	.Ltmp646 # Offset: 939
    000003b1: 	jmp	.Ltmp647 # Offset: 945
    000003b3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp639:
    000003b8: 	movq	%rbx, %rdi
    000003bb: 	leaq	0x20(%rsp), %rsi
    000003c0: 	xorl	%edx, %edx
    000003c2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 962
    000003c7: 	movq	%rax, (%rbx)
    000003ca: 	movq	%rax, %rdi
    000003cd: 	movq	0x20(%rsp), %rax
    000003d2: 	movq	%rax, 0x10(%rbx)
.Ltmp647:
    000003d6: 	movq	%r12, %rdx
    000003d9: 	movq	%r13, %rsi
    000003dc: 	callq	memcpy@PLT # Offset: 988
    000003e1: 	movq	0x20(%rsp), %r12
    000003e6: 	movq	(%rbx), %rdi
    000003e9: 	jmp	.Ltmp646 # Offset: 1001
.Ltmp642:
    000003ee: 	callq	__stack_chk_fail@PLT # Offset: 1006
.Ltmp638:
    000003f3: 	leaq	DATAat0x15110(%rip), %rdi
    000003fa: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1018
    000003ff: 	nop # Size: 1
.Ltmp633:
    00000400: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 1024
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_loop_2D_flat_chan_opt3IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z27test_loop_2D_flat_chan_opt4IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z27test_loop_2D_flat_chan_opt4IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z27test_loop_2D_flat_chan_opt4IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 79
  State       : disassembled
  Address     : 0xa8b0
  Size        : 0x405
  MaxSize     : 0x410
  Offset      : 0xa8b0
  Section     : .text
  Orc Section : .local.text._Z27test_loop_2D_flat_chan_opt4IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB078:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	movq	%rdi, %r12
    0000000b: 	pushq	%rbp
    0000000c: 	movq	%rdx, %rbp
    0000000f: 	pushq	%rbx
    00000010: 	movl	%esi, %ebx
    00000012: 	subq	$0x38, %rsp
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x28(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	callq	clock@PLT # Offset: 38
    0000002b: 	movl	iterations(%rip), %r10d
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	testl	%r10d, %r10d
    0000003c: 	jle	.Ltmp648 # Offset: 60
    00000042: 	movl	%ebx, %eax
    00000044: 	movl	$0x0, 0x18(%rsp)
    0000004c: 	movl	%ebx, %r13d
    0000004f: 	leal	-0x1(%rbx), %r14d
    00000053: 	shrl	$0x2, %eax
    00000056: 	andl	$-0x4, %r13d
    0000005a: 	leal	-0x1(%rax), %r15d
    0000005e: 	leaq	0x3e80(%r12), %rax
    00000066: 	movq	%rax, (%rsp)
    0000006a: 	addq	$0x1, %r15
    0000006e: 	shlq	$0x4, %r15
.Ltmp657:
    00000072: 	movq	(%rsp), %rdi
    00000076: 	xorl	%r9d, %r9d
    00000079: 	xorl	%r8d, %r8d
    0000007c: 	nopl	(%rax) # Size: 4
.Ltmp653:
    00000080: 	movl	%r9d, %esi
    00000083: 	leaq	-0x3e80(%rdi), %rcx
    0000008a: 	xorl	%edx, %edx
    0000008c: 	nopl	(%rax) # Size: 4
.Ltmp652:
    00000090: 	testl	%ebx, %ebx
    00000092: 	jle	.Ltmp649 # Offset: 146
    00000098: 	cmpl	$0x2, %r14d
    0000009c: 	jbe	.Ltmp650 # Offset: 156
    000000a2: 	leaq	(%r15,%rcx), %r11
    000000a6: 	movq	%rcx, %rax
    000000a9: 	pxor	%xmm0, %xmm0
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp651:
    000000b0: 	movdqu	(%rax), %xmm2
    000000b4: 	addq	$0x10, %rax
    000000b8: 	paddd	%xmm2, %xmm0
    000000bc: 	cmpq	%rax, %r11
    000000bf: 	jne	.Ltmp651 # Offset: 191
    000000c1: 	movdqa	%xmm0, %xmm1
    000000c5: 	psrldq	$0x8, %xmm1
    000000ca: 	paddd	%xmm1, %xmm0
    000000ce: 	movdqa	%xmm0, %xmm1
    000000d2: 	psrldq	$0x4, %xmm1
    000000d7: 	paddd	%xmm1, %xmm0
    000000db: 	movd	%xmm0, %eax
    000000df: 	addl	%eax, %edx
    000000e1: 	movl	%r13d, %eax
    000000e4: 	cmpl	%ebx, %r13d
    000000e7: 	je	.Ltmp649 # Offset: 231
.Ltmp665:
    000000e9: 	leal	(%rsi,%rax), %r11d
    000000ed: 	movslq	%r11d, %r11
    000000f0: 	addl	(%r12,%r11,4), %edx
    000000f4: 	leal	0x1(%rax), %r11d
    000000f8: 	cmpl	%ebx, %r11d
    000000fb: 	jge	.Ltmp649 # Offset: 251
    000000fd: 	addl	%esi, %r11d
    00000100: 	addl	$0x2, %eax
    00000103: 	movslq	%r11d, %r11
    00000106: 	addl	(%r12,%r11,4), %edx
    0000010a: 	cmpl	%eax, %ebx
    0000010c: 	jle	.Ltmp649 # Offset: 268
    0000010e: 	addl	%esi, %eax
    00000110: 	cltq
    00000112: 	addl	(%r12,%rax,4), %edx
.Ltmp649:
    00000116: 	addq	$0x10, %rcx
    0000011a: 	addl	$0x4, %esi
    0000011d: 	cmpq	%rdi, %rcx
    00000120: 	jne	.Ltmp652 # Offset: 288
    00000126: 	addq	$0xfa0, %r9
    0000012d: 	addl	%edx, %r8d
    00000130: 	leaq	0x3e80(%rcx), %rdi
    00000137: 	cmpq	$0xf42400, %r9
    0000013e: 	jne	.Ltmp653 # Offset: 318
    00000144: 	cvttsd2si	init_value(%rip), %r9d
    0000014d: 	movl	%r8d, 0x10(%rsp)
    00000152: 	imull	%ebx, %r9d
    00000156: 	imull	$0x3d0900, %r9d, %r9d
    0000015d: 	cmpl	%r9d, %r8d
    00000160: 	movl	%r9d, 0x1c(%rsp)
    00000165: 	je	.Ltmp654 # Offset: 357
    0000016b: 	movl	$0x5, %edx
    00000170: 	leaq	DATAat0x15182(%rip), %rsi
    00000177: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    0000017e: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 382
    00000183: 	movq	0x8(%rbp), %rdx
    00000187: 	movq	(%rbp), %rsi
    0000018b: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    00000192: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 402
    00000197: 	movl	$0x12, %edx
    0000019c: 	leaq	DATAat0x15188(%rip), %rsi
    000001a3: 	movq	%rax, %rdi
    000001a6: 	movq	%rax, 0x8(%rsp)
    000001ab: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 427
    000001b0: 	movl	0x1c(%rsp), %esi
    000001b4: 	movq	0x8(%rsp), %rdi
    000001b9: 	callq	_ZNSolsEi@PLT # Offset: 441
    000001be: 	movl	$0x5, %edx
    000001c3: 	leaq	DATAat0x1519b(%rip), %rsi
    000001ca: 	movq	%rax, %rdi
    000001cd: 	movq	%rax, 0x8(%rsp)
    000001d2: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 466
    000001d7: 	movq	0x8(%rsp), %rdi
    000001dc: 	movl	0x10(%rsp), %esi
    000001e0: 	callq	_ZNSolsEi@PLT # Offset: 480
    000001e5: 	movq	%rax, %r8
    000001e8: 	movq	(%rax), %rax
    000001eb: 	movq	-0x18(%rax), %rax
    000001ef: 	movq	0xf0(%r8,%rax), %rdi
    000001f7: 	testq	%rdi, %rdi
    000001fa: 	je	.Ltmp655 # Offset: 506
    00000200: 	cmpb	$0x0, 0x38(%rdi)
    00000204: 	je	.Ltmp656 # Offset: 516
    0000020a: 	movsbl	0x43(%rdi), %esi
.Ltmp666:
    0000020e: 	movq	%r8, %rdi
    00000211: 	callq	_ZNSo3putEc@PLT # Offset: 529
    00000216: 	movq	%rax, %rdi
    00000219: 	callq	_ZNSo5flushEv@PLT # Offset: 537
    0000021e: 	movl	iterations(%rip), %r10d
.Ltmp654:
    00000225: 	addl	$0x1, 0x18(%rsp)
    0000022a: 	movl	0x18(%rsp), %eax
    0000022e: 	cmpl	%r10d, %eax
    00000231: 	jl	.Ltmp657 # Offset: 561
.Ltmp648:
    00000237: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000023e: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000245: 	subq	$0x20, %rax
    00000249: 	cmpq	%rax, %rbx
    0000024c: 	je	.Ltmp658 # Offset: 588
    00000252: 	leaq	0x10(%rbx), %rdi
    00000256: 	movq	0x8(%rbp), %r12
    0000025a: 	movq	%rdi, (%rbx)
    0000025d: 	movq	(%rbp), %r13
    00000261: 	movq	%r13, %rax
    00000264: 	addq	%r12, %rax
    00000267: 	je	.Ltmp659 # Offset: 615
    00000269: 	testq	%r13, %r13
    0000026c: 	je	.Ltmp660 # Offset: 620
.Ltmp659:
    00000272: 	movq	%r12, 0x20(%rsp)
    00000277: 	cmpq	$0xf, %r12
    0000027b: 	ja	.Ltmp661 # Offset: 635
    00000281: 	cmpq	$0x1, %r12
    00000285: 	jne	.Ltmp662 # Offset: 645
    0000028b: 	movzbl	(%r13), %eax
    00000290: 	movb	%al, 0x10(%rbx)
.Ltmp668:
    00000293: 	movq	%r12, 0x8(%rbx)
    00000297: 	movb	$0x0, (%rdi,%r12)
    0000029c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002aa: 	addq	$0x20, %rax
    000002ae: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002b5: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002bc: 	je	.Ltmp663 # Offset: 700
.Ltmp667:
    000002c2: 	movq	-0x20(%rax), %rbp
    000002c6: 	callq	clock@PLT # Offset: 710
    000002cb: 	movq	%rax, end_time(%rip)
    000002d2: 	movq	0x28(%rsp), %rdx
    000002d7: 	subq	%fs:0x28, %rdx
    000002e0: 	jne	.Ltmp664 # Offset: 736
    000002e6: 	subq	start_time(%rip), %rax
    000002ed: 	pxor	%xmm0, %xmm0
    000002f1: 	movq	%rbp, %rdi
    000002f4: 	cvtsi2sd	%rax, %xmm0
    000002f9: 	divsd	DATAat0x15758(%rip), %xmm0
    00000301: 	addq	$0x38, %rsp
    00000305: 	popq	%rbx
    00000306: 	popq	%rbp
    00000307: 	popq	%r12
    00000309: 	popq	%r13
    0000030b: 	popq	%r14
    0000030d: 	popq	%r15
    0000030f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 783
.Ltmp650:
    00000314: 	xorl	%eax, %eax
    00000316: 	jmp	.Ltmp665 # Offset: 790
.Ltmp656:
    0000031b: 	movq	%r8, 0x10(%rsp)
    00000320: 	movq	%rdi, 0x8(%rsp)
    00000325: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 805
    0000032a: 	movq	0x8(%rsp), %rdi
    0000032f: 	movq	0x10(%rsp), %r8
    00000334: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    0000033b: 	movl	$0xa, %esi
    00000340: 	movq	(%rdi), %rax
    00000343: 	movq	0x30(%rax), %rax
    00000347: 	cmpq	%rdx, %rax
    0000034a: 	je	.Ltmp666 # Offset: 842
    00000350: 	movq	%r8, 0x8(%rsp)
    00000355: 	callq	*%rax # Offset: 853
    00000357: 	movq	0x8(%rsp), %r8
    0000035c: 	movsbl	%al, %esi
    0000035f: 	jmp	.Ltmp666 # Offset: 863
.Ltmp658:
    00000364: 	movq	%rbp, %rsi
    00000367: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000036e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 878
    00000373: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000037a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000381: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000388: 	jne	.Ltmp667 # Offset: 904
.Ltmp663:
    0000038e: 	movq	-0x8(%rdx), %rax
    00000392: 	addq	$0x200, %rax
    00000398: 	jmp	.Ltmp667 # Offset: 920
.Ltmp662:
    0000039d: 	testq	%r12, %r12
    000003a0: 	je	.Ltmp668 # Offset: 928
    000003a6: 	jmp	.Ltmp669 # Offset: 934
    000003a8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp661:
    000003b0: 	movq	%rbx, %rdi
    000003b3: 	leaq	0x20(%rsp), %rsi
    000003b8: 	xorl	%edx, %edx
    000003ba: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 954
    000003bf: 	movq	%rax, (%rbx)
    000003c2: 	movq	%rax, %rdi
    000003c5: 	movq	0x20(%rsp), %rax
    000003ca: 	movq	%rax, 0x10(%rbx)
.Ltmp669:
    000003ce: 	movq	%r12, %rdx
    000003d1: 	movq	%r13, %rsi
    000003d4: 	callq	memcpy@PLT # Offset: 980
    000003d9: 	movq	0x20(%rsp), %r12
    000003de: 	movq	(%rbx), %rdi
    000003e1: 	jmp	.Ltmp668 # Offset: 993
.Ltmp664:
    000003e6: 	callq	__stack_chk_fail@PLT # Offset: 998
.Ltmp660:
    000003eb: 	leaq	DATAat0x15110(%rip), %rdi
    000003f2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1010
    000003f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp655:
    00000400: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 1024
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_loop_2D_flat_chan_opt4IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z29test_loop_2D_flat_chan_revCYXIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z29test_loop_2D_flat_chan_revCYXIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z29test_loop_2D_flat_chan_revCYXIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 80
  State       : disassembled
  Address     : 0xacc0
  Size        : 0x3c5
  MaxSize     : 0x3d0
  Offset      : 0xacc0
  Section     : .text
  Orc Section : .local.text._Z29test_loop_2D_flat_chan_revCYXIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB079:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	movq	%rdx, %rbp
    0000000c: 	pushq	%rbx
    0000000d: 	movl	%esi, %ebx
    0000000f: 	subq	$0x38, %rsp
    00000013: 	movq	%rdi, 0x8(%rsp)
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x28(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movl	iterations(%rip), %r10d
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	testl	%r10d, %r10d
    0000003e: 	jle	.Ltmp670 # Offset: 62
    00000044: 	xorl	%r12d, %r12d
    00000047: 	leaq	DATAat0x15182(%rip), %r15
    0000004e: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r14
.Ltmp678:
    00000055: 	testl	%ebx, %ebx
    00000057: 	jle	.Ltmp671 # Offset: 87
    0000005d: 	movq	0x8(%rsp), %rax
    00000062: 	movslq	%ebx, %r9
    00000065: 	xorl	%edi, %edi
    00000067: 	xorl	%r8d, %r8d
    0000006a: 	leaq	0x3d0ce40(%rax), %rsi
    00000071: 	nopl	(%rax) # Size: 7
.Ltmp674:
    00000078: 	leaq	-0x3d09000(%rsi), %rdx
    0000007f: 	leaq	-0x3d0ce40(%rsi), %rcx
    00000086: 	xorl	%r11d, %r11d
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp673:
    00000090: 	movq	%rcx, %rax
    00000093: 	pxor	%xmm1, %xmm1
    00000097: 	nopw	(%rax,%rax) # Size: 9
.Ltmp672:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	movdqu	0x10(%rax), %xmm3
    000000a9: 	addq	$0x40, %rax
    000000ad: 	movdqu	-0x20(%rax), %xmm2
    000000b2: 	movdqu	-0x10(%rax), %xmm4
    000000b7: 	shufps	$0x88, %xmm3, %xmm0
    000000bb: 	shufps	$0x88, %xmm4, %xmm2
    000000bf: 	shufps	$0x88, %xmm2, %xmm0
    000000c3: 	paddd	%xmm0, %xmm1
    000000c7: 	cmpq	%rax, %rdx
    000000ca: 	jne	.Ltmp672 # Offset: 202
    000000cc: 	movdqa	%xmm1, %xmm0
    000000d0: 	addq	$0x3e80, %rdx
    000000d7: 	addq	$0x3e80, %rcx
    000000de: 	psrldq	$0x8, %xmm0
    000000e3: 	paddd	%xmm0, %xmm1
    000000e7: 	movdqa	%xmm1, %xmm0
    000000eb: 	psrldq	$0x4, %xmm0
    000000f0: 	paddd	%xmm0, %xmm1
    000000f4: 	movd	%xmm1, %eax
    000000f8: 	addl	%r11d, %eax
    000000fb: 	addl	-0x3e80(%rdx), %eax
    00000101: 	addl	-0x3e70(%rdx), %eax
    00000107: 	addl	-0x3e60(%rdx), %eax
    0000010d: 	addl	-0x3e50(%rdx), %eax
    00000113: 	movl	%eax, %r11d
    00000116: 	cmpq	%rsi, %rdx
    00000119: 	jne	.Ltmp673 # Offset: 281
    0000011f: 	addq	$0x1, %rdi
    00000123: 	addl	%eax, %r8d
    00000126: 	addq	$0x4, %rsi
    0000012a: 	cmpq	%r9, %rdi
    0000012d: 	jne	.Ltmp674 # Offset: 301
.Ltmp687:
    00000133: 	cvttsd2si	init_value(%rip), %r9d
    0000013c: 	movl	%r8d, 0x1c(%rsp)
    00000141: 	imull	%ebx, %r9d
    00000145: 	imull	$0x3d0900, %r9d, %r9d
    0000014c: 	cmpl	%r8d, %r9d
    0000014f: 	movl	%r9d, 0x10(%rsp)
    00000154: 	je	.Ltmp675 # Offset: 340
    0000015a: 	movl	$0x5, %edx
    0000015f: 	movq	%r15, %rsi
    00000162: 	movq	%r14, %rdi
    00000165: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 357
    0000016a: 	movq	0x8(%rbp), %rdx
    0000016e: 	movq	(%rbp), %rsi
    00000172: 	movq	%r14, %rdi
    00000175: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 373
    0000017a: 	movl	$0x12, %edx
    0000017f: 	leaq	DATAat0x15188(%rip), %rsi
    00000186: 	movq	%rax, %rdi
    00000189: 	movq	%rax, %r13
    0000018c: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 396
    00000191: 	movl	0x10(%rsp), %esi
    00000195: 	movq	%r13, %rdi
    00000198: 	callq	_ZNSolsEi@PLT # Offset: 408
    0000019d: 	movl	$0x5, %edx
    000001a2: 	leaq	DATAat0x1519b(%rip), %rsi
    000001a9: 	movq	%rax, %rdi
    000001ac: 	movq	%rax, %r13
    000001af: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 431
    000001b4: 	movl	0x1c(%rsp), %esi
    000001b8: 	movq	%r13, %rdi
    000001bb: 	callq	_ZNSolsEi@PLT # Offset: 443
    000001c0: 	movq	%rax, %r13
    000001c3: 	movq	(%rax), %rax
    000001c6: 	movq	-0x18(%rax), %rax
    000001ca: 	movq	0xf0(%r13,%rax), %rdi
    000001d2: 	testq	%rdi, %rdi
    000001d5: 	je	.Ltmp676 # Offset: 469
    000001db: 	cmpb	$0x0, 0x38(%rdi)
    000001df: 	je	.Ltmp677 # Offset: 479
    000001e5: 	movsbl	0x43(%rdi), %esi
.Ltmp686:
    000001e9: 	movq	%r13, %rdi
    000001ec: 	callq	_ZNSo3putEc@PLT # Offset: 492
    000001f1: 	movq	%rax, %rdi
    000001f4: 	callq	_ZNSo5flushEv@PLT # Offset: 500
    000001f9: 	movl	iterations(%rip), %r10d
.Ltmp675:
    00000200: 	addl	$0x1, %r12d
    00000204: 	cmpl	%r10d, %r12d
    00000207: 	jl	.Ltmp678 # Offset: 519
.Ltmp670:
    0000020d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000214: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000021b: 	subq	$0x20, %rax
    0000021f: 	cmpq	%rax, %rbx
    00000222: 	je	.Ltmp679 # Offset: 546
    00000228: 	leaq	0x10(%rbx), %rdi
    0000022c: 	movq	0x8(%rbp), %r12
    00000230: 	movq	%rdi, (%rbx)
    00000233: 	movq	(%rbp), %r13
    00000237: 	movq	%r13, %rax
    0000023a: 	addq	%r12, %rax
    0000023d: 	je	.Ltmp680 # Offset: 573
    0000023f: 	testq	%r13, %r13
    00000242: 	je	.Ltmp681 # Offset: 578
.Ltmp680:
    00000248: 	movq	%r12, 0x20(%rsp)
    0000024d: 	cmpq	$0xf, %r12
    00000251: 	ja	.Ltmp682 # Offset: 593
    00000257: 	cmpq	$0x1, %r12
    0000025b: 	jne	.Ltmp683 # Offset: 603
    00000261: 	movzbl	(%r13), %eax
    00000266: 	movb	%al, 0x10(%rbx)
.Ltmp689:
    00000269: 	movq	%r12, 0x8(%rbx)
    0000026d: 	movb	$0x0, (%rdi,%r12)
    00000272: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000279: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000280: 	addq	$0x20, %rax
    00000284: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000292: 	je	.Ltmp684 # Offset: 658
.Ltmp688:
    00000298: 	movq	-0x20(%rax), %rbp
    0000029c: 	callq	clock@PLT # Offset: 668
    000002a1: 	movq	%rax, end_time(%rip)
    000002a8: 	movq	0x28(%rsp), %rdx
    000002ad: 	subq	%fs:0x28, %rdx
    000002b6: 	jne	.Ltmp685 # Offset: 694
    000002bc: 	subq	start_time(%rip), %rax
    000002c3: 	pxor	%xmm0, %xmm0
    000002c7: 	movq	%rbp, %rdi
    000002ca: 	cvtsi2sd	%rax, %xmm0
    000002cf: 	divsd	DATAat0x15758(%rip), %xmm0
    000002d7: 	addq	$0x38, %rsp
    000002db: 	popq	%rbx
    000002dc: 	popq	%rbp
    000002dd: 	popq	%r12
    000002df: 	popq	%r13
    000002e1: 	popq	%r14
    000002e3: 	popq	%r15
    000002e5: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 741
.Ltmp677:
    000002ea: 	movq	%rdi, 0x10(%rsp)
    000002ef: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 751
    000002f4: 	movq	0x10(%rsp), %rdi
    000002f9: 	movl	$0xa, %esi
    000002fe: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000305: 	movq	(%rdi), %rax
    00000308: 	movq	0x30(%rax), %rax
    0000030c: 	cmpq	%rdx, %rax
    0000030f: 	je	.Ltmp686 # Offset: 783
    00000315: 	callq	*%rax # Offset: 789
    00000317: 	movsbl	%al, %esi
    0000031a: 	jmp	.Ltmp686 # Offset: 794
.Ltmp671:
    0000031f: 	xorl	%r8d, %r8d
    00000322: 	jmp	.Ltmp687 # Offset: 802
.Ltmp679:
    00000327: 	movq	%rbp, %rsi
    0000032a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000331: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 817
    00000336: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000033d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000344: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000034b: 	jne	.Ltmp688 # Offset: 843
.Ltmp684:
    00000351: 	movq	-0x8(%rdx), %rax
    00000355: 	addq	$0x200, %rax
    0000035b: 	jmp	.Ltmp688 # Offset: 859
.Ltmp683:
    00000360: 	testq	%r12, %r12
    00000363: 	je	.Ltmp689 # Offset: 867
    00000369: 	jmp	.Ltmp690 # Offset: 873
    0000036b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp682:
    00000370: 	movq	%rbx, %rdi
    00000373: 	leaq	0x20(%rsp), %rsi
    00000378: 	xorl	%edx, %edx
    0000037a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 890
    0000037f: 	movq	%rax, (%rbx)
    00000382: 	movq	%rax, %rdi
    00000385: 	movq	0x20(%rsp), %rax
    0000038a: 	movq	%rax, 0x10(%rbx)
.Ltmp690:
    0000038e: 	movq	%r12, %rdx
    00000391: 	movq	%r13, %rsi
    00000394: 	callq	memcpy@PLT # Offset: 916
    00000399: 	movq	0x20(%rsp), %r12
    0000039e: 	movq	(%rbx), %rdi
    000003a1: 	jmp	.Ltmp689 # Offset: 929
.Ltmp685:
    000003a6: 	callq	__stack_chk_fail@PLT # Offset: 934
.Ltmp681:
    000003ab: 	leaq	DATAat0x15110(%rip), %rdi
    000003b2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 946
    000003b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp676:
    000003c0: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 960
DWARF CFI Instructions:
    <empty>
End of Function "_Z29test_loop_2D_flat_chan_revCYXIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z29test_loop_2D_flat_chan_revXYCIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z29test_loop_2D_flat_chan_revXYCIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z29test_loop_2D_flat_chan_revXYCIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 81
  State       : disassembled
  Address     : 0xb090
  Size        : 0x405
  MaxSize     : 0x410
  Offset      : 0xb090
  Section     : .text
  Orc Section : .local.text._Z29test_loop_2D_flat_chan_revXYCIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB080:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	movq	%rdi, %rbp
    0000000c: 	pushq	%rbx
    0000000d: 	movl	%esi, %ebx
    0000000f: 	subq	$0x48, %rsp
    00000013: 	movq	%rdx, 0x8(%rsp)
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x38(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movl	iterations(%rip), %ecx
    00000033: 	movq	%rax, start_time(%rip)
    0000003a: 	testl	%ecx, %ecx
    0000003c: 	jle	.Ltmp691 # Offset: 60
    00000042: 	movl	%ebx, %eax
    00000044: 	leaq	0x3d0ce80(%rbp), %r12
    0000004b: 	leal	-0x1(%rbx), %r14d
    0000004f: 	movl	%ebx, %r13d
    00000052: 	shrl	$0x2, %eax
    00000055: 	movl	$0x0, 0x28(%rsp)
    0000005d: 	andl	$-0x4, %r13d
    00000061: 	leal	-0x1(%rax), %r15d
    00000065: 	leaq	0x3d09000(%rbp), %rax
    0000006c: 	movq	%r12, 0x18(%rsp)
    00000071: 	movq	%rax, 0x10(%rsp)
    00000076: 	addq	$0x1, %r15
    0000007a: 	shlq	$0x4, %r15
.Ltmp700:
    0000007e: 	movq	0x10(%rsp), %r9
    00000083: 	movq	0x18(%rsp), %r8
    00000088: 	xorl	%r10d, %r10d
    0000008b: 	xorl	%r12d, %r12d
    0000008e: 	nop # Size: 2
.Ltmp696:
    00000090: 	movl	%r10d, %edi
    00000093: 	leaq	-0x3d09000(%r9), %rsi
    0000009a: 	xorl	%edx, %edx
    0000009c: 	nopl	(%rax) # Size: 4
.Ltmp695:
    000000a0: 	testl	%ebx, %ebx
    000000a2: 	jle	.Ltmp692 # Offset: 162
    000000a8: 	cmpl	$0x2, %r14d
    000000ac: 	jbe	.Ltmp693 # Offset: 172
    000000b2: 	leaq	(%r15,%rsi), %r11
    000000b6: 	movq	%rsi, %rax
    000000b9: 	pxor	%xmm0, %xmm0
    000000bd: 	nopl	(%rax) # Size: 3
.Ltmp694:
    000000c0: 	movdqu	(%rax), %xmm2
    000000c4: 	addq	$0x10, %rax
    000000c8: 	paddd	%xmm2, %xmm0
    000000cc: 	cmpq	%rax, %r11
    000000cf: 	jne	.Ltmp694 # Offset: 207
    000000d1: 	movdqa	%xmm0, %xmm1
    000000d5: 	psrldq	$0x8, %xmm1
    000000da: 	paddd	%xmm1, %xmm0
    000000de: 	movdqa	%xmm0, %xmm1
    000000e2: 	psrldq	$0x4, %xmm1
    000000e7: 	paddd	%xmm1, %xmm0
    000000eb: 	movd	%xmm0, %eax
    000000ef: 	addl	%eax, %edx
    000000f1: 	movl	%r13d, %eax
    000000f4: 	cmpl	%ebx, %r13d
    000000f7: 	je	.Ltmp692 # Offset: 247
.Ltmp708:
    000000f9: 	leal	(%rdi,%rax), %r11d
    000000fd: 	movslq	%r11d, %r11
    00000100: 	addl	(%rbp,%r11,4), %edx
    00000105: 	leal	0x1(%rax), %r11d
    00000109: 	cmpl	%ebx, %r11d
    0000010c: 	jge	.Ltmp692 # Offset: 268
    0000010e: 	addl	%edi, %r11d
    00000111: 	addl	$0x2, %eax
    00000114: 	movslq	%r11d, %r11
    00000117: 	addl	(%rbp,%r11,4), %edx
    0000011c: 	cmpl	%eax, %ebx
    0000011e: 	jle	.Ltmp692 # Offset: 286
    00000120: 	addl	%edi, %eax
    00000122: 	cltq
    00000124: 	addl	(%rbp,%rax,4), %edx
.Ltmp692:
    00000128: 	addq	$0x3e80, %rsi
    0000012f: 	addl	$0xfa0, %edi
    00000135: 	cmpq	%r9, %rsi
    00000138: 	jne	.Ltmp695 # Offset: 312
    0000013e: 	leaq	0x10(%rsi), %r9
    00000142: 	addl	%edx, %r12d
    00000145: 	addq	$0x4, %r10
    00000149: 	cmpq	%r8, %r9
    0000014c: 	jne	.Ltmp696 # Offset: 332
    00000152: 	cvttsd2si	init_value(%rip), %r9d
    0000015b: 	imull	%ebx, %r9d
    0000015f: 	imull	$0x3d0900, %r9d, %r9d
    00000166: 	cmpl	%r9d, %r12d
    00000169: 	movl	%r9d, 0x2c(%rsp)
    0000016e: 	je	.Ltmp697 # Offset: 366
    00000174: 	movl	$0x5, %edx
    00000179: 	leaq	DATAat0x15182(%rip), %rsi
    00000180: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    00000187: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 391
    0000018c: 	movq	0x8(%rsp), %rax
    00000191: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    00000198: 	movq	0x8(%rax), %rdx
    0000019c: 	movq	(%rax), %rsi
    0000019f: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 415
    000001a4: 	movl	$0x12, %edx
    000001a9: 	leaq	DATAat0x15188(%rip), %rsi
    000001b0: 	movq	%rax, %rdi
    000001b3: 	movq	%rax, 0x20(%rsp)
    000001b8: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 440
    000001bd: 	movl	0x2c(%rsp), %esi
    000001c1: 	movq	0x20(%rsp), %rdi
    000001c6: 	callq	_ZNSolsEi@PLT # Offset: 454
    000001cb: 	movl	$0x5, %edx
    000001d0: 	leaq	DATAat0x1519b(%rip), %rsi
    000001d7: 	movq	%rax, %rdi
    000001da: 	movq	%rax, 0x20(%rsp)
    000001df: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 479
    000001e4: 	movq	0x20(%rsp), %rdi
    000001e9: 	movl	%r12d, %esi
    000001ec: 	callq	_ZNSolsEi@PLT # Offset: 492
    000001f1: 	movq	%rax, %r9
    000001f4: 	movq	(%rax), %rax
    000001f7: 	movq	-0x18(%rax), %rax
    000001fb: 	movq	0xf0(%r9,%rax), %r12
    00000203: 	testq	%r12, %r12
    00000206: 	je	.Ltmp698 # Offset: 518
    0000020c: 	cmpb	$0x0, 0x38(%r12)
    00000212: 	je	.Ltmp699 # Offset: 530
    00000218: 	movsbl	0x43(%r12), %esi
.Ltmp709:
    0000021e: 	movq	%r9, %rdi
    00000221: 	callq	_ZNSo3putEc@PLT # Offset: 545
    00000226: 	movq	%rax, %rdi
    00000229: 	callq	_ZNSo5flushEv@PLT # Offset: 553
    0000022e: 	movl	iterations(%rip), %ecx
.Ltmp697:
    00000234: 	addl	$0x1, 0x28(%rsp)
    00000239: 	movl	0x28(%rsp), %eax
    0000023d: 	cmpl	%ecx, %eax
    0000023f: 	jl	.Ltmp700 # Offset: 575
.Ltmp691:
    00000245: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000024c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000253: 	subq	$0x20, %rax
    00000257: 	cmpq	%rax, %rbx
    0000025a: 	je	.Ltmp701 # Offset: 602
    00000260: 	movq	0x8(%rsp), %rax
    00000265: 	leaq	0x10(%rbx), %rdi
    00000269: 	movq	%rdi, (%rbx)
    0000026c: 	movq	(%rax), %rbp
    0000026f: 	movq	0x8(%rax), %r12
    00000273: 	movq	%rbp, %rax
    00000276: 	addq	%r12, %rax
    00000279: 	je	.Ltmp702 # Offset: 633
    0000027b: 	testq	%rbp, %rbp
    0000027e: 	je	.Ltmp703 # Offset: 638
.Ltmp702:
    00000284: 	movq	%r12, 0x30(%rsp)
    00000289: 	cmpq	$0xf, %r12
    0000028d: 	ja	.Ltmp704 # Offset: 653
    00000293: 	cmpq	$0x1, %r12
    00000297: 	jne	.Ltmp705 # Offset: 663
    0000029d: 	movzbl	(%rbp), %eax
    000002a1: 	movb	%al, 0x10(%rbx)
.Ltmp711:
    000002a4: 	movq	%r12, 0x8(%rbx)
    000002a8: 	movb	$0x0, (%rdi,%r12)
    000002ad: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002b4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002bb: 	addq	$0x20, %rax
    000002bf: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002c6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002cd: 	je	.Ltmp706 # Offset: 717
.Ltmp710:
    000002d3: 	movq	-0x20(%rax), %rbp
    000002d7: 	callq	clock@PLT # Offset: 727
    000002dc: 	movq	%rax, end_time(%rip)
    000002e3: 	movq	0x38(%rsp), %rdx
    000002e8: 	subq	%fs:0x28, %rdx
    000002f1: 	jne	.Ltmp707 # Offset: 753
    000002f7: 	subq	start_time(%rip), %rax
    000002fe: 	pxor	%xmm0, %xmm0
    00000302: 	movq	%rbp, %rdi
    00000305: 	cvtsi2sd	%rax, %xmm0
    0000030a: 	divsd	DATAat0x15758(%rip), %xmm0
    00000312: 	addq	$0x48, %rsp
    00000316: 	popq	%rbx
    00000317: 	popq	%rbp
    00000318: 	popq	%r12
    0000031a: 	popq	%r13
    0000031c: 	popq	%r14
    0000031e: 	popq	%r15
    00000320: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 800
.Ltmp693:
    00000325: 	xorl	%eax, %eax
    00000327: 	jmp	.Ltmp708 # Offset: 807
.Ltmp699:
    0000032c: 	movq	%r12, %rdi
    0000032f: 	movq	%r9, 0x20(%rsp)
    00000334: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 820
    00000339: 	movq	(%r12), %rax
    0000033d: 	movq	0x20(%rsp), %r9
    00000342: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000349: 	movl	$0xa, %esi
    0000034e: 	movq	0x30(%rax), %rax
    00000352: 	cmpq	%rdx, %rax
    00000355: 	je	.Ltmp709 # Offset: 853
    0000035b: 	movq	%r12, %rdi
    0000035e: 	callq	*%rax # Offset: 862
    00000360: 	movq	0x20(%rsp), %r9
    00000365: 	movsbl	%al, %esi
    00000368: 	jmp	.Ltmp709 # Offset: 872
.Ltmp701:
    0000036d: 	movq	0x8(%rsp), %rsi
    00000372: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000379: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 889
    0000037e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000385: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000038c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000393: 	jne	.Ltmp710 # Offset: 915
.Ltmp706:
    00000399: 	movq	-0x8(%rdx), %rax
    0000039d: 	addq	$0x200, %rax
    000003a3: 	jmp	.Ltmp710 # Offset: 931
.Ltmp705:
    000003a8: 	testq	%r12, %r12
    000003ab: 	je	.Ltmp711 # Offset: 939
    000003b1: 	jmp	.Ltmp712 # Offset: 945
    000003b3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp704:
    000003b8: 	movq	%rbx, %rdi
    000003bb: 	leaq	0x30(%rsp), %rsi
    000003c0: 	xorl	%edx, %edx
    000003c2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 962
    000003c7: 	movq	%rax, (%rbx)
    000003ca: 	movq	%rax, %rdi
    000003cd: 	movq	0x30(%rsp), %rax
    000003d2: 	movq	%rax, 0x10(%rbx)
.Ltmp712:
    000003d6: 	movq	%r12, %rdx
    000003d9: 	movq	%rbp, %rsi
    000003dc: 	callq	memcpy@PLT # Offset: 988
    000003e1: 	movq	0x30(%rsp), %r12
    000003e6: 	movq	(%rbx), %rdi
    000003e9: 	jmp	.Ltmp711 # Offset: 1001
.Ltmp707:
    000003ee: 	callq	__stack_chk_fail@PLT # Offset: 1006
.Ltmp703:
    000003f3: 	leaq	DATAat0x15110(%rip), %rdi
    000003fa: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1018
    000003ff: 	nop # Size: 1
.Ltmp698:
    00000400: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 1024
DWARF CFI Instructions:
    <empty>
End of Function "_Z29test_loop_2D_flat_chan_revXYCIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z17test_loop_4D_ABCDIiEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 82
  State       : disassembled
  Address     : 0xb4a0
  Size        : 0x382
  MaxSize     : 0x390
  Offset      : 0xb4a0
  Section     : .text
  Orc Section : .local.text._Z17test_loop_4D_ABCDIiEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB081:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	leaq	DATAat0x15182(%rip), %r15
    0000000d: 	pushq	%r14
    0000000f: 	leaq	DATAat0x15188(%rip), %r14
    00000016: 	pushq	%r13
    00000018: 	pushq	%r12
    0000001a: 	movq	%rdi, %r12
    0000001d: 	pushq	%rbp
    0000001e: 	movq	%rsi, %rbp
    00000021: 	pushq	%rbx
    00000022: 	xorl	%ebx, %ebx
    00000024: 	subq	$0x38, %rsp
    00000028: 	movq	%fs:0x28, %rax
    00000031: 	movq	%rax, 0x28(%rsp)
    00000036: 	xorl	%eax, %eax
    00000038: 	callq	clock@PLT # Offset: 56
    0000003d: 	movl	iterations(%rip), %r9d
    00000044: 	movq	%rax, start_time(%rip)
    0000004b: 	leaq	0x1b7730(%r12), %rax
    00000053: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r12
    0000005a: 	movq	%rax, 0x8(%rsp)
    0000005f: 	testl	%r9d, %r9d
    00000062: 	jle	.Ltmp713 # Offset: 98
.Ltmp721:
    00000068: 	movq	0x8(%rsp), %r10
    0000006d: 	xorl	%r8d, %r8d
    00000070: 	xorl	%r13d, %r13d
.Ltmp717:
    00000073: 	leaq	-0x1b1e20(%r10), %rdi
.Ltmp716:
    0000007a: 	leaq	-0x5910(%rdi), %rcx
    00000081: 	leaq	-0x57e0(%rdi), %rdx
    00000088: 	xorl	%esi, %esi
    0000008a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp715:
    00000090: 	movq	%rcx, %rax
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	nopw	(%rax,%rax) # Size: 9
.Ltmp714:
    000000a0: 	movdqu	(%rax), %xmm2
    000000a4: 	addq	$0x10, %rax
    000000a8: 	paddd	%xmm2, %xmm0
    000000ac: 	cmpq	%rdx, %rax
    000000af: 	jne	.Ltmp714 # Offset: 175
    000000b1: 	movdqa	%xmm0, %xmm1
    000000b5: 	addq	$0x130, %rcx
    000000bc: 	psrldq	$0x8, %xmm1
    000000c1: 	paddd	%xmm1, %xmm0
    000000c5: 	movdqa	%xmm0, %xmm1
    000000c9: 	psrldq	$0x4, %xmm1
    000000ce: 	paddd	%xmm1, %xmm0
    000000d2: 	movd	%xmm0, %edx
    000000d6: 	addl	%edx, %esi
    000000d8: 	leaq	0x130(%rax), %rdx
    000000df: 	cmpq	%rdi, %rdx
    000000e2: 	jne	.Ltmp715 # Offset: 226
    000000e4: 	leaq	0x5910(%rax), %rdi
    000000eb: 	addl	%esi, %r13d
    000000ee: 	cmpq	%r10, %rdi
    000000f1: 	jne	.Ltmp716 # Offset: 241
    000000f3: 	addq	$0x1b1e20, %r8
    000000fa: 	leaq	0x1b7730(%rax), %r10
    00000101: 	cmpq	$0x7f1d360, %r8
    00000108: 	jne	.Ltmp717 # Offset: 264
    0000010e: 	cvttsd2si	init_value(%rip), %r8d
    00000117: 	imull	$0x1fc74d8, %r8d, %r8d
    0000011e: 	cmpl	%r8d, %r13d
    00000121: 	movl	%r8d, 0x1c(%rsp)
    00000126: 	je	.Ltmp718 # Offset: 294
    0000012c: 	movl	$0x5, %edx
    00000131: 	movq	%r15, %rsi
    00000134: 	movq	%r12, %rdi
    00000137: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 311
    0000013c: 	movq	0x8(%rbp), %rdx
    00000140: 	movq	(%rbp), %rsi
    00000144: 	movq	%r12, %rdi
    00000147: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 327
    0000014c: 	movl	$0x12, %edx
    00000151: 	movq	%r14, %rsi
    00000154: 	movq	%rax, %rdi
    00000157: 	movq	%rax, 0x10(%rsp)
    0000015c: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 348
    00000161: 	movl	0x1c(%rsp), %esi
    00000165: 	movq	0x10(%rsp), %rdi
    0000016a: 	callq	_ZNSolsEi@PLT # Offset: 362
    0000016f: 	movl	$0x5, %edx
    00000174: 	leaq	DATAat0x1519b(%rip), %rsi
    0000017b: 	movq	%rax, %rdi
    0000017e: 	movq	%rax, 0x10(%rsp)
    00000183: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 387
    00000188: 	movq	0x10(%rsp), %rdi
    0000018d: 	movl	%r13d, %esi
    00000190: 	callq	_ZNSolsEi@PLT # Offset: 400
    00000195: 	movq	%rax, %r8
    00000198: 	movq	(%rax), %rax
    0000019b: 	movq	-0x18(%rax), %rax
    0000019f: 	movq	0xf0(%r8,%rax), %r13
    000001a7: 	testq	%r13, %r13
    000001aa: 	je	.Ltmp719 # Offset: 426
    000001b0: 	cmpb	$0x0, 0x38(%r13)
    000001b5: 	je	.Ltmp720 # Offset: 437
    000001bb: 	movsbl	0x43(%r13), %esi
.Ltmp728:
    000001c0: 	movq	%r8, %rdi
    000001c3: 	callq	_ZNSo3putEc@PLT # Offset: 451
    000001c8: 	movq	%rax, %rdi
    000001cb: 	callq	_ZNSo5flushEv@PLT # Offset: 459
    000001d0: 	movl	iterations(%rip), %r9d
.Ltmp718:
    000001d7: 	addl	$0x1, %ebx
    000001da: 	cmpl	%r9d, %ebx
    000001dd: 	jl	.Ltmp721 # Offset: 477
.Ltmp713:
    000001e3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001ea: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001f1: 	subq	$0x20, %rax
    000001f5: 	cmpq	%rax, %rbx
    000001f8: 	je	.Ltmp722 # Offset: 504
    000001fe: 	leaq	0x10(%rbx), %rdi
    00000202: 	movq	0x8(%rbp), %r12
    00000206: 	movq	%rdi, (%rbx)
    00000209: 	movq	(%rbp), %r13
    0000020d: 	movq	%r13, %rax
    00000210: 	addq	%r12, %rax
    00000213: 	je	.Ltmp723 # Offset: 531
    00000215: 	testq	%r13, %r13
    00000218: 	je	.Ltmp724 # Offset: 536
.Ltmp723:
    0000021e: 	movq	%r12, 0x20(%rsp)
    00000223: 	cmpq	$0xf, %r12
    00000227: 	ja	.Ltmp725 # Offset: 551
    0000022d: 	cmpq	$0x1, %r12
    00000231: 	jne	.Ltmp726 # Offset: 561
    00000237: 	movzbl	(%r13), %eax
    0000023c: 	movb	%al, 0x10(%rbx)
.Ltmp731:
    0000023f: 	movq	%r12, 0x8(%rbx)
    00000243: 	movb	$0x0, (%rdi,%r12)
    00000248: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000024f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000256: 	addq	$0x20, %rax
    0000025a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000261: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000268: 	jne	.Ltmp727 # Offset: 616
.Ltmp729:
    0000026a: 	movq	-0x8(%rdx), %rax
    0000026e: 	addq	$0x200, %rax
    00000274: 	jmp	.Ltmp727 # Offset: 628
.Ltmp720:
    00000276: 	movq	%r13, %rdi
    00000279: 	movq	%r8, 0x10(%rsp)
    0000027e: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 638
    00000283: 	movq	(%r13), %rax
    00000287: 	movq	0x10(%rsp), %r8
    0000028c: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000293: 	movl	$0xa, %esi
    00000298: 	movq	0x30(%rax), %rax
    0000029c: 	cmpq	%rdx, %rax
    0000029f: 	je	.Ltmp728 # Offset: 671
    000002a5: 	movq	%r13, %rdi
    000002a8: 	callq	*%rax # Offset: 680
    000002aa: 	movq	0x10(%rsp), %r8
    000002af: 	movsbl	%al, %esi
    000002b2: 	jmp	.Ltmp728 # Offset: 690
.Ltmp722:
    000002b7: 	movq	%rbp, %rsi
    000002ba: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002c1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 705
    000002c6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002cd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002d4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002db: 	je	.Ltmp729 # Offset: 731
.Ltmp727:
    000002dd: 	movq	-0x20(%rax), %rbp
    000002e1: 	callq	clock@PLT # Offset: 737
    000002e6: 	movq	%rax, end_time(%rip)
    000002ed: 	movq	0x28(%rsp), %rdx
    000002f2: 	subq	%fs:0x28, %rdx
    000002fb: 	jne	.Ltmp730 # Offset: 763
    000002fd: 	subq	start_time(%rip), %rax
    00000304: 	pxor	%xmm0, %xmm0
    00000308: 	movq	%rbp, %rdi
    0000030b: 	cvtsi2sd	%rax, %xmm0
    00000310: 	divsd	DATAat0x15758(%rip), %xmm0
    00000318: 	addq	$0x38, %rsp
    0000031c: 	popq	%rbx
    0000031d: 	popq	%rbp
    0000031e: 	popq	%r12
    00000320: 	popq	%r13
    00000322: 	popq	%r14
    00000324: 	popq	%r15
    00000326: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 806
.Ltmp725:
    0000032b: 	movq	%rbx, %rdi
    0000032e: 	leaq	0x20(%rsp), %rsi
    00000333: 	xorl	%edx, %edx
    00000335: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 821
    0000033a: 	movq	%rax, (%rbx)
    0000033d: 	movq	%rax, %rdi
    00000340: 	movq	0x20(%rsp), %rax
    00000345: 	movq	%rax, 0x10(%rbx)
.Ltmp732:
    00000349: 	movq	%r12, %rdx
    0000034c: 	movq	%r13, %rsi
    0000034f: 	callq	memcpy@PLT # Offset: 847
    00000354: 	movq	0x20(%rsp), %r12
    00000359: 	movq	(%rbx), %rdi
    0000035c: 	jmp	.Ltmp731 # Offset: 860
.Ltmp726:
    00000361: 	testq	%r12, %r12
    00000364: 	je	.Ltmp731 # Offset: 868
    0000036a: 	jmp	.Ltmp732 # Offset: 874
.Ltmp730:
    0000036c: 	callq	__stack_chk_fail@PLT # Offset: 876
.Ltmp719:
    00000371: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 881
.Ltmp724:
    00000376: 	leaq	DATAat0x15110(%rip), %rdi
    0000037d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 893
DWARF CFI Instructions:
    <empty>
End of Function "_Z17test_loop_4D_ABCDIiEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z27test_loop_2D_flat_chan_opt2IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z27test_loop_2D_flat_chan_opt2IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z27test_loop_2D_flat_chan_opt2IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 83
  State       : disassembled
  Address     : 0xb830
  Size        : 0x405
  MaxSize     : 0x410
  Offset      : 0xb830
  Section     : .text
  Orc Section : .local.text._Z27test_loop_2D_flat_chan_opt2IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB082:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	movq	%rdi, %r12
    0000000b: 	pushq	%rbp
    0000000c: 	movq	%rdx, %rbp
    0000000f: 	pushq	%rbx
    00000010: 	movl	%esi, %ebx
    00000012: 	subq	$0x38, %rsp
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x28(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	callq	clock@PLT # Offset: 38
    0000002b: 	movl	iterations(%rip), %r10d
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	testl	%r10d, %r10d
    0000003c: 	jle	.Ltmp733 # Offset: 60
    00000042: 	movl	%ebx, %eax
    00000044: 	movl	$0x0, 0x18(%rsp)
    0000004c: 	movl	%ebx, %r13d
    0000004f: 	leal	-0x1(%rbx), %r14d
    00000053: 	shrl	$0x2, %eax
    00000056: 	andl	$-0x4, %r13d
    0000005a: 	leal	-0x1(%rax), %r15d
    0000005e: 	leaq	0x3e80(%r12), %rax
    00000066: 	movq	%rax, (%rsp)
    0000006a: 	addq	$0x1, %r15
    0000006e: 	shlq	$0x4, %r15
.Ltmp742:
    00000072: 	movq	(%rsp), %rdi
    00000076: 	xorl	%r9d, %r9d
    00000079: 	xorl	%r8d, %r8d
    0000007c: 	nopl	(%rax) # Size: 4
.Ltmp738:
    00000080: 	leaq	(,%r9,4), %rsi
    00000088: 	leaq	-0x3e80(%rdi), %rcx
    0000008f: 	xorl	%edx, %edx
    00000091: 	nopl	(%rax) # Size: 7
.Ltmp737:
    00000098: 	testl	%ebx, %ebx
    0000009a: 	jle	.Ltmp734 # Offset: 154
    000000a0: 	cmpl	$0x2, %r14d
    000000a4: 	jbe	.Ltmp735 # Offset: 164
    000000aa: 	leaq	(%r15,%rcx), %r11
    000000ae: 	movq	%rcx, %rax
    000000b1: 	pxor	%xmm0, %xmm0
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp736:
    000000b8: 	movdqu	(%rax), %xmm2
    000000bc: 	addq	$0x10, %rax
    000000c0: 	paddd	%xmm2, %xmm0
    000000c4: 	cmpq	%rax, %r11
    000000c7: 	jne	.Ltmp736 # Offset: 199
    000000c9: 	movdqa	%xmm0, %xmm1
    000000cd: 	psrldq	$0x8, %xmm1
    000000d2: 	paddd	%xmm1, %xmm0
    000000d6: 	movdqa	%xmm0, %xmm1
    000000da: 	psrldq	$0x4, %xmm1
    000000df: 	paddd	%xmm1, %xmm0
    000000e3: 	movd	%xmm0, %eax
    000000e7: 	addl	%eax, %edx
    000000e9: 	movl	%r13d, %eax
    000000ec: 	cmpl	%ebx, %r13d
    000000ef: 	je	.Ltmp734 # Offset: 239
.Ltmp750:
    000000f1: 	movslq	%eax, %r11
    000000f4: 	addq	%rsi, %r11
    000000f7: 	addl	(%r12,%r11,4), %edx
    000000fb: 	leal	0x1(%rax), %r11d
    000000ff: 	cmpl	%ebx, %r11d
    00000102: 	jge	.Ltmp734 # Offset: 258
    00000104: 	movslq	%r11d, %r11
    00000107: 	addl	$0x2, %eax
    0000010a: 	addq	%rsi, %r11
    0000010d: 	addl	(%r12,%r11,4), %edx
    00000111: 	cmpl	%eax, %ebx
    00000113: 	jle	.Ltmp734 # Offset: 275
    00000115: 	cltq
    00000117: 	addq	%rsi, %rax
    0000011a: 	addl	(%r12,%rax,4), %edx
.Ltmp734:
    0000011e: 	addq	$0x10, %rcx
    00000122: 	addq	$0x4, %rsi
    00000126: 	cmpq	%rdi, %rcx
    00000129: 	jne	.Ltmp737 # Offset: 297
    0000012f: 	addq	$0x3e8, %r9
    00000136: 	addl	%edx, %r8d
    00000139: 	leaq	0x3e80(%rcx), %rdi
    00000140: 	cmpq	$0x3d0900, %r9
    00000147: 	jne	.Ltmp738 # Offset: 327
    0000014d: 	cvttsd2si	init_value(%rip), %r9d
    00000156: 	movl	%r8d, 0x10(%rsp)
    0000015b: 	imull	%ebx, %r9d
    0000015f: 	imull	$0x3d0900, %r9d, %r9d
    00000166: 	cmpl	%r9d, %r8d
    00000169: 	movl	%r9d, 0x1c(%rsp)
    0000016e: 	je	.Ltmp739 # Offset: 366
    00000174: 	movl	$0x5, %edx
    00000179: 	leaq	DATAat0x15182(%rip), %rsi
    00000180: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    00000187: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 391
    0000018c: 	movq	0x8(%rbp), %rdx
    00000190: 	movq	(%rbp), %rsi
    00000194: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    0000019b: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 411
    000001a0: 	movl	$0x12, %edx
    000001a5: 	leaq	DATAat0x15188(%rip), %rsi
    000001ac: 	movq	%rax, %rdi
    000001af: 	movq	%rax, 0x8(%rsp)
    000001b4: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 436
    000001b9: 	movl	0x1c(%rsp), %esi
    000001bd: 	movq	0x8(%rsp), %rdi
    000001c2: 	callq	_ZNSolsEi@PLT # Offset: 450
    000001c7: 	movl	$0x5, %edx
    000001cc: 	leaq	DATAat0x1519b(%rip), %rsi
    000001d3: 	movq	%rax, %rdi
    000001d6: 	movq	%rax, 0x8(%rsp)
    000001db: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 475
    000001e0: 	movq	0x8(%rsp), %rdi
    000001e5: 	movl	0x10(%rsp), %esi
    000001e9: 	callq	_ZNSolsEi@PLT # Offset: 489
    000001ee: 	movq	%rax, %r8
    000001f1: 	movq	(%rax), %rax
    000001f4: 	movq	-0x18(%rax), %rax
    000001f8: 	movq	0xf0(%r8,%rax), %rdi
    00000200: 	testq	%rdi, %rdi
    00000203: 	je	.Ltmp740 # Offset: 515
    00000209: 	cmpb	$0x0, 0x38(%rdi)
    0000020d: 	je	.Ltmp741 # Offset: 525
    00000213: 	movsbl	0x43(%rdi), %esi
.Ltmp751:
    00000217: 	movq	%r8, %rdi
    0000021a: 	callq	_ZNSo3putEc@PLT # Offset: 538
    0000021f: 	movq	%rax, %rdi
    00000222: 	callq	_ZNSo5flushEv@PLT # Offset: 546
    00000227: 	movl	iterations(%rip), %r10d
.Ltmp739:
    0000022e: 	addl	$0x1, 0x18(%rsp)
    00000233: 	movl	0x18(%rsp), %eax
    00000237: 	cmpl	%r10d, %eax
    0000023a: 	jl	.Ltmp742 # Offset: 570
.Ltmp733:
    00000240: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000247: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000024e: 	subq	$0x20, %rax
    00000252: 	cmpq	%rax, %rbx
    00000255: 	je	.Ltmp743 # Offset: 597
    0000025b: 	leaq	0x10(%rbx), %rdi
    0000025f: 	movq	0x8(%rbp), %r12
    00000263: 	movq	%rdi, (%rbx)
    00000266: 	movq	(%rbp), %r13
    0000026a: 	movq	%r13, %rax
    0000026d: 	addq	%r12, %rax
    00000270: 	je	.Ltmp744 # Offset: 624
    00000272: 	testq	%r13, %r13
    00000275: 	je	.Ltmp745 # Offset: 629
.Ltmp744:
    0000027b: 	movq	%r12, 0x20(%rsp)
    00000280: 	cmpq	$0xf, %r12
    00000284: 	ja	.Ltmp746 # Offset: 644
    0000028a: 	cmpq	$0x1, %r12
    0000028e: 	jne	.Ltmp747 # Offset: 654
    00000294: 	movzbl	(%r13), %eax
    00000299: 	movb	%al, 0x10(%rbx)
.Ltmp753:
    0000029c: 	movq	%r12, 0x8(%rbx)
    000002a0: 	movb	$0x0, (%rdi,%r12)
    000002a5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002ac: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b3: 	addq	$0x20, %rax
    000002b7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002be: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002c5: 	je	.Ltmp748 # Offset: 709
.Ltmp752:
    000002cb: 	movq	-0x20(%rax), %rbp
    000002cf: 	callq	clock@PLT # Offset: 719
    000002d4: 	movq	%rax, end_time(%rip)
    000002db: 	movq	0x28(%rsp), %rdx
    000002e0: 	subq	%fs:0x28, %rdx
    000002e9: 	jne	.Ltmp749 # Offset: 745
    000002ef: 	subq	start_time(%rip), %rax
    000002f6: 	pxor	%xmm0, %xmm0
    000002fa: 	movq	%rbp, %rdi
    000002fd: 	cvtsi2sd	%rax, %xmm0
    00000302: 	divsd	DATAat0x15758(%rip), %xmm0
    0000030a: 	addq	$0x38, %rsp
    0000030e: 	popq	%rbx
    0000030f: 	popq	%rbp
    00000310: 	popq	%r12
    00000312: 	popq	%r13
    00000314: 	popq	%r14
    00000316: 	popq	%r15
    00000318: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 792
.Ltmp735:
    0000031d: 	xorl	%eax, %eax
    0000031f: 	jmp	.Ltmp750 # Offset: 799
.Ltmp741:
    00000324: 	movq	%r8, 0x10(%rsp)
    00000329: 	movq	%rdi, 0x8(%rsp)
    0000032e: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 814
    00000333: 	movq	0x8(%rsp), %rdi
    00000338: 	movq	0x10(%rsp), %r8
    0000033d: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000344: 	movl	$0xa, %esi
    00000349: 	movq	(%rdi), %rax
    0000034c: 	movq	0x30(%rax), %rax
    00000350: 	cmpq	%rdx, %rax
    00000353: 	je	.Ltmp751 # Offset: 851
    00000359: 	movq	%r8, 0x8(%rsp)
    0000035e: 	callq	*%rax # Offset: 862
    00000360: 	movq	0x8(%rsp), %r8
    00000365: 	movsbl	%al, %esi
    00000368: 	jmp	.Ltmp751 # Offset: 872
.Ltmp743:
    0000036d: 	movq	%rbp, %rsi
    00000370: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000377: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 887
    0000037c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000383: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000038a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000391: 	jne	.Ltmp752 # Offset: 913
.Ltmp748:
    00000397: 	movq	-0x8(%rdx), %rax
    0000039b: 	addq	$0x200, %rax
    000003a1: 	jmp	.Ltmp752 # Offset: 929
.Ltmp747:
    000003a6: 	testq	%r12, %r12
    000003a9: 	je	.Ltmp753 # Offset: 937
    000003af: 	jmp	.Ltmp754 # Offset: 943
    000003b1: 	nopl	(%rax) # Size: 7
.Ltmp746:
    000003b8: 	movq	%rbx, %rdi
    000003bb: 	leaq	0x20(%rsp), %rsi
    000003c0: 	xorl	%edx, %edx
    000003c2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 962
    000003c7: 	movq	%rax, (%rbx)
    000003ca: 	movq	%rax, %rdi
    000003cd: 	movq	0x20(%rsp), %rax
    000003d2: 	movq	%rax, 0x10(%rbx)
.Ltmp754:
    000003d6: 	movq	%r12, %rdx
    000003d9: 	movq	%r13, %rsi
    000003dc: 	callq	memcpy@PLT # Offset: 988
    000003e1: 	movq	0x20(%rsp), %r12
    000003e6: 	movq	(%rbx), %rdi
    000003e9: 	jmp	.Ltmp753 # Offset: 1001
.Ltmp749:
    000003ee: 	callq	__stack_chk_fail@PLT # Offset: 1006
.Ltmp745:
    000003f3: 	leaq	DATAat0x15110(%rip), %rdi
    000003fa: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1018
    000003ff: 	nop # Size: 1
.Ltmp740:
    00000400: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 1024
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_loop_2D_flat_chan_opt2IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z29test_loop_2D_flat_chan_revCYXIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z29test_loop_2D_flat_chan_revCYXIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z29test_loop_2D_flat_chan_revCYXIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 84
  State       : disassembled
  Address     : 0xbc40
  Size        : 0x3e5
  MaxSize     : 0x3f0
  Offset      : 0xbc40
  Section     : .text
  Orc Section : .local.text._Z29test_loop_2D_flat_chan_revCYXIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB083:
    00000000: 	pushq	%r15
    00000002: 	movq	%rdi, %r15
    00000005: 	pushq	%r14
    00000007: 	pushq	%r13
    00000009: 	pushq	%r12
    0000000b: 	pushq	%rbp
    0000000c: 	movq	%rdx, %rbp
    0000000f: 	pushq	%rbx
    00000010: 	movl	%esi, %ebx
    00000012: 	subq	$0x28, %rsp
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x18(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	callq	clock@PLT # Offset: 38
    0000002b: 	movl	iterations(%rip), %r11d
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	testl	%r11d, %r11d
    0000003c: 	jle	.Ltmp755 # Offset: 60
    00000042: 	movdqa	DATAat0x157a0(%rip), %xmm2
    0000004a: 	xorl	%r12d, %r12d
.Ltmp762:
    0000004d: 	testl	%ebx, %ebx
    0000004f: 	jle	.Ltmp756 # Offset: 79
    00000055: 	leaq	0xf43380(%r15), %rdi
    0000005c: 	movslq	%ebx, %r9
    0000005f: 	xorl	%r8d, %r8d
    00000062: 	xorl	%r13d, %r13d
    00000065: 	pxor	%xmm5, %xmm5
    00000069: 	nopl	(%rax) # Size: 7
.Ltmp759:
    00000070: 	leaq	-0xf42400(%rdi), %rcx
    00000077: 	leaq	(%r15,%r8), %rsi
    0000007b: 	xorl	%edx, %edx
    0000007d: 	nopl	(%rax) # Size: 3
.Ltmp758:
    00000080: 	movq	%rsi, %rax
    00000083: 	pxor	%xmm4, %xmm4
    00000087: 	nopw	(%rax,%rax) # Size: 9
.Ltmp757:
    00000090: 	movdqu	(%rax), %xmm0
    00000094: 	movdqu	0x10(%rax), %xmm1
    00000099: 	addq	$0x40, %rax
    0000009d: 	movdqu	-0x10(%rax), %xmm3
    000000a2: 	pand	%xmm2, %xmm1
    000000a6: 	pand	%xmm2, %xmm0
    000000aa: 	packuswb	%xmm1, %xmm0
    000000ae: 	movdqu	-0x20(%rax), %xmm1
    000000b3: 	pand	%xmm2, %xmm3
    000000b7: 	pand	%xmm2, %xmm0
    000000bb: 	pand	%xmm2, %xmm1
    000000bf: 	packuswb	%xmm3, %xmm1
    000000c3: 	pand	%xmm2, %xmm1
    000000c7: 	packuswb	%xmm1, %xmm0
    000000cb: 	paddb	%xmm0, %xmm4
    000000cf: 	cmpq	%rax, %rcx
    000000d2: 	jne	.Ltmp757 # Offset: 210
    000000d4: 	movdqa	%xmm4, %xmm0
    000000d8: 	movzbl	0x4(%rcx), %eax
    000000dc: 	addb	(%rcx), %al
    000000de: 	addq	$0xfa0, %rcx
    000000e5: 	psrldq	$0x8, %xmm0
    000000ea: 	addl	%edx, %eax
    000000ec: 	addb	-0xf98(%rcx), %al
    000000f2: 	addb	-0xf94(%rcx), %al
    000000f8: 	paddb	%xmm0, %xmm4
    000000fc: 	addb	-0xf90(%rcx), %al
    00000102: 	addb	-0xf8c(%rcx), %al
    00000108: 	addq	$0xfa0, %rsi
    0000010f: 	psadbw	%xmm5, %xmm4
    00000113: 	addb	-0xf88(%rcx), %al
    00000119: 	addb	-0xf84(%rcx), %al
    0000011f: 	movd	%xmm4, %r10d
    00000124: 	leal	(%rax,%r10), %edx
    00000128: 	cmpq	%rdi, %rcx
    0000012b: 	jne	.Ltmp758 # Offset: 299
    00000131: 	addq	$0x1, %r8
    00000135: 	addl	%edx, %r13d
    00000138: 	leaq	0x1(%rcx), %rdi
    0000013c: 	cmpq	%r9, %r8
    0000013f: 	jne	.Ltmp759 # Offset: 319
    00000145: 	testb	%r13b, %r13b
    00000148: 	je	.Ltmp756 # Offset: 328
    0000014e: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r14
    00000155: 	movl	$0x5, %edx
    0000015a: 	leaq	DATAat0x15182(%rip), %rsi
    00000161: 	movq	%r14, %rdi
    00000164: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 356
    00000169: 	movq	0x8(%rbp), %rdx
    0000016d: 	movq	(%rbp), %rsi
    00000171: 	movq	%r14, %rdi
    00000174: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 372
    00000179: 	movl	$0x12, %edx
    0000017e: 	leaq	DATAat0x15188(%rip), %rsi
    00000185: 	movq	%rax, %rdi
    00000188: 	movq	%rax, %r14
    0000018b: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 395
    00000190: 	leaq	0x10(%rsp), %r8
    00000195: 	movq	%r14, %rdi
    00000198: 	movl	$0x1, %edx
    0000019d: 	movq	%r8, %rsi
    000001a0: 	movq	%r8, 0x8(%rsp)
    000001a5: 	movb	$0x0, 0x10(%rsp)
    000001aa: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 426
    000001af: 	movl	$0x5, %edx
    000001b4: 	leaq	DATAat0x1519b(%rip), %rsi
    000001bb: 	movq	%rax, %rdi
    000001be: 	movq	%rax, %r14
    000001c1: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 449
    000001c6: 	movq	0x8(%rsp), %rsi
    000001cb: 	movq	%r14, %rdi
    000001ce: 	movl	$0x1, %edx
    000001d3: 	movb	%r13b, 0x10(%rsp)
    000001d8: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 472
    000001dd: 	movq	%rax, %r14
    000001e0: 	movq	(%rax), %rax
    000001e3: 	movq	-0x18(%rax), %rax
    000001e7: 	movq	0xf0(%r14,%rax), %r13
    000001ef: 	testq	%r13, %r13
    000001f2: 	je	.Ltmp760 # Offset: 498
    000001f8: 	cmpb	$0x0, 0x38(%r13)
    000001fd: 	je	.Ltmp761 # Offset: 509
    00000203: 	movsbl	0x43(%r13), %esi
.Ltmp770:
    00000208: 	movq	%r14, %rdi
    0000020b: 	callq	_ZNSo3putEc@PLT # Offset: 523
    00000210: 	movq	%rax, %rdi
    00000213: 	callq	_ZNSo5flushEv@PLT # Offset: 531
    00000218: 	movl	iterations(%rip), %r11d
    0000021f: 	movdqa	DATAat0x157a0(%rip), %xmm2
.Ltmp756:
    00000227: 	addl	$0x1, %r12d
    0000022b: 	cmpl	%r11d, %r12d
    0000022e: 	jl	.Ltmp762 # Offset: 558
.Ltmp755:
    00000234: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000023b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000242: 	subq	$0x20, %rax
    00000246: 	cmpq	%rax, %rbx
    00000249: 	je	.Ltmp763 # Offset: 585
    0000024f: 	leaq	0x10(%rbx), %rdi
    00000253: 	movq	0x8(%rbp), %r12
    00000257: 	movq	%rdi, (%rbx)
    0000025a: 	movq	(%rbp), %r13
    0000025e: 	movq	%r13, %rax
    00000261: 	addq	%r12, %rax
    00000264: 	je	.Ltmp764 # Offset: 612
    00000266: 	testq	%r13, %r13
    00000269: 	je	.Ltmp765 # Offset: 617
.Ltmp764:
    0000026f: 	movq	%r12, 0x10(%rsp)
    00000274: 	cmpq	$0xf, %r12
    00000278: 	ja	.Ltmp766 # Offset: 632
    0000027e: 	cmpq	$0x1, %r12
    00000282: 	jne	.Ltmp767 # Offset: 642
    00000288: 	movzbl	(%r13), %eax
    0000028d: 	movb	%al, 0x10(%rbx)
.Ltmp772:
    00000290: 	movq	%r12, 0x8(%rbx)
    00000294: 	movb	$0x0, (%rdi,%r12)
    00000299: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002a7: 	addq	$0x20, %rax
    000002ab: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002b2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002b9: 	je	.Ltmp768 # Offset: 697
.Ltmp771:
    000002bf: 	movq	-0x20(%rax), %rbp
    000002c3: 	callq	clock@PLT # Offset: 707
    000002c8: 	movq	%rax, end_time(%rip)
    000002cf: 	movq	0x18(%rsp), %rdx
    000002d4: 	subq	%fs:0x28, %rdx
    000002dd: 	jne	.Ltmp769 # Offset: 733
    000002e3: 	subq	start_time(%rip), %rax
    000002ea: 	pxor	%xmm0, %xmm0
    000002ee: 	movq	%rbp, %rdi
    000002f1: 	cvtsi2sd	%rax, %xmm0
    000002f6: 	divsd	DATAat0x15758(%rip), %xmm0
    000002fe: 	addq	$0x28, %rsp
    00000302: 	popq	%rbx
    00000303: 	popq	%rbp
    00000304: 	popq	%r12
    00000306: 	popq	%r13
    00000308: 	popq	%r14
    0000030a: 	popq	%r15
    0000030c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 780
.Ltmp761:
    00000311: 	movq	%r13, %rdi
    00000314: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 788
    00000319: 	movq	(%r13), %rax
    0000031d: 	movl	$0xa, %esi
    00000322: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000329: 	movq	0x30(%rax), %rax
    0000032d: 	cmpq	%rdx, %rax
    00000330: 	je	.Ltmp770 # Offset: 816
    00000336: 	movq	%r13, %rdi
    00000339: 	callq	*%rax # Offset: 825
    0000033b: 	movsbl	%al, %esi
    0000033e: 	jmp	.Ltmp770 # Offset: 830
.Ltmp763:
    00000343: 	movq	%rbp, %rsi
    00000346: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000034d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 845
    00000352: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000359: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000360: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000367: 	jne	.Ltmp771 # Offset: 871
.Ltmp768:
    0000036d: 	movq	-0x8(%rdx), %rax
    00000371: 	addq	$0x200, %rax
    00000377: 	jmp	.Ltmp771 # Offset: 887
.Ltmp767:
    0000037c: 	testq	%r12, %r12
    0000037f: 	je	.Ltmp772 # Offset: 895
    00000385: 	jmp	.Ltmp773 # Offset: 901
    00000387: 	nopw	(%rax,%rax) # Size: 9
.Ltmp766:
    00000390: 	movq	%rbx, %rdi
    00000393: 	leaq	0x10(%rsp), %rsi
    00000398: 	xorl	%edx, %edx
    0000039a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 922
    0000039f: 	movq	%rax, (%rbx)
    000003a2: 	movq	%rax, %rdi
    000003a5: 	movq	0x10(%rsp), %rax
    000003aa: 	movq	%rax, 0x10(%rbx)
.Ltmp773:
    000003ae: 	movq	%r12, %rdx
    000003b1: 	movq	%r13, %rsi
    000003b4: 	callq	memcpy@PLT # Offset: 948
    000003b9: 	movq	0x10(%rsp), %r12
    000003be: 	movq	(%rbx), %rdi
    000003c1: 	jmp	.Ltmp772 # Offset: 961
.Ltmp769:
    000003c6: 	callq	__stack_chk_fail@PLT # Offset: 966
.Ltmp765:
    000003cb: 	leaq	DATAat0x15110(%rip), %rdi
    000003d2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 978
    000003d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp760:
    000003e0: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 992
DWARF CFI Instructions:
    <empty>
End of Function "_Z29test_loop_2D_flat_chan_revCYXIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z18test_loop_4D_ABCD2IiEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 85
  State       : disassembled
  Address     : 0xc030
  Size        : 0x38b
  MaxSize     : 0x390
  Offset      : 0xc030
  Section     : .text
  Orc Section : .local.text._Z18test_loop_4D_ABCD2IiEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB084:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	leaq	DATAat0x15182(%rip), %r15
    0000000d: 	pushq	%r14
    0000000f: 	leaq	DATAat0x15188(%rip), %r14
    00000016: 	pushq	%r13
    00000018: 	pushq	%r12
    0000001a: 	movq	%rdi, %r12
    0000001d: 	pushq	%rbp
    0000001e: 	movq	%rsi, %rbp
    00000021: 	pushq	%rbx
    00000022: 	xorl	%ebx, %ebx
    00000024: 	subq	$0x38, %rsp
    00000028: 	movq	%fs:0x28, %rax
    00000031: 	movq	%rax, 0x28(%rsp)
    00000036: 	xorl	%eax, %eax
    00000038: 	callq	clock@PLT # Offset: 56
    0000003d: 	movl	iterations(%rip), %r10d
    00000044: 	movq	%rax, start_time(%rip)
    0000004b: 	leaq	0x5910(%r12), %rax
    00000053: 	movq	%rax, (%rsp)
    00000057: 	leaq	0x1b7730(%r12), %rax
    0000005f: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r12
    00000066: 	movq	%rax, 0x8(%rsp)
    0000006b: 	testl	%r10d, %r10d
    0000006e: 	jle	.Ltmp774 # Offset: 110
.Ltmp782:
    00000074: 	xorl	%r8d, %r8d
    00000077: 	xorl	%r13d, %r13d
.Ltmp778:
    0000007a: 	movq	(%rsp), %rax
    0000007e: 	leaq	(%rax,%r8), %rdi
    00000082: 	movq	0x8(%rsp), %rax
    00000087: 	leaq	(%rax,%r8), %r9
.Ltmp777:
    0000008b: 	leaq	-0x5910(%rdi), %rcx
    00000092: 	leaq	-0x57e0(%rdi), %rdx
    00000099: 	xorl	%esi, %esi
    0000009b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp776:
    000000a0: 	movq	%rcx, %rax
    000000a3: 	pxor	%xmm0, %xmm0
    000000a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp775:
    000000b0: 	movdqu	(%rax), %xmm2
    000000b4: 	addq	$0x10, %rax
    000000b8: 	paddd	%xmm2, %xmm0
    000000bc: 	cmpq	%rdx, %rax
    000000bf: 	jne	.Ltmp775 # Offset: 191
    000000c1: 	movdqa	%xmm0, %xmm1
    000000c5: 	addq	$0x130, %rcx
    000000cc: 	psrldq	$0x8, %xmm1
    000000d1: 	paddd	%xmm1, %xmm0
    000000d5: 	movdqa	%xmm0, %xmm1
    000000d9: 	psrldq	$0x4, %xmm1
    000000de: 	paddd	%xmm1, %xmm0
    000000e2: 	movd	%xmm0, %edx
    000000e6: 	addl	%edx, %esi
    000000e8: 	leaq	0x130(%rax), %rdx
    000000ef: 	cmpq	%rdx, %rdi
    000000f2: 	jne	.Ltmp776 # Offset: 242
    000000f4: 	leaq	0x5910(%rax), %rdi
    000000fb: 	addl	%esi, %r13d
    000000fe: 	cmpq	%r9, %rdi
    00000101: 	jne	.Ltmp777 # Offset: 257
    00000103: 	addq	$0x1b1e20, %r8
    0000010a: 	cmpq	$0x7f1d360, %r8
    00000111: 	jne	.Ltmp778 # Offset: 273
    00000117: 	cvttsd2si	init_value(%rip), %r8d
    00000120: 	imull	$0x1fc74d8, %r8d, %r8d
    00000127: 	cmpl	%r8d, %r13d
    0000012a: 	movl	%r8d, 0x1c(%rsp)
    0000012f: 	je	.Ltmp779 # Offset: 303
    00000135: 	movl	$0x5, %edx
    0000013a: 	movq	%r15, %rsi
    0000013d: 	movq	%r12, %rdi
    00000140: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 320
    00000145: 	movq	0x8(%rbp), %rdx
    00000149: 	movq	(%rbp), %rsi
    0000014d: 	movq	%r12, %rdi
    00000150: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 336
    00000155: 	movl	$0x12, %edx
    0000015a: 	movq	%r14, %rsi
    0000015d: 	movq	%rax, %rdi
    00000160: 	movq	%rax, 0x10(%rsp)
    00000165: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 357
    0000016a: 	movl	0x1c(%rsp), %esi
    0000016e: 	movq	0x10(%rsp), %rdi
    00000173: 	callq	_ZNSolsEi@PLT # Offset: 371
    00000178: 	movl	$0x5, %edx
    0000017d: 	leaq	DATAat0x1519b(%rip), %rsi
    00000184: 	movq	%rax, %rdi
    00000187: 	movq	%rax, 0x10(%rsp)
    0000018c: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 396
    00000191: 	movq	0x10(%rsp), %rdi
    00000196: 	movl	%r13d, %esi
    00000199: 	callq	_ZNSolsEi@PLT # Offset: 409
    0000019e: 	movq	%rax, %r8
    000001a1: 	movq	(%rax), %rax
    000001a4: 	movq	-0x18(%rax), %rax
    000001a8: 	movq	0xf0(%r8,%rax), %r13
    000001b0: 	testq	%r13, %r13
    000001b3: 	je	.Ltmp780 # Offset: 435
    000001b9: 	cmpb	$0x0, 0x38(%r13)
    000001be: 	je	.Ltmp781 # Offset: 446
    000001c4: 	movsbl	0x43(%r13), %esi
.Ltmp789:
    000001c9: 	movq	%r8, %rdi
    000001cc: 	callq	_ZNSo3putEc@PLT # Offset: 460
    000001d1: 	movq	%rax, %rdi
    000001d4: 	callq	_ZNSo5flushEv@PLT # Offset: 468
    000001d9: 	movl	iterations(%rip), %r10d
.Ltmp779:
    000001e0: 	addl	$0x1, %ebx
    000001e3: 	cmpl	%r10d, %ebx
    000001e6: 	jl	.Ltmp782 # Offset: 486
.Ltmp774:
    000001ec: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001f3: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001fa: 	subq	$0x20, %rax
    000001fe: 	cmpq	%rax, %rbx
    00000201: 	je	.Ltmp783 # Offset: 513
    00000207: 	leaq	0x10(%rbx), %rdi
    0000020b: 	movq	0x8(%rbp), %r12
    0000020f: 	movq	%rdi, (%rbx)
    00000212: 	movq	(%rbp), %r13
    00000216: 	movq	%r13, %rax
    00000219: 	addq	%r12, %rax
    0000021c: 	je	.Ltmp784 # Offset: 540
    0000021e: 	testq	%r13, %r13
    00000221: 	je	.Ltmp785 # Offset: 545
.Ltmp784:
    00000227: 	movq	%r12, 0x20(%rsp)
    0000022c: 	cmpq	$0xf, %r12
    00000230: 	ja	.Ltmp786 # Offset: 560
    00000236: 	cmpq	$0x1, %r12
    0000023a: 	jne	.Ltmp787 # Offset: 570
    00000240: 	movzbl	(%r13), %eax
    00000245: 	movb	%al, 0x10(%rbx)
.Ltmp792:
    00000248: 	movq	%r12, 0x8(%rbx)
    0000024c: 	movb	$0x0, (%rdi,%r12)
    00000251: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000258: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000025f: 	addq	$0x20, %rax
    00000263: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000026a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000271: 	jne	.Ltmp788 # Offset: 625
.Ltmp790:
    00000273: 	movq	-0x8(%rdx), %rax
    00000277: 	addq	$0x200, %rax
    0000027d: 	jmp	.Ltmp788 # Offset: 637
.Ltmp781:
    0000027f: 	movq	%r13, %rdi
    00000282: 	movq	%r8, 0x10(%rsp)
    00000287: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 647
    0000028c: 	movq	(%r13), %rax
    00000290: 	movq	0x10(%rsp), %r8
    00000295: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    0000029c: 	movl	$0xa, %esi
    000002a1: 	movq	0x30(%rax), %rax
    000002a5: 	cmpq	%rdx, %rax
    000002a8: 	je	.Ltmp789 # Offset: 680
    000002ae: 	movq	%r13, %rdi
    000002b1: 	callq	*%rax # Offset: 689
    000002b3: 	movq	0x10(%rsp), %r8
    000002b8: 	movsbl	%al, %esi
    000002bb: 	jmp	.Ltmp789 # Offset: 699
.Ltmp783:
    000002c0: 	movq	%rbp, %rsi
    000002c3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002ca: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 714
    000002cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002d6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002dd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002e4: 	je	.Ltmp790 # Offset: 740
.Ltmp788:
    000002e6: 	movq	-0x20(%rax), %rbp
    000002ea: 	callq	clock@PLT # Offset: 746
    000002ef: 	movq	%rax, end_time(%rip)
    000002f6: 	movq	0x28(%rsp), %rdx
    000002fb: 	subq	%fs:0x28, %rdx
    00000304: 	jne	.Ltmp791 # Offset: 772
    00000306: 	subq	start_time(%rip), %rax
    0000030d: 	pxor	%xmm0, %xmm0
    00000311: 	movq	%rbp, %rdi
    00000314: 	cvtsi2sd	%rax, %xmm0
    00000319: 	divsd	DATAat0x15758(%rip), %xmm0
    00000321: 	addq	$0x38, %rsp
    00000325: 	popq	%rbx
    00000326: 	popq	%rbp
    00000327: 	popq	%r12
    00000329: 	popq	%r13
    0000032b: 	popq	%r14
    0000032d: 	popq	%r15
    0000032f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 815
.Ltmp786:
    00000334: 	movq	%rbx, %rdi
    00000337: 	leaq	0x20(%rsp), %rsi
    0000033c: 	xorl	%edx, %edx
    0000033e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 830
    00000343: 	movq	%rax, (%rbx)
    00000346: 	movq	%rax, %rdi
    00000349: 	movq	0x20(%rsp), %rax
    0000034e: 	movq	%rax, 0x10(%rbx)
.Ltmp793:
    00000352: 	movq	%r12, %rdx
    00000355: 	movq	%r13, %rsi
    00000358: 	callq	memcpy@PLT # Offset: 856
    0000035d: 	movq	0x20(%rsp), %r12
    00000362: 	movq	(%rbx), %rdi
    00000365: 	jmp	.Ltmp792 # Offset: 869
.Ltmp787:
    0000036a: 	testq	%r12, %r12
    0000036d: 	je	.Ltmp792 # Offset: 877
    00000373: 	jmp	.Ltmp793 # Offset: 883
.Ltmp791:
    00000375: 	callq	__stack_chk_fail@PLT # Offset: 885
.Ltmp780:
    0000037a: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 890
.Ltmp785:
    0000037f: 	leaq	DATAat0x15110(%rip), %rdi
    00000386: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 902
DWARF CFI Instructions:
    <empty>
End of Function "_Z18test_loop_4D_ABCD2IiEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeIiEvv" after disassembly {
  Number      : 86
  State       : disassembled
  Address     : 0xc3c0
  Size        : 0x1d00
  MaxSize     : 0x1d00
  Offset      : 0xc3c0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIiEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB085:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	leaq	DATAat0x151e8(%rip), %rsi
    0000000d: 	pushq	%r14
    0000000f: 	pushq	%r13
    00000011: 	pushq	%r12
    00000013: 	pushq	%rbp
    00000014: 	pushq	%rbx
    00000015: 	subq	$0x148, %rsp
    0000001c: 	movq	%fs:0x28, %rax
    00000025: 	movq	%rax, 0x138(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	leaq	0x50(%rsp), %r15
    00000034: 	movq	%r15, %rdi
    00000037: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 55
    0000003c: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm2
    00000044: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm3
    0000004c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000053: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000005a: 	movhlps	%xmm2, %xmm5
    0000005d: 	movq	"_ZL7gLabels/1"+56(%rip), %rbp
    00000064: 	movaps	%xmm3, 0x10(%rsp)
    00000069: 	movq	%xmm3, %rbx
    0000006e: 	movq	%xmm5, %r9
    00000073: 	movaps	%xmm2, (%rsp)
    00000077: 	movq	%xmm2, %r14
    0000007c: 	leaq	0x8(%r9), %r12
    00000080: 	cmpq	%r12, %rdx
    00000083: 	jbe	.Ltmp794 # Offset: 131
    00000089: 	movq	%rbp, 0x28(%rsp)
    0000008e: 	movq	%r13, %r14
    00000091: 	movq	%r12, %rbp
    00000094: 	movq	%rdx, %r13
    00000097: 	movq	%r15, 0x40(%rsp)
    0000009c: 	movq	%r12, %r15
    0000009f: 	movq	%xmm3, 0x30(%rsp)
    000000a5: 	movq	%xmm2, 0x38(%rsp)
.Ltmp797:
    000000ab: 	movq	(%rbp), %rbx
    000000af: 	leaq	0x200(%rbx), %r12
.Ltmp796:
    000000b6: 	movq	(%rbx), %rdi
    000000b9: 	leaq	0x10(%rbx), %rsi
    000000bd: 	cmpq	%rsi, %rdi
    000000c0: 	je	.Ltmp795 # Offset: 192
    000000c6: 	movq	0x10(%rbx), %rax
    000000ca: 	addq	$0x20, %rbx
    000000ce: 	movq	%r9, 0x48(%rsp)
    000000d3: 	leaq	0x1(%rax), %rsi
    000000d7: 	callq	_ZdlPvm@PLT # Offset: 215
    000000dc: 	cmpq	%rbx, %r12
    000000df: 	movq	0x48(%rsp), %r9
    000000e4: 	jne	.Ltmp796 # Offset: 228
    000000e6: 	addq	$0x8, %rbp
    000000ea: 	cmpq	%rbp, %r13
    000000ed: 	ja	.Ltmp797 # Offset: 237
.Ltmp866:
    000000ef: 	movq	%r13, %rdx
    000000f2: 	movq	%r15, %r12
    000000f5: 	movq	%r14, %r13
    000000f8: 	movq	0x28(%rsp), %rbp
    000000fd: 	movq	0x30(%rsp), %rbx
    00000102: 	movq	0x38(%rsp), %r14
    00000107: 	movq	0x40(%rsp), %r15
.Ltmp794:
    0000010c: 	cmpq	%r9, %rdx
    0000010f: 	je	.Ltmp798 # Offset: 271
    00000115: 	cmpq	%rbx, %r14
    00000118: 	je	.Ltmp799 # Offset: 280
.Ltmp802:
    0000011a: 	movq	(%rbx), %rdi
    0000011d: 	leaq	0x10(%rbx), %rax
    00000121: 	cmpq	%rax, %rdi
    00000124: 	je	.Ltmp800 # Offset: 292
.Ltmp801:
    00000126: 	movq	0x10(%rbx), %rax
    0000012a: 	addq	$0x20, %rbx
    0000012e: 	leaq	0x1(%rax), %rsi
    00000132: 	callq	_ZdlPvm@PLT # Offset: 306
    00000137: 	cmpq	%r14, %rbx
    0000013a: 	je	.Ltmp799 # Offset: 314
    0000013c: 	movq	(%rbx), %rdi
    0000013f: 	leaq	0x10(%rbx), %rax
    00000143: 	cmpq	%rax, %rdi
    00000146: 	jne	.Ltmp801 # Offset: 326
.Ltmp800:
    00000148: 	addq	$0x20, %rbx
    0000014c: 	cmpq	%r14, %rbx
    0000014f: 	jne	.Ltmp802 # Offset: 335
    00000151: 	cmpq	%rbp, %r13
    00000154: 	je	.Ltmp803 # Offset: 340
.Ltmp805:
    00000156: 	movq	(%rbp), %rdi
    0000015a: 	leaq	0x10(%rbp), %rax
    0000015e: 	cmpq	%rax, %rdi
    00000161: 	je	.Ltmp804 # Offset: 353
    00000163: 	movq	0x10(%rbp), %rax
    00000167: 	leaq	0x1(%rax), %rsi
    0000016b: 	callq	_ZdlPvm@PLT # Offset: 363
.Ltmp804:
    00000170: 	addq	$0x20, %rbp
.Ltmp799:
    00000174: 	cmpq	%rbp, %r13
    00000177: 	jne	.Ltmp805 # Offset: 375
.Ltmp803:
    00000179: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    00000180: 	leaq	0x8(%rax), %rbx
    00000184: 	cmpq	%r12, %rbx
    00000187: 	jbe	.Ltmp806 # Offset: 391
.Ltmp807:
    00000189: 	movq	(%r12), %rdi
    0000018d: 	movl	$0x200, %esi
    00000192: 	addq	$0x8, %r12
    00000196: 	callq	_ZdlPvm@PLT # Offset: 406
    0000019b: 	cmpq	%r12, %rbx
    0000019e: 	ja	.Ltmp807 # Offset: 414
.Ltmp806:
    000001a0: 	movdqa	0x10(%rsp), %xmm4
    000001a6: 	movdqa	(%rsp), %xmm5
    000001ab: 	movl	$0x3d09000, %edi
    000001b0: 	movaps	%xmm4, "_ZL7gLabels/1"+48(%rip)
    000001b7: 	movaps	%xmm5, "_ZL7gLabels/1"+64(%rip)
    000001be: 	callq	_Znam@PLT # Offset: 446
    000001c3: 	cvttsd2si	init_value(%rip), %ecx
    000001cb: 	movq	%rax, (%rsp)
    000001cf: 	movd	%ecx, %xmm0
    000001d3: 	leaq	0x3d09000(%rax), %rcx
    000001da: 	movq	%rcx, 0x10(%rsp)
    000001df: 	pshufd	$0x0, %xmm0, %xmm0
.Ltmp809:
    000001e4: 	leaq	0x3e80(%rax), %rdx
.Ltmp808:
    000001eb: 	movups	%xmm0, (%rax)
    000001ee: 	addq	$0x10, %rax
    000001f2: 	cmpq	%rdx, %rax
    000001f5: 	jne	.Ltmp808 # Offset: 501
    000001f7: 	cmpq	%rax, 0x10(%rsp)
    000001fc: 	jne	.Ltmp809 # Offset: 508
    000001fe: 	leaq	0x110(%rsp), %rbp
    00000206: 	leaq	DATAat0x151f0(%rip), %rdx
    0000020d: 	movq	%r15, %rsi
    00000210: 	movq	%rbp, %rdi
    00000213: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 531
    00000218: 	callq	clock@PLT # Offset: 536
    0000021d: 	movl	iterations(%rip), %ecx
    00000223: 	movl	$0x0, 0x28(%rsp)
    0000022b: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rbx
    00000232: 	movq	%rax, start_time(%rip)
    00000239: 	testl	%ecx, %ecx
    0000023b: 	jle	.Ltmp810 # Offset: 571
.Ltmp816:
    00000241: 	movq	(%rsp), %rdx
    00000245: 	xorl	%r12d, %r12d
    00000248: 	movq	%rdx, %rax
.Ltmp812:
    0000024b: 	pxor	%xmm0, %xmm0
    0000024f: 	leaq	0x3e80(%rax), %rdx
.Ltmp811:
    00000256: 	movdqu	(%rax), %xmm6
    0000025a: 	addq	$0x10, %rax
    0000025e: 	paddd	%xmm6, %xmm0
    00000262: 	cmpq	%rdx, %rax
    00000265: 	jne	.Ltmp811 # Offset: 613
    00000267: 	movdqa	%xmm0, %xmm1
    0000026b: 	psrldq	$0x8, %xmm1
    00000270: 	paddd	%xmm1, %xmm0
    00000274: 	movdqa	%xmm0, %xmm1
    00000278: 	psrldq	$0x4, %xmm1
    0000027d: 	paddd	%xmm1, %xmm0
    00000281: 	movd	%xmm0, %edx
    00000285: 	addl	%edx, %r12d
    00000288: 	cmpq	%rax, 0x10(%rsp)
    0000028d: 	jne	.Ltmp812 # Offset: 653
    0000028f: 	cvttsd2si	init_value(%rip), %r14d
    00000298: 	imull	$0xf42400, %r14d, %r14d
    0000029f: 	cmpl	%r14d, %r12d
    000002a2: 	je	.Ltmp813 # Offset: 674
    000002a8: 	movl	$0x5, %edx
    000002ad: 	leaq	DATAat0x15182(%rip), %rsi
    000002b4: 	movq	%rbx, %rdi
    000002b7: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 695
    000002bc: 	movq	0x118(%rsp), %rdx
    000002c4: 	movq	0x110(%rsp), %rsi
    000002cc: 	movq	%rbx, %rdi
    000002cf: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 719
    000002d4: 	movl	$0x12, %edx
    000002d9: 	leaq	DATAat0x15188(%rip), %rsi
    000002e0: 	movq	%rax, %rdi
    000002e3: 	movq	%rax, %r13
    000002e6: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 742
    000002eb: 	movl	%r14d, %esi
    000002ee: 	movq	%r13, %rdi
    000002f1: 	callq	_ZNSolsEi@PLT # Offset: 753
    000002f6: 	movl	$0x5, %edx
    000002fb: 	leaq	DATAat0x1519b(%rip), %rsi
    00000302: 	movq	%rax, %rdi
    00000305: 	movq	%rax, %r13
    00000308: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 776
    0000030d: 	movl	%r12d, %esi
    00000310: 	movq	%r13, %rdi
    00000313: 	callq	_ZNSolsEi@PLT # Offset: 787
    00000318: 	movq	%rax, %r13
    0000031b: 	movq	(%rax), %rax
    0000031e: 	movq	-0x18(%rax), %rax
    00000322: 	movq	0xf0(%r13,%rax), %r12
    0000032a: 	testq	%r12, %r12
    0000032d: 	je	.Ltmp814 # Offset: 813
    00000333: 	cmpb	$0x0, 0x38(%r12)
    00000339: 	je	.Ltmp815 # Offset: 825
    0000033f: 	movsbl	0x43(%r12), %esi
.Ltmp922:
    00000345: 	movq	%r13, %rdi
    00000348: 	callq	_ZNSo3putEc@PLT # Offset: 840
    0000034d: 	movq	%rax, %rdi
    00000350: 	callq	_ZNSo5flushEv@PLT # Offset: 848
    00000355: 	movl	iterations(%rip), %ecx
.Ltmp813:
    0000035b: 	addl	$0x1, 0x28(%rsp)
    00000360: 	movl	0x28(%rsp), %eax
    00000364: 	cmpl	%ecx, %eax
    00000366: 	jl	.Ltmp816 # Offset: 870
.Ltmp810:
    0000036c: 	movq	%rbp, %rdi
    0000036f: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 879
    00000374: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000037b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000382: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000389: 	je	.Ltmp817 # Offset: 905
.Ltmp924:
    0000038f: 	movq	-0x20(%rax), %r12
    00000393: 	callq	clock@PLT # Offset: 915
    00000398: 	pxor	%xmm0, %xmm0
    0000039c: 	movq	%rax, end_time(%rip)
    000003a3: 	movq	%r12, %rdi
    000003a6: 	subq	start_time(%rip), %rax
    000003ad: 	cvtsi2sd	%rax, %xmm0
    000003b2: 	divsd	DATAat0x15758(%rip), %xmm0
    000003ba: 	callq	_Z13record_resultdPKc # Offset: 954
    000003bf: 	movq	0x110(%rsp), %rdi
    000003c7: 	leaq	0x120(%rsp), %rbx
    000003cf: 	cmpq	%rbx, %rdi
    000003d2: 	je	.Ltmp818 # Offset: 978
    000003d4: 	movq	0x120(%rsp), %rax
    000003dc: 	leaq	0x1(%rax), %rsi
    000003e0: 	callq	_ZdlPvm@PLT # Offset: 992
.Ltmp818:
    000003e5: 	leaq	DATAat0x1520d(%rip), %rdx
    000003ec: 	movq	%r15, %rsi
    000003ef: 	movq	%rbp, %rdi
    000003f2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1010
    000003f7: 	callq	clock@PLT # Offset: 1015
    000003fc: 	movl	iterations(%rip), %ecx
    00000402: 	movl	$0x0, 0x28(%rsp)
    0000040a: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r14
    00000411: 	movq	%rax, start_time(%rip)
    00000418: 	testl	%ecx, %ecx
    0000041a: 	jle	.Ltmp819 # Offset: 1050
.Ltmp825:
    00000420: 	movq	(%rsp), %rdx
    00000424: 	xorl	%r12d, %r12d
    00000427: 	movq	%rdx, %rax
.Ltmp821:
    0000042a: 	pxor	%xmm0, %xmm0
    0000042e: 	leaq	0x3e80(%rax), %rdx
.Ltmp820:
    00000435: 	movdqu	(%rax), %xmm7
    00000439: 	addq	$0x10, %rax
    0000043d: 	paddd	%xmm7, %xmm0
    00000441: 	cmpq	%rdx, %rax
    00000444: 	jne	.Ltmp820 # Offset: 1092
    00000446: 	movdqa	%xmm0, %xmm1
    0000044a: 	psrldq	$0x8, %xmm1
    0000044f: 	paddd	%xmm1, %xmm0
    00000453: 	movdqa	%xmm0, %xmm1
    00000457: 	psrldq	$0x4, %xmm1
    0000045c: 	paddd	%xmm1, %xmm0
    00000460: 	movd	%xmm0, %edx
    00000464: 	addl	%edx, %r12d
    00000467: 	cmpq	%rax, 0x10(%rsp)
    0000046c: 	jne	.Ltmp821 # Offset: 1132
    0000046e: 	cvttsd2si	init_value(%rip), %eax
    00000476: 	imull	$0xf42400, %eax, %eax
    0000047c: 	movl	%eax, 0x30(%rsp)
    00000480: 	cmpl	%eax, %r12d
    00000483: 	je	.Ltmp822 # Offset: 1155
    00000489: 	movl	$0x5, %edx
    0000048e: 	leaq	DATAat0x15182(%rip), %rsi
    00000495: 	movq	%r14, %rdi
    00000498: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1176
    0000049d: 	movq	0x118(%rsp), %rdx
    000004a5: 	movq	0x110(%rsp), %rsi
    000004ad: 	movq	%r14, %rdi
    000004b0: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1200
    000004b5: 	movl	$0x12, %edx
    000004ba: 	leaq	DATAat0x15188(%rip), %rsi
    000004c1: 	movq	%rax, %rdi
    000004c4: 	movq	%rax, %r13
    000004c7: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1223
    000004cc: 	movl	0x30(%rsp), %esi
    000004d0: 	movq	%r13, %rdi
    000004d3: 	callq	_ZNSolsEi@PLT # Offset: 1235
    000004d8: 	movl	$0x5, %edx
    000004dd: 	leaq	DATAat0x1519b(%rip), %rsi
    000004e4: 	movq	%rax, %rdi
    000004e7: 	movq	%rax, %r13
    000004ea: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1258
    000004ef: 	movl	%r12d, %esi
    000004f2: 	movq	%r13, %rdi
    000004f5: 	callq	_ZNSolsEi@PLT # Offset: 1269
    000004fa: 	movq	%rax, %r13
    000004fd: 	movq	(%rax), %rax
    00000500: 	movq	-0x18(%rax), %rax
    00000504: 	movq	0xf0(%r13,%rax), %r12
    0000050c: 	testq	%r12, %r12
    0000050f: 	je	.Ltmp823 # Offset: 1295
    00000515: 	cmpb	$0x0, 0x38(%r12)
    0000051b: 	je	.Ltmp824 # Offset: 1307
    00000521: 	movsbl	0x43(%r12), %esi
.Ltmp923:
    00000527: 	movq	%r13, %rdi
    0000052a: 	callq	_ZNSo3putEc@PLT # Offset: 1322
    0000052f: 	movq	%rax, %rdi
    00000532: 	callq	_ZNSo5flushEv@PLT # Offset: 1330
    00000537: 	movl	iterations(%rip), %ecx
.Ltmp822:
    0000053d: 	addl	$0x1, 0x28(%rsp)
    00000542: 	movl	0x28(%rsp), %eax
    00000546: 	cmpl	%ecx, %eax
    00000548: 	jl	.Ltmp825 # Offset: 1352
.Ltmp819:
    0000054e: 	movq	%rbp, %rdi
    00000551: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1361
    00000556: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000055d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000564: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000056b: 	je	.Ltmp826 # Offset: 1387
.Ltmp931:
    00000571: 	movq	-0x20(%rax), %r12
    00000575: 	callq	clock@PLT # Offset: 1397
    0000057a: 	pxor	%xmm0, %xmm0
    0000057e: 	movq	%rax, end_time(%rip)
    00000585: 	movq	%r12, %rdi
    00000588: 	subq	start_time(%rip), %rax
    0000058f: 	cvtsi2sd	%rax, %xmm0
    00000594: 	divsd	DATAat0x15758(%rip), %xmm0
    0000059c: 	callq	_Z13record_resultdPKc # Offset: 1436
    000005a1: 	movq	0x110(%rsp), %rdi
    000005a9: 	cmpq	%rbx, %rdi
    000005ac: 	je	.Ltmp827 # Offset: 1452
    000005ae: 	movq	0x120(%rsp), %rax
    000005b6: 	leaq	0x1(%rax), %rsi
    000005ba: 	callq	_ZdlPvm@PLT # Offset: 1466
.Ltmp827:
    000005bf: 	leaq	DATAat0x1522b(%rip), %rdx
    000005c6: 	movq	%r15, %rsi
    000005c9: 	movq	%rbp, %rdi
    000005cc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1484
    000005d1: 	callq	clock@PLT # Offset: 1489
    000005d6: 	movl	iterations(%rip), %ecx
    000005dc: 	movl	$0x0, 0x10(%rsp)
    000005e4: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r14
    000005eb: 	movq	%rax, start_time(%rip)
    000005f2: 	movq	(%rsp), %rax
    000005f6: 	addq	$0x3e80, %rax
    000005fc: 	movq	%rax, 0x30(%rsp)
    00000601: 	testl	%ecx, %ecx
    00000603: 	jle	.Ltmp828 # Offset: 1539
.Ltmp834:
    00000609: 	movq	(%rsp), %rax
    0000060d: 	pxor	%xmm0, %xmm0
.Ltmp830:
    00000611: 	movq	%rax, %rdx
    00000614: 	pxor	%xmm1, %xmm1
    00000618: 	leaq	0x3d09000(%rax), %rsi
.Ltmp829:
    0000061f: 	movdqu	(%rdx), %xmm4
    00000623: 	addq	$0x3e80, %rdx
    0000062a: 	paddd	%xmm4, %xmm1
    0000062e: 	cmpq	%rdx, %rsi
    00000631: 	jne	.Ltmp829 # Offset: 1585
    00000633: 	paddd	%xmm1, %xmm0
    00000637: 	addq	$0x10, %rax
    0000063b: 	cmpq	%rax, 0x30(%rsp)
    00000640: 	jne	.Ltmp830 # Offset: 1600
    00000642: 	movdqa	%xmm0, %xmm1
    00000646: 	cvttsd2si	init_value(%rip), %eax
    0000064e: 	psrldq	$0x8, %xmm1
    00000653: 	paddd	%xmm1, %xmm0
    00000657: 	movdqa	%xmm0, %xmm1
    0000065b: 	psrldq	$0x4, %xmm1
    00000660: 	imull	$0xf42400, %eax, %r13d
    00000667: 	paddd	%xmm1, %xmm0
    0000066b: 	movd	%xmm0, %esi
    0000066f: 	movd	%xmm0, 0x28(%rsp)
    00000675: 	cmpl	%esi, %r13d
    00000678: 	je	.Ltmp831 # Offset: 1656
    0000067e: 	movl	$0x5, %edx
    00000683: 	leaq	DATAat0x15182(%rip), %rsi
    0000068a: 	movq	%r14, %rdi
    0000068d: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1677
    00000692: 	movq	0x118(%rsp), %rdx
    0000069a: 	movq	0x110(%rsp), %rsi
    000006a2: 	movq	%r14, %rdi
    000006a5: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1701
    000006aa: 	movl	$0x12, %edx
    000006af: 	leaq	DATAat0x15188(%rip), %rsi
    000006b6: 	movq	%rax, %rdi
    000006b9: 	movq	%rax, %r12
    000006bc: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1724
    000006c1: 	movl	%r13d, %esi
    000006c4: 	movq	%r12, %rdi
    000006c7: 	callq	_ZNSolsEi@PLT # Offset: 1735
    000006cc: 	movl	$0x5, %edx
    000006d1: 	leaq	DATAat0x1519b(%rip), %rsi
    000006d8: 	movq	%rax, %rdi
    000006db: 	movq	%rax, %r12
    000006de: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 1758
    000006e3: 	movl	0x28(%rsp), %esi
    000006e7: 	movq	%r12, %rdi
    000006ea: 	callq	_ZNSolsEi@PLT # Offset: 1770
    000006ef: 	movq	%rax, %r13
    000006f2: 	movq	(%rax), %rax
    000006f5: 	movq	-0x18(%rax), %rax
    000006f9: 	movq	0xf0(%r13,%rax), %r12
    00000701: 	testq	%r12, %r12
    00000704: 	je	.Ltmp832 # Offset: 1796
    0000070a: 	cmpb	$0x0, 0x38(%r12)
    00000710: 	je	.Ltmp833 # Offset: 1808
    00000716: 	movsbl	0x43(%r12), %esi
.Ltmp869:
    0000071c: 	movq	%r13, %rdi
    0000071f: 	callq	_ZNSo3putEc@PLT # Offset: 1823
    00000724: 	movq	%rax, %rdi
    00000727: 	callq	_ZNSo5flushEv@PLT # Offset: 1831
    0000072c: 	movl	iterations(%rip), %ecx
.Ltmp831:
    00000732: 	addl	$0x1, 0x10(%rsp)
    00000737: 	movl	0x10(%rsp), %eax
    0000073b: 	cmpl	%ecx, %eax
    0000073d: 	jl	.Ltmp834 # Offset: 1853
.Ltmp828:
    00000743: 	movq	%rbp, %rdi
    00000746: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1862
    0000074b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000752: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000759: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000760: 	je	.Ltmp835 # Offset: 1888
.Ltmp930:
    00000766: 	movq	-0x20(%rax), %r12
    0000076a: 	callq	clock@PLT # Offset: 1898
    0000076f: 	pxor	%xmm0, %xmm0
    00000773: 	movq	%rax, end_time(%rip)
    0000077a: 	movq	%r12, %rdi
    0000077d: 	subq	start_time(%rip), %rax
    00000784: 	cvtsi2sd	%rax, %xmm0
    00000789: 	divsd	DATAat0x15758(%rip), %xmm0
    00000791: 	callq	_Z13record_resultdPKc # Offset: 1937
    00000796: 	movq	0x110(%rsp), %rdi
    0000079e: 	cmpq	%rbx, %rdi
    000007a1: 	je	.Ltmp836 # Offset: 1953
    000007a3: 	movq	0x120(%rsp), %rax
    000007ab: 	leaq	0x1(%rax), %rsi
    000007af: 	callq	_ZdlPvm@PLT # Offset: 1967
.Ltmp836:
    000007b4: 	leaq	0x70(%rsp), %rdi
    000007b9: 	leaq	DATAat0x15249(%rip), %rdx
    000007c0: 	movq	%r15, %rsi
    000007c3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1987
    000007c8: 	movl	iterations(%rip), %edx
    000007ce: 	movq	0x70(%rsp), %rdi
    000007d3: 	movl	$0xf42400, %esi
    000007d8: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 2008
    000007dd: 	movq	(%rsp), %rdi
    000007e1: 	callq	_ZdaPv@PLT # Offset: 2017
    000007e6: 	movl	$0x3d09000, %edi
    000007eb: 	callq	_Znam@PLT # Offset: 2027
    000007f0: 	movq	%rax, %r12
    000007f3: 	cvttsd2si	init_value(%rip), %eax
    000007fb: 	movd	%eax, %xmm0
    000007ff: 	leaq	0x3d09000(%r12), %rax
    00000807: 	movq	%rax, (%rsp)
    0000080b: 	pshufd	$0x0, %xmm0, %xmm0
    00000810: 	movq	%r12, %rax
.Ltmp837:
    00000813: 	movups	%xmm0, (%rax)
    00000816: 	addq	$0x10, %rax
    0000081a: 	cmpq	%rax, (%rsp)
    0000081e: 	jne	.Ltmp837 # Offset: 2078
    00000820: 	leaq	DATAat0x15378(%rip), %rdx
    00000827: 	movq	%r15, %rsi
    0000082a: 	movq	%rbp, %rdi
    0000082d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2093
    00000832: 	callq	clock@PLT # Offset: 2098
    00000837: 	movl	iterations(%rip), %ecx
    0000083d: 	xorl	%r13d, %r13d
    00000840: 	movq	%rax, start_time(%rip)
    00000847: 	testl	%ecx, %ecx
    00000849: 	jle	.Ltmp838 # Offset: 2121
.Ltmp841:
    0000084b: 	xorl	%edi, %edi
    0000084d: 	movq	%r12, %rax
.Ltmp840:
    00000850: 	pxor	%xmm0, %xmm0
    00000854: 	leaq	0x3e80(%rax), %rdx
.Ltmp839:
    0000085b: 	movdqu	(%rax), %xmm5
    0000085f: 	addq	$0x10, %rax
    00000863: 	paddd	%xmm5, %xmm0
    00000867: 	cmpq	%rdx, %rax
    0000086a: 	jne	.Ltmp839 # Offset: 2154
    0000086c: 	movdqa	%xmm0, %xmm1
    00000870: 	psrldq	$0x8, %xmm1
    00000875: 	paddd	%xmm1, %xmm0
    00000879: 	movdqa	%xmm0, %xmm1
    0000087d: 	psrldq	$0x4, %xmm1
    00000882: 	paddd	%xmm1, %xmm0
    00000886: 	movd	%xmm0, %edx
    0000088a: 	addl	%edx, %edi
    0000088c: 	cmpq	(%rsp), %rax
    00000890: 	jne	.Ltmp840 # Offset: 2192
    00000892: 	movq	%rbp, %rsi
    00000895: 	callq	_Z9check_sumIiEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2197
    0000089a: 	addl	$0x1, %r13d
    0000089e: 	cmpl	iterations(%rip), %r13d
    000008a5: 	jl	.Ltmp841 # Offset: 2213
.Ltmp838:
    000008a7: 	movq	%rbp, %rdi
    000008aa: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2218
    000008af: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008b6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008bd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008c4: 	je	.Ltmp842 # Offset: 2244
.Ltmp929:
    000008ca: 	movq	-0x20(%rax), %r13
    000008ce: 	callq	clock@PLT # Offset: 2254
    000008d3: 	pxor	%xmm0, %xmm0
    000008d7: 	movq	%rax, end_time(%rip)
    000008de: 	movq	%r13, %rdi
    000008e1: 	subq	start_time(%rip), %rax
    000008e8: 	cvtsi2sd	%rax, %xmm0
    000008ed: 	divsd	DATAat0x15758(%rip), %xmm0
    000008f5: 	callq	_Z13record_resultdPKc # Offset: 2293
    000008fa: 	movq	0x110(%rsp), %rdi
    00000902: 	cmpq	%rbx, %rdi
    00000905: 	je	.Ltmp843 # Offset: 2309
    00000907: 	movq	0x120(%rsp), %rax
    0000090f: 	leaq	0x1(%rax), %rsi
    00000913: 	callq	_ZdlPvm@PLT # Offset: 2323
.Ltmp843:
    00000918: 	leaq	DATAat0x153a0(%rip), %rdx
    0000091f: 	movq	%r15, %rsi
    00000922: 	movq	%rbp, %rdi
    00000925: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2341
    0000092a: 	callq	clock@PLT # Offset: 2346
    0000092f: 	movl	iterations(%rip), %ecx
    00000935: 	movl	$0x0, 0x10(%rsp)
    0000093d: 	movq	%rax, start_time(%rip)
    00000944: 	testl	%ecx, %ecx
    00000946: 	jle	.Ltmp844 # Offset: 2374
.Ltmp850:
    0000094c: 	xorl	%r13d, %r13d
    0000094f: 	movq	%r12, %rax
.Ltmp846:
    00000952: 	pxor	%xmm0, %xmm0
    00000956: 	leaq	0x3e80(%rax), %rdx
.Ltmp845:
    0000095d: 	movdqu	(%rax), %xmm6
    00000961: 	addq	$0x10, %rax
    00000965: 	paddd	%xmm6, %xmm0
    00000969: 	cmpq	%rdx, %rax
    0000096c: 	jne	.Ltmp845 # Offset: 2412
    0000096e: 	movdqa	%xmm0, %xmm1
    00000972: 	psrldq	$0x8, %xmm1
    00000977: 	paddd	%xmm1, %xmm0
    0000097b: 	movdqa	%xmm0, %xmm1
    0000097f: 	psrldq	$0x4, %xmm1
    00000984: 	paddd	%xmm1, %xmm0
    00000988: 	movd	%xmm0, %edx
    0000098c: 	addl	%edx, %r13d
    0000098f: 	cmpq	(%rsp), %rax
    00000993: 	jne	.Ltmp846 # Offset: 2451
    00000995: 	cvttsd2si	init_value(%rip), %eax
    0000099d: 	imull	$0xf42400, %eax, %eax
    000009a3: 	movl	%eax, 0x28(%rsp)
    000009a7: 	cmpl	%eax, %r13d
    000009aa: 	je	.Ltmp847 # Offset: 2474
    000009b0: 	movl	$0x5, %edx
    000009b5: 	leaq	DATAat0x15182(%rip), %rsi
    000009bc: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    000009c3: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 2499
    000009c8: 	movq	0x118(%rsp), %rdx
    000009d0: 	movq	0x110(%rsp), %rsi
    000009d8: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    000009df: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 2527
    000009e4: 	movl	$0x12, %edx
    000009e9: 	leaq	DATAat0x15188(%rip), %rsi
    000009f0: 	movq	%rax, %rdi
    000009f3: 	movq	%rax, %r14
    000009f6: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 2550
    000009fb: 	movl	0x28(%rsp), %esi
    000009ff: 	movq	%r14, %rdi
    00000a02: 	callq	_ZNSolsEi@PLT # Offset: 2562
    00000a07: 	movl	$0x5, %edx
    00000a0c: 	leaq	DATAat0x1519b(%rip), %rsi
    00000a13: 	movq	%rax, %rdi
    00000a16: 	movq	%rax, %r14
    00000a19: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 2585
    00000a1e: 	movl	%r13d, %esi
    00000a21: 	movq	%r14, %rdi
    00000a24: 	callq	_ZNSolsEi@PLT # Offset: 2596
    00000a29: 	movq	%rax, %r14
    00000a2c: 	movq	(%rax), %rax
    00000a2f: 	movq	-0x18(%rax), %rax
    00000a33: 	movq	0xf0(%r14,%rax), %r13
    00000a3b: 	testq	%r13, %r13
    00000a3e: 	je	.Ltmp848 # Offset: 2622
    00000a44: 	cmpb	$0x0, 0x38(%r13)
    00000a49: 	je	.Ltmp849 # Offset: 2633
    00000a4f: 	movsbl	0x43(%r13), %esi
.Ltmp870:
    00000a54: 	movq	%r14, %rdi
    00000a57: 	callq	_ZNSo3putEc@PLT # Offset: 2647
    00000a5c: 	movq	%rax, %rdi
    00000a5f: 	callq	_ZNSo5flushEv@PLT # Offset: 2655
    00000a64: 	movl	iterations(%rip), %ecx
.Ltmp847:
    00000a6a: 	addl	$0x1, 0x10(%rsp)
    00000a6f: 	movl	0x10(%rsp), %eax
    00000a73: 	cmpl	%ecx, %eax
    00000a75: 	jl	.Ltmp850 # Offset: 2677
.Ltmp844:
    00000a7b: 	movq	%rbp, %rdi
    00000a7e: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2686
    00000a83: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a8a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a91: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a98: 	je	.Ltmp851 # Offset: 2712
.Ltmp928:
    00000a9e: 	movq	-0x20(%rax), %r13
    00000aa2: 	callq	clock@PLT # Offset: 2722
    00000aa7: 	pxor	%xmm0, %xmm0
    00000aab: 	movq	%rax, end_time(%rip)
    00000ab2: 	movq	%r13, %rdi
    00000ab5: 	subq	start_time(%rip), %rax
    00000abc: 	cvtsi2sd	%rax, %xmm0
    00000ac1: 	divsd	DATAat0x15758(%rip), %xmm0
    00000ac9: 	callq	_Z13record_resultdPKc # Offset: 2761
    00000ace: 	movq	0x110(%rsp), %rdi
    00000ad6: 	cmpq	%rbx, %rdi
    00000ad9: 	je	.Ltmp852 # Offset: 2777
    00000adb: 	movq	0x120(%rsp), %rax
    00000ae3: 	leaq	0x1(%rax), %rsi
    00000ae7: 	callq	_ZdlPvm@PLT # Offset: 2791
.Ltmp852:
    00000aec: 	leaq	DATAat0x153c8(%rip), %rdx
    00000af3: 	movq	%r15, %rsi
    00000af6: 	movq	%rbp, %rdi
    00000af9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2809
    00000afe: 	callq	clock@PLT # Offset: 2814
    00000b03: 	movl	iterations(%rip), %ecx
    00000b09: 	movl	$0x0, 0x10(%rsp)
    00000b11: 	movq	%rax, start_time(%rip)
    00000b18: 	leaq	0x3e80(%r12), %rax
    00000b20: 	movq	%rax, 0x30(%rsp)
    00000b25: 	testl	%ecx, %ecx
    00000b27: 	jle	.Ltmp853 # Offset: 2855
.Ltmp859:
    00000b2d: 	movq	%r12, %rax
    00000b30: 	pxor	%xmm0, %xmm0
.Ltmp855:
    00000b34: 	movq	%rax, %rdx
    00000b37: 	pxor	%xmm1, %xmm1
    00000b3b: 	leaq	0x3d09000(%rax), %rsi
.Ltmp854:
    00000b42: 	movdqu	(%rdx), %xmm7
    00000b46: 	addq	$0x3e80, %rdx
    00000b4d: 	paddd	%xmm7, %xmm1
    00000b51: 	cmpq	%rsi, %rdx
    00000b54: 	jne	.Ltmp854 # Offset: 2900
    00000b56: 	paddd	%xmm1, %xmm0
    00000b5a: 	addq	$0x10, %rax
    00000b5e: 	cmpq	0x30(%rsp), %rax
    00000b63: 	jne	.Ltmp855 # Offset: 2915
    00000b65: 	movdqa	%xmm0, %xmm1
    00000b69: 	cvttsd2si	init_value(%rip), %eax
    00000b71: 	psrldq	$0x8, %xmm1
    00000b76: 	paddd	%xmm1, %xmm0
    00000b7a: 	movdqa	%xmm0, %xmm1
    00000b7e: 	psrldq	$0x4, %xmm1
    00000b83: 	imull	$0xf42400, %eax, %r14d
    00000b8a: 	paddd	%xmm1, %xmm0
    00000b8e: 	movd	%xmm0, %esi
    00000b92: 	movd	%xmm0, 0x28(%rsp)
    00000b98: 	cmpl	%esi, %r14d
    00000b9b: 	je	.Ltmp856 # Offset: 2971
    00000ba1: 	movl	$0x5, %edx
    00000ba6: 	leaq	DATAat0x15182(%rip), %rsi
    00000bad: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    00000bb4: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 2996
    00000bb9: 	movq	0x118(%rsp), %rdx
    00000bc1: 	movq	0x110(%rsp), %rsi
    00000bc9: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    00000bd0: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 3024
    00000bd5: 	movl	$0x12, %edx
    00000bda: 	leaq	DATAat0x15188(%rip), %rsi
    00000be1: 	movq	%rax, %rdi
    00000be4: 	movq	%rax, %r13
    00000be7: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 3047
    00000bec: 	movl	%r14d, %esi
    00000bef: 	movq	%r13, %rdi
    00000bf2: 	callq	_ZNSolsEi@PLT # Offset: 3058
    00000bf7: 	movl	$0x5, %edx
    00000bfc: 	leaq	DATAat0x1519b(%rip), %rsi
    00000c03: 	movq	%rax, %rdi
    00000c06: 	movq	%rax, %r13
    00000c09: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 3081
    00000c0e: 	movl	0x28(%rsp), %esi
    00000c12: 	movq	%r13, %rdi
    00000c15: 	callq	_ZNSolsEi@PLT # Offset: 3093
    00000c1a: 	movq	%rax, %r14
    00000c1d: 	movq	(%rax), %rax
    00000c20: 	movq	-0x18(%rax), %rax
    00000c24: 	movq	0xf0(%r14,%rax), %r13
    00000c2c: 	testq	%r13, %r13
    00000c2f: 	je	.Ltmp857 # Offset: 3119
    00000c35: 	cmpb	$0x0, 0x38(%r13)
    00000c3a: 	je	.Ltmp858 # Offset: 3130
    00000c40: 	movsbl	0x43(%r13), %esi
.Ltmp871:
    00000c45: 	movq	%r14, %rdi
    00000c48: 	callq	_ZNSo3putEc@PLT # Offset: 3144
    00000c4d: 	movq	%rax, %rdi
    00000c50: 	callq	_ZNSo5flushEv@PLT # Offset: 3152
    00000c55: 	movl	iterations(%rip), %ecx
.Ltmp856:
    00000c5b: 	addl	$0x1, 0x10(%rsp)
    00000c60: 	movl	0x10(%rsp), %eax
    00000c64: 	cmpl	%ecx, %eax
    00000c66: 	jl	.Ltmp859 # Offset: 3174
.Ltmp853:
    00000c6c: 	movq	%rbp, %rdi
    00000c6f: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3183
    00000c74: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c7b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c82: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c89: 	je	.Ltmp860 # Offset: 3209
.Ltmp927:
    00000c8f: 	movq	-0x20(%rax), %r13
    00000c93: 	callq	clock@PLT # Offset: 3219
    00000c98: 	pxor	%xmm0, %xmm0
    00000c9c: 	movq	%rax, end_time(%rip)
    00000ca3: 	movq	%r13, %rdi
    00000ca6: 	subq	start_time(%rip), %rax
    00000cad: 	cvtsi2sd	%rax, %xmm0
    00000cb2: 	divsd	DATAat0x15758(%rip), %xmm0
    00000cba: 	callq	_Z13record_resultdPKc # Offset: 3258
    00000cbf: 	movq	0x110(%rsp), %rdi
    00000cc7: 	cmpq	%rbx, %rdi
    00000cca: 	je	.Ltmp861 # Offset: 3274
    00000ccc: 	movq	0x120(%rsp), %rax
    00000cd4: 	leaq	0x1(%rax), %rsi
    00000cd8: 	callq	_ZdlPvm@PLT # Offset: 3288
.Ltmp861:
    00000cdd: 	leaq	0x90(%rsp), %rdi
    00000ce5: 	leaq	DATAat0x1525e(%rip), %rdx
    00000cec: 	movq	%r15, %rsi
    00000cef: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3311
    00000cf4: 	movl	iterations(%rip), %edx
    00000cfa: 	movq	0x90(%rsp), %rdi
    00000d02: 	movl	$0xf42400, %esi
    00000d07: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 3335
    00000d0c: 	leaq	DATAat0x153f0(%rip), %rdx
    00000d13: 	movq	%r15, %rsi
    00000d16: 	movq	%rbp, %rdi
    00000d19: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3353
    00000d1e: 	callq	clock@PLT # Offset: 3358
    00000d23: 	movl	iterations(%rip), %edx
    00000d29: 	xorl	%r13d, %r13d
    00000d2c: 	movq	%rax, start_time(%rip)
    00000d33: 	testl	%edx, %edx
    00000d35: 	jle	.Ltmp862 # Offset: 3381
.Ltmp872:
    00000d3b: 	movq	%r12, %rax
    00000d3e: 	xorl	%edi, %edi
.Ltmp865:
    00000d40: 	pxor	%xmm0, %xmm0
    00000d44: 	leaq	0x3e80(%rax), %rdx
.Ltmp863:
    00000d4b: 	movdqu	(%rax), %xmm4
    00000d4f: 	addq	$0x10, %rax
    00000d53: 	paddd	%xmm4, %xmm0
    00000d57: 	cmpq	%rax, %rdx
    00000d5a: 	jne	.Ltmp863 # Offset: 3418
    00000d5c: 	movdqa	%xmm0, %xmm1
    00000d60: 	psrldq	$0x8, %xmm1
    00000d65: 	paddd	%xmm1, %xmm0
    00000d69: 	movdqa	%xmm0, %xmm1
    00000d6d: 	psrldq	$0x4, %xmm1
    00000d72: 	paddd	%xmm1, %xmm0
    00000d76: 	movd	%xmm0, %eax
    00000d7a: 	addl	%eax, %edi
    00000d7c: 	cmpq	(%rsp), %rdx
    00000d80: 	je	.Ltmp864 # Offset: 3456
    00000d86: 	movq	%rdx, %rax
    00000d89: 	jmp	.Ltmp865 # Offset: 3465
.Ltmp795:
    00000d8b: 	addq	$0x20, %rbx
    00000d8f: 	cmpq	%r12, %rbx
    00000d92: 	jne	.Ltmp796 # Offset: 3474
    00000d98: 	addq	$0x8, %rbp
    00000d9c: 	cmpq	%rbp, %r13
    00000d9f: 	ja	.Ltmp797 # Offset: 3487
    00000da5: 	jmp	.Ltmp866 # Offset: 3493
.Ltmp867:
    00000daa: 	addq	$0x20, %rbx
.Ltmp798:
    00000dae: 	cmpq	%rbx, %r13
    00000db1: 	je	.Ltmp803 # Offset: 3505
.Ltmp868:
    00000db7: 	movq	(%rbx), %rdi
    00000dba: 	leaq	0x10(%rbx), %rax
    00000dbe: 	cmpq	%rax, %rdi
    00000dc1: 	je	.Ltmp867 # Offset: 3521
    00000dc3: 	movq	0x10(%rbx), %rax
    00000dc7: 	addq	$0x20, %rbx
    00000dcb: 	leaq	0x1(%rax), %rsi
    00000dcf: 	callq	_ZdlPvm@PLT # Offset: 3535
    00000dd4: 	cmpq	%rbx, %r13
    00000dd7: 	jne	.Ltmp868 # Offset: 3543
    00000dd9: 	jmp	.Ltmp803 # Offset: 3545
    00000dde: 	nop # Size: 2
.Ltmp833:
    00000de0: 	movq	%r12, %rdi
    00000de3: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 3555
    00000de8: 	movq	(%r12), %rax
    00000dec: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000df3: 	movl	$0xa, %esi
    00000df8: 	movq	0x30(%rax), %rax
    00000dfc: 	cmpq	%rdx, %rax
    00000dff: 	je	.Ltmp869 # Offset: 3583
    00000e05: 	movq	%r12, %rdi
    00000e08: 	callq	*%rax # Offset: 3592
    00000e0a: 	movsbl	%al, %esi
    00000e0d: 	jmp	.Ltmp869 # Offset: 3597
.Ltmp849:
    00000e12: 	movq	%r13, %rdi
    00000e15: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 3605
    00000e1a: 	movq	(%r13), %rax
    00000e1e: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000e25: 	movl	$0xa, %esi
    00000e2a: 	movq	0x30(%rax), %rax
    00000e2e: 	cmpq	%rdx, %rax
    00000e31: 	je	.Ltmp870 # Offset: 3633
    00000e37: 	movq	%r13, %rdi
    00000e3a: 	callq	*%rax # Offset: 3642
    00000e3c: 	movsbl	%al, %esi
    00000e3f: 	jmp	.Ltmp870 # Offset: 3647
.Ltmp858:
    00000e44: 	movq	%r13, %rdi
    00000e47: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 3655
    00000e4c: 	movq	(%r13), %rax
    00000e50: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000e57: 	movl	$0xa, %esi
    00000e5c: 	movq	0x30(%rax), %rax
    00000e60: 	cmpq	%rdx, %rax
    00000e63: 	je	.Ltmp871 # Offset: 3683
    00000e69: 	movq	%r13, %rdi
    00000e6c: 	callq	*%rax # Offset: 3692
    00000e6e: 	movsbl	%al, %esi
    00000e71: 	jmp	.Ltmp871 # Offset: 3697
    00000e76: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp864:
    00000e80: 	movq	%rbp, %r8
    00000e83: 	movl	$0x4, %ecx
    00000e88: 	movl	$0x3e8, %edx
    00000e8d: 	movl	$0xfa0, %esi
    00000e92: 	callq	_Z18check_sum_channelsIiEvT_mmmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3730
    00000e97: 	addl	$0x1, %r13d
    00000e9b: 	cmpl	iterations(%rip), %r13d
    00000ea2: 	jl	.Ltmp872 # Offset: 3746
.Ltmp862:
    00000ea8: 	movq	%rbp, %rdi
    00000eab: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3755
    00000eb0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000eb7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ebe: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ec5: 	je	.Ltmp873 # Offset: 3781
.Ltmp926:
    00000ecb: 	movq	-0x20(%rax), %r13
    00000ecf: 	callq	clock@PLT # Offset: 3791
    00000ed4: 	pxor	%xmm0, %xmm0
    00000ed8: 	movq	%rax, end_time(%rip)
    00000edf: 	movq	%r13, %rdi
    00000ee2: 	subq	start_time(%rip), %rax
    00000ee9: 	cvtsi2sd	%rax, %xmm0
    00000eee: 	divsd	DATAat0x15758(%rip), %xmm0
    00000ef6: 	callq	_Z13record_resultdPKc # Offset: 3830
    00000efb: 	movq	0x110(%rsp), %rdi
    00000f03: 	cmpq	%rbx, %rdi
    00000f06: 	je	.Ltmp874 # Offset: 3846
    00000f08: 	movq	0x120(%rsp), %rax
    00000f10: 	leaq	0x1(%rax), %rsi
    00000f14: 	callq	_ZdlPvm@PLT # Offset: 3860
.Ltmp874:
    00000f19: 	leaq	DATAat0x15420(%rip), %rdx
    00000f20: 	movq	%r15, %rsi
    00000f23: 	movq	%rbp, %rdi
    00000f26: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3878
    00000f2b: 	movq	%rbp, %rdx
    00000f2e: 	movl	$0x4, %esi
    00000f33: 	movq	%r12, %rdi
    00000f36: 	callq	"_Z27test_loop_2D_flat_chan_opt2IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3894
    00000f3b: 	movq	0x110(%rsp), %rdi
    00000f43: 	cmpq	%rbx, %rdi
    00000f46: 	je	.Ltmp875 # Offset: 3910
    00000f48: 	movq	0x120(%rsp), %rax
    00000f50: 	leaq	0x1(%rax), %rsi
    00000f54: 	callq	_ZdlPvm@PLT # Offset: 3924
.Ltmp875:
    00000f59: 	leaq	DATAat0x15450(%rip), %rdx
    00000f60: 	movq	%r15, %rsi
    00000f63: 	movq	%rbp, %rdi
    00000f66: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3942
    00000f6b: 	movq	%rbp, %rdx
    00000f6e: 	movl	$0x4, %esi
    00000f73: 	movq	%r12, %rdi
    00000f76: 	callq	"_Z27test_loop_2D_flat_chan_opt3IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3958
    00000f7b: 	movq	0x110(%rsp), %rdi
    00000f83: 	cmpq	%rbx, %rdi
    00000f86: 	je	.Ltmp876 # Offset: 3974
    00000f88: 	movq	0x120(%rsp), %rax
    00000f90: 	leaq	0x1(%rax), %rsi
    00000f94: 	callq	_ZdlPvm@PLT # Offset: 3988
.Ltmp876:
    00000f99: 	leaq	DATAat0x15480(%rip), %rdx
    00000fa0: 	movq	%r15, %rsi
    00000fa3: 	movq	%rbp, %rdi
    00000fa6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4006
    00000fab: 	movq	%rbp, %rdx
    00000fae: 	movl	$0x4, %esi
    00000fb3: 	movq	%r12, %rdi
    00000fb6: 	callq	"_Z27test_loop_2D_flat_chan_opt4IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4022
    00000fbb: 	movq	0x110(%rsp), %rdi
    00000fc3: 	cmpq	%rbx, %rdi
    00000fc6: 	je	.Ltmp877 # Offset: 4038
    00000fc8: 	movq	0x120(%rsp), %rax
    00000fd0: 	leaq	0x1(%rax), %rsi
    00000fd4: 	callq	_ZdlPvm@PLT # Offset: 4052
.Ltmp877:
    00000fd9: 	leaq	DATAat0x154b0(%rip), %rdx
    00000fe0: 	movq	%r15, %rsi
    00000fe3: 	movq	%rbp, %rdi
    00000fe6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4070
    00000feb: 	movq	%rbp, %rdx
    00000fee: 	movl	$0x4, %esi
    00000ff3: 	movq	%r12, %rdi
    00000ff6: 	callq	"_Z29test_loop_2D_flat_chan_revCYXIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4086
    00000ffb: 	movq	0x110(%rsp), %rdi
    00001003: 	cmpq	%rbx, %rdi
    00001006: 	je	.Ltmp878 # Offset: 4102
    00001008: 	movq	0x120(%rsp), %rax
    00001010: 	leaq	0x1(%rax), %rsi
    00001014: 	callq	_ZdlPvm@PLT # Offset: 4116
.Ltmp878:
    00001019: 	leaq	DATAat0x154e0(%rip), %rdx
    00001020: 	movq	%r15, %rsi
    00001023: 	movq	%rbp, %rdi
    00001026: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4134
    0000102b: 	movq	%rbp, %rdx
    0000102e: 	movl	$0x4, %esi
    00001033: 	movq	%r12, %rdi
    00001036: 	callq	"_Z29test_loop_2D_flat_chan_revXYCIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4150
    0000103b: 	movq	0x110(%rsp), %rdi
    00001043: 	cmpq	%rbx, %rdi
    00001046: 	je	.Ltmp879 # Offset: 4166
    00001048: 	movq	0x120(%rsp), %rax
    00001050: 	leaq	0x1(%rax), %rsi
    00001054: 	callq	_ZdlPvm@PLT # Offset: 4180
.Ltmp879:
    00001059: 	leaq	DATAat0x15510(%rip), %rdx
    00001060: 	movq	%r15, %rsi
    00001063: 	movq	%rbp, %rdi
    00001066: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4198
    0000106b: 	movq	%rbp, %rdx
    0000106e: 	movl	$0x4, %esi
    00001073: 	movq	%r12, %rdi
    00001076: 	callq	"_Z29test_loop_2D_flat_chan_revXCYIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4214
    0000107b: 	movq	0x110(%rsp), %rdi
    00001083: 	cmpq	%rbx, %rdi
    00001086: 	je	.Ltmp880 # Offset: 4230
    00001088: 	movq	0x120(%rsp), %rax
    00001090: 	leaq	0x1(%rax), %rsi
    00001094: 	callq	_ZdlPvm@PLT # Offset: 4244
.Ltmp880:
    00001099: 	leaq	DATAat0x15540(%rip), %rdx
    000010a0: 	movq	%r15, %rsi
    000010a3: 	movq	%rbp, %rdi
    000010a6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4262
    000010ab: 	movq	%rbp, %rdx
    000010ae: 	movl	$0x4, %esi
    000010b3: 	movq	%r12, %rdi
    000010b6: 	callq	"_Z29test_loop_2D_flat_chan_revCXYIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4278
    000010bb: 	movq	0x110(%rsp), %rdi
    000010c3: 	cmpq	%rbx, %rdi
    000010c6: 	je	.Ltmp881 # Offset: 4294
    000010c8: 	movq	0x120(%rsp), %rax
    000010d0: 	leaq	0x1(%rax), %rsi
    000010d4: 	callq	_ZdlPvm@PLT # Offset: 4308
.Ltmp881:
    000010d9: 	leaq	0xb0(%rsp), %rdi
    000010e1: 	leaq	DATAat0x15570(%rip), %rdx
    000010e8: 	movq	%r15, %rsi
    000010eb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4331
    000010f0: 	movl	iterations(%rip), %edx
    000010f6: 	movq	0xb0(%rsp), %rdi
    000010fe: 	movl	$0xf42400, %esi
    00001103: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 4355
    00001108: 	leaq	DATAat0x15598(%rip), %rdx
    0000110f: 	movq	%r15, %rsi
    00001112: 	movq	%rbp, %rdi
    00001115: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4373
    0000111a: 	callq	clock@PLT # Offset: 4378
    0000111f: 	xorl	%r13d, %r13d
    00001122: 	movq	%rax, start_time(%rip)
    00001129: 	movl	iterations(%rip), %eax
    0000112f: 	testl	%eax, %eax
    00001131: 	jle	.Ltmp882 # Offset: 4401
.Ltmp886:
    00001133: 	movq	%r12, %rax
    00001136: 	xorl	%ecx, %ecx
    00001138: 	xorl	%edi, %edi
.Ltmp885:
    0000113a: 	xorl	%edx, %edx
    0000113c: 	leaq	0x3e80(%rax), %rsi
.Ltmp883:
    00001143: 	addl	(%rax), %edx
    00001145: 	addq	$0x10, %rax
    00001149: 	addl	-0xc(%rax), %edx
    0000114c: 	addl	-0x8(%rax), %edx
    0000114f: 	cmpq	%rax, %rsi
    00001152: 	jne	.Ltmp883 # Offset: 4434
    00001154: 	addq	$0xfa0, %rcx
    0000115b: 	addl	%edx, %edi
    0000115d: 	cmpq	$0xf42400, %rcx
    00001164: 	je	.Ltmp884 # Offset: 4452
    00001166: 	movq	%rsi, %rax
    00001169: 	jmp	.Ltmp885 # Offset: 4457
.Ltmp884:
    0000116b: 	movq	%rbp, %r8
    0000116e: 	movl	$0x3, %ecx
    00001173: 	movl	$0x3e8, %edx
    00001178: 	movl	$0xfa0, %esi
    0000117d: 	callq	_Z18check_sum_channelsIiEvT_mmmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4477
    00001182: 	addl	$0x1, %r13d
    00001186: 	cmpl	iterations(%rip), %r13d
    0000118d: 	jl	.Ltmp886 # Offset: 4493
.Ltmp882:
    0000118f: 	movq	%rbp, %rdi
    00001192: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4498
    00001197: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000119e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011a5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011ac: 	je	.Ltmp887 # Offset: 4524
.Ltmp925:
    000011b2: 	movq	-0x20(%rax), %r13
    000011b6: 	callq	clock@PLT # Offset: 4534
    000011bb: 	pxor	%xmm0, %xmm0
    000011bf: 	movq	%rax, end_time(%rip)
    000011c6: 	movq	%r13, %rdi
    000011c9: 	subq	start_time(%rip), %rax
    000011d0: 	cvtsi2sd	%rax, %xmm0
    000011d5: 	divsd	DATAat0x15758(%rip), %xmm0
    000011dd: 	callq	_Z13record_resultdPKc # Offset: 4573
    000011e2: 	movq	0x110(%rsp), %rdi
    000011ea: 	cmpq	%rbx, %rdi
    000011ed: 	je	.Ltmp888 # Offset: 4589
    000011ef: 	movq	0x120(%rsp), %rax
    000011f7: 	leaq	0x1(%rax), %rsi
    000011fb: 	callq	_ZdlPvm@PLT # Offset: 4603
.Ltmp888:
    00001200: 	leaq	DATAat0x155c8(%rip), %rdx
    00001207: 	movq	%r15, %rsi
    0000120a: 	movq	%rbp, %rdi
    0000120d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4621
    00001212: 	movq	%rbp, %rdx
    00001215: 	movl	$0x3, %esi
    0000121a: 	movq	%r12, %rdi
    0000121d: 	callq	"_Z27test_loop_2D_flat_chan_opt2IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4637
    00001222: 	movq	0x110(%rsp), %rdi
    0000122a: 	cmpq	%rbx, %rdi
    0000122d: 	je	.Ltmp889 # Offset: 4653
    0000122f: 	movq	0x120(%rsp), %rax
    00001237: 	leaq	0x1(%rax), %rsi
    0000123b: 	callq	_ZdlPvm@PLT # Offset: 4667
.Ltmp889:
    00001240: 	leaq	DATAat0x155f8(%rip), %rdx
    00001247: 	movq	%r15, %rsi
    0000124a: 	movq	%rbp, %rdi
    0000124d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4685
    00001252: 	movq	%rbp, %rdx
    00001255: 	movl	$0x3, %esi
    0000125a: 	movq	%r12, %rdi
    0000125d: 	callq	"_Z27test_loop_2D_flat_chan_opt3IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4701
    00001262: 	movq	0x110(%rsp), %rdi
    0000126a: 	cmpq	%rbx, %rdi
    0000126d: 	je	.Ltmp890 # Offset: 4717
    0000126f: 	movq	0x120(%rsp), %rax
    00001277: 	leaq	0x1(%rax), %rsi
    0000127b: 	callq	_ZdlPvm@PLT # Offset: 4731
.Ltmp890:
    00001280: 	leaq	DATAat0x15628(%rip), %rdx
    00001287: 	movq	%r15, %rsi
    0000128a: 	movq	%rbp, %rdi
    0000128d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4749
    00001292: 	movq	%rbp, %rdx
    00001295: 	movl	$0x3, %esi
    0000129a: 	movq	%r12, %rdi
    0000129d: 	callq	"_Z27test_loop_2D_flat_chan_opt4IiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4765
    000012a2: 	movq	0x110(%rsp), %rdi
    000012aa: 	cmpq	%rbx, %rdi
    000012ad: 	je	.Ltmp891 # Offset: 4781
    000012af: 	movq	0x120(%rsp), %rax
    000012b7: 	leaq	0x1(%rax), %rsi
    000012bb: 	callq	_ZdlPvm@PLT # Offset: 4795
.Ltmp891:
    000012c0: 	leaq	DATAat0x15658(%rip), %rdx
    000012c7: 	movq	%r15, %rsi
    000012ca: 	movq	%rbp, %rdi
    000012cd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4813
    000012d2: 	movq	%rbp, %rdx
    000012d5: 	movl	$0x3, %esi
    000012da: 	movq	%r12, %rdi
    000012dd: 	callq	"_Z29test_loop_2D_flat_chan_revCYXIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4829
    000012e2: 	movq	0x110(%rsp), %rdi
    000012ea: 	cmpq	%rbx, %rdi
    000012ed: 	je	.Ltmp892 # Offset: 4845
    000012ef: 	movq	0x120(%rsp), %rax
    000012f7: 	leaq	0x1(%rax), %rsi
    000012fb: 	callq	_ZdlPvm@PLT # Offset: 4859
.Ltmp892:
    00001300: 	leaq	DATAat0x15688(%rip), %rdx
    00001307: 	movq	%r15, %rsi
    0000130a: 	movq	%rbp, %rdi
    0000130d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4877
    00001312: 	movq	%rbp, %rdx
    00001315: 	movl	$0x3, %esi
    0000131a: 	movq	%r12, %rdi
    0000131d: 	callq	"_Z29test_loop_2D_flat_chan_revXYCIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4893
    00001322: 	movq	0x110(%rsp), %rdi
    0000132a: 	cmpq	%rbx, %rdi
    0000132d: 	je	.Ltmp893 # Offset: 4909
    0000132f: 	movq	0x120(%rsp), %rax
    00001337: 	leaq	0x1(%rax), %rsi
    0000133b: 	callq	_ZdlPvm@PLT # Offset: 4923
.Ltmp893:
    00001340: 	leaq	DATAat0x156b8(%rip), %rdx
    00001347: 	movq	%r15, %rsi
    0000134a: 	movq	%rbp, %rdi
    0000134d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4941
    00001352: 	movq	%rbp, %rdx
    00001355: 	movl	$0x3, %esi
    0000135a: 	movq	%r12, %rdi
    0000135d: 	callq	"_Z29test_loop_2D_flat_chan_revXCYIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4957
    00001362: 	movq	0x110(%rsp), %rdi
    0000136a: 	cmpq	%rbx, %rdi
    0000136d: 	je	.Ltmp894 # Offset: 4973
    0000136f: 	movq	0x120(%rsp), %rax
    00001377: 	leaq	0x1(%rax), %rsi
    0000137b: 	callq	_ZdlPvm@PLT # Offset: 4987
.Ltmp894:
    00001380: 	leaq	DATAat0x156e8(%rip), %rdx
    00001387: 	movq	%r15, %rsi
    0000138a: 	movq	%rbp, %rdi
    0000138d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5005
    00001392: 	movq	%rbp, %rdx
    00001395: 	movl	$0x3, %esi
    0000139a: 	movq	%r12, %rdi
    0000139d: 	callq	"_Z29test_loop_2D_flat_chan_revCXYIiEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 5021
    000013a2: 	movq	0x110(%rsp), %rdi
    000013aa: 	cmpq	%rbx, %rdi
    000013ad: 	je	.Ltmp895 # Offset: 5037
    000013af: 	movq	0x120(%rsp), %rax
    000013b7: 	leaq	0x1(%rax), %rsi
    000013bb: 	callq	_ZdlPvm@PLT # Offset: 5051
.Ltmp895:
    000013c0: 	leaq	0xd0(%rsp), %rdi
    000013c8: 	leaq	DATAat0x15718(%rip), %rdx
    000013cf: 	movq	%r15, %rsi
    000013d2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5074
    000013d7: 	movl	iterations(%rip), %edx
    000013dd: 	movq	0xd0(%rsp), %rdi
    000013e5: 	movl	$0xf42400, %esi
    000013ea: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 5098
    000013ef: 	movq	%r12, %rdi
    000013f2: 	callq	_ZdaPv@PLT # Offset: 5106
    000013f7: 	movl	$0x44e2f48, %edi
    000013fc: 	callq	_Znam@PLT # Offset: 5116
    00001401: 	movl	$0x3a968, %edi
    00001406: 	movq	%rax, %r14
    00001409: 	callq	_Znam@PLT # Offset: 5129
    0000140e: 	movq	%rax, %r12
    00001411: 	cvttsd2si	init_value(%rip), %eax
    00001419: 	leaq	0x3a648(%r14), %rcx
    00001420: 	leaq	0x451d590(%r14), %rdi
    00001427: 	movd	%eax, %xmm0
    0000142b: 	pshufd	$0xe0, %xmm0, %xmm1
    00001430: 	pshufd	$0x0, %xmm0, %xmm0
.Ltmp898:
    00001435: 	leaq	-0x3a338(%rcx), %rdx
    0000143c: 	leaq	-0x3a648(%rcx), %rsi
.Ltmp897:
    00001443: 	movq	%rsi, %rax
.Ltmp896:
    00001446: 	movups	%xmm0, (%rax)
    00001449: 	addq	$0x10, %rax
    0000144d: 	cmpq	%rdx, %rax
    00001450: 	jne	.Ltmp896 # Offset: 5200
    00001452: 	leaq	0x318(%rax), %rdx
    00001459: 	movq	%xmm1, (%rax)
    0000145d: 	addq	$0x318, %rsi
    00001464: 	cmpq	%rdx, %rcx
    00001467: 	jne	.Ltmp897 # Offset: 5223
    00001469: 	leaq	0x3a650(%rax), %rcx
    00001470: 	cmpq	%rcx, %rdi
    00001473: 	jne	.Ltmp898 # Offset: 5235
    00001475: 	movq	%r12, %rax
    00001478: 	leaq	0x3a968(%r12), %rcx
.Ltmp900:
    00001480: 	movq	%rax, %rdx
    00001483: 	leaq	0x310(%rax), %rsi
.Ltmp899:
    0000148a: 	movups	%xmm0, (%rdx)
    0000148d: 	addq	$0x10, %rdx
    00001491: 	cmpq	%rsi, %rdx
    00001494: 	jne	.Ltmp899 # Offset: 5268
    00001496: 	movq	%xmm1, 0x310(%rax)
    0000149e: 	addq	$0x318, %rax
    000014a4: 	cmpq	%rax, %rcx
    000014a7: 	jne	.Ltmp900 # Offset: 5287
    000014a9: 	leaq	DATAat0x15278(%rip), %rdx
    000014b0: 	movq	%r15, %rsi
    000014b3: 	movq	%rbp, %rdi
    000014b6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5302
    000014bb: 	movq	%rbp, %rdx
    000014be: 	movq	%r12, %rsi
    000014c1: 	movq	%r14, %rdi
    000014c4: 	callq	_Z16test_loop_3D_ZYXIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5316
    000014c9: 	movq	0x110(%rsp), %rdi
    000014d1: 	cmpq	%rbx, %rdi
    000014d4: 	je	.Ltmp901 # Offset: 5332
    000014d6: 	movq	0x120(%rsp), %rax
    000014de: 	leaq	0x1(%rax), %rsi
    000014e2: 	callq	_ZdlPvm@PLT # Offset: 5346
.Ltmp901:
    000014e7: 	leaq	DATAat0x15291(%rip), %rdx
    000014ee: 	movq	%r15, %rsi
    000014f1: 	movq	%rbp, %rdi
    000014f4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5364
    000014f9: 	movq	%rbp, %rdx
    000014fc: 	movq	%r12, %rsi
    000014ff: 	movq	%r14, %rdi
    00001502: 	callq	_Z16test_loop_3D_ZXYIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5378
    00001507: 	movq	0x110(%rsp), %rdi
    0000150f: 	cmpq	%rbx, %rdi
    00001512: 	je	.Ltmp902 # Offset: 5394
    00001514: 	movq	0x120(%rsp), %rax
    0000151c: 	leaq	0x1(%rax), %rsi
    00001520: 	callq	_ZdlPvm@PLT # Offset: 5408
.Ltmp902:
    00001525: 	leaq	DATAat0x152aa(%rip), %rdx
    0000152c: 	movq	%r15, %rsi
    0000152f: 	movq	%rbp, %rdi
    00001532: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5426
    00001537: 	movq	%rbp, %rdx
    0000153a: 	movq	%r12, %rsi
    0000153d: 	movq	%r14, %rdi
    00001540: 	callq	_Z16test_loop_3D_YZXIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5440
    00001545: 	movq	0x110(%rsp), %rdi
    0000154d: 	cmpq	%rbx, %rdi
    00001550: 	je	.Ltmp903 # Offset: 5456
    00001552: 	movq	0x120(%rsp), %rax
    0000155a: 	leaq	0x1(%rax), %rsi
    0000155e: 	callq	_ZdlPvm@PLT # Offset: 5470
.Ltmp903:
    00001563: 	leaq	DATAat0x152c3(%rip), %rdx
    0000156a: 	movq	%r15, %rsi
    0000156d: 	movq	%rbp, %rdi
    00001570: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5488
    00001575: 	movq	%rbp, %rdx
    00001578: 	movq	%r12, %rsi
    0000157b: 	movq	%r14, %rdi
    0000157e: 	callq	_Z16test_loop_3D_YXZIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5502
    00001583: 	movq	0x110(%rsp), %rdi
    0000158b: 	cmpq	%rbx, %rdi
    0000158e: 	je	.Ltmp904 # Offset: 5518
    00001590: 	movq	0x120(%rsp), %rax
    00001598: 	leaq	0x1(%rax), %rsi
    0000159c: 	callq	_ZdlPvm@PLT # Offset: 5532
.Ltmp904:
    000015a1: 	leaq	DATAat0x152dc(%rip), %rdx
    000015a8: 	movq	%r15, %rsi
    000015ab: 	movq	%rbp, %rdi
    000015ae: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5550
    000015b3: 	movq	%rbp, %rdx
    000015b6: 	movq	%r12, %rsi
    000015b9: 	movq	%r14, %rdi
    000015bc: 	callq	_Z16test_loop_3D_XYZIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5564
    000015c1: 	movq	0x110(%rsp), %rdi
    000015c9: 	cmpq	%rbx, %rdi
    000015cc: 	je	.Ltmp905 # Offset: 5580
    000015ce: 	movq	0x120(%rsp), %rax
    000015d6: 	leaq	0x1(%rax), %rsi
    000015da: 	callq	_ZdlPvm@PLT # Offset: 5594
.Ltmp905:
    000015df: 	leaq	DATAat0x152f5(%rip), %rdx
    000015e6: 	movq	%r15, %rsi
    000015e9: 	movq	%rbp, %rdi
    000015ec: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5612
    000015f1: 	movq	%rbp, %rdx
    000015f4: 	movq	%r12, %rsi
    000015f7: 	movq	%r14, %rdi
    000015fa: 	callq	_Z16test_loop_3D_XZYIiEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5626
    000015ff: 	movq	0x110(%rsp), %rdi
    00001607: 	cmpq	%rbx, %rdi
    0000160a: 	je	.Ltmp906 # Offset: 5642
    0000160c: 	movq	0x120(%rsp), %rax
    00001614: 	leaq	0x1(%rax), %rsi
    00001618: 	callq	_ZdlPvm@PLT # Offset: 5656
.Ltmp906:
    0000161d: 	leaq	DATAat0x1530e(%rip), %r13
    00001624: 	leaq	0xf0(%rsp), %rdi
    0000162c: 	movq	%r15, %rsi
    0000162f: 	movq	%r13, %rdx
    00001632: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5682
    00001637: 	movl	iterations(%rip), %edx
    0000163d: 	movq	0xf0(%rsp), %rdi
    00001645: 	movl	$0x1138bd2, %esi
    0000164a: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 5706
    0000164f: 	movq	%r14, %rdi
    00001652: 	callq	_ZdaPv@PLT # Offset: 5714
    00001657: 	movq	%r12, %rdi
    0000165a: 	callq	_ZdaPv@PLT # Offset: 5722
    0000165f: 	movl	$0x7f1d360, %edi
    00001664: 	callq	_Znam@PLT # Offset: 5732
    00001669: 	movq	%rax, %r12
    0000166c: 	cvttsd2si	init_value(%rip), %eax
    00001674: 	xorl	%edi, %edi
    00001676: 	leaq	0x1b7730(%r12), %r8
    0000167e: 	movd	%eax, %xmm0
    00001682: 	pshufd	$0x0, %xmm0, %xmm0
.Ltmp910:
    00001687: 	leaq	-0x1b1e20(%r8), %rsi
.Ltmp909:
    0000168e: 	leaq	-0x5910(%rsi), %rcx
    00001695: 	leaq	-0x57e0(%rsi), %rdx
    0000169c: 	nopl	(%rax) # Size: 4
.Ltmp908:
    000016a0: 	movq	%rcx, %rax
    000016a3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp907:
    000016a8: 	movups	%xmm0, (%rax)
    000016ab: 	addq	$0x10, %rax
    000016af: 	cmpq	%rdx, %rax
    000016b2: 	jne	.Ltmp907 # Offset: 5810
    000016b4: 	leaq	0x130(%rax), %rdx
    000016bb: 	addq	$0x130, %rcx
    000016c2: 	cmpq	%rsi, %rdx
    000016c5: 	jne	.Ltmp908 # Offset: 5829
    000016c7: 	leaq	0x5910(%rax), %rsi
    000016ce: 	cmpq	%rsi, %r8
    000016d1: 	jne	.Ltmp909 # Offset: 5841
    000016d3: 	addq	$0x1b1e20, %rdi
    000016da: 	leaq	0x1b7730(%rax), %r8
    000016e1: 	cmpq	$0x7f1d360, %rdi
    000016e8: 	jne	.Ltmp910 # Offset: 5864
    000016ea: 	leaq	DATAat0x15323(%rip), %rdx
    000016f1: 	movq	%r15, %rsi
    000016f4: 	movq	%rbp, %rdi
    000016f7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5879
    000016fc: 	movq	%rbp, %rsi
    000016ff: 	movq	%r12, %rdi
    00001702: 	callq	_Z17test_loop_4D_ABCDIiEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5890
    00001707: 	movq	0x110(%rsp), %rdi
    0000170f: 	cmpq	%rbx, %rdi
    00001712: 	je	.Ltmp911 # Offset: 5906
    00001714: 	movq	0x120(%rsp), %rax
    0000171c: 	leaq	0x1(%rax), %rsi
    00001720: 	callq	_ZdlPvm@PLT # Offset: 5920
.Ltmp911:
    00001725: 	leaq	DATAat0x1533d(%rip), %rdx
    0000172c: 	movq	%r15, %rsi
    0000172f: 	movq	%rbp, %rdi
    00001732: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5938
    00001737: 	movq	%rbp, %rsi
    0000173a: 	movq	%r12, %rdi
    0000173d: 	callq	_Z18test_loop_4D_ABCD2IiEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5949
    00001742: 	movq	0x110(%rsp), %rdi
    0000174a: 	cmpq	%rbx, %rdi
    0000174d: 	je	.Ltmp912 # Offset: 5965
    0000174f: 	movq	0x120(%rsp), %rax
    00001757: 	leaq	0x1(%rax), %rsi
    0000175b: 	callq	_ZdlPvm@PLT # Offset: 5979
.Ltmp912:
    00001760: 	leaq	DATAat0x15358(%rip), %rdx
    00001767: 	movq	%r15, %rsi
    0000176a: 	movq	%rbp, %rdi
    0000176d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5997
    00001772: 	movq	%rbp, %rsi
    00001775: 	movq	%r12, %rdi
    00001778: 	callq	_Z17test_loop_4D_DCBAIiEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 6008
    0000177d: 	movq	0x110(%rsp), %rdi
    00001785: 	cmpq	%rbx, %rdi
    00001788: 	je	.Ltmp913 # Offset: 6024
    0000178a: 	movq	0x120(%rsp), %rax
    00001792: 	leaq	0x1(%rax), %rsi
    00001796: 	callq	_ZdlPvm@PLT # Offset: 6038
.Ltmp913:
    0000179b: 	movq	%r13, %rdx
    0000179e: 	movq	%r15, %rsi
    000017a1: 	movq	%rbp, %rdi
    000017a4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6052
    000017a9: 	movl	iterations(%rip), %edx
    000017af: 	movq	0x110(%rsp), %rdi
    000017b7: 	movl	$0x1138bd2, %esi
    000017bc: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 6076
    000017c1: 	movq	%r12, %rdi
    000017c4: 	callq	_ZdaPv@PLT # Offset: 6084
    000017c9: 	movq	0x110(%rsp), %rdi
    000017d1: 	cmpq	%rbx, %rdi
    000017d4: 	je	.Ltmp914 # Offset: 6100
    000017d6: 	movq	0x120(%rsp), %rax
    000017de: 	leaq	0x1(%rax), %rsi
    000017e2: 	callq	_ZdlPvm@PLT # Offset: 6114
.Ltmp914:
    000017e7: 	movq	0xf0(%rsp), %rdi
    000017ef: 	leaq	0x100(%rsp), %rax
    000017f7: 	cmpq	%rax, %rdi
    000017fa: 	je	.Ltmp915 # Offset: 6138
    000017fc: 	movq	0x100(%rsp), %rax
    00001804: 	leaq	0x1(%rax), %rsi
    00001808: 	callq	_ZdlPvm@PLT # Offset: 6152
.Ltmp915:
    0000180d: 	movq	0xd0(%rsp), %rdi
    00001815: 	leaq	0xe0(%rsp), %rax
    0000181d: 	cmpq	%rax, %rdi
    00001820: 	je	.Ltmp916 # Offset: 6176
    00001822: 	movq	0xe0(%rsp), %rax
    0000182a: 	leaq	0x1(%rax), %rsi
    0000182e: 	callq	_ZdlPvm@PLT # Offset: 6190
.Ltmp916:
    00001833: 	movq	0xb0(%rsp), %rdi
    0000183b: 	leaq	0xc0(%rsp), %rax
    00001843: 	cmpq	%rax, %rdi
    00001846: 	je	.Ltmp917 # Offset: 6214
    00001848: 	movq	0xc0(%rsp), %rax
    00001850: 	leaq	0x1(%rax), %rsi
    00001854: 	callq	_ZdlPvm@PLT # Offset: 6228
.Ltmp917:
    00001859: 	movq	0x90(%rsp), %rdi
    00001861: 	leaq	0xa0(%rsp), %rax
    00001869: 	cmpq	%rax, %rdi
    0000186c: 	je	.Ltmp918 # Offset: 6252
    0000186e: 	movq	0xa0(%rsp), %rax
    00001876: 	leaq	0x1(%rax), %rsi
    0000187a: 	callq	_ZdlPvm@PLT # Offset: 6266
.Ltmp918:
    0000187f: 	movq	0x70(%rsp), %rdi
    00001884: 	leaq	0x80(%rsp), %rax
    0000188c: 	cmpq	%rax, %rdi
    0000188f: 	je	.Ltmp919 # Offset: 6287
    00001891: 	movq	0x80(%rsp), %rax
    00001899: 	leaq	0x1(%rax), %rsi
    0000189d: 	callq	_ZdlPvm@PLT # Offset: 6301
.Ltmp919:
    000018a2: 	movq	0x50(%rsp), %rdi
    000018a7: 	leaq	0x60(%rsp), %rax
    000018ac: 	cmpq	%rax, %rdi
    000018af: 	je	.Ltmp920 # Offset: 6319
    000018b1: 	movq	0x60(%rsp), %rax
    000018b6: 	leaq	0x1(%rax), %rsi
    000018ba: 	callq	_ZdlPvm@PLT # Offset: 6330
.Ltmp920:
    000018bf: 	movq	0x138(%rsp), %rax
    000018c7: 	subq	%fs:0x28, %rax
    000018d0: 	jne	.Ltmp921 # Offset: 6352
    000018d6: 	addq	$0x148, %rsp
    000018dd: 	popq	%rbx
    000018de: 	popq	%rbp
    000018df: 	popq	%r12
    000018e1: 	popq	%r13
    000018e3: 	popq	%r14
    000018e5: 	popq	%r15
    000018e7: 	retq # Offset: 6375
.Ltmp815:
    000018e8: 	movq	%r12, %rdi
    000018eb: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 6379
    000018f0: 	movq	(%r12), %rax
    000018f4: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000018fb: 	movl	$0xa, %esi
    00001900: 	movq	0x30(%rax), %rax
    00001904: 	cmpq	%rdx, %rax
    00001907: 	je	.Ltmp922 # Offset: 6407
    0000190d: 	movq	%r12, %rdi
    00001910: 	callq	*%rax # Offset: 6416
    00001912: 	movsbl	%al, %esi
    00001915: 	jmp	.Ltmp922 # Offset: 6421
.Ltmp824:
    0000191a: 	movq	%r12, %rdi
    0000191d: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 6429
    00001922: 	movq	(%r12), %rax
    00001926: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    0000192d: 	movl	$0xa, %esi
    00001932: 	movq	0x30(%rax), %rax
    00001936: 	cmpq	%rdx, %rax
    00001939: 	je	.Ltmp923 # Offset: 6457
    0000193f: 	movq	%r12, %rdi
    00001942: 	callq	*%rax # Offset: 6466
    00001944: 	movsbl	%al, %esi
    00001947: 	jmp	.Ltmp923 # Offset: 6471
.Ltmp817:
    0000194c: 	movq	-0x8(%rdx), %rax
    00001950: 	addq	$0x200, %rax
    00001956: 	jmp	.Ltmp924 # Offset: 6486
.Ltmp887:
    0000195b: 	movq	-0x8(%rdx), %rax
    0000195f: 	addq	$0x200, %rax
    00001965: 	jmp	.Ltmp925 # Offset: 6501
.Ltmp873:
    0000196a: 	movq	-0x8(%rdx), %rax
    0000196e: 	addq	$0x200, %rax
    00001974: 	jmp	.Ltmp926 # Offset: 6516
.Ltmp860:
    00001979: 	movq	-0x8(%rdx), %rax
    0000197d: 	addq	$0x200, %rax
    00001983: 	jmp	.Ltmp927 # Offset: 6531
.Ltmp851:
    00001988: 	movq	-0x8(%rdx), %rax
    0000198c: 	addq	$0x200, %rax
    00001992: 	jmp	.Ltmp928 # Offset: 6546
.Ltmp842:
    00001997: 	movq	-0x8(%rdx), %rax
    0000199b: 	addq	$0x200, %rax
    000019a1: 	jmp	.Ltmp929 # Offset: 6561
.Ltmp835:
    000019a6: 	movq	-0x8(%rdx), %rax
    000019aa: 	addq	$0x200, %rax
    000019b0: 	jmp	.Ltmp930 # Offset: 6576
.Ltmp826:
    000019b5: 	movq	-0x8(%rdx), %rax
    000019b9: 	addq	$0x200, %rax
    000019bf: 	jmp	.Ltmp931 # Offset: 6591
.Ltmp921:
    000019c4: 	callq	__stack_chk_fail@PLT # Offset: 6596
.Ltmp857:
    000019c9: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 6601
.Ltmp848:
    000019ce: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 6606
.Ltmp823:
    000019d3: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 6611
.Ltmp832:
    000019d8: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 6616
.Ltmp814:
    000019dd: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 6621
    000019e2: 	endbr64
.Ltmp933:
    000019e6: 	movq	%rax, %rbp
    000019e9: 	jmp	.Ltmp932 # Offset: 6633
    000019eb: 	endbr64
    000019ef: 	jmp	.Ltmp933 # Offset: 6639
    000019f1: 	endbr64
    000019f5: 	jmp	.Ltmp933 # Offset: 6645
    000019f7: 	endbr64
.Ltmp935:
    000019fb: 	movq	%rax, %rbp
    000019fe: 	jmp	.Ltmp934 # Offset: 6654
    00001a03: 	endbr64
    00001a07: 	jmp	.Ltmp935 # Offset: 6663
    00001a09: 	endbr64
    00001a0d: 	jmp	.Ltmp935 # Offset: 6669
.Ltmp932:
    00001a0f: 	movq	0x110(%rsp), %rdi
    00001a17: 	cmpq	%rbx, %rdi
    00001a1a: 	je	.Ltmp936 # Offset: 6682
    00001a1c: 	movq	0x120(%rsp), %rax
    00001a24: 	leaq	0x1(%rax), %rsi
    00001a28: 	callq	_ZdlPvm@PLT # Offset: 6696
.Ltmp936:
    00001a2d: 	movq	0xd0(%rsp), %rdi
    00001a35: 	leaq	0xe0(%rsp), %rax
    00001a3d: 	cmpq	%rax, %rdi
    00001a40: 	je	.Ltmp937 # Offset: 6720
    00001a42: 	movq	0xe0(%rsp), %rax
    00001a4a: 	leaq	0x1(%rax), %rsi
    00001a4e: 	callq	_ZdlPvm@PLT # Offset: 6734
.Ltmp937:
    00001a53: 	movq	0xb0(%rsp), %rdi
    00001a5b: 	leaq	0xc0(%rsp), %rax
    00001a63: 	cmpq	%rax, %rdi
    00001a66: 	je	.Ltmp938 # Offset: 6758
    00001a68: 	movq	0xc0(%rsp), %rax
    00001a70: 	leaq	0x1(%rax), %rsi
    00001a74: 	callq	_ZdlPvm@PLT # Offset: 6772
.Ltmp938:
    00001a79: 	movq	0x90(%rsp), %rdi
    00001a81: 	leaq	0xa0(%rsp), %rax
    00001a89: 	cmpq	%rax, %rdi
    00001a8c: 	je	.Ltmp939 # Offset: 6796
    00001a8e: 	movq	0xa0(%rsp), %rax
    00001a96: 	leaq	0x1(%rax), %rsi
    00001a9a: 	callq	_ZdlPvm@PLT # Offset: 6810
.Ltmp939:
    00001a9f: 	movq	0x70(%rsp), %rdi
    00001aa4: 	leaq	0x80(%rsp), %rax
    00001aac: 	cmpq	%rax, %rdi
    00001aaf: 	je	.Ltmp940 # Offset: 6831
    00001ab1: 	movq	0x80(%rsp), %rax
    00001ab9: 	leaq	0x1(%rax), %rsi
    00001abd: 	callq	_ZdlPvm@PLT # Offset: 6845
.Ltmp940:
    00001ac2: 	movq	0x50(%rsp), %rdi
    00001ac7: 	leaq	0x60(%rsp), %rax
    00001acc: 	cmpq	%rax, %rdi
    00001acf: 	je	.Ltmp941 # Offset: 6863
    00001ad1: 	movq	0x60(%rsp), %rax
    00001ad6: 	leaq	0x1(%rax), %rsi
    00001ada: 	callq	_ZdlPvm@PLT # Offset: 6874
.Ltmp941:
    00001adf: 	movq	%rbp, %rdi
    00001ae2: 	callq	_Unwind_Resume@PLT # Offset: 6882
.Ltmp934:
    00001ae7: 	movq	0x110(%rsp), %rdi
    00001aef: 	cmpq	%rbx, %rdi
    00001af2: 	je	.Ltmp938 # Offset: 6898
    00001af4: 	movq	0x120(%rsp), %rax
    00001afc: 	leaq	0x1(%rax), %rsi
    00001b00: 	callq	_ZdlPvm@PLT # Offset: 6912
    00001b05: 	jmp	.Ltmp938 # Offset: 6917
    00001b0a: 	endbr64
    00001b0e: 	movq	%rax, %rbp
    00001b11: 	jmp	.Ltmp936 # Offset: 6929
    00001b16: 	endbr64
.Ltmp943:
    00001b1a: 	movq	%rax, %rbp
    00001b1d: 	jmp	.Ltmp942 # Offset: 6941
    00001b1f: 	endbr64
    00001b23: 	jmp	.Ltmp943 # Offset: 6947
    00001b25: 	endbr64
    00001b29: 	jmp	.Ltmp943 # Offset: 6953
    00001b2b: 	endbr64
    00001b2f: 	jmp	.Ltmp943 # Offset: 6959
    00001b31: 	endbr64
    00001b35: 	jmp	.Ltmp943 # Offset: 6965
    00001b37: 	endbr64
    00001b3b: 	jmp	.Ltmp943 # Offset: 6971
    00001b3d: 	endbr64
    00001b41: 	jmp	.Ltmp943 # Offset: 6977
.Ltmp942:
    00001b43: 	movq	0x110(%rsp), %rdi
    00001b4b: 	cmpq	%rbx, %rdi
    00001b4e: 	je	.Ltmp937 # Offset: 6990
    00001b54: 	movq	0x120(%rsp), %rax
    00001b5c: 	leaq	0x1(%rax), %rsi
    00001b60: 	callq	_ZdlPvm@PLT # Offset: 7008
    00001b65: 	jmp	.Ltmp937 # Offset: 7013
    00001b6a: 	endbr64
.Ltmp950:
    00001b6e: 	movq	%rax, %rbp
    00001b71: 	jmp	.Ltmp944 # Offset: 7025
    00001b76: 	endbr64
    00001b7a: 	jmp	.Ltmp935 # Offset: 7034
    00001b7f: 	endbr64
    00001b83: 	movq	%rax, %rbp
    00001b86: 	jmp	.Ltmp937 # Offset: 7046
    00001b8b: 	endbr64
    00001b8f: 	jmp	.Ltmp935 # Offset: 7055
    00001b94: 	endbr64
    00001b98: 	jmp	.Ltmp943 # Offset: 7064
    00001b9a: 	endbr64
.Ltmp952:
    00001b9e: 	movq	%rax, %rbp
    00001ba1: 	jmp	.Ltmp945 # Offset: 7073
    00001ba3: 	endbr64
.Ltmp947:
    00001ba7: 	movq	%rax, %rbp
    00001baa: 	jmp	.Ltmp946 # Offset: 7082
.Ltmp945:
    00001bac: 	movq	0x110(%rsp), %rdi
    00001bb4: 	cmpq	%rbx, %rdi
    00001bb7: 	je	.Ltmp939 # Offset: 7095
    00001bbd: 	movq	0x120(%rsp), %rax
    00001bc5: 	leaq	0x1(%rax), %rsi
    00001bc9: 	callq	_ZdlPvm@PLT # Offset: 7113
    00001bce: 	jmp	.Ltmp939 # Offset: 7118
.Ltmp946:
    00001bd3: 	movq	0x110(%rsp), %rdi
    00001bdb: 	cmpq	%rbx, %rdi
    00001bde: 	je	.Ltmp940 # Offset: 7134
.Ltmp949:
    00001be4: 	movq	0x120(%rsp), %rax
    00001bec: 	leaq	0x1(%rax), %rsi
    00001bf0: 	callq	_ZdlPvm@PLT # Offset: 7152
    00001bf5: 	jmp	.Ltmp940 # Offset: 7157
    00001bfa: 	endbr64
    00001bfe: 	jmp	.Ltmp947 # Offset: 7166
    00001c00: 	endbr64
    00001c04: 	jmp	.Ltmp935 # Offset: 7172
    00001c09: 	endbr64
    00001c0d: 	movq	%rax, %rbp
    00001c10: 	jmp	.Ltmp948 # Offset: 7184
    00001c12: 	endbr64
    00001c16: 	movq	%rax, %rbp
    00001c19: 	jmp	.Ltmp940 # Offset: 7193
.Ltmp948:
    00001c1e: 	movq	0x110(%rsp), %rdi
    00001c26: 	leaq	0x120(%rsp), %rax
    00001c2e: 	cmpq	%rax, %rdi
    00001c31: 	jne	.Ltmp949 # Offset: 7217
    00001c33: 	jmp	.Ltmp940 # Offset: 7219
    00001c38: 	endbr64
    00001c3c: 	jmp	.Ltmp933 # Offset: 7228
    00001c41: 	endbr64
    00001c45: 	jmp	.Ltmp933 # Offset: 7237
    00001c4a: 	endbr64
    00001c4e: 	jmp	.Ltmp933 # Offset: 7246
    00001c53: 	endbr64
    00001c57: 	jmp	.Ltmp950 # Offset: 7255
    00001c5c: 	endbr64
    00001c60: 	jmp	.Ltmp950 # Offset: 7264
    00001c65: 	endbr64
    00001c69: 	movq	%rax, %rbp
    00001c6c: 	jmp	.Ltmp951 # Offset: 7276
    00001c6e: 	endbr64
    00001c72: 	jmp	.Ltmp950 # Offset: 7282
    00001c77: 	endbr64
    00001c7b: 	jmp	.Ltmp935 # Offset: 7291
    00001c80: 	endbr64
    00001c84: 	jmp	.Ltmp935 # Offset: 7300
    00001c89: 	endbr64
    00001c8d: 	movq	%rax, %rbp
    00001c90: 	jmp	.Ltmp938 # Offset: 7312
.Ltmp944:
    00001c95: 	movq	0x110(%rsp), %rdi
    00001c9d: 	cmpq	%rbx, %rdi
    00001ca0: 	je	.Ltmp951 # Offset: 7328
    00001ca2: 	movq	0x120(%rsp), %rax
    00001caa: 	leaq	0x1(%rax), %rsi
    00001cae: 	callq	_ZdlPvm@PLT # Offset: 7342
.Ltmp951:
    00001cb3: 	movq	0xf0(%rsp), %rdi
    00001cbb: 	leaq	0x100(%rsp), %rax
    00001cc3: 	cmpq	%rax, %rdi
    00001cc6: 	je	.Ltmp936 # Offset: 7366
    00001ccc: 	movq	0x100(%rsp), %rax
    00001cd4: 	leaq	0x1(%rax), %rsi
    00001cd8: 	callq	_ZdlPvm@PLT # Offset: 7384
    00001cdd: 	jmp	.Ltmp936 # Offset: 7389
    00001ce2: 	endbr64
    00001ce6: 	jmp	.Ltmp952 # Offset: 7398
    00001ceb: 	endbr64
    00001cef: 	movq	%rax, %rbp
    00001cf2: 	jmp	.Ltmp939 # Offset: 7410
    00001cf7: 	endbr64
    00001cfb: 	jmp	.Ltmp952 # Offset: 7419
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIiEvv"

Binary Function "_Z29test_loop_2D_flat_chan_revXCYIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z29test_loop_2D_flat_chan_revXCYIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z29test_loop_2D_flat_chan_revXCYIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 87
  State       : disassembled
  Address     : 0xe0c0
  Size        : 0x4e5
  MaxSize     : 0x4f0
  Offset      : 0xe0c0
  Section     : .text
  Orc Section : .local.text._Z29test_loop_2D_flat_chan_revXCYIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB086:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	movq	%rdi, %r14
    00000007: 	pushq	%r13
    00000009: 	pushq	%r12
    0000000b: 	movl	%esi, %r12d
    0000000e: 	pushq	%rbp
    0000000f: 	pushq	%rbx
    00000010: 	subq	$0x68, %rsp
    00000014: 	movq	%rdx, 0x30(%rsp)
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x58(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movq	%rax, start_time(%rip)
    00000035: 	movl	iterations(%rip), %eax
    0000003b: 	movl	%eax, 0x3c(%rsp)
    0000003f: 	testl	%eax, %eax
    00000041: 	jle	.Ltmp953 # Offset: 65
    00000047: 	leal	-0x1(%r12), %eax
    0000004c: 	movl	%r12d, %ebx
    0000004f: 	movl	$0x0, 0x38(%rsp)
    00000057: 	movl	%r12d, %r13d
    0000005a: 	movl	%eax, 0xc(%rsp)
    0000005e: 	movl	%r12d, %eax
    00000061: 	andl	$0xf, %ebx
    00000064: 	andl	$-0x10, %r13d
    00000068: 	shrl	$0x4, %eax
    0000006b: 	movl	%ebx, 0x28(%rsp)
    0000006f: 	leaq	0xf42400(%r14), %rbx
    00000076: 	subl	$0x1, %eax
    00000079: 	movq	%rbx, 0x40(%rsp)
    0000007e: 	addq	$0x1, %rax
    00000082: 	shlq	$0x4, %rax
    00000086: 	movq	%rax, %rbx
.Ltmp964:
    00000089: 	movq	%r14, 0x18(%rsp)
    0000008e: 	movq	0x40(%rsp), %r11
    00000093: 	pxor	%xmm2, %xmm2
    00000097: 	pxor	%xmm3, %xmm3
    0000009b: 	movq	$0x0, 0x20(%rsp)
    000000a4: 	movq	$0x0, 0x10(%rsp)
    000000ad: 	movb	$0x0, 0x2f(%rsp)
    000000b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp960:
    000000b8: 	movq	0x20(%rsp), %rdx
    000000bd: 	movq	0x18(%rsp), %rsi
    000000c2: 	xorl	%eax, %eax
    000000c4: 	movl	%edx, %ebp
    000000c6: 	movq	%rdx, %r10
    000000c9: 	movq	%rsi, %rdi
    000000cc: 	subl	%esi, %ebp
    000000ce: 	testl	%r12d, %r12d
    000000d1: 	jle	.Ltmp954 # Offset: 209
    000000d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp959:
    000000e0: 	cmpl	$0xe, 0xc(%rsp)
    000000e5: 	leal	(%rbp,%rdi), %r9d
    000000ea: 	jbe	.Ltmp955 # Offset: 234
    000000f0: 	leaq	(%rbx,%rdi), %rcx
    000000f4: 	movq	%rdi, %rdx
    000000f7: 	pxor	%xmm0, %xmm0
    000000fb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp956:
    00000100: 	movdqu	(%rdx), %xmm4
    00000104: 	addq	$0x10, %rdx
    00000108: 	paddb	%xmm4, %xmm0
    0000010c: 	cmpq	%rcx, %rdx
    0000010f: 	jne	.Ltmp956 # Offset: 271
    00000111: 	movdqa	%xmm0, %xmm1
    00000115: 	psrldq	$0x8, %xmm1
    0000011a: 	paddb	%xmm1, %xmm0
    0000011e: 	psadbw	%xmm3, %xmm0
    00000122: 	movd	%xmm0, %edx
    00000126: 	addl	%edx, %eax
    00000128: 	cmpl	%r12d, %r13d
    0000012b: 	je	.Ltmp957 # Offset: 299
    00000131: 	movl	0x28(%rsp), %esi
    00000135: 	movl	%r13d, %ecx
    00000138: 	movl	%r13d, %edx
.Ltmp972:
    0000013b: 	movl	%r12d, %r8d
    0000013e: 	subl	%ecx, %r8d
    00000141: 	leal	-0x1(%r8), %r15d
    00000145: 	cmpl	$0x6, %r15d
    00000149: 	jbe	.Ltmp958 # Offset: 329
    0000014b: 	leaq	(%r14,%r10), %r15
    0000014f: 	movq	(%r15,%rcx), %xmm0
    00000155: 	movdqa	%xmm0, %xmm5
    00000159: 	psadbw	%xmm2, %xmm5
    0000015d: 	movq	%xmm5, %rcx
    00000162: 	movq	%xmm5, 0x48(%rsp)
    00000168: 	movl	%ecx, %r15d
    0000016b: 	movl	%r8d, %ecx
    0000016e: 	andl	$-0x8, %ecx
    00000171: 	addl	%r15d, %eax
    00000174: 	addl	%ecx, %edx
    00000176: 	subl	%ecx, %esi
    00000178: 	cmpl	%ecx, %r8d
    0000017b: 	je	.Ltmp957 # Offset: 379
.Ltmp958:
    0000017d: 	leal	(%rdx,%r9), %ecx
    00000181: 	movslq	%ecx, %rcx
    00000184: 	addb	(%r14,%rcx), %al
    00000188: 	leal	0x1(%rdx), %ecx
    0000018b: 	cmpl	$0x1, %esi
    0000018e: 	je	.Ltmp957 # Offset: 398
    00000190: 	addl	%r9d, %ecx
    00000193: 	movslq	%ecx, %rcx
    00000196: 	addb	(%r14,%rcx), %al
    0000019a: 	leal	0x2(%rdx), %ecx
    0000019d: 	cmpl	$0x2, %esi
    000001a0: 	je	.Ltmp957 # Offset: 416
    000001a2: 	addl	%r9d, %ecx
    000001a5: 	movslq	%ecx, %rcx
    000001a8: 	addb	(%r14,%rcx), %al
    000001ac: 	leal	0x3(%rdx), %ecx
    000001af: 	cmpl	$0x3, %esi
    000001b2: 	je	.Ltmp957 # Offset: 434
    000001b4: 	addl	%r9d, %ecx
    000001b7: 	movslq	%ecx, %rcx
    000001ba: 	addb	(%r14,%rcx), %al
    000001be: 	leal	0x4(%rdx), %ecx
    000001c1: 	cmpl	$0x4, %esi
    000001c4: 	je	.Ltmp957 # Offset: 452
    000001c6: 	addl	%r9d, %ecx
    000001c9: 	movslq	%ecx, %rcx
    000001cc: 	addb	(%r14,%rcx), %al
    000001d0: 	leal	0x5(%rdx), %ecx
    000001d3: 	cmpl	$0x5, %esi
    000001d6: 	je	.Ltmp957 # Offset: 470
    000001d8: 	addl	%r9d, %ecx
    000001db: 	addl	$0x6, %edx
    000001de: 	movslq	%ecx, %rcx
    000001e1: 	addb	(%r14,%rcx), %al
    000001e5: 	cmpl	$0x6, %esi
    000001e8: 	je	.Ltmp957 # Offset: 488
    000001ea: 	addl	%r9d, %edx
    000001ed: 	movslq	%edx, %rdx
    000001f0: 	addb	(%r14,%rdx), %al
.Ltmp957:
    000001f4: 	addq	$0xfa0, %rdi
    000001fb: 	addq	$0xfa0, %r10
    00000202: 	cmpq	%r11, %rdi
    00000205: 	jne	.Ltmp959 # Offset: 517
    0000020b: 	addb	%al, 0x2f(%rsp)
.Ltmp954:
    0000020f: 	addq	$0x1, 0x10(%rsp)
    00000215: 	movq	0x10(%rsp), %rax
    0000021a: 	addq	$0x4, %r11
    0000021e: 	addq	$0x4, 0x18(%rsp)
    00000224: 	addq	$0x4, 0x20(%rsp)
    0000022a: 	cmpq	$0x3e8, %rax
    00000230: 	jne	.Ltmp960 # Offset: 560
    00000236: 	cmpb	$0x0, 0x2f(%rsp)
    0000023b: 	je	.Ltmp961 # Offset: 571
    00000241: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rbp
    00000248: 	movl	$0x5, %edx
    0000024d: 	leaq	0x50(%rsp), %r15
    00000252: 	movq	%rbp, %rdi
    00000255: 	leaq	DATAat0x15182(%rip), %rsi
    0000025c: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 604
    00000261: 	movq	0x30(%rsp), %rdi
    00000266: 	movq	0x8(%rdi), %rdx
    0000026a: 	movq	(%rdi), %rsi
    0000026d: 	movq	%rbp, %rdi
    00000270: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 624
    00000275: 	movl	$0x12, %edx
    0000027a: 	leaq	DATAat0x15188(%rip), %rsi
    00000281: 	movq	%rax, %rbp
    00000284: 	movq	%rax, %rdi
    00000287: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 647
    0000028c: 	movq	%r15, %rsi
    0000028f: 	movq	%rbp, %rdi
    00000292: 	movl	$0x1, %edx
    00000297: 	movb	$0x0, 0x50(%rsp)
    0000029c: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 668
    000002a1: 	movl	$0x5, %edx
    000002a6: 	leaq	DATAat0x1519b(%rip), %rsi
    000002ad: 	movq	%rax, %rdi
    000002b0: 	movq	%rax, %rbp
    000002b3: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 691
    000002b8: 	movzbl	0x2f(%rsp), %eax
    000002bd: 	movq	%r15, %rsi
    000002c0: 	movq	%rbp, %rdi
    000002c3: 	movl	$0x1, %edx
    000002c8: 	movb	%al, 0x50(%rsp)
    000002cc: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 716
    000002d1: 	movq	%rax, %r15
    000002d4: 	movq	(%rax), %rax
    000002d7: 	movq	-0x18(%rax), %rax
    000002db: 	movq	0xf0(%r15,%rax), %rbp
    000002e3: 	testq	%rbp, %rbp
    000002e6: 	je	.Ltmp962 # Offset: 742
    000002ec: 	cmpb	$0x0, 0x38(%rbp)
    000002f0: 	je	.Ltmp963 # Offset: 752
    000002f6: 	movsbl	0x43(%rbp), %esi
.Ltmp973:
    000002fa: 	movq	%r15, %rdi
    000002fd: 	callq	_ZNSo3putEc@PLT # Offset: 765
    00000302: 	movq	%rax, %rdi
    00000305: 	callq	_ZNSo5flushEv@PLT # Offset: 773
    0000030a: 	movl	iterations(%rip), %eax
    00000310: 	movl	%eax, 0x3c(%rsp)
.Ltmp961:
    00000314: 	addl	$0x1, 0x38(%rsp)
    00000319: 	movl	0x38(%rsp), %eax
    0000031d: 	cmpl	0x3c(%rsp), %eax
    00000321: 	jl	.Ltmp964 # Offset: 801
.Ltmp953:
    00000327: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000032e: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000335: 	subq	$0x20, %rax
    00000339: 	cmpq	%rax, %rbx
    0000033c: 	je	.Ltmp965 # Offset: 828
    00000342: 	movq	0x30(%rsp), %rax
    00000347: 	leaq	0x10(%rbx), %rdi
    0000034b: 	movq	%rdi, (%rbx)
    0000034e: 	movq	(%rax), %rbp
    00000351: 	movq	0x8(%rax), %r12
    00000355: 	movq	%rbp, %rax
    00000358: 	addq	%r12, %rax
    0000035b: 	je	.Ltmp966 # Offset: 859
    0000035d: 	testq	%rbp, %rbp
    00000360: 	je	.Ltmp967 # Offset: 864
.Ltmp966:
    00000366: 	movq	%r12, 0x50(%rsp)
    0000036b: 	cmpq	$0xf, %r12
    0000036f: 	ja	.Ltmp968 # Offset: 879
    00000375: 	cmpq	$0x1, %r12
    00000379: 	jne	.Ltmp969 # Offset: 889
    0000037f: 	movzbl	(%rbp), %eax
    00000383: 	movb	%al, 0x10(%rbx)
.Ltmp975:
    00000386: 	movq	%r12, 0x8(%rbx)
    0000038a: 	movb	$0x0, (%rdi,%r12)
    0000038f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000396: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000039d: 	addq	$0x20, %rax
    000003a1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003a8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000003af: 	je	.Ltmp970 # Offset: 943
.Ltmp974:
    000003b5: 	movq	-0x20(%rax), %rbp
    000003b9: 	callq	clock@PLT # Offset: 953
    000003be: 	movq	%rax, end_time(%rip)
    000003c5: 	movq	0x58(%rsp), %rdx
    000003ca: 	subq	%fs:0x28, %rdx
    000003d3: 	jne	.Ltmp971 # Offset: 979
    000003d9: 	subq	start_time(%rip), %rax
    000003e0: 	pxor	%xmm0, %xmm0
    000003e4: 	movq	%rbp, %rdi
    000003e7: 	cvtsi2sd	%rax, %xmm0
    000003ec: 	divsd	DATAat0x15758(%rip), %xmm0
    000003f4: 	addq	$0x68, %rsp
    000003f8: 	popq	%rbx
    000003f9: 	popq	%rbp
    000003fa: 	popq	%r12
    000003fc: 	popq	%r13
    000003fe: 	popq	%r14
    00000400: 	popq	%r15
    00000402: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1026
    00000407: 	nopw	(%rax,%rax) # Size: 9
.Ltmp955:
    00000410: 	movl	%r12d, %esi
    00000413: 	xorl	%ecx, %ecx
    00000415: 	xorl	%edx, %edx
    00000417: 	jmp	.Ltmp972 # Offset: 1047
.Ltmp963:
    0000041c: 	movq	%rbp, %rdi
    0000041f: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 1055
    00000424: 	movq	(%rbp), %rax
    00000428: 	movl	$0xa, %esi
    0000042d: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000434: 	movq	0x30(%rax), %rax
    00000438: 	cmpq	%rdx, %rax
    0000043b: 	je	.Ltmp973 # Offset: 1083
    00000441: 	movq	%rbp, %rdi
    00000444: 	callq	*%rax # Offset: 1092
    00000446: 	movsbl	%al, %esi
    00000449: 	jmp	.Ltmp973 # Offset: 1097
.Ltmp965:
    0000044e: 	movq	0x30(%rsp), %rsi
    00000453: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000045a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1114
    0000045f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000466: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000046d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000474: 	jne	.Ltmp974 # Offset: 1140
.Ltmp970:
    0000047a: 	movq	-0x8(%rdx), %rax
    0000047e: 	addq	$0x200, %rax
    00000484: 	jmp	.Ltmp974 # Offset: 1156
.Ltmp969:
    00000489: 	testq	%r12, %r12
    0000048c: 	je	.Ltmp975 # Offset: 1164
    00000492: 	jmp	.Ltmp976 # Offset: 1170
    00000494: 	nopl	(%rax) # Size: 4
.Ltmp968:
    00000498: 	movq	%rbx, %rdi
    0000049b: 	leaq	0x50(%rsp), %rsi
    000004a0: 	xorl	%edx, %edx
    000004a2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1186
    000004a7: 	movq	%rax, (%rbx)
    000004aa: 	movq	%rax, %rdi
    000004ad: 	movq	0x50(%rsp), %rax
    000004b2: 	movq	%rax, 0x10(%rbx)
.Ltmp976:
    000004b6: 	movq	%r12, %rdx
    000004b9: 	movq	%rbp, %rsi
    000004bc: 	callq	memcpy@PLT # Offset: 1212
    000004c1: 	movq	0x50(%rsp), %r12
    000004c6: 	movq	(%rbx), %rdi
    000004c9: 	jmp	.Ltmp975 # Offset: 1225
.Ltmp971:
    000004ce: 	callq	__stack_chk_fail@PLT # Offset: 1230
.Ltmp967:
    000004d3: 	leaq	DATAat0x15110(%rip), %rdi
    000004da: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1242
    000004df: 	nop # Size: 1
.Ltmp962:
    000004e0: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 1248
DWARF CFI Instructions:
    <empty>
End of Function "_Z29test_loop_2D_flat_chan_revXCYIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z27test_loop_2D_flat_chan_opt2IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z27test_loop_2D_flat_chan_opt2IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z27test_loop_2D_flat_chan_opt2IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 88
  State       : disassembled
  Address     : 0xe5b0
  Size        : 0x4c5
  MaxSize     : 0x4d0
  Offset      : 0xe5b0
  Section     : .text
  Orc Section : .local.text._Z27test_loop_2D_flat_chan_opt2IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB087:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	movq	%rdi, %rbp
    0000000c: 	pushq	%rbx
    0000000d: 	movl	%esi, %ebx
    0000000f: 	subq	$0x58, %rsp
    00000013: 	movq	%rdx, 0x20(%rsp)
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x48(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	movl	iterations(%rip), %eax
    0000003a: 	movl	%eax, 0x2c(%rsp)
    0000003e: 	testl	%eax, %eax
    00000040: 	jle	.Ltmp977 # Offset: 64
    00000046: 	movl	%ebx, %eax
    00000048: 	leaq	0xfa0(%rbp), %rdi
    0000004f: 	leal	-0x1(%rbx), %r12d
    00000053: 	movl	%ebx, %r13d
    00000056: 	shrl	$0x4, %eax
    00000059: 	movl	$0x0, 0x28(%rsp)
    00000061: 	andl	$-0x10, %r13d
    00000065: 	subl	$0x1, %eax
    00000068: 	movq	%rdi, 0x30(%rsp)
    0000006d: 	addq	$0x1, %rax
    00000071: 	shlq	$0x4, %rax
    00000075: 	movq	%rax, %r14
.Ltmp987:
    00000078: 	movq	%rbp, %rax
    0000007b: 	movb	$0x0, 0x1f(%rsp)
    00000080: 	pxor	%xmm2, %xmm2
    00000084: 	pxor	%xmm3, %xmm3
    00000088: 	negq	%rax
    0000008b: 	movq	$0x0, (%rsp)
    00000093: 	movq	0x30(%rsp), %r10
    00000098: 	movq	%rax, 0x10(%rsp)
    0000009d: 	movq	$0x0, 0x8(%rsp)
    000000a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp983:
    000000b0: 	movq	0x8(%rsp), %rsi
    000000b5: 	movq	0x10(%rsp), %r11
    000000ba: 	xorl	%eax, %eax
    000000bc: 	leaq	(%rbp,%rsi), %rdi
    000000c1: 	movq	%rsi, %r9
    000000c4: 	subq	%rsi, %r11
    000000c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp982:
    000000d0: 	leaq	(%r11,%rdi), %rsi
    000000d4: 	testl	%ebx, %ebx
    000000d6: 	jle	.Ltmp978 # Offset: 214
    000000dc: 	cmpl	$0xe, %r12d
    000000e0: 	jbe	.Ltmp979 # Offset: 224
    000000e6: 	leaq	(%r14,%rdi), %rcx
    000000ea: 	movq	%rdi, %rdx
    000000ed: 	pxor	%xmm0, %xmm0
    000000f1: 	nopl	(%rax) # Size: 7
.Ltmp980:
    000000f8: 	movdqu	(%rdx), %xmm4
    000000fc: 	addq	$0x10, %rdx
    00000100: 	paddb	%xmm4, %xmm0
    00000104: 	cmpq	%rcx, %rdx
    00000107: 	jne	.Ltmp980 # Offset: 263
    00000109: 	movdqa	%xmm0, %xmm1
    0000010d: 	psrldq	$0x8, %xmm1
    00000112: 	paddb	%xmm1, %xmm0
    00000116: 	psadbw	%xmm3, %xmm0
    0000011a: 	movd	%xmm0, %edx
    0000011e: 	addl	%edx, %eax
    00000120: 	cmpl	%ebx, %r13d
    00000123: 	je	.Ltmp978 # Offset: 291
    00000129: 	movl	%r13d, %ecx
    0000012c: 	movl	%r13d, %edx
.Ltmp995:
    0000012f: 	movl	%ebx, %r8d
    00000132: 	subl	%ecx, %r8d
    00000135: 	leal	-0x1(%r8), %r15d
    00000139: 	cmpl	$0x6, %r15d
    0000013d: 	jbe	.Ltmp981 # Offset: 317
    0000013f: 	leaq	(%rbp,%r9), %r15
    00000144: 	movq	(%r15,%rcx), %xmm0
    0000014a: 	movdqa	%xmm0, %xmm5
    0000014e: 	psadbw	%xmm2, %xmm5
    00000152: 	movq	%xmm5, %rcx
    00000157: 	movq	%xmm5, 0x38(%rsp)
    0000015d: 	movl	%ecx, %r15d
    00000160: 	movl	%r8d, %ecx
    00000163: 	andl	$-0x8, %ecx
    00000166: 	addl	%r15d, %eax
    00000169: 	addl	%ecx, %edx
    0000016b: 	cmpl	%ecx, %r8d
    0000016e: 	je	.Ltmp978 # Offset: 366
.Ltmp981:
    00000170: 	movslq	%edx, %rcx
    00000173: 	addq	%rbp, %rsi
    00000176: 	addb	(%rsi,%rcx), %al
    00000179: 	leal	0x1(%rdx), %ecx
    0000017c: 	cmpl	%ebx, %ecx
    0000017e: 	jge	.Ltmp978 # Offset: 382
    00000180: 	movslq	%ecx, %rcx
    00000183: 	addb	(%rsi,%rcx), %al
    00000186: 	leal	0x2(%rdx), %ecx
    00000189: 	cmpl	%ecx, %ebx
    0000018b: 	jle	.Ltmp978 # Offset: 395
    0000018d: 	movslq	%ecx, %rcx
    00000190: 	addb	(%rsi,%rcx), %al
    00000193: 	leal	0x3(%rdx), %ecx
    00000196: 	cmpl	%ecx, %ebx
    00000198: 	jle	.Ltmp978 # Offset: 408
    0000019a: 	movslq	%ecx, %rcx
    0000019d: 	addb	(%rsi,%rcx), %al
    000001a0: 	leal	0x4(%rdx), %ecx
    000001a3: 	cmpl	%ecx, %ebx
    000001a5: 	jle	.Ltmp978 # Offset: 421
    000001a7: 	movslq	%ecx, %rcx
    000001aa: 	addb	(%rsi,%rcx), %al
    000001ad: 	leal	0x5(%rdx), %ecx
    000001b0: 	cmpl	%ecx, %ebx
    000001b2: 	jle	.Ltmp978 # Offset: 434
    000001b4: 	movslq	%ecx, %rcx
    000001b7: 	addl	$0x6, %edx
    000001ba: 	addb	(%rsi,%rcx), %al
    000001bd: 	cmpl	%edx, %ebx
    000001bf: 	jle	.Ltmp978 # Offset: 447
    000001c1: 	movslq	%edx, %rdx
    000001c4: 	addb	(%rsi,%rdx), %al
.Ltmp978:
    000001c7: 	addq	$0x4, %rdi
    000001cb: 	addq	$0x4, %r9
    000001cf: 	cmpq	%r10, %rdi
    000001d2: 	jne	.Ltmp982 # Offset: 466
    000001d8: 	addb	%al, 0x1f(%rsp)
    000001dc: 	leaq	0xfa0(%rdi), %r10
    000001e3: 	addq	$0x3e8, (%rsp)
    000001eb: 	movq	(%rsp), %rax
    000001ef: 	addq	$0xfa0, 0x8(%rsp)
    000001f8: 	addq	$0xfa0, 0x10(%rsp)
    00000201: 	cmpq	$0x3d0900, %rax
    00000207: 	jne	.Ltmp983 # Offset: 519
    0000020d: 	cmpb	$0x0, 0x1f(%rsp)
    00000212: 	je	.Ltmp984 # Offset: 530
    00000218: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r15
    0000021f: 	movl	$0x5, %edx
    00000224: 	leaq	DATAat0x15182(%rip), %rsi
    0000022b: 	movq	%r15, %rdi
    0000022e: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 558
    00000233: 	movq	0x20(%rsp), %rdi
    00000238: 	movq	0x8(%rdi), %rdx
    0000023c: 	movq	(%rdi), %rsi
    0000023f: 	movq	%r15, %rdi
    00000242: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 578
    00000247: 	movl	$0x12, %edx
    0000024c: 	leaq	DATAat0x15188(%rip), %rsi
    00000253: 	movq	%rax, %rdi
    00000256: 	movq	%rax, %r15
    00000259: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 601
    0000025e: 	leaq	0x40(%rsp), %r8
    00000263: 	movq	%r15, %rdi
    00000266: 	movl	$0x1, %edx
    0000026b: 	movq	%r8, %rsi
    0000026e: 	movq	%r8, (%rsp)
    00000272: 	movb	$0x0, 0x40(%rsp)
    00000277: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 631
    0000027c: 	movl	$0x5, %edx
    00000281: 	leaq	DATAat0x1519b(%rip), %rsi
    00000288: 	movq	%rax, %rdi
    0000028b: 	movq	%rax, %r15
    0000028e: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 654
    00000293: 	movzbl	0x1f(%rsp), %eax
    00000298: 	movq	(%rsp), %rsi
    0000029c: 	movq	%r15, %rdi
    0000029f: 	movl	$0x1, %edx
    000002a4: 	movb	%al, 0x40(%rsp)
    000002a8: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 680
    000002ad: 	movq	%rax, %r8
    000002b0: 	movq	(%rax), %rax
    000002b3: 	movq	-0x18(%rax), %rax
    000002b7: 	movq	0xf0(%r8,%rax), %r15
    000002bf: 	testq	%r15, %r15
    000002c2: 	je	.Ltmp985 # Offset: 706
    000002c8: 	cmpb	$0x0, 0x38(%r15)
    000002cd: 	je	.Ltmp986 # Offset: 717
    000002d3: 	movsbl	0x43(%r15), %esi
.Ltmp996:
    000002d8: 	movq	%r8, %rdi
    000002db: 	callq	_ZNSo3putEc@PLT # Offset: 731
    000002e0: 	movq	%rax, %rdi
    000002e3: 	callq	_ZNSo5flushEv@PLT # Offset: 739
    000002e8: 	movl	iterations(%rip), %eax
    000002ee: 	movl	%eax, 0x2c(%rsp)
.Ltmp984:
    000002f2: 	addl	$0x1, 0x28(%rsp)
    000002f7: 	movl	0x28(%rsp), %eax
    000002fb: 	cmpl	0x2c(%rsp), %eax
    000002ff: 	jl	.Ltmp987 # Offset: 767
.Ltmp977:
    00000305: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000030c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000313: 	subq	$0x20, %rax
    00000317: 	cmpq	%rax, %rbx
    0000031a: 	je	.Ltmp988 # Offset: 794
    00000320: 	movq	0x20(%rsp), %rax
    00000325: 	leaq	0x10(%rbx), %rdi
    00000329: 	movq	%rdi, (%rbx)
    0000032c: 	movq	(%rax), %rbp
    0000032f: 	movq	0x8(%rax), %r12
    00000333: 	movq	%rbp, %rax
    00000336: 	addq	%r12, %rax
    00000339: 	je	.Ltmp989 # Offset: 825
    0000033b: 	testq	%rbp, %rbp
    0000033e: 	je	.Ltmp990 # Offset: 830
.Ltmp989:
    00000344: 	movq	%r12, 0x40(%rsp)
    00000349: 	cmpq	$0xf, %r12
    0000034d: 	ja	.Ltmp991 # Offset: 845
    00000353: 	cmpq	$0x1, %r12
    00000357: 	jne	.Ltmp992 # Offset: 855
    0000035d: 	movzbl	(%rbp), %eax
    00000361: 	movb	%al, 0x10(%rbx)
.Ltmp998:
    00000364: 	movq	%r12, 0x8(%rbx)
    00000368: 	movb	$0x0, (%rdi,%r12)
    0000036d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000374: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000037b: 	addq	$0x20, %rax
    0000037f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000386: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000038d: 	je	.Ltmp993 # Offset: 909
.Ltmp997:
    00000393: 	movq	-0x20(%rax), %rbp
    00000397: 	callq	clock@PLT # Offset: 919
    0000039c: 	movq	%rax, end_time(%rip)
    000003a3: 	movq	0x48(%rsp), %rdx
    000003a8: 	subq	%fs:0x28, %rdx
    000003b1: 	jne	.Ltmp994 # Offset: 945
    000003b7: 	subq	start_time(%rip), %rax
    000003be: 	pxor	%xmm0, %xmm0
    000003c2: 	movq	%rbp, %rdi
    000003c5: 	cvtsi2sd	%rax, %xmm0
    000003ca: 	divsd	DATAat0x15758(%rip), %xmm0
    000003d2: 	addq	$0x58, %rsp
    000003d6: 	popq	%rbx
    000003d7: 	popq	%rbp
    000003d8: 	popq	%r12
    000003da: 	popq	%r13
    000003dc: 	popq	%r14
    000003de: 	popq	%r15
    000003e0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 992
.Ltmp979:
    000003e5: 	xorl	%ecx, %ecx
    000003e7: 	xorl	%edx, %edx
    000003e9: 	jmp	.Ltmp995 # Offset: 1001
.Ltmp986:
    000003ee: 	movq	%r15, %rdi
    000003f1: 	movq	%r8, (%rsp)
    000003f5: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 1013
    000003fa: 	movq	(%r15), %rax
    000003fd: 	movq	(%rsp), %r8
    00000401: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000408: 	movl	$0xa, %esi
    0000040d: 	movq	0x30(%rax), %rax
    00000411: 	cmpq	%rdx, %rax
    00000414: 	je	.Ltmp996 # Offset: 1044
    0000041a: 	movq	%r15, %rdi
    0000041d: 	callq	*%rax # Offset: 1053
    0000041f: 	movq	(%rsp), %r8
    00000423: 	movsbl	%al, %esi
    00000426: 	jmp	.Ltmp996 # Offset: 1062
.Ltmp988:
    0000042b: 	movq	0x20(%rsp), %rsi
    00000430: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000437: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1079
    0000043c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000443: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000044a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000451: 	jne	.Ltmp997 # Offset: 1105
.Ltmp993:
    00000457: 	movq	-0x8(%rdx), %rax
    0000045b: 	addq	$0x200, %rax
    00000461: 	jmp	.Ltmp997 # Offset: 1121
.Ltmp992:
    00000466: 	testq	%r12, %r12
    00000469: 	je	.Ltmp998 # Offset: 1129
    0000046f: 	jmp	.Ltmp999 # Offset: 1135
    00000471: 	nopl	(%rax) # Size: 7
.Ltmp991:
    00000478: 	movq	%rbx, %rdi
    0000047b: 	leaq	0x40(%rsp), %rsi
    00000480: 	xorl	%edx, %edx
    00000482: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1154
    00000487: 	movq	%rax, (%rbx)
    0000048a: 	movq	%rax, %rdi
    0000048d: 	movq	0x40(%rsp), %rax
    00000492: 	movq	%rax, 0x10(%rbx)
.Ltmp999:
    00000496: 	movq	%r12, %rdx
    00000499: 	movq	%rbp, %rsi
    0000049c: 	callq	memcpy@PLT # Offset: 1180
    000004a1: 	movq	0x40(%rsp), %r12
    000004a6: 	movq	(%rbx), %rdi
    000004a9: 	jmp	.Ltmp998 # Offset: 1193
.Ltmp994:
    000004ae: 	callq	__stack_chk_fail@PLT # Offset: 1198
.Ltmp990:
    000004b3: 	leaq	DATAat0x15110(%rip), %rdi
    000004ba: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1210
    000004bf: 	nop # Size: 1
.Ltmp985:
    000004c0: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 1216
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_loop_2D_flat_chan_opt2IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z29test_loop_2D_flat_chan_revCXYIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z29test_loop_2D_flat_chan_revCXYIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z29test_loop_2D_flat_chan_revCXYIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 89
  State       : disassembled
  Address     : 0xea80
  Size        : 0x3e5
  MaxSize     : 0x3f0
  Offset      : 0xea80
  Section     : .text
  Orc Section : .local.text._Z29test_loop_2D_flat_chan_revCXYIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB088:
    00000000: 	pushq	%r15
    00000002: 	movq	%rdi, %r15
    00000005: 	pushq	%r14
    00000007: 	pushq	%r13
    00000009: 	pushq	%r12
    0000000b: 	pushq	%rbp
    0000000c: 	movq	%rdx, %rbp
    0000000f: 	pushq	%rbx
    00000010: 	movl	%esi, %ebx
    00000012: 	subq	$0x28, %rsp
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x18(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	callq	clock@PLT # Offset: 38
    0000002b: 	movl	iterations(%rip), %r11d
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	testl	%r11d, %r11d
    0000003c: 	jle	.Ltmp1000 # Offset: 60
    00000042: 	movdqa	DATAat0x157a0(%rip), %xmm2
    0000004a: 	xorl	%r12d, %r12d
.Ltmp1007:
    0000004d: 	testl	%ebx, %ebx
    0000004f: 	jle	.Ltmp1001 # Offset: 79
    00000055: 	leaq	0xf43380(%r15), %rdi
    0000005c: 	movslq	%ebx, %r9
    0000005f: 	xorl	%r8d, %r8d
    00000062: 	xorl	%r13d, %r13d
    00000065: 	pxor	%xmm5, %xmm5
    00000069: 	nopl	(%rax) # Size: 7
.Ltmp1004:
    00000070: 	leaq	-0xf42400(%rdi), %rcx
    00000077: 	leaq	(%r15,%r8), %rsi
    0000007b: 	xorl	%edx, %edx
    0000007d: 	nopl	(%rax) # Size: 3
.Ltmp1003:
    00000080: 	movq	%rsi, %rax
    00000083: 	pxor	%xmm4, %xmm4
    00000087: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1002:
    00000090: 	movdqu	(%rax), %xmm0
    00000094: 	movdqu	0x10(%rax), %xmm1
    00000099: 	addq	$0x40, %rax
    0000009d: 	movdqu	-0x10(%rax), %xmm3
    000000a2: 	pand	%xmm2, %xmm1
    000000a6: 	pand	%xmm2, %xmm0
    000000aa: 	packuswb	%xmm1, %xmm0
    000000ae: 	movdqu	-0x20(%rax), %xmm1
    000000b3: 	pand	%xmm2, %xmm3
    000000b7: 	pand	%xmm2, %xmm0
    000000bb: 	pand	%xmm2, %xmm1
    000000bf: 	packuswb	%xmm3, %xmm1
    000000c3: 	pand	%xmm2, %xmm1
    000000c7: 	packuswb	%xmm1, %xmm0
    000000cb: 	paddb	%xmm0, %xmm4
    000000cf: 	cmpq	%rax, %rcx
    000000d2: 	jne	.Ltmp1002 # Offset: 210
    000000d4: 	movdqa	%xmm4, %xmm0
    000000d8: 	movzbl	0x4(%rcx), %eax
    000000dc: 	addb	(%rcx), %al
    000000de: 	addq	$0xfa0, %rcx
    000000e5: 	psrldq	$0x8, %xmm0
    000000ea: 	addl	%edx, %eax
    000000ec: 	addb	-0xf98(%rcx), %al
    000000f2: 	addb	-0xf94(%rcx), %al
    000000f8: 	paddb	%xmm0, %xmm4
    000000fc: 	addb	-0xf90(%rcx), %al
    00000102: 	addb	-0xf8c(%rcx), %al
    00000108: 	addq	$0xfa0, %rsi
    0000010f: 	psadbw	%xmm5, %xmm4
    00000113: 	addb	-0xf88(%rcx), %al
    00000119: 	addb	-0xf84(%rcx), %al
    0000011f: 	movd	%xmm4, %r10d
    00000124: 	leal	(%rax,%r10), %edx
    00000128: 	cmpq	%rdi, %rcx
    0000012b: 	jne	.Ltmp1003 # Offset: 299
    00000131: 	addq	$0x1, %r8
    00000135: 	addl	%edx, %r13d
    00000138: 	leaq	0x1(%rcx), %rdi
    0000013c: 	cmpq	%r9, %r8
    0000013f: 	jne	.Ltmp1004 # Offset: 319
    00000145: 	testb	%r13b, %r13b
    00000148: 	je	.Ltmp1001 # Offset: 328
    0000014e: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r14
    00000155: 	movl	$0x5, %edx
    0000015a: 	leaq	DATAat0x15182(%rip), %rsi
    00000161: 	movq	%r14, %rdi
    00000164: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 356
    00000169: 	movq	0x8(%rbp), %rdx
    0000016d: 	movq	(%rbp), %rsi
    00000171: 	movq	%r14, %rdi
    00000174: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 372
    00000179: 	movl	$0x12, %edx
    0000017e: 	leaq	DATAat0x15188(%rip), %rsi
    00000185: 	movq	%rax, %rdi
    00000188: 	movq	%rax, %r14
    0000018b: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 395
    00000190: 	leaq	0x10(%rsp), %r8
    00000195: 	movq	%r14, %rdi
    00000198: 	movl	$0x1, %edx
    0000019d: 	movq	%r8, %rsi
    000001a0: 	movq	%r8, 0x8(%rsp)
    000001a5: 	movb	$0x0, 0x10(%rsp)
    000001aa: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 426
    000001af: 	movl	$0x5, %edx
    000001b4: 	leaq	DATAat0x1519b(%rip), %rsi
    000001bb: 	movq	%rax, %rdi
    000001be: 	movq	%rax, %r14
    000001c1: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 449
    000001c6: 	movq	0x8(%rsp), %rsi
    000001cb: 	movq	%r14, %rdi
    000001ce: 	movl	$0x1, %edx
    000001d3: 	movb	%r13b, 0x10(%rsp)
    000001d8: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 472
    000001dd: 	movq	%rax, %r14
    000001e0: 	movq	(%rax), %rax
    000001e3: 	movq	-0x18(%rax), %rax
    000001e7: 	movq	0xf0(%r14,%rax), %r13
    000001ef: 	testq	%r13, %r13
    000001f2: 	je	.Ltmp1005 # Offset: 498
    000001f8: 	cmpb	$0x0, 0x38(%r13)
    000001fd: 	je	.Ltmp1006 # Offset: 509
    00000203: 	movsbl	0x43(%r13), %esi
.Ltmp1015:
    00000208: 	movq	%r14, %rdi
    0000020b: 	callq	_ZNSo3putEc@PLT # Offset: 523
    00000210: 	movq	%rax, %rdi
    00000213: 	callq	_ZNSo5flushEv@PLT # Offset: 531
    00000218: 	movl	iterations(%rip), %r11d
    0000021f: 	movdqa	DATAat0x157a0(%rip), %xmm2
.Ltmp1001:
    00000227: 	addl	$0x1, %r12d
    0000022b: 	cmpl	%r11d, %r12d
    0000022e: 	jl	.Ltmp1007 # Offset: 558
.Ltmp1000:
    00000234: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000023b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000242: 	subq	$0x20, %rax
    00000246: 	cmpq	%rax, %rbx
    00000249: 	je	.Ltmp1008 # Offset: 585
    0000024f: 	leaq	0x10(%rbx), %rdi
    00000253: 	movq	0x8(%rbp), %r12
    00000257: 	movq	%rdi, (%rbx)
    0000025a: 	movq	(%rbp), %r13
    0000025e: 	movq	%r13, %rax
    00000261: 	addq	%r12, %rax
    00000264: 	je	.Ltmp1009 # Offset: 612
    00000266: 	testq	%r13, %r13
    00000269: 	je	.Ltmp1010 # Offset: 617
.Ltmp1009:
    0000026f: 	movq	%r12, 0x10(%rsp)
    00000274: 	cmpq	$0xf, %r12
    00000278: 	ja	.Ltmp1011 # Offset: 632
    0000027e: 	cmpq	$0x1, %r12
    00000282: 	jne	.Ltmp1012 # Offset: 642
    00000288: 	movzbl	(%r13), %eax
    0000028d: 	movb	%al, 0x10(%rbx)
.Ltmp1017:
    00000290: 	movq	%r12, 0x8(%rbx)
    00000294: 	movb	$0x0, (%rdi,%r12)
    00000299: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002a7: 	addq	$0x20, %rax
    000002ab: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002b2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002b9: 	je	.Ltmp1013 # Offset: 697
.Ltmp1016:
    000002bf: 	movq	-0x20(%rax), %rbp
    000002c3: 	callq	clock@PLT # Offset: 707
    000002c8: 	movq	%rax, end_time(%rip)
    000002cf: 	movq	0x18(%rsp), %rdx
    000002d4: 	subq	%fs:0x28, %rdx
    000002dd: 	jne	.Ltmp1014 # Offset: 733
    000002e3: 	subq	start_time(%rip), %rax
    000002ea: 	pxor	%xmm0, %xmm0
    000002ee: 	movq	%rbp, %rdi
    000002f1: 	cvtsi2sd	%rax, %xmm0
    000002f6: 	divsd	DATAat0x15758(%rip), %xmm0
    000002fe: 	addq	$0x28, %rsp
    00000302: 	popq	%rbx
    00000303: 	popq	%rbp
    00000304: 	popq	%r12
    00000306: 	popq	%r13
    00000308: 	popq	%r14
    0000030a: 	popq	%r15
    0000030c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 780
.Ltmp1006:
    00000311: 	movq	%r13, %rdi
    00000314: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 788
    00000319: 	movq	(%r13), %rax
    0000031d: 	movl	$0xa, %esi
    00000322: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000329: 	movq	0x30(%rax), %rax
    0000032d: 	cmpq	%rdx, %rax
    00000330: 	je	.Ltmp1015 # Offset: 816
    00000336: 	movq	%r13, %rdi
    00000339: 	callq	*%rax # Offset: 825
    0000033b: 	movsbl	%al, %esi
    0000033e: 	jmp	.Ltmp1015 # Offset: 830
.Ltmp1008:
    00000343: 	movq	%rbp, %rsi
    00000346: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000034d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 845
    00000352: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000359: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000360: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000367: 	jne	.Ltmp1016 # Offset: 871
.Ltmp1013:
    0000036d: 	movq	-0x8(%rdx), %rax
    00000371: 	addq	$0x200, %rax
    00000377: 	jmp	.Ltmp1016 # Offset: 887
.Ltmp1012:
    0000037c: 	testq	%r12, %r12
    0000037f: 	je	.Ltmp1017 # Offset: 895
    00000385: 	jmp	.Ltmp1018 # Offset: 901
    00000387: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1011:
    00000390: 	movq	%rbx, %rdi
    00000393: 	leaq	0x10(%rsp), %rsi
    00000398: 	xorl	%edx, %edx
    0000039a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 922
    0000039f: 	movq	%rax, (%rbx)
    000003a2: 	movq	%rax, %rdi
    000003a5: 	movq	0x10(%rsp), %rax
    000003aa: 	movq	%rax, 0x10(%rbx)
.Ltmp1018:
    000003ae: 	movq	%r12, %rdx
    000003b1: 	movq	%r13, %rsi
    000003b4: 	callq	memcpy@PLT # Offset: 948
    000003b9: 	movq	0x10(%rsp), %r12
    000003be: 	movq	(%rbx), %rdi
    000003c1: 	jmp	.Ltmp1017 # Offset: 961
.Ltmp1014:
    000003c6: 	callq	__stack_chk_fail@PLT # Offset: 966
.Ltmp1010:
    000003cb: 	leaq	DATAat0x15110(%rip), %rdi
    000003d2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 978
    000003d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1005:
    000003e0: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 992
DWARF CFI Instructions:
    <empty>
End of Function "_Z29test_loop_2D_flat_chan_revCXYIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z27test_loop_2D_flat_chan_opt3IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z27test_loop_2D_flat_chan_opt3IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z27test_loop_2D_flat_chan_opt3IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 90
  State       : disassembled
  Address     : 0xee70
  Size        : 0x4a5
  MaxSize     : 0x4b0
  Offset      : 0xee70
  Section     : .text
  Orc Section : .local.text._Z27test_loop_2D_flat_chan_opt3IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB089:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	movq	%rdi, %r13
    00000009: 	pushq	%r12
    0000000b: 	pushq	%rbp
    0000000c: 	pushq	%rbx
    0000000d: 	movl	%esi, %ebx
    0000000f: 	subq	$0x48, %rsp
    00000013: 	movq	%rdx, 0x18(%rsp)
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x38(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	movl	iterations(%rip), %eax
    0000003a: 	movl	%eax, 0x24(%rsp)
    0000003e: 	testl	%eax, %eax
    00000040: 	jle	.Ltmp1019 # Offset: 64
    00000046: 	leal	-0x1(%rbx), %eax
    00000049: 	movl	$0x0, 0x20(%rsp)
    00000051: 	movl	%ebx, %ebp
    00000053: 	movl	%eax, 0x10(%rsp)
    00000057: 	movl	%ebx, %eax
    00000059: 	andl	$-0x10, %ebp
    0000005c: 	shrl	$0x4, %eax
    0000005f: 	subl	$0x1, %eax
    00000062: 	addq	$0x1, %rax
    00000066: 	shlq	$0x4, %rax
    0000006a: 	movq	%rax, %r14
.Ltmp1029:
    0000006d: 	movb	$0x0, 0x17(%rsp)
    00000072: 	xorl	%r12d, %r12d
    00000075: 	pxor	%xmm2, %xmm2
    00000079: 	pxor	%xmm3, %xmm3
    0000007d: 	movq	$0x0, (%rsp)
    00000085: 	movl	$0xfa0, %r11d
    0000008b: 	movq	$0x0, 0x8(%rsp)
    00000094: 	nopl	(%rax) # Size: 4
.Ltmp1025:
    00000098: 	movq	0x8(%rsp), %rsi
    0000009d: 	xorl	%eax, %eax
    0000009f: 	leaq	(%r13,%rsi), %r9
    000000a4: 	movq	%r9, %r10
    000000a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1024:
    000000b0: 	testl	%ebx, %ebx
    000000b2: 	jle	.Ltmp1020 # Offset: 178
    000000b8: 	cmpl	$0xe, 0x10(%rsp)
    000000bd: 	leal	(%r12,%rsi), %r8d
    000000c1: 	jbe	.Ltmp1021 # Offset: 193
    000000c7: 	leaq	(%r14,%r10), %rcx
    000000cb: 	movq	%r10, %rdx
    000000ce: 	pxor	%xmm0, %xmm0
    000000d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1022:
    000000d8: 	movdqu	(%rdx), %xmm4
    000000dc: 	addq	$0x10, %rdx
    000000e0: 	paddb	%xmm4, %xmm0
    000000e4: 	cmpq	%rcx, %rdx
    000000e7: 	jne	.Ltmp1022 # Offset: 231
    000000e9: 	movdqa	%xmm0, %xmm1
    000000ed: 	psrldq	$0x8, %xmm1
    000000f2: 	paddb	%xmm1, %xmm0
    000000f6: 	psadbw	%xmm3, %xmm0
    000000fa: 	movd	%xmm0, %edx
    000000fe: 	addl	%edx, %eax
    00000100: 	cmpl	%ebx, %ebp
    00000102: 	je	.Ltmp1020 # Offset: 258
    00000108: 	movl	%ebp, %ecx
    0000010a: 	movl	%ebp, %edx
.Ltmp1037:
    0000010c: 	movl	%ebx, %edi
    0000010e: 	subl	%ecx, %edi
    00000110: 	leal	-0x1(%rdi), %r15d
    00000114: 	cmpl	$0x6, %r15d
    00000118: 	jbe	.Ltmp1023 # Offset: 280
    0000011a: 	leaq	(%r13,%rsi), %r15
    0000011f: 	movq	(%r15,%rcx), %xmm0
    00000125: 	movdqa	%xmm0, %xmm5
    00000129: 	psadbw	%xmm2, %xmm5
    0000012d: 	movq	%xmm5, %rcx
    00000132: 	movq	%xmm5, 0x28(%rsp)
    00000138: 	movl	%ecx, %r15d
    0000013b: 	movl	%edi, %ecx
    0000013d: 	andl	$-0x8, %ecx
    00000140: 	addl	%r15d, %eax
    00000143: 	addl	%ecx, %edx
    00000145: 	cmpl	%ecx, %edi
    00000147: 	je	.Ltmp1020 # Offset: 327
.Ltmp1023:
    00000149: 	leal	(%rdx,%r8), %ecx
    0000014d: 	movslq	%ecx, %rcx
    00000150: 	addb	(%r9,%rcx), %al
    00000154: 	leal	0x1(%rdx), %ecx
    00000157: 	cmpl	%ebx, %ecx
    00000159: 	jge	.Ltmp1020 # Offset: 345
    0000015b: 	addl	%r8d, %ecx
    0000015e: 	movslq	%ecx, %rcx
    00000161: 	addb	(%r9,%rcx), %al
    00000165: 	leal	0x2(%rdx), %ecx
    00000168: 	cmpl	%ecx, %ebx
    0000016a: 	jle	.Ltmp1020 # Offset: 362
    0000016c: 	addl	%r8d, %ecx
    0000016f: 	movslq	%ecx, %rcx
    00000172: 	addb	(%r9,%rcx), %al
    00000176: 	leal	0x3(%rdx), %ecx
    00000179: 	cmpl	%ecx, %ebx
    0000017b: 	jle	.Ltmp1020 # Offset: 379
    0000017d: 	addl	%r8d, %ecx
    00000180: 	movslq	%ecx, %rcx
    00000183: 	addb	(%r9,%rcx), %al
    00000187: 	leal	0x4(%rdx), %ecx
    0000018a: 	cmpl	%ecx, %ebx
    0000018c: 	jle	.Ltmp1020 # Offset: 396
    0000018e: 	addl	%r8d, %ecx
    00000191: 	movslq	%ecx, %rcx
    00000194: 	addb	(%r9,%rcx), %al
    00000198: 	leal	0x5(%rdx), %ecx
    0000019b: 	cmpl	%ecx, %ebx
    0000019d: 	jle	.Ltmp1020 # Offset: 413
    0000019f: 	addl	%r8d, %ecx
    000001a2: 	addl	$0x6, %edx
    000001a5: 	movslq	%ecx, %rcx
    000001a8: 	addb	(%r9,%rcx), %al
    000001ac: 	cmpl	%edx, %ebx
    000001ae: 	jle	.Ltmp1020 # Offset: 430
    000001b0: 	addl	%r8d, %edx
    000001b3: 	movslq	%edx, %rdx
    000001b6: 	addb	(%r9,%rdx), %al
.Ltmp1020:
    000001ba: 	addq	$0x4, %rsi
    000001be: 	addq	$0x4, %r10
    000001c2: 	cmpq	%r11, %rsi
    000001c5: 	jne	.Ltmp1024 # Offset: 453
    000001cb: 	addb	%al, 0x17(%rsp)
    000001cf: 	leaq	0xfa0(%rsi), %r11
    000001d6: 	subl	$0xfa0, %r12d
    000001dd: 	addq	$0x3e8, (%rsp)
    000001e5: 	movq	(%rsp), %rax
    000001e9: 	addq	$0xfa0, 0x8(%rsp)
    000001f2: 	cmpq	$0x3d0900, %rax
    000001f8: 	jne	.Ltmp1025 # Offset: 504
    000001fe: 	cmpb	$0x0, 0x17(%rsp)
    00000203: 	je	.Ltmp1026 # Offset: 515
    00000209: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r12
    00000210: 	movl	$0x5, %edx
    00000215: 	leaq	0x30(%rsp), %r15
    0000021a: 	movq	%r12, %rdi
    0000021d: 	leaq	DATAat0x15182(%rip), %rsi
    00000224: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 548
    00000229: 	movq	0x18(%rsp), %rsi
    0000022e: 	movq	%r12, %rdi
    00000231: 	movq	0x8(%rsi), %rdx
    00000235: 	movq	(%rsi), %rsi
    00000238: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 568
    0000023d: 	movl	$0x12, %edx
    00000242: 	leaq	DATAat0x15188(%rip), %rsi
    00000249: 	movq	%rax, %r12
    0000024c: 	movq	%rax, %rdi
    0000024f: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 591
    00000254: 	movq	%r15, %rsi
    00000257: 	movq	%r12, %rdi
    0000025a: 	movl	$0x1, %edx
    0000025f: 	movb	$0x0, 0x30(%rsp)
    00000264: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 612
    00000269: 	movl	$0x5, %edx
    0000026e: 	leaq	DATAat0x1519b(%rip), %rsi
    00000275: 	movq	%rax, %rdi
    00000278: 	movq	%rax, %r12
    0000027b: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 635
    00000280: 	movzbl	0x17(%rsp), %eax
    00000285: 	movq	%r15, %rsi
    00000288: 	movq	%r12, %rdi
    0000028b: 	movl	$0x1, %edx
    00000290: 	movb	%al, 0x30(%rsp)
    00000294: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 660
    00000299: 	movq	%rax, %r15
    0000029c: 	movq	(%rax), %rax
    0000029f: 	movq	-0x18(%rax), %rax
    000002a3: 	movq	0xf0(%r15,%rax), %r12
    000002ab: 	testq	%r12, %r12
    000002ae: 	je	.Ltmp1027 # Offset: 686
    000002b4: 	cmpb	$0x0, 0x38(%r12)
    000002ba: 	je	.Ltmp1028 # Offset: 698
    000002c0: 	movsbl	0x43(%r12), %esi
.Ltmp1038:
    000002c6: 	movq	%r15, %rdi
    000002c9: 	callq	_ZNSo3putEc@PLT # Offset: 713
    000002ce: 	movq	%rax, %rdi
    000002d1: 	callq	_ZNSo5flushEv@PLT # Offset: 721
    000002d6: 	movl	iterations(%rip), %eax
    000002dc: 	movl	%eax, 0x24(%rsp)
.Ltmp1026:
    000002e0: 	addl	$0x1, 0x20(%rsp)
    000002e5: 	movl	0x20(%rsp), %eax
    000002e9: 	cmpl	0x24(%rsp), %eax
    000002ed: 	jl	.Ltmp1029 # Offset: 749
.Ltmp1019:
    000002f3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002fa: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000301: 	subq	$0x20, %rax
    00000305: 	cmpq	%rax, %rbx
    00000308: 	je	.Ltmp1030 # Offset: 776
    0000030e: 	movq	0x18(%rsp), %rax
    00000313: 	leaq	0x10(%rbx), %rdi
    00000317: 	movq	%rdi, (%rbx)
    0000031a: 	movq	(%rax), %rbp
    0000031d: 	movq	0x8(%rax), %r12
    00000321: 	movq	%rbp, %rax
    00000324: 	addq	%r12, %rax
    00000327: 	je	.Ltmp1031 # Offset: 807
    00000329: 	testq	%rbp, %rbp
    0000032c: 	je	.Ltmp1032 # Offset: 812
.Ltmp1031:
    00000332: 	movq	%r12, 0x30(%rsp)
    00000337: 	cmpq	$0xf, %r12
    0000033b: 	ja	.Ltmp1033 # Offset: 827
    00000341: 	cmpq	$0x1, %r12
    00000345: 	jne	.Ltmp1034 # Offset: 837
    0000034b: 	movzbl	(%rbp), %eax
    0000034f: 	movb	%al, 0x10(%rbx)
.Ltmp1040:
    00000352: 	movq	%r12, 0x8(%rbx)
    00000356: 	movb	$0x0, (%rdi,%r12)
    0000035b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000362: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000369: 	addq	$0x20, %rax
    0000036d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000374: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000037b: 	je	.Ltmp1035 # Offset: 891
.Ltmp1039:
    00000381: 	movq	-0x20(%rax), %rbp
    00000385: 	callq	clock@PLT # Offset: 901
    0000038a: 	movq	%rax, end_time(%rip)
    00000391: 	movq	0x38(%rsp), %rdx
    00000396: 	subq	%fs:0x28, %rdx
    0000039f: 	jne	.Ltmp1036 # Offset: 927
    000003a5: 	subq	start_time(%rip), %rax
    000003ac: 	pxor	%xmm0, %xmm0
    000003b0: 	movq	%rbp, %rdi
    000003b3: 	cvtsi2sd	%rax, %xmm0
    000003b8: 	divsd	DATAat0x15758(%rip), %xmm0
    000003c0: 	addq	$0x48, %rsp
    000003c4: 	popq	%rbx
    000003c5: 	popq	%rbp
    000003c6: 	popq	%r12
    000003c8: 	popq	%r13
    000003ca: 	popq	%r14
    000003cc: 	popq	%r15
    000003ce: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 974
.Ltmp1021:
    000003d3: 	xorl	%ecx, %ecx
    000003d5: 	xorl	%edx, %edx
    000003d7: 	jmp	.Ltmp1037 # Offset: 983
.Ltmp1028:
    000003dc: 	movq	%r12, %rdi
    000003df: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 991
    000003e4: 	movq	(%r12), %rax
    000003e8: 	movl	$0xa, %esi
    000003ed: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000003f4: 	movq	0x30(%rax), %rax
    000003f8: 	cmpq	%rdx, %rax
    000003fb: 	je	.Ltmp1038 # Offset: 1019
    00000401: 	movq	%r12, %rdi
    00000404: 	callq	*%rax # Offset: 1028
    00000406: 	movsbl	%al, %esi
    00000409: 	jmp	.Ltmp1038 # Offset: 1033
.Ltmp1030:
    0000040e: 	movq	0x18(%rsp), %rsi
    00000413: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000041a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1050
    0000041f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000426: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000042d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000434: 	jne	.Ltmp1039 # Offset: 1076
.Ltmp1035:
    0000043a: 	movq	-0x8(%rdx), %rax
    0000043e: 	addq	$0x200, %rax
    00000444: 	jmp	.Ltmp1039 # Offset: 1092
.Ltmp1034:
    00000449: 	testq	%r12, %r12
    0000044c: 	je	.Ltmp1040 # Offset: 1100
    00000452: 	jmp	.Ltmp1041 # Offset: 1106
    00000454: 	nopl	(%rax) # Size: 4
.Ltmp1033:
    00000458: 	movq	%rbx, %rdi
    0000045b: 	leaq	0x30(%rsp), %rsi
    00000460: 	xorl	%edx, %edx
    00000462: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1122
    00000467: 	movq	%rax, (%rbx)
    0000046a: 	movq	%rax, %rdi
    0000046d: 	movq	0x30(%rsp), %rax
    00000472: 	movq	%rax, 0x10(%rbx)
.Ltmp1041:
    00000476: 	movq	%r12, %rdx
    00000479: 	movq	%rbp, %rsi
    0000047c: 	callq	memcpy@PLT # Offset: 1148
    00000481: 	movq	0x30(%rsp), %r12
    00000486: 	movq	(%rbx), %rdi
    00000489: 	jmp	.Ltmp1040 # Offset: 1161
.Ltmp1036:
    0000048e: 	callq	__stack_chk_fail@PLT # Offset: 1166
.Ltmp1032:
    00000493: 	leaq	DATAat0x15110(%rip), %rdi
    0000049a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1178
    0000049f: 	nop # Size: 1
.Ltmp1027:
    000004a0: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 1184
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_loop_2D_flat_chan_opt3IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z27test_loop_2D_flat_chan_opt4IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z27test_loop_2D_flat_chan_opt4IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z27test_loop_2D_flat_chan_opt4IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 91
  State       : disassembled
  Address     : 0xf320
  Size        : 0x4c5
  MaxSize     : 0x4d0
  Offset      : 0xf320
  Section     : .text
  Orc Section : .local.text._Z27test_loop_2D_flat_chan_opt4IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB090:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	movq	%rdi, %rbp
    0000000c: 	pushq	%rbx
    0000000d: 	movl	%esi, %ebx
    0000000f: 	subq	$0x58, %rsp
    00000013: 	movq	%rdx, 0x20(%rsp)
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x48(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	movl	iterations(%rip), %eax
    0000003a: 	movl	%eax, 0x2c(%rsp)
    0000003e: 	testl	%eax, %eax
    00000040: 	jle	.Ltmp1042 # Offset: 64
    00000046: 	movl	%ebx, %eax
    00000048: 	leaq	0xfa0(%rbp), %rsi
    0000004f: 	leal	-0x1(%rbx), %r13d
    00000053: 	movl	%ebx, %r14d
    00000056: 	shrl	$0x4, %eax
    00000059: 	movl	$0x0, 0x28(%rsp)
    00000061: 	andl	$-0x10, %r14d
    00000065: 	subl	$0x1, %eax
    00000068: 	movq	%rsi, 0x30(%rsp)
    0000006d: 	addq	$0x1, %rax
    00000071: 	shlq	$0x4, %rax
    00000075: 	movq	%rax, %r12
.Ltmp1052:
    00000078: 	movq	%rbp, 0x10(%rsp)
    0000007d: 	movq	0x30(%rsp), %r10
    00000082: 	pxor	%xmm2, %xmm2
    00000086: 	pxor	%xmm3, %xmm3
    0000008a: 	movq	$0x0, 0x8(%rsp)
    00000093: 	movb	$0x0, 0x1f(%rsp)
    00000098: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1048:
    000000a0: 	movq	0x8(%rsp), %rdx
    000000a5: 	movq	0x10(%rsp), %rdi
    000000aa: 	xorl	%eax, %eax
    000000ac: 	movl	%edx, %r11d
    000000af: 	movq	%rdx, %r9
    000000b2: 	movq	%rdi, %rsi
    000000b5: 	subl	%edi, %r11d
    000000b8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1047:
    000000c0: 	testl	%ebx, %ebx
    000000c2: 	jle	.Ltmp1043 # Offset: 194
    000000c8: 	leal	(%r11,%rsi), %edi
    000000cc: 	cmpl	$0xe, %r13d
    000000d0: 	jbe	.Ltmp1044 # Offset: 208
    000000d6: 	leaq	(%r12,%rsi), %rcx
    000000da: 	movq	%rsi, %rdx
    000000dd: 	pxor	%xmm0, %xmm0
    000000e1: 	nopl	(%rax) # Size: 7
.Ltmp1045:
    000000e8: 	movdqu	(%rdx), %xmm4
    000000ec: 	addq	$0x10, %rdx
    000000f0: 	paddb	%xmm4, %xmm0
    000000f4: 	cmpq	%rcx, %rdx
    000000f7: 	jne	.Ltmp1045 # Offset: 247
    000000f9: 	movdqa	%xmm0, %xmm1
    000000fd: 	psrldq	$0x8, %xmm1
    00000102: 	paddb	%xmm1, %xmm0
    00000106: 	psadbw	%xmm3, %xmm0
    0000010a: 	movd	%xmm0, %edx
    0000010e: 	addl	%edx, %eax
    00000110: 	cmpl	%ebx, %r14d
    00000113: 	je	.Ltmp1043 # Offset: 275
    00000119: 	movl	%r14d, %ecx
    0000011c: 	movl	%r14d, %edx
.Ltmp1060:
    0000011f: 	movl	%ebx, %r8d
    00000122: 	subl	%ecx, %r8d
    00000125: 	leal	-0x1(%r8), %r15d
    00000129: 	cmpl	$0x6, %r15d
    0000012d: 	jbe	.Ltmp1046 # Offset: 301
    0000012f: 	leaq	(%rbp,%r9), %r15
    00000134: 	movq	(%r15,%rcx), %xmm0
    0000013a: 	movdqa	%xmm0, %xmm5
    0000013e: 	psadbw	%xmm2, %xmm5
    00000142: 	movq	%xmm5, %rcx
    00000147: 	movq	%xmm5, 0x38(%rsp)
    0000014d: 	movl	%ecx, %r15d
    00000150: 	movl	%r8d, %ecx
    00000153: 	andl	$-0x8, %ecx
    00000156: 	addl	%r15d, %eax
    00000159: 	addl	%ecx, %edx
    0000015b: 	cmpl	%ecx, %r8d
    0000015e: 	je	.Ltmp1043 # Offset: 350
.Ltmp1046:
    00000160: 	leal	(%rdx,%rdi), %ecx
    00000163: 	movslq	%ecx, %rcx
    00000166: 	addb	(%rbp,%rcx), %al
    0000016a: 	leal	0x1(%rdx), %ecx
    0000016d: 	cmpl	%ebx, %ecx
    0000016f: 	jge	.Ltmp1043 # Offset: 367
    00000171: 	addl	%edi, %ecx
    00000173: 	movslq	%ecx, %rcx
    00000176: 	addb	(%rbp,%rcx), %al
    0000017a: 	leal	0x2(%rdx), %ecx
    0000017d: 	cmpl	%ecx, %ebx
    0000017f: 	jle	.Ltmp1043 # Offset: 383
    00000181: 	addl	%edi, %ecx
    00000183: 	movslq	%ecx, %rcx
    00000186: 	addb	(%rbp,%rcx), %al
    0000018a: 	leal	0x3(%rdx), %ecx
    0000018d: 	cmpl	%ecx, %ebx
    0000018f: 	jle	.Ltmp1043 # Offset: 399
    00000191: 	addl	%edi, %ecx
    00000193: 	movslq	%ecx, %rcx
    00000196: 	addb	(%rbp,%rcx), %al
    0000019a: 	leal	0x4(%rdx), %ecx
    0000019d: 	cmpl	%ecx, %ebx
    0000019f: 	jle	.Ltmp1043 # Offset: 415
    000001a1: 	addl	%edi, %ecx
    000001a3: 	movslq	%ecx, %rcx
    000001a6: 	addb	(%rbp,%rcx), %al
    000001aa: 	leal	0x5(%rdx), %ecx
    000001ad: 	cmpl	%ecx, %ebx
    000001af: 	jle	.Ltmp1043 # Offset: 431
    000001b1: 	addl	%edi, %ecx
    000001b3: 	addl	$0x6, %edx
    000001b6: 	movslq	%ecx, %rcx
    000001b9: 	addb	(%rbp,%rcx), %al
    000001bd: 	cmpl	%edx, %ebx
    000001bf: 	jle	.Ltmp1043 # Offset: 447
    000001c1: 	addl	%edi, %edx
    000001c3: 	movslq	%edx, %rdx
    000001c6: 	addb	(%rbp,%rdx), %al
.Ltmp1043:
    000001ca: 	addq	$0x4, %rsi
    000001ce: 	addq	$0x4, %r9
    000001d2: 	cmpq	%r10, %rsi
    000001d5: 	jne	.Ltmp1047 # Offset: 469
    000001db: 	addb	%al, 0x1f(%rsp)
    000001df: 	leaq	0xfa0(%rsi), %r10
    000001e6: 	addq	$0xfa0, 0x8(%rsp)
    000001ef: 	movq	0x8(%rsp), %rax
    000001f4: 	addq	$0xfa0, 0x10(%rsp)
    000001fd: 	cmpq	$0xf42400, %rax
    00000203: 	jne	.Ltmp1048 # Offset: 515
    00000209: 	cmpb	$0x0, 0x1f(%rsp)
    0000020e: 	je	.Ltmp1049 # Offset: 526
    00000214: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r15
    0000021b: 	movl	$0x5, %edx
    00000220: 	leaq	DATAat0x15182(%rip), %rsi
    00000227: 	movq	%r15, %rdi
    0000022a: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 554
    0000022f: 	movq	0x20(%rsp), %rsi
    00000234: 	movq	%r15, %rdi
    00000237: 	movq	0x8(%rsi), %rdx
    0000023b: 	movq	(%rsi), %rsi
    0000023e: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 574
    00000243: 	movl	$0x12, %edx
    00000248: 	leaq	DATAat0x15188(%rip), %rsi
    0000024f: 	movq	%rax, %rdi
    00000252: 	movq	%rax, %r15
    00000255: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 597
    0000025a: 	leaq	0x40(%rsp), %r8
    0000025f: 	movq	%r15, %rdi
    00000262: 	movl	$0x1, %edx
    00000267: 	movq	%r8, %rsi
    0000026a: 	movq	%r8, 0x8(%rsp)
    0000026f: 	movb	$0x0, 0x40(%rsp)
    00000274: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 628
    00000279: 	movl	$0x5, %edx
    0000027e: 	leaq	DATAat0x1519b(%rip), %rsi
    00000285: 	movq	%rax, %rdi
    00000288: 	movq	%rax, %r15
    0000028b: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 651
    00000290: 	movzbl	0x1f(%rsp), %eax
    00000295: 	movq	0x8(%rsp), %rsi
    0000029a: 	movq	%r15, %rdi
    0000029d: 	movl	$0x1, %edx
    000002a2: 	movb	%al, 0x40(%rsp)
    000002a6: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 678
    000002ab: 	movq	%rax, %r8
    000002ae: 	movq	(%rax), %rax
    000002b1: 	movq	-0x18(%rax), %rax
    000002b5: 	movq	0xf0(%r8,%rax), %r15
    000002bd: 	testq	%r15, %r15
    000002c0: 	je	.Ltmp1050 # Offset: 704
    000002c6: 	cmpb	$0x0, 0x38(%r15)
    000002cb: 	je	.Ltmp1051 # Offset: 715
    000002d1: 	movsbl	0x43(%r15), %esi
.Ltmp1061:
    000002d6: 	movq	%r8, %rdi
    000002d9: 	callq	_ZNSo3putEc@PLT # Offset: 729
    000002de: 	movq	%rax, %rdi
    000002e1: 	callq	_ZNSo5flushEv@PLT # Offset: 737
    000002e6: 	movl	iterations(%rip), %eax
    000002ec: 	movl	%eax, 0x2c(%rsp)
.Ltmp1049:
    000002f0: 	addl	$0x1, 0x28(%rsp)
    000002f5: 	movl	0x28(%rsp), %eax
    000002f9: 	cmpl	0x2c(%rsp), %eax
    000002fd: 	jl	.Ltmp1052 # Offset: 765
.Ltmp1042:
    00000303: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000030a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000311: 	subq	$0x20, %rax
    00000315: 	cmpq	%rax, %rbx
    00000318: 	je	.Ltmp1053 # Offset: 792
    0000031e: 	movq	0x20(%rsp), %rax
    00000323: 	leaq	0x10(%rbx), %rdi
    00000327: 	movq	%rdi, (%rbx)
    0000032a: 	movq	(%rax), %rbp
    0000032d: 	movq	0x8(%rax), %r12
    00000331: 	movq	%rbp, %rax
    00000334: 	addq	%r12, %rax
    00000337: 	je	.Ltmp1054 # Offset: 823
    00000339: 	testq	%rbp, %rbp
    0000033c: 	je	.Ltmp1055 # Offset: 828
.Ltmp1054:
    00000342: 	movq	%r12, 0x40(%rsp)
    00000347: 	cmpq	$0xf, %r12
    0000034b: 	ja	.Ltmp1056 # Offset: 843
    00000351: 	cmpq	$0x1, %r12
    00000355: 	jne	.Ltmp1057 # Offset: 853
    0000035b: 	movzbl	(%rbp), %eax
    0000035f: 	movb	%al, 0x10(%rbx)
.Ltmp1063:
    00000362: 	movq	%r12, 0x8(%rbx)
    00000366: 	movb	$0x0, (%rdi,%r12)
    0000036b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000372: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000379: 	addq	$0x20, %rax
    0000037d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000384: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000038b: 	je	.Ltmp1058 # Offset: 907
.Ltmp1062:
    00000391: 	movq	-0x20(%rax), %rbp
    00000395: 	callq	clock@PLT # Offset: 917
    0000039a: 	movq	%rax, end_time(%rip)
    000003a1: 	movq	0x48(%rsp), %rdx
    000003a6: 	subq	%fs:0x28, %rdx
    000003af: 	jne	.Ltmp1059 # Offset: 943
    000003b5: 	subq	start_time(%rip), %rax
    000003bc: 	pxor	%xmm0, %xmm0
    000003c0: 	movq	%rbp, %rdi
    000003c3: 	cvtsi2sd	%rax, %xmm0
    000003c8: 	divsd	DATAat0x15758(%rip), %xmm0
    000003d0: 	addq	$0x58, %rsp
    000003d4: 	popq	%rbx
    000003d5: 	popq	%rbp
    000003d6: 	popq	%r12
    000003d8: 	popq	%r13
    000003da: 	popq	%r14
    000003dc: 	popq	%r15
    000003de: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 990
.Ltmp1044:
    000003e3: 	xorl	%ecx, %ecx
    000003e5: 	xorl	%edx, %edx
    000003e7: 	jmp	.Ltmp1060 # Offset: 999
.Ltmp1051:
    000003ec: 	movq	%r15, %rdi
    000003ef: 	movq	%r8, 0x8(%rsp)
    000003f4: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 1012
    000003f9: 	movq	(%r15), %rax
    000003fc: 	movq	0x8(%rsp), %r8
    00000401: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000408: 	movl	$0xa, %esi
    0000040d: 	movq	0x30(%rax), %rax
    00000411: 	cmpq	%rdx, %rax
    00000414: 	je	.Ltmp1061 # Offset: 1044
    0000041a: 	movq	%r15, %rdi
    0000041d: 	callq	*%rax # Offset: 1053
    0000041f: 	movq	0x8(%rsp), %r8
    00000424: 	movsbl	%al, %esi
    00000427: 	jmp	.Ltmp1061 # Offset: 1063
.Ltmp1053:
    0000042c: 	movq	0x20(%rsp), %rsi
    00000431: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000438: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1080
    0000043d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000444: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000044b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000452: 	jne	.Ltmp1062 # Offset: 1106
.Ltmp1058:
    00000458: 	movq	-0x8(%rdx), %rax
    0000045c: 	addq	$0x200, %rax
    00000462: 	jmp	.Ltmp1062 # Offset: 1122
.Ltmp1057:
    00000467: 	testq	%r12, %r12
    0000046a: 	je	.Ltmp1063 # Offset: 1130
    00000470: 	jmp	.Ltmp1064 # Offset: 1136
    00000472: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1056:
    00000478: 	movq	%rbx, %rdi
    0000047b: 	leaq	0x40(%rsp), %rsi
    00000480: 	xorl	%edx, %edx
    00000482: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1154
    00000487: 	movq	%rax, (%rbx)
    0000048a: 	movq	%rax, %rdi
    0000048d: 	movq	0x40(%rsp), %rax
    00000492: 	movq	%rax, 0x10(%rbx)
.Ltmp1064:
    00000496: 	movq	%r12, %rdx
    00000499: 	movq	%rbp, %rsi
    0000049c: 	callq	memcpy@PLT # Offset: 1180
    000004a1: 	movq	0x40(%rsp), %r12
    000004a6: 	movq	(%rbx), %rdi
    000004a9: 	jmp	.Ltmp1063 # Offset: 1193
.Ltmp1059:
    000004ae: 	callq	__stack_chk_fail@PLT # Offset: 1198
.Ltmp1055:
    000004b3: 	leaq	DATAat0x15110(%rip), %rdi
    000004ba: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1210
    000004bf: 	nop # Size: 1
.Ltmp1050:
    000004c0: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 1216
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_loop_2D_flat_chan_opt4IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z17test_loop_4D_ABCDIhEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 92
  State       : disassembled
  Address     : 0xf7f0
  Size        : 0x3b4
  MaxSize     : 0x3c0
  Offset      : 0xf7f0
  Section     : .text
  Orc Section : .local.text._Z17test_loop_4D_ABCDIhEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB091:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	xorl	%r15d, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rsi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rbx
    0000001b: 	subq	$0x38, %rsp
    0000001f: 	movq	%rdi, 0x8(%rsp)
    00000024: 	movq	%fs:0x28, %rax
    0000002d: 	movq	%rax, 0x28(%rsp)
    00000032: 	xorl	%eax, %eax
    00000034: 	callq	clock@PLT # Offset: 52
    00000039: 	movl	iterations(%rip), %r13d
    00000040: 	movq	%rax, start_time(%rip)
    00000047: 	testl	%r13d, %r13d
    0000004a: 	jle	.Ltmp1065 # Offset: 74
.Ltmp1072:
    00000050: 	movq	0x8(%rsp), %r10
    00000055: 	xorl	%r14d, %r14d
    00000058: 	xorl	%r12d, %r12d
    0000005b: 	pxor	%xmm3, %xmm3
    0000005f: 	pxor	%xmm2, %xmm2
.Ltmp1068:
    00000063: 	leaq	0x48(%r10), %rax
    00000067: 	leaq	0x15f8(%r10), %r9
    0000006e: 	xorl	%r11d, %r11d
    00000071: 	movq	%rax, 0x10(%rsp)
.Ltmp1067:
    00000076: 	movq	0x10(%rsp), %rax
    0000007b: 	leaq	-0x15f8(%r9), %rdx
    00000082: 	xorl	%esi, %esi
    00000084: 	leaq	(%rax,%r11), %rcx
    00000088: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1066:
    00000090: 	movdqu	(%rdx), %xmm0
    00000094: 	movdqu	0x10(%rdx), %xmm5
    00000099: 	addq	$0x4c, %rdx
    0000009d: 	addq	$0x4c, %rcx
    000000a1: 	movdqu	-0x1c(%rdx), %xmm1
    000000a6: 	movdqu	-0x2c(%rdx), %xmm6
    000000ab: 	paddb	%xmm5, %xmm0
    000000af: 	paddb	%xmm6, %xmm1
    000000b3: 	paddb	%xmm1, %xmm0
    000000b7: 	movdqa	%xmm0, %xmm1
    000000bb: 	psrldq	$0x8, %xmm1
    000000c0: 	paddb	%xmm1, %xmm0
    000000c4: 	psadbw	%xmm3, %xmm0
    000000c8: 	movd	%xmm0, %r8d
    000000cd: 	movq	-0xc(%rdx), %xmm0
    000000d2: 	movdqa	%xmm0, %xmm4
    000000d6: 	psadbw	%xmm2, %xmm4
    000000da: 	movq	%xmm4, %rdi
    000000df: 	movq	%xmm4, 0x18(%rsp)
    000000e5: 	movl	%edi, %eax
    000000e7: 	addl	%r8d, %eax
    000000ea: 	addb	-0x4c(%rcx), %al
    000000ed: 	addb	-0x4b(%rcx), %al
    000000f0: 	addb	-0x4a(%rcx), %al
    000000f3: 	addb	-0x49(%rcx), %al
    000000f6: 	addl	%eax, %esi
    000000f8: 	cmpq	%rdx, %r9
    000000fb: 	jne	.Ltmp1066 # Offset: 251
    000000fd: 	addq	$0x15f8, %r11
    00000104: 	addl	%esi, %r12d
    00000107: 	addq	$0x15f8, %r9
    0000010e: 	cmpq	$0x6c788, %r11
    00000115: 	jne	.Ltmp1067 # Offset: 277
    0000011b: 	addq	$0x6c788, %r14
    00000122: 	addq	$0x6c788, %r10
    00000129: 	cmpq	$0x1fc74d8, %r14
    00000130: 	jne	.Ltmp1068 # Offset: 304
    00000136: 	cvttsd2si	init_value(%rip), %edx
    0000013e: 	movl	$0xffffffd8, %eax
    00000143: 	imull	%edx, %eax
    00000146: 	movl	%eax, %r14d
    00000149: 	cmpb	%al, %r12b
    0000014c: 	je	.Ltmp1069 # Offset: 332
    00000152: 	movl	$0x5, %edx
    00000157: 	leaq	DATAat0x15182(%rip), %rsi
    0000015e: 	movq	%rbx, %rdi
    00000161: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 353
    00000166: 	movq	0x8(%rbp), %rdx
    0000016a: 	movq	(%rbp), %rsi
    0000016e: 	movq	%rbx, %rdi
    00000171: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 369
    00000176: 	movl	$0x12, %edx
    0000017b: 	leaq	DATAat0x15188(%rip), %rsi
    00000182: 	movq	%rax, %rdi
    00000185: 	movq	%rax, %r13
    00000188: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 392
    0000018d: 	movb	%r14b, 0x20(%rsp)
    00000192: 	leaq	0x20(%rsp), %r14
    00000197: 	movq	%r13, %rdi
    0000019a: 	movl	$0x1, %edx
    0000019f: 	movq	%r14, %rsi
    000001a2: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 418
    000001a7: 	movl	$0x5, %edx
    000001ac: 	leaq	DATAat0x1519b(%rip), %rsi
    000001b3: 	movq	%rax, %r13
    000001b6: 	movq	%rax, %rdi
    000001b9: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 441
    000001be: 	movq	%r13, %rdi
    000001c1: 	movl	$0x1, %edx
    000001c6: 	movq	%r14, %rsi
    000001c9: 	movb	%r12b, 0x20(%rsp)
    000001ce: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 462
    000001d3: 	movq	%rax, %r13
    000001d6: 	movq	(%rax), %rax
    000001d9: 	movq	-0x18(%rax), %rax
    000001dd: 	movq	0xf0(%r13,%rax), %r12
    000001e5: 	testq	%r12, %r12
    000001e8: 	je	.Ltmp1070 # Offset: 488
    000001ee: 	cmpb	$0x0, 0x38(%r12)
    000001f4: 	je	.Ltmp1071 # Offset: 500
    000001fa: 	movsbl	0x43(%r12), %esi
.Ltmp1079:
    00000200: 	movq	%r13, %rdi
    00000203: 	callq	_ZNSo3putEc@PLT # Offset: 515
    00000208: 	movq	%rax, %rdi
    0000020b: 	callq	_ZNSo5flushEv@PLT # Offset: 523
    00000210: 	movl	iterations(%rip), %r13d
.Ltmp1069:
    00000217: 	addl	$0x1, %r15d
    0000021b: 	cmpl	%r13d, %r15d
    0000021e: 	jl	.Ltmp1072 # Offset: 542
.Ltmp1065:
    00000224: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000022b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000232: 	subq	$0x20, %rax
    00000236: 	cmpq	%rax, %rbx
    00000239: 	je	.Ltmp1073 # Offset: 569
    0000023f: 	leaq	0x10(%rbx), %rdi
    00000243: 	movq	0x8(%rbp), %r12
    00000247: 	movq	%rdi, (%rbx)
    0000024a: 	movq	(%rbp), %r13
    0000024e: 	movq	%r13, %rax
    00000251: 	addq	%r12, %rax
    00000254: 	je	.Ltmp1074 # Offset: 596
    00000256: 	testq	%r13, %r13
    00000259: 	je	.Ltmp1075 # Offset: 601
.Ltmp1074:
    0000025f: 	movq	%r12, 0x20(%rsp)
    00000264: 	cmpq	$0xf, %r12
    00000268: 	ja	.Ltmp1076 # Offset: 616
    0000026e: 	cmpq	$0x1, %r12
    00000272: 	jne	.Ltmp1077 # Offset: 626
    00000278: 	movzbl	(%r13), %eax
    0000027d: 	movb	%al, 0x10(%rbx)
.Ltmp1082:
    00000280: 	movq	%r12, 0x8(%rbx)
    00000284: 	movb	$0x0, (%rdi,%r12)
    00000289: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000290: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000297: 	addq	$0x20, %rax
    0000029b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002a2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002a9: 	jne	.Ltmp1078 # Offset: 681
.Ltmp1080:
    000002ab: 	movq	-0x8(%rdx), %rax
    000002af: 	addq	$0x200, %rax
    000002b5: 	jmp	.Ltmp1078 # Offset: 693
.Ltmp1071:
    000002b7: 	movq	%r12, %rdi
    000002ba: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 698
    000002bf: 	movq	(%r12), %rax
    000002c3: 	movl	$0xa, %esi
    000002c8: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000002cf: 	movq	0x30(%rax), %rax
    000002d3: 	cmpq	%rdx, %rax
    000002d6: 	je	.Ltmp1079 # Offset: 726
    000002dc: 	movq	%r12, %rdi
    000002df: 	callq	*%rax # Offset: 735
    000002e1: 	movsbl	%al, %esi
    000002e4: 	jmp	.Ltmp1079 # Offset: 740
.Ltmp1073:
    000002e9: 	movq	%rbp, %rsi
    000002ec: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002f3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 755
    000002f8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002ff: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000306: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000030d: 	je	.Ltmp1080 # Offset: 781
.Ltmp1078:
    0000030f: 	movq	-0x20(%rax), %rbp
    00000313: 	callq	clock@PLT # Offset: 787
    00000318: 	movq	%rax, end_time(%rip)
    0000031f: 	movq	0x28(%rsp), %rdx
    00000324: 	subq	%fs:0x28, %rdx
    0000032d: 	jne	.Ltmp1081 # Offset: 813
    0000032f: 	subq	start_time(%rip), %rax
    00000336: 	pxor	%xmm0, %xmm0
    0000033a: 	movq	%rbp, %rdi
    0000033d: 	cvtsi2sd	%rax, %xmm0
    00000342: 	divsd	DATAat0x15758(%rip), %xmm0
    0000034a: 	addq	$0x38, %rsp
    0000034e: 	popq	%rbx
    0000034f: 	popq	%rbp
    00000350: 	popq	%r12
    00000352: 	popq	%r13
    00000354: 	popq	%r14
    00000356: 	popq	%r15
    00000358: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 856
.Ltmp1076:
    0000035d: 	movq	%rbx, %rdi
    00000360: 	leaq	0x20(%rsp), %rsi
    00000365: 	xorl	%edx, %edx
    00000367: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 871
    0000036c: 	movq	%rax, (%rbx)
    0000036f: 	movq	%rax, %rdi
    00000372: 	movq	0x20(%rsp), %rax
    00000377: 	movq	%rax, 0x10(%rbx)
.Ltmp1083:
    0000037b: 	movq	%r12, %rdx
    0000037e: 	movq	%r13, %rsi
    00000381: 	callq	memcpy@PLT # Offset: 897
    00000386: 	movq	0x20(%rsp), %r12
    0000038b: 	movq	(%rbx), %rdi
    0000038e: 	jmp	.Ltmp1082 # Offset: 910
.Ltmp1077:
    00000393: 	testq	%r12, %r12
    00000396: 	je	.Ltmp1082 # Offset: 918
    0000039c: 	jmp	.Ltmp1083 # Offset: 924
.Ltmp1081:
    0000039e: 	callq	__stack_chk_fail@PLT # Offset: 926
.Ltmp1070:
    000003a3: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 931
.Ltmp1075:
    000003a8: 	leaq	DATAat0x15110(%rip), %rdi
    000003af: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 943
DWARF CFI Instructions:
    <empty>
End of Function "_Z17test_loop_4D_ABCDIhEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z17test_loop_4D_DCBAIhEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 93
  State       : disassembled
  Address     : 0xfbb0
  Size        : 0x35b
  MaxSize     : 0x360
  Offset      : 0xfbb0
  Section     : .text
  Orc Section : .local.text._Z17test_loop_4D_DCBAIhEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB092:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	leaq	DATAat0x15182(%rip), %r14
    0000000f: 	pushq	%r13
    00000011: 	leaq	DATAat0x15188(%rip), %r13
    00000018: 	pushq	%r12
    0000001a: 	movq	%rdi, %r12
    0000001d: 	pushq	%rbp
    0000001e: 	movq	%rsi, %rbp
    00000021: 	pushq	%rbx
    00000022: 	xorl	%ebx, %ebx
    00000024: 	subq	$0x38, %rsp
    00000028: 	movq	%fs:0x28, %rax
    00000031: 	movq	%rax, 0x28(%rsp)
    00000036: 	xorl	%eax, %eax
    00000038: 	callq	clock@PLT # Offset: 56
    0000003d: 	movl	iterations(%rip), %r9d
    00000044: 	movq	%rax, start_time(%rip)
    0000004b: 	leaq	0x6dd80(%r12), %rax
    00000053: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r12
    0000005a: 	movq	%rax, 0x8(%rsp)
    0000005f: 	testl	%r9d, %r9d
    00000062: 	jle	.Ltmp1084 # Offset: 98
.Ltmp1092:
    00000068: 	movq	0x8(%rsp), %r11
    0000006d: 	xorl	%r10d, %r10d
    00000070: 	xorl	%r15d, %r15d
.Ltmp1088:
    00000073: 	leaq	-0x15f8(%r11), %rdi
.Ltmp1087:
    0000007a: 	movq	%rdi, %rcx
    0000007d: 	xorl	%edx, %edx
    0000007f: 	leaq	0x1fc74d8(%rdi), %rsi
    00000086: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1086:
    00000090: 	leaq	-0x6c788(%rcx), %rax
    00000097: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1085:
    000000a0: 	addb	(%rax), %dl
    000000a2: 	addq	$0x15f8, %rax
    000000a8: 	cmpq	%rax, %rcx
    000000ab: 	jne	.Ltmp1085 # Offset: 171
    000000ad: 	addq	$0x6c788, %rcx
    000000b4: 	cmpq	%rsi, %rcx
    000000b7: 	jne	.Ltmp1086 # Offset: 183
    000000b9: 	addq	$0x4c, %rdi
    000000bd: 	addl	%edx, %r15d
    000000c0: 	cmpq	%r11, %rdi
    000000c3: 	jne	.Ltmp1087 # Offset: 195
    000000c5: 	addq	$0x1, %r10
    000000c9: 	leaq	0x1(%rdi), %r11
    000000cd: 	cmpq	$0x4c, %r10
    000000d1: 	jne	.Ltmp1088 # Offset: 209
    000000d3: 	cvttsd2si	init_value(%rip), %edx
    000000db: 	movl	$0xffffffd8, %eax
    000000e0: 	imull	%edx, %eax
    000000e3: 	cmpb	%al, %r15b
    000000e6: 	movb	%al, 0x18(%rsp)
    000000ea: 	je	.Ltmp1089 # Offset: 234
    000000f0: 	movl	$0x5, %edx
    000000f5: 	movq	%r14, %rsi
    000000f8: 	movq	%r12, %rdi
    000000fb: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 251
    00000100: 	movq	0x8(%rbp), %rdx
    00000104: 	movq	(%rbp), %rsi
    00000108: 	movq	%r12, %rdi
    0000010b: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 267
    00000110: 	movl	$0x12, %edx
    00000115: 	movq	%r13, %rsi
    00000118: 	movq	%rax, %rdi
    0000011b: 	movq	%rax, 0x10(%rsp)
    00000120: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 288
    00000125: 	movzbl	0x18(%rsp), %ecx
    0000012a: 	leaq	0x20(%rsp), %r9
    0000012f: 	movq	0x10(%rsp), %rdi
    00000134: 	movq	%r9, %rsi
    00000137: 	movl	$0x1, %edx
    0000013c: 	movq	%r9, 0x18(%rsp)
    00000141: 	movb	%cl, 0x20(%rsp)
    00000145: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 325
    0000014a: 	movl	$0x5, %edx
    0000014f: 	leaq	DATAat0x1519b(%rip), %rsi
    00000156: 	movq	%rax, %rdi
    00000159: 	movq	%rax, 0x10(%rsp)
    0000015e: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 350
    00000163: 	movq	0x10(%rsp), %rdi
    00000168: 	movq	0x18(%rsp), %rsi
    0000016d: 	movl	$0x1, %edx
    00000172: 	movb	%r15b, 0x20(%rsp)
    00000177: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 375
    0000017c: 	movq	%rax, %r15
    0000017f: 	movq	(%rax), %rax
    00000182: 	movq	-0x18(%rax), %rax
    00000186: 	movq	0xf0(%r15,%rax), %rdi
    0000018e: 	testq	%rdi, %rdi
    00000191: 	je	.Ltmp1090 # Offset: 401
    00000197: 	cmpb	$0x0, 0x38(%rdi)
    0000019b: 	je	.Ltmp1091 # Offset: 411
    000001a1: 	movsbl	0x43(%rdi), %esi
.Ltmp1099:
    000001a5: 	movq	%r15, %rdi
    000001a8: 	callq	_ZNSo3putEc@PLT # Offset: 424
    000001ad: 	movq	%rax, %rdi
    000001b0: 	callq	_ZNSo5flushEv@PLT # Offset: 432
    000001b5: 	movl	iterations(%rip), %r9d
.Ltmp1089:
    000001bc: 	addl	$0x1, %ebx
    000001bf: 	cmpl	%r9d, %ebx
    000001c2: 	jl	.Ltmp1092 # Offset: 450
.Ltmp1084:
    000001c8: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001d6: 	subq	$0x20, %rax
    000001da: 	cmpq	%rax, %rbx
    000001dd: 	je	.Ltmp1093 # Offset: 477
    000001e3: 	leaq	0x10(%rbx), %rdi
    000001e7: 	movq	0x8(%rbp), %r12
    000001eb: 	movq	%rdi, (%rbx)
    000001ee: 	movq	(%rbp), %r13
    000001f2: 	movq	%r13, %rax
    000001f5: 	addq	%r12, %rax
    000001f8: 	je	.Ltmp1094 # Offset: 504
    000001fa: 	testq	%r13, %r13
    000001fd: 	je	.Ltmp1095 # Offset: 509
.Ltmp1094:
    00000203: 	movq	%r12, 0x20(%rsp)
    00000208: 	cmpq	$0xf, %r12
    0000020c: 	ja	.Ltmp1096 # Offset: 524
    00000212: 	cmpq	$0x1, %r12
    00000216: 	jne	.Ltmp1097 # Offset: 534
    0000021c: 	movzbl	(%r13), %eax
    00000221: 	movb	%al, 0x10(%rbx)
.Ltmp1102:
    00000224: 	movq	%r12, 0x8(%rbx)
    00000228: 	movb	$0x0, (%rdi,%r12)
    0000022d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000234: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023b: 	addq	$0x20, %rax
    0000023f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000246: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000024d: 	jne	.Ltmp1098 # Offset: 589
.Ltmp1100:
    0000024f: 	movq	-0x8(%rdx), %rax
    00000253: 	addq	$0x200, %rax
    00000259: 	jmp	.Ltmp1098 # Offset: 601
.Ltmp1091:
    0000025b: 	movq	%rdi, 0x10(%rsp)
    00000260: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 608
    00000265: 	movq	0x10(%rsp), %rdi
    0000026a: 	movl	$0xa, %esi
    0000026f: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00000276: 	movq	(%rdi), %rax
    00000279: 	movq	0x30(%rax), %rax
    0000027d: 	cmpq	%rdx, %rax
    00000280: 	je	.Ltmp1099 # Offset: 640
    00000286: 	callq	*%rax # Offset: 646
    00000288: 	movsbl	%al, %esi
    0000028b: 	jmp	.Ltmp1099 # Offset: 651
.Ltmp1093:
    00000290: 	movq	%rbp, %rsi
    00000293: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000029a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 666
    0000029f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b4: 	je	.Ltmp1100 # Offset: 692
.Ltmp1098:
    000002b6: 	movq	-0x20(%rax), %rbp
    000002ba: 	callq	clock@PLT # Offset: 698
    000002bf: 	movq	%rax, end_time(%rip)
    000002c6: 	movq	0x28(%rsp), %rdx
    000002cb: 	subq	%fs:0x28, %rdx
    000002d4: 	jne	.Ltmp1101 # Offset: 724
    000002d6: 	subq	start_time(%rip), %rax
    000002dd: 	pxor	%xmm0, %xmm0
    000002e1: 	movq	%rbp, %rdi
    000002e4: 	cvtsi2sd	%rax, %xmm0
    000002e9: 	divsd	DATAat0x15758(%rip), %xmm0
    000002f1: 	addq	$0x38, %rsp
    000002f5: 	popq	%rbx
    000002f6: 	popq	%rbp
    000002f7: 	popq	%r12
    000002f9: 	popq	%r13
    000002fb: 	popq	%r14
    000002fd: 	popq	%r15
    000002ff: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 767
.Ltmp1096:
    00000304: 	movq	%rbx, %rdi
    00000307: 	leaq	0x20(%rsp), %rsi
    0000030c: 	xorl	%edx, %edx
    0000030e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 782
    00000313: 	movq	%rax, (%rbx)
    00000316: 	movq	%rax, %rdi
    00000319: 	movq	0x20(%rsp), %rax
    0000031e: 	movq	%rax, 0x10(%rbx)
.Ltmp1103:
    00000322: 	movq	%r12, %rdx
    00000325: 	movq	%r13, %rsi
    00000328: 	callq	memcpy@PLT # Offset: 808
    0000032d: 	movq	0x20(%rsp), %r12
    00000332: 	movq	(%rbx), %rdi
    00000335: 	jmp	.Ltmp1102 # Offset: 821
.Ltmp1097:
    0000033a: 	testq	%r12, %r12
    0000033d: 	je	.Ltmp1102 # Offset: 829
    00000343: 	jmp	.Ltmp1103 # Offset: 835
.Ltmp1101:
    00000345: 	callq	__stack_chk_fail@PLT # Offset: 837
.Ltmp1090:
    0000034a: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 842
.Ltmp1095:
    0000034f: 	leaq	DATAat0x15110(%rip), %rdi
    00000356: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 854
DWARF CFI Instructions:
    <empty>
End of Function "_Z17test_loop_4D_DCBAIhEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z17test_loop_4D_ABCDIdEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 94
  State       : disassembled
  Address     : 0xff10
  Size        : 0x39b
  MaxSize     : 0x3a0
  Offset      : 0xff10
  Section     : .text
  Orc Section : .local.text._Z17test_loop_4D_ABCDIdEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB093:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movq	%rsi, %rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x28(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movl	iterations(%rip), %r9d
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	testl	%r9d, %r9d
    0000003e: 	jle	.Ltmp1104 # Offset: 62
    00000044: 	leaq	0x363c40(%rbx), %rax
    0000004b: 	xorl	%r12d, %r12d
    0000004e: 	leaq	DATAat0x15182(%rip), %r15
    00000055: 	movq	%rax, 0x8(%rsp)
    0000005a: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r13
.Ltmp1111:
    00000061: 	movq	0x8(%rsp), %r10
    00000066: 	xorl	%r8d, %r8d
    00000069: 	pxor	%xmm2, %xmm2
.Ltmp1108:
    0000006d: 	leaq	(%rbx,%r8), %rdi
.Ltmp1107:
    00000071: 	leaq	0x260(%rdi), %rdx
    00000078: 	movq	%rdi, %rcx
    0000007b: 	pxor	%xmm0, %xmm0
    0000007f: 	leaq	0xb220(%rdi), %rsi
    00000086: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1106:
    00000090: 	movq	%rcx, %rax
    00000093: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1105:
    00000098: 	movsd	(%rax), %xmm1
    0000009c: 	addq	$0x10, %rax
    000000a0: 	addsd	%xmm0, %xmm1
    000000a4: 	movsd	-0x8(%rax), %xmm0
    000000a9: 	addsd	%xmm1, %xmm0
    000000ad: 	cmpq	%rdx, %rax
    000000b0: 	jne	.Ltmp1105 # Offset: 176
    000000b2: 	leaq	0x260(%rax), %rdx
    000000b9: 	addq	$0x260, %rcx
    000000c0: 	cmpq	%rdx, %rsi
    000000c3: 	jne	.Ltmp1106 # Offset: 195
    000000c5: 	addq	$0xafc0, %rdi
    000000cc: 	addsd	%xmm0, %xmm2
    000000d0: 	cmpq	%rdi, %r10
    000000d3: 	jne	.Ltmp1107 # Offset: 211
    000000d5: 	addq	$0x363c40, %r8
    000000dc: 	addq	$0x363c40, %r10
    000000e3: 	cmpq	$0xfe3a6c0, %r8
    000000ea: 	jne	.Ltmp1108 # Offset: 234
    000000ec: 	movsd	DATAat0x15780(%rip), %xmm1
    000000f4: 	movapd	%xmm2, %xmm3
    000000f8: 	movapd	%xmm2, %xmm0
    000000fc: 	andpd	DATAat0x15790(%rip), %xmm3
    00000104: 	mulsd	init_value(%rip), %xmm1
    0000010c: 	comisd	DATAat0x15770(%rip), %xmm3
    00000114: 	subsd	%xmm1, %xmm0
    00000118: 	jbe	.Ltmp1109 # Offset: 280
    0000011a: 	divsd	%xmm2, %xmm0
.Ltmp1109:
    0000011e: 	andpd	DATAat0x15790(%rip), %xmm0
    00000126: 	movsd	DATAat0x15778(%rip), %xmm4
    0000012e: 	comisd	%xmm0, %xmm4
    00000132: 	jbe	.Ltmp1110 # Offset: 306
.Ltmp1120:
    00000138: 	addl	$0x1, %r12d
    0000013c: 	cmpl	%r9d, %r12d
    0000013f: 	jl	.Ltmp1111 # Offset: 319
.Ltmp1104:
    00000145: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000014c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000153: 	subq	$0x20, %rax
    00000157: 	cmpq	%rax, %rbx
    0000015a: 	je	.Ltmp1112 # Offset: 346
    00000160: 	leaq	0x10(%rbx), %rdi
    00000164: 	movq	0x8(%rbp), %r12
    00000168: 	movq	%rdi, (%rbx)
    0000016b: 	movq	(%rbp), %r13
    0000016f: 	movq	%r13, %rax
    00000172: 	addq	%r12, %rax
    00000175: 	je	.Ltmp1113 # Offset: 373
    00000177: 	testq	%r13, %r13
    0000017a: 	je	.Ltmp1114 # Offset: 378
.Ltmp1113:
    00000180: 	movq	%r12, 0x20(%rsp)
    00000185: 	cmpq	$0xf, %r12
    00000189: 	ja	.Ltmp1115 # Offset: 393
    0000018f: 	cmpq	$0x1, %r12
    00000193: 	jne	.Ltmp1116 # Offset: 403
    00000199: 	movzbl	(%r13), %eax
    0000019e: 	movb	%al, 0x10(%rbx)
.Ltmp1124:
    000001a1: 	movq	%r12, 0x8(%rbx)
    000001a5: 	movb	$0x0, (%rdi,%r12)
    000001aa: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001b1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001b8: 	addq	$0x20, %rax
    000001bc: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001c3: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001ca: 	jne	.Ltmp1117 # Offset: 458
.Ltmp1122:
    000001d0: 	movq	-0x8(%rdx), %rax
    000001d4: 	addq	$0x200, %rax
    000001da: 	jmp	.Ltmp1117 # Offset: 474
.Ltmp1110:
    000001df: 	movl	$0x5, %edx
    000001e4: 	movq	%r15, %rsi
    000001e7: 	movq	%r13, %rdi
    000001ea: 	movsd	%xmm2, 0x10(%rsp)
    000001f0: 	movsd	%xmm1, 0x18(%rsp)
    000001f6: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 502
    000001fb: 	movq	0x8(%rbp), %rdx
    000001ff: 	movq	(%rbp), %rsi
    00000203: 	movq	%r13, %rdi
    00000206: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 518
    0000020b: 	movl	$0x12, %edx
    00000210: 	leaq	DATAat0x15188(%rip), %rsi
    00000217: 	movq	%rax, %rdi
    0000021a: 	movq	%rax, %r14
    0000021d: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 541
    00000222: 	movsd	0x18(%rsp), %xmm1
    00000228: 	movq	%r14, %rdi
    0000022b: 	movapd	%xmm1, %xmm0
    0000022f: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 559
    00000234: 	movl	$0x5, %edx
    00000239: 	leaq	DATAat0x1519b(%rip), %rsi
    00000240: 	movq	%rax, %rdi
    00000243: 	movq	%rax, %r14
    00000246: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 582
    0000024b: 	movsd	0x10(%rsp), %xmm2
    00000251: 	movq	%r14, %rdi
    00000254: 	movapd	%xmm2, %xmm0
    00000258: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 600
    0000025d: 	movq	%rax, %r14
    00000260: 	movq	(%rax), %rax
    00000263: 	movq	-0x18(%rax), %rax
    00000267: 	movq	0xf0(%r14,%rax), %rdi
    0000026f: 	testq	%rdi, %rdi
    00000272: 	je	.Ltmp1118 # Offset: 626
    00000278: 	cmpb	$0x0, 0x38(%rdi)
    0000027c: 	je	.Ltmp1119 # Offset: 636
    0000027e: 	movsbl	0x43(%rdi), %esi
.Ltmp1121:
    00000282: 	movq	%r14, %rdi
    00000285: 	callq	_ZNSo3putEc@PLT # Offset: 645
    0000028a: 	movq	%rax, %rdi
    0000028d: 	callq	_ZNSo5flushEv@PLT # Offset: 653
    00000292: 	movl	iterations(%rip), %r9d
    00000299: 	jmp	.Ltmp1120 # Offset: 665
.Ltmp1119:
    0000029e: 	movq	%rdi, 0x10(%rsp)
    000002a3: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 675
    000002a8: 	movq	0x10(%rsp), %rdi
    000002ad: 	movl	$0xa, %esi
    000002b2: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000002b9: 	movq	(%rdi), %rax
    000002bc: 	movq	0x30(%rax), %rax
    000002c0: 	cmpq	%rdx, %rax
    000002c3: 	je	.Ltmp1121 # Offset: 707
    000002c5: 	callq	*%rax # Offset: 709
    000002c7: 	movsbl	%al, %esi
    000002ca: 	jmp	.Ltmp1121 # Offset: 714
.Ltmp1112:
    000002cc: 	movq	%rbp, %rsi
    000002cf: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002d6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 726
    000002db: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002e2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002e9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002f0: 	je	.Ltmp1122 # Offset: 752
.Ltmp1117:
    000002f6: 	movq	-0x20(%rax), %rbp
    000002fa: 	callq	clock@PLT # Offset: 762
    000002ff: 	movq	%rax, end_time(%rip)
    00000306: 	movq	0x28(%rsp), %rdx
    0000030b: 	subq	%fs:0x28, %rdx
    00000314: 	jne	.Ltmp1123 # Offset: 788
    00000316: 	subq	start_time(%rip), %rax
    0000031d: 	pxor	%xmm0, %xmm0
    00000321: 	movq	%rbp, %rdi
    00000324: 	cvtsi2sd	%rax, %xmm0
    00000329: 	divsd	DATAat0x15758(%rip), %xmm0
    00000331: 	addq	$0x38, %rsp
    00000335: 	popq	%rbx
    00000336: 	popq	%rbp
    00000337: 	popq	%r12
    00000339: 	popq	%r13
    0000033b: 	popq	%r14
    0000033d: 	popq	%r15
    0000033f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 831
.Ltmp1115:
    00000344: 	movq	%rbx, %rdi
    00000347: 	leaq	0x20(%rsp), %rsi
    0000034c: 	xorl	%edx, %edx
    0000034e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 846
    00000353: 	movq	%rax, (%rbx)
    00000356: 	movq	%rax, %rdi
    00000359: 	movq	0x20(%rsp), %rax
    0000035e: 	movq	%rax, 0x10(%rbx)
.Ltmp1125:
    00000362: 	movq	%r12, %rdx
    00000365: 	movq	%r13, %rsi
    00000368: 	callq	memcpy@PLT # Offset: 872
    0000036d: 	movq	0x20(%rsp), %r12
    00000372: 	movq	(%rbx), %rdi
    00000375: 	jmp	.Ltmp1124 # Offset: 885
.Ltmp1116:
    0000037a: 	testq	%r12, %r12
    0000037d: 	je	.Ltmp1124 # Offset: 893
    00000383: 	jmp	.Ltmp1125 # Offset: 899
.Ltmp1123:
    00000385: 	callq	__stack_chk_fail@PLT # Offset: 901
.Ltmp1118:
    0000038a: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 906
.Ltmp1114:
    0000038f: 	leaq	DATAat0x15110(%rip), %rdi
    00000396: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 918
DWARF CFI Instructions:
    <empty>
End of Function "_Z17test_loop_4D_ABCDIdEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z17test_loop_4D_DCBAIdEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 95
  State       : disassembled
  Address     : 0x102b0
  Size        : 0x386
  MaxSize     : 0x390
  Offset      : 0x102b0
  Section     : .text
  Orc Section : .local.text._Z17test_loop_4D_DCBAIdEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB094:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rdi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rsi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x28(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movl	iterations(%rip), %edi
    00000033: 	movq	%rax, start_time(%rip)
    0000003a: 	testl	%edi, %edi
    0000003c: 	jle	.Ltmp1126 # Offset: 60
    00000042: 	xorl	%ebx, %ebx
    00000044: 	leaq	0xfe3a6c0(%r12), %rax
    0000004c: 	leaq	DATAat0x15182(%rip), %r15
    00000053: 	movq	%rax, 0x8(%rsp)
    00000058: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r12
    0000005f: 	leaq	DATAat0x15188(%rip), %r14
.Ltmp1133:
    00000066: 	movq	0x8(%rsp), %r9
    0000006b: 	xorl	%r8d, %r8d
    0000006e: 	pxor	%xmm1, %xmm1
.Ltmp1130:
    00000072: 	movq	%r9, %rsi
    00000075: 	xorl	%r10d, %r10d
.Ltmp1129:
    00000078: 	movq	%rsi, %rdx
    0000007b: 	pxor	%xmm0, %xmm0
    0000007f: 	leaq	0x363c40(%rsi), %rcx
    00000086: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1128:
    00000090: 	leaq	-0xfe3a6c0(%rdx), %rax
    00000097: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1127:
    000000a0: 	addsd	(%rax), %xmm0
    000000a4: 	addq	$0x363c40, %rax
    000000aa: 	cmpq	%rax, %rdx
    000000ad: 	jne	.Ltmp1127 # Offset: 173
    000000af: 	addq	$0xafc0, %rdx
    000000b6: 	cmpq	%rdx, %rcx
    000000b9: 	jne	.Ltmp1128 # Offset: 185
    000000bb: 	addq	$0x1, %r10
    000000bf: 	addsd	%xmm0, %xmm1
    000000c3: 	addq	$0x260, %rsi
    000000ca: 	cmpq	$0x4a, %r10
    000000ce: 	jne	.Ltmp1129 # Offset: 206
    000000d0: 	addq	$0x1, %r8
    000000d4: 	addq	$0x8, %r9
    000000d8: 	cmpq	$0x4c, %r8
    000000dc: 	jne	.Ltmp1130 # Offset: 220
    000000de: 	movsd	DATAat0x15780(%rip), %xmm2
    000000e6: 	movapd	%xmm1, %xmm3
    000000ea: 	movapd	%xmm1, %xmm0
    000000ee: 	andpd	DATAat0x15790(%rip), %xmm3
    000000f6: 	mulsd	init_value(%rip), %xmm2
    000000fe: 	comisd	DATAat0x15770(%rip), %xmm3
    00000106: 	subsd	%xmm2, %xmm0
    0000010a: 	jbe	.Ltmp1131 # Offset: 266
    0000010c: 	divsd	%xmm1, %xmm0
.Ltmp1131:
    00000110: 	andpd	DATAat0x15790(%rip), %xmm0
    00000118: 	movsd	DATAat0x15778(%rip), %xmm4
    00000120: 	comisd	%xmm0, %xmm4
    00000124: 	jbe	.Ltmp1132 # Offset: 292
.Ltmp1142:
    0000012a: 	addl	$0x1, %ebx
    0000012d: 	cmpl	%edi, %ebx
    0000012f: 	jl	.Ltmp1133 # Offset: 303
.Ltmp1126:
    00000135: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000013c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000143: 	subq	$0x20, %rax
    00000147: 	cmpq	%rax, %rbx
    0000014a: 	je	.Ltmp1134 # Offset: 330
    00000150: 	leaq	0x10(%rbx), %rdi
    00000154: 	movq	0x8(%rbp), %r12
    00000158: 	movq	%rdi, (%rbx)
    0000015b: 	movq	(%rbp), %r13
    0000015f: 	movq	%r13, %rax
    00000162: 	addq	%r12, %rax
    00000165: 	je	.Ltmp1135 # Offset: 357
    00000167: 	testq	%r13, %r13
    0000016a: 	je	.Ltmp1136 # Offset: 362
.Ltmp1135:
    00000170: 	movq	%r12, 0x20(%rsp)
    00000175: 	cmpq	$0xf, %r12
    00000179: 	ja	.Ltmp1137 # Offset: 377
    0000017f: 	cmpq	$0x1, %r12
    00000183: 	jne	.Ltmp1138 # Offset: 387
    00000189: 	movzbl	(%r13), %eax
    0000018e: 	movb	%al, 0x10(%rbx)
.Ltmp1146:
    00000191: 	movq	%r12, 0x8(%rbx)
    00000195: 	movb	$0x0, (%rdi,%r12)
    0000019a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001a1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001a8: 	addq	$0x20, %rax
    000001ac: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001b3: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001ba: 	jne	.Ltmp1139 # Offset: 442
.Ltmp1144:
    000001c0: 	movq	-0x8(%rdx), %rax
    000001c4: 	addq	$0x200, %rax
    000001ca: 	jmp	.Ltmp1139 # Offset: 458
.Ltmp1132:
    000001cf: 	movl	$0x5, %edx
    000001d4: 	movq	%r15, %rsi
    000001d7: 	movq	%r12, %rdi
    000001da: 	movsd	%xmm1, 0x10(%rsp)
    000001e0: 	movsd	%xmm2, 0x18(%rsp)
    000001e6: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 486
    000001eb: 	movq	0x8(%rbp), %rdx
    000001ef: 	movq	(%rbp), %rsi
    000001f3: 	movq	%r12, %rdi
    000001f6: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 502
    000001fb: 	movl	$0x12, %edx
    00000200: 	movq	%r14, %rsi
    00000203: 	movq	%rax, %rdi
    00000206: 	movq	%rax, %r13
    00000209: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 521
    0000020e: 	movsd	0x18(%rsp), %xmm2
    00000214: 	movq	%r13, %rdi
    00000217: 	movapd	%xmm2, %xmm0
    0000021b: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 539
    00000220: 	movl	$0x5, %edx
    00000225: 	leaq	DATAat0x1519b(%rip), %rsi
    0000022c: 	movq	%rax, %rdi
    0000022f: 	movq	%rax, %r13
    00000232: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 562
    00000237: 	movsd	0x10(%rsp), %xmm1
    0000023d: 	movq	%r13, %rdi
    00000240: 	movapd	%xmm1, %xmm0
    00000244: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 580
    00000249: 	movq	%rax, %r13
    0000024c: 	movq	(%rax), %rax
    0000024f: 	movq	-0x18(%rax), %rax
    00000253: 	movq	0xf0(%r13,%rax), %rdi
    0000025b: 	testq	%rdi, %rdi
    0000025e: 	je	.Ltmp1140 # Offset: 606
    00000264: 	cmpb	$0x0, 0x38(%rdi)
    00000268: 	je	.Ltmp1141 # Offset: 616
    0000026a: 	movsbl	0x43(%rdi), %esi
.Ltmp1143:
    0000026e: 	movq	%r13, %rdi
    00000271: 	callq	_ZNSo3putEc@PLT # Offset: 625
    00000276: 	movq	%rax, %rdi
    00000279: 	callq	_ZNSo5flushEv@PLT # Offset: 633
    0000027e: 	movl	iterations(%rip), %edi
    00000284: 	jmp	.Ltmp1142 # Offset: 644
.Ltmp1141:
    00000289: 	movq	%rdi, 0x10(%rsp)
    0000028e: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 654
    00000293: 	movq	0x10(%rsp), %rdi
    00000298: 	movl	$0xa, %esi
    0000029d: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000002a4: 	movq	(%rdi), %rax
    000002a7: 	movq	0x30(%rax), %rax
    000002ab: 	cmpq	%rdx, %rax
    000002ae: 	je	.Ltmp1143 # Offset: 686
    000002b0: 	callq	*%rax # Offset: 688
    000002b2: 	movsbl	%al, %esi
    000002b5: 	jmp	.Ltmp1143 # Offset: 693
.Ltmp1134:
    000002b7: 	movq	%rbp, %rsi
    000002ba: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002c1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 705
    000002c6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002cd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002d4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002db: 	je	.Ltmp1144 # Offset: 731
.Ltmp1139:
    000002e1: 	movq	-0x20(%rax), %rbp
    000002e5: 	callq	clock@PLT # Offset: 741
    000002ea: 	movq	%rax, end_time(%rip)
    000002f1: 	movq	0x28(%rsp), %rdx
    000002f6: 	subq	%fs:0x28, %rdx
    000002ff: 	jne	.Ltmp1145 # Offset: 767
    00000301: 	subq	start_time(%rip), %rax
    00000308: 	pxor	%xmm0, %xmm0
    0000030c: 	movq	%rbp, %rdi
    0000030f: 	cvtsi2sd	%rax, %xmm0
    00000314: 	divsd	DATAat0x15758(%rip), %xmm0
    0000031c: 	addq	$0x38, %rsp
    00000320: 	popq	%rbx
    00000321: 	popq	%rbp
    00000322: 	popq	%r12
    00000324: 	popq	%r13
    00000326: 	popq	%r14
    00000328: 	popq	%r15
    0000032a: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 810
.Ltmp1137:
    0000032f: 	movq	%rbx, %rdi
    00000332: 	leaq	0x20(%rsp), %rsi
    00000337: 	xorl	%edx, %edx
    00000339: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 825
    0000033e: 	movq	%rax, (%rbx)
    00000341: 	movq	%rax, %rdi
    00000344: 	movq	0x20(%rsp), %rax
    00000349: 	movq	%rax, 0x10(%rbx)
.Ltmp1147:
    0000034d: 	movq	%r12, %rdx
    00000350: 	movq	%r13, %rsi
    00000353: 	callq	memcpy@PLT # Offset: 851
    00000358: 	movq	0x20(%rsp), %r12
    0000035d: 	movq	(%rbx), %rdi
    00000360: 	jmp	.Ltmp1146 # Offset: 864
.Ltmp1138:
    00000365: 	testq	%r12, %r12
    00000368: 	je	.Ltmp1146 # Offset: 872
    0000036e: 	jmp	.Ltmp1147 # Offset: 878
.Ltmp1145:
    00000370: 	callq	__stack_chk_fail@PLT # Offset: 880
.Ltmp1140:
    00000375: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 885
.Ltmp1136:
    0000037a: 	leaq	DATAat0x15110(%rip), %rdi
    00000381: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 897
DWARF CFI Instructions:
    <empty>
End of Function "_Z17test_loop_4D_DCBAIdEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z29test_loop_2D_flat_chan_revCYXIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z29test_loop_2D_flat_chan_revCYXIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z29test_loop_2D_flat_chan_revCYXIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 96
  State       : disassembled
  Address     : 0x10640
  Size        : 0x3c5
  MaxSize     : 0x3d0
  Offset      : 0x10640
  Section     : .text
  Orc Section : .local.text._Z29test_loop_2D_flat_chan_revCYXIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB095:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	movq	%rdx, %rbp
    0000000c: 	pushq	%rbx
    0000000d: 	movl	%esi, %ebx
    0000000f: 	subq	$0x38, %rsp
    00000013: 	movq	%rdi, 0x8(%rsp)
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x28(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movl	iterations(%rip), %edi
    00000033: 	movq	%rax, start_time(%rip)
    0000003a: 	testl	%edi, %edi
    0000003c: 	jle	.Ltmp1148 # Offset: 60
    00000042: 	movslq	%ebx, %r14
    00000045: 	imulq	$0x3d0900, %r14, %rax
    0000004c: 	testq	%rax, %rax
    0000004f: 	js	.Ltmp1149 # Offset: 79
    00000055: 	pxor	%xmm5, %xmm5
    00000059: 	cvtsi2sd	%rax, %xmm5
    0000005e: 	movsd	%xmm5, (%rsp)
.Ltmp1169:
    00000063: 	xorl	%r12d, %r12d
    00000066: 	pxor	%xmm2, %xmm2
    0000006a: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r13
.Ltmp1156:
    00000071: 	movsd	(%rsp), %xmm3
    00000076: 	mulsd	init_value(%rip), %xmm3
    0000007e: 	testl	%ebx, %ebx
    00000080: 	jle	.Ltmp1150 # Offset: 128
    00000086: 	movq	0x8(%rsp), %rax
    0000008b: 	xorl	%esi, %esi
    0000008d: 	movapd	%xmm2, %xmm1
    00000091: 	leaq	0x7a19d00(%rax), %rcx
    00000098: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1153:
    000000a0: 	leaq	-0x7a12000(%rcx), %rdx
    000000a7: 	movapd	%xmm2, %xmm0
    000000ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1152:
    000000b0: 	leaq	-0x7d00(%rdx), %rax
    000000b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1151:
    000000c0: 	addsd	(%rax), %xmm0
    000000c4: 	addq	$0x20, %rax
    000000c8: 	cmpq	%rax, %rdx
    000000cb: 	jne	.Ltmp1151 # Offset: 203
    000000cd: 	addq	$0x7d00, %rdx
    000000d4: 	cmpq	%rdx, %rcx
    000000d7: 	jne	.Ltmp1152 # Offset: 215
    000000d9: 	addq	$0x1, %rsi
    000000dd: 	addsd	%xmm0, %xmm1
    000000e1: 	addq	$0x8, %rcx
    000000e5: 	cmpq	%rsi, %r14
    000000e8: 	jne	.Ltmp1153 # Offset: 232
    000000ea: 	movapd	%xmm1, %xmm4
    000000ee: 	andpd	DATAat0x15790(%rip), %xmm4
    000000f6: 	movapd	%xmm1, %xmm0
    000000fa: 	comisd	DATAat0x15770(%rip), %xmm4
    00000102: 	subsd	%xmm3, %xmm0
    00000106: 	jbe	.Ltmp1154 # Offset: 262
    00000108: 	divsd	%xmm1, %xmm0
.Ltmp1154:
    0000010c: 	andpd	DATAat0x15790(%rip), %xmm0
    00000114: 	movsd	DATAat0x15778(%rip), %xmm6
    0000011c: 	comisd	%xmm0, %xmm6
    00000120: 	jbe	.Ltmp1155 # Offset: 288
.Ltmp1166:
    00000126: 	addl	$0x1, %r12d
    0000012a: 	cmpl	%edi, %r12d
    0000012d: 	jl	.Ltmp1156 # Offset: 301
.Ltmp1148:
    00000133: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000013a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000141: 	subq	$0x20, %rax
    00000145: 	cmpq	%rax, %rbx
    00000148: 	je	.Ltmp1157 # Offset: 328
    0000014e: 	leaq	0x10(%rbx), %rdi
    00000152: 	movq	0x8(%rbp), %r12
    00000156: 	movq	%rdi, (%rbx)
    00000159: 	movq	(%rbp), %r13
    0000015d: 	movq	%r13, %rax
    00000160: 	addq	%r12, %rax
    00000163: 	je	.Ltmp1158 # Offset: 355
    00000165: 	testq	%r13, %r13
    00000168: 	je	.Ltmp1159 # Offset: 360
.Ltmp1158:
    0000016e: 	movq	%r12, 0x20(%rsp)
    00000173: 	cmpq	$0xf, %r12
    00000177: 	ja	.Ltmp1160 # Offset: 375
    0000017d: 	cmpq	$0x1, %r12
    00000181: 	jne	.Ltmp1161 # Offset: 385
    00000187: 	movzbl	(%r13), %eax
    0000018c: 	movb	%al, 0x10(%rbx)
.Ltmp1170:
    0000018f: 	movq	%r12, 0x8(%rbx)
    00000193: 	movb	$0x0, (%rdi,%r12)
    00000198: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000019f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001a6: 	addq	$0x20, %rax
    000001aa: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001b1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001b8: 	je	.Ltmp1162 # Offset: 440
.Ltmp1168:
    000001be: 	movq	-0x20(%rax), %rbp
    000001c2: 	callq	clock@PLT # Offset: 450
    000001c7: 	movq	%rax, end_time(%rip)
    000001ce: 	movq	0x28(%rsp), %rdx
    000001d3: 	subq	%fs:0x28, %rdx
    000001dc: 	jne	.Ltmp1163 # Offset: 476
    000001e2: 	subq	start_time(%rip), %rax
    000001e9: 	pxor	%xmm0, %xmm0
    000001ed: 	movq	%rbp, %rdi
    000001f0: 	cvtsi2sd	%rax, %xmm0
    000001f5: 	divsd	DATAat0x15758(%rip), %xmm0
    000001fd: 	addq	$0x38, %rsp
    00000201: 	popq	%rbx
    00000202: 	popq	%rbp
    00000203: 	popq	%r12
    00000205: 	popq	%r13
    00000207: 	popq	%r14
    00000209: 	popq	%r15
    0000020b: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 523
.Ltmp1155:
    00000210: 	movl	$0x5, %edx
    00000215: 	leaq	DATAat0x15182(%rip), %rsi
    0000021c: 	movq	%r13, %rdi
    0000021f: 	movsd	%xmm1, 0x10(%rsp)
    00000225: 	movsd	%xmm3, 0x18(%rsp)
    0000022b: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 555
    00000230: 	movq	0x8(%rbp), %rdx
    00000234: 	movq	(%rbp), %rsi
    00000238: 	movq	%r13, %rdi
    0000023b: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 571
    00000240: 	movl	$0x12, %edx
    00000245: 	leaq	DATAat0x15188(%rip), %rsi
    0000024c: 	movq	%rax, %rdi
    0000024f: 	movq	%rax, %r15
    00000252: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 594
    00000257: 	movsd	0x18(%rsp), %xmm3
    0000025d: 	movq	%r15, %rdi
    00000260: 	movapd	%xmm3, %xmm0
    00000264: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 612
    00000269: 	movl	$0x5, %edx
    0000026e: 	leaq	DATAat0x1519b(%rip), %rsi
    00000275: 	movq	%rax, %rdi
    00000278: 	movq	%rax, %r15
    0000027b: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 635
    00000280: 	movsd	0x10(%rsp), %xmm1
    00000286: 	movq	%r15, %rdi
    00000289: 	movapd	%xmm1, %xmm0
    0000028d: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 653
    00000292: 	movq	%rax, %r15
    00000295: 	movq	(%rax), %rax
    00000298: 	movq	-0x18(%rax), %rax
    0000029c: 	movq	0xf0(%r15,%rax), %rdi
    000002a4: 	testq	%rdi, %rdi
    000002a7: 	je	.Ltmp1164 # Offset: 679
    000002ad: 	cmpb	$0x0, 0x38(%rdi)
    000002b1: 	je	.Ltmp1165 # Offset: 689
    000002b3: 	movsbl	0x43(%rdi), %esi
.Ltmp1167:
    000002b7: 	movq	%r15, %rdi
    000002ba: 	callq	_ZNSo3putEc@PLT # Offset: 698
    000002bf: 	movq	%rax, %rdi
    000002c2: 	callq	_ZNSo5flushEv@PLT # Offset: 706
    000002c7: 	movl	iterations(%rip), %edi
    000002cd: 	pxor	%xmm2, %xmm2
    000002d1: 	jmp	.Ltmp1166 # Offset: 721
.Ltmp1165:
    000002d6: 	movq	%rdi, 0x10(%rsp)
    000002db: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 731
    000002e0: 	movq	0x10(%rsp), %rdi
    000002e5: 	movl	$0xa, %esi
    000002ea: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000002f1: 	movq	(%rdi), %rax
    000002f4: 	movq	0x30(%rax), %rax
    000002f8: 	cmpq	%rdx, %rax
    000002fb: 	je	.Ltmp1167 # Offset: 763
    000002fd: 	callq	*%rax # Offset: 765
    000002ff: 	movsbl	%al, %esi
    00000302: 	jmp	.Ltmp1167 # Offset: 770
.Ltmp1150:
    00000304: 	movapd	%xmm2, %xmm0
    00000308: 	movapd	%xmm2, %xmm1
    0000030c: 	subsd	%xmm3, %xmm0
    00000310: 	jmp	.Ltmp1154 # Offset: 784
.Ltmp1157:
    00000315: 	movq	%rbp, %rsi
    00000318: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000031f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 799
    00000324: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000032b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000332: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000339: 	jne	.Ltmp1168 # Offset: 825
.Ltmp1162:
    0000033f: 	movq	-0x8(%rdx), %rax
    00000343: 	addq	$0x200, %rax
    00000349: 	jmp	.Ltmp1168 # Offset: 841
.Ltmp1149:
    0000034e: 	shrq	%rax
    00000351: 	pxor	%xmm0, %xmm0
    00000355: 	cvtsi2sd	%rax, %xmm0
    0000035a: 	addsd	%xmm0, %xmm0
    0000035e: 	movsd	%xmm0, (%rsp)
    00000363: 	jmp	.Ltmp1169 # Offset: 867
.Ltmp1161:
    00000368: 	testq	%r12, %r12
    0000036b: 	je	.Ltmp1170 # Offset: 875
    00000371: 	jmp	.Ltmp1171 # Offset: 881
    00000373: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1160:
    00000378: 	movq	%rbx, %rdi
    0000037b: 	leaq	0x20(%rsp), %rsi
    00000380: 	xorl	%edx, %edx
    00000382: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 898
    00000387: 	movq	%rax, (%rbx)
    0000038a: 	movq	%rax, %rdi
    0000038d: 	movq	0x20(%rsp), %rax
    00000392: 	movq	%rax, 0x10(%rbx)
.Ltmp1171:
    00000396: 	movq	%r12, %rdx
    00000399: 	movq	%r13, %rsi
    0000039c: 	callq	memcpy@PLT # Offset: 924
    000003a1: 	movq	0x20(%rsp), %r12
    000003a6: 	movq	(%rbx), %rdi
    000003a9: 	jmp	.Ltmp1170 # Offset: 937
.Ltmp1163:
    000003ae: 	callq	__stack_chk_fail@PLT # Offset: 942
.Ltmp1159:
    000003b3: 	leaq	DATAat0x15110(%rip), %rdi
    000003ba: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 954
    000003bf: 	nop # Size: 1
.Ltmp1164:
    000003c0: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 960
DWARF CFI Instructions:
    <empty>
End of Function "_Z29test_loop_2D_flat_chan_revCYXIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z18test_loop_4D_ABCD2IhEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 97
  State       : disassembled
  Address     : 0x10a10
  Size        : 0x3ac
  MaxSize     : 0x3b0
  Offset      : 0x10a10
  Section     : .text
  Orc Section : .local.text._Z18test_loop_4D_ABCD2IhEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB096:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r13
    00000011: 	pushq	%r12
    00000013: 	xorl	%r12d, %r12d
    00000016: 	pushq	%rbp
    00000017: 	movq	%rsi, %rbp
    0000001a: 	pushq	%rbx
    0000001b: 	movq	%rdi, %rbx
    0000001e: 	subq	$0x38, %rsp
    00000022: 	movq	%fs:0x28, %rax
    0000002b: 	movq	%rax, 0x28(%rsp)
    00000030: 	xorl	%eax, %eax
    00000032: 	callq	clock@PLT # Offset: 50
    00000037: 	movl	iterations(%rip), %r11d
    0000003e: 	movq	%rax, start_time(%rip)
    00000045: 	leaq	0x15f8(%rbx), %rax
    0000004c: 	movq	%rax, (%rsp)
    00000050: 	leaq	0x48(%rbx), %rax
    00000054: 	movq	%rax, 0x8(%rsp)
    00000059: 	testl	%r11d, %r11d
    0000005c: 	jle	.Ltmp1172 # Offset: 92
.Ltmp1179:
    00000062: 	xorl	%r8d, %r8d
    00000065: 	pxor	%xmm3, %xmm3
    00000069: 	pxor	%xmm2, %xmm2
    0000006d: 	xorl	%r14d, %r14d
.Ltmp1175:
    00000070: 	movq	(%rsp), %rax
    00000074: 	leaq	0x6c788(%r8), %r9
    0000007b: 	leaq	(%rax,%r8), %rdi
.Ltmp1174:
    0000007f: 	movq	0x8(%rsp), %rax
    00000084: 	leaq	(%rbx,%r8), %rdx
    00000088: 	xorl	%esi, %esi
    0000008a: 	leaq	(%rax,%r8), %rcx
    0000008e: 	nop # Size: 2
.Ltmp1173:
    00000090: 	movdqu	(%rdx), %xmm0
    00000094: 	movdqu	0x10(%rdx), %xmm5
    00000099: 	addq	$0x4c, %rdx
    0000009d: 	addq	$0x4c, %rcx
    000000a1: 	movdqu	-0x1c(%rdx), %xmm1
    000000a6: 	movdqu	-0x2c(%rdx), %xmm6
    000000ab: 	paddb	%xmm5, %xmm0
    000000af: 	paddb	%xmm6, %xmm1
    000000b3: 	paddb	%xmm1, %xmm0
    000000b7: 	movdqa	%xmm0, %xmm1
    000000bb: 	psrldq	$0x8, %xmm1
    000000c0: 	paddb	%xmm1, %xmm0
    000000c4: 	psadbw	%xmm3, %xmm0
    000000c8: 	movd	%xmm0, %r15d
    000000cd: 	movq	-0xc(%rdx), %xmm0
    000000d2: 	movdqa	%xmm0, %xmm4
    000000d6: 	psadbw	%xmm2, %xmm4
    000000da: 	movq	%xmm4, %r10
    000000df: 	movq	%xmm4, 0x18(%rsp)
    000000e5: 	movl	%r10d, %eax
    000000e8: 	addl	%r15d, %eax
    000000eb: 	addb	-0x4c(%rcx), %al
    000000ee: 	addb	-0x4b(%rcx), %al
    000000f1: 	addb	-0x4a(%rcx), %al
    000000f4: 	addb	-0x49(%rcx), %al
    000000f7: 	addl	%eax, %esi
    000000f9: 	cmpq	%rdi, %rdx
    000000fc: 	jne	.Ltmp1173 # Offset: 252
    000000fe: 	addq	$0x15f8, %r8
    00000105: 	addl	%esi, %r14d
    00000108: 	leaq	0x15f8(%rdx), %rdi
    0000010f: 	cmpq	%r9, %r8
    00000112: 	jne	.Ltmp1174 # Offset: 274
    00000118: 	cmpq	$0x1fc74d8, %r8
    0000011f: 	jne	.Ltmp1175 # Offset: 287
    00000125: 	cvttsd2si	init_value(%rip), %edx
    0000012d: 	movl	$0xffffffd8, %eax
    00000132: 	imull	%edx, %eax
    00000135: 	cmpb	%al, %r14b
    00000138: 	movb	%al, 0x10(%rsp)
    0000013c: 	je	.Ltmp1176 # Offset: 316
    00000142: 	movl	$0x5, %edx
    00000147: 	leaq	DATAat0x15182(%rip), %rsi
    0000014e: 	movq	%r13, %rdi
    00000151: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 337
    00000156: 	movq	0x8(%rbp), %rdx
    0000015a: 	movq	(%rbp), %rsi
    0000015e: 	movq	%r13, %rdi
    00000161: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 353
    00000166: 	movl	$0x12, %edx
    0000016b: 	leaq	DATAat0x15188(%rip), %rsi
    00000172: 	movq	%rax, %rdi
    00000175: 	movq	%rax, %r15
    00000178: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 376
    0000017d: 	movzbl	0x10(%rsp), %ecx
    00000182: 	leaq	0x20(%rsp), %r8
    00000187: 	movq	%r15, %rdi
    0000018a: 	movq	%r8, %rsi
    0000018d: 	movl	$0x1, %edx
    00000192: 	movq	%r8, 0x10(%rsp)
    00000197: 	movb	%cl, 0x20(%rsp)
    0000019b: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 411
    000001a0: 	movl	$0x5, %edx
    000001a5: 	leaq	DATAat0x1519b(%rip), %rsi
    000001ac: 	movq	%rax, %rdi
    000001af: 	movq	%rax, %r15
    000001b2: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 434
    000001b7: 	movq	0x10(%rsp), %rsi
    000001bc: 	movq	%r15, %rdi
    000001bf: 	movl	$0x1, %edx
    000001c4: 	movb	%r14b, 0x20(%rsp)
    000001c9: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 457
    000001ce: 	movq	%rax, %r15
    000001d1: 	movq	(%rax), %rax
    000001d4: 	movq	-0x18(%rax), %rax
    000001d8: 	movq	0xf0(%r15,%rax), %r14
    000001e0: 	testq	%r14, %r14
    000001e3: 	je	.Ltmp1177 # Offset: 483
    000001e9: 	cmpb	$0x0, 0x38(%r14)
    000001ee: 	je	.Ltmp1178 # Offset: 494
    000001f4: 	movsbl	0x43(%r14), %esi
.Ltmp1186:
    000001f9: 	movq	%r15, %rdi
    000001fc: 	callq	_ZNSo3putEc@PLT # Offset: 508
    00000201: 	movq	%rax, %rdi
    00000204: 	callq	_ZNSo5flushEv@PLT # Offset: 516
    00000209: 	movl	iterations(%rip), %r11d
.Ltmp1176:
    00000210: 	addl	$0x1, %r12d
    00000214: 	cmpl	%r11d, %r12d
    00000217: 	jl	.Ltmp1179 # Offset: 535
.Ltmp1172:
    0000021d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000224: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000022b: 	subq	$0x20, %rax
    0000022f: 	cmpq	%rax, %rbx
    00000232: 	je	.Ltmp1180 # Offset: 562
    00000238: 	leaq	0x10(%rbx), %rdi
    0000023c: 	movq	0x8(%rbp), %r12
    00000240: 	movq	%rdi, (%rbx)
    00000243: 	movq	(%rbp), %r13
    00000247: 	movq	%r13, %rax
    0000024a: 	addq	%r12, %rax
    0000024d: 	je	.Ltmp1181 # Offset: 589
    0000024f: 	testq	%r13, %r13
    00000252: 	je	.Ltmp1182 # Offset: 594
.Ltmp1181:
    00000258: 	movq	%r12, 0x20(%rsp)
    0000025d: 	cmpq	$0xf, %r12
    00000261: 	ja	.Ltmp1183 # Offset: 609
    00000267: 	cmpq	$0x1, %r12
    0000026b: 	jne	.Ltmp1184 # Offset: 619
    00000271: 	movzbl	(%r13), %eax
    00000276: 	movb	%al, 0x10(%rbx)
.Ltmp1189:
    00000279: 	movq	%r12, 0x8(%rbx)
    0000027d: 	movb	$0x0, (%rdi,%r12)
    00000282: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000289: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000290: 	addq	$0x20, %rax
    00000294: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000029b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002a2: 	jne	.Ltmp1185 # Offset: 674
.Ltmp1187:
    000002a4: 	movq	-0x8(%rdx), %rax
    000002a8: 	addq	$0x200, %rax
    000002ae: 	jmp	.Ltmp1185 # Offset: 686
.Ltmp1178:
    000002b0: 	movq	%r14, %rdi
    000002b3: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 691
    000002b8: 	movq	(%r14), %rax
    000002bb: 	movl	$0xa, %esi
    000002c0: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000002c7: 	movq	0x30(%rax), %rax
    000002cb: 	cmpq	%rdx, %rax
    000002ce: 	je	.Ltmp1186 # Offset: 718
    000002d4: 	movq	%r14, %rdi
    000002d7: 	callq	*%rax # Offset: 727
    000002d9: 	movsbl	%al, %esi
    000002dc: 	jmp	.Ltmp1186 # Offset: 732
.Ltmp1180:
    000002e1: 	movq	%rbp, %rsi
    000002e4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002eb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 747
    000002f0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002f7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002fe: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000305: 	je	.Ltmp1187 # Offset: 773
.Ltmp1185:
    00000307: 	movq	-0x20(%rax), %rbp
    0000030b: 	callq	clock@PLT # Offset: 779
    00000310: 	movq	%rax, end_time(%rip)
    00000317: 	movq	0x28(%rsp), %rdx
    0000031c: 	subq	%fs:0x28, %rdx
    00000325: 	jne	.Ltmp1188 # Offset: 805
    00000327: 	subq	start_time(%rip), %rax
    0000032e: 	pxor	%xmm0, %xmm0
    00000332: 	movq	%rbp, %rdi
    00000335: 	cvtsi2sd	%rax, %xmm0
    0000033a: 	divsd	DATAat0x15758(%rip), %xmm0
    00000342: 	addq	$0x38, %rsp
    00000346: 	popq	%rbx
    00000347: 	popq	%rbp
    00000348: 	popq	%r12
    0000034a: 	popq	%r13
    0000034c: 	popq	%r14
    0000034e: 	popq	%r15
    00000350: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 848
.Ltmp1183:
    00000355: 	movq	%rbx, %rdi
    00000358: 	leaq	0x20(%rsp), %rsi
    0000035d: 	xorl	%edx, %edx
    0000035f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 863
    00000364: 	movq	%rax, (%rbx)
    00000367: 	movq	%rax, %rdi
    0000036a: 	movq	0x20(%rsp), %rax
    0000036f: 	movq	%rax, 0x10(%rbx)
.Ltmp1190:
    00000373: 	movq	%r12, %rdx
    00000376: 	movq	%r13, %rsi
    00000379: 	callq	memcpy@PLT # Offset: 889
    0000037e: 	movq	0x20(%rsp), %r12
    00000383: 	movq	(%rbx), %rdi
    00000386: 	jmp	.Ltmp1189 # Offset: 902
.Ltmp1184:
    0000038b: 	testq	%r12, %r12
    0000038e: 	je	.Ltmp1189 # Offset: 910
    00000394: 	jmp	.Ltmp1190 # Offset: 916
.Ltmp1188:
    00000396: 	callq	__stack_chk_fail@PLT # Offset: 918
.Ltmp1177:
    0000039b: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 923
.Ltmp1182:
    000003a0: 	leaq	DATAat0x15110(%rip), %rdi
    000003a7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 935
DWARF CFI Instructions:
    <empty>
End of Function "_Z18test_loop_4D_ABCD2IhEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeIhEvv" after disassembly {
  Number      : 98
  State       : disassembled
  Address     : 0x10dc0
  Size        : 0x1f0c
  MaxSize     : 0x1f10
  Offset      : 0x10dc0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIhEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB097:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	leaq	DATAat0x15739(%rip), %rsi
    0000000d: 	pushq	%r14
    0000000f: 	pushq	%r13
    00000011: 	pushq	%r12
    00000013: 	pushq	%rbp
    00000014: 	pushq	%rbx
    00000015: 	subq	$0x158, %rsp
    0000001c: 	movq	%fs:0x28, %rax
    00000025: 	movq	%rax, 0x148(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	leaq	0x60(%rsp), %r12
    00000034: 	movq	%r12, %rdi
    00000037: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 55
    0000003c: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    00000044: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm6
    0000004c: 	movq	"_ZL7gLabels/1"+72(%rip), %rcx
    00000053: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000005a: 	movhlps	%xmm4, %xmm5
    0000005d: 	movaps	%xmm6, 0x10(%rsp)
    00000062: 	movq	%xmm6, %rbx
    00000067: 	movq	"_ZL7gLabels/1"+56(%rip), %r15
    0000006e: 	movq	%xmm5, %r8
    00000073: 	movaps	%xmm4, 0x20(%rsp)
    00000078: 	leaq	0x8(%r8), %r13
    0000007c: 	movq	%xmm4, 0x8(%rsp)
    00000082: 	cmpq	%r13, %rcx
    00000085: 	jbe	.Ltmp1191 # Offset: 133
    00000087: 	movq	%r12, 0x40(%rsp)
    0000008c: 	movq	%r13, %rdx
    0000008f: 	movq	%r15, 0x30(%rsp)
    00000094: 	movq	%rdx, %rbx
    00000097: 	movq	%r13, %r15
    0000009a: 	movq	%rcx, %r13
    0000009d: 	movq	%xmm6, 0x38(%rsp)
.Ltmp1194:
    000000a3: 	movq	(%rbx), %rbp
    000000a6: 	leaq	0x200(%rbp), %r12
.Ltmp1193:
    000000ad: 	movq	(%rbp), %rdi
    000000b1: 	leaq	0x10(%rbp), %rax
    000000b5: 	cmpq	%rax, %rdi
    000000b8: 	je	.Ltmp1192 # Offset: 184
    000000be: 	movq	0x10(%rbp), %rax
    000000c2: 	addq	$0x20, %rbp
    000000c6: 	movq	%r8, 0x48(%rsp)
    000000cb: 	leaq	0x1(%rax), %rsi
    000000cf: 	callq	_ZdlPvm@PLT # Offset: 207
    000000d4: 	cmpq	%rbp, %r12
    000000d7: 	movq	0x48(%rsp), %r8
    000000dc: 	jne	.Ltmp1193 # Offset: 220
    000000de: 	addq	$0x8, %rbx
    000000e2: 	cmpq	%rbx, %r13
    000000e5: 	ja	.Ltmp1194 # Offset: 229
.Ltmp1209:
    000000e7: 	movq	%r13, %rcx
    000000ea: 	movq	0x38(%rsp), %rbx
    000000ef: 	movq	%r15, %r13
    000000f2: 	movq	0x40(%rsp), %r12
    000000f7: 	movq	0x30(%rsp), %r15
.Ltmp1191:
    000000fc: 	cmpq	%r8, %rcx
    000000ff: 	jne	.Ltmp1195 # Offset: 255
    00000101: 	jmp	.Ltmp1196 # Offset: 257
    00000106: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1198:
    00000110: 	movq	0x10(%rbx), %rax
    00000114: 	addq	$0x20, %rbx
    00000118: 	leaq	0x1(%rax), %rsi
    0000011c: 	callq	_ZdlPvm@PLT # Offset: 284
.Ltmp1195:
    00000121: 	cmpq	%rbx, 0x8(%rsp)
    00000126: 	je	.Ltmp1197 # Offset: 294
.Ltmp1199:
    00000128: 	movq	(%rbx), %rdi
    0000012b: 	leaq	0x10(%rbx), %rax
    0000012f: 	cmpq	%rax, %rdi
    00000132: 	jne	.Ltmp1198 # Offset: 306
    00000134: 	addq	$0x20, %rbx
    00000138: 	cmpq	0x8(%rsp), %rbx
    0000013d: 	jne	.Ltmp1199 # Offset: 317
    0000013f: 	cmpq	%r15, %r14
    00000142: 	je	.Ltmp1200 # Offset: 322
.Ltmp1202:
    00000144: 	movq	(%r15), %rdi
    00000147: 	leaq	0x10(%r15), %rax
    0000014b: 	cmpq	%rax, %rdi
    0000014e: 	je	.Ltmp1201 # Offset: 334
    00000150: 	movq	0x10(%r15), %rax
    00000154: 	leaq	0x1(%rax), %rsi
    00000158: 	callq	_ZdlPvm@PLT # Offset: 344
.Ltmp1201:
    0000015d: 	addq	$0x20, %r15
.Ltmp1197:
    00000161: 	cmpq	%r15, %r14
    00000164: 	jne	.Ltmp1202 # Offset: 356
.Ltmp1200:
    00000166: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    0000016d: 	leaq	0x8(%rax), %rbx
    00000171: 	cmpq	%r13, %rbx
    00000174: 	jbe	.Ltmp1203 # Offset: 372
.Ltmp1204:
    00000176: 	movq	(%r13), %rdi
    0000017a: 	movl	$0x200, %esi
    0000017f: 	addq	$0x8, %r13
    00000183: 	callq	_ZdlPvm@PLT # Offset: 387
    00000188: 	cmpq	%r13, %rbx
    0000018b: 	ja	.Ltmp1204 # Offset: 395
.Ltmp1203:
    0000018d: 	movdqa	0x10(%rsp), %xmm5
    00000193: 	movdqa	0x20(%rsp), %xmm6
    00000199: 	movl	$0xf42400, %edi
    0000019e: 	movaps	%xmm5, "_ZL7gLabels/1"+48(%rip)
    000001a5: 	movaps	%xmm6, "_ZL7gLabels/1"+64(%rip)
    000001ac: 	callq	_Znam@PLT # Offset: 428
    000001b1: 	cvttsd2si	init_value(%rip), %esi
    000001b9: 	movl	$0xf42400, %edx
    000001be: 	movq	%rax, %rdi
    000001c1: 	movq	%rax, %r13
    000001c4: 	leaq	0x120(%rsp), %rbp
    000001cc: 	movzbl	%sil, %esi
    000001d0: 	callq	memset@PLT # Offset: 464
    000001d5: 	leaq	DATAat0x151f0(%rip), %rdx
    000001dc: 	movq	%r12, %rsi
    000001df: 	movq	%rbp, %rdi
    000001e2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 482
    000001e7: 	callq	clock@PLT # Offset: 487
    000001ec: 	movl	iterations(%rip), %ecx
    000001f2: 	xorl	%ebx, %ebx
    000001f4: 	leaq	0xf42400(%r13), %r15
    000001fb: 	movq	%rax, start_time(%rip)
    00000202: 	testl	%ecx, %ecx
    00000204: 	jle	.Ltmp1205 # Offset: 516
.Ltmp1213:
    0000020a: 	movq	%r13, %rax
    0000020d: 	xorl	%edx, %edx
    0000020f: 	pxor	%xmm1, %xmm1
.Ltmp1208:
    00000213: 	pxor	%xmm0, %xmm0
    00000217: 	leaq	0xfa0(%rax), %rsi
.Ltmp1206:
    0000021e: 	movdqu	(%rax), %xmm5
    00000222: 	addq	$0x10, %rax
    00000226: 	paddb	%xmm5, %xmm0
    0000022a: 	cmpq	%rax, %rsi
    0000022d: 	jne	.Ltmp1206 # Offset: 557
    0000022f: 	movdqa	%xmm0, %xmm2
    00000233: 	psrldq	$0x8, %xmm2
    00000238: 	paddb	%xmm2, %xmm0
    0000023c: 	psadbw	%xmm1, %xmm0
    00000240: 	movd	%xmm0, %eax
    00000244: 	addl	%eax, %edx
    00000246: 	cmpq	%r15, %rsi
    00000249: 	je	.Ltmp1207 # Offset: 585
    0000024b: 	movq	%rsi, %rax
    0000024e: 	jmp	.Ltmp1208 # Offset: 590
.Ltmp1192:
    00000250: 	addq	$0x20, %rbp
    00000254: 	cmpq	%r12, %rbp
    00000257: 	jne	.Ltmp1193 # Offset: 599
    0000025d: 	addq	$0x8, %rbx
    00000261: 	cmpq	%rbx, %r13
    00000264: 	ja	.Ltmp1194 # Offset: 612
    0000026a: 	jmp	.Ltmp1209 # Offset: 618
.Ltmp1210:
    0000026f: 	addq	$0x20, %rbx
.Ltmp1196:
    00000273: 	cmpq	%rbx, %r14
    00000276: 	je	.Ltmp1200 # Offset: 630
.Ltmp1211:
    0000027c: 	movq	(%rbx), %rdi
    0000027f: 	leaq	0x10(%rbx), %rax
    00000283: 	cmpq	%rax, %rdi
    00000286: 	je	.Ltmp1210 # Offset: 646
    00000288: 	movq	0x10(%rbx), %rax
    0000028c: 	addq	$0x20, %rbx
    00000290: 	leaq	0x1(%rax), %rsi
    00000294: 	callq	_ZdlPvm@PLT # Offset: 660
    00000299: 	cmpq	%rbx, %r14
    0000029c: 	jne	.Ltmp1211 # Offset: 668
    0000029e: 	jmp	.Ltmp1200 # Offset: 670
    000002a3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1207:
    000002a8: 	testb	%dl, %dl
    000002aa: 	jne	.Ltmp1212 # Offset: 682
.Ltmp1242:
    000002b0: 	addl	$0x1, %ebx
    000002b3: 	cmpl	%ecx, %ebx
    000002b5: 	jl	.Ltmp1213 # Offset: 693
.Ltmp1205:
    000002bb: 	movq	%rbp, %rdi
    000002be: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 702
    000002c3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002ca: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000002d1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002d8: 	je	.Ltmp1214 # Offset: 728
.Ltmp1328:
    000002de: 	movq	-0x20(%rax), %r14
    000002e2: 	callq	clock@PLT # Offset: 738
    000002e7: 	pxor	%xmm0, %xmm0
    000002eb: 	movq	%rax, end_time(%rip)
    000002f2: 	movq	%r14, %rdi
    000002f5: 	subq	start_time(%rip), %rax
    000002fc: 	cvtsi2sd	%rax, %xmm0
    00000301: 	divsd	DATAat0x15758(%rip), %xmm0
    00000309: 	callq	_Z13record_resultdPKc # Offset: 777
    0000030e: 	movq	0x120(%rsp), %rdi
    00000316: 	leaq	0x130(%rsp), %rbx
    0000031e: 	cmpq	%rbx, %rdi
    00000321: 	je	.Ltmp1215 # Offset: 801
    00000323: 	movq	0x130(%rsp), %rax
    0000032b: 	leaq	0x1(%rax), %rsi
    0000032f: 	callq	_ZdlPvm@PLT # Offset: 815
.Ltmp1215:
    00000334: 	leaq	DATAat0x1520d(%rip), %rdx
    0000033b: 	movq	%r12, %rsi
    0000033e: 	movq	%rbp, %rdi
    00000341: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 833
    00000346: 	callq	clock@PLT # Offset: 838
    0000034b: 	movl	iterations(%rip), %ecx
    00000351: 	xorl	%r14d, %r14d
    00000354: 	leaq	0xf42400(%r13), %r15
    0000035b: 	movq	%rax, start_time(%rip)
    00000362: 	testl	%ecx, %ecx
    00000364: 	jle	.Ltmp1216 # Offset: 868
.Ltmp1221:
    00000366: 	movq	%r13, %rax
    00000369: 	xorl	%edx, %edx
    0000036b: 	pxor	%xmm1, %xmm1
.Ltmp1219:
    0000036f: 	pxor	%xmm0, %xmm0
    00000373: 	leaq	0xfa0(%rax), %rsi
.Ltmp1217:
    0000037a: 	movdqu	(%rax), %xmm6
    0000037e: 	addq	$0x10, %rax
    00000382: 	paddb	%xmm6, %xmm0
    00000386: 	cmpq	%rax, %rsi
    00000389: 	jne	.Ltmp1217 # Offset: 905
    0000038b: 	movdqa	%xmm0, %xmm2
    0000038f: 	psrldq	$0x8, %xmm2
    00000394: 	paddb	%xmm2, %xmm0
    00000398: 	psadbw	%xmm1, %xmm0
    0000039c: 	movd	%xmm0, %eax
    000003a0: 	addl	%eax, %edx
    000003a2: 	cmpq	%r15, %rsi
    000003a5: 	je	.Ltmp1218 # Offset: 933
    000003a7: 	movq	%rsi, %rax
    000003aa: 	jmp	.Ltmp1219 # Offset: 938
.Ltmp1218:
    000003ac: 	testb	%dl, %dl
    000003ae: 	jne	.Ltmp1220 # Offset: 942
.Ltmp1325:
    000003b4: 	addl	$0x1, %r14d
    000003b8: 	cmpl	%ecx, %r14d
    000003bb: 	jl	.Ltmp1221 # Offset: 955
.Ltmp1216:
    000003bd: 	movq	%rbp, %rdi
    000003c0: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 960
    000003c5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003cc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000003d3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003da: 	je	.Ltmp1222 # Offset: 986
.Ltmp1338:
    000003e0: 	movq	-0x20(%rax), %r14
    000003e4: 	callq	clock@PLT # Offset: 996
    000003e9: 	pxor	%xmm0, %xmm0
    000003ed: 	movq	%rax, end_time(%rip)
    000003f4: 	movq	%r14, %rdi
    000003f7: 	subq	start_time(%rip), %rax
    000003fe: 	cvtsi2sd	%rax, %xmm0
    00000403: 	divsd	DATAat0x15758(%rip), %xmm0
    0000040b: 	callq	_Z13record_resultdPKc # Offset: 1035
    00000410: 	movq	0x120(%rsp), %rdi
    00000418: 	cmpq	%rbx, %rdi
    0000041b: 	je	.Ltmp1223 # Offset: 1051
    0000041d: 	movq	0x130(%rsp), %rax
    00000425: 	leaq	0x1(%rax), %rsi
    00000429: 	callq	_ZdlPvm@PLT # Offset: 1065
.Ltmp1223:
    0000042e: 	leaq	DATAat0x1522b(%rip), %rdx
    00000435: 	movq	%r12, %rsi
    00000438: 	movq	%rbp, %rdi
    0000043b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1083
    00000440: 	callq	clock@PLT # Offset: 1088
    00000445: 	movl	iterations(%rip), %ecx
    0000044b: 	xorl	%r14d, %r14d
    0000044e: 	leaq	0xfa0(%r13), %r15
    00000455: 	movq	%rax, start_time(%rip)
    0000045c: 	testl	%ecx, %ecx
    0000045e: 	jle	.Ltmp1224 # Offset: 1118
.Ltmp1228:
    00000460: 	movq	%r13, %rax
    00000463: 	pxor	%xmm0, %xmm0
.Ltmp1226:
    00000467: 	movq	%rax, %rdx
    0000046a: 	pxor	%xmm1, %xmm1
    0000046e: 	leaq	0xf42400(%rax), %rsi
.Ltmp1225:
    00000475: 	movdqu	(%rdx), %xmm5
    00000479: 	addq	$0xfa0, %rdx
    00000480: 	paddb	%xmm5, %xmm1
    00000484: 	cmpq	%rdx, %rsi
    00000487: 	jne	.Ltmp1225 # Offset: 1159
    00000489: 	addq	$0x10, %rax
    0000048d: 	paddb	%xmm1, %xmm0
    00000491: 	cmpq	%rax, %r15
    00000494: 	jne	.Ltmp1226 # Offset: 1172
    00000496: 	movdqa	%xmm0, %xmm1
    0000049a: 	pxor	%xmm4, %xmm4
    0000049e: 	psrldq	$0x8, %xmm1
    000004a3: 	paddb	%xmm1, %xmm0
    000004a7: 	psadbw	%xmm4, %xmm0
    000004ab: 	movd	%xmm0, %eax
    000004af: 	testb	%al, %al
    000004b1: 	jne	.Ltmp1227 # Offset: 1201
.Ltmp1243:
    000004b7: 	addl	$0x1, %r14d
    000004bb: 	cmpl	%ecx, %r14d
    000004be: 	jl	.Ltmp1228 # Offset: 1214
.Ltmp1224:
    000004c0: 	movq	%rbp, %rdi
    000004c3: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1219
    000004c8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004cf: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000004d6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004dd: 	je	.Ltmp1229 # Offset: 1245
.Ltmp1337:
    000004e3: 	movq	-0x20(%rax), %r14
    000004e7: 	callq	clock@PLT # Offset: 1255
    000004ec: 	pxor	%xmm0, %xmm0
    000004f0: 	movq	%rax, end_time(%rip)
    000004f7: 	movq	%r14, %rdi
    000004fa: 	subq	start_time(%rip), %rax
    00000501: 	cvtsi2sd	%rax, %xmm0
    00000506: 	divsd	DATAat0x15758(%rip), %xmm0
    0000050e: 	callq	_Z13record_resultdPKc # Offset: 1294
    00000513: 	movq	0x120(%rsp), %rdi
    0000051b: 	cmpq	%rbx, %rdi
    0000051e: 	je	.Ltmp1230 # Offset: 1310
    00000520: 	movq	0x130(%rsp), %rax
    00000528: 	leaq	0x1(%rax), %rsi
    0000052c: 	callq	_ZdlPvm@PLT # Offset: 1324
.Ltmp1230:
    00000531: 	leaq	0x80(%rsp), %rdi
    00000539: 	leaq	DATAat0x15249(%rip), %rdx
    00000540: 	movq	%r12, %rsi
    00000543: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1347
    00000548: 	movl	iterations(%rip), %edx
    0000054e: 	movq	0x80(%rsp), %rdi
    00000556: 	movl	$0xf42400, %esi
    0000055b: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 1371
    00000560: 	movq	%r13, %rdi
    00000563: 	callq	_ZdaPv@PLT # Offset: 1379
    00000568: 	movl	$0xf42400, %edi
    0000056d: 	callq	_Znam@PLT # Offset: 1389
    00000572: 	cvttsd2si	init_value(%rip), %esi
    0000057a: 	movl	$0xf42400, %edx
    0000057f: 	movq	%rax, %rdi
    00000582: 	movq	%rax, %r15
    00000585: 	movzbl	%sil, %esi
    00000589: 	callq	memset@PLT # Offset: 1417
    0000058e: 	leaq	DATAat0x15378(%rip), %rdx
    00000595: 	movq	%r12, %rsi
    00000598: 	movq	%rbp, %rdi
    0000059b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1435
    000005a0: 	callq	clock@PLT # Offset: 1440
    000005a5: 	movl	iterations(%rip), %ecx
    000005ab: 	xorl	%r13d, %r13d
    000005ae: 	movq	%rax, start_time(%rip)
    000005b5: 	leaq	0xf42400(%r15), %rax
    000005bc: 	movq	%rax, 0x8(%rsp)
    000005c1: 	testl	%ecx, %ecx
    000005c3: 	jle	.Ltmp1231 # Offset: 1475
.Ltmp1235:
    000005c5: 	movq	%r15, %rax
    000005c8: 	xorl	%edx, %edx
    000005ca: 	pxor	%xmm1, %xmm1
.Ltmp1233:
    000005ce: 	pxor	%xmm0, %xmm0
    000005d2: 	leaq	0xfa0(%rax), %rsi
.Ltmp1232:
    000005d9: 	movdqu	(%rax), %xmm6
    000005dd: 	addq	$0x10, %rax
    000005e1: 	paddb	%xmm6, %xmm0
    000005e5: 	cmpq	%rax, %rsi
    000005e8: 	jne	.Ltmp1232 # Offset: 1512
    000005ea: 	movdqa	%xmm0, %xmm2
    000005ee: 	psrldq	$0x8, %xmm2
    000005f3: 	paddb	%xmm2, %xmm0
    000005f7: 	psadbw	%xmm1, %xmm0
    000005fb: 	movd	%xmm0, %eax
    000005ff: 	addl	%eax, %edx
    00000601: 	movq	%rsi, %rax
    00000604: 	cmpq	0x8(%rsp), %rsi
    00000609: 	jne	.Ltmp1233 # Offset: 1545
    0000060b: 	testb	%dl, %dl
    0000060d: 	jne	.Ltmp1234 # Offset: 1549
.Ltmp1322:
    00000613: 	addl	$0x1, %r13d
    00000617: 	cmpl	%ecx, %r13d
    0000061a: 	jl	.Ltmp1235 # Offset: 1562
.Ltmp1231:
    0000061c: 	movq	%rbp, %rdi
    0000061f: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1567
    00000624: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000062b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000632: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000639: 	je	.Ltmp1236 # Offset: 1593
.Ltmp1336:
    0000063f: 	movq	-0x20(%rax), %r13
    00000643: 	callq	clock@PLT # Offset: 1603
    00000648: 	pxor	%xmm0, %xmm0
    0000064c: 	movq	%rax, end_time(%rip)
    00000653: 	movq	%r13, %rdi
    00000656: 	subq	start_time(%rip), %rax
    0000065d: 	cvtsi2sd	%rax, %xmm0
    00000662: 	divsd	DATAat0x15758(%rip), %xmm0
    0000066a: 	callq	_Z13record_resultdPKc # Offset: 1642
    0000066f: 	movq	0x120(%rsp), %rdi
    00000677: 	cmpq	%rbx, %rdi
    0000067a: 	je	.Ltmp1237 # Offset: 1658
    0000067c: 	movq	0x130(%rsp), %rax
    00000684: 	leaq	0x1(%rax), %rsi
    00000688: 	callq	_ZdlPvm@PLT # Offset: 1672
.Ltmp1237:
    0000068d: 	leaq	DATAat0x153a0(%rip), %rdx
    00000694: 	movq	%r12, %rsi
    00000697: 	movq	%rbp, %rdi
    0000069a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1690
    0000069f: 	callq	clock@PLT # Offset: 1695
    000006a4: 	movl	iterations(%rip), %ecx
    000006aa: 	xorl	%r13d, %r13d
    000006ad: 	movq	%rax, start_time(%rip)
    000006b4: 	leaq	0xf42400(%r15), %rax
    000006bb: 	movq	%rax, 0x8(%rsp)
    000006c0: 	testl	%ecx, %ecx
    000006c2: 	jle	.Ltmp1238 # Offset: 1730
.Ltmp1245:
    000006c8: 	movq	%r15, %rax
    000006cb: 	xorl	%edx, %edx
    000006cd: 	pxor	%xmm1, %xmm1
.Ltmp1241:
    000006d1: 	pxor	%xmm0, %xmm0
    000006d5: 	leaq	0xfa0(%rax), %rsi
.Ltmp1239:
    000006dc: 	movdqu	(%rax), %xmm5
    000006e0: 	addq	$0x10, %rax
    000006e4: 	paddb	%xmm5, %xmm0
    000006e8: 	cmpq	%rax, %rsi
    000006eb: 	jne	.Ltmp1239 # Offset: 1771
    000006ed: 	movdqa	%xmm0, %xmm2
    000006f1: 	psrldq	$0x8, %xmm2
    000006f6: 	paddb	%xmm2, %xmm0
    000006fa: 	psadbw	%xmm1, %xmm0
    000006fe: 	movd	%xmm0, %eax
    00000702: 	addl	%eax, %edx
    00000704: 	cmpq	0x8(%rsp), %rsi
    00000709: 	je	.Ltmp1240 # Offset: 1801
    0000070b: 	movq	%rsi, %rax
    0000070e: 	jmp	.Ltmp1241 # Offset: 1806
.Ltmp1212:
    00000710: 	movzbl	%dl, %edi
    00000713: 	movq	%rbp, %rsi
    00000716: 	callq	"_Z9check_sumIhEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0/1" # Offset: 1814
    0000071b: 	movl	iterations(%rip), %ecx
    00000721: 	jmp	.Ltmp1242 # Offset: 1825
.Ltmp1227:
    00000726: 	movzbl	%al, %edi
    00000729: 	movq	%rbp, %rsi
    0000072c: 	callq	"_Z9check_sumIhEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0/1" # Offset: 1836
    00000731: 	movl	iterations(%rip), %ecx
    00000737: 	jmp	.Ltmp1243 # Offset: 1847
.Ltmp1240:
    0000073c: 	testb	%dl, %dl
    0000073e: 	jne	.Ltmp1244 # Offset: 1854
.Ltmp1324:
    00000744: 	addl	$0x1, %r13d
    00000748: 	cmpl	%ecx, %r13d
    0000074b: 	jl	.Ltmp1245 # Offset: 1867
.Ltmp1238:
    00000751: 	movq	%rbp, %rdi
    00000754: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1876
    00000759: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000760: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000767: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000076e: 	je	.Ltmp1246 # Offset: 1902
.Ltmp1335:
    00000774: 	movq	-0x20(%rax), %r13
    00000778: 	callq	clock@PLT # Offset: 1912
    0000077d: 	pxor	%xmm0, %xmm0
    00000781: 	movq	%rax, end_time(%rip)
    00000788: 	movq	%r13, %rdi
    0000078b: 	subq	start_time(%rip), %rax
    00000792: 	cvtsi2sd	%rax, %xmm0
    00000797: 	divsd	DATAat0x15758(%rip), %xmm0
    0000079f: 	callq	_Z13record_resultdPKc # Offset: 1951
    000007a4: 	movq	0x120(%rsp), %rdi
    000007ac: 	cmpq	%rbx, %rdi
    000007af: 	je	.Ltmp1247 # Offset: 1967
    000007b1: 	movq	0x130(%rsp), %rax
    000007b9: 	leaq	0x1(%rax), %rsi
    000007bd: 	callq	_ZdlPvm@PLT # Offset: 1981
.Ltmp1247:
    000007c2: 	leaq	DATAat0x153c8(%rip), %rdx
    000007c9: 	movq	%r12, %rsi
    000007cc: 	movq	%rbp, %rdi
    000007cf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1999
    000007d4: 	callq	clock@PLT # Offset: 2004
    000007d9: 	movl	iterations(%rip), %ecx
    000007df: 	xorl	%r13d, %r13d
    000007e2: 	leaq	0xfa0(%r15), %r14
    000007e9: 	movq	%rax, start_time(%rip)
    000007f0: 	testl	%ecx, %ecx
    000007f2: 	jle	.Ltmp1248 # Offset: 2034
.Ltmp1252:
    000007f4: 	movq	%r15, %rax
    000007f7: 	pxor	%xmm0, %xmm0
.Ltmp1250:
    000007fb: 	movq	%rax, %rdx
    000007fe: 	pxor	%xmm1, %xmm1
    00000802: 	leaq	0xf42400(%rax), %rsi
.Ltmp1249:
    00000809: 	movdqu	(%rdx), %xmm4
    0000080d: 	addq	$0xfa0, %rdx
    00000814: 	paddb	%xmm4, %xmm1
    00000818: 	cmpq	%rdx, %rsi
    0000081b: 	jne	.Ltmp1249 # Offset: 2075
    0000081d: 	addq	$0x10, %rax
    00000821: 	paddb	%xmm1, %xmm0
    00000825: 	cmpq	%rax, %r14
    00000828: 	jne	.Ltmp1250 # Offset: 2088
    0000082a: 	movdqa	%xmm0, %xmm1
    0000082e: 	pxor	%xmm6, %xmm6
    00000832: 	psrldq	$0x8, %xmm1
    00000837: 	paddb	%xmm1, %xmm0
    0000083b: 	psadbw	%xmm6, %xmm0
    0000083f: 	movd	%xmm0, %eax
    00000843: 	testb	%al, %al
    00000845: 	jne	.Ltmp1251 # Offset: 2117
.Ltmp1323:
    0000084b: 	addl	$0x1, %r13d
    0000084f: 	cmpl	%ecx, %r13d
    00000852: 	jl	.Ltmp1252 # Offset: 2130
.Ltmp1248:
    00000854: 	movq	%rbp, %rdi
    00000857: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2135
    0000085c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000863: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000086a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000871: 	je	.Ltmp1253 # Offset: 2161
.Ltmp1334:
    00000877: 	movq	-0x20(%rax), %r13
    0000087b: 	callq	clock@PLT # Offset: 2171
    00000880: 	pxor	%xmm0, %xmm0
    00000884: 	movq	%rax, end_time(%rip)
    0000088b: 	movq	%r13, %rdi
    0000088e: 	subq	start_time(%rip), %rax
    00000895: 	cvtsi2sd	%rax, %xmm0
    0000089a: 	divsd	DATAat0x15758(%rip), %xmm0
    000008a2: 	callq	_Z13record_resultdPKc # Offset: 2210
    000008a7: 	movq	0x120(%rsp), %rdi
    000008af: 	cmpq	%rbx, %rdi
    000008b2: 	je	.Ltmp1254 # Offset: 2226
    000008b4: 	movq	0x130(%rsp), %rax
    000008bc: 	leaq	0x1(%rax), %rsi
    000008c0: 	callq	_ZdlPvm@PLT # Offset: 2240
.Ltmp1254:
    000008c5: 	leaq	0xa0(%rsp), %rdi
    000008cd: 	leaq	DATAat0x1525e(%rip), %rdx
    000008d4: 	movq	%r12, %rsi
    000008d7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2263
    000008dc: 	movl	iterations(%rip), %edx
    000008e2: 	movq	0xa0(%rsp), %rdi
    000008ea: 	movl	$0xf42400, %esi
    000008ef: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 2287
    000008f4: 	leaq	DATAat0x153f0(%rip), %rdx
    000008fb: 	movq	%r12, %rsi
    000008fe: 	movq	%rbp, %rdi
    00000901: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2305
    00000906: 	callq	clock@PLT # Offset: 2310
    0000090b: 	movl	iterations(%rip), %edx
    00000911: 	movq	%rax, start_time(%rip)
    00000918: 	testl	%edx, %edx
    0000091a: 	jle	.Ltmp1255 # Offset: 2330
    00000920: 	leaq	0xf42400(%r15), %rax
    00000927: 	movdqa	DATAat0x157a0(%rip), %xmm5
    0000092f: 	xorl	%r13d, %r13d
    00000932: 	movq	%rax, 0x8(%rsp)
    00000937: 	movaps	%xmm5, 0x10(%rsp)
.Ltmp1258:
    0000093c: 	xorl	%eax, %eax
    0000093e: 	movq	%r15, %rdx
    00000941: 	pxor	%xmm4, %xmm4
    00000945: 	movl	%eax, %esi
.Ltmp1257:
    00000947: 	movq	%rdx, %rcx
    0000094a: 	pxor	%xmm5, %xmm5
    0000094e: 	leaq	0xf80(%rdx), %rax
.Ltmp1256:
    00000955: 	movdqa	0x10(%rsp), %xmm8
    0000095c: 	movdqu	(%rcx), %xmm1
    00000960: 	addq	$0x40, %rcx
    00000964: 	movdqu	-0x30(%rcx), %xmm0
    00000969: 	movdqu	-0x40(%rcx), %xmm2
    0000096e: 	pand	%xmm8, %xmm1
    00000973: 	movdqu	-0x20(%rcx), %xmm3
    00000978: 	pand	%xmm8, %xmm0
    0000097d: 	psrlw	$0x8, %xmm2
    00000982: 	packuswb	%xmm0, %xmm1
    00000986: 	movdqu	-0x30(%rcx), %xmm0
    0000098b: 	movdqa	%xmm2, %xmm6
    0000098f: 	pand	%xmm8, %xmm3
    00000994: 	movdqu	-0x10(%rcx), %xmm2
    00000999: 	psrlw	$0x8, %xmm0
    0000099e: 	packuswb	%xmm0, %xmm6
    000009a2: 	movdqu	-0x10(%rcx), %xmm0
    000009a7: 	psrlw	$0x8, %xmm2
    000009ac: 	pand	%xmm8, %xmm0
    000009b1: 	packuswb	%xmm0, %xmm3
    000009b5: 	movdqu	-0x20(%rcx), %xmm0
    000009ba: 	movdqa	%xmm3, %xmm7
    000009be: 	pand	%xmm8, %xmm3
    000009c3: 	psrlw	$0x8, %xmm0
    000009c8: 	psrlw	$0x8, %xmm7
    000009cd: 	packuswb	%xmm2, %xmm0
    000009d1: 	movdqa	%xmm1, %xmm2
    000009d5: 	pand	%xmm8, %xmm1
    000009da: 	psrlw	$0x8, %xmm2
    000009df: 	packuswb	%xmm3, %xmm1
    000009e3: 	movdqa	%xmm6, %xmm3
    000009e7: 	packuswb	%xmm7, %xmm2
    000009eb: 	psrlw	$0x8, %xmm3
    000009f0: 	paddb	%xmm2, %xmm1
    000009f4: 	movdqa	%xmm0, %xmm2
    000009f8: 	pand	%xmm8, %xmm0
    000009fd: 	psrlw	$0x8, %xmm2
    00000a02: 	packuswb	%xmm2, %xmm3
    00000a06: 	movdqa	%xmm6, %xmm2
    00000a0a: 	pand	%xmm8, %xmm2
    00000a0f: 	packuswb	%xmm0, %xmm2
    00000a13: 	paddb	%xmm2, %xmm3
    00000a17: 	paddb	%xmm3, %xmm1
    00000a1b: 	paddb	%xmm1, %xmm5
    00000a1f: 	cmpq	%rcx, %rax
    00000a22: 	jne	.Ltmp1256 # Offset: 2594
    00000a28: 	movdqa	%xmm5, %xmm0
    00000a2c: 	movzbl	0xf80(%rdx), %eax
    00000a33: 	addb	0xf81(%rdx), %al
    00000a39: 	psrldq	$0x8, %xmm0
    00000a3e: 	addl	%esi, %eax
    00000a40: 	addb	0xf82(%rdx), %al
    00000a46: 	addb	0xf83(%rdx), %al
    00000a4c: 	paddb	%xmm5, %xmm0
    00000a50: 	addb	0xf84(%rdx), %al
    00000a56: 	addb	0xf85(%rdx), %al
    00000a5c: 	psadbw	%xmm4, %xmm0
    00000a60: 	addb	0xf86(%rdx), %al
    00000a66: 	addb	0xf87(%rdx), %al
    00000a6c: 	movd	%xmm0, %ecx
    00000a70: 	addb	0xf88(%rdx), %al
    00000a76: 	addb	0xf89(%rdx), %al
    00000a7c: 	addb	0xf8a(%rdx), %al
    00000a82: 	addb	0xf8b(%rdx), %al
    00000a88: 	addb	0xf8c(%rdx), %al
    00000a8e: 	addb	0xf8d(%rdx), %al
    00000a94: 	addb	0xf8e(%rdx), %al
    00000a9a: 	addb	0xf8f(%rdx), %al
    00000aa0: 	addb	0xf90(%rdx), %al
    00000aa6: 	addb	0xf91(%rdx), %al
    00000aac: 	addb	0xf92(%rdx), %al
    00000ab2: 	addb	0xf93(%rdx), %al
    00000ab8: 	addb	0xf94(%rdx), %al
    00000abe: 	addb	0xf95(%rdx), %al
    00000ac4: 	addb	0xf96(%rdx), %al
    00000aca: 	addb	0xf97(%rdx), %al
    00000ad0: 	addb	0xf98(%rdx), %al
    00000ad6: 	addb	0xf99(%rdx), %al
    00000adc: 	addb	0xf9a(%rdx), %al
    00000ae2: 	addb	0xf9b(%rdx), %al
    00000ae8: 	addb	0xf9c(%rdx), %al
    00000aee: 	addb	0xf9d(%rdx), %al
    00000af4: 	addb	0xf9e(%rdx), %al
    00000afa: 	addb	0xf9f(%rdx), %al
    00000b00: 	addq	$0xfa0, %rdx
    00000b07: 	leal	(%rax,%rcx), %esi
    00000b0a: 	cmpq	%rdx, 0x8(%rsp)
    00000b0f: 	jne	.Ltmp1257 # Offset: 2831
    00000b15: 	movzbl	%sil, %edi
    00000b19: 	movq	%rbp, %r8
    00000b1c: 	movl	$0x4, %ecx
    00000b21: 	movl	$0x3e8, %edx
    00000b26: 	movl	$0xfa0, %esi
    00000b2b: 	callq	_Z18check_sum_channelsIhEvT_mmmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2859
    00000b30: 	addl	$0x1, %r13d
    00000b34: 	cmpl	iterations(%rip), %r13d
    00000b3b: 	jl	.Ltmp1258 # Offset: 2875
.Ltmp1255:
    00000b41: 	movq	%rbp, %rdi
    00000b44: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2884
    00000b49: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b50: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b57: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b5e: 	je	.Ltmp1259 # Offset: 2910
.Ltmp1333:
    00000b64: 	movq	-0x20(%rax), %r13
    00000b68: 	callq	clock@PLT # Offset: 2920
    00000b6d: 	pxor	%xmm0, %xmm0
    00000b71: 	movq	%rax, end_time(%rip)
    00000b78: 	movq	%r13, %rdi
    00000b7b: 	subq	start_time(%rip), %rax
    00000b82: 	cvtsi2sd	%rax, %xmm0
    00000b87: 	divsd	DATAat0x15758(%rip), %xmm0
    00000b8f: 	callq	_Z13record_resultdPKc # Offset: 2959
    00000b94: 	movq	0x120(%rsp), %rdi
    00000b9c: 	cmpq	%rbx, %rdi
    00000b9f: 	je	.Ltmp1260 # Offset: 2975
    00000ba1: 	movq	0x130(%rsp), %rax
    00000ba9: 	leaq	0x1(%rax), %rsi
    00000bad: 	callq	_ZdlPvm@PLT # Offset: 2989
.Ltmp1260:
    00000bb2: 	leaq	DATAat0x15420(%rip), %rdx
    00000bb9: 	movq	%r12, %rsi
    00000bbc: 	movq	%rbp, %rdi
    00000bbf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3007
    00000bc4: 	movq	%rbp, %rdx
    00000bc7: 	movl	$0x4, %esi
    00000bcc: 	movq	%r15, %rdi
    00000bcf: 	callq	"_Z27test_loop_2D_flat_chan_opt2IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3023
    00000bd4: 	movq	0x120(%rsp), %rdi
    00000bdc: 	cmpq	%rbx, %rdi
    00000bdf: 	je	.Ltmp1261 # Offset: 3039
    00000be1: 	movq	0x130(%rsp), %rax
    00000be9: 	leaq	0x1(%rax), %rsi
    00000bed: 	callq	_ZdlPvm@PLT # Offset: 3053
.Ltmp1261:
    00000bf2: 	leaq	DATAat0x15450(%rip), %rdx
    00000bf9: 	movq	%r12, %rsi
    00000bfc: 	movq	%rbp, %rdi
    00000bff: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3071
    00000c04: 	movq	%rbp, %rdx
    00000c07: 	movl	$0x4, %esi
    00000c0c: 	movq	%r15, %rdi
    00000c0f: 	callq	"_Z27test_loop_2D_flat_chan_opt3IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3087
    00000c14: 	movq	0x120(%rsp), %rdi
    00000c1c: 	cmpq	%rbx, %rdi
    00000c1f: 	je	.Ltmp1262 # Offset: 3103
    00000c21: 	movq	0x130(%rsp), %rax
    00000c29: 	leaq	0x1(%rax), %rsi
    00000c2d: 	callq	_ZdlPvm@PLT # Offset: 3117
.Ltmp1262:
    00000c32: 	leaq	DATAat0x15480(%rip), %rdx
    00000c39: 	movq	%r12, %rsi
    00000c3c: 	movq	%rbp, %rdi
    00000c3f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3135
    00000c44: 	movq	%rbp, %rdx
    00000c47: 	movl	$0x4, %esi
    00000c4c: 	movq	%r15, %rdi
    00000c4f: 	callq	"_Z27test_loop_2D_flat_chan_opt4IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3151
    00000c54: 	movq	0x120(%rsp), %rdi
    00000c5c: 	cmpq	%rbx, %rdi
    00000c5f: 	je	.Ltmp1263 # Offset: 3167
    00000c61: 	movq	0x130(%rsp), %rax
    00000c69: 	leaq	0x1(%rax), %rsi
    00000c6d: 	callq	_ZdlPvm@PLT # Offset: 3181
.Ltmp1263:
    00000c72: 	leaq	DATAat0x154b0(%rip), %rdx
    00000c79: 	movq	%r12, %rsi
    00000c7c: 	movq	%rbp, %rdi
    00000c7f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3199
    00000c84: 	movq	%rbp, %rdx
    00000c87: 	movl	$0x4, %esi
    00000c8c: 	movq	%r15, %rdi
    00000c8f: 	callq	"_Z29test_loop_2D_flat_chan_revCYXIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3215
    00000c94: 	movq	0x120(%rsp), %rdi
    00000c9c: 	cmpq	%rbx, %rdi
    00000c9f: 	je	.Ltmp1264 # Offset: 3231
    00000ca1: 	movq	0x130(%rsp), %rax
    00000ca9: 	leaq	0x1(%rax), %rsi
    00000cad: 	callq	_ZdlPvm@PLT # Offset: 3245
.Ltmp1264:
    00000cb2: 	leaq	DATAat0x154e0(%rip), %rdx
    00000cb9: 	movq	%r12, %rsi
    00000cbc: 	movq	%rbp, %rdi
    00000cbf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3263
    00000cc4: 	callq	clock@PLT # Offset: 3268
    00000cc9: 	movl	iterations(%rip), %esi
    00000ccf: 	movl	$0x0, 0x10(%rsp)
    00000cd7: 	movq	%rax, start_time(%rip)
    00000cde: 	leaq	0xf42400(%r15), %rax
    00000ce5: 	movq	%rax, 0x8(%rsp)
    00000cea: 	testl	%esi, %esi
    00000cec: 	jle	.Ltmp1265 # Offset: 3308
.Ltmp1271:
    00000cf2: 	xorl	%ecx, %ecx
    00000cf4: 	xorl	%r14d, %r14d
.Ltmp1267:
    00000cf7: 	movq	0x8(%rsp), %rdx
    00000cfc: 	leaq	(%r15,%rcx), %rax
    00000d00: 	xorl	%edi, %edi
    00000d02: 	leaq	(%rdx,%rcx), %r8
.Ltmp1266:
    00000d06: 	movzbl	0x1(%rax), %edx
    00000d0a: 	addq	$0xfa0, %rax
    00000d10: 	addb	-0xfa0(%rax), %dl
    00000d16: 	addb	-0xf9e(%rax), %dl
    00000d1c: 	addb	-0xf9d(%rax), %dl
    00000d22: 	addl	%edx, %edi
    00000d24: 	cmpq	%rax, %r8
    00000d27: 	jne	.Ltmp1266 # Offset: 3367
    00000d29: 	addq	$0x4, %rcx
    00000d2d: 	addl	%edi, %r14d
    00000d30: 	cmpq	$0xfa0, %rcx
    00000d37: 	jne	.Ltmp1267 # Offset: 3383
    00000d39: 	testb	%r14b, %r14b
    00000d3c: 	je	.Ltmp1268 # Offset: 3388
    00000d42: 	movl	$0x5, %edx
    00000d47: 	leaq	DATAat0x15182(%rip), %rsi
    00000d4e: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    00000d55: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 3413
    00000d5a: 	movq	0x128(%rsp), %rdx
    00000d62: 	movq	0x120(%rsp), %rsi
    00000d6a: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    00000d71: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 3441
    00000d76: 	movl	$0x12, %edx
    00000d7b: 	leaq	DATAat0x15188(%rip), %rsi
    00000d82: 	movq	%rax, %rdi
    00000d85: 	movq	%rax, %r13
    00000d88: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 3464
    00000d8d: 	leaq	0x56(%rsp), %rsi
    00000d92: 	movl	$0x1, %edx
    00000d97: 	movq	%r13, %rdi
    00000d9a: 	movb	$0x0, 0x56(%rsp)
    00000d9f: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 3487
    00000da4: 	movl	$0x5, %edx
    00000da9: 	leaq	DATAat0x1519b(%rip), %rsi
    00000db0: 	movq	%rax, %rdi
    00000db3: 	movq	%rax, %r13
    00000db6: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 3510
    00000dbb: 	leaq	0x55(%rsp), %rsi
    00000dc0: 	movl	$0x1, %edx
    00000dc5: 	movq	%r13, %rdi
    00000dc8: 	movb	%r14b, 0x55(%rsp)
    00000dcd: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 3533
    00000dd2: 	movq	%rax, %r14
    00000dd5: 	movq	(%rax), %rax
    00000dd8: 	movq	-0x18(%rax), %rax
    00000ddc: 	movq	0xf0(%r14,%rax), %r13
    00000de4: 	testq	%r13, %r13
    00000de7: 	je	.Ltmp1269 # Offset: 3559
    00000ded: 	cmpb	$0x0, 0x38(%r13)
    00000df2: 	je	.Ltmp1270 # Offset: 3570
    00000df8: 	movsbl	0x43(%r13), %esi
.Ltmp1326:
    00000dfd: 	movq	%r14, %rdi
    00000e00: 	callq	_ZNSo3putEc@PLT # Offset: 3584
    00000e05: 	movq	%rax, %rdi
    00000e08: 	callq	_ZNSo5flushEv@PLT # Offset: 3592
    00000e0d: 	movl	iterations(%rip), %esi
.Ltmp1268:
    00000e13: 	addl	$0x1, 0x10(%rsp)
    00000e18: 	movl	0x10(%rsp), %eax
    00000e1c: 	cmpl	%esi, %eax
    00000e1e: 	jl	.Ltmp1271 # Offset: 3614
.Ltmp1265:
    00000e24: 	movq	%rbp, %rdi
    00000e27: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3623
    00000e2c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e33: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e3a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e41: 	je	.Ltmp1272 # Offset: 3649
.Ltmp1339:
    00000e47: 	movq	-0x20(%rax), %r13
    00000e4b: 	callq	clock@PLT # Offset: 3659
    00000e50: 	pxor	%xmm0, %xmm0
    00000e54: 	movq	%rax, end_time(%rip)
    00000e5b: 	movq	%r13, %rdi
    00000e5e: 	subq	start_time(%rip), %rax
    00000e65: 	cvtsi2sd	%rax, %xmm0
    00000e6a: 	divsd	DATAat0x15758(%rip), %xmm0
    00000e72: 	callq	_Z13record_resultdPKc # Offset: 3698
    00000e77: 	movq	0x120(%rsp), %rdi
    00000e7f: 	cmpq	%rbx, %rdi
    00000e82: 	je	.Ltmp1273 # Offset: 3714
    00000e84: 	movq	0x130(%rsp), %rax
    00000e8c: 	leaq	0x1(%rax), %rsi
    00000e90: 	callq	_ZdlPvm@PLT # Offset: 3728
.Ltmp1273:
    00000e95: 	leaq	DATAat0x15510(%rip), %rdx
    00000e9c: 	movq	%r12, %rsi
    00000e9f: 	movq	%rbp, %rdi
    00000ea2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3746
    00000ea7: 	movq	%rbp, %rdx
    00000eaa: 	movl	$0x4, %esi
    00000eaf: 	movq	%r15, %rdi
    00000eb2: 	callq	"_Z29test_loop_2D_flat_chan_revXCYIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3762
    00000eb7: 	movq	0x120(%rsp), %rdi
    00000ebf: 	cmpq	%rbx, %rdi
    00000ec2: 	je	.Ltmp1274 # Offset: 3778
    00000ec4: 	movq	0x130(%rsp), %rax
    00000ecc: 	leaq	0x1(%rax), %rsi
    00000ed0: 	callq	_ZdlPvm@PLT # Offset: 3792
.Ltmp1274:
    00000ed5: 	leaq	DATAat0x15540(%rip), %rdx
    00000edc: 	movq	%r12, %rsi
    00000edf: 	movq	%rbp, %rdi
    00000ee2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3810
    00000ee7: 	movq	%rbp, %rdx
    00000eea: 	movl	$0x4, %esi
    00000eef: 	movq	%r15, %rdi
    00000ef2: 	callq	"_Z29test_loop_2D_flat_chan_revCXYIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3826
    00000ef7: 	movq	0x120(%rsp), %rdi
    00000eff: 	cmpq	%rbx, %rdi
    00000f02: 	je	.Ltmp1275 # Offset: 3842
    00000f04: 	movq	0x130(%rsp), %rax
    00000f0c: 	leaq	0x1(%rax), %rsi
    00000f10: 	callq	_ZdlPvm@PLT # Offset: 3856
.Ltmp1275:
    00000f15: 	leaq	0xc0(%rsp), %rdi
    00000f1d: 	leaq	DATAat0x15570(%rip), %rdx
    00000f24: 	movq	%r12, %rsi
    00000f27: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3879
    00000f2c: 	movl	iterations(%rip), %edx
    00000f32: 	movq	0xc0(%rsp), %rdi
    00000f3a: 	movl	$0xf42400, %esi
    00000f3f: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 3903
    00000f44: 	leaq	DATAat0x15598(%rip), %rdx
    00000f4b: 	movq	%r12, %rsi
    00000f4e: 	movq	%rbp, %rdi
    00000f51: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3921
    00000f56: 	callq	clock@PLT # Offset: 3926
    00000f5b: 	movq	%rax, start_time(%rip)
    00000f62: 	movl	iterations(%rip), %eax
    00000f68: 	testl	%eax, %eax
    00000f6a: 	jle	.Ltmp1276 # Offset: 3946
    00000f70: 	leaq	0xf42400(%r15), %rax
    00000f77: 	movdqa	DATAat0x157a0(%rip), %xmm4
    00000f7f: 	xorl	%r13d, %r13d
    00000f82: 	movq	%rax, 0x8(%rsp)
    00000f87: 	movaps	%xmm4, 0x10(%rsp)
.Ltmp1279:
    00000f8c: 	movq	%r15, %rdx
    00000f8f: 	xorl	%esi, %esi
.Ltmp1278:
    00000f91: 	movq	%rdx, %rcx
    00000f94: 	pxor	%xmm0, %xmm0
    00000f98: 	leaq	0xf80(%rdx), %rax
.Ltmp1277:
    00000f9f: 	movdqa	0x10(%rsp), %xmm7
    00000fa5: 	movdqu	(%rcx), %xmm5
    00000fa9: 	addq	$0x40, %rcx
    00000fad: 	movdqu	-0x30(%rcx), %xmm1
    00000fb2: 	movdqu	-0x20(%rcx), %xmm3
    00000fb7: 	pand	%xmm7, %xmm5
    00000fbb: 	movdqu	-0x30(%rcx), %xmm2
    00000fc0: 	movdqu	-0x10(%rcx), %xmm4
    00000fc5: 	pand	%xmm7, %xmm1
    00000fc9: 	pand	%xmm7, %xmm3
    00000fcd: 	psrlw	$0x8, %xmm2
    00000fd2: 	psrlw	$0x8, %xmm4
    00000fd7: 	packuswb	%xmm1, %xmm5
    00000fdb: 	movdqu	-0x10(%rcx), %xmm1
    00000fe0: 	pand	%xmm7, %xmm1
    00000fe4: 	packuswb	%xmm1, %xmm3
    00000fe8: 	movdqu	-0x40(%rcx), %xmm1
    00000fed: 	psrlw	$0x8, %xmm1
    00000ff2: 	packuswb	%xmm2, %xmm1
    00000ff6: 	movdqu	-0x20(%rcx), %xmm2
    00000ffb: 	pand	%xmm7, %xmm1
    00000fff: 	psrlw	$0x8, %xmm2
    00001004: 	packuswb	%xmm4, %xmm2
    00001008: 	pand	%xmm7, %xmm2
    0000100c: 	packuswb	%xmm2, %xmm1
    00001010: 	movdqa	%xmm5, %xmm2
    00001014: 	paddb	%xmm0, %xmm1
    00001018: 	psrlw	$0x8, %xmm2
    0000101d: 	movdqa	%xmm3, %xmm0
    00001021: 	psrlw	$0x8, %xmm0
    00001026: 	pand	%xmm7, %xmm3
    0000102a: 	packuswb	%xmm0, %xmm2
    0000102e: 	movdqa	%xmm5, %xmm0
    00001032: 	pand	%xmm7, %xmm0
    00001036: 	packuswb	%xmm3, %xmm0
    0000103a: 	paddb	%xmm2, %xmm0
    0000103e: 	paddb	%xmm1, %xmm0
    00001042: 	cmpq	%rax, %rcx
    00001045: 	jne	.Ltmp1277 # Offset: 4165
    0000104b: 	movdqa	%xmm0, %xmm1
    0000104f: 	pxor	%xmm6, %xmm6
    00001053: 	movzbl	0xf81(%rdx), %eax
    0000105a: 	addb	0xf80(%rdx), %al
    00001060: 	psrldq	$0x8, %xmm1
    00001065: 	addl	%esi, %eax
    00001067: 	addb	0xf82(%rdx), %al
    0000106d: 	addb	0xf84(%rdx), %al
    00001073: 	paddb	%xmm1, %xmm0
    00001077: 	addb	0xf85(%rdx), %al
    0000107d: 	addb	0xf86(%rdx), %al
    00001083: 	addq	$0xfa0, %rdx
    0000108a: 	psadbw	%xmm6, %xmm0
    0000108e: 	addb	-0x18(%rdx), %al
    00001091: 	addb	-0x17(%rdx), %al
    00001094: 	movd	%xmm0, %ecx
    00001098: 	addb	-0x16(%rdx), %al
    0000109b: 	addb	-0x14(%rdx), %al
    0000109e: 	addb	-0x13(%rdx), %al
    000010a1: 	addb	-0x12(%rdx), %al
    000010a4: 	addb	-0x10(%rdx), %al
    000010a7: 	addb	-0xf(%rdx), %al
    000010aa: 	addb	-0xe(%rdx), %al
    000010ad: 	addb	-0xc(%rdx), %al
    000010b0: 	addb	-0xb(%rdx), %al
    000010b3: 	addb	-0xa(%rdx), %al
    000010b6: 	addb	-0x8(%rdx), %al
    000010b9: 	addb	-0x7(%rdx), %al
    000010bc: 	addb	-0x6(%rdx), %al
    000010bf: 	addb	-0x4(%rdx), %al
    000010c2: 	addb	-0x3(%rdx), %al
    000010c5: 	addb	-0x2(%rdx), %al
    000010c8: 	leal	(%rax,%rcx), %esi
    000010cb: 	cmpq	%rdx, 0x8(%rsp)
    000010d0: 	jne	.Ltmp1278 # Offset: 4304
    000010d6: 	movzbl	%sil, %edi
    000010da: 	movq	%rbp, %r8
    000010dd: 	movl	$0x3, %ecx
    000010e2: 	movl	$0x3e8, %edx
    000010e7: 	movl	$0xfa0, %esi
    000010ec: 	callq	_Z18check_sum_channelsIhEvT_mmmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4332
    000010f1: 	addl	$0x1, %r13d
    000010f5: 	cmpl	iterations(%rip), %r13d
    000010fc: 	jl	.Ltmp1279 # Offset: 4348
.Ltmp1276:
    00001102: 	movq	%rbp, %rdi
    00001105: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4357
    0000110a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001111: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001118: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000111f: 	je	.Ltmp1280 # Offset: 4383
.Ltmp1340:
    00001125: 	movq	-0x20(%rax), %r13
    00001129: 	callq	clock@PLT # Offset: 4393
    0000112e: 	pxor	%xmm0, %xmm0
    00001132: 	movq	%rax, end_time(%rip)
    00001139: 	movq	%r13, %rdi
    0000113c: 	subq	start_time(%rip), %rax
    00001143: 	cvtsi2sd	%rax, %xmm0
    00001148: 	divsd	DATAat0x15758(%rip), %xmm0
    00001150: 	callq	_Z13record_resultdPKc # Offset: 4432
    00001155: 	movq	0x120(%rsp), %rdi
    0000115d: 	cmpq	%rbx, %rdi
    00001160: 	je	.Ltmp1281 # Offset: 4448
    00001162: 	movq	0x130(%rsp), %rax
    0000116a: 	leaq	0x1(%rax), %rsi
    0000116e: 	callq	_ZdlPvm@PLT # Offset: 4462
.Ltmp1281:
    00001173: 	leaq	DATAat0x155c8(%rip), %rdx
    0000117a: 	movq	%r12, %rsi
    0000117d: 	movq	%rbp, %rdi
    00001180: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4480
    00001185: 	movq	%rbp, %rdx
    00001188: 	movl	$0x3, %esi
    0000118d: 	movq	%r15, %rdi
    00001190: 	callq	"_Z27test_loop_2D_flat_chan_opt2IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4496
    00001195: 	movq	0x120(%rsp), %rdi
    0000119d: 	cmpq	%rbx, %rdi
    000011a0: 	je	.Ltmp1282 # Offset: 4512
    000011a2: 	movq	0x130(%rsp), %rax
    000011aa: 	leaq	0x1(%rax), %rsi
    000011ae: 	callq	_ZdlPvm@PLT # Offset: 4526
.Ltmp1282:
    000011b3: 	leaq	DATAat0x155f8(%rip), %rdx
    000011ba: 	movq	%r12, %rsi
    000011bd: 	movq	%rbp, %rdi
    000011c0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4544
    000011c5: 	movq	%rbp, %rdx
    000011c8: 	movl	$0x3, %esi
    000011cd: 	movq	%r15, %rdi
    000011d0: 	callq	"_Z27test_loop_2D_flat_chan_opt3IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4560
    000011d5: 	movq	0x120(%rsp), %rdi
    000011dd: 	cmpq	%rbx, %rdi
    000011e0: 	je	.Ltmp1283 # Offset: 4576
    000011e2: 	movq	0x130(%rsp), %rax
    000011ea: 	leaq	0x1(%rax), %rsi
    000011ee: 	callq	_ZdlPvm@PLT # Offset: 4590
.Ltmp1283:
    000011f3: 	leaq	DATAat0x15628(%rip), %rdx
    000011fa: 	movq	%r12, %rsi
    000011fd: 	movq	%rbp, %rdi
    00001200: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4608
    00001205: 	movq	%rbp, %rdx
    00001208: 	movl	$0x3, %esi
    0000120d: 	movq	%r15, %rdi
    00001210: 	callq	"_Z27test_loop_2D_flat_chan_opt4IhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4624
    00001215: 	movq	0x120(%rsp), %rdi
    0000121d: 	cmpq	%rbx, %rdi
    00001220: 	je	.Ltmp1284 # Offset: 4640
    00001222: 	movq	0x130(%rsp), %rax
    0000122a: 	leaq	0x1(%rax), %rsi
    0000122e: 	callq	_ZdlPvm@PLT # Offset: 4654
.Ltmp1284:
    00001233: 	leaq	DATAat0x15658(%rip), %rdx
    0000123a: 	movq	%r12, %rsi
    0000123d: 	movq	%rbp, %rdi
    00001240: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4672
    00001245: 	movq	%rbp, %rdx
    00001248: 	movl	$0x3, %esi
    0000124d: 	movq	%r15, %rdi
    00001250: 	callq	"_Z29test_loop_2D_flat_chan_revCYXIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 4688
    00001255: 	movq	0x120(%rsp), %rdi
    0000125d: 	cmpq	%rbx, %rdi
    00001260: 	je	.Ltmp1285 # Offset: 4704
    00001262: 	movq	0x130(%rsp), %rax
    0000126a: 	leaq	0x1(%rax), %rsi
    0000126e: 	callq	_ZdlPvm@PLT # Offset: 4718
.Ltmp1285:
    00001273: 	leaq	DATAat0x15688(%rip), %rdx
    0000127a: 	movq	%r12, %rsi
    0000127d: 	movq	%rbp, %rdi
    00001280: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4736
    00001285: 	callq	clock@PLT # Offset: 4741
    0000128a: 	movl	iterations(%rip), %esi
    00001290: 	movl	$0x0, 0x10(%rsp)
    00001298: 	movq	%rax, start_time(%rip)
    0000129f: 	leaq	0xf42400(%r15), %rax
    000012a6: 	movq	%rax, 0x8(%rsp)
    000012ab: 	testl	%esi, %esi
    000012ad: 	jle	.Ltmp1286 # Offset: 4781
.Ltmp1292:
    000012b3: 	xorl	%edx, %edx
    000012b5: 	xorl	%r14d, %r14d
.Ltmp1288:
    000012b8: 	movq	0x8(%rsp), %rcx
    000012bd: 	leaq	(%rdx,%r15), %rax
    000012c1: 	xorl	%edi, %edi
    000012c3: 	leaq	(%rcx,%rdx), %r8
.Ltmp1287:
    000012c7: 	movzbl	0x1(%rax), %ecx
    000012cb: 	addq	$0xfa0, %rax
    000012d1: 	addb	-0xfa0(%rax), %cl
    000012d7: 	addb	-0xf9e(%rax), %cl
    000012dd: 	addl	%ecx, %edi
    000012df: 	cmpq	%r8, %rax
    000012e2: 	jne	.Ltmp1287 # Offset: 4834
    000012e4: 	addq	$0x4, %rdx
    000012e8: 	addl	%edi, %r14d
    000012eb: 	cmpq	$0xfa0, %rdx
    000012f2: 	jne	.Ltmp1288 # Offset: 4850
    000012f4: 	testb	%r14b, %r14b
    000012f7: 	je	.Ltmp1289 # Offset: 4855
    000012fd: 	movl	$0x5, %edx
    00001302: 	leaq	DATAat0x15182(%rip), %rsi
    00001309: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    00001310: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 4880
    00001315: 	movq	0x128(%rsp), %rdx
    0000131d: 	movq	0x120(%rsp), %rsi
    00001325: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %rdi
    0000132c: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 4908
    00001331: 	movl	$0x12, %edx
    00001336: 	leaq	DATAat0x15188(%rip), %rsi
    0000133d: 	movq	%rax, %rdi
    00001340: 	movq	%rax, %r13
    00001343: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 4931
    00001348: 	leaq	0x58(%rsp), %rsi
    0000134d: 	movl	$0x1, %edx
    00001352: 	movq	%r13, %rdi
    00001355: 	movb	$0x0, 0x58(%rsp)
    0000135a: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 4954
    0000135f: 	movl	$0x5, %edx
    00001364: 	leaq	DATAat0x1519b(%rip), %rsi
    0000136b: 	movq	%rax, %rdi
    0000136e: 	movq	%rax, %r13
    00001371: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 4977
    00001376: 	leaq	0x57(%rsp), %rsi
    0000137b: 	movl	$0x1, %edx
    00001380: 	movq	%r13, %rdi
    00001383: 	movb	%r14b, 0x57(%rsp)
    00001388: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 5000
    0000138d: 	movq	%rax, %r14
    00001390: 	movq	(%rax), %rax
    00001393: 	movq	-0x18(%rax), %rax
    00001397: 	movq	0xf0(%r14,%rax), %r13
    0000139f: 	testq	%r13, %r13
    000013a2: 	je	.Ltmp1290 # Offset: 5026
    000013a8: 	cmpb	$0x0, 0x38(%r13)
    000013ad: 	je	.Ltmp1291 # Offset: 5037
    000013b3: 	movsbl	0x43(%r13), %esi
.Ltmp1327:
    000013b8: 	movq	%r14, %rdi
    000013bb: 	callq	_ZNSo3putEc@PLT # Offset: 5051
    000013c0: 	movq	%rax, %rdi
    000013c3: 	callq	_ZNSo5flushEv@PLT # Offset: 5059
    000013c8: 	movl	iterations(%rip), %esi
.Ltmp1289:
    000013ce: 	addl	$0x1, 0x10(%rsp)
    000013d3: 	movl	0x10(%rsp), %eax
    000013d7: 	cmpl	%esi, %eax
    000013d9: 	jl	.Ltmp1292 # Offset: 5081
.Ltmp1286:
    000013df: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000013e6: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000013ed: 	subq	$0x20, %rax
    000013f1: 	cmpq	%rax, %r14
    000013f4: 	je	.Ltmp1293 # Offset: 5108
    000013fa: 	leaq	0x10(%r14), %rdi
    000013fe: 	movq	0x128(%rsp), %r13
    00001406: 	movq	%rdi, (%r14)
    00001409: 	movq	0x120(%rsp), %rax
    00001411: 	movq	%rax, 0x8(%rsp)
    00001416: 	movq	%rax, %rcx
    00001419: 	addq	%r13, %rax
    0000141c: 	je	.Ltmp1294 # Offset: 5148
    0000141e: 	testq	%rcx, %rcx
    00001421: 	je	.Ltmp1295 # Offset: 5153
.Ltmp1294:
    00001427: 	movq	%r13, 0x58(%rsp)
    0000142c: 	cmpq	$0xf, %r13
    00001430: 	ja	.Ltmp1296 # Offset: 5168
    00001436: 	cmpq	$0x1, %r13
    0000143a: 	jne	.Ltmp1297 # Offset: 5178
    00001440: 	movq	0x8(%rsp), %rax
    00001445: 	movzbl	(%rax), %eax
    00001448: 	movb	%al, 0x10(%r14)
.Ltmp1330:
    0000144c: 	movq	%r13, 0x8(%r14)
    00001450: 	movb	$0x0, (%rdi,%r13)
    00001455: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000145c: 	addq	$0x20, %rax
    00001460: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1332:
    00001467: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000146e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001475: 	je	.Ltmp1298 # Offset: 5237
.Ltmp1329:
    0000147b: 	movq	-0x20(%rax), %r13
    0000147f: 	callq	clock@PLT # Offset: 5247
    00001484: 	pxor	%xmm0, %xmm0
    00001488: 	movq	%rax, end_time(%rip)
    0000148f: 	movq	%r13, %rdi
    00001492: 	subq	start_time(%rip), %rax
    00001499: 	cvtsi2sd	%rax, %xmm0
    0000149e: 	divsd	DATAat0x15758(%rip), %xmm0
    000014a6: 	callq	_Z13record_resultdPKc # Offset: 5286
    000014ab: 	movq	0x120(%rsp), %rdi
    000014b3: 	cmpq	%rbx, %rdi
    000014b6: 	je	.Ltmp1299 # Offset: 5302
    000014b8: 	movq	0x130(%rsp), %rax
    000014c0: 	leaq	0x1(%rax), %rsi
    000014c4: 	callq	_ZdlPvm@PLT # Offset: 5316
.Ltmp1299:
    000014c9: 	leaq	DATAat0x156b8(%rip), %rdx
    000014d0: 	movq	%r12, %rsi
    000014d3: 	movq	%rbp, %rdi
    000014d6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5334
    000014db: 	movq	%rbp, %rdx
    000014de: 	movl	$0x3, %esi
    000014e3: 	movq	%r15, %rdi
    000014e6: 	callq	"_Z29test_loop_2D_flat_chan_revXCYIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 5350
    000014eb: 	movq	0x120(%rsp), %rdi
    000014f3: 	cmpq	%rbx, %rdi
    000014f6: 	je	.Ltmp1300 # Offset: 5366
    000014f8: 	movq	0x130(%rsp), %rax
    00001500: 	leaq	0x1(%rax), %rsi
    00001504: 	callq	_ZdlPvm@PLT # Offset: 5380
.Ltmp1300:
    00001509: 	leaq	DATAat0x156e8(%rip), %rdx
    00001510: 	movq	%r12, %rsi
    00001513: 	movq	%rbp, %rdi
    00001516: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5398
    0000151b: 	movq	%rbp, %rdx
    0000151e: 	movl	$0x3, %esi
    00001523: 	movq	%r15, %rdi
    00001526: 	callq	"_Z29test_loop_2D_flat_chan_revCXYIhEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 5414
    0000152b: 	movq	0x120(%rsp), %rdi
    00001533: 	cmpq	%rbx, %rdi
    00001536: 	je	.Ltmp1301 # Offset: 5430
    00001538: 	movq	0x130(%rsp), %rax
    00001540: 	leaq	0x1(%rax), %rsi
    00001544: 	callq	_ZdlPvm@PLT # Offset: 5444
.Ltmp1301:
    00001549: 	leaq	0xe0(%rsp), %rdi
    00001551: 	leaq	DATAat0x15718(%rip), %rdx
    00001558: 	movq	%r12, %rsi
    0000155b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5467
    00001560: 	movl	iterations(%rip), %edx
    00001566: 	movq	0xe0(%rsp), %rdi
    0000156e: 	movl	$0xf42400, %esi
    00001573: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 5491
    00001578: 	movq	%r15, %rdi
    0000157b: 	callq	_ZdaPv@PLT # Offset: 5499
    00001580: 	movl	$0x1138bd2, %edi
    00001585: 	callq	_Znam@PLT # Offset: 5509
    0000158a: 	movl	$0xea5a, %edi
    0000158f: 	movq	%rax, %r13
    00001592: 	callq	_Znam@PLT # Offset: 5522
    00001597: 	cvttsd2si	init_value(%rip), %esi
    0000159f: 	movq	%rbx, 0x8(%rsp)
    000015a4: 	movq	%rax, %r15
    000015a7: 	movq	%r13, %rcx
    000015aa: 	leaq	0x1138bd2(%r13), %r14
    000015b1: 	movzbl	%sil, %esi
    000015b5: 	movl	%esi, %ebx
.Ltmp1302:
    000015b7: 	movq	%rcx, %rdi
    000015ba: 	movl	$0xe8ce, %edx
    000015bf: 	movl	%ebx, %esi
    000015c1: 	callq	memset@PLT # Offset: 5569
    000015c6: 	movq	%rax, %rcx
    000015c9: 	addq	$0xe8ce, %rcx
    000015d0: 	cmpq	%rcx, %r14
    000015d3: 	jne	.Ltmp1302 # Offset: 5587
    000015d5: 	movl	%ebx, %esi
    000015d7: 	movl	$0xea5a, %edx
    000015dc: 	movq	%r15, %rdi
    000015df: 	movq	0x8(%rsp), %rbx
    000015e4: 	callq	memset@PLT # Offset: 5604
    000015e9: 	leaq	DATAat0x15278(%rip), %rdx
    000015f0: 	movq	%r12, %rsi
    000015f3: 	movq	%rbp, %rdi
    000015f6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5622
    000015fb: 	movq	%rbp, %rdx
    000015fe: 	movq	%r15, %rsi
    00001601: 	movq	%r13, %rdi
    00001604: 	callq	_Z16test_loop_3D_ZYXIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5636
    00001609: 	movq	0x120(%rsp), %rdi
    00001611: 	cmpq	%rbx, %rdi
    00001614: 	je	.Ltmp1303 # Offset: 5652
    00001616: 	movq	0x130(%rsp), %rax
    0000161e: 	leaq	0x1(%rax), %rsi
    00001622: 	callq	_ZdlPvm@PLT # Offset: 5666
.Ltmp1303:
    00001627: 	leaq	DATAat0x15291(%rip), %rdx
    0000162e: 	movq	%r12, %rsi
    00001631: 	movq	%rbp, %rdi
    00001634: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5684
    00001639: 	movq	%rbp, %rdx
    0000163c: 	movq	%r15, %rsi
    0000163f: 	movq	%r13, %rdi
    00001642: 	callq	_Z16test_loop_3D_ZXYIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5698
    00001647: 	movq	0x120(%rsp), %rdi
    0000164f: 	cmpq	%rbx, %rdi
    00001652: 	je	.Ltmp1304 # Offset: 5714
    00001654: 	movq	0x130(%rsp), %rax
    0000165c: 	leaq	0x1(%rax), %rsi
    00001660: 	callq	_ZdlPvm@PLT # Offset: 5728
.Ltmp1304:
    00001665: 	leaq	DATAat0x152aa(%rip), %rdx
    0000166c: 	movq	%r12, %rsi
    0000166f: 	movq	%rbp, %rdi
    00001672: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5746
    00001677: 	movq	%rbp, %rdx
    0000167a: 	movq	%r15, %rsi
    0000167d: 	movq	%r13, %rdi
    00001680: 	callq	_Z16test_loop_3D_YZXIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5760
    00001685: 	movq	0x120(%rsp), %rdi
    0000168d: 	cmpq	%rbx, %rdi
    00001690: 	je	.Ltmp1305 # Offset: 5776
    00001692: 	movq	0x130(%rsp), %rax
    0000169a: 	leaq	0x1(%rax), %rsi
    0000169e: 	callq	_ZdlPvm@PLT # Offset: 5790
.Ltmp1305:
    000016a3: 	leaq	DATAat0x152c3(%rip), %rdx
    000016aa: 	movq	%r12, %rsi
    000016ad: 	movq	%rbp, %rdi
    000016b0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5808
    000016b5: 	movq	%rbp, %rdx
    000016b8: 	movq	%r15, %rsi
    000016bb: 	movq	%r13, %rdi
    000016be: 	callq	_Z16test_loop_3D_YXZIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5822
    000016c3: 	movq	0x120(%rsp), %rdi
    000016cb: 	cmpq	%rbx, %rdi
    000016ce: 	je	.Ltmp1306 # Offset: 5838
    000016d0: 	movq	0x130(%rsp), %rax
    000016d8: 	leaq	0x1(%rax), %rsi
    000016dc: 	callq	_ZdlPvm@PLT # Offset: 5852
.Ltmp1306:
    000016e1: 	leaq	DATAat0x152dc(%rip), %rdx
    000016e8: 	movq	%r12, %rsi
    000016eb: 	movq	%rbp, %rdi
    000016ee: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5870
    000016f3: 	movq	%rbp, %rdx
    000016f6: 	movq	%r15, %rsi
    000016f9: 	movq	%r13, %rdi
    000016fc: 	callq	_Z16test_loop_3D_XYZIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5884
    00001701: 	movq	0x120(%rsp), %rdi
    00001709: 	cmpq	%rbx, %rdi
    0000170c: 	je	.Ltmp1307 # Offset: 5900
    0000170e: 	movq	0x130(%rsp), %rax
    00001716: 	leaq	0x1(%rax), %rsi
    0000171a: 	callq	_ZdlPvm@PLT # Offset: 5914
.Ltmp1307:
    0000171f: 	leaq	DATAat0x152f5(%rip), %rdx
    00001726: 	movq	%r12, %rsi
    00001729: 	movq	%rbp, %rdi
    0000172c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5932
    00001731: 	movq	%rbp, %rdx
    00001734: 	movq	%r15, %rsi
    00001737: 	movq	%r13, %rdi
    0000173a: 	callq	_Z16test_loop_3D_XZYIhEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5946
    0000173f: 	movq	0x120(%rsp), %rdi
    00001747: 	cmpq	%rbx, %rdi
    0000174a: 	je	.Ltmp1308 # Offset: 5962
    0000174c: 	movq	0x130(%rsp), %rax
    00001754: 	leaq	0x1(%rax), %rsi
    00001758: 	callq	_ZdlPvm@PLT # Offset: 5976
.Ltmp1308:
    0000175d: 	leaq	DATAat0x1530e(%rip), %r14
    00001764: 	leaq	0x100(%rsp), %rdi
    0000176c: 	movq	%r12, %rsi
    0000176f: 	movq	%r14, %rdx
    00001772: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6002
    00001777: 	movl	iterations(%rip), %edx
    0000177d: 	movq	0x100(%rsp), %rdi
    00001785: 	movl	$0x1138bd2, %esi
    0000178a: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 6026
    0000178f: 	movq	%r13, %rdi
    00001792: 	callq	_ZdaPv@PLT # Offset: 6034
    00001797: 	movq	%r15, %rdi
    0000179a: 	callq	_ZdaPv@PLT # Offset: 6042
    0000179f: 	movl	$0x1fc74d8, %edi
    000017a4: 	callq	_Znam@PLT # Offset: 6052
    000017a9: 	movabsq	$0x101010101010101, %rcx
    000017b3: 	movq	%rax, %r13
    000017b6: 	cvttsd2si	init_value(%rip), %eax
    000017be: 	movq	%r13, %rdx
    000017c1: 	leaq	0x1fc74d8(%r13), %rsi
    000017c8: 	movzbl	%al, %eax
    000017cb: 	imulq	%rcx, %rax
.Ltmp1310:
    000017cf: 	leaq	0x6c788(%rdx), %r8
.Ltmp1309:
    000017d6: 	leaq	0x8(%rdx), %rdi
    000017da: 	movq	%rdx, %rcx
    000017dd: 	movq	%rax, (%rdx)
    000017e0: 	addq	$0x15f8, %rdx
    000017e7: 	andq	$-0x8, %rdi
    000017eb: 	movq	%rax, -0x8(%rdx)
    000017ef: 	subq	%rdi, %rcx
    000017f2: 	addl	$0x15f8, %ecx
    000017f8: 	shrl	$0x3, %ecx
    000017fb: 	rep		stosq	%rax, %es:(%rdi)
    000017fe: 	cmpq	%r8, %rdx
    00001801: 	jne	.Ltmp1309 # Offset: 6145
    00001803: 	cmpq	%rdx, %rsi
    00001806: 	jne	.Ltmp1310 # Offset: 6150
    00001808: 	leaq	DATAat0x15323(%rip), %rdx
    0000180f: 	movq	%r12, %rsi
    00001812: 	movq	%rbp, %rdi
    00001815: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6165
    0000181a: 	movq	%rbp, %rsi
    0000181d: 	movq	%r13, %rdi
    00001820: 	callq	_Z17test_loop_4D_ABCDIhEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 6176
    00001825: 	movq	0x120(%rsp), %rdi
    0000182d: 	cmpq	%rbx, %rdi
    00001830: 	je	.Ltmp1311 # Offset: 6192
    00001832: 	movq	0x130(%rsp), %rax
    0000183a: 	leaq	0x1(%rax), %rsi
    0000183e: 	callq	_ZdlPvm@PLT # Offset: 6206
.Ltmp1311:
    00001843: 	leaq	DATAat0x1533d(%rip), %rdx
    0000184a: 	movq	%r12, %rsi
    0000184d: 	movq	%rbp, %rdi
    00001850: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6224
    00001855: 	movq	%rbp, %rsi
    00001858: 	movq	%r13, %rdi
    0000185b: 	callq	_Z18test_loop_4D_ABCD2IhEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 6235
    00001860: 	movq	0x120(%rsp), %rdi
    00001868: 	cmpq	%rbx, %rdi
    0000186b: 	je	.Ltmp1312 # Offset: 6251
    0000186d: 	movq	0x130(%rsp), %rax
    00001875: 	leaq	0x1(%rax), %rsi
    00001879: 	callq	_ZdlPvm@PLT # Offset: 6265
.Ltmp1312:
    0000187e: 	leaq	DATAat0x15358(%rip), %rdx
    00001885: 	movq	%r12, %rsi
    00001888: 	movq	%rbp, %rdi
    0000188b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6283
    00001890: 	movq	%rbp, %rsi
    00001893: 	movq	%r13, %rdi
    00001896: 	callq	_Z17test_loop_4D_DCBAIhEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 6294
    0000189b: 	movq	0x120(%rsp), %rdi
    000018a3: 	cmpq	%rbx, %rdi
    000018a6: 	je	.Ltmp1313 # Offset: 6310
    000018a8: 	movq	0x130(%rsp), %rax
    000018b0: 	leaq	0x1(%rax), %rsi
    000018b4: 	callq	_ZdlPvm@PLT # Offset: 6324
.Ltmp1313:
    000018b9: 	movq	%r14, %rdx
    000018bc: 	movq	%r12, %rsi
    000018bf: 	movq	%rbp, %rdi
    000018c2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6338
    000018c7: 	movl	iterations(%rip), %edx
    000018cd: 	movq	0x120(%rsp), %rdi
    000018d5: 	movl	$0x1138bd2, %esi
    000018da: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 6362
    000018df: 	movq	%r13, %rdi
    000018e2: 	callq	_ZdaPv@PLT # Offset: 6370
    000018e7: 	movq	0x120(%rsp), %rdi
    000018ef: 	cmpq	%rbx, %rdi
    000018f2: 	je	.Ltmp1314 # Offset: 6386
    000018f4: 	movq	0x130(%rsp), %rax
    000018fc: 	leaq	0x1(%rax), %rsi
    00001900: 	callq	_ZdlPvm@PLT # Offset: 6400
.Ltmp1314:
    00001905: 	movq	0x100(%rsp), %rdi
    0000190d: 	leaq	0x110(%rsp), %rax
    00001915: 	cmpq	%rax, %rdi
    00001918: 	je	.Ltmp1315 # Offset: 6424
    0000191a: 	movq	0x110(%rsp), %rax
    00001922: 	leaq	0x1(%rax), %rsi
    00001926: 	callq	_ZdlPvm@PLT # Offset: 6438
.Ltmp1315:
    0000192b: 	movq	0xe0(%rsp), %rdi
    00001933: 	leaq	0xf0(%rsp), %rax
    0000193b: 	cmpq	%rax, %rdi
    0000193e: 	je	.Ltmp1316 # Offset: 6462
    00001940: 	movq	0xf0(%rsp), %rax
    00001948: 	leaq	0x1(%rax), %rsi
    0000194c: 	callq	_ZdlPvm@PLT # Offset: 6476
.Ltmp1316:
    00001951: 	movq	0xc0(%rsp), %rdi
    00001959: 	leaq	0xd0(%rsp), %rax
    00001961: 	cmpq	%rax, %rdi
    00001964: 	je	.Ltmp1317 # Offset: 6500
    00001966: 	movq	0xd0(%rsp), %rax
    0000196e: 	leaq	0x1(%rax), %rsi
    00001972: 	callq	_ZdlPvm@PLT # Offset: 6514
.Ltmp1317:
    00001977: 	movq	0xa0(%rsp), %rdi
    0000197f: 	leaq	0xb0(%rsp), %rax
    00001987: 	cmpq	%rax, %rdi
    0000198a: 	je	.Ltmp1318 # Offset: 6538
    0000198c: 	movq	0xb0(%rsp), %rax
    00001994: 	leaq	0x1(%rax), %rsi
    00001998: 	callq	_ZdlPvm@PLT # Offset: 6552
.Ltmp1318:
    0000199d: 	movq	0x80(%rsp), %rdi
    000019a5: 	leaq	0x90(%rsp), %rax
    000019ad: 	cmpq	%rax, %rdi
    000019b0: 	je	.Ltmp1319 # Offset: 6576
    000019b2: 	movq	0x90(%rsp), %rax
    000019ba: 	leaq	0x1(%rax), %rsi
    000019be: 	callq	_ZdlPvm@PLT # Offset: 6590
.Ltmp1319:
    000019c3: 	movq	0x60(%rsp), %rdi
    000019c8: 	leaq	0x70(%rsp), %rax
    000019cd: 	cmpq	%rax, %rdi
    000019d0: 	je	.Ltmp1320 # Offset: 6608
    000019d2: 	movq	0x70(%rsp), %rax
    000019d7: 	leaq	0x1(%rax), %rsi
    000019db: 	callq	_ZdlPvm@PLT # Offset: 6619
.Ltmp1320:
    000019e0: 	movq	0x148(%rsp), %rax
    000019e8: 	subq	%fs:0x28, %rax
    000019f1: 	jne	.Ltmp1321 # Offset: 6641
    000019f7: 	addq	$0x158, %rsp
    000019fe: 	popq	%rbx
    000019ff: 	popq	%rbp
    00001a00: 	popq	%r12
    00001a02: 	popq	%r13
    00001a04: 	popq	%r14
    00001a06: 	popq	%r15
    00001a08: 	retq # Offset: 6664
.Ltmp1234:
    00001a09: 	movzbl	%dl, %edi
    00001a0c: 	movq	%rbp, %rsi
    00001a0f: 	callq	"_Z9check_sumIhEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0/1" # Offset: 6671
    00001a14: 	movl	iterations(%rip), %ecx
    00001a1a: 	jmp	.Ltmp1322 # Offset: 6682
.Ltmp1251:
    00001a1f: 	movzbl	%al, %edi
    00001a22: 	movq	%rbp, %rsi
    00001a25: 	callq	"_Z9check_sumIhEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0/1" # Offset: 6693
    00001a2a: 	movl	iterations(%rip), %ecx
    00001a30: 	jmp	.Ltmp1323 # Offset: 6704
.Ltmp1244:
    00001a35: 	movzbl	%dl, %edi
    00001a38: 	movq	%rbp, %rsi
    00001a3b: 	callq	"_Z9check_sumIhEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0/1" # Offset: 6715
    00001a40: 	movl	iterations(%rip), %ecx
    00001a46: 	jmp	.Ltmp1324 # Offset: 6726
.Ltmp1220:
    00001a4b: 	movzbl	%dl, %edi
    00001a4e: 	movq	%rbp, %rsi
    00001a51: 	callq	"_Z9check_sumIhEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.0/1" # Offset: 6737
    00001a56: 	movl	iterations(%rip), %ecx
    00001a5c: 	jmp	.Ltmp1325 # Offset: 6748
.Ltmp1270:
    00001a61: 	movq	%r13, %rdi
    00001a64: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 6756
    00001a69: 	movq	(%r13), %rax
    00001a6d: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00001a74: 	movl	$0xa, %esi
    00001a79: 	movq	0x30(%rax), %rax
    00001a7d: 	cmpq	%rdx, %rax
    00001a80: 	je	.Ltmp1326 # Offset: 6784
    00001a86: 	movq	%r13, %rdi
    00001a89: 	callq	*%rax # Offset: 6793
    00001a8b: 	movsbl	%al, %esi
    00001a8e: 	jmp	.Ltmp1326 # Offset: 6798
.Ltmp1291:
    00001a93: 	movq	%r13, %rdi
    00001a96: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 6806
    00001a9b: 	movq	(%r13), %rax
    00001a9f: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    00001aa6: 	movl	$0xa, %esi
    00001aab: 	movq	0x30(%rax), %rax
    00001aaf: 	cmpq	%rdx, %rax
    00001ab2: 	je	.Ltmp1327 # Offset: 6834
    00001ab8: 	movq	%r13, %rdi
    00001abb: 	callq	*%rax # Offset: 6843
    00001abd: 	movsbl	%al, %esi
    00001ac0: 	jmp	.Ltmp1327 # Offset: 6848
.Ltmp1214:
    00001ac5: 	movq	-0x8(%rdx), %rax
    00001ac9: 	addq	$0x200, %rax
    00001acf: 	jmp	.Ltmp1328 # Offset: 6863
.Ltmp1298:
    00001ad4: 	movq	-0x8(%rdx), %rax
    00001ad8: 	addq	$0x200, %rax
    00001ade: 	jmp	.Ltmp1329 # Offset: 6878
.Ltmp1296:
    00001ae3: 	leaq	0x58(%rsp), %rsi
    00001ae8: 	xorl	%edx, %edx
    00001aea: 	movq	%r14, %rdi
    00001aed: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6893
    00001af2: 	movq	%rax, (%r14)
    00001af5: 	movq	%rax, %rdi
    00001af8: 	movq	0x58(%rsp), %rax
    00001afd: 	movq	%rax, 0x10(%r14)
.Ltmp1331:
    00001b01: 	movq	0x8(%rsp), %rsi
    00001b06: 	movq	%r13, %rdx
    00001b09: 	callq	memcpy@PLT # Offset: 6921
    00001b0e: 	movq	0x58(%rsp), %r13
    00001b13: 	movq	(%r14), %rdi
    00001b16: 	jmp	.Ltmp1330 # Offset: 6934
.Ltmp1297:
    00001b1b: 	testq	%r13, %r13
    00001b1e: 	je	.Ltmp1330 # Offset: 6942
    00001b24: 	jmp	.Ltmp1331 # Offset: 6948
    00001b26: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1293:
    00001b30: 	movq	%rbp, %rsi
    00001b33: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b3a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6970
    00001b3f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b46: 	jmp	.Ltmp1332 # Offset: 6982
.Ltmp1259:
    00001b4b: 	movq	-0x8(%rdx), %rax
    00001b4f: 	addq	$0x200, %rax
    00001b55: 	jmp	.Ltmp1333 # Offset: 6997
.Ltmp1253:
    00001b5a: 	movq	-0x8(%rdx), %rax
    00001b5e: 	addq	$0x200, %rax
    00001b64: 	jmp	.Ltmp1334 # Offset: 7012
.Ltmp1246:
    00001b69: 	movq	-0x8(%rdx), %rax
    00001b6d: 	addq	$0x200, %rax
    00001b73: 	jmp	.Ltmp1335 # Offset: 7027
.Ltmp1236:
    00001b78: 	movq	-0x8(%rdx), %rax
    00001b7c: 	addq	$0x200, %rax
    00001b82: 	jmp	.Ltmp1336 # Offset: 7042
.Ltmp1229:
    00001b87: 	movq	-0x8(%rdx), %rax
    00001b8b: 	addq	$0x200, %rax
    00001b91: 	jmp	.Ltmp1337 # Offset: 7057
.Ltmp1222:
    00001b96: 	movq	-0x8(%rdx), %rax
    00001b9a: 	addq	$0x200, %rax
    00001ba0: 	jmp	.Ltmp1338 # Offset: 7072
.Ltmp1272:
    00001ba5: 	movq	-0x8(%rdx), %rax
    00001ba9: 	addq	$0x200, %rax
    00001baf: 	jmp	.Ltmp1339 # Offset: 7087
.Ltmp1280:
    00001bb4: 	movq	-0x8(%rdx), %rax
    00001bb8: 	addq	$0x200, %rax
    00001bbe: 	jmp	.Ltmp1340 # Offset: 7102
.Ltmp1290:
    00001bc3: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 7107
.Ltmp1295:
    00001bc8: 	leaq	DATAat0x15110(%rip), %rdi
    00001bcf: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7119
.Ltmp1269:
    00001bd4: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 7124
.Ltmp1321:
    00001bd9: 	callq	__stack_chk_fail@PLT # Offset: 7129
    00001bde: 	endbr64
    00001be2: 	movq	%rax, %rbp
    00001be5: 	jmp	.Ltmp1341 # Offset: 7141
    00001be7: 	endbr64
.Ltmp1351:
    00001beb: 	movq	%rax, %rbp
    00001bee: 	jmp	.Ltmp1342 # Offset: 7150
.Ltmp1341:
    00001bf0: 	movq	0x120(%rsp), %rdi
    00001bf8: 	leaq	0x130(%rsp), %rax
    00001c00: 	cmpq	%rax, %rdi
    00001c03: 	je	.Ltmp1343 # Offset: 7171
.Ltmp1359:
    00001c05: 	movq	0x130(%rsp), %rax
    00001c0d: 	leaq	0x1(%rax), %rsi
    00001c11: 	callq	_ZdlPvm@PLT # Offset: 7185
.Ltmp1343:
    00001c16: 	movq	0x60(%rsp), %rdi
    00001c1b: 	leaq	0x70(%rsp), %rax
    00001c20: 	cmpq	%rax, %rdi
    00001c23: 	je	.Ltmp1344 # Offset: 7203
    00001c25: 	movq	0x70(%rsp), %rax
    00001c2a: 	leaq	0x1(%rax), %rsi
    00001c2e: 	callq	_ZdlPvm@PLT # Offset: 7214
.Ltmp1344:
    00001c33: 	movq	%rbp, %rdi
    00001c36: 	callq	_Unwind_Resume@PLT # Offset: 7222
.Ltmp1342:
    00001c3b: 	movq	0x120(%rsp), %rdi
    00001c43: 	cmpq	%rbx, %rdi
    00001c46: 	je	.Ltmp1345 # Offset: 7238
    00001c48: 	movq	0x130(%rsp), %rax
    00001c50: 	leaq	0x1(%rax), %rsi
    00001c54: 	callq	_ZdlPvm@PLT # Offset: 7252
.Ltmp1345:
    00001c59: 	movq	0x100(%rsp), %rdi
    00001c61: 	leaq	0x110(%rsp), %rax
    00001c69: 	cmpq	%rax, %rdi
    00001c6c: 	je	.Ltmp1346 # Offset: 7276
    00001c6e: 	movq	0x110(%rsp), %rax
    00001c76: 	leaq	0x1(%rax), %rsi
    00001c7a: 	callq	_ZdlPvm@PLT # Offset: 7290
.Ltmp1346:
    00001c7f: 	movq	0xe0(%rsp), %rdi
    00001c87: 	leaq	0xf0(%rsp), %rax
    00001c8f: 	cmpq	%rax, %rdi
    00001c92: 	je	.Ltmp1347 # Offset: 7314
    00001c94: 	movq	0xf0(%rsp), %rax
    00001c9c: 	leaq	0x1(%rax), %rsi
    00001ca0: 	callq	_ZdlPvm@PLT # Offset: 7328
.Ltmp1347:
    00001ca5: 	movq	0xc0(%rsp), %rdi
    00001cad: 	leaq	0xd0(%rsp), %rax
    00001cb5: 	cmpq	%rax, %rdi
    00001cb8: 	je	.Ltmp1348 # Offset: 7352
    00001cba: 	movq	0xd0(%rsp), %rax
    00001cc2: 	leaq	0x1(%rax), %rsi
    00001cc6: 	callq	_ZdlPvm@PLT # Offset: 7366
.Ltmp1348:
    00001ccb: 	movq	0xa0(%rsp), %rdi
    00001cd3: 	leaq	0xb0(%rsp), %rax
    00001cdb: 	cmpq	%rax, %rdi
    00001cde: 	je	.Ltmp1349 # Offset: 7390
    00001ce0: 	movq	0xb0(%rsp), %rax
    00001ce8: 	leaq	0x1(%rax), %rsi
    00001cec: 	callq	_ZdlPvm@PLT # Offset: 7404
.Ltmp1349:
    00001cf1: 	movq	0x80(%rsp), %rdi
    00001cf9: 	leaq	0x90(%rsp), %rax
    00001d01: 	cmpq	%rax, %rdi
    00001d04: 	je	.Ltmp1343 # Offset: 7428
    00001d0a: 	movq	0x90(%rsp), %rax
    00001d12: 	leaq	0x1(%rax), %rsi
    00001d16: 	callq	_ZdlPvm@PLT # Offset: 7446
    00001d1b: 	jmp	.Ltmp1343 # Offset: 7451
    00001d20: 	endbr64
.Ltmp1356:
    00001d24: 	movq	%rax, %rbp
    00001d27: 	jmp	.Ltmp1350 # Offset: 7463
    00001d29: 	endbr64
    00001d2d: 	jmp	.Ltmp1351 # Offset: 7469
    00001d32: 	endbr64
    00001d36: 	movq	%rax, %rbp
    00001d39: 	jmp	.Ltmp1346 # Offset: 7481
    00001d3e: 	endbr64
    00001d42: 	jmp	.Ltmp1351 # Offset: 7490
.Ltmp1350:
    00001d47: 	movq	0x120(%rsp), %rdi
    00001d4f: 	cmpq	%rbx, %rdi
    00001d52: 	je	.Ltmp1349 # Offset: 7506
    00001d54: 	movq	0x130(%rsp), %rax
    00001d5c: 	leaq	0x1(%rax), %rsi
    00001d60: 	callq	_ZdlPvm@PLT # Offset: 7520
    00001d65: 	jmp	.Ltmp1349 # Offset: 7525
    00001d67: 	endbr64
    00001d6b: 	movq	%rax, %rbp
    00001d6e: 	jmp	.Ltmp1343 # Offset: 7534
    00001d73: 	endbr64
.Ltmp1355:
    00001d77: 	movq	%rax, %rbp
    00001d7a: 	jmp	.Ltmp1352 # Offset: 7546
    00001d7c: 	endbr64
.Ltmp1354:
    00001d80: 	movq	%rax, %rbp
    00001d83: 	jmp	.Ltmp1353 # Offset: 7555
.Ltmp1352:
    00001d85: 	movq	0x120(%rsp), %rdi
    00001d8d: 	cmpq	%rbx, %rdi
    00001d90: 	je	.Ltmp1347 # Offset: 7568
    00001d96: 	movq	0x130(%rsp), %rax
    00001d9e: 	leaq	0x1(%rax), %rsi
    00001da2: 	callq	_ZdlPvm@PLT # Offset: 7586
    00001da7: 	jmp	.Ltmp1347 # Offset: 7591
.Ltmp1353:
    00001dac: 	movq	0x120(%rsp), %rdi
    00001db4: 	cmpq	%rbx, %rdi
    00001db7: 	je	.Ltmp1348 # Offset: 7607
    00001dbd: 	movq	0x130(%rsp), %rax
    00001dc5: 	leaq	0x1(%rax), %rsi
    00001dc9: 	callq	_ZdlPvm@PLT # Offset: 7625
    00001dce: 	jmp	.Ltmp1348 # Offset: 7630
    00001dd3: 	endbr64
    00001dd7: 	jmp	.Ltmp1354 # Offset: 7639
    00001dd9: 	endbr64
    00001ddd: 	jmp	.Ltmp1354 # Offset: 7645
    00001ddf: 	endbr64
    00001de3: 	jmp	.Ltmp1355 # Offset: 7651
    00001de5: 	endbr64
    00001de9: 	jmp	.Ltmp1356 # Offset: 7657
    00001dee: 	endbr64
    00001df2: 	movq	%rax, %rbp
    00001df5: 	jmp	.Ltmp1349 # Offset: 7669
    00001dfa: 	endbr64
    00001dfe: 	jmp	.Ltmp1356 # Offset: 7678
    00001e03: 	endbr64
.Ltmp1358:
    00001e07: 	movq	%rax, %rbp
    00001e0a: 	jmp	.Ltmp1357 # Offset: 7690
    00001e0c: 	endbr64
    00001e10: 	jmp	.Ltmp1358 # Offset: 7696
    00001e12: 	endbr64
    00001e16: 	movq	%rax, %rbp
    00001e19: 	jmp	.Ltmp1347 # Offset: 7705
    00001e1e: 	endbr64
    00001e22: 	jmp	.Ltmp1354 # Offset: 7714
.Ltmp1357:
    00001e27: 	movq	0x120(%rsp), %rdi
    00001e2f: 	cmpq	%rbx, %rdi
    00001e32: 	jne	.Ltmp1359 # Offset: 7730
    00001e38: 	jmp	.Ltmp1343 # Offset: 7736
    00001e3d: 	endbr64
    00001e41: 	jmp	.Ltmp1354 # Offset: 7745
    00001e46: 	endbr64
    00001e4a: 	jmp	.Ltmp1355 # Offset: 7754
    00001e4f: 	endbr64
    00001e53: 	jmp	.Ltmp1355 # Offset: 7763
    00001e58: 	endbr64
.Ltmp1361:
    00001e5c: 	movq	%rax, %rbp
    00001e5f: 	jmp	.Ltmp1360 # Offset: 7775
    00001e64: 	endbr64
    00001e68: 	jmp	.Ltmp1361 # Offset: 7784
    00001e6a: 	endbr64
    00001e6e: 	jmp	.Ltmp1354 # Offset: 7790
    00001e73: 	endbr64
    00001e77: 	jmp	.Ltmp1355 # Offset: 7799
    00001e7c: 	endbr64
    00001e80: 	jmp	.Ltmp1355 # Offset: 7808
    00001e85: 	endbr64
    00001e89: 	jmp	.Ltmp1355 # Offset: 7817
    00001e8e: 	endbr64
    00001e92: 	jmp	.Ltmp1354 # Offset: 7826
    00001e97: 	endbr64
    00001e9b: 	jmp	.Ltmp1354 # Offset: 7835
    00001ea0: 	endbr64
    00001ea4: 	jmp	.Ltmp1355 # Offset: 7844
    00001ea9: 	endbr64
    00001ead: 	jmp	.Ltmp1361 # Offset: 7853
    00001eaf: 	endbr64
    00001eb3: 	jmp	.Ltmp1361 # Offset: 7859
    00001eb5: 	endbr64
    00001eb9: 	jmp	.Ltmp1351 # Offset: 7865
    00001ebe: 	endbr64
    00001ec2: 	movq	%rax, %rbp
    00001ec5: 	jmp	.Ltmp1348 # Offset: 7877
    00001eca: 	endbr64
    00001ece: 	movq	%rax, %rbp
    00001ed1: 	jmp	.Ltmp1345 # Offset: 7889
    00001ed6: 	endbr64
    00001eda: 	jmp	.Ltmp1361 # Offset: 7898
    00001edc: 	endbr64
    00001ee0: 	jmp	.Ltmp1361 # Offset: 7904
.Ltmp1360:
    00001ee5: 	movq	0x120(%rsp), %rdi
    00001eed: 	cmpq	%rbx, %rdi
    00001ef0: 	je	.Ltmp1346 # Offset: 7920
    00001ef6: 	movq	0x130(%rsp), %rax
    00001efe: 	leaq	0x1(%rax), %rsi
    00001f02: 	callq	_ZdlPvm@PLT # Offset: 7938
    00001f07: 	jmp	.Ltmp1346 # Offset: 7943
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIhEvv"

Binary Function "_Z29test_loop_2D_flat_chan_revXCYIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z29test_loop_2D_flat_chan_revXCYIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z29test_loop_2D_flat_chan_revXCYIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/loop_interchange.cpp/1
  Number      : 99
  State       : disassembled
  Address     : 0x12cd0
  Size        : 0x3b5
  MaxSize     : 0x3c0
  Offset      : 0x12cd0
  Section     : .text
  Orc Section : .local.text._Z29test_loop_2D_flat_chan_revXCYIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB098:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	movl	%esi, %r13d
    00000009: 	pushq	%r12
    0000000b: 	movq	%rdi, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	movq	%rdx, %rbp
    00000012: 	pushq	%rbx
    00000013: 	subq	$0x38, %rsp
    00000017: 	movq	%fs:0x28, %rax
    00000020: 	movq	%rax, 0x28(%rsp)
    00000025: 	xorl	%eax, %eax
    00000027: 	callq	clock@PLT # Offset: 39
    0000002c: 	movl	iterations(%rip), %r9d
    00000033: 	movq	%rax, start_time(%rip)
    0000003a: 	testl	%r9d, %r9d
    0000003d: 	jle	.Ltmp1362 # Offset: 61
    00000043: 	movslq	%r13d, %rax
    00000046: 	imulq	$0x3d0900, %rax, %rax
    0000004d: 	testq	%rax, %rax
    00000050: 	js	.Ltmp1363 # Offset: 80
    00000056: 	pxor	%xmm5, %xmm5
    0000005a: 	cvtsi2sd	%rax, %xmm5
    0000005f: 	movsd	%xmm5, (%rsp)
.Ltmp1383:
    00000064: 	leaq	0x7a12000(%r12), %rax
    0000006c: 	xorl	%ebx, %ebx
    0000006e: 	pxor	%xmm2, %xmm2
    00000072: 	movq	%rax, 0x8(%rsp)
    00000077: 	leaq	DATAat0x15182(%rip), %r15
    0000007e: 	leaq	_ZSt4cout@GLIBCXX_3.4(%rip), %r12
.Ltmp1370:
    00000085: 	movq	0x8(%rsp), %rdi
    0000008a: 	xorl	%esi, %esi
    0000008c: 	movapd	%xmm2, %xmm1
.Ltmp1367:
    00000090: 	movq	%rdi, %rdx
    00000093: 	movapd	%xmm2, %xmm0
    00000097: 	xorl	%ecx, %ecx
    00000099: 	testl	%r13d, %r13d
    0000009c: 	jle	.Ltmp1364 # Offset: 156
    0000009e: 	nop # Size: 2
.Ltmp1366:
    000000a0: 	leaq	-0x7a12000(%rdx), %rax
    000000a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1365:
    000000b0: 	addsd	(%rax), %xmm0
    000000b4: 	addq	$0x7d00, %rax
    000000ba: 	cmpq	%rax, %rdx
    000000bd: 	jne	.Ltmp1365 # Offset: 189
    000000bf: 	addl	$0x1, %ecx
    000000c2: 	addq	$0x8, %rdx
    000000c6: 	cmpl	%r13d, %ecx
    000000c9: 	jne	.Ltmp1366 # Offset: 201
.Ltmp1364:
    000000cb: 	addq	$0x4, %rsi
    000000cf: 	addsd	%xmm0, %xmm1
    000000d3: 	addq	$0x20, %rdi
    000000d7: 	cmpq	$0xfa0, %rsi
    000000de: 	jne	.Ltmp1367 # Offset: 222
    000000e0: 	movsd	(%rsp), %xmm3
    000000e5: 	movapd	%xmm1, %xmm4
    000000e9: 	movapd	%xmm1, %xmm0
    000000ed: 	andpd	DATAat0x15790(%rip), %xmm4
    000000f5: 	mulsd	init_value(%rip), %xmm3
    000000fd: 	comisd	DATAat0x15770(%rip), %xmm4
    00000105: 	subsd	%xmm3, %xmm0
    00000109: 	jbe	.Ltmp1368 # Offset: 265
    0000010b: 	divsd	%xmm1, %xmm0
.Ltmp1368:
    0000010f: 	andpd	DATAat0x15790(%rip), %xmm0
    00000117: 	movsd	DATAat0x15778(%rip), %xmm6
    0000011f: 	comisd	%xmm0, %xmm6
    00000123: 	jbe	.Ltmp1369 # Offset: 291
.Ltmp1380:
    00000129: 	addl	$0x1, %ebx
    0000012c: 	cmpl	%r9d, %ebx
    0000012f: 	jl	.Ltmp1370 # Offset: 303
.Ltmp1362:
    00000135: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000013c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000143: 	subq	$0x20, %rax
    00000147: 	cmpq	%rax, %rbx
    0000014a: 	je	.Ltmp1371 # Offset: 330
    00000150: 	leaq	0x10(%rbx), %rdi
    00000154: 	movq	0x8(%rbp), %r12
    00000158: 	movq	%rdi, (%rbx)
    0000015b: 	movq	(%rbp), %r13
    0000015f: 	movq	%r13, %rax
    00000162: 	addq	%r12, %rax
    00000165: 	je	.Ltmp1372 # Offset: 357
    00000167: 	testq	%r13, %r13
    0000016a: 	je	.Ltmp1373 # Offset: 362
.Ltmp1372:
    00000170: 	movq	%r12, 0x20(%rsp)
    00000175: 	cmpq	$0xf, %r12
    00000179: 	ja	.Ltmp1374 # Offset: 377
    0000017f: 	cmpq	$0x1, %r12
    00000183: 	jne	.Ltmp1375 # Offset: 387
    00000189: 	movzbl	(%r13), %eax
    0000018e: 	movb	%al, 0x10(%rbx)
.Ltmp1384:
    00000191: 	movq	%r12, 0x8(%rbx)
    00000195: 	movb	$0x0, (%rdi,%r12)
    0000019a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001a1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001a8: 	addq	$0x20, %rax
    000001ac: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001b3: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001ba: 	je	.Ltmp1376 # Offset: 442
.Ltmp1382:
    000001c0: 	movq	-0x20(%rax), %rbp
    000001c4: 	callq	clock@PLT # Offset: 452
    000001c9: 	movq	%rax, end_time(%rip)
    000001d0: 	movq	0x28(%rsp), %rdx
    000001d5: 	subq	%fs:0x28, %rdx
    000001de: 	jne	.Ltmp1377 # Offset: 478
    000001e4: 	subq	start_time(%rip), %rax
    000001eb: 	pxor	%xmm0, %xmm0
    000001ef: 	movq	%rbp, %rdi
    000001f2: 	cvtsi2sd	%rax, %xmm0
    000001f7: 	divsd	DATAat0x15758(%rip), %xmm0
    000001ff: 	addq	$0x38, %rsp
    00000203: 	popq	%rbx
    00000204: 	popq	%rbp
    00000205: 	popq	%r12
    00000207: 	popq	%r13
    00000209: 	popq	%r14
    0000020b: 	popq	%r15
    0000020d: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 525
.Ltmp1369:
    00000212: 	movl	$0x5, %edx
    00000217: 	movq	%r15, %rsi
    0000021a: 	movq	%r12, %rdi
    0000021d: 	movsd	%xmm1, 0x10(%rsp)
    00000223: 	movsd	%xmm3, 0x18(%rsp)
    00000229: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 553
    0000022e: 	movq	0x8(%rbp), %rdx
    00000232: 	movq	(%rbp), %rsi
    00000236: 	movq	%r12, %rdi
    00000239: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 569
    0000023e: 	movl	$0x12, %edx
    00000243: 	leaq	DATAat0x15188(%rip), %rsi
    0000024a: 	movq	%rax, %rdi
    0000024d: 	movq	%rax, %r14
    00000250: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 592
    00000255: 	movsd	0x18(%rsp), %xmm3
    0000025b: 	movq	%r14, %rdi
    0000025e: 	movapd	%xmm3, %xmm0
    00000262: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 610
    00000267: 	movl	$0x5, %edx
    0000026c: 	leaq	DATAat0x1519b(%rip), %rsi
    00000273: 	movq	%rax, %rdi
    00000276: 	movq	%rax, %r14
    00000279: 	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT # Offset: 633
    0000027e: 	movsd	0x10(%rsp), %xmm1
    00000284: 	movq	%r14, %rdi
    00000287: 	movapd	%xmm1, %xmm0
    0000028b: 	callq	_ZNSo9_M_insertIdEERSoT_@PLT # Offset: 651
    00000290: 	movq	%rax, %r14
    00000293: 	movq	(%rax), %rax
    00000296: 	movq	-0x18(%rax), %rax
    0000029a: 	movq	0xf0(%r14,%rax), %rdi
    000002a2: 	testq	%rdi, %rdi
    000002a5: 	je	.Ltmp1378 # Offset: 677
    000002ab: 	cmpb	$0x0, 0x38(%rdi)
    000002af: 	je	.Ltmp1379 # Offset: 687
    000002b1: 	movsbl	0x43(%rdi), %esi
.Ltmp1381:
    000002b5: 	movq	%r14, %rdi
    000002b8: 	callq	_ZNSo3putEc@PLT # Offset: 696
    000002bd: 	movq	%rax, %rdi
    000002c0: 	callq	_ZNSo5flushEv@PLT # Offset: 704
    000002c5: 	movl	iterations(%rip), %r9d
    000002cc: 	pxor	%xmm2, %xmm2
    000002d0: 	jmp	.Ltmp1380 # Offset: 720
.Ltmp1379:
    000002d5: 	movq	%rdi, 0x10(%rsp)
    000002da: 	callq	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT # Offset: 730
    000002df: 	movq	0x10(%rsp), %rdi
    000002e4: 	movl	$0xa, %esi
    000002e9: 	leaq	_ZNKSt5ctypeIcE8do_widenEc(%rip), %rdx
    000002f0: 	movq	(%rdi), %rax
    000002f3: 	movq	0x30(%rax), %rax
    000002f7: 	cmpq	%rdx, %rax
    000002fa: 	je	.Ltmp1381 # Offset: 762
    000002fc: 	callq	*%rax # Offset: 764
    000002fe: 	movsbl	%al, %esi
    00000301: 	jmp	.Ltmp1381 # Offset: 769
.Ltmp1371:
    00000303: 	movq	%rbp, %rsi
    00000306: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000030d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 781
    00000312: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000319: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000320: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000327: 	jne	.Ltmp1382 # Offset: 807
.Ltmp1376:
    0000032d: 	movq	-0x8(%rdx), %rax
    00000331: 	addq	$0x200, %rax
    00000337: 	jmp	.Ltmp1382 # Offset: 823
.Ltmp1363:
    0000033c: 	shrq	%rax
    0000033f: 	pxor	%xmm0, %xmm0
    00000343: 	cvtsi2sd	%rax, %xmm0
    00000348: 	addsd	%xmm0, %xmm0
    0000034c: 	movsd	%xmm0, (%rsp)
    00000351: 	jmp	.Ltmp1383 # Offset: 849
.Ltmp1375:
    00000356: 	testq	%r12, %r12
    00000359: 	je	.Ltmp1384 # Offset: 857
    0000035f: 	jmp	.Ltmp1385 # Offset: 863
    00000361: 	nopl	(%rax) # Size: 7
.Ltmp1374:
    00000368: 	movq	%rbx, %rdi
    0000036b: 	leaq	0x20(%rsp), %rsi
    00000370: 	xorl	%edx, %edx
    00000372: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 882
    00000377: 	movq	%rax, (%rbx)
    0000037a: 	movq	%rax, %rdi
    0000037d: 	movq	0x20(%rsp), %rax
    00000382: 	movq	%rax, 0x10(%rbx)
.Ltmp1385:
    00000386: 	movq	%r12, %rdx
    00000389: 	movq	%r13, %rsi
    0000038c: 	callq	memcpy@PLT # Offset: 908
    00000391: 	movq	0x20(%rsp), %r12
    00000396: 	movq	(%rbx), %rdi
    00000399: 	jmp	.Ltmp1384 # Offset: 921
.Ltmp1377:
    0000039e: 	callq	__stack_chk_fail@PLT # Offset: 926
.Ltmp1373:
    000003a3: 	leaq	DATAat0x15110(%rip), %rdi
    000003aa: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 938
    000003af: 	nop # Size: 1
.Ltmp1378:
    000003b0: 	callq	_ZSt16__throw_bad_castv@PLT # Offset: 944
DWARF CFI Instructions:
    <empty>
End of Function "_Z29test_loop_2D_flat_chan_revXCYIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z11TestOneTypeIdEvv" after disassembly {
  Number      : 100
  State       : disassembled
  Address     : 0x13090
  Size        : 0x177d
  MaxSize     : 0x177d
  Offset      : 0x13090
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIdEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB099:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	leaq	DATAat0x15741(%rip), %rsi
    0000000d: 	pushq	%r14
    0000000f: 	pushq	%r13
    00000011: 	pushq	%r12
    00000013: 	pushq	%rbp
    00000014: 	pushq	%rbx
    00000015: 	subq	$0x148, %rsp
    0000001c: 	movq	%fs:0x28, %rax
    00000025: 	movq	%rax, 0x138(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	leaq	0x50(%rsp), %r12
    00000034: 	movq	%r12, %rdi
    00000037: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 55
    0000003c: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    00000044: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm5
    0000004c: 	movq	"_ZL7gLabels/1"+72(%rip), %rcx
    00000053: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000005a: 	movhlps	%xmm4, %xmm3
    0000005d: 	movq	"_ZL7gLabels/1"+56(%rip), %rbp
    00000064: 	movaps	%xmm5, 0x10(%rsp)
    00000069: 	movq	%xmm5, %rbx
    0000006e: 	movq	%xmm3, %r8
    00000073: 	movaps	%xmm4, (%rsp)
    00000077: 	movq	%xmm4, %r15
    0000007c: 	leaq	0x8(%r8), %r13
    00000080: 	cmpq	%r13, %rcx
    00000083: 	jbe	.Ltmp1386 # Offset: 131
    00000085: 	movq	%r13, %rdx
.Ltmp1389:
    00000088: 	movq	(%rdx), %rax
    0000008b: 	leaq	0x200(%rax), %r9
.Ltmp1388:
    00000092: 	movq	(%rax), %rdi
    00000095: 	leaq	0x10(%rax), %rsi
    00000099: 	cmpq	%rsi, %rdi
    0000009c: 	je	.Ltmp1387 # Offset: 156
    000000a2: 	movq	%rcx, 0x30(%rsp)
    000000a7: 	movq	0x10(%rax), %rcx
    000000ab: 	movq	%r8, 0x48(%rsp)
    000000b0: 	leaq	0x1(%rcx), %rsi
    000000b4: 	movq	%r9, 0x40(%rsp)
    000000b9: 	movq	%rdx, 0x38(%rsp)
    000000be: 	movq	%rax, 0x28(%rsp)
    000000c3: 	callq	_ZdlPvm@PLT # Offset: 195
    000000c8: 	movq	0x28(%rsp), %rax
    000000cd: 	movq	0x40(%rsp), %r9
    000000d2: 	movq	0x30(%rsp), %rcx
    000000d7: 	movq	0x38(%rsp), %rdx
    000000dc: 	addq	$0x20, %rax
    000000e0: 	movq	0x48(%rsp), %r8
    000000e5: 	cmpq	%r9, %rax
    000000e8: 	jne	.Ltmp1388 # Offset: 232
    000000ea: 	addq	$0x8, %rdx
    000000ee: 	cmpq	%rdx, %rcx
    000000f1: 	ja	.Ltmp1389 # Offset: 241
.Ltmp1386:
    000000f3: 	cmpq	%r8, %rcx
    000000f6: 	je	.Ltmp1390 # Offset: 246
.Ltmp1402:
    000000fc: 	cmpq	%r15, %rbx
    000000ff: 	je	.Ltmp1391 # Offset: 255
.Ltmp1393:
    00000101: 	movq	(%rbx), %rdi
    00000104: 	leaq	0x10(%rbx), %rax
    00000108: 	cmpq	%rax, %rdi
    0000010b: 	je	.Ltmp1392 # Offset: 267
    00000111: 	movq	0x10(%rbx), %rax
    00000115: 	addq	$0x20, %rbx
    00000119: 	leaq	0x1(%rax), %rsi
    0000011d: 	callq	_ZdlPvm@PLT # Offset: 285
    00000122: 	cmpq	%r15, %rbx
    00000125: 	jne	.Ltmp1393 # Offset: 293
.Ltmp1391:
    00000127: 	cmpq	%rbp, %r14
    0000012a: 	je	.Ltmp1394 # Offset: 298
.Ltmp1396:
    0000012c: 	movq	(%rbp), %rdi
    00000130: 	leaq	0x10(%rbp), %rax
    00000134: 	cmpq	%rax, %rdi
    00000137: 	je	.Ltmp1395 # Offset: 311
    0000013d: 	movq	0x10(%rbp), %rax
    00000141: 	addq	$0x20, %rbp
    00000145: 	leaq	0x1(%rax), %rsi
    00000149: 	callq	_ZdlPvm@PLT # Offset: 329
    0000014e: 	cmpq	%rbp, %r14
    00000151: 	jne	.Ltmp1396 # Offset: 337
.Ltmp1394:
    00000153: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    0000015a: 	leaq	0x8(%rax), %rbx
    0000015e: 	cmpq	%r13, %rbx
    00000161: 	jbe	.Ltmp1397 # Offset: 353
.Ltmp1398:
    00000163: 	movq	(%r13), %rdi
    00000167: 	movl	$0x200, %esi
    0000016c: 	addq	$0x8, %r13
    00000170: 	callq	_ZdlPvm@PLT # Offset: 368
    00000175: 	cmpq	%r13, %rbx
    00000178: 	ja	.Ltmp1398 # Offset: 376
.Ltmp1397:
    0000017a: 	movdqa	0x10(%rsp), %xmm6
    00000180: 	movdqa	(%rsp), %xmm7
    00000185: 	movl	$0x7a12000, %edi
    0000018a: 	movaps	%xmm6, "_ZL7gLabels/1"+48(%rip)
    00000191: 	movaps	%xmm7, "_ZL7gLabels/1"+64(%rip)
    00000198: 	callq	_Znam@PLT # Offset: 408
    0000019d: 	movsd	init_value(%rip), %xmm0
    000001a5: 	movq	%rax, %r13
    000001a8: 	leaq	0x7a12000(%rax), %r15
    000001af: 	unpcklpd	%xmm0, %xmm0
.Ltmp1401:
    000001b3: 	leaq	0x7d00(%rax), %rdx
.Ltmp1399:
    000001ba: 	movups	%xmm0, (%rax)
    000001bd: 	addq	$0x10, %rax
    000001c1: 	cmpq	%rax, %rdx
    000001c4: 	jne	.Ltmp1399 # Offset: 452
    000001c6: 	cmpq	%r15, %rdx
    000001c9: 	je	.Ltmp1400 # Offset: 457
    000001cb: 	movq	%rdx, %rax
    000001ce: 	jmp	.Ltmp1401 # Offset: 462
.Ltmp1387:
    000001d0: 	addq	$0x20, %rax
    000001d4: 	cmpq	%r9, %rax
    000001d7: 	jne	.Ltmp1388 # Offset: 471
    000001dd: 	addq	$0x8, %rdx
    000001e1: 	cmpq	%rdx, %rcx
    000001e4: 	ja	.Ltmp1389 # Offset: 484
    000001ea: 	jmp	.Ltmp1386 # Offset: 490
.Ltmp1392:
    000001ef: 	addq	$0x20, %rbx
    000001f3: 	jmp	.Ltmp1402 # Offset: 499
.Ltmp1403:
    000001f8: 	addq	$0x20, %rbx
.Ltmp1390:
    000001fc: 	cmpq	%rbx, %r14
    000001ff: 	je	.Ltmp1394 # Offset: 511
.Ltmp1404:
    00000205: 	movq	(%rbx), %rdi
    00000208: 	leaq	0x10(%rbx), %rax
    0000020c: 	cmpq	%rax, %rdi
    0000020f: 	je	.Ltmp1403 # Offset: 527
    00000211: 	movq	0x10(%rbx), %rax
    00000215: 	addq	$0x20, %rbx
    00000219: 	leaq	0x1(%rax), %rsi
    0000021d: 	callq	_ZdlPvm@PLT # Offset: 541
    00000222: 	cmpq	%rbx, %r14
    00000225: 	jne	.Ltmp1404 # Offset: 549
    00000227: 	jmp	.Ltmp1394 # Offset: 551
    0000022c: 	nopl	(%rax) # Size: 4
.Ltmp1395:
    00000230: 	addq	$0x20, %rbp
    00000234: 	cmpq	%rbp, %r14
    00000237: 	jne	.Ltmp1396 # Offset: 567
    0000023d: 	jmp	.Ltmp1394 # Offset: 573
.Ltmp1400:
    00000242: 	leaq	0x110(%rsp), %rbp
    0000024a: 	leaq	DATAat0x151f0(%rip), %rdx
    00000251: 	movq	%r12, %rsi
    00000254: 	movq	%rbp, %rdi
    00000257: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 599
    0000025c: 	callq	clock@PLT # Offset: 604
    00000261: 	movl	iterations(%rip), %r10d
    00000268: 	movq	%rax, start_time(%rip)
    0000026f: 	testl	%r10d, %r10d
    00000272: 	jle	.Ltmp1405 # Offset: 626
    00000274: 	pxor	%xmm6, %xmm6
    00000278: 	xorl	%ebx, %ebx
    0000027a: 	movsd	%xmm6, (%rsp)
.Ltmp1409:
    0000027f: 	movq	%r13, %rax
    00000282: 	pxor	%xmm2, %xmm2
.Ltmp1408:
    00000286: 	pxor	%xmm0, %xmm0
    0000028a: 	leaq	0x7d00(%rax), %rdx
.Ltmp1406:
    00000291: 	movsd	(%rax), %xmm1
    00000295: 	addq	$0x10, %rax
    00000299: 	addsd	%xmm1, %xmm0
    0000029d: 	movsd	-0x8(%rax), %xmm1
    000002a2: 	addsd	%xmm1, %xmm0
    000002a6: 	cmpq	%rax, %rdx
    000002a9: 	jne	.Ltmp1406 # Offset: 681
    000002ab: 	addsd	%xmm0, %xmm2
    000002af: 	cmpq	%rdx, %r15
    000002b2: 	je	.Ltmp1407 # Offset: 690
    000002b4: 	movq	%rdx, %rax
    000002b7: 	jmp	.Ltmp1408 # Offset: 695
.Ltmp1407:
    000002b9: 	movq	%rbp, %rdi
    000002bc: 	movapd	%xmm2, %xmm0
    000002c0: 	callq	_Z9check_sumIdEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 704
    000002c5: 	addl	$0x1, %ebx
    000002c8: 	cmpl	iterations(%rip), %ebx
    000002ce: 	jl	.Ltmp1409 # Offset: 718
.Ltmp1405:
    000002d0: 	movq	%rbp, %rdi
    000002d3: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 723
    000002d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002df: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000002e6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002ed: 	je	.Ltmp1410 # Offset: 749
.Ltmp1497:
    000002f3: 	movq	-0x20(%rax), %r14
    000002f7: 	callq	clock@PLT # Offset: 759
    000002fc: 	pxor	%xmm0, %xmm0
    00000300: 	movq	%rax, end_time(%rip)
    00000307: 	movq	%r14, %rdi
    0000030a: 	subq	start_time(%rip), %rax
    00000311: 	cvtsi2sd	%rax, %xmm0
    00000316: 	divsd	DATAat0x15758(%rip), %xmm0
    0000031e: 	callq	_Z13record_resultdPKc # Offset: 798
    00000323: 	movq	0x110(%rsp), %rdi
    0000032b: 	leaq	0x120(%rsp), %rbx
    00000333: 	cmpq	%rbx, %rdi
    00000336: 	je	.Ltmp1411 # Offset: 822
    00000338: 	movq	0x120(%rsp), %rax
    00000340: 	leaq	0x1(%rax), %rsi
    00000344: 	callq	_ZdlPvm@PLT # Offset: 836
.Ltmp1411:
    00000349: 	leaq	DATAat0x1520d(%rip), %rdx
    00000350: 	movq	%r12, %rsi
    00000353: 	movq	%rbp, %rdi
    00000356: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 854
    0000035b: 	callq	clock@PLT # Offset: 859
    00000360: 	movl	iterations(%rip), %r9d
    00000367: 	pxor	%xmm7, %xmm7
    0000036b: 	xorl	%r14d, %r14d
    0000036e: 	movq	%rax, start_time(%rip)
    00000375: 	movsd	%xmm7, (%rsp)
    0000037a: 	testl	%r9d, %r9d
    0000037d: 	jle	.Ltmp1412 # Offset: 893
.Ltmp1416:
    0000037f: 	movq	%r13, %rax
    00000382: 	pxor	%xmm2, %xmm2
.Ltmp1415:
    00000386: 	movsd	(%rsp), %xmm0
    0000038b: 	leaq	0x7d00(%rax), %rdx
.Ltmp1413:
    00000392: 	movsd	(%rax), %xmm1
    00000396: 	addq	$0x10, %rax
    0000039a: 	addsd	%xmm1, %xmm0
    0000039e: 	movsd	-0x8(%rax), %xmm1
    000003a3: 	addsd	%xmm1, %xmm0
    000003a7: 	cmpq	%rax, %rdx
    000003aa: 	jne	.Ltmp1413 # Offset: 938
    000003ac: 	addsd	%xmm0, %xmm2
    000003b0: 	cmpq	%rdx, %r15
    000003b3: 	je	.Ltmp1414 # Offset: 947
    000003b5: 	movq	%rdx, %rax
    000003b8: 	jmp	.Ltmp1415 # Offset: 952
.Ltmp1414:
    000003ba: 	movq	%rbp, %rdi
    000003bd: 	movapd	%xmm2, %xmm0
    000003c1: 	callq	_Z9check_sumIdEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 961
    000003c6: 	addl	$0x1, %r14d
    000003ca: 	cmpl	iterations(%rip), %r14d
    000003d1: 	jl	.Ltmp1416 # Offset: 977
.Ltmp1412:
    000003d3: 	movq	%rbp, %rdi
    000003d6: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 982
    000003db: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003e2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000003e9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003f0: 	je	.Ltmp1417 # Offset: 1008
.Ltmp1504:
    000003f6: 	movq	-0x20(%rax), %r14
    000003fa: 	callq	clock@PLT # Offset: 1018
    000003ff: 	pxor	%xmm0, %xmm0
    00000403: 	movq	%rax, end_time(%rip)
    0000040a: 	movq	%r14, %rdi
    0000040d: 	subq	start_time(%rip), %rax
    00000414: 	cvtsi2sd	%rax, %xmm0
    00000419: 	divsd	DATAat0x15758(%rip), %xmm0
    00000421: 	callq	_Z13record_resultdPKc # Offset: 1057
    00000426: 	movq	0x110(%rsp), %rdi
    0000042e: 	cmpq	%rbx, %rdi
    00000431: 	je	.Ltmp1418 # Offset: 1073
    00000433: 	movq	0x120(%rsp), %rax
    0000043b: 	leaq	0x1(%rax), %rsi
    0000043f: 	callq	_ZdlPvm@PLT # Offset: 1087
.Ltmp1418:
    00000444: 	leaq	DATAat0x1522b(%rip), %rdx
    0000044b: 	movq	%r12, %rsi
    0000044e: 	movq	%rbp, %rdi
    00000451: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1105
    00000456: 	callq	clock@PLT # Offset: 1110
    0000045b: 	movl	iterations(%rip), %r8d
    00000462: 	movq	%rax, start_time(%rip)
    00000469: 	testl	%r8d, %r8d
    0000046c: 	jle	.Ltmp1419 # Offset: 1132
    0000046e: 	pxor	%xmm6, %xmm6
    00000472: 	xorl	%r14d, %r14d
    00000475: 	leaq	0x7d00(%r13), %r15
    0000047c: 	movsd	%xmm6, (%rsp)
.Ltmp1422:
    00000481: 	movq	%r13, %rax
    00000484: 	pxor	%xmm0, %xmm0
.Ltmp1421:
    00000488: 	movq	%rax, %rdx
    0000048b: 	pxor	%xmm1, %xmm1
    0000048f: 	leaq	0x7a12000(%rax), %rcx
.Ltmp1420:
    00000496: 	movupd	(%rdx), %xmm3
    0000049a: 	addq	$0x7d00, %rdx
    000004a1: 	addpd	%xmm3, %xmm1
    000004a5: 	cmpq	%rdx, %rcx
    000004a8: 	jne	.Ltmp1420 # Offset: 1192
    000004aa: 	addsd	%xmm1, %xmm0
    000004ae: 	addq	$0x10, %rax
    000004b2: 	unpckhpd	%xmm1, %xmm1
    000004b6: 	addsd	%xmm1, %xmm0
    000004ba: 	cmpq	%rax, %r15
    000004bd: 	jne	.Ltmp1421 # Offset: 1213
    000004bf: 	movq	%rbp, %rdi
    000004c2: 	callq	_Z9check_sumIdEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1218
    000004c7: 	addl	$0x1, %r14d
    000004cb: 	cmpl	iterations(%rip), %r14d
    000004d2: 	jl	.Ltmp1422 # Offset: 1234
.Ltmp1419:
    000004d4: 	movq	%rbp, %rdi
    000004d7: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1239
    000004dc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004e3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000004ea: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004f1: 	je	.Ltmp1423 # Offset: 1265
.Ltmp1503:
    000004f7: 	movq	-0x20(%rax), %r14
    000004fb: 	callq	clock@PLT # Offset: 1275
    00000500: 	pxor	%xmm0, %xmm0
    00000504: 	movq	%rax, end_time(%rip)
    0000050b: 	movq	%r14, %rdi
    0000050e: 	subq	start_time(%rip), %rax
    00000515: 	cvtsi2sd	%rax, %xmm0
    0000051a: 	divsd	DATAat0x15758(%rip), %xmm0
    00000522: 	callq	_Z13record_resultdPKc # Offset: 1314
    00000527: 	movq	0x110(%rsp), %rdi
    0000052f: 	cmpq	%rbx, %rdi
    00000532: 	je	.Ltmp1424 # Offset: 1330
    00000534: 	movq	0x120(%rsp), %rax
    0000053c: 	leaq	0x1(%rax), %rsi
    00000540: 	callq	_ZdlPvm@PLT # Offset: 1344
.Ltmp1424:
    00000545: 	leaq	0x70(%rsp), %rdi
    0000054a: 	leaq	DATAat0x15249(%rip), %rdx
    00000551: 	movq	%r12, %rsi
    00000554: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1364
    00000559: 	movl	iterations(%rip), %edx
    0000055f: 	movq	0x70(%rsp), %rdi
    00000564: 	movl	$0xf42400, %esi
    00000569: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 1385
    0000056e: 	movq	%r13, %rdi
    00000571: 	callq	_ZdaPv@PLT # Offset: 1393
    00000576: 	movl	$0x7a12000, %edi
    0000057b: 	callq	_Znam@PLT # Offset: 1403
    00000580: 	movsd	init_value(%rip), %xmm0
    00000588: 	movq	%rax, %r13
    0000058b: 	leaq	0x7a12000(%rax), %r14
    00000592: 	unpcklpd	%xmm0, %xmm0
.Ltmp1425:
    00000596: 	movups	%xmm0, (%rax)
    00000599: 	addq	$0x10, %rax
    0000059d: 	cmpq	%r14, %rax
    000005a0: 	jne	.Ltmp1425 # Offset: 1440
    000005a2: 	leaq	DATAat0x15378(%rip), %rdx
    000005a9: 	movq	%r12, %rsi
    000005ac: 	movq	%rbp, %rdi
    000005af: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1455
    000005b4: 	callq	clock@PLT # Offset: 1460
    000005b9: 	movl	iterations(%rip), %edi
    000005bf: 	pxor	%xmm7, %xmm7
    000005c3: 	xorl	%r15d, %r15d
    000005c6: 	movq	%rax, start_time(%rip)
    000005cd: 	movsd	%xmm7, (%rsp)
    000005d2: 	testl	%edi, %edi
    000005d4: 	jle	.Ltmp1426 # Offset: 1492
.Ltmp1429:
    000005d6: 	movq	%r13, %rax
    000005d9: 	pxor	%xmm2, %xmm2
.Ltmp1428:
    000005dd: 	movsd	(%rsp), %xmm0
    000005e2: 	leaq	0x7d00(%rax), %rdx
.Ltmp1427:
    000005e9: 	movsd	(%rax), %xmm1
    000005ed: 	addq	$0x10, %rax
    000005f1: 	addsd	%xmm1, %xmm0
    000005f5: 	movsd	-0x8(%rax), %xmm1
    000005fa: 	addsd	%xmm1, %xmm0
    000005fe: 	cmpq	%rdx, %rax
    00000601: 	jne	.Ltmp1427 # Offset: 1537
    00000603: 	addsd	%xmm0, %xmm2
    00000607: 	cmpq	%r14, %rax
    0000060a: 	jne	.Ltmp1428 # Offset: 1546
    0000060c: 	movq	%rbp, %rdi
    0000060f: 	movapd	%xmm2, %xmm0
    00000613: 	callq	_Z9check_sumIdEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1555
    00000618: 	addl	$0x1, %r15d
    0000061c: 	cmpl	iterations(%rip), %r15d
    00000623: 	jl	.Ltmp1429 # Offset: 1571
.Ltmp1426:
    00000625: 	movq	%rbp, %rdi
    00000628: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1576
    0000062d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000634: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000063b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000642: 	je	.Ltmp1430 # Offset: 1602
.Ltmp1502:
    00000648: 	movq	-0x20(%rax), %r15
    0000064c: 	callq	clock@PLT # Offset: 1612
    00000651: 	pxor	%xmm0, %xmm0
    00000655: 	movq	%rax, end_time(%rip)
    0000065c: 	movq	%r15, %rdi
    0000065f: 	subq	start_time(%rip), %rax
    00000666: 	cvtsi2sd	%rax, %xmm0
    0000066b: 	divsd	DATAat0x15758(%rip), %xmm0
    00000673: 	callq	_Z13record_resultdPKc # Offset: 1651
    00000678: 	movq	0x110(%rsp), %rdi
    00000680: 	cmpq	%rbx, %rdi
    00000683: 	je	.Ltmp1431 # Offset: 1667
    00000685: 	movq	0x120(%rsp), %rax
    0000068d: 	leaq	0x1(%rax), %rsi
    00000691: 	callq	_ZdlPvm@PLT # Offset: 1681
.Ltmp1431:
    00000696: 	leaq	DATAat0x153a0(%rip), %rdx
    0000069d: 	movq	%r12, %rsi
    000006a0: 	movq	%rbp, %rdi
    000006a3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1699
    000006a8: 	callq	clock@PLT # Offset: 1704
    000006ad: 	movl	iterations(%rip), %esi
    000006b3: 	pxor	%xmm5, %xmm5
    000006b7: 	xorl	%r15d, %r15d
    000006ba: 	movq	%rax, start_time(%rip)
    000006c1: 	movsd	%xmm5, (%rsp)
    000006c6: 	testl	%esi, %esi
    000006c8: 	jle	.Ltmp1432 # Offset: 1736
.Ltmp1436:
    000006ca: 	movq	%r13, %rax
    000006cd: 	pxor	%xmm2, %xmm2
.Ltmp1435:
    000006d1: 	movsd	(%rsp), %xmm0
    000006d6: 	leaq	0x7d00(%rax), %rdx
.Ltmp1433:
    000006dd: 	movsd	(%rax), %xmm1
    000006e1: 	addq	$0x10, %rax
    000006e5: 	addsd	%xmm1, %xmm0
    000006e9: 	movsd	-0x8(%rax), %xmm1
    000006ee: 	addsd	%xmm1, %xmm0
    000006f2: 	cmpq	%rax, %rdx
    000006f5: 	jne	.Ltmp1433 # Offset: 1781
    000006f7: 	addsd	%xmm0, %xmm2
    000006fb: 	cmpq	%r14, %rdx
    000006fe: 	je	.Ltmp1434 # Offset: 1790
    00000700: 	movq	%rdx, %rax
    00000703: 	jmp	.Ltmp1435 # Offset: 1795
.Ltmp1434:
    00000705: 	movq	%rbp, %rdi
    00000708: 	movapd	%xmm2, %xmm0
    0000070c: 	callq	_Z9check_sumIdEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1804
    00000711: 	addl	$0x1, %r15d
    00000715: 	cmpl	iterations(%rip), %r15d
    0000071c: 	jl	.Ltmp1436 # Offset: 1820
.Ltmp1432:
    0000071e: 	movq	%rbp, %rdi
    00000721: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1825
    00000726: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000072d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000734: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000073b: 	je	.Ltmp1437 # Offset: 1851
.Ltmp1501:
    00000741: 	movq	-0x20(%rax), %r15
    00000745: 	callq	clock@PLT # Offset: 1861
    0000074a: 	pxor	%xmm0, %xmm0
    0000074e: 	movq	%rax, end_time(%rip)
    00000755: 	movq	%r15, %rdi
    00000758: 	subq	start_time(%rip), %rax
    0000075f: 	cvtsi2sd	%rax, %xmm0
    00000764: 	divsd	DATAat0x15758(%rip), %xmm0
    0000076c: 	callq	_Z13record_resultdPKc # Offset: 1900
    00000771: 	movq	0x110(%rsp), %rdi
    00000779: 	cmpq	%rbx, %rdi
    0000077c: 	je	.Ltmp1438 # Offset: 1916
    0000077e: 	movq	0x120(%rsp), %rax
    00000786: 	leaq	0x1(%rax), %rsi
    0000078a: 	callq	_ZdlPvm@PLT # Offset: 1930
.Ltmp1438:
    0000078f: 	leaq	DATAat0x153c8(%rip), %rdx
    00000796: 	movq	%r12, %rsi
    00000799: 	movq	%rbp, %rdi
    0000079c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1948
    000007a1: 	callq	clock@PLT # Offset: 1953
    000007a6: 	movl	iterations(%rip), %ecx
    000007ac: 	movq	%rax, start_time(%rip)
    000007b3: 	testl	%ecx, %ecx
    000007b5: 	jle	.Ltmp1439 # Offset: 1973
    000007b7: 	leaq	0x7d00(%r13), %rax
    000007be: 	pxor	%xmm6, %xmm6
    000007c2: 	xorl	%r15d, %r15d
    000007c5: 	movq	%rax, 0x10(%rsp)
    000007ca: 	movsd	%xmm6, (%rsp)
.Ltmp1442:
    000007cf: 	movq	%r13, %rax
    000007d2: 	pxor	%xmm0, %xmm0
.Ltmp1441:
    000007d6: 	movq	%rax, %rdx
    000007d9: 	pxor	%xmm1, %xmm1
    000007dd: 	leaq	0x7a12000(%rax), %rcx
.Ltmp1440:
    000007e4: 	movupd	(%rdx), %xmm3
    000007e8: 	addq	$0x7d00, %rdx
    000007ef: 	addpd	%xmm3, %xmm1
    000007f3: 	cmpq	%rdx, %rcx
    000007f6: 	jne	.Ltmp1440 # Offset: 2038
    000007f8: 	addsd	%xmm1, %xmm0
    000007fc: 	unpckhpd	%xmm1, %xmm1
    00000800: 	addq	$0x10, %rax
    00000804: 	addsd	%xmm1, %xmm0
    00000808: 	cmpq	%rax, 0x10(%rsp)
    0000080d: 	jne	.Ltmp1441 # Offset: 2061
    0000080f: 	movq	%rbp, %rdi
    00000812: 	callq	_Z9check_sumIdEvT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2066
    00000817: 	addl	$0x1, %r15d
    0000081b: 	cmpl	iterations(%rip), %r15d
    00000822: 	jl	.Ltmp1442 # Offset: 2082
.Ltmp1439:
    00000824: 	movq	%rbp, %rdi
    00000827: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2087
    0000082c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000833: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000083a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000841: 	je	.Ltmp1443 # Offset: 2113
.Ltmp1500:
    00000847: 	movq	-0x20(%rax), %r15
    0000084b: 	callq	clock@PLT # Offset: 2123
    00000850: 	pxor	%xmm0, %xmm0
    00000854: 	movq	%rax, end_time(%rip)
    0000085b: 	movq	%r15, %rdi
    0000085e: 	subq	start_time(%rip), %rax
    00000865: 	cvtsi2sd	%rax, %xmm0
    0000086a: 	divsd	DATAat0x15758(%rip), %xmm0
    00000872: 	callq	_Z13record_resultdPKc # Offset: 2162
    00000877: 	movq	0x110(%rsp), %rdi
    0000087f: 	cmpq	%rbx, %rdi
    00000882: 	je	.Ltmp1444 # Offset: 2178
    00000884: 	movq	0x120(%rsp), %rax
    0000088c: 	leaq	0x1(%rax), %rsi
    00000890: 	callq	_ZdlPvm@PLT # Offset: 2192
.Ltmp1444:
    00000895: 	leaq	0x90(%rsp), %rdi
    0000089d: 	leaq	DATAat0x1525e(%rip), %rdx
    000008a4: 	movq	%r12, %rsi
    000008a7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2215
    000008ac: 	movl	iterations(%rip), %edx
    000008b2: 	movq	0x90(%rsp), %rdi
    000008ba: 	movl	$0xf42400, %esi
    000008bf: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 2239
    000008c4: 	leaq	DATAat0x153f0(%rip), %rdx
    000008cb: 	movq	%r12, %rsi
    000008ce: 	movq	%rbp, %rdi
    000008d1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2257
    000008d6: 	callq	clock@PLT # Offset: 2262
    000008db: 	movl	iterations(%rip), %edx
    000008e1: 	movq	%rax, start_time(%rip)
    000008e8: 	testl	%edx, %edx
    000008ea: 	jle	.Ltmp1445 # Offset: 2282
    000008ec: 	pxor	%xmm7, %xmm7
    000008f0: 	xorl	%r15d, %r15d
    000008f3: 	movsd	%xmm7, (%rsp)
.Ltmp1448:
    000008f8: 	movq	%r13, %rax
    000008fb: 	pxor	%xmm2, %xmm2
.Ltmp1447:
    000008ff: 	pxor	%xmm0, %xmm0
    00000903: 	leaq	0x7d00(%rax), %rdx
.Ltmp1446:
    0000090a: 	movsd	(%rax), %xmm1
    0000090e: 	addq	$0x20, %rax
    00000912: 	addsd	%xmm1, %xmm0
    00000916: 	movsd	-0x18(%rax), %xmm1
    0000091b: 	addsd	%xmm0, %xmm1
    0000091f: 	movsd	-0x10(%rax), %xmm0
    00000924: 	addsd	%xmm1, %xmm0
    00000928: 	movsd	-0x8(%rax), %xmm1
    0000092d: 	addsd	%xmm1, %xmm0
    00000931: 	cmpq	%rdx, %rax
    00000934: 	jne	.Ltmp1446 # Offset: 2356
    00000936: 	addsd	%xmm0, %xmm2
    0000093a: 	cmpq	%r14, %rax
    0000093d: 	jne	.Ltmp1447 # Offset: 2365
    0000093f: 	movq	%rbp, %rcx
    00000942: 	movl	$0x4, %edx
    00000947: 	movl	$0x3e8, %esi
    0000094c: 	movl	$0xfa0, %edi
    00000951: 	movapd	%xmm2, %xmm0
    00000955: 	callq	_Z18check_sum_channelsIdEvT_mmmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2389
    0000095a: 	addl	$0x1, %r15d
    0000095e: 	cmpl	iterations(%rip), %r15d
    00000965: 	jl	.Ltmp1448 # Offset: 2405
.Ltmp1445:
    00000967: 	movq	%rbp, %rdi
    0000096a: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2410
    0000096f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000976: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000097d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000984: 	je	.Ltmp1449 # Offset: 2436
.Ltmp1499:
    0000098a: 	movq	-0x20(%rax), %r15
    0000098e: 	callq	clock@PLT # Offset: 2446
    00000993: 	pxor	%xmm0, %xmm0
    00000997: 	movq	%rax, end_time(%rip)
    0000099e: 	movq	%r15, %rdi
    000009a1: 	subq	start_time(%rip), %rax
    000009a8: 	cvtsi2sd	%rax, %xmm0
    000009ad: 	divsd	DATAat0x15758(%rip), %xmm0
    000009b5: 	callq	_Z13record_resultdPKc # Offset: 2485
    000009ba: 	movq	0x110(%rsp), %rdi
    000009c2: 	cmpq	%rbx, %rdi
    000009c5: 	je	.Ltmp1450 # Offset: 2501
    000009c7: 	movq	0x120(%rsp), %rax
    000009cf: 	leaq	0x1(%rax), %rsi
    000009d3: 	callq	_ZdlPvm@PLT # Offset: 2515
.Ltmp1450:
    000009d8: 	leaq	DATAat0x15420(%rip), %rdx
    000009df: 	movq	%r12, %rsi
    000009e2: 	movq	%rbp, %rdi
    000009e5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2533
    000009ea: 	movq	%rbp, %rdx
    000009ed: 	movl	$0x4, %esi
    000009f2: 	movq	%r13, %rdi
    000009f5: 	callq	"_Z27test_loop_2D_flat_chan_opt2IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 2549
    000009fa: 	movq	0x110(%rsp), %rdi
    00000a02: 	cmpq	%rbx, %rdi
    00000a05: 	je	.Ltmp1451 # Offset: 2565
    00000a07: 	movq	0x120(%rsp), %rax
    00000a0f: 	leaq	0x1(%rax), %rsi
    00000a13: 	callq	_ZdlPvm@PLT # Offset: 2579
.Ltmp1451:
    00000a18: 	leaq	DATAat0x15450(%rip), %rdx
    00000a1f: 	movq	%r12, %rsi
    00000a22: 	movq	%rbp, %rdi
    00000a25: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2597
    00000a2a: 	movq	%rbp, %rdx
    00000a2d: 	movl	$0x4, %esi
    00000a32: 	movq	%r13, %rdi
    00000a35: 	callq	"_Z27test_loop_2D_flat_chan_opt3IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 2613
    00000a3a: 	movq	0x110(%rsp), %rdi
    00000a42: 	cmpq	%rbx, %rdi
    00000a45: 	je	.Ltmp1452 # Offset: 2629
    00000a47: 	movq	0x120(%rsp), %rax
    00000a4f: 	leaq	0x1(%rax), %rsi
    00000a53: 	callq	_ZdlPvm@PLT # Offset: 2643
.Ltmp1452:
    00000a58: 	leaq	DATAat0x15480(%rip), %rdx
    00000a5f: 	movq	%r12, %rsi
    00000a62: 	movq	%rbp, %rdi
    00000a65: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2661
    00000a6a: 	movq	%rbp, %rdx
    00000a6d: 	movl	$0x4, %esi
    00000a72: 	movq	%r13, %rdi
    00000a75: 	callq	"_Z27test_loop_2D_flat_chan_opt4IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 2677
    00000a7a: 	movq	0x110(%rsp), %rdi
    00000a82: 	cmpq	%rbx, %rdi
    00000a85: 	je	.Ltmp1453 # Offset: 2693
    00000a87: 	movq	0x120(%rsp), %rax
    00000a8f: 	leaq	0x1(%rax), %rsi
    00000a93: 	callq	_ZdlPvm@PLT # Offset: 2707
.Ltmp1453:
    00000a98: 	leaq	DATAat0x154b0(%rip), %rdx
    00000a9f: 	movq	%r12, %rsi
    00000aa2: 	movq	%rbp, %rdi
    00000aa5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2725
    00000aaa: 	movq	%rbp, %rdx
    00000aad: 	movl	$0x4, %esi
    00000ab2: 	movq	%r13, %rdi
    00000ab5: 	callq	"_Z29test_loop_2D_flat_chan_revCYXIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 2741
    00000aba: 	movq	0x110(%rsp), %rdi
    00000ac2: 	cmpq	%rbx, %rdi
    00000ac5: 	je	.Ltmp1454 # Offset: 2757
    00000ac7: 	movq	0x120(%rsp), %rax
    00000acf: 	leaq	0x1(%rax), %rsi
    00000ad3: 	callq	_ZdlPvm@PLT # Offset: 2771
.Ltmp1454:
    00000ad8: 	leaq	DATAat0x154e0(%rip), %rdx
    00000adf: 	movq	%r12, %rsi
    00000ae2: 	movq	%rbp, %rdi
    00000ae5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2789
    00000aea: 	movq	%rbp, %rdx
    00000aed: 	movl	$0x4, %esi
    00000af2: 	movq	%r13, %rdi
    00000af5: 	callq	"_Z29test_loop_2D_flat_chan_revXYCIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 2805
    00000afa: 	movq	0x110(%rsp), %rdi
    00000b02: 	cmpq	%rbx, %rdi
    00000b05: 	je	.Ltmp1455 # Offset: 2821
    00000b07: 	movq	0x120(%rsp), %rax
    00000b0f: 	leaq	0x1(%rax), %rsi
    00000b13: 	callq	_ZdlPvm@PLT # Offset: 2835
.Ltmp1455:
    00000b18: 	leaq	DATAat0x15510(%rip), %rdx
    00000b1f: 	movq	%r12, %rsi
    00000b22: 	movq	%rbp, %rdi
    00000b25: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2853
    00000b2a: 	movq	%rbp, %rdx
    00000b2d: 	movl	$0x4, %esi
    00000b32: 	movq	%r13, %rdi
    00000b35: 	callq	"_Z29test_loop_2D_flat_chan_revXCYIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 2869
    00000b3a: 	movq	0x110(%rsp), %rdi
    00000b42: 	cmpq	%rbx, %rdi
    00000b45: 	je	.Ltmp1456 # Offset: 2885
    00000b47: 	movq	0x120(%rsp), %rax
    00000b4f: 	leaq	0x1(%rax), %rsi
    00000b53: 	callq	_ZdlPvm@PLT # Offset: 2899
.Ltmp1456:
    00000b58: 	leaq	DATAat0x15540(%rip), %rdx
    00000b5f: 	movq	%r12, %rsi
    00000b62: 	movq	%rbp, %rdi
    00000b65: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2917
    00000b6a: 	movq	%rbp, %rdx
    00000b6d: 	movl	$0x4, %esi
    00000b72: 	movq	%r13, %rdi
    00000b75: 	callq	"_Z29test_loop_2D_flat_chan_revCXYIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 2933
    00000b7a: 	movq	0x110(%rsp), %rdi
    00000b82: 	cmpq	%rbx, %rdi
    00000b85: 	je	.Ltmp1457 # Offset: 2949
    00000b87: 	movq	0x120(%rsp), %rax
    00000b8f: 	leaq	0x1(%rax), %rsi
    00000b93: 	callq	_ZdlPvm@PLT # Offset: 2963
.Ltmp1457:
    00000b98: 	leaq	0xb0(%rsp), %rdi
    00000ba0: 	leaq	DATAat0x15570(%rip), %rdx
    00000ba7: 	movq	%r12, %rsi
    00000baa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2986
    00000baf: 	movl	iterations(%rip), %edx
    00000bb5: 	movq	0xb0(%rsp), %rdi
    00000bbd: 	movl	$0xf42400, %esi
    00000bc2: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 3010
    00000bc7: 	leaq	DATAat0x15598(%rip), %rdx
    00000bce: 	movq	%r12, %rsi
    00000bd1: 	movq	%rbp, %rdi
    00000bd4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3028
    00000bd9: 	callq	clock@PLT # Offset: 3033
    00000bde: 	movq	%rax, start_time(%rip)
    00000be5: 	movl	iterations(%rip), %eax
    00000beb: 	testl	%eax, %eax
    00000bed: 	jle	.Ltmp1458 # Offset: 3053
    00000bf3: 	pxor	%xmm5, %xmm5
    00000bf7: 	xorl	%r15d, %r15d
    00000bfa: 	movsd	%xmm5, (%rsp)
.Ltmp1461:
    00000bff: 	movq	%r13, %rax
    00000c02: 	pxor	%xmm2, %xmm2
.Ltmp1460:
    00000c06: 	movq	%rax, %rdx
    00000c09: 	pxor	%xmm0, %xmm0
    00000c0d: 	leaq	0x7cc0(%rax), %rcx
.Ltmp1459:
    00000c14: 	movsd	(%rdx), %xmm1
    00000c18: 	movsd	0x20(%rdx), %xmm3
    00000c1d: 	addq	$0x40, %rdx
    00000c21: 	addsd	%xmm1, %xmm0
    00000c25: 	movsd	-0x38(%rdx), %xmm1
    00000c2a: 	addsd	%xmm1, %xmm0
    00000c2e: 	movsd	-0x30(%rdx), %xmm1
    00000c33: 	addsd	%xmm1, %xmm0
    00000c37: 	movsd	-0x18(%rdx), %xmm1
    00000c3c: 	addsd	%xmm0, %xmm3
    00000c40: 	movsd	-0x10(%rdx), %xmm0
    00000c45: 	addsd	%xmm3, %xmm1
    00000c49: 	addsd	%xmm1, %xmm0
    00000c4d: 	cmpq	%rcx, %rdx
    00000c50: 	jne	.Ltmp1459 # Offset: 3152
    00000c52: 	addsd	0x7cc0(%rax), %xmm0
    00000c5a: 	addsd	0x7cc8(%rax), %xmm0
    00000c62: 	addq	$0x7d00, %rax
    00000c68: 	addsd	-0x30(%rax), %xmm0
    00000c6d: 	addsd	-0x20(%rax), %xmm0
    00000c72: 	addsd	-0x18(%rax), %xmm0
    00000c77: 	addsd	-0x10(%rax), %xmm0
    00000c7c: 	addsd	%xmm0, %xmm2
    00000c80: 	cmpq	%r14, %rax
    00000c83: 	jne	.Ltmp1460 # Offset: 3203
    00000c85: 	movq	%rbp, %rcx
    00000c88: 	movl	$0x3, %edx
    00000c8d: 	movl	$0x3e8, %esi
    00000c92: 	movl	$0xfa0, %edi
    00000c97: 	movapd	%xmm2, %xmm0
    00000c9b: 	callq	_Z18check_sum_channelsIdEvT_mmmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3227
    00000ca0: 	addl	$0x1, %r15d
    00000ca4: 	cmpl	iterations(%rip), %r15d
    00000cab: 	jl	.Ltmp1461 # Offset: 3243
.Ltmp1458:
    00000cb1: 	movq	%rbp, %rdi
    00000cb4: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3252
    00000cb9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000cc0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000cc7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000cce: 	je	.Ltmp1462 # Offset: 3278
.Ltmp1498:
    00000cd4: 	movq	-0x20(%rax), %r14
    00000cd8: 	callq	clock@PLT # Offset: 3288
    00000cdd: 	pxor	%xmm0, %xmm0
    00000ce1: 	movq	%rax, end_time(%rip)
    00000ce8: 	movq	%r14, %rdi
    00000ceb: 	subq	start_time(%rip), %rax
    00000cf2: 	cvtsi2sd	%rax, %xmm0
    00000cf7: 	divsd	DATAat0x15758(%rip), %xmm0
    00000cff: 	callq	_Z13record_resultdPKc # Offset: 3327
    00000d04: 	movq	0x110(%rsp), %rdi
    00000d0c: 	cmpq	%rbx, %rdi
    00000d0f: 	je	.Ltmp1463 # Offset: 3343
    00000d11: 	movq	0x120(%rsp), %rax
    00000d19: 	leaq	0x1(%rax), %rsi
    00000d1d: 	callq	_ZdlPvm@PLT # Offset: 3357
.Ltmp1463:
    00000d22: 	leaq	DATAat0x155c8(%rip), %rdx
    00000d29: 	movq	%r12, %rsi
    00000d2c: 	movq	%rbp, %rdi
    00000d2f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3375
    00000d34: 	movq	%rbp, %rdx
    00000d37: 	movl	$0x3, %esi
    00000d3c: 	movq	%r13, %rdi
    00000d3f: 	callq	"_Z27test_loop_2D_flat_chan_opt2IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3391
    00000d44: 	movq	0x110(%rsp), %rdi
    00000d4c: 	cmpq	%rbx, %rdi
    00000d4f: 	je	.Ltmp1464 # Offset: 3407
    00000d51: 	movq	0x120(%rsp), %rax
    00000d59: 	leaq	0x1(%rax), %rsi
    00000d5d: 	callq	_ZdlPvm@PLT # Offset: 3421
.Ltmp1464:
    00000d62: 	leaq	DATAat0x155f8(%rip), %rdx
    00000d69: 	movq	%r12, %rsi
    00000d6c: 	movq	%rbp, %rdi
    00000d6f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3439
    00000d74: 	movq	%rbp, %rdx
    00000d77: 	movl	$0x3, %esi
    00000d7c: 	movq	%r13, %rdi
    00000d7f: 	callq	"_Z27test_loop_2D_flat_chan_opt3IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3455
    00000d84: 	movq	0x110(%rsp), %rdi
    00000d8c: 	cmpq	%rbx, %rdi
    00000d8f: 	je	.Ltmp1465 # Offset: 3471
    00000d91: 	movq	0x120(%rsp), %rax
    00000d99: 	leaq	0x1(%rax), %rsi
    00000d9d: 	callq	_ZdlPvm@PLT # Offset: 3485
.Ltmp1465:
    00000da2: 	leaq	DATAat0x15628(%rip), %rdx
    00000da9: 	movq	%r12, %rsi
    00000dac: 	movq	%rbp, %rdi
    00000daf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3503
    00000db4: 	movq	%rbp, %rdx
    00000db7: 	movl	$0x3, %esi
    00000dbc: 	movq	%r13, %rdi
    00000dbf: 	callq	"_Z27test_loop_2D_flat_chan_opt4IdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3519
    00000dc4: 	movq	0x110(%rsp), %rdi
    00000dcc: 	cmpq	%rbx, %rdi
    00000dcf: 	je	.Ltmp1466 # Offset: 3535
    00000dd1: 	movq	0x120(%rsp), %rax
    00000dd9: 	leaq	0x1(%rax), %rsi
    00000ddd: 	callq	_ZdlPvm@PLT # Offset: 3549
.Ltmp1466:
    00000de2: 	leaq	DATAat0x15658(%rip), %rdx
    00000de9: 	movq	%r12, %rsi
    00000dec: 	movq	%rbp, %rdi
    00000def: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3567
    00000df4: 	movq	%rbp, %rdx
    00000df7: 	movl	$0x3, %esi
    00000dfc: 	movq	%r13, %rdi
    00000dff: 	callq	"_Z29test_loop_2D_flat_chan_revCYXIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3583
    00000e04: 	movq	0x110(%rsp), %rdi
    00000e0c: 	cmpq	%rbx, %rdi
    00000e0f: 	je	.Ltmp1467 # Offset: 3599
    00000e11: 	movq	0x120(%rsp), %rax
    00000e19: 	leaq	0x1(%rax), %rsi
    00000e1d: 	callq	_ZdlPvm@PLT # Offset: 3613
.Ltmp1467:
    00000e22: 	leaq	DATAat0x15688(%rip), %rdx
    00000e29: 	movq	%r12, %rsi
    00000e2c: 	movq	%rbp, %rdi
    00000e2f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3631
    00000e34: 	movq	%rbp, %rdx
    00000e37: 	movl	$0x3, %esi
    00000e3c: 	movq	%r13, %rdi
    00000e3f: 	callq	"_Z29test_loop_2D_flat_chan_revXYCIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3647
    00000e44: 	movq	0x110(%rsp), %rdi
    00000e4c: 	cmpq	%rbx, %rdi
    00000e4f: 	je	.Ltmp1468 # Offset: 3663
    00000e51: 	movq	0x120(%rsp), %rax
    00000e59: 	leaq	0x1(%rax), %rsi
    00000e5d: 	callq	_ZdlPvm@PLT # Offset: 3677
.Ltmp1468:
    00000e62: 	leaq	DATAat0x156b8(%rip), %rdx
    00000e69: 	movq	%r12, %rsi
    00000e6c: 	movq	%rbp, %rdi
    00000e6f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3695
    00000e74: 	movq	%rbp, %rdx
    00000e77: 	movl	$0x3, %esi
    00000e7c: 	movq	%r13, %rdi
    00000e7f: 	callq	"_Z29test_loop_2D_flat_chan_revXCYIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3711
    00000e84: 	movq	0x110(%rsp), %rdi
    00000e8c: 	cmpq	%rbx, %rdi
    00000e8f: 	je	.Ltmp1469 # Offset: 3727
    00000e91: 	movq	0x120(%rsp), %rax
    00000e99: 	leaq	0x1(%rax), %rsi
    00000e9d: 	callq	_ZdlPvm@PLT # Offset: 3741
.Ltmp1469:
    00000ea2: 	leaq	DATAat0x156e8(%rip), %rdx
    00000ea9: 	movq	%r12, %rsi
    00000eac: 	movq	%rbp, %rdi
    00000eaf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3759
    00000eb4: 	movq	%rbp, %rdx
    00000eb7: 	movl	$0x3, %esi
    00000ebc: 	movq	%r13, %rdi
    00000ebf: 	callq	"_Z29test_loop_2D_flat_chan_revCXYIdEvPKT_iiiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3775
    00000ec4: 	movq	0x110(%rsp), %rdi
    00000ecc: 	cmpq	%rbx, %rdi
    00000ecf: 	je	.Ltmp1470 # Offset: 3791
    00000ed1: 	movq	0x120(%rsp), %rax
    00000ed9: 	leaq	0x1(%rax), %rsi
    00000edd: 	callq	_ZdlPvm@PLT # Offset: 3805
.Ltmp1470:
    00000ee2: 	leaq	0xd0(%rsp), %rdi
    00000eea: 	leaq	DATAat0x15718(%rip), %rdx
    00000ef1: 	movq	%r12, %rsi
    00000ef4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3828
    00000ef9: 	movl	iterations(%rip), %edx
    00000eff: 	movq	0xd0(%rsp), %rdi
    00000f07: 	movl	$0xf42400, %esi
    00000f0c: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 3852
    00000f11: 	movq	%r13, %rdi
    00000f14: 	callq	_ZdaPv@PLT # Offset: 3860
    00000f19: 	movl	$0x89c5e90, %edi
    00000f1e: 	callq	_Znam@PLT # Offset: 3870
    00000f23: 	movl	$0x752d0, %edi
    00000f28: 	movq	%rax, %r15
    00000f2b: 	callq	_Znam@PLT # Offset: 3883
    00000f30: 	movsd	init_value(%rip), %xmm0
    00000f38: 	movq	%rax, %r13
    00000f3b: 	leaq	0x74ca0(%r15), %rcx
    00000f42: 	leaq	0x8a3ab30(%r15), %rdi
    00000f49: 	unpcklpd	%xmm0, %xmm0
.Ltmp1473:
    00000f4d: 	leaq	-0x74ca0(%rcx), %rsi
    00000f54: 	leaq	-0x74670(%rcx), %rdx
.Ltmp1472:
    00000f5b: 	movq	%rsi, %rax
    00000f5e: 	nop # Size: 2
.Ltmp1471:
    00000f60: 	movups	%xmm0, (%rax)
    00000f63: 	addq	$0x10, %rax
    00000f67: 	cmpq	%rdx, %rax
    00000f6a: 	jne	.Ltmp1471 # Offset: 3946
    00000f6c: 	leaq	0x630(%rax), %rdx
    00000f73: 	addq	$0x630, %rsi
    00000f7a: 	cmpq	%rcx, %rdx
    00000f7d: 	jne	.Ltmp1472 # Offset: 3965
    00000f7f: 	leaq	0x74ca0(%rax), %rcx
    00000f86: 	cmpq	%rdi, %rcx
    00000f89: 	jne	.Ltmp1473 # Offset: 3977
    00000f8b: 	movq	%r13, %rax
    00000f8e: 	leaq	0x752d0(%r13), %rdx
.Ltmp1475:
    00000f95: 	leaq	0x630(%rax), %rcx
.Ltmp1474:
    00000f9c: 	movups	%xmm0, (%rax)
    00000f9f: 	addq	$0x10, %rax
    00000fa3: 	cmpq	%rcx, %rax
    00000fa6: 	jne	.Ltmp1474 # Offset: 4006
    00000fa8: 	cmpq	%rax, %rdx
    00000fab: 	jne	.Ltmp1475 # Offset: 4011
    00000fad: 	leaq	DATAat0x15278(%rip), %rdx
    00000fb4: 	movq	%r12, %rsi
    00000fb7: 	movq	%rbp, %rdi
    00000fba: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4026
    00000fbf: 	movq	%rbp, %rdx
    00000fc2: 	movq	%r13, %rsi
    00000fc5: 	movq	%r15, %rdi
    00000fc8: 	callq	_Z16test_loop_3D_ZYXIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4040
    00000fcd: 	movq	0x110(%rsp), %rdi
    00000fd5: 	cmpq	%rbx, %rdi
    00000fd8: 	je	.Ltmp1476 # Offset: 4056
    00000fda: 	movq	0x120(%rsp), %rax
    00000fe2: 	leaq	0x1(%rax), %rsi
    00000fe6: 	callq	_ZdlPvm@PLT # Offset: 4070
.Ltmp1476:
    00000feb: 	leaq	DATAat0x15291(%rip), %rdx
    00000ff2: 	movq	%r12, %rsi
    00000ff5: 	movq	%rbp, %rdi
    00000ff8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4088
    00000ffd: 	movq	%rbp, %rdx
    00001000: 	movq	%r13, %rsi
    00001003: 	movq	%r15, %rdi
    00001006: 	callq	_Z16test_loop_3D_ZXYIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4102
    0000100b: 	movq	0x110(%rsp), %rdi
    00001013: 	cmpq	%rbx, %rdi
    00001016: 	je	.Ltmp1477 # Offset: 4118
    00001018: 	movq	0x120(%rsp), %rax
    00001020: 	leaq	0x1(%rax), %rsi
    00001024: 	callq	_ZdlPvm@PLT # Offset: 4132
.Ltmp1477:
    00001029: 	leaq	DATAat0x152aa(%rip), %rdx
    00001030: 	movq	%r12, %rsi
    00001033: 	movq	%rbp, %rdi
    00001036: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4150
    0000103b: 	movq	%rbp, %rdx
    0000103e: 	movq	%r13, %rsi
    00001041: 	movq	%r15, %rdi
    00001044: 	callq	_Z16test_loop_3D_YZXIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4164
    00001049: 	movq	0x110(%rsp), %rdi
    00001051: 	cmpq	%rbx, %rdi
    00001054: 	je	.Ltmp1478 # Offset: 4180
    00001056: 	movq	0x120(%rsp), %rax
    0000105e: 	leaq	0x1(%rax), %rsi
    00001062: 	callq	_ZdlPvm@PLT # Offset: 4194
.Ltmp1478:
    00001067: 	leaq	DATAat0x152c3(%rip), %rdx
    0000106e: 	movq	%r12, %rsi
    00001071: 	movq	%rbp, %rdi
    00001074: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4212
    00001079: 	movq	%rbp, %rdx
    0000107c: 	movq	%r13, %rsi
    0000107f: 	movq	%r15, %rdi
    00001082: 	callq	_Z16test_loop_3D_YXZIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4226
    00001087: 	movq	0x110(%rsp), %rdi
    0000108f: 	cmpq	%rbx, %rdi
    00001092: 	je	.Ltmp1479 # Offset: 4242
    00001094: 	movq	0x120(%rsp), %rax
    0000109c: 	leaq	0x1(%rax), %rsi
    000010a0: 	callq	_ZdlPvm@PLT # Offset: 4256
.Ltmp1479:
    000010a5: 	leaq	DATAat0x152dc(%rip), %rdx
    000010ac: 	movq	%r12, %rsi
    000010af: 	movq	%rbp, %rdi
    000010b2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4274
    000010b7: 	movq	%rbp, %rdx
    000010ba: 	movq	%r13, %rsi
    000010bd: 	movq	%r15, %rdi
    000010c0: 	callq	_Z16test_loop_3D_XYZIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4288
    000010c5: 	movq	0x110(%rsp), %rdi
    000010cd: 	cmpq	%rbx, %rdi
    000010d0: 	je	.Ltmp1480 # Offset: 4304
    000010d2: 	movq	0x120(%rsp), %rax
    000010da: 	leaq	0x1(%rax), %rsi
    000010de: 	callq	_ZdlPvm@PLT # Offset: 4318
.Ltmp1480:
    000010e3: 	leaq	DATAat0x152f5(%rip), %rdx
    000010ea: 	movq	%r12, %rsi
    000010ed: 	movq	%rbp, %rdi
    000010f0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4336
    000010f5: 	movq	%rbp, %rdx
    000010f8: 	movq	%r13, %rsi
    000010fb: 	movq	%r15, %rdi
    000010fe: 	callq	_Z16test_loop_3D_XZYIdEvPA301_A198_T_PS1_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4350
    00001103: 	movq	0x110(%rsp), %rdi
    0000110b: 	cmpq	%rbx, %rdi
    0000110e: 	je	.Ltmp1481 # Offset: 4366
    00001110: 	movq	0x120(%rsp), %rax
    00001118: 	leaq	0x1(%rax), %rsi
    0000111c: 	callq	_ZdlPvm@PLT # Offset: 4380
.Ltmp1481:
    00001121: 	leaq	DATAat0x1530e(%rip), %r14
    00001128: 	leaq	0xf0(%rsp), %rdi
    00001130: 	movq	%r12, %rsi
    00001133: 	movq	%r14, %rdx
    00001136: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4406
    0000113b: 	movl	iterations(%rip), %edx
    00001141: 	movq	0xf0(%rsp), %rdi
    00001149: 	movl	$0x1138bd2, %esi
    0000114e: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 4430
    00001153: 	movq	%r15, %rdi
    00001156: 	callq	_ZdaPv@PLT # Offset: 4438
    0000115b: 	movq	%r13, %rdi
    0000115e: 	callq	_ZdaPv@PLT # Offset: 4446
    00001163: 	movl	$0xfe3a6c0, %edi
    00001168: 	callq	_Znam@PLT # Offset: 4456
    0000116d: 	movsd	init_value(%rip), %xmm0
    00001175: 	movq	%rax, %r13
    00001178: 	leaq	0x363c40(%rax), %r9
    0000117f: 	xorl	%r8d, %r8d
    00001182: 	unpcklpd	%xmm0, %xmm0
.Ltmp1485:
    00001186: 	leaq	(%r13,%r8), %rdi
.Ltmp1484:
    0000118b: 	leaq	0x260(%rdi), %rdx
    00001192: 	movq	%rdi, %rcx
    00001195: 	leaq	0xb220(%rdi), %rsi
    0000119c: 	nopl	(%rax) # Size: 4
.Ltmp1483:
    000011a0: 	movq	%rcx, %rax
    000011a3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1482:
    000011a8: 	movups	%xmm0, (%rax)
    000011ab: 	addq	$0x10, %rax
    000011af: 	cmpq	%rax, %rdx
    000011b2: 	jne	.Ltmp1482 # Offset: 4530
    000011b4: 	addq	$0x260, %rdx
    000011bb: 	addq	$0x260, %rcx
    000011c2: 	cmpq	%rsi, %rdx
    000011c5: 	jne	.Ltmp1483 # Offset: 4549
    000011c7: 	addq	$0xafc0, %rdi
    000011ce: 	cmpq	%rdi, %r9
    000011d1: 	jne	.Ltmp1484 # Offset: 4561
    000011d3: 	addq	$0x363c40, %r8
    000011da: 	addq	$0x363c40, %r9
    000011e1: 	cmpq	$0xfe3a6c0, %r8
    000011e8: 	jne	.Ltmp1485 # Offset: 4584
    000011ea: 	leaq	DATAat0x15323(%rip), %rdx
    000011f1: 	movq	%r12, %rsi
    000011f4: 	movq	%rbp, %rdi
    000011f7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4599
    000011fc: 	movq	%rbp, %rsi
    000011ff: 	movq	%r13, %rdi
    00001202: 	callq	_Z17test_loop_4D_ABCDIdEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4610
    00001207: 	movq	0x110(%rsp), %rdi
    0000120f: 	cmpq	%rbx, %rdi
    00001212: 	je	.Ltmp1486 # Offset: 4626
    00001214: 	movq	0x120(%rsp), %rax
    0000121c: 	leaq	0x1(%rax), %rsi
    00001220: 	callq	_ZdlPvm@PLT # Offset: 4640
.Ltmp1486:
    00001225: 	leaq	DATAat0x1533d(%rip), %rdx
    0000122c: 	movq	%r12, %rsi
    0000122f: 	movq	%rbp, %rdi
    00001232: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4658
    00001237: 	movq	%rbp, %rsi
    0000123a: 	movq	%r13, %rdi
    0000123d: 	callq	_Z18test_loop_4D_ABCD2IdEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4669
    00001242: 	movq	0x110(%rsp), %rdi
    0000124a: 	cmpq	%rbx, %rdi
    0000124d: 	je	.Ltmp1487 # Offset: 4685
    0000124f: 	movq	0x120(%rsp), %rax
    00001257: 	leaq	0x1(%rax), %rsi
    0000125b: 	callq	_ZdlPvm@PLT # Offset: 4699
.Ltmp1487:
    00001260: 	leaq	DATAat0x15358(%rip), %rdx
    00001267: 	movq	%r12, %rsi
    0000126a: 	movq	%rbp, %rdi
    0000126d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4717
    00001272: 	movq	%rbp, %rsi
    00001275: 	movq	%r13, %rdi
    00001278: 	callq	_Z17test_loop_4D_DCBAIdEvPA79_A74_A76_KT_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4728
    0000127d: 	movq	0x110(%rsp), %rdi
    00001285: 	cmpq	%rbx, %rdi
    00001288: 	je	.Ltmp1488 # Offset: 4744
    0000128a: 	movq	0x120(%rsp), %rax
    00001292: 	leaq	0x1(%rax), %rsi
    00001296: 	callq	_ZdlPvm@PLT # Offset: 4758
.Ltmp1488:
    0000129b: 	movq	%r14, %rdx
    0000129e: 	movq	%r12, %rsi
    000012a1: 	movq	%rbp, %rdi
    000012a4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4772
    000012a9: 	movl	iterations(%rip), %edx
    000012af: 	movq	0x110(%rsp), %rdi
    000012b7: 	movl	$0x1138bd2, %esi
    000012bc: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 4796
    000012c1: 	movq	%r13, %rdi
    000012c4: 	callq	_ZdaPv@PLT # Offset: 4804
    000012c9: 	movq	0x110(%rsp), %rdi
    000012d1: 	cmpq	%rbx, %rdi
    000012d4: 	je	.Ltmp1489 # Offset: 4820
    000012d6: 	movq	0x120(%rsp), %rax
    000012de: 	leaq	0x1(%rax), %rsi
    000012e2: 	callq	_ZdlPvm@PLT # Offset: 4834
.Ltmp1489:
    000012e7: 	movq	0xf0(%rsp), %rdi
    000012ef: 	leaq	0x100(%rsp), %rax
    000012f7: 	cmpq	%rax, %rdi
    000012fa: 	je	.Ltmp1490 # Offset: 4858
    000012fc: 	movq	0x100(%rsp), %rax
    00001304: 	leaq	0x1(%rax), %rsi
    00001308: 	callq	_ZdlPvm@PLT # Offset: 4872
.Ltmp1490:
    0000130d: 	movq	0xd0(%rsp), %rdi
    00001315: 	leaq	0xe0(%rsp), %rax
    0000131d: 	cmpq	%rax, %rdi
    00001320: 	je	.Ltmp1491 # Offset: 4896
    00001322: 	movq	0xe0(%rsp), %rax
    0000132a: 	leaq	0x1(%rax), %rsi
    0000132e: 	callq	_ZdlPvm@PLT # Offset: 4910
.Ltmp1491:
    00001333: 	movq	0xb0(%rsp), %rdi
    0000133b: 	leaq	0xc0(%rsp), %rax
    00001343: 	cmpq	%rax, %rdi
    00001346: 	je	.Ltmp1492 # Offset: 4934
    00001348: 	movq	0xc0(%rsp), %rax
    00001350: 	leaq	0x1(%rax), %rsi
    00001354: 	callq	_ZdlPvm@PLT # Offset: 4948
.Ltmp1492:
    00001359: 	movq	0x90(%rsp), %rdi
    00001361: 	leaq	0xa0(%rsp), %rax
    00001369: 	cmpq	%rax, %rdi
    0000136c: 	je	.Ltmp1493 # Offset: 4972
    0000136e: 	movq	0xa0(%rsp), %rax
    00001376: 	leaq	0x1(%rax), %rsi
    0000137a: 	callq	_ZdlPvm@PLT # Offset: 4986
.Ltmp1493:
    0000137f: 	movq	0x70(%rsp), %rdi
    00001384: 	leaq	0x80(%rsp), %rax
    0000138c: 	cmpq	%rax, %rdi
    0000138f: 	je	.Ltmp1494 # Offset: 5007
    00001391: 	movq	0x80(%rsp), %rax
    00001399: 	leaq	0x1(%rax), %rsi
    0000139d: 	callq	_ZdlPvm@PLT # Offset: 5021
.Ltmp1494:
    000013a2: 	movq	0x50(%rsp), %rdi
    000013a7: 	leaq	0x60(%rsp), %rax
    000013ac: 	cmpq	%rax, %rdi
    000013af: 	je	.Ltmp1495 # Offset: 5039
    000013b1: 	movq	0x60(%rsp), %rax
    000013b6: 	leaq	0x1(%rax), %rsi
    000013ba: 	callq	_ZdlPvm@PLT # Offset: 5050
.Ltmp1495:
    000013bf: 	movq	0x138(%rsp), %rax
    000013c7: 	subq	%fs:0x28, %rax
    000013d0: 	jne	.Ltmp1496 # Offset: 5072
    000013d6: 	addq	$0x148, %rsp
    000013dd: 	popq	%rbx
    000013de: 	popq	%rbp
    000013df: 	popq	%r12
    000013e1: 	popq	%r13
    000013e3: 	popq	%r14
    000013e5: 	popq	%r15
    000013e7: 	retq # Offset: 5095
.Ltmp1410:
    000013e8: 	movq	-0x8(%rdx), %rax
    000013ec: 	addq	$0x200, %rax
    000013f2: 	jmp	.Ltmp1497 # Offset: 5106
.Ltmp1462:
    000013f7: 	movq	-0x8(%rdx), %rax
    000013fb: 	addq	$0x200, %rax
    00001401: 	jmp	.Ltmp1498 # Offset: 5121
.Ltmp1449:
    00001406: 	movq	-0x8(%rdx), %rax
    0000140a: 	addq	$0x200, %rax
    00001410: 	jmp	.Ltmp1499 # Offset: 5136
.Ltmp1443:
    00001415: 	movq	-0x8(%rdx), %rax
    00001419: 	addq	$0x200, %rax
    0000141f: 	jmp	.Ltmp1500 # Offset: 5151
.Ltmp1437:
    00001424: 	movq	-0x8(%rdx), %rax
    00001428: 	addq	$0x200, %rax
    0000142e: 	jmp	.Ltmp1501 # Offset: 5166
.Ltmp1430:
    00001433: 	movq	-0x8(%rdx), %rax
    00001437: 	addq	$0x200, %rax
    0000143d: 	jmp	.Ltmp1502 # Offset: 5181
.Ltmp1423:
    00001442: 	movq	-0x8(%rdx), %rax
    00001446: 	addq	$0x200, %rax
    0000144c: 	jmp	.Ltmp1503 # Offset: 5196
.Ltmp1417:
    00001451: 	movq	-0x8(%rdx), %rax
    00001455: 	addq	$0x200, %rax
    0000145b: 	jmp	.Ltmp1504 # Offset: 5211
.Ltmp1496:
    00001460: 	callq	__stack_chk_fail@PLT # Offset: 5216
    00001465: 	endbr64
.Ltmp1506:
    00001469: 	movq	%rax, %rbp
    0000146c: 	jmp	.Ltmp1505 # Offset: 5228
    0000146e: 	endbr64
    00001472: 	jmp	.Ltmp1506 # Offset: 5234
    00001474: 	endbr64
.Ltmp1508:
    00001478: 	movq	%rax, %rbp
    0000147b: 	jmp	.Ltmp1507 # Offset: 5243
    0000147d: 	endbr64
    00001481: 	jmp	.Ltmp1508 # Offset: 5249
    00001483: 	endbr64
    00001487: 	jmp	.Ltmp1508 # Offset: 5255
.Ltmp1505:
    00001489: 	movq	0x110(%rsp), %rdi
    00001491: 	cmpq	%rbx, %rdi
    00001494: 	je	.Ltmp1509 # Offset: 5268
.Ltmp1522:
    00001496: 	movq	0x120(%rsp), %rax
    0000149e: 	leaq	0x1(%rax), %rsi
    000014a2: 	callq	_ZdlPvm@PLT # Offset: 5282
    000014a7: 	jmp	.Ltmp1509 # Offset: 5287
    000014a9: 	endbr64
    000014ad: 	movq	%rax, %rbp
    000014b0: 	jmp	.Ltmp1510 # Offset: 5296
.Ltmp1507:
    000014b2: 	movq	0x110(%rsp), %rdi
    000014ba: 	cmpq	%rbx, %rdi
    000014bd: 	je	.Ltmp1510 # Offset: 5309
    000014bf: 	movq	0x120(%rsp), %rax
    000014c7: 	leaq	0x1(%rax), %rsi
    000014cb: 	callq	_ZdlPvm@PLT # Offset: 5323
.Ltmp1510:
    000014d0: 	movq	0x70(%rsp), %rdi
    000014d5: 	leaq	0x80(%rsp), %rax
    000014dd: 	cmpq	%rax, %rdi
    000014e0: 	je	.Ltmp1509 # Offset: 5344
    000014e2: 	movq	0x80(%rsp), %rax
    000014ea: 	leaq	0x1(%rax), %rsi
    000014ee: 	callq	_ZdlPvm@PLT # Offset: 5358
.Ltmp1509:
    000014f3: 	movq	0x50(%rsp), %rdi
    000014f8: 	leaq	0x60(%rsp), %rax
    000014fd: 	cmpq	%rax, %rdi
    00001500: 	je	.Ltmp1511 # Offset: 5376
    00001502: 	movq	0x60(%rsp), %rax
    00001507: 	leaq	0x1(%rax), %rsi
    0000150b: 	callq	_ZdlPvm@PLT # Offset: 5387
.Ltmp1511:
    00001510: 	movq	%rbp, %rdi
    00001513: 	callq	_Unwind_Resume@PLT # Offset: 5395
    00001518: 	endbr64
.Ltmp1516:
    0000151c: 	movq	%rax, %rbp
    0000151f: 	jmp	.Ltmp1512 # Offset: 5407
    00001521: 	endbr64
    00001525: 	movq	%rax, %rbp
    00001528: 	jmp	.Ltmp1513 # Offset: 5416
.Ltmp1512:
    0000152a: 	movq	0x110(%rsp), %rdi
    00001532: 	cmpq	%rbx, %rdi
    00001535: 	je	.Ltmp1513 # Offset: 5429
    00001537: 	movq	0x120(%rsp), %rax
    0000153f: 	leaq	0x1(%rax), %rsi
    00001543: 	callq	_ZdlPvm@PLT # Offset: 5443
.Ltmp1513:
    00001548: 	movq	0xf0(%rsp), %rdi
    00001550: 	leaq	0x100(%rsp), %rax
    00001558: 	cmpq	%rax, %rdi
    0000155b: 	je	.Ltmp1514 # Offset: 5467
    0000155d: 	movq	0x100(%rsp), %rax
    00001565: 	leaq	0x1(%rax), %rsi
    00001569: 	callq	_ZdlPvm@PLT # Offset: 5481
.Ltmp1514:
    0000156e: 	movq	0xd0(%rsp), %rdi
    00001576: 	leaq	0xe0(%rsp), %rax
    0000157e: 	cmpq	%rax, %rdi
    00001581: 	je	.Ltmp1515 # Offset: 5505
    00001587: 	movq	0xe0(%rsp), %rax
    0000158f: 	leaq	0x1(%rax), %rsi
    00001593: 	callq	_ZdlPvm@PLT # Offset: 5523
    00001598: 	jmp	.Ltmp1515 # Offset: 5528
    0000159d: 	endbr64
    000015a1: 	jmp	.Ltmp1516 # Offset: 5537
    000015a6: 	endbr64
.Ltmp1525:
    000015aa: 	movq	%rax, %rbp
    000015ad: 	jmp	.Ltmp1517 # Offset: 5549
    000015b2: 	endbr64
.Ltmp1523:
    000015b6: 	movq	%rax, %rbp
    000015b9: 	jmp	.Ltmp1518 # Offset: 5561
    000015be: 	endbr64
    000015c2: 	movq	%rax, %rbp
    000015c5: 	jmp	.Ltmp1514 # Offset: 5573
    000015c7: 	endbr64
.Ltmp1520:
    000015cb: 	movq	%rax, %rbp
    000015ce: 	jmp	.Ltmp1519 # Offset: 5582
    000015d0: 	endbr64
    000015d4: 	jmp	.Ltmp1520 # Offset: 5588
    000015d6: 	endbr64
    000015da: 	jmp	.Ltmp1520 # Offset: 5594
    000015dc: 	endbr64
    000015e0: 	jmp	.Ltmp1520 # Offset: 5600
.Ltmp1519:
    000015e2: 	movq	0x110(%rsp), %rdi
    000015ea: 	cmpq	%rbx, %rdi
    000015ed: 	je	.Ltmp1514 # Offset: 5613
    000015f3: 	movq	0x120(%rsp), %rax
    000015fb: 	leaq	0x1(%rax), %rsi
    000015ff: 	callq	_ZdlPvm@PLT # Offset: 5631
    00001604: 	jmp	.Ltmp1514 # Offset: 5636
    00001609: 	endbr64
    0000160d: 	jmp	.Ltmp1520 # Offset: 5645
    0000160f: 	endbr64
    00001613: 	jmp	.Ltmp1520 # Offset: 5651
    00001615: 	endbr64
    00001619: 	movq	%rax, %rbp
    0000161c: 	jmp	.Ltmp1521 # Offset: 5660
    0000161e: 	endbr64
    00001622: 	movq	%rax, %rbp
    00001625: 	jmp	.Ltmp1509 # Offset: 5669
.Ltmp1521:
    0000162a: 	movq	0x110(%rsp), %rdi
    00001632: 	leaq	0x120(%rsp), %rax
    0000163a: 	cmpq	%rax, %rdi
    0000163d: 	jne	.Ltmp1522 # Offset: 5693
    00001643: 	jmp	.Ltmp1509 # Offset: 5699
    00001648: 	endbr64
    0000164c: 	jmp	.Ltmp1516 # Offset: 5708
    00001651: 	endbr64
    00001655: 	jmp	.Ltmp1516 # Offset: 5717
    0000165a: 	endbr64
    0000165e: 	jmp	.Ltmp1523 # Offset: 5726
    00001663: 	endbr64
    00001667: 	movq	%rax, %rbp
    0000166a: 	jmp	.Ltmp1524 # Offset: 5738
    0000166c: 	endbr64
    00001670: 	jmp	.Ltmp1523 # Offset: 5744
.Ltmp1518:
    00001675: 	movq	0x110(%rsp), %rdi
    0000167d: 	cmpq	%rbx, %rdi
    00001680: 	je	.Ltmp1524 # Offset: 5760
    00001682: 	movq	0x120(%rsp), %rax
    0000168a: 	leaq	0x1(%rax), %rsi
    0000168e: 	callq	_ZdlPvm@PLT # Offset: 5774
.Ltmp1524:
    00001693: 	movq	0x90(%rsp), %rdi
    0000169b: 	leaq	0xa0(%rsp), %rax
    000016a3: 	cmpq	%rax, %rdi
    000016a6: 	je	.Ltmp1510 # Offset: 5798
    000016ac: 	movq	0xa0(%rsp), %rax
    000016b4: 	leaq	0x1(%rax), %rsi
    000016b8: 	callq	_ZdlPvm@PLT # Offset: 5816
    000016bd: 	jmp	.Ltmp1510 # Offset: 5821
.Ltmp1517:
    000016c2: 	movq	0x110(%rsp), %rdi
    000016ca: 	cmpq	%rbx, %rdi
    000016cd: 	je	.Ltmp1515 # Offset: 5837
    000016cf: 	movq	0x120(%rsp), %rax
    000016d7: 	leaq	0x1(%rax), %rsi
    000016db: 	callq	_ZdlPvm@PLT # Offset: 5851
.Ltmp1515:
    000016e0: 	movq	0xb0(%rsp), %rdi
    000016e8: 	leaq	0xc0(%rsp), %rax
    000016f0: 	cmpq	%rax, %rdi
    000016f3: 	je	.Ltmp1524 # Offset: 5875
    000016f5: 	movq	0xc0(%rsp), %rax
    000016fd: 	leaq	0x1(%rax), %rsi
    00001701: 	callq	_ZdlPvm@PLT # Offset: 5889
    00001706: 	jmp	.Ltmp1524 # Offset: 5894
    00001708: 	endbr64
    0000170c: 	jmp	.Ltmp1523 # Offset: 5900
    00001711: 	endbr64
    00001715: 	jmp	.Ltmp1523 # Offset: 5909
    0000171a: 	endbr64
    0000171e: 	movq	%rax, %rbp
    00001721: 	jmp	.Ltmp1515 # Offset: 5921
    00001723: 	endbr64
    00001727: 	jmp	.Ltmp1523 # Offset: 5927
    0000172c: 	endbr64
    00001730: 	jmp	.Ltmp1523 # Offset: 5936
    00001735: 	endbr64
    00001739: 	jmp	.Ltmp1523 # Offset: 5945
    0000173e: 	endbr64
    00001742: 	jmp	.Ltmp1525 # Offset: 5954
    00001747: 	endbr64
    0000174b: 	jmp	.Ltmp1525 # Offset: 5963
    00001750: 	endbr64
    00001754: 	jmp	.Ltmp1525 # Offset: 5972
    00001759: 	endbr64
    0000175d: 	jmp	.Ltmp1525 # Offset: 5981
    00001762: 	endbr64
    00001766: 	jmp	.Ltmp1525 # Offset: 5990
    0000176b: 	endbr64
    0000176f: 	jmp	.Ltmp1525 # Offset: 5999
    00001774: 	endbr64
    00001778: 	jmp	.Ltmp1525 # Offset: 6008
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIdEvv"

Binary Function "_fini" after disassembly {
  Number      : 101
  State       : disassembled
  Address     : 0x14810
  Size        : 0xd
  MaxSize     : 0xd
  Offset      : 0x14810
  Section     : .fini
  Orc Section : .local.text._fini
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0100:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	addq	$0x8, %rsp
    0000000c: 	retq # Offset: 12
DWARF CFI Instructions:
    <empty>
End of Function "_fini"

BOLT-INFO: 0 out of 102 functions in the binary (0.0%) have non-empty execution profile
BOLT-INFO: 1026 instructions were shortened
BOLT-INFO: removed 93 empty blocks
BOLT-INFO: patched build-id (flipped last bit)
BOLT: 97 out of 140 functions were overwritten.
BOLT-INFO: rewriting .eh_frame_hdr in-place
BOLT-INFO: setting _end to 0x20367c
