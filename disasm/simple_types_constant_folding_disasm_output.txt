BOLT-INFO: shared object or position-independent executable detected
BOLT-INFO: Target architecture: x86_64
BOLT-INFO: BOLT version: <unknown>
BOLT-INFO: first alloc address is 0x0
BOLT-INFO: creating new program header table at address 0x200000, offset 0x200000
BOLT-INFO: enabling lite mode
BOLT-WARNING: ignoring symbol __bss_start at 0x28028, which lies outside .bss
BOLT-WARNING: split function detected on input : _GLOBAL__sub_I_results.cold
Binary Function "_init" after disassembly {
  Number      : 1
  State       : disassembled
  Address     : 0x1000
  Size        : 0x1b
  MaxSize     : 0x1b
  Offset      : 0x1000
  Section     : .init
  Orc Section : .local.text._init
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB00:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	movq	DATAat0x27ff0(%rip), %rax
    0000000f: 	testq	%rax, %rax
    00000012: 	je	.Ltmp0 # Offset: 18
    00000014: 	callq	*%rax # Offset: 20
.Ltmp0:
    00000016: 	addq	$0x8, %rsp
    0000001a: 	retq # Offset: 26
DWARF CFI Instructions:
    <empty>
End of Function "_init"

Binary Function "main" after disassembly {
  Number      : 3
  State       : disassembled
  Address     : 0x13f0
  Size        : 0xea
  MaxSize     : 0xf0
  Offset      : 0x13f0
  Section     : .text
  Orc Section : .local.text.main
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB02:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	pushq	%rbp
    0000000b: 	pushq	%rbx
    0000000c: 	testl	%edi, %edi
    0000000e: 	jle	.Ltmp1 # Offset: 14
    00000014: 	leal	-0x1(%rdi), %eax
    00000017: 	movl	%edi, %r13d
    0000001a: 	movq	%rsi, %r14
    0000001d: 	movq	%rsi, %rbx
    00000020: 	leaq	0x8(%rsi,%rax,8), %r12
    00000025: 	leaq	DATAat0x23150(%rip), %rbp
    0000002c: 	nopl	(%rax) # Size: 4
.Ltmp2:
    00000030: 	movq	(%rbx), %rdx
    00000033: 	movq	%rbp, %rsi
    00000036: 	movl	$0x1, %edi
    0000003b: 	xorl	%eax, %eax
    0000003d: 	addq	$0x8, %rbx
    00000041: 	callq	__printf_chk@PLT # Offset: 65
    00000046: 	cmpq	%r12, %rbx
    00000049: 	jne	.Ltmp2 # Offset: 73
    0000004b: 	xorl	%eax, %eax
    0000004d: 	leaq	DATAat0x23136(%rip), %rsi
    00000054: 	movl	$0x1, %edi
    00000059: 	callq	__printf_chk@PLT # Offset: 89
    0000005e: 	cmpl	$0x1, %r13d
    00000062: 	jg	.Ltmp3 # Offset: 98
.Ltmp4:
    00000064: 	callq	_Z11TestOneTypeIaEvv # Offset: 100
    00000069: 	callq	_Z11TestOneTypeIhEvv # Offset: 105
    0000006e: 	callq	_Z11TestOneTypeIsEvv # Offset: 110
    00000073: 	callq	_Z11TestOneTypeItEvv # Offset: 115
    00000078: 	callq	_Z11TestOneTypeIiEvv # Offset: 120
    0000007d: 	callq	_Z11TestOneTypeIjEvv # Offset: 125
    00000082: 	callq	_Z11TestOneTypeIlEvv # Offset: 130
    00000087: 	callq	_Z11TestOneTypeImEvv # Offset: 135
    0000008c: 	callq	_Z19TestOneTypeFloatingIfEvv # Offset: 140
    00000091: 	callq	_Z19TestOneTypeFloatingIdEvv # Offset: 145
    00000096: 	popq	%rbx
    00000097: 	xorl	%eax, %eax
    00000099: 	popq	%rbp
    0000009a: 	popq	%r12
    0000009c: 	popq	%r13
    0000009e: 	popq	%r14
    000000a0: 	retq # Offset: 160
.Ltmp3:
    000000a1: 	movq	0x8(%r14), %rdi
    000000a5: 	movl	$0xa, %edx
    000000aa: 	xorl	%esi, %esi
    000000ac: 	callq	strtol@PLT # Offset: 172
    000000b1: 	movl	%eax, base_iterations(%rip)
    000000b7: 	cmpl	$0x2, %r13d
    000000bb: 	jle	.Ltmp4 # Offset: 187
    000000bd: 	movq	0x10(%r14), %rdi
    000000c1: 	xorl	%esi, %esi
    000000c3: 	callq	strtod@PLT # Offset: 195
    000000c8: 	movsd	%xmm0, init_value(%rip)
    000000d0: 	jmp	.Ltmp4 # Offset: 208
.Ltmp1:
    000000d2: 	leaq	DATAat0x23136(%rip), %rsi
    000000d9: 	movl	$0x1, %edi
    000000de: 	xorl	%eax, %eax
    000000e0: 	callq	__printf_chk@PLT # Offset: 224
    000000e5: 	jmp	.Ltmp4 # Offset: 229
DWARF CFI Instructions:
    <empty>
End of Function "main"

Binary Function "_start" after disassembly {
  Number      : 5
  State       : disassembled
  Address     : 0x15d0
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x15d0
  Section     : .text
  Orc Section : .local.text._start
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB04:
    00000000: 	endbr64
    00000004: 	xorl	%ebp, %ebp
    00000006: 	movq	%rdx, %r9
    00000009: 	popq	%rsi
    0000000a: 	movq	%rsp, %rdx
    0000000d: 	andq	$-0x10, %rsp
    00000011: 	pushq	%rax
    00000012: 	pushq	%rsp
    00000013: 	xorl	%r8d, %r8d
    00000016: 	xorl	%ecx, %ecx
    00000018: 	leaq	main(%rip), %rdi
    0000001f: 	callq	*DATAat0x27fe0(%rip) # Offset: 31
    00000025: 	hlt
DWARF CFI Instructions:
    <empty>
End of Function "_start"

Binary Function "deregister_tm_clones/1(*2)" after disassembly {
  All names   : deregister_tm_clones/1
                deregister_tm_clones/crtstuff.c/1
  Number      : 6
  State       : disassembled
  Address     : 0x1600
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x1600
  Section     : .text
  Orc Section : .local.text.deregister_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB05:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rax
    0000000e: 	cmpq	%rdi, %rax
    00000011: 	je	.Ltmp5 # Offset: 17
    00000013: 	movq	DATAat0x27fe8(%rip), %rax
    0000001a: 	testq	%rax, %rax
    0000001d: 	je	.Ltmp5 # Offset: 29
    0000001f: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 31
    00000021: 	nopl	(%rax) # Size: 7
.Ltmp5:
    00000028: 	retq # Offset: 40
    00000029: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "deregister_tm_clones/1(*2)"

Binary Function "register_tm_clones/1(*2)" after disassembly {
  All names   : register_tm_clones/1
                register_tm_clones/crtstuff.c/1
  Number      : 7
  State       : disassembled
  Address     : 0x1630
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x1630
  Section     : .text
  Orc Section : .local.text.register_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB06:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rsi
    0000000e: 	subq	%rdi, %rsi
    00000011: 	movq	%rsi, %rax
    00000014: 	shrq	$0x3f, %rsi
    00000018: 	sarq	$0x3, %rax
    0000001c: 	addq	%rax, %rsi
    0000001f: 	sarq	%rsi
    00000022: 	je	.Ltmp6 # Offset: 34
    00000024: 	movq	DATAat0x27ff8(%rip), %rax
    0000002b: 	testq	%rax, %rax
    0000002e: 	je	.Ltmp6 # Offset: 46
    00000030: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 48
    00000032: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "register_tm_clones/1(*2)"

Binary Function "__do_global_dtors_aux/1(*2)" after disassembly {
  All names   : __do_global_dtors_aux/1
                __do_global_dtors_aux/crtstuff.c/1
  Number      : 8
  State       : disassembled
  Address     : 0x1670
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x1670
  Section     : .text
  Orc Section : .local.text.__do_global_dtors_aux/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB07:
    00000000: 	endbr64
    00000004: 	cmpb	$0x0, "completed.0/1"(%rip)
    0000000b: 	jne	.Ltmp7 # Offset: 11
    0000000d: 	pushq	%rbp
    0000000e: 	cmpq	$0x0, __cxa_finalize@GOT(%rip)
    00000016: 	movq	%rsp, %rbp
    00000019: 	je	.Ltmp8 # Offset: 25
    0000001b: 	movq	__dso_handle(%rip), %rdi
    00000022: 	callq	__cxa_finalize@PLT # Offset: 34
.Ltmp8:
    00000027: 	callq	"deregister_tm_clones/1" # Offset: 39
    0000002c: 	movb	$0x1, "completed.0/1"(%rip)
    00000033: 	popq	%rbp
    00000034: 	retq # Offset: 52
    00000035: 	nopl	(%rax) # Size: 3
.Ltmp7:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "__do_global_dtors_aux/1(*2)"

Binary Function "frame_dummy/1(*2)" after disassembly {
  All names   : frame_dummy/1
                frame_dummy/crtstuff.c/1
  Number      : 9
  State       : disassembled
  Address     : 0x16b0
  Size        : 0x10
  MaxSize     : 0x10
  Offset      : 0x16b0
  Section     : .text
  Orc Section : .local.text.frame_dummy/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB08:
    00000000: 	endbr64
    00000004: 	jmp	"register_tm_clones/1" # TAILCALL  # Offset: 4
    00000009: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "frame_dummy/1(*2)"

Binary Function "_Z13record_resultdPKc" after disassembly {
  Number      : 10
  State       : disassembled
  Address     : 0x16c0
  Size        : 0xa0
  MaxSize     : 0xa0
  Offset      : 0x16c0
  Section     : .text
  Orc Section : .local.text._Z13record_resultdPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB09:
    00000000: 	endbr64
    00000004: 	pushq	%rbx
    00000005: 	movq	%rdi, %rbx
    00000008: 	subq	$0x10, %rsp
    0000000c: 	movq	results(%rip), %rdi
    00000013: 	movl	allocated_results(%rip), %esi
    00000019: 	testq	%rdi, %rdi
    0000001c: 	je	.Ltmp9 # Offset: 28
    0000001e: 	movl	current_test(%rip), %eax
    00000024: 	cmpl	%esi, %eax
    00000026: 	jl	.Ltmp10 # Offset: 38
.Ltmp9:
    00000028: 	addl	$0xa, %esi
    0000002b: 	movsd	%xmm0, 0x8(%rsp)
    00000031: 	movl	%esi, allocated_results(%rip)
    00000037: 	movslq	%esi, %rsi
    0000003a: 	shlq	$0x4, %rsi
    0000003e: 	callq	realloc@PLT # Offset: 62
    00000043: 	movq	%rax, results(%rip)
    0000004a: 	movq	%rax, %rdi
    0000004d: 	testq	%rax, %rax
    00000050: 	je	.Ltmp11 # Offset: 80
    00000052: 	movl	current_test(%rip), %eax
    00000058: 	movsd	0x8(%rsp), %xmm0
.Ltmp10:
    0000005e: 	movslq	%eax, %rdx
    00000061: 	addl	$0x1, %eax
    00000064: 	shlq	$0x4, %rdx
    00000068: 	addq	%rdx, %rdi
    0000006b: 	movsd	%xmm0, (%rdi)
    0000006f: 	movq	%rbx, 0x8(%rdi)
    00000073: 	movl	%eax, current_test(%rip)
    00000079: 	addq	$0x10, %rsp
    0000007d: 	popq	%rbx
    0000007e: 	retq # Offset: 126
.Ltmp11:
    0000007f: 	movl	allocated_results(%rip), %edx
    00000085: 	movl	$0x1, %edi
    0000008a: 	leaq	DATAat0x23008(%rip), %rsi
    00000091: 	xorl	%eax, %eax
    00000093: 	callq	__printf_chk@PLT # Offset: 147
    00000098: 	orl	$-0x1, %edi
    0000009b: 	callq	exit@PLT # Offset: 155
DWARF CFI Instructions:
    <empty>
End of Function "_Z13record_resultdPKc"

Binary Function "_Z9summarizePKciiii" after disassembly {
  Number      : 11
  State       : disassembled
  Address     : 0x1760
  Size        : 0x325
  MaxSize     : 0x330
  Offset      : 0x1760
  Section     : .text
  Orc Section : .local.text._Z9summarizePKciiii
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB010:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x38, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movl	%r8d, 0x2c(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp12 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	movl	%esi, %r15d
    0000002b: 	movl	%edx, %r13d
    0000002e: 	jle	.Ltmp13 # Offset: 46
    00000034: 	movq	results(%rip), %rcx
    0000003b: 	subl	$0x1, %eax
    0000003e: 	movl	$0xc, %ebx
    00000043: 	shlq	$0x4, %rax
    00000047: 	leaq	0x8(%rcx), %r14
    0000004b: 	leaq	0x18(%rcx,%rax), %rbp
.Ltmp14:
    00000050: 	movq	(%r14), %rdi
    00000053: 	callq	strlen@PLT # Offset: 83
    00000058: 	cmpl	%eax, %ebx
    0000005a: 	cmovll	%eax, %ebx
    0000005d: 	addq	$0x10, %r14
    00000061: 	cmpq	%r14, %rbp
    00000064: 	jne	.Ltmp14 # Offset: 100
    00000066: 	leal	-0xc(%rbx), %edx
.Ltmp27:
    00000069: 	leaq	DATAat0x23152(%rip), %rbp
    00000070: 	leaq	DATAat0x23028(%rip), %rsi
    00000077: 	movl	$0x1, %edi
    0000007c: 	xorl	%eax, %eax
    0000007e: 	movq	%rbp, %rcx
    00000081: 	callq	__printf_chk@PLT # Offset: 129
    00000086: 	movl	%ebx, %edx
    00000088: 	movq	%rbp, %rcx
    0000008b: 	movl	$0x1, %edi
    00000090: 	leaq	DATAat0x23068(%rip), %rsi
    00000097: 	xorl	%eax, %eax
    00000099: 	callq	__printf_chk@PLT # Offset: 153
    0000009e: 	movl	current_test(%rip), %edx
    000000a4: 	testl	%edx, %edx
    000000a6: 	jle	.Ltmp15 # Offset: 166
    000000ac: 	pxor	%xmm0, %xmm0
    000000b0: 	pxor	%xmm1, %xmm1
    000000b4: 	xorl	%r14d, %r14d
    000000b7: 	movsd	DATAat0x23458(%rip), %xmm3
    000000bf: 	cvtsi2sd	%r15d, %xmm0
    000000c4: 	leaq	DATAat0x23098(%rip), %rbp
    000000cb: 	cvtsi2sd	%r13d, %xmm1
    000000d0: 	mulsd	%xmm1, %xmm0
    000000d4: 	divsd	DATAat0x23450(%rip), %xmm0
    000000dc: 	movsd	%xmm0, 0x20(%rsp)
    000000e2: 	jmp	.Ltmp16 # Offset: 226
    000000e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp20:
    000000f0: 	comisd	%xmm0, %xmm3
    000000f4: 	ja	.Ltmp17 # Offset: 244
    000000fa: 	movq	DATAat0x23448(%rip), %rdi
    00000101: 	movq	%rdi, %xmm2
.Ltmp21:
    00000106: 	comisd	%xmm0, %xmm3
    0000010a: 	movq	DATAat0x23448(%rip), %rsi
    00000111: 	movq	%rsi, %xmm1
    00000116: 	ja	.Ltmp18 # Offset: 278
    00000118: 	movsd	0x20(%rsp), %xmm1
    0000011e: 	divsd	%xmm0, %xmm1
.Ltmp18:
    00000122: 	movq	0x8(%rax), %r15
    00000126: 	movsd	%xmm0, 0x18(%rsp)
    0000012c: 	addq	$0x1, %r14
    00000130: 	movsd	%xmm1, 0x10(%rsp)
    00000136: 	movq	%r15, %rdi
    00000139: 	movsd	%xmm2, 0x8(%rsp)
    0000013f: 	callq	strlen@PLT # Offset: 319
    00000144: 	movsd	0x8(%rsp), %xmm2
    0000014a: 	movl	%ebx, %ecx
    0000014c: 	movq	%r15, %r9
    0000014f: 	movsd	0x10(%rsp), %xmm1
    00000155: 	subl	%eax, %ecx
    00000157: 	movl	$0x1, %edi
    0000015c: 	movl	%r13d, %edx
    0000015f: 	movsd	0x18(%rsp), %xmm0
    00000165: 	leaq	DATAat0x23137(%rip), %r8
    0000016c: 	movq	%rbp, %rsi
    0000016f: 	movl	$0x3, %eax
    00000174: 	callq	__printf_chk@PLT # Offset: 372
    00000179: 	movl	current_test(%rip), %eax
    0000017f: 	movq	DATAat0x23458(%rip), %rdi
    00000186: 	cmpl	%r14d, %eax
    00000189: 	movq	%rdi, %xmm3
    0000018e: 	jle	.Ltmp19 # Offset: 398
.Ltmp16:
    00000190: 	movq	results(%rip), %rax
    00000197: 	movq	%r14, %rcx
    0000019a: 	movl	%r14d, %r13d
    0000019d: 	shlq	$0x4, %rcx
    000001a1: 	movsd	(%rax), %xmm1
    000001a5: 	addq	%rcx, %rax
    000001a8: 	movsd	(%rax), %xmm0
    000001ac: 	comisd	%xmm1, %xmm3
    000001b0: 	ja	.Ltmp20 # Offset: 432
    000001b6: 	movapd	%xmm0, %xmm2
    000001ba: 	divsd	%xmm1, %xmm2
    000001be: 	jmp	.Ltmp21 # Offset: 446
    000001c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp17:
    000001c8: 	movq	DATAat0x234d0(%rip), %rsi
    000001cf: 	movq	DATAat0x23448(%rip), %rdx
    000001d6: 	movq	%rsi, %xmm2
    000001db: 	movq	%rdx, %xmm1
    000001e0: 	jmp	.Ltmp18 # Offset: 480
    000001e5: 	nopl	(%rax) # Size: 3
.Ltmp19:
    000001e8: 	testl	%eax, %eax
    000001ea: 	jle	.Ltmp15 # Offset: 490
    000001f0: 	movq	results(%rip), %rdx
    000001f7: 	leal	-0x1(%rax), %ecx
    000001fa: 	pxor	%xmm1, %xmm1
    000001fe: 	shlq	$0x4, %rcx
    00000202: 	movapd	%xmm1, %xmm0
    00000206: 	leaq	0x10(%rdx), %rax
    0000020a: 	addq	%rax, %rcx
    0000020d: 	jmp	.Ltmp22 # Offset: 525
    0000020f: 	nop # Size: 1
.Ltmp23:
    00000210: 	addq	$0x10, %rax
.Ltmp22:
    00000214: 	addsd	(%rdx), %xmm0
    00000218: 	movq	%rax, %rdx
    0000021b: 	cmpq	%rax, %rcx
    0000021e: 	jne	.Ltmp23 # Offset: 542
.Ltmp28:
    00000220: 	movq	%r12, %rdx
    00000223: 	movl	$0x1, %edi
    00000228: 	movl	$0x1, %eax
    0000022d: 	movsd	%xmm1, 0x8(%rsp)
    00000233: 	leaq	DATAat0x230c8(%rip), %rsi
    0000023a: 	callq	__printf_chk@PLT # Offset: 570
    0000023f: 	movl	0x2c(%rsp), %eax
    00000243: 	movl	current_test(%rip), %ebp
    00000249: 	testl	%eax, %eax
    0000024b: 	je	.Ltmp24 # Offset: 587
    0000024d: 	cmpl	$0x1, %ebp
    00000250: 	jg	.Ltmp25 # Offset: 592
.Ltmp24:
    00000252: 	movl	$0x0, current_test(%rip)
.Ltmp12:
    0000025c: 	addq	$0x38, %rsp
    00000260: 	popq	%rbx
    00000261: 	popq	%rbp
    00000262: 	popq	%r12
    00000264: 	popq	%r13
    00000266: 	popq	%r14
    00000268: 	popq	%r15
    0000026a: 	retq # Offset: 618
    0000026b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp25:
    00000270: 	movq	results(%rip), %rbx
    00000277: 	movsd	0x8(%rsp), %xmm1
    0000027d: 	movl	$0x1, %r13d
    00000283: 	movsd	(%rbx), %xmm5
    00000287: 	addq	$0x10, %rbx
    0000028b: 	movsd	%xmm5, 0x10(%rsp)
    00000291: 	nopl	(%rax) # Size: 7
.Ltmp26:
    00000298: 	movsd	(%rbx), %xmm0
    0000029c: 	movsd	%xmm1, 0x8(%rsp)
    000002a2: 	addl	$0x1, %r13d
    000002a6: 	addq	$0x10, %rbx
    000002aa: 	divsd	0x10(%rsp), %xmm0
    000002b0: 	callq	log@PLT # Offset: 688
    000002b5: 	movsd	0x8(%rsp), %xmm1
    000002bb: 	addsd	%xmm0, %xmm1
    000002bf: 	cmpl	%r13d, %ebp
    000002c2: 	jg	.Ltmp26 # Offset: 706
    000002c4: 	subl	$0x1, %ebp
    000002c7: 	pxor	%xmm0, %xmm0
    000002cb: 	cvtsi2sd	%ebp, %xmm0
    000002cf: 	divsd	%xmm0, %xmm1
    000002d3: 	movapd	%xmm1, %xmm0
    000002d7: 	callq	exp@PLT # Offset: 727
    000002dc: 	movq	%r12, %rdx
    000002df: 	movl	$0x1, %edi
    000002e4: 	leaq	DATAat0x23112(%rip), %rsi
    000002eb: 	movl	$0x1, %eax
    000002f0: 	callq	__printf_chk@PLT # Offset: 752
    000002f5: 	movl	$0x0, current_test(%rip)
    000002ff: 	jmp	.Ltmp12 # Offset: 767
    00000304: 	nopl	(%rax) # Size: 4
.Ltmp13:
    00000308: 	xorl	%edx, %edx
    0000030a: 	movl	$0xc, %ebx
    0000030f: 	jmp	.Ltmp27 # Offset: 783
    00000314: 	nopl	(%rax) # Size: 4
.Ltmp15:
    00000318: 	pxor	%xmm1, %xmm1
    0000031c: 	movapd	%xmm1, %xmm0
    00000320: 	jmp	.Ltmp28 # Offset: 800
DWARF CFI Instructions:
    <empty>
End of Function "_Z9summarizePKciiii"

Binary Function "_Z17summarize_simplefP8_IO_FILEPKc" after disassembly {
  Number      : 12
  State       : disassembled
  Address     : 0x1a90
  Size        : 0x1a6
  MaxSize     : 0x1b0
  Offset      : 0x1a90
  Section     : .text
  Orc Section : .local.text._Z17summarize_simplefP8_IO_FILEPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB011:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x18, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movq	%rsi, 0x8(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp29 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	jle	.Ltmp30 # Offset: 40
    0000002e: 	movq	results(%rip), %rdx
    00000035: 	subl	$0x1, %eax
    00000038: 	movl	$0xc, %ebp
    0000003d: 	shlq	$0x4, %rax
    00000041: 	leaq	0x8(%rdx), %r13
    00000045: 	leaq	0x18(%rdx,%rax), %rbx
    0000004a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp31:
    00000050: 	movq	(%r13), %rdi
    00000054: 	callq	strlen@PLT # Offset: 84
    00000059: 	cmpl	%eax, %ebp
    0000005b: 	cmovll	%eax, %ebp
    0000005e: 	addq	$0x10, %r13
    00000062: 	cmpq	%r13, %rbx
    00000065: 	jne	.Ltmp31 # Offset: 101
    00000067: 	leal	-0xc(%rbp), %ecx
.Ltmp36:
    0000006a: 	leaq	DATAat0x23152(%rip), %r8
    00000071: 	movl	$0x1, %esi
    00000076: 	xorl	%eax, %eax
    00000078: 	xorl	%ebx, %ebx
    0000007a: 	leaq	DATAat0x230f0(%rip), %rdx
    00000081: 	movq	%r12, %rdi
    00000084: 	leaq	DATAat0x23138(%rip), %r14
    0000008b: 	callq	__fprintf_chk@PLT # Offset: 139
    00000090: 	movl	$0x1, %esi
    00000095: 	movl	%ebp, %ecx
    00000097: 	movq	%r12, %rdi
    0000009a: 	leaq	DATAat0x23152(%rip), %r8
    000000a1: 	leaq	DATAat0x23126(%rip), %rdx
    000000a8: 	xorl	%eax, %eax
    000000aa: 	callq	__fprintf_chk@PLT # Offset: 170
    000000af: 	movl	current_test(%rip), %esi
    000000b5: 	testl	%esi, %esi
    000000b7: 	jle	.Ltmp32 # Offset: 183
    000000bd: 	nopl	(%rax) # Size: 3
.Ltmp33:
    000000c0: 	movq	%rbx, %rdx
    000000c3: 	shlq	$0x4, %rdx
    000000c7: 	addq	results(%rip), %rdx
    000000ce: 	movq	0x8(%rdx), %r13
    000000d2: 	movq	%rdx, %r15
    000000d5: 	movq	%r13, %rdi
    000000d8: 	callq	strlen@PLT # Offset: 216
    000000dd: 	subq	$0x8, %rsp
    000000e1: 	movsd	(%r15), %xmm0
    000000e6: 	movl	%ebx, %ecx
    000000e8: 	pushq	%r13
    000000ea: 	movl	%ebp, %r8d
    000000ed: 	movq	%r14, %rdx
    000000f0: 	leaq	DATAat0x23137(%rip), %r9
    000000f7: 	subl	%eax, %r8d
    000000fa: 	movl	$0x1, %esi
    000000ff: 	movq	%r12, %rdi
    00000102: 	movl	$0x1, %eax
    00000107: 	addq	$0x1, %rbx
    0000010b: 	callq	__fprintf_chk@PLT # Offset: 267
    00000110: 	movl	current_test(%rip), %eax
    00000116: 	popq	%rdx
    00000117: 	popq	%rcx
    00000118: 	cmpl	%ebx, %eax
    0000011a: 	jg	.Ltmp33 # Offset: 282
    0000011c: 	testl	%eax, %eax
    0000011e: 	jle	.Ltmp32 # Offset: 286
    00000124: 	movq	results(%rip), %rdx
    0000012b: 	leal	-0x1(%rax), %ecx
    0000012e: 	pxor	%xmm0, %xmm0
    00000132: 	shlq	$0x4, %rcx
    00000136: 	leaq	0x10(%rdx), %rax
    0000013a: 	addq	%rax, %rcx
    0000013d: 	jmp	.Ltmp34 # Offset: 317
    0000013f: 	nop # Size: 1
.Ltmp35:
    00000140: 	addq	$0x10, %rax
.Ltmp34:
    00000144: 	addsd	(%rdx), %xmm0
    00000148: 	movq	%rax, %rdx
    0000014b: 	cmpq	%rax, %rcx
    0000014e: 	jne	.Ltmp35 # Offset: 334
.Ltmp37:
    00000150: 	movq	0x8(%rsp), %rcx
    00000155: 	movl	$0x1, %esi
    0000015a: 	movq	%r12, %rdi
    0000015d: 	movl	$0x1, %eax
    00000162: 	leaq	DATAat0x230c8(%rip), %rdx
    00000169: 	callq	__fprintf_chk@PLT # Offset: 361
    0000016e: 	movl	$0x0, current_test(%rip)
.Ltmp29:
    00000178: 	addq	$0x18, %rsp
    0000017c: 	popq	%rbx
    0000017d: 	popq	%rbp
    0000017e: 	popq	%r12
    00000180: 	popq	%r13
    00000182: 	popq	%r14
    00000184: 	popq	%r15
    00000186: 	retq # Offset: 390
    00000187: 	nopw	(%rax,%rax) # Size: 9
.Ltmp30:
    00000190: 	xorl	%ecx, %ecx
    00000192: 	movl	$0xc, %ebp
    00000197: 	jmp	.Ltmp36 # Offset: 407
    0000019c: 	nopl	(%rax) # Size: 4
.Ltmp32:
    000001a0: 	pxor	%xmm0, %xmm0
    000001a4: 	jmp	.Ltmp37 # Offset: 420
DWARF CFI Instructions:
    <empty>
End of Function "_Z17summarize_simplefP8_IO_FILEPKc"

Binary Function "_Z11start_timerv" after disassembly {
  Number      : 13
  State       : disassembled
  Address     : 0x1c40
  Size        : 0x19
  MaxSize     : 0x20
  Offset      : 0x1c40
  Section     : .text
  Orc Section : .local.text._Z11start_timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB012:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	movq	%rax, start_time(%rip)
    00000014: 	addq	$0x8, %rsp
    00000018: 	retq # Offset: 24
DWARF CFI Instructions:
    <empty>
End of Function "_Z11start_timerv"

Binary Function "_Z5timerv" after disassembly {
  Number      : 14
  State       : disassembled
  Address     : 0x1c60
  Size        : 0x31
  MaxSize     : 0x40
  Offset      : 0x1c60
  Section     : .text
  Orc Section : .local.text._Z5timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB013:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	pxor	%xmm0, %xmm0
    00000011: 	movq	%rax, end_time(%rip)
    00000018: 	subq	start_time(%rip), %rax
    0000001f: 	cvtsi2sd	%rax, %xmm0
    00000024: 	divsd	DATAat0x23450(%rip), %xmm0
    0000002c: 	addq	$0x8, %rsp
    00000030: 	retq # Offset: 48
DWARF CFI Instructions:
    <empty>
End of Function "_Z5timerv"

Binary Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 15
  State       : disassembled
  Address     : 0x1ca0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1ca0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB014:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f38, %edx
    00000017: 	movl	$0x746e6975, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 16
  State       : disassembled
  Address     : 0x1cd0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1cd0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB015:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3631746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 17
  State       : disassembled
  Address     : 0x1d00
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1d00
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB016:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3233746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 18
  State       : disassembled
  Address     : 0x1d30
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1d30
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB017:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3436746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 19
  State       : disassembled
  Address     : 0x1d60
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1d60
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB018:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 20
  State       : disassembled
  Address     : 0x1d90
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1d90
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB019:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 21
  State       : disassembled
  Address     : 0x1dc0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1dc0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB020:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f36, %edx
    00000017: 	movl	$0x31746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 22
  State       : disassembled
  Address     : 0x1df0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1df0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB021:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f32, %edx
    00000017: 	movl	$0x33746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 23
  State       : disassembled
  Address     : 0x1e20
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1e20
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB022:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f34, %edx
    00000017: 	movl	$0x36746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 24
  State       : disassembled
  Address     : 0x1e50
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x1e50
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB023:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x14(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x616f6c66, 0x10(%rdi)
    00000019: 	movq	$0x5, 0x8(%rdi)
    00000021: 	movb	$0x0, 0x15(%rdi)
    00000025: 	retq # Offset: 37
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 25
  State       : disassembled
  Address     : 0x1e80
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1e80
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB024:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x62756f64, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x656c, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 26
  State       : disassembled
  Address     : 0x1eb0
  Size        : 0x36
  MaxSize     : 0x40
  Offset      : 0x1eb0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB025:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x65, 0x1a(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movl	$0x6c62, %edx
    00000021: 	movq	%rcx, 0x10(%rdi)
    00000025: 	movw	%dx, 0x18(%rdi)
    00000029: 	movq	$0xb, 0x8(%rdi)
    00000031: 	movb	$0x0, 0x1b(%rdi)
    00000035: 	retq # Offset: 53
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 27
  State       : disassembled
  Address     : 0x1ef0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1ef0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB026:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f38746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 28
  State       : disassembled
  Address     : 0x1f20
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x1f20
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB027:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3631746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 29
  State       : disassembled
  Address     : 0x1f50
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x1f50
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB028:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3233746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 30
  State       : disassembled
  Address     : 0x1f80
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x1f80
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB029:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3436746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 31
  State       : disassembled
  Address     : 0x1fb0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1fb0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB030:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x745f, %edx
    00000017: 	movl	$0x38746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 32
  State       : disassembled
  Address     : 0x1fe0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1fe0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB031:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3631746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 33
  State       : disassembled
  Address     : 0x2010
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2010
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB032:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3233746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 34
  State       : disassembled
  Address     : 0x2040
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2040
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB033:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3436746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 35
  State       : disassembled
  Address     : 0x2070
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x2070
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB034:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x616f6c66, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x2a74, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 36
  State       : disassembled
  Address     : 0x20a0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x20a0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB035:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x656c, %edx
    00000017: 	movl	$0x62756f64, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 37
  State       : disassembled
  Address     : 0x20d0
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x20d0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB036:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x0, 0x1c(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movl	$0x2a656c62, 0x18(%rdi)
    00000027: 	movq	$0xc, 0x8(%rdi)
    0000002f: 	retq # Offset: 47
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)" after disassembly {
  All names   : _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
                _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
  Number      : 38
  State       : disassembled
  Address     : 0x2100
  Size        : 0x1f7
  MaxSize     : 0x200
  Offset      : 0x2100
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB037:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x28, %rsp
    00000015: 	movq	0x20(%rdi), %rcx
    00000019: 	movq	0x30(%rdi), %rax
    0000001d: 	movq	0x38(%rdi), %r13
    00000021: 	movq	0x10(%rdi), %rbp
    00000025: 	movq	%rcx, 0x10(%rsp)
    0000002a: 	movq	0x28(%rdi), %rcx
    0000002e: 	movq	%rax, 0x8(%rsp)
    00000033: 	movq	0x48(%rdi), %rax
    00000037: 	leaq	0x8(%rcx), %r12
    0000003b: 	movq	%rcx, 0x18(%rsp)
    00000040: 	movq	%rax, (%rsp)
    00000044: 	cmpq	%r12, %rax
    00000047: 	jbe	.Ltmp38 # Offset: 71
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp41:
    00000050: 	movq	(%r12), %r15
    00000054: 	leaq	0x200(%r15), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp40:
    00000060: 	movq	(%r15), %rdi
    00000063: 	leaq	0x10(%r15), %rdx
    00000067: 	cmpq	%rdx, %rdi
    0000006a: 	je	.Ltmp39 # Offset: 106
    00000070: 	movq	0x10(%r15), %rax
    00000074: 	addq	$0x20, %r15
    00000078: 	leaq	0x1(%rax), %rsi
    0000007c: 	callq	_ZdlPvm@PLT # Offset: 124
    00000081: 	cmpq	%r15, %rbx
    00000084: 	jne	.Ltmp40 # Offset: 132
    00000086: 	addq	$0x8, %r12
    0000008a: 	cmpq	%r12, (%rsp)
    0000008e: 	ja	.Ltmp41 # Offset: 142
.Ltmp38:
    00000090: 	movq	(%rsp), %rcx
    00000094: 	cmpq	%rcx, 0x18(%rsp)
    00000099: 	je	.Ltmp42 # Offset: 153
    0000009f: 	cmpq	0x10(%rsp), %rbp
    000000a4: 	je	.Ltmp43 # Offset: 164
.Ltmp46:
    000000a6: 	movq	(%rbp), %rdi
    000000aa: 	leaq	0x10(%rbp), %rax
    000000ae: 	cmpq	%rax, %rdi
    000000b1: 	je	.Ltmp44 # Offset: 177
.Ltmp45:
    000000b3: 	movq	0x10(%rbp), %rax
    000000b7: 	addq	$0x20, %rbp
    000000bb: 	leaq	0x1(%rax), %rsi
    000000bf: 	callq	_ZdlPvm@PLT # Offset: 191
    000000c4: 	cmpq	%rbp, 0x10(%rsp)
    000000c9: 	je	.Ltmp43 # Offset: 201
    000000cb: 	movq	(%rbp), %rdi
    000000cf: 	leaq	0x10(%rbp), %rax
    000000d3: 	cmpq	%rax, %rdi
    000000d6: 	jne	.Ltmp45 # Offset: 214
.Ltmp44:
    000000d8: 	addq	$0x20, %rbp
    000000dc: 	cmpq	%rbp, 0x10(%rsp)
    000000e1: 	jne	.Ltmp46 # Offset: 225
    000000e3: 	cmpq	%r13, 0x8(%rsp)
    000000e8: 	je	.Ltmp47 # Offset: 232
    000000ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp49:
    000000f0: 	movq	(%r13), %rdi
    000000f4: 	leaq	0x10(%r13), %rax
    000000f8: 	cmpq	%rax, %rdi
    000000fb: 	je	.Ltmp48 # Offset: 251
    000000fd: 	movq	0x10(%r13), %rax
    00000101: 	leaq	0x1(%rax), %rsi
    00000105: 	callq	_ZdlPvm@PLT # Offset: 261
.Ltmp48:
    0000010a: 	addq	$0x20, %r13
.Ltmp43:
    0000010e: 	cmpq	%r13, 0x8(%rsp)
    00000113: 	jne	.Ltmp49 # Offset: 275
.Ltmp47:
    00000115: 	movq	(%r14), %rdi
    00000118: 	testq	%rdi, %rdi
    0000011b: 	je	.Ltmp50 # Offset: 283
.Ltmp56:
    00000121: 	movq	0x48(%r14), %rax
    00000125: 	movq	0x28(%r14), %rbx
    00000129: 	leaq	0x8(%rax), %rbp
    0000012d: 	cmpq	%rbx, %rbp
    00000130: 	jbe	.Ltmp51 # Offset: 304
    00000132: 	nopw	(%rax,%rax) # Size: 6
.Ltmp52:
    00000138: 	movq	(%rbx), %rdi
    0000013b: 	movl	$0x200, %esi
    00000140: 	addq	$0x8, %rbx
    00000144: 	callq	_ZdlPvm@PLT # Offset: 324
    00000149: 	cmpq	%rbx, %rbp
    0000014c: 	ja	.Ltmp52 # Offset: 332
    0000014e: 	movq	(%r14), %rdi
.Ltmp51:
    00000151: 	movq	0x8(%r14), %rsi
    00000155: 	addq	$0x28, %rsp
    00000159: 	popq	%rbx
    0000015a: 	popq	%rbp
    0000015b: 	shlq	$0x3, %rsi
    0000015f: 	popq	%r12
    00000161: 	popq	%r13
    00000163: 	popq	%r14
    00000165: 	popq	%r15
    00000167: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 359
    0000016c: 	nopl	(%rax) # Size: 4
.Ltmp39:
    00000170: 	addq	$0x20, %r15
    00000174: 	cmpq	%r15, %rbx
    00000177: 	jne	.Ltmp40 # Offset: 375
    0000017d: 	addq	$0x8, %r12
    00000181: 	cmpq	%r12, (%rsp)
    00000185: 	ja	.Ltmp41 # Offset: 389
    0000018b: 	jmp	.Ltmp38 # Offset: 395
.Ltmp42:
    00000190: 	cmpq	0x8(%rsp), %rbp
    00000195: 	je	.Ltmp47 # Offset: 405
.Ltmp55:
    0000019b: 	movq	(%rbp), %rdi
    0000019f: 	leaq	0x10(%rbp), %rax
    000001a3: 	cmpq	%rax, %rdi
    000001a6: 	je	.Ltmp53 # Offset: 422
.Ltmp54:
    000001a8: 	movq	0x10(%rbp), %rax
    000001ac: 	addq	$0x20, %rbp
    000001b0: 	leaq	0x1(%rax), %rsi
    000001b4: 	callq	_ZdlPvm@PLT # Offset: 436
    000001b9: 	cmpq	%rbp, 0x8(%rsp)
    000001be: 	je	.Ltmp47 # Offset: 446
    000001c4: 	movq	(%rbp), %rdi
    000001c8: 	leaq	0x10(%rbp), %rax
    000001cc: 	cmpq	%rax, %rdi
    000001cf: 	jne	.Ltmp54 # Offset: 463
.Ltmp53:
    000001d1: 	addq	$0x20, %rbp
    000001d5: 	cmpq	%rbp, 0x8(%rsp)
    000001da: 	jne	.Ltmp55 # Offset: 474
    000001dc: 	movq	(%r14), %rdi
    000001df: 	testq	%rdi, %rdi
    000001e2: 	jne	.Ltmp56 # Offset: 482
.Ltmp50:
    000001e8: 	addq	$0x28, %rsp
    000001ec: 	popq	%rbx
    000001ed: 	popq	%rbp
    000001ee: 	popq	%r12
    000001f0: 	popq	%r13
    000001f2: 	popq	%r14
    000001f4: 	popq	%r15
    000001f6: 	retq # Offset: 502
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)"

Binary Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_" after disassembly {
  Number      : 39
  State       : disassembled
  Address     : 0x2300
  Size        : 0x145
  MaxSize     : 0x150
  Offset      : 0x2300
  Section     : .text
  Orc Section : .local.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB038:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rdi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdx, %rbp
    00000011: 	pushq	%rbx
    00000012: 	leaq	0x10(%rdi), %rbx
    00000016: 	subq	$0x10, %rsp
    0000001a: 	movq	0x8(%rsi), %r13
    0000001e: 	movq	%fs:0x28, %rax
    00000027: 	movq	%rax, 0x8(%rsp)
    0000002c: 	xorl	%eax, %eax
    0000002e: 	movq	%rbx, (%rdi)
    00000031: 	movq	(%rsi), %r14
    00000034: 	movq	%r14, %rax
    00000037: 	addq	%r13, %rax
    0000003a: 	je	.Ltmp57 # Offset: 58
    0000003c: 	testq	%r14, %r14
    0000003f: 	je	.Ltmp58 # Offset: 63
.Ltmp57:
    00000045: 	movq	%r13, (%rsp)
    00000049: 	cmpq	$0xf, %r13
    0000004d: 	ja	.Ltmp59 # Offset: 77
    0000004f: 	cmpq	$0x1, %r13
    00000053: 	jne	.Ltmp60 # Offset: 83
    00000055: 	movzbl	(%r14), %eax
    00000059: 	movb	%al, 0x10(%r12)
    0000005e: 	movq	%rbx, %rax
.Ltmp64:
    00000061: 	movq	%r13, 0x8(%r12)
    00000066: 	movq	%rbp, %rdi
    00000069: 	movb	$0x0, (%rax,%r13)
    0000006e: 	callq	strlen@PLT # Offset: 110
    00000073: 	movq	%rax, %rdx
    00000076: 	movabsq	$0x3fffffffffffffff, %rax
    00000080: 	subq	0x8(%r12), %rax
    00000085: 	cmpq	%rax, %rdx
    00000088: 	ja	.Ltmp61 # Offset: 136
    0000008a: 	movq	%rbp, %rsi
    0000008d: 	movq	%r12, %rdi
    00000090: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 144
    00000095: 	movq	0x8(%rsp), %rax
    0000009a: 	subq	%fs:0x28, %rax
    000000a3: 	jne	.Ltmp62 # Offset: 163
    000000a5: 	addq	$0x10, %rsp
    000000a9: 	movq	%r12, %rax
    000000ac: 	popq	%rbx
    000000ad: 	popq	%rbp
    000000ae: 	popq	%r12
    000000b0: 	popq	%r13
    000000b2: 	popq	%r14
    000000b4: 	retq # Offset: 180
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp60:
    000000b8: 	testq	%r13, %r13
    000000bb: 	jne	.Ltmp63 # Offset: 187
    000000bd: 	movq	%rbx, %rax
    000000c0: 	jmp	.Ltmp64 # Offset: 192
    000000c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp59:
    000000c8: 	movq	%r12, %rdi
    000000cb: 	movq	%rsp, %rsi
    000000ce: 	xorl	%edx, %edx
    000000d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 208
    000000d5: 	movq	%rax, (%r12)
    000000d9: 	movq	%rax, %rdi
    000000dc: 	movq	(%rsp), %rax
    000000e0: 	movq	%rax, 0x10(%r12)
.Ltmp65:
    000000e5: 	movq	%r13, %rdx
    000000e8: 	movq	%r14, %rsi
    000000eb: 	callq	memcpy@PLT # Offset: 235
    000000f0: 	movq	(%rsp), %r13
    000000f4: 	movq	(%r12), %rax
    000000f8: 	jmp	.Ltmp64 # Offset: 248
.Ltmp58:
    000000fd: 	leaq	DATAat0x23158(%rip), %rdi
    00000104: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 260
.Ltmp61:
    00000109: 	leaq	DATAat0x23182(%rip), %rdi
    00000110: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 272
.Ltmp62:
    00000115: 	callq	__stack_chk_fail@PLT # Offset: 277
.Ltmp63:
    0000011a: 	movq	%rbx, %rdi
    0000011d: 	jmp	.Ltmp65 # Offset: 285
    0000011f: 	endbr64
    00000123: 	movq	%rax, %rbp
    00000126: 	movq	(%r12), %rdi
    0000012a: 	cmpq	%rdi, %rbx
    0000012d: 	je	.Ltmp66 # Offset: 301
    0000012f: 	movq	0x10(%r12), %rsi
    00000134: 	addq	$0x1, %rsi
    00000138: 	callq	_ZdlPvm@PLT # Offset: 312
.Ltmp66:
    0000013d: 	movq	%rbp, %rdi
    00000140: 	callq	_Unwind_Resume@PLT # Offset: 320
DWARF CFI Instructions:
    <empty>
End of Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E" after disassembly {
  Number      : 40
  State       : disassembled
  Address     : 0x2450
  Size        : 0x21d
  MaxSize     : 0x220
  Offset      : 0x2450
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB039:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rsi, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x38, %rsp
    00000015: 	movq	0x30(%rdi), %rcx
    00000019: 	movq	0x48(%rdi), %rax
    0000001d: 	movq	0x38(%rdi), %r13
    00000021: 	movq	(%rsi), %rbp
    00000024: 	movq	%rdi, 0x20(%rsp)
    00000029: 	movq	%rcx, 0x10(%rsp)
    0000002e: 	movq	0x10(%rsi), %rcx
    00000032: 	movq	%rax, (%rsp)
    00000036: 	movq	%rcx, 0x18(%rsp)
    0000003b: 	movq	0x18(%rsi), %rcx
    0000003f: 	leaq	0x8(%rcx), %r12
    00000043: 	movq	%rcx, 0x28(%rsp)
    00000048: 	cmpq	%r12, %rax
    0000004b: 	jbe	.Ltmp67 # Offset: 75
    0000004d: 	nopl	(%rax) # Size: 3
.Ltmp70:
    00000050: 	movq	(%r12), %r14
    00000054: 	leaq	0x200(%r14), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp69:
    00000060: 	movq	(%r14), %rdi
    00000063: 	leaq	0x10(%r14), %rdx
    00000067: 	cmpq	%rdx, %rdi
    0000006a: 	je	.Ltmp68 # Offset: 106
    00000070: 	movq	0x10(%r14), %rax
    00000074: 	addq	$0x20, %r14
    00000078: 	leaq	0x1(%rax), %rsi
    0000007c: 	callq	_ZdlPvm@PLT # Offset: 124
    00000081: 	cmpq	%rbx, %r14
    00000084: 	jne	.Ltmp69 # Offset: 132
    00000086: 	addq	$0x8, %r12
    0000008a: 	cmpq	%r12, (%rsp)
    0000008e: 	ja	.Ltmp70 # Offset: 142
.Ltmp67:
    00000090: 	movq	(%rsp), %rcx
    00000094: 	cmpq	%rcx, 0x28(%rsp)
    00000099: 	je	.Ltmp71 # Offset: 153
    0000009f: 	cmpq	0x18(%rsp), %rbp
    000000a4: 	je	.Ltmp72 # Offset: 164
    000000a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp74:
    000000b0: 	movq	(%rbp), %rdi
    000000b4: 	leaq	0x10(%rbp), %rax
    000000b8: 	cmpq	%rax, %rdi
    000000bb: 	je	.Ltmp73 # Offset: 187
    000000c1: 	movq	0x10(%rbp), %rax
    000000c5: 	addq	$0x20, %rbp
    000000c9: 	leaq	0x1(%rax), %rsi
    000000cd: 	callq	_ZdlPvm@PLT # Offset: 205
    000000d2: 	cmpq	%rbp, 0x18(%rsp)
    000000d7: 	jne	.Ltmp74 # Offset: 215
.Ltmp72:
    000000d9: 	cmpq	%r13, 0x10(%rsp)
    000000de: 	je	.Ltmp75 # Offset: 222
.Ltmp77:
    000000e0: 	movq	(%r13), %rdi
    000000e4: 	leaq	0x10(%r13), %rax
    000000e8: 	cmpq	%rax, %rdi
    000000eb: 	je	.Ltmp76 # Offset: 235
    000000f1: 	movq	0x10(%r13), %rax
    000000f5: 	addq	$0x20, %r13
    000000f9: 	leaq	0x1(%rax), %rsi
    000000fd: 	callq	_ZdlPvm@PLT # Offset: 253
    00000102: 	cmpq	%r13, 0x10(%rsp)
    00000107: 	jne	.Ltmp77 # Offset: 263
.Ltmp75:
    00000109: 	movq	0x20(%rsp), %rax
    0000010e: 	movq	0x48(%rax), %rax
    00000112: 	movq	%rax, (%rsp)
    00000116: 	leaq	0x8(%rax), %rbp
    0000011a: 	movq	0x18(%r15), %rax
    0000011e: 	leaq	0x8(%rax), %rbx
    00000122: 	cmpq	%rbx, %rbp
    00000125: 	jbe	.Ltmp78 # Offset: 293
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp79:
    00000130: 	movq	(%rbx), %rdi
    00000133: 	movl	$0x200, %esi
    00000138: 	addq	$0x8, %rbx
    0000013c: 	callq	_ZdlPvm@PLT # Offset: 316
    00000141: 	cmpq	%rbx, %rbp
    00000144: 	ja	.Ltmp79 # Offset: 324
.Ltmp78:
    00000146: 	movdqu	(%r15), %xmm0
    0000014b: 	movq	0x20(%rsp), %rax
    00000150: 	movups	%xmm0, 0x30(%rax)
    00000154: 	movdqu	0x10(%r15), %xmm1
    0000015a: 	movaps	%xmm1, (%rsp)
    0000015e: 	movups	%xmm1, 0x40(%rax)
    00000162: 	addq	$0x38, %rsp
    00000166: 	popq	%rbx
    00000167: 	popq	%rbp
    00000168: 	popq	%r12
    0000016a: 	popq	%r13
    0000016c: 	popq	%r14
    0000016e: 	popq	%r15
    00000170: 	retq # Offset: 368
    00000171: 	nopl	(%rax) # Size: 7
.Ltmp68:
    00000178: 	addq	$0x20, %r14
    0000017c: 	cmpq	%r14, %rbx
    0000017f: 	jne	.Ltmp69 # Offset: 383
    00000185: 	addq	$0x8, %r12
    00000189: 	cmpq	%r12, (%rsp)
    0000018d: 	ja	.Ltmp70 # Offset: 397
    00000193: 	jmp	.Ltmp67 # Offset: 403
    00000198: 	nopl	(%rax,%rax) # Size: 8
.Ltmp76:
    000001a0: 	addq	$0x20, %r13
    000001a4: 	cmpq	%r13, 0x10(%rsp)
    000001a9: 	jne	.Ltmp77 # Offset: 425
    000001af: 	jmp	.Ltmp75 # Offset: 431
    000001b4: 	nopl	(%rax) # Size: 4
.Ltmp73:
    000001b8: 	addq	$0x20, %rbp
    000001bc: 	cmpq	%rbp, 0x18(%rsp)
    000001c1: 	jne	.Ltmp74 # Offset: 449
    000001c7: 	jmp	.Ltmp72 # Offset: 455
.Ltmp71:
    000001cc: 	cmpq	0x10(%rsp), %rbp
    000001d1: 	je	.Ltmp75 # Offset: 465
.Ltmp82:
    000001d7: 	movq	(%rbp), %rdi
    000001db: 	leaq	0x10(%rbp), %rax
    000001df: 	cmpq	%rax, %rdi
    000001e2: 	je	.Ltmp80 # Offset: 482
.Ltmp81:
    000001e4: 	movq	0x10(%rbp), %rax
    000001e8: 	addq	$0x20, %rbp
    000001ec: 	leaq	0x1(%rax), %rsi
    000001f0: 	callq	_ZdlPvm@PLT # Offset: 496
    000001f5: 	cmpq	%rbp, 0x10(%rsp)
    000001fa: 	je	.Ltmp75 # Offset: 506
    00000200: 	movq	(%rbp), %rdi
    00000204: 	leaq	0x10(%rbp), %rax
    00000208: 	cmpq	%rax, %rdi
    0000020b: 	jne	.Ltmp81 # Offset: 523
.Ltmp80:
    0000020d: 	addq	$0x20, %rbp
    00000211: 	cmpq	%rbp, 0x10(%rsp)
    00000216: 	jne	.Ltmp82 # Offset: 534
    00000218: 	jmp	.Ltmp75 # Offset: 536
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_" after disassembly {
  Number      : 41
  State       : disassembled
  Address     : 0x2670
  Size        : 0x328
  MaxSize     : 0x330
  Offset      : 0x2670
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB040:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movq	%rsi, %rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x18, %rsp
    00000015: 	movq	0x48(%rdi), %r12
    00000019: 	movq	0x28(%rdi), %rsi
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x8(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	movq	0x30(%rdi), %rax
    00000031: 	subq	0x38(%rdi), %rax
    00000035: 	movq	%r12, %r13
    00000038: 	sarq	$0x5, %rax
    0000003c: 	subq	%rsi, %r13
    0000003f: 	movq	%r13, %rcx
    00000042: 	sarq	$0x3, %rcx
    00000046: 	cmpq	$0x1, %r12
    0000004a: 	movq	%rcx, %rdx
    0000004d: 	adcq	$-0x1, %rdx
    00000051: 	shlq	$0x4, %rdx
    00000055: 	addq	%rdx, %rax
    00000058: 	movq	0x20(%rdi), %rdx
    0000005c: 	subq	0x10(%rdi), %rdx
    00000060: 	sarq	$0x5, %rdx
    00000064: 	addq	%rdx, %rax
    00000067: 	movabsq	$0x3ffffffffffffff, %rdx
    00000071: 	cmpq	%rdx, %rax
    00000074: 	je	.Ltmp83 # Offset: 116
    0000007a: 	movq	0x8(%rdi), %rdx
    0000007e: 	movq	%rdi, %rbx
    00000081: 	movq	(%rdi), %rdi
    00000084: 	movq	%r12, %rax
    00000087: 	subq	%rdi, %rax
    0000008a: 	movq	%rdx, %r8
    0000008d: 	sarq	$0x3, %rax
    00000091: 	subq	%rax, %r8
    00000094: 	cmpq	$0x1, %r8
    00000098: 	jbe	.Ltmp84 # Offset: 152
.Ltmp95:
    0000009e: 	movl	$0x200, %edi
    000000a3: 	callq	_Znwm@PLT # Offset: 163
    000000a8: 	movq	%rax, 0x8(%r12)
    000000ad: 	movq	0x30(%rbx), %r13
    000000b1: 	movq	0x8(%rbp), %r12
    000000b5: 	leaq	0x10(%r13), %rdi
    000000b9: 	movq	%rdi, (%r13)
    000000bd: 	movq	(%rbp), %r14
    000000c1: 	movq	%r14, %rax
    000000c4: 	addq	%r12, %rax
    000000c7: 	je	.Ltmp85 # Offset: 199
    000000c9: 	testq	%r14, %r14
    000000cc: 	je	.Ltmp86 # Offset: 204
.Ltmp85:
    000000d2: 	movq	%r12, (%rsp)
    000000d6: 	cmpq	$0xf, %r12
    000000da: 	ja	.Ltmp87 # Offset: 218
    000000e0: 	cmpq	$0x1, %r12
    000000e4: 	jne	.Ltmp88 # Offset: 228
    000000e6: 	movzbl	(%r14), %eax
    000000ea: 	movb	%al, 0x10(%r13)
.Ltmp90:
    000000ee: 	movq	%r12, 0x8(%r13)
    000000f2: 	movb	$0x0, (%rdi,%r12)
    000000f7: 	movq	0x48(%rbx), %rdx
    000000fb: 	movq	0x8(%rdx), %rax
    000000ff: 	addq	$0x8, %rdx
    00000103: 	movq	%rdx, %xmm1
    00000108: 	movq	%rax, %xmm0
    0000010d: 	addq	$0x200, %rax
    00000113: 	punpcklqdq	%xmm0, %xmm0
    00000117: 	movups	%xmm0, 0x30(%rbx)
    0000011b: 	movq	%rax, %xmm0
    00000120: 	punpcklqdq	%xmm1, %xmm0
    00000124: 	movups	%xmm0, 0x40(%rbx)
    00000128: 	movq	0x8(%rsp), %rax
    0000012d: 	subq	%fs:0x28, %rax
    00000136: 	jne	.Ltmp89 # Offset: 310
    0000013c: 	addq	$0x18, %rsp
    00000140: 	popq	%rbx
    00000141: 	popq	%rbp
    00000142: 	popq	%r12
    00000144: 	popq	%r13
    00000146: 	popq	%r14
    00000148: 	popq	%r15
    0000014a: 	retq # Offset: 330
    0000014b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp88:
    00000150: 	testq	%r12, %r12
    00000153: 	je	.Ltmp90 # Offset: 339
    00000155: 	jmp	.Ltmp91 # Offset: 341
    0000015a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp84:
    00000160: 	leaq	0x2(%rcx), %r14
    00000164: 	leaq	(%r14,%r14), %rax
    00000168: 	cmpq	%rax, %rdx
    0000016b: 	ja	.Ltmp92 # Offset: 363
    00000171: 	testq	%rdx, %rdx
    00000174: 	movl	$0x1, %eax
    00000179: 	cmovneq	%rdx, %rax
    0000017d: 	leaq	0x2(%rdx,%rax), %r15
    00000182: 	movq	%r15, %rax
    00000185: 	shrq	$0x3c, %rax
    00000189: 	jne	.Ltmp93 # Offset: 393
    0000018f: 	leaq	(,%r15,8), %rdi
    00000197: 	callq	_Znwm@PLT # Offset: 407
    0000019c: 	movq	0x28(%rbx), %rsi
    000001a0: 	movq	%rax, %r12
    000001a3: 	movq	%r15, %rax
    000001a6: 	subq	%r14, %rax
    000001a9: 	shrq	%rax
    000001ac: 	leaq	(%r12,%rax,8), %r14
    000001b0: 	movq	0x48(%rbx), %rax
    000001b4: 	leaq	0x8(%rax), %rdx
    000001b8: 	cmpq	%rsi, %rdx
    000001bb: 	je	.Ltmp94 # Offset: 443
    000001bd: 	subq	%rsi, %rdx
    000001c0: 	movq	%r14, %rdi
    000001c3: 	callq	memmove@PLT # Offset: 451
.Ltmp94:
    000001c8: 	movq	0x8(%rbx), %rax
    000001cc: 	movq	(%rbx), %rdi
    000001cf: 	leaq	(,%rax,8), %rsi
    000001d7: 	callq	_ZdlPvm@PLT # Offset: 471
    000001dc: 	movq	%r12, (%rbx)
    000001df: 	movq	%r15, 0x8(%rbx)
.Ltmp97:
    000001e3: 	movq	(%r14), %rax
    000001e6: 	movq	(%r14), %xmm0
    000001eb: 	leaq	(%r14,%r13), %r12
    000001ef: 	movq	%r14, 0x28(%rbx)
    000001f3: 	movq	%r12, 0x48(%rbx)
    000001f7: 	addq	$0x200, %rax
    000001fd: 	movq	%rax, %xmm2
    00000202: 	punpcklqdq	%xmm2, %xmm0
    00000206: 	movups	%xmm0, 0x18(%rbx)
    0000020a: 	movq	(%r12), %rax
    0000020e: 	movq	(%r12), %xmm0
    00000214: 	addq	$0x200, %rax
    0000021a: 	movq	%rax, %xmm3
    0000021f: 	punpcklqdq	%xmm3, %xmm0
    00000223: 	movups	%xmm0, 0x38(%rbx)
    00000227: 	jmp	.Ltmp95 # Offset: 551
    0000022c: 	nopl	(%rax) # Size: 4
.Ltmp87:
    00000230: 	movq	%rsp, %rsi
    00000233: 	xorl	%edx, %edx
    00000235: 	movq	%r13, %rdi
    00000238: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 568
    0000023d: 	movq	%rax, (%r13)
    00000241: 	movq	%rax, %rdi
    00000244: 	movq	(%rsp), %rax
    00000248: 	movq	%rax, 0x10(%r13)
.Ltmp91:
    0000024c: 	movq	%r12, %rdx
    0000024f: 	movq	%r14, %rsi
    00000252: 	callq	memcpy@PLT # Offset: 594
    00000257: 	movq	(%rsp), %r12
    0000025b: 	movq	(%r13), %rdi
    0000025f: 	jmp	.Ltmp90 # Offset: 607
    00000264: 	nopl	(%rax) # Size: 4
.Ltmp92:
    00000268: 	subq	%r14, %rdx
    0000026b: 	addq	$0x8, %r12
    0000026f: 	shrq	%rdx
    00000272: 	leaq	(%rdi,%rdx,8), %r14
    00000276: 	movq	%r12, %rdx
    00000279: 	subq	%rsi, %rdx
    0000027c: 	cmpq	%r14, %rsi
    0000027f: 	jbe	.Ltmp96 # Offset: 639
    00000281: 	cmpq	%r12, %rsi
    00000284: 	je	.Ltmp97 # Offset: 644
    0000028a: 	movq	%r14, %rdi
    0000028d: 	callq	memmove@PLT # Offset: 653
    00000292: 	jmp	.Ltmp97 # Offset: 658
    00000297: 	nopw	(%rax,%rax) # Size: 9
.Ltmp96:
    000002a0: 	cmpq	%r12, %rsi
    000002a3: 	je	.Ltmp97 # Offset: 675
    000002a9: 	leaq	0x8(%r13), %rdi
    000002ad: 	subq	%rdx, %rdi
    000002b0: 	addq	%r14, %rdi
    000002b3: 	callq	memmove@PLT # Offset: 691
    000002b8: 	jmp	.Ltmp97 # Offset: 696
.Ltmp86:
    000002bd: 	leaq	DATAat0x23158(%rip), %rdi
    000002c4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 708
    000002c9: 	nopl	(%rax) # Size: 7
.Ltmp93:
    000002d0: 	shrq	$0x3d, %r15
    000002d4: 	je	.Ltmp98 # Offset: 724
    000002d6: 	callq	_ZSt28__throw_bad_array_new_lengthv@PLT # Offset: 726
.Ltmp98:
    000002db: 	callq	_ZSt17__throw_bad_allocv@PLT # Offset: 731
.Ltmp83:
    000002e0: 	leaq	DATAat0x23198(%rip), %rdi
    000002e7: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 743
.Ltmp89:
    000002ec: 	callq	__stack_chk_fail@PLT # Offset: 748
    000002f1: 	endbr64
    000002f5: 	movq	%rax, %rdi
    000002f8: 	callq	__cxa_begin_catch@PLT # Offset: 760
    000002fd: 	movq	0x48(%rbx), %rax
    00000301: 	movl	$0x200, %esi
    00000306: 	movq	0x8(%rax), %rdi
    0000030a: 	callq	_ZdlPvm@PLT # Offset: 778
    0000030f: 	callq	__cxa_rethrow@PLT # Offset: 783
    00000314: 	endbr64
    00000318: 	movq	%rax, %rbp
    0000031b: 	callq	__cxa_end_catch@PLT # Offset: 795
    00000320: 	movq	%rbp, %rdi
    00000323: 	callq	_Unwind_Resume@PLT # Offset: 803
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_" after disassembly {
  Number      : 42
  State       : disassembled
  Address     : 0x29a0
  Size        : 0x10c
  MaxSize     : 0x110
  Offset      : 0x29a0
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB041:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	movq	%rdi, %rbp
    0000000c: 	pushq	%rbx
    0000000d: 	subq	$0x18, %rsp
    00000011: 	movq	0x30(%rdi), %rbx
    00000015: 	movq	%fs:0x28, %rax
    0000001e: 	movq	%rax, 0x8(%rsp)
    00000023: 	xorl	%eax, %eax
    00000025: 	movq	0x40(%rdi), %rax
    00000029: 	subq	$0x20, %rax
    0000002d: 	cmpq	%rax, %rbx
    00000030: 	je	.Ltmp99 # Offset: 48
    00000036: 	leaq	0x10(%rbx), %rdi
    0000003a: 	movq	0x8(%rsi), %r12
    0000003e: 	movq	%rdi, (%rbx)
    00000041: 	movq	(%rsi), %r13
    00000044: 	movq	%r13, %rax
    00000047: 	addq	%r12, %rax
    0000004a: 	je	.Ltmp100 # Offset: 74
    0000004c: 	testq	%r13, %r13
    0000004f: 	je	.Ltmp101 # Offset: 79
.Ltmp100:
    00000055: 	movq	%r12, (%rsp)
    00000059: 	cmpq	$0xf, %r12
    0000005d: 	ja	.Ltmp102 # Offset: 93
    0000005f: 	cmpq	$0x1, %r12
    00000063: 	jne	.Ltmp103 # Offset: 99
    00000069: 	movzbl	(%r13), %eax
    0000006e: 	movb	%al, 0x10(%rbx)
.Ltmp105:
    00000071: 	movq	%r12, 0x8(%rbx)
    00000075: 	movb	$0x0, (%rdi,%r12)
    0000007a: 	addq	$0x20, 0x30(%rbp)
    0000007f: 	movq	0x8(%rsp), %rax
    00000084: 	subq	%fs:0x28, %rax
    0000008d: 	jne	.Ltmp104 # Offset: 141
    0000008f: 	addq	$0x18, %rsp
    00000093: 	popq	%rbx
    00000094: 	popq	%rbp
    00000095: 	popq	%r12
    00000097: 	popq	%r13
    00000099: 	retq # Offset: 153
    0000009a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp102:
    000000a0: 	movq	%rbx, %rdi
    000000a3: 	movq	%rsp, %rsi
    000000a6: 	xorl	%edx, %edx
    000000a8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 168
    000000ad: 	movq	%rax, (%rbx)
    000000b0: 	movq	%rax, %rdi
    000000b3: 	movq	(%rsp), %rax
    000000b7: 	movq	%rax, 0x10(%rbx)
.Ltmp106:
    000000bb: 	movq	%r12, %rdx
    000000be: 	movq	%r13, %rsi
    000000c1: 	callq	memcpy@PLT # Offset: 193
    000000c6: 	movq	(%rsp), %r12
    000000ca: 	movq	(%rbx), %rdi
    000000cd: 	jmp	.Ltmp105 # Offset: 205
    000000cf: 	nop # Size: 1
.Ltmp99:
    000000d0: 	movq	0x8(%rsp), %rax
    000000d5: 	subq	%fs:0x28, %rax
    000000de: 	jne	.Ltmp104 # Offset: 222
    000000e0: 	addq	$0x18, %rsp
    000000e4: 	popq	%rbx
    000000e5: 	popq	%rbp
    000000e6: 	popq	%r12
    000000e8: 	popq	%r13
    000000ea: 	jmp	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # TAILCALL  # Offset: 234
    000000ef: 	nop # Size: 1
.Ltmp103:
    000000f0: 	testq	%r12, %r12
    000000f3: 	je	.Ltmp105 # Offset: 243
    000000f9: 	jmp	.Ltmp106 # Offset: 249
.Ltmp101:
    000000fb: 	leaq	DATAat0x23158(%rip), %rdi
    00000102: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 258
.Ltmp104:
    00000107: 	callq	__stack_chk_fail@PLT # Offset: 263
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_"

Binary Function "_Z19TestOneTypeFloatingIdEvv" after disassembly {
  Number      : 43
  State       : disassembled
  Address     : 0x2ab0
  Size        : 0x3cf7
  MaxSize     : 0x3d00
  Offset      : 0x2ab0
  Section     : .text
  Orc Section : .local.text._Z19TestOneTypeFloatingIdEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB042:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp107:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp107 # Offset: 37
    00000027: 	subq	$0xb38, %rsp
    0000002e: 	movdqa	_Z7gLabelsB5cxx11+32(%rip), %xmm3
    00000036: 	movdqa	_Z7gLabelsB5cxx11+16(%rip), %xmm6
    0000003e: 	movq	_Z7gLabelsB5cxx11+56(%rip), %r14
    00000045: 	movhlps	%xmm3, %xmm4
    00000048: 	movq	%xmm6, %rbp
    0000004d: 	movq	%xmm4, %rcx
    00000052: 	leaq	0x8(%rcx), %r12
    00000056: 	movq	%fs:0x28, %rax
    0000005f: 	movq	%rax, 0xfb28(%rsp)
    00000067: 	xorl	%eax, %eax
    00000069: 	leaq	0xd0(%rsp), %rax
    00000071: 	movb	$0x0, 0xd6(%rsp)
    00000079: 	movq	%rax, 0xa8(%rsp)
    00000081: 	movq	%rax, 0xc0(%rsp)
    00000089: 	movl	$0x656c, %eax
    0000008e: 	movw	%ax, 0xd4(%rsp)
    00000096: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000009d: 	movl	$0x62756f64, 0xd0(%rsp)
    000000a8: 	movq	%rax, (%rsp)
    000000ac: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rax
    000000b3: 	movq	$0x6, 0xc8(%rsp)
    000000bf: 	movq	%rax, 0x28(%rsp)
    000000c4: 	movaps	%xmm6, 0x30(%rsp)
    000000c9: 	movaps	%xmm3, 0x40(%rsp)
    000000ce: 	movq	%xmm4, 0x70(%rsp)
    000000d4: 	movq	%xmm3, 0x10(%rsp)
    000000da: 	cmpq	%r12, %rax
    000000dd: 	jbe	.Ltmp108 # Offset: 221
    000000df: 	movq	%r12, %r13
    000000e2: 	movq	%rax, %r15
    000000e5: 	movq	%xmm6, 0x50(%rsp)
    000000eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp111:
    000000f0: 	movq	(%r13), %rbp
    000000f4: 	leaq	0x200(%rbp), %rbx
    000000fb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp110:
    00000100: 	movq	(%rbp), %rdi
    00000104: 	leaq	0x10(%rbp), %rdx
    00000108: 	cmpq	%rdx, %rdi
    0000010b: 	je	.Ltmp109 # Offset: 267
    00000111: 	movq	0x10(%rbp), %rax
    00000115: 	addq	$0x20, %rbp
    00000119: 	leaq	0x1(%rax), %rsi
    0000011d: 	callq	_ZdlPvm@PLT # Offset: 285
    00000122: 	cmpq	%rbx, %rbp
    00000125: 	jne	.Ltmp110 # Offset: 293
    00000127: 	addq	$0x8, %r13
    0000012b: 	cmpq	%r13, %r15
    0000012e: 	ja	.Ltmp111 # Offset: 302
.Ltmp377:
    00000130: 	movq	0x50(%rsp), %rbp
.Ltmp108:
    00000135: 	movq	0x70(%rsp), %rcx
    0000013a: 	cmpq	%rcx, 0x28(%rsp)
    0000013f: 	jne	.Ltmp112 # Offset: 319
    00000141: 	jmp	.Ltmp113 # Offset: 321
    00000146: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp115:
    00000150: 	movq	(%rbp), %rdi
    00000154: 	leaq	0x10(%rbp), %rax
    00000158: 	cmpq	%rax, %rdi
    0000015b: 	je	.Ltmp114 # Offset: 347
    0000015d: 	movq	0x10(%rbp), %rax
    00000161: 	leaq	0x1(%rax), %rsi
    00000165: 	callq	_ZdlPvm@PLT # Offset: 357
.Ltmp114:
    0000016a: 	addq	$0x20, %rbp
.Ltmp112:
    0000016e: 	cmpq	0x10(%rsp), %rbp
    00000173: 	jne	.Ltmp115 # Offset: 371
    00000175: 	cmpq	%r14, (%rsp)
    00000179: 	je	.Ltmp116 # Offset: 377
    0000017b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp118:
    00000180: 	movq	(%r14), %rdi
    00000183: 	leaq	0x10(%r14), %rax
    00000187: 	cmpq	%rax, %rdi
    0000018a: 	je	.Ltmp117 # Offset: 394
    0000018c: 	movq	0x10(%r14), %rax
    00000190: 	leaq	0x1(%rax), %rsi
    00000194: 	callq	_ZdlPvm@PLT # Offset: 404
.Ltmp117:
    00000199: 	addq	$0x20, %r14
    0000019d: 	cmpq	%r14, (%rsp)
    000001a1: 	jne	.Ltmp118 # Offset: 417
.Ltmp116:
    000001a3: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rax
    000001aa: 	leaq	0x8(%rax), %rbx
    000001ae: 	cmpq	%r12, %rbx
    000001b1: 	jbe	.Ltmp119 # Offset: 433
    000001b3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp120:
    000001b8: 	movq	(%r12), %rdi
    000001bc: 	movl	$0x200, %esi
    000001c1: 	addq	$0x8, %r12
    000001c5: 	callq	_ZdlPvm@PLT # Offset: 453
    000001ca: 	cmpq	%r12, %rbx
    000001cd: 	ja	.Ltmp120 # Offset: 461
.Ltmp119:
    000001cf: 	movdqa	0x30(%rsp), %xmm4
    000001d5: 	movdqa	0x40(%rsp), %xmm5
    000001db: 	leaq	0x120(%rsp), %rbp
    000001e3: 	leaq	0xfb20(%rsp), %rbx
    000001eb: 	movsd	init_value(%rip), %xmm0
    000001f3: 	movq	%rbp, %rax
    000001f6: 	movaps	%xmm4, _Z7gLabelsB5cxx11+48(%rip)
    000001fd: 	movaps	%xmm5, _Z7gLabelsB5cxx11+64(%rip)
    00000204: 	unpcklpd	%xmm0, %xmm0
    00000208: 	nopl	(%rax,%rax) # Size: 8
.Ltmp121:
    00000210: 	movaps	%xmm0, (%rax)
    00000213: 	addq	$0x10, %rax
    00000217: 	cmpq	%rbx, %rax
    0000021a: 	jne	.Ltmp121 # Offset: 538
    0000021c: 	movl	base_iterations(%rip), %eax
    00000222: 	leaq	0x100(%rsp), %r12
    0000022a: 	leaq	0xc0(%rsp), %r14
    00000232: 	leaq	DATAat0x231c8(%rip), %rdx
    00000239: 	movq	%r14, %rsi
    0000023c: 	movq	%r12, %rdi
    0000023f: 	movl	%eax, iterations(%rip)
    00000245: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 581
    0000024a: 	callq	clock@PLT # Offset: 586
    0000024f: 	movl	iterations(%rip), %edx
    00000255: 	movq	%rax, start_time(%rip)
    0000025c: 	testl	%edx, %edx
    0000025e: 	jle	.Ltmp122 # Offset: 606
    00000264: 	pxor	%xmm4, %xmm4
    00000268: 	movsd	DATAat0x234e0(%rip), %xmm5
    00000270: 	xorl	%r13d, %r13d
    00000273: 	movq	DATAat0x234b0(%rip), %xmm6
    0000027b: 	movsd	%xmm4, 0x28(%rsp)
    00000281: 	movsd	DATAat0x23460(%rip), %xmm4
    00000289: 	leaq	DATAat0x231d2(%rip), %r15
    00000290: 	movsd	%xmm5, 0x70(%rsp)
    00000296: 	movsd	DATAat0x23468(%rip), %xmm5
    0000029e: 	movsd	%xmm4, 0x10(%rsp)
    000002a4: 	movsd	DATAat0x23470(%rip), %xmm4
    000002ac: 	movaps	%xmm6, (%rsp)
    000002b0: 	movsd	%xmm5, 0x30(%rsp)
    000002b6: 	movsd	%xmm4, 0x40(%rsp)
    000002bc: 	nopl	(%rax) # Size: 4
.Ltmp126:
    000002c0: 	movl	$0x1f40, %eax
    000002c5: 	pxor	%xmm0, %xmm0
    000002c9: 	nopl	(%rax) # Size: 7
.Ltmp123:
    000002d0: 	addsd	0x70(%rsp), %xmm0
    000002d6: 	subl	$0x1, %eax
    000002d9: 	jne	.Ltmp123 # Offset: 729
    000002db: 	movapd	(%rsp), %xmm7
    000002e0: 	movapd	%xmm0, %xmm1
    000002e4: 	subsd	0x10(%rsp), %xmm1
    000002ea: 	andpd	%xmm0, %xmm7
    000002ee: 	comisd	0x30(%rsp), %xmm7
    000002f4: 	jbe	.Ltmp124 # Offset: 756
    000002f6: 	divsd	%xmm0, %xmm1
.Ltmp124:
    000002fa: 	andpd	(%rsp), %xmm1
    000002ff: 	movsd	0x40(%rsp), %xmm7
    00000305: 	comisd	%xmm1, %xmm7
    00000309: 	jbe	.Ltmp125 # Offset: 777
.Ltmp378:
    0000030f: 	addl	$0x1, %r13d
    00000313: 	cmpl	%edx, %r13d
    00000316: 	jl	.Ltmp126 # Offset: 790
.Ltmp122:
    00000318: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000031f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00000326: 	subq	$0x20, %rax
    0000032a: 	cmpq	%rax, %r15
    0000032d: 	je	.Ltmp127 # Offset: 813
    00000333: 	leaq	0x10(%r15), %rdi
    00000337: 	movq	0x108(%rsp), %r13
    0000033f: 	movq	%rdi, (%r15)
    00000342: 	movq	0x100(%rsp), %rax
    0000034a: 	movq	%rax, %rcx
    0000034d: 	movq	%rax, (%rsp)
    00000351: 	addq	%r13, %rcx
    00000354: 	je	.Ltmp128 # Offset: 852
    00000356: 	testq	%rax, %rax
    00000359: 	je	.Ltmp129 # Offset: 857
.Ltmp128:
    0000035f: 	movq	%r13, 0xb8(%rsp)
    00000367: 	cmpq	$0xf, %r13
    0000036b: 	ja	.Ltmp130 # Offset: 875
    00000371: 	cmpq	$0x1, %r13
    00000375: 	jne	.Ltmp131 # Offset: 885
    0000037b: 	movq	(%rsp), %rax
    0000037f: 	movzbl	(%rax), %eax
    00000382: 	movb	%al, 0x10(%r15)
.Ltmp379:
    00000386: 	movq	%r13, 0x8(%r15)
    0000038a: 	movb	$0x0, (%rdi,%r13)
    0000038f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000396: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000039d: 	addq	$0x20, %rax
    000003a1: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000003a8: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    000003af: 	je	.Ltmp132 # Offset: 943
.Ltmp411:
    000003b5: 	movq	-0x20(%rax), %r13
    000003b9: 	callq	clock@PLT # Offset: 953
    000003be: 	pxor	%xmm0, %xmm0
    000003c2: 	movq	%rax, end_time(%rip)
    000003c9: 	movq	%r13, %rdi
    000003cc: 	subq	start_time(%rip), %rax
    000003d3: 	cvtsi2sd	%rax, %xmm0
    000003d8: 	divsd	DATAat0x23450(%rip), %xmm0
    000003e0: 	callq	_Z13record_resultdPKc # Offset: 992
    000003e5: 	movq	0x100(%rsp), %rdi
    000003ed: 	leaq	0x110(%rsp), %rax
    000003f5: 	movq	%rax, 0xa0(%rsp)
    000003fd: 	cmpq	%rax, %rdi
    00000400: 	je	.Ltmp133 # Offset: 1024
    00000402: 	movq	0x110(%rsp), %rax
    0000040a: 	leaq	0x1(%rax), %rsi
    0000040e: 	callq	_ZdlPvm@PLT # Offset: 1038
.Ltmp133:
    00000413: 	leaq	DATAat0x231e2(%rip), %rdx
    0000041a: 	movq	%r14, %rsi
    0000041d: 	movq	%r12, %rdi
    00000420: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1056
    00000425: 	callq	clock@PLT # Offset: 1061
    0000042a: 	movl	iterations(%rip), %edx
    00000430: 	movq	%rax, start_time(%rip)
    00000437: 	testl	%edx, %edx
    00000439: 	jle	.Ltmp134 # Offset: 1081
    0000043f: 	movq	DATAat0x234b0(%rip), %xmm5
    00000447: 	pxor	%xmm6, %xmm6
    0000044b: 	xorl	%r13d, %r13d
    0000044e: 	movsd	DATAat0x23468(%rip), %xmm4
    00000456: 	movsd	%xmm6, 0x28(%rsp)
    0000045c: 	movsd	DATAat0x23470(%rip), %xmm6
    00000464: 	leaq	DATAat0x231d2(%rip), %r15
    0000046b: 	movaps	%xmm5, (%rsp)
    0000046f: 	movsd	DATAat0x234f0(%rip), %xmm5
    00000477: 	movsd	%xmm4, 0x30(%rsp)
    0000047d: 	movsd	%xmm6, 0x40(%rsp)
    00000483: 	movsd	%xmm5, 0x90(%rsp)
    0000048c: 	nopl	(%rax) # Size: 4
.Ltmp138:
    00000490: 	movl	$0x1f40, %eax
    00000495: 	pxor	%xmm0, %xmm0
    00000499: 	nopl	(%rax) # Size: 7
.Ltmp135:
    000004a0: 	addsd	0x90(%rsp), %xmm0
    000004a9: 	subl	$0x1, %eax
    000004ac: 	jne	.Ltmp135 # Offset: 1196
    000004ae: 	movapd	(%rsp), %xmm3
    000004b3: 	movapd	%xmm0, %xmm1
    000004b7: 	subsd	DATAat0x23478(%rip), %xmm1
    000004bf: 	andpd	%xmm0, %xmm3
    000004c3: 	comisd	0x30(%rsp), %xmm3
    000004c9: 	jbe	.Ltmp136 # Offset: 1225
    000004cb: 	divsd	%xmm0, %xmm1
.Ltmp136:
    000004cf: 	andpd	(%rsp), %xmm1
    000004d4: 	movsd	0x40(%rsp), %xmm5
    000004da: 	comisd	%xmm1, %xmm5
    000004de: 	jbe	.Ltmp137 # Offset: 1246
.Ltmp385:
    000004e4: 	addl	$0x1, %r13d
    000004e8: 	cmpl	%edx, %r13d
    000004eb: 	jl	.Ltmp138 # Offset: 1259
.Ltmp134:
    000004ed: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000004f4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    000004fb: 	subq	$0x20, %rax
    000004ff: 	cmpq	%rax, %r15
    00000502: 	je	.Ltmp139 # Offset: 1282
    00000508: 	leaq	0x10(%r15), %rdi
    0000050c: 	movq	0x108(%rsp), %r13
    00000514: 	movq	%rdi, (%r15)
    00000517: 	movq	0x100(%rsp), %rax
    0000051f: 	movq	%rax, %rcx
    00000522: 	movq	%rax, (%rsp)
    00000526: 	addq	%r13, %rcx
    00000529: 	je	.Ltmp140 # Offset: 1321
    0000052b: 	testq	%rax, %rax
    0000052e: 	je	.Ltmp141 # Offset: 1326
.Ltmp140:
    00000534: 	movq	%r13, 0xb8(%rsp)
    0000053c: 	cmpq	$0xf, %r13
    00000540: 	ja	.Ltmp142 # Offset: 1344
    00000546: 	cmpq	$0x1, %r13
    0000054a: 	jne	.Ltmp143 # Offset: 1354
    00000550: 	movq	(%rsp), %rax
    00000554: 	movzbl	(%rax), %eax
    00000557: 	movb	%al, 0x10(%r15)
.Ltmp449:
    0000055b: 	movq	%r13, 0x8(%r15)
    0000055f: 	movb	$0x0, (%rdi,%r13)
    00000564: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000056b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000572: 	addq	$0x20, %rax
    00000576: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000057d: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00000584: 	je	.Ltmp144 # Offset: 1412
.Ltmp412:
    0000058a: 	movq	-0x20(%rax), %r13
    0000058e: 	callq	clock@PLT # Offset: 1422
    00000593: 	pxor	%xmm0, %xmm0
    00000597: 	movq	%rax, end_time(%rip)
    0000059e: 	movq	%r13, %rdi
    000005a1: 	subq	start_time(%rip), %rax
    000005a8: 	cvtsi2sd	%rax, %xmm0
    000005ad: 	divsd	DATAat0x23450(%rip), %xmm0
    000005b5: 	callq	_Z13record_resultdPKc # Offset: 1461
    000005ba: 	movq	0x100(%rsp), %rdi
    000005c2: 	cmpq	0xa0(%rsp), %rdi
    000005ca: 	je	.Ltmp145 # Offset: 1482
    000005cc: 	movq	0x110(%rsp), %rax
    000005d4: 	leaq	0x1(%rax), %rsi
    000005d8: 	callq	_ZdlPvm@PLT # Offset: 1496
.Ltmp145:
    000005dd: 	leaq	DATAat0x231f1(%rip), %rdx
    000005e4: 	movq	%r14, %rsi
    000005e7: 	movq	%r12, %rdi
    000005ea: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1514
    000005ef: 	callq	clock@PLT # Offset: 1519
    000005f4: 	movl	iterations(%rip), %edx
    000005fa: 	movq	%rax, start_time(%rip)
    00000601: 	testl	%edx, %edx
    00000603: 	jle	.Ltmp146 # Offset: 1539
    00000609: 	movq	DATAat0x234b0(%rip), %xmm6
    00000611: 	pxor	%xmm4, %xmm4
    00000615: 	xorl	%r13d, %r13d
    00000618: 	movsd	DATAat0x23468(%rip), %xmm5
    00000620: 	movsd	DATAat0x23470(%rip), %xmm3
    00000628: 	movsd	%xmm4, 0x28(%rsp)
    0000062e: 	movsd	DATAat0x234d0(%rip), %xmm4
    00000636: 	leaq	DATAat0x231d2(%rip), %r15
    0000063d: 	movaps	%xmm6, (%rsp)
    00000641: 	movsd	DATAat0x23480(%rip), %xmm6
    00000649: 	movsd	%xmm5, 0x30(%rsp)
    0000064f: 	movsd	%xmm3, 0x40(%rsp)
    00000655: 	movsd	%xmm4, 0x10(%rsp)
    0000065b: 	movsd	%xmm6, 0x78(%rsp)
    00000661: 	nopl	(%rax) # Size: 7
.Ltmp150:
    00000668: 	movl	$0x1f40, %eax
    0000066d: 	pxor	%xmm0, %xmm0
    00000671: 	nopl	(%rax) # Size: 7
.Ltmp147:
    00000678: 	addsd	0x10(%rsp), %xmm0
    0000067e: 	subl	$0x1, %eax
    00000681: 	jne	.Ltmp147 # Offset: 1665
    00000683: 	movapd	(%rsp), %xmm7
    00000688: 	movapd	%xmm0, %xmm1
    0000068c: 	subsd	0x78(%rsp), %xmm1
    00000692: 	andpd	%xmm0, %xmm7
    00000696: 	comisd	0x30(%rsp), %xmm7
    0000069c: 	jbe	.Ltmp148 # Offset: 1692
    0000069e: 	divsd	%xmm0, %xmm1
.Ltmp148:
    000006a2: 	andpd	(%rsp), %xmm1
    000006a7: 	movsd	0x40(%rsp), %xmm4
    000006ad: 	comisd	%xmm1, %xmm4
    000006b1: 	jbe	.Ltmp149 # Offset: 1713
.Ltmp384:
    000006b7: 	addl	$0x1, %r13d
    000006bb: 	cmpl	%edx, %r13d
    000006be: 	jl	.Ltmp150 # Offset: 1726
.Ltmp146:
    000006c0: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000006c7: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    000006ce: 	subq	$0x20, %rax
    000006d2: 	cmpq	%rax, %r15
    000006d5: 	je	.Ltmp151 # Offset: 1749
    000006db: 	leaq	0x10(%r15), %rdi
    000006df: 	movq	0x108(%rsp), %r13
    000006e7: 	movq	%rdi, (%r15)
    000006ea: 	movq	0x100(%rsp), %rax
    000006f2: 	movq	%rax, %rcx
    000006f5: 	movq	%rax, (%rsp)
    000006f9: 	addq	%r13, %rcx
    000006fc: 	je	.Ltmp152 # Offset: 1788
    000006fe: 	testq	%rax, %rax
    00000701: 	je	.Ltmp153 # Offset: 1793
.Ltmp152:
    00000707: 	movq	%r13, 0xb8(%rsp)
    0000070f: 	cmpq	$0xf, %r13
    00000713: 	ja	.Ltmp154 # Offset: 1811
    00000719: 	cmpq	$0x1, %r13
    0000071d: 	jne	.Ltmp155 # Offset: 1821
    00000723: 	movq	(%rsp), %rax
    00000727: 	movzbl	(%rax), %eax
    0000072a: 	movb	%al, 0x10(%r15)
.Ltmp447:
    0000072e: 	movq	%r13, 0x8(%r15)
    00000732: 	movb	$0x0, (%rdi,%r13)
    00000737: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000073e: 	addq	$0x20, %rax
    00000742: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp414:
    00000749: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000750: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000757: 	je	.Ltmp156 # Offset: 1879
.Ltmp403:
    0000075d: 	movq	-0x20(%rax), %r13
    00000761: 	callq	clock@PLT # Offset: 1889
    00000766: 	pxor	%xmm0, %xmm0
    0000076a: 	movq	%rax, end_time(%rip)
    00000771: 	movq	%r13, %rdi
    00000774: 	subq	start_time(%rip), %rax
    0000077b: 	cvtsi2sd	%rax, %xmm0
    00000780: 	divsd	DATAat0x23450(%rip), %xmm0
    00000788: 	callq	_Z13record_resultdPKc # Offset: 1928
    0000078d: 	movq	0x100(%rsp), %rdi
    00000795: 	cmpq	0xa0(%rsp), %rdi
    0000079d: 	je	.Ltmp157 # Offset: 1949
    0000079f: 	movq	0x110(%rsp), %rax
    000007a7: 	leaq	0x1(%rax), %rsi
    000007ab: 	callq	_ZdlPvm@PLT # Offset: 1963
.Ltmp157:
    000007b0: 	leaq	DATAat0x23205(%rip), %rdx
    000007b7: 	movq	%r14, %rsi
    000007ba: 	movq	%r12, %rdi
    000007bd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1981
    000007c2: 	callq	clock@PLT # Offset: 1986
    000007c7: 	movl	iterations(%rip), %edx
    000007cd: 	movq	%rax, start_time(%rip)
    000007d4: 	testl	%edx, %edx
    000007d6: 	jle	.Ltmp158 # Offset: 2006
    000007dc: 	movq	DATAat0x234b0(%rip), %xmm3
    000007e4: 	movsd	DATAat0x23468(%rip), %xmm4
    000007ec: 	pxor	%xmm5, %xmm5
    000007f0: 	xorl	%r13d, %r13d
    000007f3: 	movsd	DATAat0x23470(%rip), %xmm6
    000007fb: 	movsd	%xmm5, 0x28(%rsp)
    00000801: 	leaq	DATAat0x231d2(%rip), %r15
    00000808: 	movaps	%xmm3, (%rsp)
    0000080c: 	movsd	%xmm4, 0x30(%rsp)
    00000812: 	movsd	%xmm6, 0x40(%rsp)
    00000818: 	nopl	(%rax,%rax) # Size: 8
.Ltmp162:
    00000820: 	movl	$0x1f40, %eax
    00000825: 	pxor	%xmm0, %xmm0
    00000829: 	nopl	(%rax) # Size: 7
.Ltmp159:
    00000830: 	addsd	DATAat0x23488(%rip), %xmm0
    00000838: 	subl	$0x1, %eax
    0000083b: 	jne	.Ltmp159 # Offset: 2107
    0000083d: 	movapd	(%rsp), %xmm3
    00000842: 	movapd	%xmm0, %xmm1
    00000846: 	subsd	DATAat0x23490(%rip), %xmm1
    0000084e: 	andpd	%xmm0, %xmm3
    00000852: 	comisd	0x30(%rsp), %xmm3
    00000858: 	jbe	.Ltmp160 # Offset: 2136
    0000085a: 	divsd	%xmm0, %xmm1
.Ltmp160:
    0000085e: 	andpd	(%rsp), %xmm1
    00000863: 	movsd	0x40(%rsp), %xmm7
    00000869: 	comisd	%xmm1, %xmm7
    0000086d: 	jbe	.Ltmp161 # Offset: 2157
.Ltmp387:
    00000873: 	addl	$0x1, %r13d
    00000877: 	cmpl	%edx, %r13d
    0000087a: 	jl	.Ltmp162 # Offset: 2170
.Ltmp158:
    0000087c: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000883: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    0000088a: 	subq	$0x20, %rax
    0000088e: 	cmpq	%rax, %r15
    00000891: 	je	.Ltmp163 # Offset: 2193
    00000897: 	leaq	0x10(%r15), %rdi
    0000089b: 	movq	0x108(%rsp), %r13
    000008a3: 	movq	%rdi, (%r15)
    000008a6: 	movq	0x100(%rsp), %rax
    000008ae: 	movq	%rax, %rcx
    000008b1: 	movq	%rax, (%rsp)
    000008b5: 	addq	%r13, %rcx
    000008b8: 	je	.Ltmp164 # Offset: 2232
    000008ba: 	testq	%rax, %rax
    000008bd: 	je	.Ltmp165 # Offset: 2237
.Ltmp164:
    000008c3: 	movq	%r13, 0xb8(%rsp)
    000008cb: 	cmpq	$0xf, %r13
    000008cf: 	ja	.Ltmp166 # Offset: 2255
    000008d5: 	cmpq	$0x1, %r13
    000008d9: 	jne	.Ltmp167 # Offset: 2265
    000008df: 	movq	(%rsp), %rax
    000008e3: 	movzbl	(%rax), %eax
    000008e6: 	movb	%al, 0x10(%r15)
.Ltmp442:
    000008ea: 	movq	%r13, 0x8(%r15)
    000008ee: 	movb	$0x0, (%rdi,%r13)
    000008f3: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000008fa: 	addq	$0x20, %rax
    000008fe: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp417:
    00000905: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000090c: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000913: 	je	.Ltmp168 # Offset: 2323
.Ltmp416:
    00000919: 	movq	-0x20(%rax), %r13
    0000091d: 	callq	clock@PLT # Offset: 2333
    00000922: 	pxor	%xmm0, %xmm0
    00000926: 	movq	%rax, end_time(%rip)
    0000092d: 	movq	%r13, %rdi
    00000930: 	subq	start_time(%rip), %rax
    00000937: 	cvtsi2sd	%rax, %xmm0
    0000093c: 	divsd	DATAat0x23450(%rip), %xmm0
    00000944: 	callq	_Z13record_resultdPKc # Offset: 2372
    00000949: 	movq	0x100(%rsp), %rdi
    00000951: 	cmpq	0xa0(%rsp), %rdi
    00000959: 	je	.Ltmp169 # Offset: 2393
    0000095b: 	movq	0x110(%rsp), %rax
    00000963: 	leaq	0x1(%rax), %rsi
    00000967: 	callq	_ZdlPvm@PLT # Offset: 2407
.Ltmp169:
    0000096c: 	leaq	DATAat0x23219(%rip), %rdx
    00000973: 	movq	%r14, %rsi
    00000976: 	movq	%r12, %rdi
    00000979: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2425
    0000097e: 	callq	clock@PLT # Offset: 2430
    00000983: 	movl	iterations(%rip), %edx
    00000989: 	movq	%rax, start_time(%rip)
    00000990: 	testl	%edx, %edx
    00000992: 	jle	.Ltmp170 # Offset: 2450
    00000998: 	pxor	%xmm5, %xmm5
    0000099c: 	movsd	DATAat0x234e0(%rip), %xmm3
    000009a4: 	movsd	DATAat0x23460(%rip), %xmm4
    000009ac: 	xorl	%r13d, %r13d
    000009af: 	movq	DATAat0x234b0(%rip), %xmm6
    000009b7: 	movsd	DATAat0x23470(%rip), %xmm7
    000009bf: 	movsd	%xmm5, 0x28(%rsp)
    000009c5: 	leaq	DATAat0x231d2(%rip), %r15
    000009cc: 	movsd	DATAat0x23468(%rip), %xmm5
    000009d4: 	movsd	%xmm3, 0x70(%rsp)
    000009da: 	movsd	%xmm4, 0x10(%rsp)
    000009e0: 	movaps	%xmm6, (%rsp)
    000009e4: 	movsd	%xmm5, 0x30(%rsp)
    000009ea: 	movsd	%xmm7, 0x40(%rsp)
.Ltmp174:
    000009f0: 	movl	$0x1f40, %eax
    000009f5: 	pxor	%xmm0, %xmm0
    000009f9: 	nopl	(%rax) # Size: 7
.Ltmp171:
    00000a00: 	addsd	0x70(%rsp), %xmm0
    00000a06: 	subl	$0x1, %eax
    00000a09: 	jne	.Ltmp171 # Offset: 2569
    00000a0b: 	movapd	(%rsp), %xmm5
    00000a10: 	movapd	%xmm0, %xmm1
    00000a14: 	subsd	0x10(%rsp), %xmm1
    00000a1a: 	andpd	%xmm0, %xmm5
    00000a1e: 	comisd	0x30(%rsp), %xmm5
    00000a24: 	jbe	.Ltmp172 # Offset: 2596
    00000a26: 	divsd	%xmm0, %xmm1
.Ltmp172:
    00000a2a: 	andpd	(%rsp), %xmm1
    00000a2f: 	movsd	0x40(%rsp), %xmm6
    00000a35: 	comisd	%xmm1, %xmm6
    00000a39: 	jbe	.Ltmp173 # Offset: 2617
.Ltmp386:
    00000a3f: 	addl	$0x1, %r13d
    00000a43: 	cmpl	%edx, %r13d
    00000a46: 	jl	.Ltmp174 # Offset: 2630
.Ltmp170:
    00000a48: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000a4f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00000a56: 	subq	$0x20, %rax
    00000a5a: 	cmpq	%rax, %r15
    00000a5d: 	je	.Ltmp175 # Offset: 2653
    00000a63: 	leaq	0x10(%r15), %rdi
    00000a67: 	movq	0x108(%rsp), %r13
    00000a6f: 	movq	%rdi, (%r15)
    00000a72: 	movq	0x100(%rsp), %rax
    00000a7a: 	movq	%rax, %rcx
    00000a7d: 	movq	%rax, (%rsp)
    00000a81: 	addq	%r13, %rcx
    00000a84: 	je	.Ltmp176 # Offset: 2692
    00000a86: 	testq	%rax, %rax
    00000a89: 	je	.Ltmp177 # Offset: 2697
.Ltmp176:
    00000a8f: 	movq	%r13, 0xb8(%rsp)
    00000a97: 	cmpq	$0xf, %r13
    00000a9b: 	ja	.Ltmp178 # Offset: 2715
    00000aa1: 	cmpq	$0x1, %r13
    00000aa5: 	jne	.Ltmp179 # Offset: 2725
    00000aab: 	movq	(%rsp), %rax
    00000aaf: 	movzbl	(%rax), %eax
    00000ab2: 	movb	%al, 0x10(%r15)
.Ltmp453:
    00000ab6: 	movq	%r13, 0x8(%r15)
    00000aba: 	movb	$0x0, (%rdi,%r13)
    00000abf: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000ac6: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000acd: 	addq	$0x20, %rax
    00000ad1: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000ad8: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00000adf: 	je	.Ltmp180 # Offset: 2783
.Ltmp418:
    00000ae5: 	movq	-0x20(%rax), %r13
    00000ae9: 	callq	clock@PLT # Offset: 2793
    00000aee: 	pxor	%xmm0, %xmm0
    00000af2: 	movq	%rax, end_time(%rip)
    00000af9: 	movq	%r13, %rdi
    00000afc: 	subq	start_time(%rip), %rax
    00000b03: 	cvtsi2sd	%rax, %xmm0
    00000b08: 	divsd	DATAat0x23450(%rip), %xmm0
    00000b10: 	callq	_Z13record_resultdPKc # Offset: 2832
    00000b15: 	movq	0x100(%rsp), %rdi
    00000b1d: 	cmpq	0xa0(%rsp), %rdi
    00000b25: 	je	.Ltmp181 # Offset: 2853
    00000b27: 	movq	0x110(%rsp), %rax
    00000b2f: 	leaq	0x1(%rax), %rsi
    00000b33: 	callq	_ZdlPvm@PLT # Offset: 2867
.Ltmp181:
    00000b38: 	leaq	DATAat0x23279(%rip), %rdx
    00000b3f: 	movq	%r14, %rsi
    00000b42: 	movq	%r12, %rdi
    00000b45: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2885
    00000b4a: 	callq	clock@PLT # Offset: 2890
    00000b4f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00000b56: 	movq	%rax, start_time(%rip)
    00000b5d: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000b64: 	subq	$0x20, %rax
    00000b68: 	cmpq	%rax, %r15
    00000b6b: 	je	.Ltmp182 # Offset: 2923
    00000b71: 	leaq	0x10(%r15), %rdi
    00000b75: 	movq	0x108(%rsp), %r13
    00000b7d: 	movq	%rdi, (%r15)
    00000b80: 	movq	0x100(%rsp), %rax
    00000b88: 	movq	%rax, %rcx
    00000b8b: 	movq	%rax, (%rsp)
    00000b8f: 	addq	%r13, %rcx
    00000b92: 	je	.Ltmp183 # Offset: 2962
    00000b94: 	testq	%rax, %rax
    00000b97: 	je	.Ltmp184 # Offset: 2967
.Ltmp183:
    00000b9d: 	movq	%r13, 0xb8(%rsp)
    00000ba5: 	cmpq	$0xf, %r13
    00000ba9: 	ja	.Ltmp185 # Offset: 2985
    00000baf: 	cmpq	$0x1, %r13
    00000bb3: 	jne	.Ltmp186 # Offset: 2995
    00000bb9: 	movq	(%rsp), %rax
    00000bbd: 	movzbl	(%rax), %eax
    00000bc0: 	movb	%al, 0x10(%r15)
.Ltmp467:
    00000bc4: 	movq	%r13, 0x8(%r15)
    00000bc8: 	movb	$0x0, (%rdi,%r13)
    00000bcd: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000bd4: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000bdb: 	addq	$0x20, %rax
    00000bdf: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000be6: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00000bed: 	je	.Ltmp187 # Offset: 3053
.Ltmp419:
    00000bf3: 	movq	-0x20(%rax), %r13
    00000bf7: 	callq	clock@PLT # Offset: 3063
    00000bfc: 	pxor	%xmm0, %xmm0
    00000c00: 	movq	%rax, end_time(%rip)
    00000c07: 	movq	%r13, %rdi
    00000c0a: 	subq	start_time(%rip), %rax
    00000c11: 	cvtsi2sd	%rax, %xmm0
    00000c16: 	divsd	DATAat0x23450(%rip), %xmm0
    00000c1e: 	callq	_Z13record_resultdPKc # Offset: 3102
    00000c23: 	movq	0x100(%rsp), %rdi
    00000c2b: 	cmpq	0xa0(%rsp), %rdi
    00000c33: 	je	.Ltmp188 # Offset: 3123
    00000c35: 	movq	0x110(%rsp), %rax
    00000c3d: 	leaq	0x1(%rax), %rsi
    00000c41: 	callq	_ZdlPvm@PLT # Offset: 3137
.Ltmp188:
    00000c46: 	leaq	DATAat0x2322b(%rip), %rdx
    00000c4d: 	movq	%r14, %rsi
    00000c50: 	movq	%r12, %rdi
    00000c53: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3155
    00000c58: 	callq	clock@PLT # Offset: 3160
    00000c5d: 	movl	iterations(%rip), %edx
    00000c63: 	movq	%rax, start_time(%rip)
    00000c6a: 	testl	%edx, %edx
    00000c6c: 	jle	.Ltmp189 # Offset: 3180
    00000c72: 	pxor	%xmm3, %xmm3
    00000c76: 	movq	DATAat0x234b0(%rip), %xmm4
    00000c7e: 	movsd	DATAat0x23468(%rip), %xmm6
    00000c86: 	xorl	%r13d, %r13d
    00000c89: 	movsd	DATAat0x23470(%rip), %xmm5
    00000c91: 	movsd	DATAat0x234d0(%rip), %xmm7
    00000c99: 	movsd	%xmm3, 0x28(%rsp)
    00000c9f: 	leaq	DATAat0x231d2(%rip), %r15
    00000ca6: 	movsd	DATAat0x23480(%rip), %xmm3
    00000cae: 	movaps	%xmm4, (%rsp)
    00000cb2: 	movsd	%xmm6, 0x30(%rsp)
    00000cb8: 	movsd	%xmm5, 0x40(%rsp)
    00000cbe: 	movsd	%xmm7, 0x10(%rsp)
    00000cc4: 	movsd	%xmm3, 0x78(%rsp)
    00000cca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp193:
    00000cd0: 	movl	$0x1f40, %eax
    00000cd5: 	pxor	%xmm0, %xmm0
    00000cd9: 	nopl	(%rax) # Size: 7
.Ltmp190:
    00000ce0: 	addsd	0x10(%rsp), %xmm0
    00000ce6: 	subl	$0x1, %eax
    00000ce9: 	jne	.Ltmp190 # Offset: 3305
    00000ceb: 	movapd	(%rsp), %xmm4
    00000cf0: 	movapd	%xmm0, %xmm1
    00000cf4: 	subsd	0x78(%rsp), %xmm1
    00000cfa: 	andpd	%xmm0, %xmm4
    00000cfe: 	comisd	0x30(%rsp), %xmm4
    00000d04: 	jbe	.Ltmp191 # Offset: 3332
    00000d06: 	divsd	%xmm0, %xmm1
.Ltmp191:
    00000d0a: 	andpd	(%rsp), %xmm1
    00000d0f: 	movsd	0x40(%rsp), %xmm5
    00000d15: 	comisd	%xmm1, %xmm5
    00000d19: 	jbe	.Ltmp192 # Offset: 3353
.Ltmp392:
    00000d1f: 	addl	$0x1, %r13d
    00000d23: 	cmpl	%edx, %r13d
    00000d26: 	jl	.Ltmp193 # Offset: 3366
.Ltmp189:
    00000d28: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000d2f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00000d36: 	subq	$0x20, %rax
    00000d3a: 	cmpq	%rax, %r15
    00000d3d: 	je	.Ltmp194 # Offset: 3389
    00000d43: 	leaq	0x10(%r15), %rdi
    00000d47: 	movq	0x108(%rsp), %r13
    00000d4f: 	movq	%rdi, (%r15)
    00000d52: 	movq	0x100(%rsp), %rax
    00000d5a: 	movq	%rax, %rcx
    00000d5d: 	movq	%rax, (%rsp)
    00000d61: 	addq	%r13, %rcx
    00000d64: 	je	.Ltmp195 # Offset: 3428
    00000d66: 	testq	%rax, %rax
    00000d69: 	je	.Ltmp196 # Offset: 3433
.Ltmp195:
    00000d6f: 	movq	%r13, 0xb8(%rsp)
    00000d77: 	cmpq	$0xf, %r13
    00000d7b: 	ja	.Ltmp197 # Offset: 3451
    00000d81: 	cmpq	$0x1, %r13
    00000d85: 	jne	.Ltmp198 # Offset: 3461
    00000d8b: 	movq	(%rsp), %rax
    00000d8f: 	movzbl	(%rax), %eax
    00000d92: 	movb	%al, 0x10(%r15)
.Ltmp434:
    00000d96: 	movq	%r13, 0x8(%r15)
    00000d9a: 	movb	$0x0, (%rdi,%r13)
    00000d9f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000da6: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000dad: 	addq	$0x20, %rax
    00000db1: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000db8: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00000dbf: 	je	.Ltmp199 # Offset: 3519
.Ltmp424:
    00000dc5: 	movq	-0x20(%rax), %r13
    00000dc9: 	callq	clock@PLT # Offset: 3529
    00000dce: 	pxor	%xmm0, %xmm0
    00000dd2: 	movq	%rax, end_time(%rip)
    00000dd9: 	movq	%r13, %rdi
    00000ddc: 	subq	start_time(%rip), %rax
    00000de3: 	cvtsi2sd	%rax, %xmm0
    00000de8: 	divsd	DATAat0x23450(%rip), %xmm0
    00000df0: 	callq	_Z13record_resultdPKc # Offset: 3568
    00000df5: 	movq	0x100(%rsp), %rdi
    00000dfd: 	cmpq	0xa0(%rsp), %rdi
    00000e05: 	je	.Ltmp200 # Offset: 3589
    00000e07: 	movq	0x110(%rsp), %rax
    00000e0f: 	leaq	0x1(%rax), %rsi
    00000e13: 	callq	_ZdlPvm@PLT # Offset: 3603
.Ltmp200:
    00000e18: 	leaq	DATAat0x2323f(%rip), %rdx
    00000e1f: 	movq	%r14, %rsi
    00000e22: 	movq	%r12, %rdi
    00000e25: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3621
    00000e2a: 	callq	clock@PLT # Offset: 3626
    00000e2f: 	movl	iterations(%rip), %edx
    00000e35: 	movq	%rax, start_time(%rip)
    00000e3c: 	testl	%edx, %edx
    00000e3e: 	jle	.Ltmp201 # Offset: 3646
    00000e44: 	pxor	%xmm4, %xmm4
    00000e48: 	movq	DATAat0x234b0(%rip), %xmm6
    00000e50: 	movsd	DATAat0x23468(%rip), %xmm5
    00000e58: 	xorl	%r13d, %r13d
    00000e5b: 	movsd	DATAat0x23470(%rip), %xmm7
    00000e63: 	movsd	DATAat0x234d0(%rip), %xmm3
    00000e6b: 	movsd	%xmm4, 0x28(%rsp)
    00000e71: 	leaq	DATAat0x231d2(%rip), %r15
    00000e78: 	movsd	DATAat0x23480(%rip), %xmm4
    00000e80: 	movaps	%xmm6, (%rsp)
    00000e84: 	movsd	%xmm5, 0x30(%rsp)
    00000e8a: 	movsd	%xmm7, 0x40(%rsp)
    00000e90: 	movsd	%xmm3, 0x10(%rsp)
    00000e96: 	movsd	%xmm4, 0x78(%rsp)
    00000e9c: 	nopl	(%rax) # Size: 4
.Ltmp205:
    00000ea0: 	movl	$0x1f40, %eax
    00000ea5: 	pxor	%xmm0, %xmm0
    00000ea9: 	nopl	(%rax) # Size: 7
.Ltmp202:
    00000eb0: 	addsd	0x10(%rsp), %xmm0
    00000eb6: 	subl	$0x1, %eax
    00000eb9: 	jne	.Ltmp202 # Offset: 3769
    00000ebb: 	movapd	(%rsp), %xmm7
    00000ec0: 	movapd	%xmm0, %xmm1
    00000ec4: 	subsd	0x78(%rsp), %xmm1
    00000eca: 	andpd	%xmm0, %xmm7
    00000ece: 	comisd	0x30(%rsp), %xmm7
    00000ed4: 	jbe	.Ltmp203 # Offset: 3796
    00000ed6: 	divsd	%xmm0, %xmm1
.Ltmp203:
    00000eda: 	andpd	(%rsp), %xmm1
    00000edf: 	movsd	0x40(%rsp), %xmm4
    00000ee5: 	comisd	%xmm1, %xmm4
    00000ee9: 	jbe	.Ltmp204 # Offset: 3817
.Ltmp391:
    00000eef: 	addl	$0x1, %r13d
    00000ef3: 	cmpl	%edx, %r13d
    00000ef6: 	jl	.Ltmp205 # Offset: 3830
.Ltmp201:
    00000ef8: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000eff: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00000f06: 	subq	$0x20, %rax
    00000f0a: 	cmpq	%rax, %r15
    00000f0d: 	je	.Ltmp206 # Offset: 3853
    00000f13: 	leaq	0x10(%r15), %rdi
    00000f17: 	movq	0x108(%rsp), %r13
    00000f1f: 	movq	%rdi, (%r15)
    00000f22: 	movq	0x100(%rsp), %rax
    00000f2a: 	movq	%rax, %rcx
    00000f2d: 	movq	%rax, (%rsp)
    00000f31: 	addq	%r13, %rcx
    00000f34: 	je	.Ltmp207 # Offset: 3892
    00000f36: 	testq	%rax, %rax
    00000f39: 	je	.Ltmp208 # Offset: 3897
.Ltmp207:
    00000f3f: 	movq	%r13, 0xb8(%rsp)
    00000f47: 	cmpq	$0xf, %r13
    00000f4b: 	ja	.Ltmp209 # Offset: 3915
    00000f51: 	cmpq	$0x1, %r13
    00000f55: 	jne	.Ltmp210 # Offset: 3925
    00000f5b: 	movq	(%rsp), %rax
    00000f5f: 	movzbl	(%rax), %eax
    00000f62: 	movb	%al, 0x10(%r15)
.Ltmp454:
    00000f66: 	movq	%r13, 0x8(%r15)
    00000f6a: 	movb	$0x0, (%rdi,%r13)
    00000f6f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000f76: 	addq	$0x20, %rax
    00000f7a: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp423:
    00000f81: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000f88: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000f8f: 	je	.Ltmp211 # Offset: 3983
.Ltmp402:
    00000f95: 	movq	-0x20(%rax), %r13
    00000f99: 	callq	clock@PLT # Offset: 3993
    00000f9e: 	pxor	%xmm0, %xmm0
    00000fa2: 	movq	%rax, end_time(%rip)
    00000fa9: 	movq	%r13, %rdi
    00000fac: 	subq	start_time(%rip), %rax
    00000fb3: 	cvtsi2sd	%rax, %xmm0
    00000fb8: 	divsd	DATAat0x23450(%rip), %xmm0
    00000fc0: 	callq	_Z13record_resultdPKc # Offset: 4032
    00000fc5: 	movq	0x100(%rsp), %rdi
    00000fcd: 	cmpq	0xa0(%rsp), %rdi
    00000fd5: 	je	.Ltmp212 # Offset: 4053
    00000fd7: 	movq	0x110(%rsp), %rax
    00000fdf: 	leaq	0x1(%rax), %rsi
    00000fe3: 	callq	_ZdlPvm@PLT # Offset: 4067
.Ltmp212:
    00000fe8: 	leaq	DATAat0x23257(%rip), %rdx
    00000fef: 	movq	%r14, %rsi
    00000ff2: 	movq	%r12, %rdi
    00000ff5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4085
    00000ffa: 	callq	clock@PLT # Offset: 4090
    00000fff: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00001006: 	movq	%rax, start_time(%rip)
    0000100d: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001014: 	subq	$0x20, %rax
    00001018: 	cmpq	%rax, %r15
    0000101b: 	je	.Ltmp213 # Offset: 4123
    00001021: 	leaq	0x10(%r15), %rdi
    00001025: 	movq	0x108(%rsp), %r13
    0000102d: 	movq	%rdi, (%r15)
    00001030: 	movq	0x100(%rsp), %rax
    00001038: 	movq	%rax, %rcx
    0000103b: 	movq	%rax, (%rsp)
    0000103f: 	addq	%r13, %rcx
    00001042: 	je	.Ltmp214 # Offset: 4162
    00001044: 	testq	%rax, %rax
    00001047: 	je	.Ltmp215 # Offset: 4167
.Ltmp214:
    0000104d: 	movq	%r13, 0xb8(%rsp)
    00001055: 	cmpq	$0xf, %r13
    00001059: 	ja	.Ltmp216 # Offset: 4185
    0000105f: 	cmpq	$0x1, %r13
    00001063: 	jne	.Ltmp217 # Offset: 4195
    00001069: 	movq	(%rsp), %rax
    0000106d: 	movzbl	(%rax), %eax
    00001070: 	movb	%al, 0x10(%r15)
.Ltmp440:
    00001074: 	movq	%r13, 0x8(%r15)
    00001078: 	movb	$0x0, (%rdi,%r13)
    0000107d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001084: 	addq	$0x20, %rax
    00001088: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp401:
    0000108f: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001096: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000109d: 	je	.Ltmp218 # Offset: 4253
.Ltmp400:
    000010a3: 	movq	-0x20(%rax), %r13
    000010a7: 	callq	clock@PLT # Offset: 4263
    000010ac: 	pxor	%xmm0, %xmm0
    000010b0: 	movq	%rax, end_time(%rip)
    000010b7: 	movq	%r13, %rdi
    000010ba: 	subq	start_time(%rip), %rax
    000010c1: 	cvtsi2sd	%rax, %xmm0
    000010c6: 	divsd	DATAat0x23450(%rip), %xmm0
    000010ce: 	callq	_Z13record_resultdPKc # Offset: 4302
    000010d3: 	movq	0x100(%rsp), %rdi
    000010db: 	cmpq	0xa0(%rsp), %rdi
    000010e3: 	je	.Ltmp219 # Offset: 4323
    000010e5: 	movq	0x110(%rsp), %rax
    000010ed: 	leaq	0x1(%rax), %rsi
    000010f1: 	callq	_ZdlPvm@PLT # Offset: 4337
.Ltmp219:
    000010f6: 	leaq	DATAat0x2326c(%rip), %rdx
    000010fd: 	movq	%r14, %rsi
    00001100: 	movq	%r12, %rdi
    00001103: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4355
    00001108: 	callq	clock@PLT # Offset: 4360
    0000110d: 	movl	iterations(%rip), %edx
    00001113: 	movq	%rax, start_time(%rip)
    0000111a: 	testl	%edx, %edx
    0000111c: 	jle	.Ltmp220 # Offset: 4380
    00001122: 	pxor	%xmm6, %xmm6
    00001126: 	movq	DATAat0x234b0(%rip), %xmm5
    0000112e: 	movsd	DATAat0x23468(%rip), %xmm7
    00001136: 	xorl	%r13d, %r13d
    00001139: 	movsd	DATAat0x23470(%rip), %xmm3
    00001141: 	movsd	DATAat0x234d0(%rip), %xmm4
    00001149: 	movsd	%xmm6, 0x28(%rsp)
    0000114f: 	leaq	DATAat0x231d2(%rip), %r15
    00001156: 	movsd	DATAat0x23480(%rip), %xmm6
    0000115e: 	movaps	%xmm5, (%rsp)
    00001162: 	movsd	%xmm7, 0x30(%rsp)
    00001168: 	movsd	%xmm3, 0x40(%rsp)
    0000116e: 	movsd	%xmm4, 0x10(%rsp)
    00001174: 	movsd	%xmm6, 0x78(%rsp)
    0000117a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp224:
    00001180: 	movl	$0x1f40, %eax
    00001185: 	pxor	%xmm0, %xmm0
    00001189: 	nopl	(%rax) # Size: 7
.Ltmp221:
    00001190: 	addsd	0x10(%rsp), %xmm0
    00001196: 	subl	$0x1, %eax
    00001199: 	jne	.Ltmp221 # Offset: 4505
    0000119b: 	movapd	(%rsp), %xmm3
    000011a0: 	movapd	%xmm0, %xmm1
    000011a4: 	subsd	0x78(%rsp), %xmm1
    000011aa: 	andpd	%xmm0, %xmm3
    000011ae: 	comisd	0x30(%rsp), %xmm3
    000011b4: 	jbe	.Ltmp222 # Offset: 4532
    000011b6: 	divsd	%xmm0, %xmm1
.Ltmp222:
    000011ba: 	andpd	(%rsp), %xmm1
    000011bf: 	movsd	0x40(%rsp), %xmm6
    000011c5: 	comisd	%xmm1, %xmm6
    000011c9: 	jbe	.Ltmp223 # Offset: 4553
.Ltmp390:
    000011cf: 	addl	$0x1, %r13d
    000011d3: 	cmpl	%edx, %r13d
    000011d6: 	jl	.Ltmp224 # Offset: 4566
.Ltmp220:
    000011d8: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000011df: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    000011e6: 	subq	$0x20, %rax
    000011ea: 	cmpq	%rax, %r15
    000011ed: 	je	.Ltmp225 # Offset: 4589
    000011f3: 	leaq	0x10(%r15), %rdi
    000011f7: 	movq	0x108(%rsp), %r13
    000011ff: 	movq	%rdi, (%r15)
    00001202: 	movq	0x100(%rsp), %rax
    0000120a: 	movq	%rax, %rcx
    0000120d: 	movq	%rax, (%rsp)
    00001211: 	addq	%r13, %rcx
    00001214: 	je	.Ltmp226 # Offset: 4628
    00001216: 	testq	%rax, %rax
    00001219: 	je	.Ltmp227 # Offset: 4633
.Ltmp226:
    0000121f: 	movq	%r13, 0xb8(%rsp)
    00001227: 	cmpq	$0xf, %r13
    0000122b: 	ja	.Ltmp228 # Offset: 4651
    00001231: 	cmpq	$0x1, %r13
    00001235: 	jne	.Ltmp229 # Offset: 4661
    0000123b: 	movq	(%rsp), %rax
    0000123f: 	movzbl	(%rax), %eax
    00001242: 	movb	%al, 0x10(%r15)
.Ltmp465:
    00001246: 	movq	%r13, 0x8(%r15)
    0000124a: 	movb	$0x0, (%rdi,%r13)
    0000124f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001256: 	addq	$0x20, %rax
    0000125a: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp408:
    00001261: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001268: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000126f: 	je	.Ltmp230 # Offset: 4719
.Ltmp407:
    00001275: 	movq	-0x20(%rax), %r13
    00001279: 	callq	clock@PLT # Offset: 4729
    0000127e: 	pxor	%xmm0, %xmm0
    00001282: 	movq	%rax, end_time(%rip)
    00001289: 	movq	%r13, %rdi
    0000128c: 	subq	start_time(%rip), %rax
    00001293: 	cvtsi2sd	%rax, %xmm0
    00001298: 	divsd	DATAat0x23450(%rip), %xmm0
    000012a0: 	callq	_Z13record_resultdPKc # Offset: 4768
    000012a5: 	movq	0x100(%rsp), %rdi
    000012ad: 	cmpq	0xa0(%rsp), %rdi
    000012b5: 	je	.Ltmp231 # Offset: 4789
    000012b7: 	movq	0x110(%rsp), %rax
    000012bf: 	leaq	0x1(%rax), %rsi
    000012c3: 	callq	_ZdlPvm@PLT # Offset: 4803
.Ltmp231:
    000012c8: 	leaq	DATAat0x2328a(%rip), %rdx
    000012cf: 	movq	%r14, %rsi
    000012d2: 	movq	%r12, %rdi
    000012d5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4821
    000012da: 	callq	clock@PLT # Offset: 4826
    000012df: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    000012e6: 	movq	%rax, start_time(%rip)
    000012ed: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000012f4: 	subq	$0x20, %rax
    000012f8: 	cmpq	%rax, %r15
    000012fb: 	je	.Ltmp232 # Offset: 4859
    00001301: 	leaq	0x10(%r15), %rdi
    00001305: 	movq	0x108(%rsp), %r13
    0000130d: 	movq	%rdi, (%r15)
    00001310: 	movq	0x100(%rsp), %rax
    00001318: 	movq	%rax, %rcx
    0000131b: 	movq	%rax, (%rsp)
    0000131f: 	addq	%r13, %rcx
    00001322: 	je	.Ltmp233 # Offset: 4898
    00001324: 	testq	%rax, %rax
    00001327: 	je	.Ltmp234 # Offset: 4903
.Ltmp233:
    0000132d: 	movq	%r13, 0xb8(%rsp)
    00001335: 	cmpq	$0xf, %r13
    00001339: 	ja	.Ltmp235 # Offset: 4921
    0000133f: 	cmpq	$0x1, %r13
    00001343: 	jne	.Ltmp236 # Offset: 4931
    00001349: 	movq	(%rsp), %rax
    0000134d: 	movzbl	(%rax), %eax
    00001350: 	movb	%al, 0x10(%r15)
.Ltmp451:
    00001354: 	movq	%r13, 0x8(%r15)
    00001358: 	movb	$0x0, (%rdi,%r13)
    0000135d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001364: 	addq	$0x20, %rax
    00001368: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp406:
    0000136f: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001376: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000137d: 	je	.Ltmp237 # Offset: 4989
.Ltmp405:
    00001383: 	movq	-0x20(%rax), %r13
    00001387: 	callq	clock@PLT # Offset: 4999
    0000138c: 	pxor	%xmm0, %xmm0
    00001390: 	movq	%rax, end_time(%rip)
    00001397: 	movq	%r13, %rdi
    0000139a: 	subq	start_time(%rip), %rax
    000013a1: 	cvtsi2sd	%rax, %xmm0
    000013a6: 	divsd	DATAat0x23450(%rip), %xmm0
    000013ae: 	callq	_Z13record_resultdPKc # Offset: 5038
    000013b3: 	movq	0x100(%rsp), %rdi
    000013bb: 	cmpq	0xa0(%rsp), %rdi
    000013c3: 	je	.Ltmp238 # Offset: 5059
    000013c5: 	movq	0x110(%rsp), %rax
    000013cd: 	leaq	0x1(%rax), %rsi
    000013d1: 	callq	_ZdlPvm@PLT # Offset: 5073
.Ltmp238:
    000013d6: 	leaq	0xe0(%rsp), %rdi
    000013de: 	leaq	DATAat0x232a5(%rip), %rdx
    000013e5: 	movq	%r14, %rsi
    000013e8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5096
    000013ed: 	movl	iterations(%rip), %edx
    000013f3: 	xorl	%r8d, %r8d
    000013f6: 	xorl	%ecx, %ecx
    000013f8: 	movl	$0x1f40, %esi
    000013fd: 	movq	0xe0(%rsp), %rdi
    00001405: 	callq	_Z9summarizePKciiii # Offset: 5125
    0000140a: 	movslq	base_iterations(%rip), %rax
    00001411: 	movq	%r14, %rsi
    00001414: 	movq	%r12, %rdi
    00001417: 	movq	%rax, %rdx
    0000141a: 	imulq	$0x66666667, %rax, %rax
    00001421: 	sarl	$0x1f, %edx
    00001424: 	sarq	$0x22, %rax
    00001428: 	subl	%edx, %eax
    0000142a: 	leaq	DATAat0x232be(%rip), %rdx
    00001431: 	movl	%eax, iterations(%rip)
    00001437: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5175
    0000143c: 	callq	clock@PLT # Offset: 5180
    00001441: 	movl	iterations(%rip), %edx
    00001447: 	movq	%rax, start_time(%rip)
    0000144e: 	testl	%edx, %edx
    00001450: 	jle	.Ltmp239 # Offset: 5200
    00001456: 	pxor	%xmm5, %xmm5
    0000145a: 	movq	DATAat0x234b0(%rip), %xmm7
    00001462: 	movsd	DATAat0x23468(%rip), %xmm3
    0000146a: 	xorl	%r13d, %r13d
    0000146d: 	movsd	DATAat0x23470(%rip), %xmm4
    00001475: 	movsd	DATAat0x23480(%rip), %xmm6
    0000147d: 	movsd	%xmm5, 0x28(%rsp)
    00001483: 	leaq	DATAat0x231d2(%rip), %r15
    0000148a: 	movsd	DATAat0x234c0(%rip), %xmm5
    00001492: 	movaps	%xmm7, (%rsp)
    00001496: 	movsd	%xmm3, 0x30(%rsp)
    0000149c: 	movsd	%xmm4, 0x40(%rsp)
    000014a2: 	movsd	%xmm6, 0x78(%rsp)
    000014a8: 	movsd	%xmm5, 0x10(%rsp)
    000014ae: 	nop # Size: 2
.Ltmp243:
    000014b0: 	movq	%rbp, %rax
    000014b3: 	pxor	%xmm0, %xmm0
    000014b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp240:
    000014c0: 	movapd	DATAat0x234c0(%rip), %xmm2
    000014c8: 	addpd	(%rax), %xmm2
    000014cc: 	addq	$0x10, %rax
    000014d0: 	addsd	%xmm2, %xmm0
    000014d4: 	unpckhpd	%xmm2, %xmm2
    000014d8: 	addsd	%xmm2, %xmm0
    000014dc: 	cmpq	%rbx, %rax
    000014df: 	jne	.Ltmp240 # Offset: 5343
    000014e1: 	movsd	0x10(%rsp), %xmm2
    000014e7: 	movapd	(%rsp), %xmm4
    000014ec: 	movapd	%xmm0, %xmm1
    000014f0: 	addsd	init_value(%rip), %xmm2
    000014f8: 	mulsd	0x78(%rsp), %xmm2
    000014fe: 	andpd	%xmm0, %xmm4
    00001502: 	comisd	0x30(%rsp), %xmm4
    00001508: 	subsd	%xmm2, %xmm1
    0000150c: 	jbe	.Ltmp241 # Offset: 5388
    0000150e: 	divsd	%xmm0, %xmm1
.Ltmp241:
    00001512: 	andpd	(%rsp), %xmm1
    00001517: 	movsd	0x40(%rsp), %xmm3
    0000151d: 	comisd	%xmm1, %xmm3
    00001521: 	jbe	.Ltmp242 # Offset: 5409
.Ltmp389:
    00001527: 	addl	$0x1, %r13d
    0000152b: 	cmpl	%edx, %r13d
    0000152e: 	jl	.Ltmp243 # Offset: 5422
.Ltmp239:
    00001530: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001537: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    0000153e: 	subq	$0x20, %rax
    00001542: 	cmpq	%rax, %r15
    00001545: 	je	.Ltmp244 # Offset: 5445
    0000154b: 	leaq	0x10(%r15), %rdi
    0000154f: 	movq	0x108(%rsp), %r13
    00001557: 	movq	%rdi, (%r15)
    0000155a: 	movq	0x100(%rsp), %rax
    00001562: 	movq	%rax, %rcx
    00001565: 	movq	%rax, (%rsp)
    00001569: 	addq	%r13, %rcx
    0000156c: 	je	.Ltmp245 # Offset: 5484
    0000156e: 	testq	%rax, %rax
    00001571: 	je	.Ltmp246 # Offset: 5489
.Ltmp245:
    00001577: 	movq	%r13, 0xb8(%rsp)
    0000157f: 	cmpq	$0xf, %r13
    00001583: 	ja	.Ltmp247 # Offset: 5507
    00001589: 	cmpq	$0x1, %r13
    0000158d: 	jne	.Ltmp248 # Offset: 5517
    00001593: 	movq	(%rsp), %rax
    00001597: 	movzbl	(%rax), %eax
    0000159a: 	movb	%al, 0x10(%r15)
.Ltmp461:
    0000159e: 	movq	%r13, 0x8(%r15)
    000015a2: 	movb	$0x0, (%rdi,%r13)
    000015a7: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000015ae: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000015b5: 	addq	$0x20, %rax
    000015b9: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000015c0: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    000015c7: 	je	.Ltmp249 # Offset: 5575
.Ltmp399:
    000015cd: 	movq	-0x20(%rax), %r13
    000015d1: 	callq	clock@PLT # Offset: 5585
    000015d6: 	pxor	%xmm0, %xmm0
    000015da: 	movq	%rax, end_time(%rip)
    000015e1: 	movq	%r13, %rdi
    000015e4: 	subq	start_time(%rip), %rax
    000015eb: 	cvtsi2sd	%rax, %xmm0
    000015f0: 	divsd	DATAat0x23450(%rip), %xmm0
    000015f8: 	callq	_Z13record_resultdPKc # Offset: 5624
    000015fd: 	movq	0x100(%rsp), %rdi
    00001605: 	cmpq	0xa0(%rsp), %rdi
    0000160d: 	je	.Ltmp250 # Offset: 5645
    0000160f: 	movq	0x110(%rsp), %rax
    00001617: 	leaq	0x1(%rax), %rsi
    0000161b: 	callq	_ZdlPvm@PLT # Offset: 5659
.Ltmp250:
    00001620: 	leaq	DATAat0x232cc(%rip), %rdx
    00001627: 	movq	%r14, %rsi
    0000162a: 	movq	%r12, %rdi
    0000162d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5677
    00001632: 	callq	clock@PLT # Offset: 5682
    00001637: 	movl	iterations(%rip), %edx
    0000163d: 	movq	%rax, start_time(%rip)
    00001644: 	testl	%edx, %edx
    00001646: 	jle	.Ltmp251 # Offset: 5702
    0000164c: 	movsd	DATAat0x234e0(%rip), %xmm3
    00001654: 	pxor	%xmm7, %xmm7
    00001658: 	movq	DATAat0x234b0(%rip), %xmm4
    00001660: 	xorl	%r13d, %r13d
    00001663: 	movsd	DATAat0x23468(%rip), %xmm6
    0000166b: 	movsd	DATAat0x23470(%rip), %xmm5
    00001673: 	movsd	%xmm7, 0x28(%rsp)
    00001679: 	leaq	DATAat0x231d2(%rip), %r15
    00001680: 	movsd	DATAat0x234f0(%rip), %xmm7
    00001688: 	movsd	%xmm3, 0x70(%rsp)
    0000168e: 	movsd	DATAat0x234d0(%rip), %xmm3
    00001696: 	movaps	%xmm4, (%rsp)
    0000169a: 	movsd	DATAat0x23480(%rip), %xmm4
    000016a2: 	movsd	%xmm6, 0x30(%rsp)
    000016a8: 	movapd	DATAat0x234e0(%rip), %xmm6
    000016b0: 	movsd	%xmm5, 0x40(%rsp)
    000016b6: 	movapd	DATAat0x234f0(%rip), %xmm5
    000016be: 	movsd	%xmm7, 0x90(%rsp)
    000016c7: 	movapd	DATAat0x23500(%rip), %xmm7
    000016cf: 	movsd	%xmm3, 0x10(%rsp)
    000016d5: 	movsd	DATAat0x23500(%rip), %xmm3
    000016dd: 	movsd	%xmm4, 0x78(%rsp)
    000016e3: 	movaps	%xmm6, 0x60(%rsp)
    000016e8: 	movaps	%xmm5, 0x50(%rsp)
    000016ed: 	movaps	%xmm7, 0x80(%rsp)
    000016f5: 	movsd	%xmm3, 0x98(%rsp)
    000016fe: 	nop # Size: 2
.Ltmp255:
    00001700: 	movq	%rbp, %rax
    00001703: 	pxor	%xmm1, %xmm1
    00001707: 	nopw	(%rax,%rax) # Size: 9
.Ltmp252:
    00001710: 	movapd	DATAat0x234d0(%rip), %xmm0
    00001718: 	addpd	(%rax), %xmm0
    0000171c: 	addq	$0x10, %rax
    00001720: 	addpd	0x60(%rsp), %xmm0
    00001726: 	addpd	0x50(%rsp), %xmm0
    0000172c: 	addpd	0x80(%rsp), %xmm0
    00001735: 	addsd	%xmm0, %xmm1
    00001739: 	unpckhpd	%xmm0, %xmm0
    0000173d: 	addsd	%xmm0, %xmm1
    00001741: 	cmpq	%rax, %rbx
    00001744: 	jne	.Ltmp252 # Offset: 5956
    00001746: 	movsd	0x10(%rsp), %xmm0
    0000174c: 	movapd	(%rsp), %xmm5
    00001751: 	movapd	%xmm1, %xmm2
    00001755: 	addsd	init_value(%rip), %xmm0
    0000175d: 	addsd	0x70(%rsp), %xmm0
    00001763: 	addsd	0x90(%rsp), %xmm0
    0000176c: 	andpd	%xmm1, %xmm5
    00001770: 	addsd	0x98(%rsp), %xmm0
    00001779: 	mulsd	0x78(%rsp), %xmm0
    0000177f: 	comisd	0x30(%rsp), %xmm5
    00001785: 	subsd	%xmm0, %xmm2
    00001789: 	jbe	.Ltmp253 # Offset: 6025
    0000178b: 	divsd	%xmm1, %xmm2
.Ltmp253:
    0000178f: 	andpd	(%rsp), %xmm2
    00001794: 	movsd	0x40(%rsp), %xmm4
    0000179a: 	comisd	%xmm2, %xmm4
    0000179e: 	jbe	.Ltmp254 # Offset: 6046
.Ltmp388:
    000017a4: 	addl	$0x1, %r13d
    000017a8: 	cmpl	%edx, %r13d
    000017ab: 	jl	.Ltmp255 # Offset: 6059
.Ltmp251:
    000017b1: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000017b8: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    000017bf: 	subq	$0x20, %rax
    000017c3: 	cmpq	%rax, %r15
    000017c6: 	je	.Ltmp256 # Offset: 6086
    000017cc: 	leaq	0x10(%r15), %rdi
    000017d0: 	movq	0x108(%rsp), %r13
    000017d8: 	movq	%rdi, (%r15)
    000017db: 	movq	0x100(%rsp), %rax
    000017e3: 	movq	%rax, %rcx
    000017e6: 	movq	%rax, (%rsp)
    000017ea: 	addq	%r13, %rcx
    000017ed: 	je	.Ltmp257 # Offset: 6125
    000017ef: 	testq	%rax, %rax
    000017f2: 	je	.Ltmp258 # Offset: 6130
.Ltmp257:
    000017f8: 	movq	%r13, 0xb8(%rsp)
    00001800: 	cmpq	$0xf, %r13
    00001804: 	ja	.Ltmp259 # Offset: 6148
    0000180a: 	cmpq	$0x1, %r13
    0000180e: 	jne	.Ltmp260 # Offset: 6158
    00001814: 	movq	(%rsp), %rax
    00001818: 	movzbl	(%rax), %eax
    0000181b: 	movb	%al, 0x10(%r15)
.Ltmp468:
    0000181f: 	movq	%r13, 0x8(%r15)
    00001823: 	movb	$0x0, (%rdi,%r13)
    00001828: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000182f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001836: 	addq	$0x20, %rax
    0000183a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001841: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00001848: 	je	.Ltmp261 # Offset: 6216
.Ltmp404:
    0000184e: 	movq	-0x20(%rax), %r13
    00001852: 	callq	clock@PLT # Offset: 6226
    00001857: 	pxor	%xmm0, %xmm0
    0000185b: 	movq	%rax, end_time(%rip)
    00001862: 	movq	%r13, %rdi
    00001865: 	subq	start_time(%rip), %rax
    0000186c: 	cvtsi2sd	%rax, %xmm0
    00001871: 	divsd	DATAat0x23450(%rip), %xmm0
    00001879: 	callq	_Z13record_resultdPKc # Offset: 6265
    0000187e: 	movq	0x100(%rsp), %rdi
    00001886: 	cmpq	0xa0(%rsp), %rdi
    0000188e: 	je	.Ltmp262 # Offset: 6286
    00001890: 	movq	0x110(%rsp), %rax
    00001898: 	leaq	0x1(%rax), %rsi
    0000189c: 	callq	_ZdlPvm@PLT # Offset: 6300
.Ltmp262:
    000018a1: 	leaq	DATAat0x232e4(%rip), %rdx
    000018a8: 	movq	%r14, %rsi
    000018ab: 	movq	%r12, %rdi
    000018ae: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6318
    000018b3: 	callq	clock@PLT # Offset: 6323
    000018b8: 	movl	iterations(%rip), %edx
    000018be: 	movq	%rax, start_time(%rip)
    000018c5: 	testl	%edx, %edx
    000018c7: 	jle	.Ltmp263 # Offset: 6343
    000018cd: 	pxor	%xmm4, %xmm4
    000018d1: 	movq	DATAat0x234b0(%rip), %xmm6
    000018d9: 	movsd	DATAat0x23468(%rip), %xmm5
    000018e1: 	xorl	%r13d, %r13d
    000018e4: 	movsd	DATAat0x23470(%rip), %xmm7
    000018ec: 	movsd	DATAat0x23480(%rip), %xmm3
    000018f4: 	movsd	%xmm4, 0x28(%rsp)
    000018fa: 	leaq	DATAat0x231d2(%rip), %r15
    00001901: 	movsd	DATAat0x234c0(%rip), %xmm4
    00001909: 	movaps	%xmm6, (%rsp)
    0000190d: 	movsd	%xmm5, 0x30(%rsp)
    00001913: 	movsd	%xmm7, 0x40(%rsp)
    00001919: 	movsd	%xmm3, 0x78(%rsp)
    0000191f: 	movsd	%xmm4, 0x10(%rsp)
    00001925: 	nopl	(%rax) # Size: 3
.Ltmp267:
    00001928: 	movq	%rbp, %rax
    0000192b: 	pxor	%xmm0, %xmm0
    0000192f: 	nop # Size: 1
.Ltmp264:
    00001930: 	movapd	DATAat0x23510(%rip), %xmm2
    00001938: 	addpd	(%rax), %xmm2
    0000193c: 	addq	$0x10, %rax
    00001940: 	addsd	%xmm2, %xmm0
    00001944: 	unpckhpd	%xmm2, %xmm2
    00001948: 	addsd	%xmm2, %xmm0
    0000194c: 	cmpq	%rbx, %rax
    0000194f: 	jne	.Ltmp264 # Offset: 6479
    00001951: 	movsd	init_value(%rip), %xmm1
    00001959: 	movapd	(%rsp), %xmm6
    0000195e: 	movapd	%xmm0, %xmm2
    00001962: 	subsd	0x10(%rsp), %xmm1
    00001968: 	mulsd	0x78(%rsp), %xmm1
    0000196e: 	andpd	%xmm0, %xmm6
    00001972: 	comisd	0x30(%rsp), %xmm6
    00001978: 	subsd	%xmm1, %xmm2
    0000197c: 	jbe	.Ltmp265 # Offset: 6524
    0000197e: 	divsd	%xmm0, %xmm2
.Ltmp265:
    00001982: 	andpd	(%rsp), %xmm2
    00001987: 	movsd	0x40(%rsp), %xmm4
    0000198d: 	comisd	%xmm2, %xmm4
    00001991: 	jbe	.Ltmp266 # Offset: 6545
.Ltmp383:
    00001997: 	addl	$0x1, %r13d
    0000199b: 	cmpl	%edx, %r13d
    0000199e: 	jl	.Ltmp267 # Offset: 6558
.Ltmp263:
    000019a0: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000019a7: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    000019ae: 	subq	$0x20, %rax
    000019b2: 	cmpq	%rax, %r15
    000019b5: 	je	.Ltmp268 # Offset: 6581
    000019bb: 	leaq	0x10(%r15), %rdi
    000019bf: 	movq	0x108(%rsp), %r13
    000019c7: 	movq	%rdi, (%r15)
    000019ca: 	movq	0x100(%rsp), %rax
    000019d2: 	movq	%rax, %rcx
    000019d5: 	movq	%rax, (%rsp)
    000019d9: 	addq	%r13, %rcx
    000019dc: 	je	.Ltmp269 # Offset: 6620
    000019de: 	testq	%rax, %rax
    000019e1: 	je	.Ltmp270 # Offset: 6625
.Ltmp269:
    000019e7: 	movq	%r13, 0xb8(%rsp)
    000019ef: 	cmpq	$0xf, %r13
    000019f3: 	ja	.Ltmp271 # Offset: 6643
    000019f9: 	cmpq	$0x1, %r13
    000019fd: 	jne	.Ltmp272 # Offset: 6653
    00001a03: 	movq	(%rsp), %rax
    00001a07: 	movzbl	(%rax), %eax
    00001a0a: 	movb	%al, 0x10(%r15)
.Ltmp456:
    00001a0e: 	movq	%r13, 0x8(%r15)
    00001a12: 	movb	$0x0, (%rdi,%r13)
    00001a17: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001a1e: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001a25: 	addq	$0x20, %rax
    00001a29: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001a30: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00001a37: 	je	.Ltmp273 # Offset: 6711
.Ltmp413:
    00001a3d: 	movq	-0x20(%rax), %r13
    00001a41: 	callq	clock@PLT # Offset: 6721
    00001a46: 	pxor	%xmm0, %xmm0
    00001a4a: 	movq	%rax, end_time(%rip)
    00001a51: 	movq	%r13, %rdi
    00001a54: 	subq	start_time(%rip), %rax
    00001a5b: 	cvtsi2sd	%rax, %xmm0
    00001a60: 	divsd	DATAat0x23450(%rip), %xmm0
    00001a68: 	callq	_Z13record_resultdPKc # Offset: 6760
    00001a6d: 	movq	0x100(%rsp), %rdi
    00001a75: 	cmpq	0xa0(%rsp), %rdi
    00001a7d: 	je	.Ltmp274 # Offset: 6781
    00001a7f: 	movq	0x110(%rsp), %rax
    00001a87: 	leaq	0x1(%rax), %rsi
    00001a8b: 	callq	_ZdlPvm@PLT # Offset: 6795
.Ltmp274:
    00001a90: 	leaq	DATAat0x232f7(%rip), %rdx
    00001a97: 	movq	%r14, %rsi
    00001a9a: 	movq	%r12, %rdi
    00001a9d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6813
    00001aa2: 	callq	clock@PLT # Offset: 6818
    00001aa7: 	movl	iterations(%rip), %edx
    00001aad: 	movq	%rax, start_time(%rip)
    00001ab4: 	testl	%edx, %edx
    00001ab6: 	jle	.Ltmp275 # Offset: 6838
    00001abc: 	movsd	DATAat0x234e0(%rip), %xmm5
    00001ac4: 	movq	DATAat0x234b0(%rip), %xmm7
    00001acc: 	pxor	%xmm6, %xmm6
    00001ad0: 	xorl	%r13d, %r13d
    00001ad3: 	movsd	DATAat0x23468(%rip), %xmm3
    00001adb: 	movsd	DATAat0x23470(%rip), %xmm4
    00001ae3: 	movsd	%xmm6, 0x28(%rsp)
    00001ae9: 	leaq	DATAat0x231d2(%rip), %r15
    00001af0: 	movsd	DATAat0x234f0(%rip), %xmm6
    00001af8: 	movsd	%xmm5, 0x70(%rsp)
    00001afe: 	movsd	DATAat0x234d0(%rip), %xmm5
    00001b06: 	movaps	%xmm7, (%rsp)
    00001b0a: 	movsd	DATAat0x23480(%rip), %xmm7
    00001b12: 	movsd	%xmm3, 0x30(%rsp)
    00001b18: 	movsd	DATAat0x23500(%rip), %xmm3
    00001b20: 	movsd	%xmm4, 0x40(%rsp)
    00001b26: 	movsd	%xmm6, 0x90(%rsp)
    00001b2f: 	movsd	%xmm5, 0x10(%rsp)
    00001b35: 	movsd	%xmm7, 0x78(%rsp)
    00001b3b: 	movsd	%xmm3, 0x98(%rsp)
    00001b44: 	nopl	(%rax) # Size: 4
.Ltmp279:
    00001b48: 	movq	%rbp, %rax
    00001b4b: 	pxor	%xmm1, %xmm1
    00001b4f: 	nop # Size: 1
.Ltmp276:
    00001b50: 	movapd	DATAat0x23520(%rip), %xmm0
    00001b58: 	addpd	(%rax), %xmm0
    00001b5c: 	addq	$0x10, %rax
    00001b60: 	addpd	DATAat0x23530(%rip), %xmm0
    00001b68: 	addpd	DATAat0x23540(%rip), %xmm0
    00001b70: 	addpd	DATAat0x23550(%rip), %xmm0
    00001b78: 	addsd	%xmm0, %xmm1
    00001b7c: 	unpckhpd	%xmm0, %xmm0
    00001b80: 	addsd	%xmm0, %xmm1
    00001b84: 	cmpq	%rax, %rbx
    00001b87: 	jne	.Ltmp276 # Offset: 7047
    00001b89: 	movsd	init_value(%rip), %xmm0
    00001b91: 	movapd	(%rsp), %xmm7
    00001b96: 	movapd	%xmm1, %xmm2
    00001b9a: 	subsd	0x10(%rsp), %xmm0
    00001ba0: 	subsd	0x70(%rsp), %xmm0
    00001ba6: 	subsd	0x90(%rsp), %xmm0
    00001baf: 	andpd	%xmm1, %xmm7
    00001bb3: 	subsd	0x98(%rsp), %xmm0
    00001bbc: 	mulsd	0x78(%rsp), %xmm0
    00001bc2: 	comisd	0x30(%rsp), %xmm7
    00001bc8: 	subsd	%xmm0, %xmm2
    00001bcc: 	jbe	.Ltmp277 # Offset: 7116
    00001bce: 	divsd	%xmm1, %xmm2
.Ltmp277:
    00001bd2: 	andpd	(%rsp), %xmm2
    00001bd7: 	movsd	0x40(%rsp), %xmm3
    00001bdd: 	comisd	%xmm2, %xmm3
    00001be1: 	jbe	.Ltmp278 # Offset: 7137
.Ltmp382:
    00001be7: 	addl	$0x1, %r13d
    00001beb: 	cmpl	%edx, %r13d
    00001bee: 	jl	.Ltmp279 # Offset: 7150
.Ltmp275:
    00001bf4: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001bfb: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00001c02: 	subq	$0x20, %rax
    00001c06: 	cmpq	%rax, %r15
    00001c09: 	je	.Ltmp280 # Offset: 7177
    00001c0f: 	leaq	0x10(%r15), %rdi
    00001c13: 	movq	0x108(%rsp), %r13
    00001c1b: 	movq	%rdi, (%r15)
    00001c1e: 	movq	0x100(%rsp), %rax
    00001c26: 	movq	%rax, %rcx
    00001c29: 	movq	%rax, (%rsp)
    00001c2d: 	addq	%r13, %rcx
    00001c30: 	je	.Ltmp281 # Offset: 7216
    00001c32: 	testq	%rax, %rax
    00001c35: 	je	.Ltmp282 # Offset: 7221
.Ltmp281:
    00001c3b: 	movq	%r13, 0xb8(%rsp)
    00001c43: 	cmpq	$0xf, %r13
    00001c47: 	ja	.Ltmp283 # Offset: 7239
    00001c4d: 	cmpq	$0x1, %r13
    00001c51: 	jne	.Ltmp284 # Offset: 7249
    00001c57: 	movq	(%rsp), %rax
    00001c5b: 	movzbl	(%rax), %eax
    00001c5e: 	movb	%al, 0x10(%r15)
.Ltmp438:
    00001c62: 	movq	%r13, 0x8(%r15)
    00001c66: 	movb	$0x0, (%rdi,%r13)
    00001c6b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001c72: 	addq	$0x20, %rax
    00001c76: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp430:
    00001c7d: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001c84: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001c8b: 	je	.Ltmp285 # Offset: 7307
.Ltmp429:
    00001c91: 	movq	-0x20(%rax), %r13
    00001c95: 	callq	clock@PLT # Offset: 7317
    00001c9a: 	pxor	%xmm0, %xmm0
    00001c9e: 	movq	%rax, end_time(%rip)
    00001ca5: 	movq	%r13, %rdi
    00001ca8: 	subq	start_time(%rip), %rax
    00001caf: 	cvtsi2sd	%rax, %xmm0
    00001cb4: 	divsd	DATAat0x23450(%rip), %xmm0
    00001cbc: 	callq	_Z13record_resultdPKc # Offset: 7356
    00001cc1: 	movq	0x100(%rsp), %rdi
    00001cc9: 	cmpq	0xa0(%rsp), %rdi
    00001cd1: 	je	.Ltmp286 # Offset: 7377
    00001cd3: 	movq	0x110(%rsp), %rax
    00001cdb: 	leaq	0x1(%rax), %rsi
    00001cdf: 	callq	_ZdlPvm@PLT # Offset: 7391
.Ltmp286:
    00001ce4: 	leaq	DATAat0x23314(%rip), %rdx
    00001ceb: 	movq	%r14, %rsi
    00001cee: 	movq	%r12, %rdi
    00001cf1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7409
    00001cf6: 	callq	clock@PLT # Offset: 7414
    00001cfb: 	movl	iterations(%rip), %edx
    00001d01: 	movq	%rax, start_time(%rip)
    00001d08: 	testl	%edx, %edx
    00001d0a: 	jle	.Ltmp287 # Offset: 7434
    00001d10: 	movq	DATAat0x234b0(%rip), %xmm6
    00001d18: 	pxor	%xmm4, %xmm4
    00001d1c: 	movsd	DATAat0x23468(%rip), %xmm5
    00001d24: 	xorl	%r13d, %r13d
    00001d27: 	movsd	DATAat0x23470(%rip), %xmm7
    00001d2f: 	movsd	DATAat0x23480(%rip), %xmm3
    00001d37: 	movsd	%xmm4, 0x28(%rsp)
    00001d3d: 	leaq	DATAat0x231d2(%rip), %r15
    00001d44: 	movapd	DATAat0x23560(%rip), %xmm4
    00001d4c: 	movaps	%xmm6, (%rsp)
    00001d50: 	movsd	DATAat0x23560(%rip), %xmm6
    00001d58: 	movsd	%xmm5, 0x30(%rsp)
    00001d5e: 	movsd	%xmm7, 0x40(%rsp)
    00001d64: 	movsd	%xmm3, 0x78(%rsp)
    00001d6a: 	movaps	%xmm4, 0x10(%rsp)
    00001d6f: 	movsd	%xmm6, 0x70(%rsp)
    00001d75: 	nopl	(%rax) # Size: 3
.Ltmp291:
    00001d78: 	movq	%rbp, %rax
    00001d7b: 	pxor	%xmm0, %xmm0
    00001d7f: 	nop # Size: 1
.Ltmp288:
    00001d80: 	movapd	0x10(%rsp), %xmm2
    00001d86: 	mulpd	(%rax), %xmm2
    00001d8a: 	addq	$0x10, %rax
    00001d8e: 	addsd	%xmm2, %xmm0
    00001d92: 	unpckhpd	%xmm2, %xmm2
    00001d96: 	addsd	%xmm2, %xmm0
    00001d9a: 	cmpq	%rbx, %rax
    00001d9d: 	jne	.Ltmp288 # Offset: 7581
    00001d9f: 	movsd	0x70(%rsp), %xmm2
    00001da5: 	movapd	(%rsp), %xmm3
    00001daa: 	movapd	%xmm0, %xmm1
    00001dae: 	mulsd	init_value(%rip), %xmm2
    00001db6: 	mulsd	0x78(%rsp), %xmm2
    00001dbc: 	andpd	%xmm0, %xmm3
    00001dc0: 	comisd	0x30(%rsp), %xmm3
    00001dc6: 	subsd	%xmm2, %xmm1
    00001dca: 	jbe	.Ltmp289 # Offset: 7626
    00001dcc: 	divsd	%xmm0, %xmm1
.Ltmp289:
    00001dd0: 	andpd	(%rsp), %xmm1
    00001dd5: 	movsd	0x40(%rsp), %xmm7
    00001ddb: 	comisd	%xmm1, %xmm7
    00001ddf: 	jbe	.Ltmp290 # Offset: 7647
.Ltmp381:
    00001de5: 	addl	$0x1, %r13d
    00001de9: 	cmpl	%edx, %r13d
    00001dec: 	jl	.Ltmp291 # Offset: 7660
.Ltmp287:
    00001dee: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001df5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00001dfc: 	subq	$0x20, %rax
    00001e00: 	cmpq	%rax, %r15
    00001e03: 	je	.Ltmp292 # Offset: 7683
    00001e09: 	leaq	0x10(%r15), %rdi
    00001e0d: 	movq	0x108(%rsp), %r13
    00001e15: 	movq	%rdi, (%r15)
    00001e18: 	movq	0x100(%rsp), %rax
    00001e20: 	movq	%rax, %rcx
    00001e23: 	movq	%rax, (%rsp)
    00001e27: 	addq	%r13, %rcx
    00001e2a: 	je	.Ltmp293 # Offset: 7722
    00001e2c: 	testq	%rax, %rax
    00001e2f: 	je	.Ltmp294 # Offset: 7727
.Ltmp293:
    00001e35: 	movq	%r13, 0xb8(%rsp)
    00001e3d: 	cmpq	$0xf, %r13
    00001e41: 	ja	.Ltmp295 # Offset: 7745
    00001e47: 	cmpq	$0x1, %r13
    00001e4b: 	jne	.Ltmp296 # Offset: 7755
    00001e51: 	movq	(%rsp), %rax
    00001e55: 	movzbl	(%rax), %eax
    00001e58: 	movb	%al, 0x10(%r15)
.Ltmp436:
    00001e5c: 	movq	%r13, 0x8(%r15)
    00001e60: 	movb	$0x0, (%rdi,%r13)
    00001e65: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001e6c: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001e73: 	addq	$0x20, %rax
    00001e77: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001e7e: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00001e85: 	je	.Ltmp297 # Offset: 7813
.Ltmp415:
    00001e8b: 	movq	-0x20(%rax), %r13
    00001e8f: 	callq	clock@PLT # Offset: 7823
    00001e94: 	pxor	%xmm0, %xmm0
    00001e98: 	movq	%rax, end_time(%rip)
    00001e9f: 	movq	%r13, %rdi
    00001ea2: 	subq	start_time(%rip), %rax
    00001ea9: 	cvtsi2sd	%rax, %xmm0
    00001eae: 	divsd	DATAat0x23450(%rip), %xmm0
    00001eb6: 	callq	_Z13record_resultdPKc # Offset: 7862
    00001ebb: 	movq	0x100(%rsp), %rdi
    00001ec3: 	cmpq	0xa0(%rsp), %rdi
    00001ecb: 	je	.Ltmp298 # Offset: 7883
    00001ecd: 	movq	0x110(%rsp), %rax
    00001ed5: 	leaq	0x1(%rax), %rsi
    00001ed9: 	callq	_ZdlPvm@PLT # Offset: 7897
.Ltmp298:
    00001ede: 	leaq	DATAat0x23327(%rip), %rdx
    00001ee5: 	movq	%r14, %rsi
    00001ee8: 	movq	%r12, %rdi
    00001eeb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7915
    00001ef0: 	callq	clock@PLT # Offset: 7920
    00001ef5: 	movl	iterations(%rip), %edx
    00001efb: 	movq	%rax, start_time(%rip)
    00001f02: 	testl	%edx, %edx
    00001f04: 	jle	.Ltmp299 # Offset: 7940
    00001f0a: 	pxor	%xmm5, %xmm5
    00001f0e: 	movq	DATAat0x234b0(%rip), %xmm7
    00001f16: 	movsd	DATAat0x23468(%rip), %xmm3
    00001f1e: 	xorl	%r13d, %r13d
    00001f21: 	movsd	DATAat0x23470(%rip), %xmm4
    00001f29: 	movsd	DATAat0x234f0(%rip), %xmm6
    00001f31: 	movsd	%xmm5, 0x28(%rsp)
    00001f37: 	leaq	DATAat0x231d2(%rip), %r15
    00001f3e: 	movsd	DATAat0x23480(%rip), %xmm5
    00001f46: 	movaps	%xmm7, (%rsp)
    00001f4a: 	movapd	DATAat0x234f0(%rip), %xmm7
    00001f52: 	movsd	%xmm3, 0x30(%rsp)
    00001f58: 	movapd	DATAat0x23500(%rip), %xmm3
    00001f60: 	movsd	%xmm4, 0x40(%rsp)
    00001f66: 	movsd	DATAat0x23500(%rip), %xmm4
    00001f6e: 	movsd	%xmm6, 0x90(%rsp)
    00001f77: 	movapd	DATAat0x23570(%rip), %xmm6
    00001f7f: 	movsd	%xmm5, 0x78(%rsp)
    00001f85: 	movsd	DATAat0x23570(%rip), %xmm5
    00001f8d: 	movaps	%xmm7, 0x50(%rsp)
    00001f92: 	movaps	%xmm3, 0x80(%rsp)
    00001f9a: 	movsd	%xmm4, 0x98(%rsp)
    00001fa3: 	movaps	%xmm6, 0x10(%rsp)
    00001fa8: 	movsd	%xmm5, 0x70(%rsp)
    00001fae: 	nop # Size: 2
.Ltmp303:
    00001fb0: 	movq	%rbp, %rax
    00001fb3: 	pxor	%xmm1, %xmm1
    00001fb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp300:
    00001fc0: 	movapd	(%rax), %xmm0
    00001fc4: 	addq	$0x10, %rax
    00001fc8: 	addpd	%xmm0, %xmm0
    00001fcc: 	mulpd	0x50(%rsp), %xmm0
    00001fd2: 	mulpd	0x80(%rsp), %xmm0
    00001fdb: 	mulpd	0x10(%rsp), %xmm0
    00001fe1: 	addsd	%xmm0, %xmm1
    00001fe5: 	unpckhpd	%xmm0, %xmm0
    00001fe9: 	addsd	%xmm0, %xmm1
    00001fed: 	cmpq	%rbx, %rax
    00001ff0: 	jne	.Ltmp300 # Offset: 8176
    00001ff2: 	movsd	init_value(%rip), %xmm0
    00001ffa: 	movapd	(%rsp), %xmm4
    00001fff: 	movapd	%xmm1, %xmm2
    00002003: 	addsd	%xmm0, %xmm0
    00002007: 	andpd	%xmm1, %xmm4
    0000200b: 	mulsd	0x90(%rsp), %xmm0
    00002014: 	comisd	0x30(%rsp), %xmm4
    0000201a: 	mulsd	0x98(%rsp), %xmm0
    00002023: 	mulsd	0x70(%rsp), %xmm0
    00002029: 	mulsd	0x78(%rsp), %xmm0
    0000202f: 	subsd	%xmm0, %xmm2
    00002033: 	jbe	.Ltmp301 # Offset: 8243
    00002035: 	divsd	%xmm1, %xmm2
.Ltmp301:
    00002039: 	andpd	(%rsp), %xmm2
    0000203e: 	movsd	0x40(%rsp), %xmm6
    00002044: 	comisd	%xmm2, %xmm6
    00002048: 	jbe	.Ltmp302 # Offset: 8264
.Ltmp380:
    0000204e: 	addl	$0x1, %r13d
    00002052: 	cmpl	%edx, %r13d
    00002055: 	jl	.Ltmp303 # Offset: 8277
.Ltmp299:
    0000205b: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00002062: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00002069: 	subq	$0x20, %rax
    0000206d: 	cmpq	%rax, %r15
    00002070: 	je	.Ltmp304 # Offset: 8304
    00002076: 	leaq	0x10(%r15), %rdi
    0000207a: 	movq	0x108(%rsp), %r13
    00002082: 	movq	%rdi, (%r15)
    00002085: 	movq	0x100(%rsp), %rax
    0000208d: 	movq	%rax, %rcx
    00002090: 	movq	%rax, (%rsp)
    00002094: 	addq	%r13, %rcx
    00002097: 	je	.Ltmp305 # Offset: 8343
    00002099: 	testq	%rax, %rax
    0000209c: 	je	.Ltmp306 # Offset: 8348
.Ltmp305:
    000020a2: 	movq	%r13, 0xb8(%rsp)
    000020aa: 	cmpq	$0xf, %r13
    000020ae: 	ja	.Ltmp307 # Offset: 8366
    000020b4: 	cmpq	$0x1, %r13
    000020b8: 	jne	.Ltmp308 # Offset: 8376
    000020be: 	movq	(%rsp), %rax
    000020c2: 	movzbl	(%rax), %eax
    000020c5: 	movb	%al, 0x10(%r15)
.Ltmp444:
    000020c9: 	movq	%r13, 0x8(%r15)
    000020cd: 	movb	$0x0, (%rdi,%r13)
    000020d2: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000020d9: 	addq	$0x20, %rax
    000020dd: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp425:
    000020e4: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000020eb: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000020f2: 	je	.Ltmp309 # Offset: 8434
.Ltmp409:
    000020f8: 	movq	-0x20(%rax), %r13
    000020fc: 	callq	clock@PLT # Offset: 8444
    00002101: 	pxor	%xmm0, %xmm0
    00002105: 	movq	%rax, end_time(%rip)
    0000210c: 	movq	%r13, %rdi
    0000210f: 	subq	start_time(%rip), %rax
    00002116: 	cvtsi2sd	%rax, %xmm0
    0000211b: 	divsd	DATAat0x23450(%rip), %xmm0
    00002123: 	callq	_Z13record_resultdPKc # Offset: 8483
    00002128: 	movq	0x100(%rsp), %rdi
    00002130: 	cmpq	0xa0(%rsp), %rdi
    00002138: 	je	.Ltmp310 # Offset: 8504
    0000213a: 	movq	0x110(%rsp), %rax
    00002142: 	leaq	0x1(%rax), %rsi
    00002146: 	callq	_ZdlPvm@PLT # Offset: 8518
.Ltmp310:
    0000214b: 	leaq	DATAat0x23345(%rip), %rdx
    00002152: 	movq	%r14, %rsi
    00002155: 	movq	%r12, %rdi
    00002158: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8536
    0000215d: 	callq	clock@PLT # Offset: 8541
    00002162: 	movl	iterations(%rip), %edx
    00002168: 	movq	%rax, start_time(%rip)
    0000216f: 	testl	%edx, %edx
    00002171: 	jle	.Ltmp311 # Offset: 8561
    00002177: 	movq	DATAat0x234b0(%rip), %xmm3
    0000217f: 	pxor	%xmm7, %xmm7
    00002183: 	movsd	DATAat0x23468(%rip), %xmm4
    0000218b: 	xorl	%r13d, %r13d
    0000218e: 	movsd	DATAat0x23470(%rip), %xmm6
    00002196: 	movsd	DATAat0x23480(%rip), %xmm5
    0000219e: 	movsd	%xmm7, 0x28(%rsp)
    000021a4: 	leaq	DATAat0x231d2(%rip), %r15
    000021ab: 	movapd	DATAat0x23560(%rip), %xmm7
    000021b3: 	movaps	%xmm3, (%rsp)
    000021b7: 	movsd	DATAat0x23560(%rip), %xmm3
    000021bf: 	movsd	%xmm4, 0x30(%rsp)
    000021c5: 	movsd	%xmm6, 0x40(%rsp)
    000021cb: 	movsd	%xmm5, 0x78(%rsp)
    000021d1: 	movaps	%xmm7, 0x10(%rsp)
    000021d6: 	movsd	%xmm3, 0x70(%rsp)
    000021dc: 	nopl	(%rax) # Size: 4
.Ltmp315:
    000021e0: 	movq	%rbp, %rax
    000021e3: 	pxor	%xmm0, %xmm0
    000021e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp312:
    000021f0: 	movapd	0x10(%rsp), %xmm2
    000021f6: 	addpd	(%rax), %xmm2
    000021fa: 	addq	$0x10, %rax
    000021fe: 	addsd	%xmm2, %xmm0
    00002202: 	unpckhpd	%xmm2, %xmm2
    00002206: 	addsd	%xmm2, %xmm0
    0000220a: 	cmpq	%rbx, %rax
    0000220d: 	jne	.Ltmp312 # Offset: 8717
    0000220f: 	movsd	0x70(%rsp), %xmm2
    00002215: 	movapd	(%rsp), %xmm5
    0000221a: 	movapd	%xmm0, %xmm1
    0000221e: 	addsd	init_value(%rip), %xmm2
    00002226: 	mulsd	0x78(%rsp), %xmm2
    0000222c: 	andpd	%xmm0, %xmm5
    00002230: 	comisd	0x30(%rsp), %xmm5
    00002236: 	subsd	%xmm2, %xmm1
    0000223a: 	jbe	.Ltmp313 # Offset: 8762
    0000223c: 	divsd	%xmm0, %xmm1
.Ltmp313:
    00002240: 	andpd	(%rsp), %xmm1
    00002245: 	movsd	0x40(%rsp), %xmm3
    0000224b: 	comisd	%xmm1, %xmm3
    0000224f: 	jbe	.Ltmp314 # Offset: 8783
.Ltmp395:
    00002255: 	addl	$0x1, %r13d
    00002259: 	cmpl	%edx, %r13d
    0000225c: 	jl	.Ltmp315 # Offset: 8796
.Ltmp311:
    0000225e: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00002265: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    0000226c: 	subq	$0x20, %rax
    00002270: 	cmpq	%rax, %r15
    00002273: 	je	.Ltmp316 # Offset: 8819
    00002279: 	leaq	0x10(%r15), %rdi
    0000227d: 	movq	0x108(%rsp), %r13
    00002285: 	movq	%rdi, (%r15)
    00002288: 	movq	0x100(%rsp), %rax
    00002290: 	movq	%rax, %rcx
    00002293: 	movq	%rax, (%rsp)
    00002297: 	addq	%r13, %rcx
    0000229a: 	je	.Ltmp317 # Offset: 8858
    0000229c: 	testq	%rax, %rax
    0000229f: 	je	.Ltmp318 # Offset: 8863
.Ltmp317:
    000022a5: 	movq	%r13, 0xb8(%rsp)
    000022ad: 	cmpq	$0xf, %r13
    000022b1: 	ja	.Ltmp319 # Offset: 8881
    000022b7: 	cmpq	$0x1, %r13
    000022bb: 	jne	.Ltmp320 # Offset: 8891
    000022c1: 	movq	(%rsp), %rax
    000022c5: 	movzbl	(%rax), %eax
    000022c8: 	movb	%al, 0x10(%r15)
.Ltmp460:
    000022cc: 	movq	%r13, 0x8(%r15)
    000022d0: 	movb	$0x0, (%rdi,%r13)
    000022d5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000022dc: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000022e3: 	addq	$0x20, %rax
    000022e7: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000022ee: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    000022f5: 	je	.Ltmp321 # Offset: 8949
.Ltmp420:
    000022fb: 	movq	-0x20(%rax), %r13
    000022ff: 	callq	clock@PLT # Offset: 8959
    00002304: 	pxor	%xmm0, %xmm0
    00002308: 	movq	%rax, end_time(%rip)
    0000230f: 	movq	%r13, %rdi
    00002312: 	subq	start_time(%rip), %rax
    00002319: 	cvtsi2sd	%rax, %xmm0
    0000231e: 	divsd	DATAat0x23450(%rip), %xmm0
    00002326: 	callq	_Z13record_resultdPKc # Offset: 8998
    0000232b: 	movq	0x100(%rsp), %rdi
    00002333: 	cmpq	0xa0(%rsp), %rdi
    0000233b: 	je	.Ltmp322 # Offset: 9019
    0000233d: 	movq	0x110(%rsp), %rax
    00002345: 	leaq	0x1(%rax), %rsi
    00002349: 	callq	_ZdlPvm@PLT # Offset: 9033
.Ltmp322:
    0000234e: 	leaq	DATAat0x23362(%rip), %rdx
    00002355: 	movq	%r14, %rsi
    00002358: 	movq	%r12, %rdi
    0000235b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9051
    00002360: 	callq	clock@PLT # Offset: 9056
    00002365: 	movl	iterations(%rip), %edx
    0000236b: 	movq	%rax, start_time(%rip)
    00002372: 	testl	%edx, %edx
    00002374: 	jle	.Ltmp323 # Offset: 9076
    0000237a: 	movq	DATAat0x234b0(%rip), %xmm6
    00002382: 	pxor	%xmm4, %xmm4
    00002386: 	movsd	DATAat0x23468(%rip), %xmm5
    0000238e: 	xorl	%r13d, %r13d
    00002391: 	movsd	DATAat0x23470(%rip), %xmm7
    00002399: 	movsd	DATAat0x23480(%rip), %xmm3
    000023a1: 	movsd	%xmm4, 0x28(%rsp)
    000023a7: 	leaq	DATAat0x231d2(%rip), %r15
    000023ae: 	movapd	DATAat0x23570(%rip), %xmm4
    000023b6: 	movaps	%xmm6, (%rsp)
    000023ba: 	movsd	DATAat0x23570(%rip), %xmm6
    000023c2: 	movsd	%xmm5, 0x30(%rsp)
    000023c8: 	movsd	%xmm7, 0x40(%rsp)
    000023ce: 	movsd	%xmm3, 0x78(%rsp)
    000023d4: 	movaps	%xmm4, 0x10(%rsp)
    000023d9: 	movsd	%xmm6, 0x70(%rsp)
    000023df: 	nop # Size: 1
.Ltmp327:
    000023e0: 	movq	%rbp, %rax
    000023e3: 	pxor	%xmm1, %xmm1
    000023e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp324:
    000023f0: 	movapd	(%rax), %xmm0
    000023f4: 	divpd	0x10(%rsp), %xmm0
    000023fa: 	addsd	%xmm0, %xmm1
    000023fe: 	addq	$0x10, %rax
    00002402: 	unpckhpd	%xmm0, %xmm0
    00002406: 	addsd	%xmm0, %xmm1
    0000240a: 	cmpq	%rbx, %rax
    0000240d: 	jne	.Ltmp324 # Offset: 9229
    0000240f: 	movsd	init_value(%rip), %xmm0
    00002417: 	movapd	(%rsp), %xmm6
    0000241c: 	divsd	0x70(%rsp), %xmm0
    00002422: 	movapd	%xmm1, %xmm2
    00002426: 	mulsd	0x78(%rsp), %xmm0
    0000242c: 	andpd	%xmm1, %xmm6
    00002430: 	comisd	0x30(%rsp), %xmm6
    00002436: 	subsd	%xmm0, %xmm2
    0000243a: 	jbe	.Ltmp325 # Offset: 9274
    0000243c: 	divsd	%xmm1, %xmm2
.Ltmp325:
    00002440: 	andpd	(%rsp), %xmm2
    00002445: 	movsd	0x40(%rsp), %xmm3
    0000244b: 	comisd	%xmm2, %xmm3
    0000244f: 	jbe	.Ltmp326 # Offset: 9295
.Ltmp396:
    00002455: 	addl	$0x1, %r13d
    00002459: 	cmpl	%edx, %r13d
    0000245c: 	jl	.Ltmp327 # Offset: 9308
.Ltmp323:
    0000245e: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00002465: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    0000246c: 	subq	$0x20, %rax
    00002470: 	cmpq	%rax, %r15
    00002473: 	je	.Ltmp328 # Offset: 9331
    00002479: 	leaq	0x10(%r15), %rdi
    0000247d: 	movq	0x108(%rsp), %r13
    00002485: 	movq	%rdi, (%r15)
    00002488: 	movq	0x100(%rsp), %rax
    00002490: 	movq	%rax, %rcx
    00002493: 	movq	%rax, (%rsp)
    00002497: 	addq	%r13, %rcx
    0000249a: 	je	.Ltmp329 # Offset: 9370
    0000249c: 	testq	%rax, %rax
    0000249f: 	je	.Ltmp330 # Offset: 9375
.Ltmp329:
    000024a5: 	movq	%r13, 0xb8(%rsp)
    000024ad: 	cmpq	$0xf, %r13
    000024b1: 	ja	.Ltmp331 # Offset: 9393
    000024b7: 	cmpq	$0x1, %r13
    000024bb: 	jne	.Ltmp332 # Offset: 9403
    000024c1: 	movq	(%rsp), %rax
    000024c5: 	movzbl	(%rax), %eax
    000024c8: 	movb	%al, 0x10(%r15)
.Ltmp446:
    000024cc: 	movq	%r13, 0x8(%r15)
    000024d0: 	movb	$0x0, (%rdi,%r13)
    000024d5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000024dc: 	addq	$0x20, %rax
    000024e0: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp422:
    000024e7: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000024ee: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000024f5: 	je	.Ltmp333 # Offset: 9461
.Ltmp421:
    000024fb: 	movq	-0x20(%rax), %r13
    000024ff: 	callq	clock@PLT # Offset: 9471
    00002504: 	pxor	%xmm0, %xmm0
    00002508: 	movq	%rax, end_time(%rip)
    0000250f: 	movq	%r13, %rdi
    00002512: 	subq	start_time(%rip), %rax
    00002519: 	cvtsi2sd	%rax, %xmm0
    0000251e: 	divsd	DATAat0x23450(%rip), %xmm0
    00002526: 	callq	_Z13record_resultdPKc # Offset: 9510
    0000252b: 	movq	0x100(%rsp), %rdi
    00002533: 	cmpq	0xa0(%rsp), %rdi
    0000253b: 	je	.Ltmp334 # Offset: 9531
    0000253d: 	movq	0x110(%rsp), %rax
    00002545: 	leaq	0x1(%rax), %rsi
    00002549: 	callq	_ZdlPvm@PLT # Offset: 9545
.Ltmp334:
    0000254e: 	leaq	DATAat0x23373(%rip), %rdx
    00002555: 	movq	%r14, %rsi
    00002558: 	movq	%r12, %rdi
    0000255b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9563
    00002560: 	callq	clock@PLT # Offset: 9568
    00002565: 	movl	iterations(%rip), %edx
    0000256b: 	movq	%rax, start_time(%rip)
    00002572: 	testl	%edx, %edx
    00002574: 	jle	.Ltmp335 # Offset: 9588
    0000257a: 	movq	DATAat0x234b0(%rip), %xmm7
    00002582: 	movsd	DATAat0x23468(%rip), %xmm3
    0000258a: 	pxor	%xmm5, %xmm5
    0000258e: 	xorl	%r13d, %r13d
    00002591: 	movsd	DATAat0x23470(%rip), %xmm4
    00002599: 	movsd	DATAat0x234f0(%rip), %xmm6
    000025a1: 	movsd	%xmm5, 0x28(%rsp)
    000025a7: 	leaq	DATAat0x231d2(%rip), %r15
    000025ae: 	movsd	DATAat0x23480(%rip), %xmm5
    000025b6: 	movaps	%xmm7, (%rsp)
    000025ba: 	movapd	DATAat0x234f0(%rip), %xmm7
    000025c2: 	movsd	%xmm3, 0x30(%rsp)
    000025c8: 	movapd	DATAat0x23570(%rip), %xmm3
    000025d0: 	movsd	%xmm4, 0x40(%rsp)
    000025d6: 	movsd	DATAat0x23570(%rip), %xmm4
    000025de: 	movsd	%xmm6, 0x90(%rsp)
    000025e7: 	movsd	%xmm5, 0x78(%rsp)
    000025ed: 	movaps	%xmm7, 0x50(%rsp)
    000025f2: 	movaps	%xmm3, 0x10(%rsp)
    000025f7: 	movsd	%xmm4, 0x70(%rsp)
    000025fd: 	nopl	(%rax) # Size: 3
.Ltmp339:
    00002600: 	movq	%rbp, %rax
    00002603: 	pxor	%xmm1, %xmm1
    00002607: 	nopw	(%rax,%rax) # Size: 9
.Ltmp336:
    00002610: 	movapd	DATAat0x23580(%rip), %xmm0
    00002618: 	mulpd	(%rax), %xmm0
    0000261c: 	addq	$0x10, %rax
    00002620: 	divpd	0x50(%rsp), %xmm0
    00002626: 	mulpd	DATAat0x23590(%rip), %xmm0
    0000262e: 	divpd	0x10(%rsp), %xmm0
    00002634: 	addsd	%xmm0, %xmm1
    00002638: 	unpckhpd	%xmm0, %xmm0
    0000263c: 	addsd	%xmm0, %xmm1
    00002640: 	cmpq	%rax, %rbx
    00002643: 	jne	.Ltmp336 # Offset: 9795
    00002645: 	movsd	DATAat0x23580(%rip), %xmm0
    0000264d: 	mulsd	init_value(%rip), %xmm0
    00002655: 	movapd	%xmm1, %xmm2
    00002659: 	divsd	0x90(%rsp), %xmm0
    00002662: 	movapd	(%rsp), %xmm7
    00002667: 	mulsd	DATAat0x23590(%rip), %xmm0
    0000266f: 	divsd	0x70(%rsp), %xmm0
    00002675: 	mulsd	0x78(%rsp), %xmm0
    0000267b: 	andpd	%xmm1, %xmm7
    0000267f: 	comisd	0x30(%rsp), %xmm7
    00002685: 	subsd	%xmm0, %xmm2
    00002689: 	jbe	.Ltmp337 # Offset: 9865
    0000268b: 	divsd	%xmm1, %xmm2
.Ltmp337:
    0000268f: 	andpd	(%rsp), %xmm2
    00002694: 	movsd	0x40(%rsp), %xmm6
    0000269a: 	comisd	%xmm2, %xmm6
    0000269e: 	jbe	.Ltmp338 # Offset: 9886
.Ltmp394:
    000026a4: 	addl	$0x1, %r13d
    000026a8: 	cmpl	%edx, %r13d
    000026ab: 	jl	.Ltmp339 # Offset: 9899
.Ltmp335:
    000026b1: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000026b8: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    000026bf: 	subq	$0x20, %rax
    000026c3: 	cmpq	%rax, %r15
    000026c6: 	je	.Ltmp340 # Offset: 9926
    000026cc: 	leaq	0x10(%r15), %rdi
    000026d0: 	movq	0x108(%rsp), %r13
    000026d8: 	movq	%rdi, (%r15)
    000026db: 	movq	0x100(%rsp), %rax
    000026e3: 	movq	%rax, %rcx
    000026e6: 	movq	%rax, (%rsp)
    000026ea: 	addq	%r13, %rcx
    000026ed: 	je	.Ltmp341 # Offset: 9965
    000026ef: 	testq	%rax, %rax
    000026f2: 	je	.Ltmp342 # Offset: 9970
.Ltmp341:
    000026f8: 	movq	%r13, 0xb8(%rsp)
    00002700: 	cmpq	$0xf, %r13
    00002704: 	ja	.Ltmp343 # Offset: 9988
    0000270a: 	cmpq	$0x1, %r13
    0000270e: 	jne	.Ltmp344 # Offset: 9998
    00002714: 	movq	(%rsp), %rax
    00002718: 	movzbl	(%rax), %eax
    0000271b: 	movb	%al, 0x10(%r15)
.Ltmp432:
    0000271f: 	movq	%r13, 0x8(%r15)
    00002723: 	movb	$0x0, (%rdi,%r13)
    00002728: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000272f: 	addq	$0x20, %rax
    00002733: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp427:
    0000273a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002741: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002748: 	je	.Ltmp345 # Offset: 10056
.Ltmp426:
    0000274e: 	movq	-0x20(%rax), %r13
    00002752: 	callq	clock@PLT # Offset: 10066
    00002757: 	pxor	%xmm0, %xmm0
    0000275b: 	movq	%rax, end_time(%rip)
    00002762: 	movq	%r13, %rdi
    00002765: 	subq	start_time(%rip), %rax
    0000276c: 	cvtsi2sd	%rax, %xmm0
    00002771: 	divsd	DATAat0x23450(%rip), %xmm0
    00002779: 	callq	_Z13record_resultdPKc # Offset: 10105
    0000277e: 	movq	0x100(%rsp), %rdi
    00002786: 	cmpq	0xa0(%rsp), %rdi
    0000278e: 	je	.Ltmp346 # Offset: 10126
    00002790: 	movq	0x110(%rsp), %rax
    00002798: 	leaq	0x1(%rax), %rsi
    0000279c: 	callq	_ZdlPvm@PLT # Offset: 10140
.Ltmp346:
    000027a1: 	leaq	DATAat0x2338e(%rip), %rdx
    000027a8: 	movq	%r14, %rsi
    000027ab: 	movq	%r12, %rdi
    000027ae: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10158
    000027b3: 	callq	clock@PLT # Offset: 10163
    000027b8: 	movl	iterations(%rip), %edx
    000027be: 	movq	%rax, start_time(%rip)
    000027c5: 	testl	%edx, %edx
    000027c7: 	jle	.Ltmp347 # Offset: 10183
    000027cd: 	movsd	DATAat0x234e0(%rip), %xmm5
    000027d5: 	pxor	%xmm6, %xmm6
    000027d9: 	movq	DATAat0x234b0(%rip), %xmm7
    000027e1: 	xorl	%r13d, %r13d
    000027e4: 	movsd	DATAat0x23468(%rip), %xmm3
    000027ec: 	movsd	DATAat0x23470(%rip), %xmm4
    000027f4: 	movsd	%xmm6, 0x28(%rsp)
    000027fa: 	leaq	DATAat0x231d2(%rip), %r15
    00002801: 	movsd	DATAat0x23480(%rip), %xmm6
    00002809: 	movsd	%xmm5, 0x70(%rsp)
    0000280f: 	movapd	DATAat0x234e0(%rip), %xmm5
    00002817: 	movaps	%xmm7, (%rsp)
    0000281b: 	movsd	%xmm3, 0x30(%rsp)
    00002821: 	movsd	%xmm4, 0x40(%rsp)
    00002827: 	movsd	%xmm6, 0x78(%rsp)
    0000282d: 	movaps	%xmm5, 0x60(%rsp)
    00002832: 	nopw	(%rax,%rax) # Size: 6
.Ltmp351:
    00002838: 	movq	%rbp, %rax
    0000283b: 	pxor	%xmm0, %xmm0
    0000283f: 	nop # Size: 1
.Ltmp348:
    00002840: 	movapd	0x60(%rsp), %xmm2
    00002846: 	addpd	(%rax), %xmm2
    0000284a: 	addq	$0x10, %rax
    0000284e: 	addsd	%xmm2, %xmm0
    00002852: 	unpckhpd	%xmm2, %xmm2
    00002856: 	addsd	%xmm2, %xmm0
    0000285a: 	cmpq	%rbx, %rax
    0000285d: 	jne	.Ltmp348 # Offset: 10333
    0000285f: 	movsd	0x70(%rsp), %xmm2
    00002865: 	movapd	(%rsp), %xmm3
    0000286a: 	movapd	%xmm0, %xmm1
    0000286e: 	addsd	init_value(%rip), %xmm2
    00002876: 	mulsd	0x78(%rsp), %xmm2
    0000287c: 	andpd	%xmm0, %xmm3
    00002880: 	comisd	0x30(%rsp), %xmm3
    00002886: 	subsd	%xmm2, %xmm1
    0000288a: 	jbe	.Ltmp349 # Offset: 10378
    0000288c: 	divsd	%xmm0, %xmm1
.Ltmp349:
    00002890: 	andpd	(%rsp), %xmm1
    00002895: 	movsd	0x40(%rsp), %xmm3
    0000289b: 	comisd	%xmm1, %xmm3
    0000289f: 	jbe	.Ltmp350 # Offset: 10399
.Ltmp393:
    000028a5: 	addl	$0x1, %r13d
    000028a9: 	cmpl	%edx, %r13d
    000028ac: 	jl	.Ltmp351 # Offset: 10412
.Ltmp347:
    000028ae: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000028b5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    000028bc: 	subq	$0x20, %rax
    000028c0: 	cmpq	%rax, %r15
    000028c3: 	je	.Ltmp352 # Offset: 10435
    000028c9: 	leaq	0x10(%r15), %rdi
    000028cd: 	movq	0x108(%rsp), %r13
    000028d5: 	movq	%rdi, (%r15)
    000028d8: 	movq	0x100(%rsp), %rax
    000028e0: 	movq	%rax, %rcx
    000028e3: 	movq	%rax, (%rsp)
    000028e7: 	addq	%r13, %rcx
    000028ea: 	je	.Ltmp353 # Offset: 10474
    000028ec: 	testq	%rax, %rax
    000028ef: 	je	.Ltmp354 # Offset: 10479
.Ltmp353:
    000028f5: 	movq	%r13, 0xb8(%rsp)
    000028fd: 	cmpq	$0xf, %r13
    00002901: 	ja	.Ltmp355 # Offset: 10497
    00002907: 	cmpq	$0x1, %r13
    0000290b: 	jne	.Ltmp356 # Offset: 10507
    00002911: 	movq	(%rsp), %rax
    00002915: 	movzbl	(%rax), %eax
    00002918: 	movb	%al, 0x10(%r15)
.Ltmp463:
    0000291c: 	movq	%r13, 0x8(%r15)
    00002920: 	movb	$0x0, (%rdi,%r13)
    00002925: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000292c: 	addq	$0x20, %rax
    00002930: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp428:
    00002937: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000293e: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002945: 	je	.Ltmp357 # Offset: 10565
.Ltmp410:
    0000294b: 	movq	-0x20(%rax), %r13
    0000294f: 	callq	clock@PLT # Offset: 10575
    00002954: 	pxor	%xmm0, %xmm0
    00002958: 	movq	%rax, end_time(%rip)
    0000295f: 	movq	%r13, %rdi
    00002962: 	subq	start_time(%rip), %rax
    00002969: 	cvtsi2sd	%rax, %xmm0
    0000296e: 	divsd	DATAat0x23450(%rip), %xmm0
    00002976: 	callq	_Z13record_resultdPKc # Offset: 10614
    0000297b: 	movq	0x100(%rsp), %rdi
    00002983: 	cmpq	0xa0(%rsp), %rdi
    0000298b: 	je	.Ltmp358 # Offset: 10635
    0000298d: 	movq	0x110(%rsp), %rax
    00002995: 	leaq	0x1(%rax), %rsi
    00002999: 	callq	_ZdlPvm@PLT # Offset: 10649
.Ltmp358:
    0000299e: 	leaq	DATAat0x233a9(%rip), %rdx
    000029a5: 	movq	%r14, %rsi
    000029a8: 	movq	%r12, %rdi
    000029ab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10667
    000029b0: 	callq	clock@PLT # Offset: 10672
    000029b5: 	movl	iterations(%rip), %edx
    000029bb: 	movq	%rax, start_time(%rip)
    000029c2: 	testl	%edx, %edx
    000029c4: 	jle	.Ltmp359 # Offset: 10692
    000029ca: 	movsd	DATAat0x234e0(%rip), %xmm3
    000029d2: 	pxor	%xmm7, %xmm7
    000029d6: 	movq	DATAat0x234b0(%rip), %xmm4
    000029de: 	xorl	%r13d, %r13d
    000029e1: 	movsd	DATAat0x23468(%rip), %xmm6
    000029e9: 	movsd	DATAat0x23470(%rip), %xmm5
    000029f1: 	movsd	%xmm7, 0x28(%rsp)
    000029f7: 	leaq	DATAat0x231d2(%rip), %r15
    000029fe: 	movsd	DATAat0x23480(%rip), %xmm7
    00002a06: 	movsd	%xmm3, 0x70(%rsp)
    00002a0c: 	movapd	DATAat0x234e0(%rip), %xmm3
    00002a14: 	movaps	%xmm4, (%rsp)
    00002a18: 	movsd	%xmm6, 0x30(%rsp)
    00002a1e: 	movsd	%xmm5, 0x40(%rsp)
    00002a24: 	movsd	%xmm7, 0x78(%rsp)
    00002a2a: 	movaps	%xmm3, 0x60(%rsp)
    00002a2f: 	nop # Size: 1
.Ltmp363:
    00002a30: 	movq	%rbp, %rax
    00002a33: 	pxor	%xmm1, %xmm1
    00002a37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp360:
    00002a40: 	movapd	0x60(%rsp), %xmm0
    00002a46: 	addpd	(%rax), %xmm0
    00002a4a: 	addq	$0x10, %rax
    00002a4e: 	addpd	DATAat0x235a0(%rip), %xmm0
    00002a56: 	addsd	%xmm0, %xmm1
    00002a5a: 	unpckhpd	%xmm0, %xmm0
    00002a5e: 	addsd	%xmm0, %xmm1
    00002a62: 	cmpq	%rax, %rbx
    00002a65: 	jne	.Ltmp360 # Offset: 10853
    00002a67: 	movsd	0x70(%rsp), %xmm0
    00002a6d: 	movapd	(%rsp), %xmm4
    00002a72: 	movapd	%xmm1, %xmm2
    00002a76: 	addsd	init_value(%rip), %xmm0
    00002a7e: 	subsd	DATAat0x23498(%rip), %xmm0
    00002a86: 	mulsd	0x78(%rsp), %xmm0
    00002a8c: 	andpd	%xmm1, %xmm4
    00002a90: 	comisd	0x30(%rsp), %xmm4
    00002a96: 	subsd	%xmm0, %xmm2
    00002a9a: 	jbe	.Ltmp361 # Offset: 10906
    00002a9c: 	divsd	%xmm1, %xmm2
.Ltmp361:
    00002aa0: 	andpd	(%rsp), %xmm2
    00002aa5: 	movsd	0x40(%rsp), %xmm7
    00002aab: 	comisd	%xmm2, %xmm7
    00002aaf: 	jbe	.Ltmp362 # Offset: 10927
.Ltmp397:
    00002ab5: 	addl	$0x1, %r13d
    00002ab9: 	cmpl	%edx, %r13d
    00002abc: 	jl	.Ltmp363 # Offset: 10940
.Ltmp359:
    00002ac2: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00002ac9: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00002ad0: 	subq	$0x20, %rax
    00002ad4: 	cmpq	%rax, %rbx
    00002ad7: 	je	.Ltmp364 # Offset: 10967
    00002add: 	leaq	0x10(%rbx), %rdi
    00002ae1: 	movq	0x108(%rsp), %r13
    00002ae9: 	movq	%rdi, (%rbx)
    00002aec: 	movq	0x100(%rsp), %rbp
    00002af4: 	movq	%rbp, %rax
    00002af7: 	addq	%r13, %rax
    00002afa: 	je	.Ltmp365 # Offset: 11002
    00002afc: 	testq	%rbp, %rbp
    00002aff: 	je	.Ltmp366 # Offset: 11007
.Ltmp365:
    00002b05: 	movq	%r13, 0xb8(%rsp)
    00002b0d: 	cmpq	$0xf, %r13
    00002b11: 	ja	.Ltmp367 # Offset: 11025
    00002b17: 	cmpq	$0x1, %r13
    00002b1b: 	jne	.Ltmp368 # Offset: 11035
    00002b21: 	movzbl	(%rbp), %eax
    00002b25: 	movb	%al, 0x10(%rbx)
.Ltmp458:
    00002b28: 	movq	%r13, 0x8(%rbx)
    00002b2c: 	movb	$0x0, (%rdi,%r13)
    00002b31: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002b38: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002b3f: 	addq	$0x20, %rax
    00002b43: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002b4a: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00002b51: 	je	.Ltmp369 # Offset: 11089
.Ltmp398:
    00002b57: 	movq	-0x20(%rax), %rbp
    00002b5b: 	callq	clock@PLT # Offset: 11099
    00002b60: 	pxor	%xmm0, %xmm0
    00002b64: 	movq	%rax, end_time(%rip)
    00002b6b: 	movq	%rbp, %rdi
    00002b6e: 	subq	start_time(%rip), %rax
    00002b75: 	cvtsi2sd	%rax, %xmm0
    00002b7a: 	divsd	DATAat0x23450(%rip), %xmm0
    00002b82: 	callq	_Z13record_resultdPKc # Offset: 11138
    00002b87: 	movq	0x100(%rsp), %rdi
    00002b8f: 	cmpq	0xa0(%rsp), %rdi
    00002b97: 	je	.Ltmp370 # Offset: 11159
    00002b99: 	movq	0x110(%rsp), %rax
    00002ba1: 	leaq	0x1(%rax), %rsi
    00002ba5: 	callq	_ZdlPvm@PLT # Offset: 11173
.Ltmp370:
    00002baa: 	leaq	DATAat0x232ac(%rip), %rdx
    00002bb1: 	movq	%r14, %rsi
    00002bb4: 	movq	%r12, %rdi
    00002bb7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11191
    00002bbc: 	movl	iterations(%rip), %edx
    00002bc2: 	xorl	%r8d, %r8d
    00002bc5: 	xorl	%ecx, %ecx
    00002bc7: 	movl	$0x1f40, %esi
    00002bcc: 	movq	0x100(%rsp), %rdi
    00002bd4: 	callq	_Z9summarizePKciiii # Offset: 11220
    00002bd9: 	movl	base_iterations(%rip), %eax
    00002bdf: 	movq	0x100(%rsp), %rdi
    00002be7: 	movl	%eax, iterations(%rip)
    00002bed: 	cmpq	0xa0(%rsp), %rdi
    00002bf5: 	je	.Ltmp371 # Offset: 11253
    00002bf7: 	movq	0x110(%rsp), %rax
    00002bff: 	leaq	0x1(%rax), %rsi
    00002c03: 	callq	_ZdlPvm@PLT # Offset: 11267
.Ltmp371:
    00002c08: 	movq	0xe0(%rsp), %rdi
    00002c10: 	leaq	0xf0(%rsp), %rax
    00002c18: 	cmpq	%rax, %rdi
    00002c1b: 	je	.Ltmp372 # Offset: 11291
    00002c1d: 	movq	0xf0(%rsp), %rax
    00002c25: 	leaq	0x1(%rax), %rsi
    00002c29: 	callq	_ZdlPvm@PLT # Offset: 11305
.Ltmp372:
    00002c2e: 	movq	0xc0(%rsp), %rdi
    00002c36: 	cmpq	0xa8(%rsp), %rdi
    00002c3e: 	je	.Ltmp373 # Offset: 11326
    00002c40: 	movq	0xd0(%rsp), %rax
    00002c48: 	leaq	0x1(%rax), %rsi
    00002c4c: 	callq	_ZdlPvm@PLT # Offset: 11340
.Ltmp373:
    00002c51: 	movq	0xfb28(%rsp), %rax
    00002c59: 	subq	%fs:0x28, %rax
    00002c62: 	jne	.Ltmp374 # Offset: 11362
    00002c68: 	addq	$0xfb38, %rsp
    00002c6f: 	popq	%rbx
    00002c70: 	popq	%rbp
    00002c71: 	popq	%r12
    00002c73: 	popq	%r13
    00002c75: 	popq	%r14
    00002c77: 	popq	%r15
    00002c79: 	retq # Offset: 11385
    00002c7a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp375:
    00002c80: 	addq	$0x20, %rbp
.Ltmp113:
    00002c84: 	cmpq	%rbp, (%rsp)
    00002c88: 	je	.Ltmp116 # Offset: 11400
.Ltmp376:
    00002c8e: 	movq	(%rbp), %rdi
    00002c92: 	leaq	0x10(%rbp), %rax
    00002c96: 	cmpq	%rax, %rdi
    00002c99: 	je	.Ltmp375 # Offset: 11417
    00002c9b: 	movq	0x10(%rbp), %rax
    00002c9f: 	addq	$0x20, %rbp
    00002ca3: 	leaq	0x1(%rax), %rsi
    00002ca7: 	callq	_ZdlPvm@PLT # Offset: 11431
    00002cac: 	cmpq	%rbp, (%rsp)
    00002cb0: 	jne	.Ltmp376 # Offset: 11440
    00002cb2: 	jmp	.Ltmp116 # Offset: 11442
    00002cb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp109:
    00002cc0: 	addq	$0x20, %rbp
    00002cc4: 	cmpq	%rbx, %rbp
    00002cc7: 	jne	.Ltmp110 # Offset: 11463
    00002ccd: 	addq	$0x8, %r13
    00002cd1: 	cmpq	%r13, %r15
    00002cd4: 	ja	.Ltmp111 # Offset: 11476
    00002cda: 	jmp	.Ltmp377 # Offset: 11482
    00002cdf: 	nop # Size: 1
.Ltmp125:
    00002ce0: 	movl	current_test(%rip), %edx
    00002ce6: 	movq	%r15, %rsi
    00002ce9: 	movl	$0x1, %edi
    00002cee: 	xorl	%eax, %eax
    00002cf0: 	callq	__printf_chk@PLT # Offset: 11504
    00002cf5: 	movl	iterations(%rip), %edx
    00002cfb: 	jmp	.Ltmp378 # Offset: 11515
.Ltmp130:
    00002d00: 	leaq	0xb8(%rsp), %rsi
    00002d08: 	xorl	%edx, %edx
    00002d0a: 	movq	%r15, %rdi
    00002d0d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11533
    00002d12: 	movq	%rax, (%r15)
    00002d15: 	movq	%rax, %rdi
    00002d18: 	movq	0xb8(%rsp), %rax
    00002d20: 	movq	%rax, 0x10(%r15)
.Ltmp431:
    00002d24: 	movq	(%rsp), %rsi
    00002d28: 	movq	%r13, %rdx
    00002d2b: 	callq	memcpy@PLT # Offset: 11563
    00002d30: 	movq	0xb8(%rsp), %r13
    00002d38: 	movq	(%r15), %rdi
    00002d3b: 	jmp	.Ltmp379 # Offset: 11579
.Ltmp302:
    00002d40: 	movl	current_test(%rip), %edx
    00002d46: 	movq	%r15, %rsi
    00002d49: 	movl	$0x1, %edi
    00002d4e: 	xorl	%eax, %eax
    00002d50: 	callq	__printf_chk@PLT # Offset: 11600
    00002d55: 	movl	iterations(%rip), %edx
    00002d5b: 	jmp	.Ltmp380 # Offset: 11611
.Ltmp290:
    00002d60: 	movl	current_test(%rip), %edx
    00002d66: 	movq	%r15, %rsi
    00002d69: 	movl	$0x1, %edi
    00002d6e: 	xorl	%eax, %eax
    00002d70: 	callq	__printf_chk@PLT # Offset: 11632
    00002d75: 	movl	iterations(%rip), %edx
    00002d7b: 	jmp	.Ltmp381 # Offset: 11643
.Ltmp278:
    00002d80: 	movl	current_test(%rip), %edx
    00002d86: 	movq	%r15, %rsi
    00002d89: 	movl	$0x1, %edi
    00002d8e: 	xorl	%eax, %eax
    00002d90: 	callq	__printf_chk@PLT # Offset: 11664
    00002d95: 	movl	iterations(%rip), %edx
    00002d9b: 	jmp	.Ltmp382 # Offset: 11675
.Ltmp266:
    00002da0: 	movl	current_test(%rip), %edx
    00002da6: 	movq	%r15, %rsi
    00002da9: 	movl	$0x1, %edi
    00002dae: 	xorl	%eax, %eax
    00002db0: 	callq	__printf_chk@PLT # Offset: 11696
    00002db5: 	movl	iterations(%rip), %edx
    00002dbb: 	jmp	.Ltmp383 # Offset: 11707
.Ltmp149:
    00002dc0: 	movl	current_test(%rip), %edx
    00002dc6: 	movq	%r15, %rsi
    00002dc9: 	movl	$0x1, %edi
    00002dce: 	xorl	%eax, %eax
    00002dd0: 	callq	__printf_chk@PLT # Offset: 11728
    00002dd5: 	movl	iterations(%rip), %edx
    00002ddb: 	jmp	.Ltmp384 # Offset: 11739
.Ltmp137:
    00002de0: 	movl	current_test(%rip), %edx
    00002de6: 	movq	%r15, %rsi
    00002de9: 	movl	$0x1, %edi
    00002dee: 	xorl	%eax, %eax
    00002df0: 	callq	__printf_chk@PLT # Offset: 11760
    00002df5: 	movl	iterations(%rip), %edx
    00002dfb: 	jmp	.Ltmp385 # Offset: 11771
.Ltmp173:
    00002e00: 	movl	current_test(%rip), %edx
    00002e06: 	movq	%r15, %rsi
    00002e09: 	movl	$0x1, %edi
    00002e0e: 	xorl	%eax, %eax
    00002e10: 	callq	__printf_chk@PLT # Offset: 11792
    00002e15: 	movl	iterations(%rip), %edx
    00002e1b: 	jmp	.Ltmp386 # Offset: 11803
.Ltmp161:
    00002e20: 	movl	current_test(%rip), %edx
    00002e26: 	movq	%r15, %rsi
    00002e29: 	movl	$0x1, %edi
    00002e2e: 	xorl	%eax, %eax
    00002e30: 	callq	__printf_chk@PLT # Offset: 11824
    00002e35: 	movl	iterations(%rip), %edx
    00002e3b: 	jmp	.Ltmp387 # Offset: 11835
.Ltmp254:
    00002e40: 	movl	current_test(%rip), %edx
    00002e46: 	movq	%r15, %rsi
    00002e49: 	movl	$0x1, %edi
    00002e4e: 	xorl	%eax, %eax
    00002e50: 	callq	__printf_chk@PLT # Offset: 11856
    00002e55: 	movl	iterations(%rip), %edx
    00002e5b: 	jmp	.Ltmp388 # Offset: 11867
.Ltmp242:
    00002e60: 	movl	current_test(%rip), %edx
    00002e66: 	movq	%r15, %rsi
    00002e69: 	movl	$0x1, %edi
    00002e6e: 	xorl	%eax, %eax
    00002e70: 	callq	__printf_chk@PLT # Offset: 11888
    00002e75: 	movl	iterations(%rip), %edx
    00002e7b: 	jmp	.Ltmp389 # Offset: 11899
.Ltmp223:
    00002e80: 	movl	current_test(%rip), %edx
    00002e86: 	movq	%r15, %rsi
    00002e89: 	movl	$0x1, %edi
    00002e8e: 	xorl	%eax, %eax
    00002e90: 	callq	__printf_chk@PLT # Offset: 11920
    00002e95: 	movl	iterations(%rip), %edx
    00002e9b: 	jmp	.Ltmp390 # Offset: 11931
.Ltmp204:
    00002ea0: 	movl	current_test(%rip), %edx
    00002ea6: 	movq	%r15, %rsi
    00002ea9: 	movl	$0x1, %edi
    00002eae: 	xorl	%eax, %eax
    00002eb0: 	callq	__printf_chk@PLT # Offset: 11952
    00002eb5: 	movl	iterations(%rip), %edx
    00002ebb: 	jmp	.Ltmp391 # Offset: 11963
.Ltmp192:
    00002ec0: 	movl	current_test(%rip), %edx
    00002ec6: 	movq	%r15, %rsi
    00002ec9: 	movl	$0x1, %edi
    00002ece: 	xorl	%eax, %eax
    00002ed0: 	callq	__printf_chk@PLT # Offset: 11984
    00002ed5: 	movl	iterations(%rip), %edx
    00002edb: 	jmp	.Ltmp392 # Offset: 11995
.Ltmp350:
    00002ee0: 	movl	current_test(%rip), %edx
    00002ee6: 	movq	%r15, %rsi
    00002ee9: 	movl	$0x1, %edi
    00002eee: 	xorl	%eax, %eax
    00002ef0: 	callq	__printf_chk@PLT # Offset: 12016
    00002ef5: 	movl	iterations(%rip), %edx
    00002efb: 	jmp	.Ltmp393 # Offset: 12027
.Ltmp338:
    00002f00: 	movl	current_test(%rip), %edx
    00002f06: 	movq	%r15, %rsi
    00002f09: 	movl	$0x1, %edi
    00002f0e: 	xorl	%eax, %eax
    00002f10: 	callq	__printf_chk@PLT # Offset: 12048
    00002f15: 	movl	iterations(%rip), %edx
    00002f1b: 	jmp	.Ltmp394 # Offset: 12059
.Ltmp314:
    00002f20: 	movl	current_test(%rip), %edx
    00002f26: 	movq	%r15, %rsi
    00002f29: 	movl	$0x1, %edi
    00002f2e: 	xorl	%eax, %eax
    00002f30: 	callq	__printf_chk@PLT # Offset: 12080
    00002f35: 	movl	iterations(%rip), %edx
    00002f3b: 	jmp	.Ltmp395 # Offset: 12091
.Ltmp326:
    00002f40: 	movl	current_test(%rip), %edx
    00002f46: 	movq	%r15, %rsi
    00002f49: 	movl	$0x1, %edi
    00002f4e: 	xorl	%eax, %eax
    00002f50: 	callq	__printf_chk@PLT # Offset: 12112
    00002f55: 	movl	iterations(%rip), %edx
    00002f5b: 	jmp	.Ltmp396 # Offset: 12123
.Ltmp362:
    00002f60: 	movl	current_test(%rip), %edx
    00002f66: 	movq	%r15, %rsi
    00002f69: 	movl	$0x1, %edi
    00002f6e: 	xorl	%eax, %eax
    00002f70: 	callq	__printf_chk@PLT # Offset: 12144
    00002f75: 	movl	iterations(%rip), %edx
    00002f7b: 	jmp	.Ltmp397 # Offset: 12155
.Ltmp364:
    00002f80: 	movq	%r12, %rsi
    00002f83: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002f8a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 12170
    00002f8f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002f96: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002f9d: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002fa4: 	jne	.Ltmp398 # Offset: 12196
.Ltmp369:
    00002faa: 	movq	-0x8(%rdx), %rax
    00002fae: 	addq	$0x200, %rax
    00002fb4: 	jmp	.Ltmp398 # Offset: 12212
.Ltmp244:
    00002fb9: 	movq	%r12, %rsi
    00002fbc: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002fc3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 12227
    00002fc8: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002fcf: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002fd6: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002fdd: 	jne	.Ltmp399 # Offset: 12253
.Ltmp249:
    00002fe3: 	movq	-0x8(%rdx), %rax
    00002fe7: 	addq	$0x200, %rax
    00002fed: 	jmp	.Ltmp399 # Offset: 12269
.Ltmp218:
    00002ff2: 	movq	-0x8(%rdx), %rax
    00002ff6: 	addq	$0x200, %rax
    00002ffc: 	jmp	.Ltmp400 # Offset: 12284
.Ltmp213:
    00003001: 	movq	%r12, %rsi
    00003004: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000300b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 12299
    00003010: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003017: 	jmp	.Ltmp401 # Offset: 12311
.Ltmp211:
    0000301c: 	movq	-0x8(%rdx), %rax
    00003020: 	addq	$0x200, %rax
    00003026: 	jmp	.Ltmp402 # Offset: 12326
.Ltmp156:
    0000302b: 	movq	-0x8(%rdx), %rax
    0000302f: 	addq	$0x200, %rax
    00003035: 	jmp	.Ltmp403 # Offset: 12341
.Ltmp256:
    0000303a: 	movq	%r12, %rsi
    0000303d: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003044: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 12356
    00003049: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003050: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00003057: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000305e: 	jne	.Ltmp404 # Offset: 12382
.Ltmp261:
    00003064: 	movq	-0x8(%rdx), %rax
    00003068: 	addq	$0x200, %rax
    0000306e: 	jmp	.Ltmp404 # Offset: 12398
.Ltmp237:
    00003073: 	movq	-0x8(%rdx), %rax
    00003077: 	addq	$0x200, %rax
    0000307d: 	jmp	.Ltmp405 # Offset: 12413
.Ltmp232:
    00003082: 	movq	%r12, %rsi
    00003085: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000308c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 12428
    00003091: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003098: 	jmp	.Ltmp406 # Offset: 12440
.Ltmp230:
    0000309d: 	movq	-0x8(%rdx), %rax
    000030a1: 	addq	$0x200, %rax
    000030a7: 	jmp	.Ltmp407 # Offset: 12455
.Ltmp225:
    000030ac: 	movq	%r12, %rsi
    000030af: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000030b6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 12470
    000030bb: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000030c2: 	jmp	.Ltmp408 # Offset: 12482
.Ltmp309:
    000030c7: 	movq	-0x8(%rdx), %rax
    000030cb: 	addq	$0x200, %rax
    000030d1: 	jmp	.Ltmp409 # Offset: 12497
.Ltmp357:
    000030d6: 	movq	-0x8(%rdx), %rax
    000030da: 	addq	$0x200, %rax
    000030e0: 	jmp	.Ltmp410 # Offset: 12512
.Ltmp127:
    000030e5: 	movq	%r12, %rsi
    000030e8: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000030ef: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 12527
    000030f4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000030fb: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00003102: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00003109: 	jne	.Ltmp411 # Offset: 12553
.Ltmp132:
    0000310f: 	movq	-0x8(%rdx), %rax
    00003113: 	addq	$0x200, %rax
    00003119: 	jmp	.Ltmp411 # Offset: 12569
.Ltmp139:
    0000311e: 	movq	%r12, %rsi
    00003121: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003128: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 12584
    0000312d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003134: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000313b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00003142: 	jne	.Ltmp412 # Offset: 12610
.Ltmp144:
    00003148: 	movq	-0x8(%rdx), %rax
    0000314c: 	addq	$0x200, %rax
    00003152: 	jmp	.Ltmp412 # Offset: 12626
.Ltmp268:
    00003157: 	movq	%r12, %rsi
    0000315a: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003161: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 12641
    00003166: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000316d: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00003174: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000317b: 	jne	.Ltmp413 # Offset: 12667
.Ltmp273:
    00003181: 	movq	-0x8(%rdx), %rax
    00003185: 	addq	$0x200, %rax
    0000318b: 	jmp	.Ltmp413 # Offset: 12683
.Ltmp151:
    00003190: 	movq	%r12, %rsi
    00003193: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000319a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 12698
    0000319f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000031a6: 	jmp	.Ltmp414 # Offset: 12710
.Ltmp292:
    000031ab: 	movq	%r12, %rsi
    000031ae: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000031b5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 12725
    000031ba: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000031c1: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000031c8: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000031cf: 	jne	.Ltmp415 # Offset: 12751
.Ltmp297:
    000031d5: 	movq	-0x8(%rdx), %rax
    000031d9: 	addq	$0x200, %rax
    000031df: 	jmp	.Ltmp415 # Offset: 12767
.Ltmp168:
    000031e4: 	movq	-0x8(%rdx), %rax
    000031e8: 	addq	$0x200, %rax
    000031ee: 	jmp	.Ltmp416 # Offset: 12782
.Ltmp163:
    000031f3: 	movq	%r12, %rsi
    000031f6: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000031fd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 12797
    00003202: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003209: 	jmp	.Ltmp417 # Offset: 12809
.Ltmp175:
    0000320e: 	movq	%r12, %rsi
    00003211: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003218: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 12824
    0000321d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003224: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000322b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00003232: 	jne	.Ltmp418 # Offset: 12850
.Ltmp180:
    00003238: 	movq	-0x8(%rdx), %rax
    0000323c: 	addq	$0x200, %rax
    00003242: 	jmp	.Ltmp418 # Offset: 12866
.Ltmp182:
    00003247: 	movq	%r12, %rsi
    0000324a: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003251: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 12881
    00003256: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000325d: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00003264: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000326b: 	jne	.Ltmp419 # Offset: 12907
.Ltmp187:
    00003271: 	movq	-0x8(%rdx), %rax
    00003275: 	addq	$0x200, %rax
    0000327b: 	jmp	.Ltmp419 # Offset: 12923
.Ltmp316:
    00003280: 	movq	%r12, %rsi
    00003283: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000328a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 12938
    0000328f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003296: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000329d: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000032a4: 	jne	.Ltmp420 # Offset: 12964
.Ltmp321:
    000032aa: 	movq	-0x8(%rdx), %rax
    000032ae: 	addq	$0x200, %rax
    000032b4: 	jmp	.Ltmp420 # Offset: 12980
.Ltmp333:
    000032b9: 	movq	-0x8(%rdx), %rax
    000032bd: 	addq	$0x200, %rax
    000032c3: 	jmp	.Ltmp421 # Offset: 12995
.Ltmp328:
    000032c8: 	movq	%r12, %rsi
    000032cb: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000032d2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13010
    000032d7: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000032de: 	jmp	.Ltmp422 # Offset: 13022
.Ltmp206:
    000032e3: 	movq	%r12, %rsi
    000032e6: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000032ed: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13037
    000032f2: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000032f9: 	jmp	.Ltmp423 # Offset: 13049
.Ltmp194:
    000032fe: 	movq	%r12, %rsi
    00003301: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003308: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13064
    0000330d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003314: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000331b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00003322: 	jne	.Ltmp424 # Offset: 13090
.Ltmp199:
    00003328: 	movq	-0x8(%rdx), %rax
    0000332c: 	addq	$0x200, %rax
    00003332: 	jmp	.Ltmp424 # Offset: 13106
.Ltmp304:
    00003337: 	movq	%r12, %rsi
    0000333a: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003341: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13121
    00003346: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000334d: 	jmp	.Ltmp425 # Offset: 13133
.Ltmp345:
    00003352: 	movq	-0x8(%rdx), %rax
    00003356: 	addq	$0x200, %rax
    0000335c: 	jmp	.Ltmp426 # Offset: 13148
.Ltmp340:
    00003361: 	movq	%r12, %rsi
    00003364: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000336b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13163
    00003370: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003377: 	jmp	.Ltmp427 # Offset: 13175
.Ltmp352:
    0000337c: 	movq	%r12, %rsi
    0000337f: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003386: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13190
    0000338b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003392: 	jmp	.Ltmp428 # Offset: 13202
.Ltmp285:
    00003397: 	movq	-0x8(%rdx), %rax
    0000339b: 	addq	$0x200, %rax
    000033a1: 	jmp	.Ltmp429 # Offset: 13217
.Ltmp280:
    000033a6: 	movq	%r12, %rsi
    000033a9: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000033b0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13232
    000033b5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000033bc: 	jmp	.Ltmp430 # Offset: 13244
.Ltmp131:
    000033c1: 	testq	%r13, %r13
    000033c4: 	je	.Ltmp379 # Offset: 13252
    000033ca: 	jmp	.Ltmp431 # Offset: 13258
    000033cf: 	nop # Size: 1
.Ltmp344:
    000033d0: 	testq	%r13, %r13
    000033d3: 	je	.Ltmp432 # Offset: 13267
    000033d9: 	jmp	.Ltmp433 # Offset: 13273
    000033de: 	nop # Size: 2
.Ltmp198:
    000033e0: 	testq	%r13, %r13
    000033e3: 	je	.Ltmp434 # Offset: 13283
    000033e9: 	jmp	.Ltmp435 # Offset: 13289
    000033ee: 	nop # Size: 2
.Ltmp296:
    000033f0: 	testq	%r13, %r13
    000033f3: 	je	.Ltmp436 # Offset: 13299
    000033f9: 	jmp	.Ltmp437 # Offset: 13305
    000033fe: 	nop # Size: 2
.Ltmp284:
    00003400: 	testq	%r13, %r13
    00003403: 	je	.Ltmp438 # Offset: 13315
    00003409: 	jmp	.Ltmp439 # Offset: 13321
    0000340e: 	nop # Size: 2
.Ltmp217:
    00003410: 	testq	%r13, %r13
    00003413: 	je	.Ltmp440 # Offset: 13331
    00003419: 	jmp	.Ltmp441 # Offset: 13337
    0000341e: 	nop # Size: 2
.Ltmp167:
    00003420: 	testq	%r13, %r13
    00003423: 	je	.Ltmp442 # Offset: 13347
    00003429: 	jmp	.Ltmp443 # Offset: 13353
    0000342e: 	nop # Size: 2
.Ltmp308:
    00003430: 	testq	%r13, %r13
    00003433: 	je	.Ltmp444 # Offset: 13363
    00003439: 	jmp	.Ltmp445 # Offset: 13369
    0000343e: 	nop # Size: 2
.Ltmp332:
    00003440: 	testq	%r13, %r13
    00003443: 	je	.Ltmp446 # Offset: 13379
.Ltmp470:
    00003449: 	movq	(%rsp), %rsi
    0000344d: 	movq	%r13, %rdx
    00003450: 	callq	memcpy@PLT # Offset: 13392
    00003455: 	movq	0xb8(%rsp), %r13
    0000345d: 	movq	(%r15), %rdi
    00003460: 	jmp	.Ltmp446 # Offset: 13408
.Ltmp155:
    00003465: 	testq	%r13, %r13
    00003468: 	je	.Ltmp447 # Offset: 13416
    0000346e: 	jmp	.Ltmp448 # Offset: 13422
    00003473: 	nopl	(%rax,%rax) # Size: 5
.Ltmp143:
    00003478: 	testq	%r13, %r13
    0000347b: 	je	.Ltmp449 # Offset: 13435
    00003481: 	jmp	.Ltmp450 # Offset: 13441
    00003486: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp236:
    00003490: 	testq	%r13, %r13
    00003493: 	je	.Ltmp451 # Offset: 13459
    00003499: 	jmp	.Ltmp452 # Offset: 13465
    0000349e: 	nop # Size: 2
.Ltmp179:
    000034a0: 	testq	%r13, %r13
    000034a3: 	je	.Ltmp453 # Offset: 13475
.Ltmp472:
    000034a9: 	movq	(%rsp), %rsi
    000034ad: 	movq	%r13, %rdx
    000034b0: 	callq	memcpy@PLT # Offset: 13488
    000034b5: 	movq	0xb8(%rsp), %r13
    000034bd: 	movq	(%r15), %rdi
    000034c0: 	jmp	.Ltmp453 # Offset: 13504
.Ltmp210:
    000034c5: 	testq	%r13, %r13
    000034c8: 	je	.Ltmp454 # Offset: 13512
    000034ce: 	jmp	.Ltmp455 # Offset: 13518
    000034d3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp272:
    000034d8: 	testq	%r13, %r13
    000034db: 	je	.Ltmp456 # Offset: 13531
    000034e1: 	jmp	.Ltmp457 # Offset: 13537
    000034e6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp368:
    000034f0: 	testq	%r13, %r13
    000034f3: 	je	.Ltmp458 # Offset: 13555
    000034f9: 	jmp	.Ltmp459 # Offset: 13561
    000034fe: 	nop # Size: 2
.Ltmp320:
    00003500: 	testq	%r13, %r13
    00003503: 	je	.Ltmp460 # Offset: 13571
.Ltmp471:
    00003509: 	movq	(%rsp), %rsi
    0000350d: 	movq	%r13, %rdx
    00003510: 	callq	memcpy@PLT # Offset: 13584
    00003515: 	movq	0xb8(%rsp), %r13
    0000351d: 	movq	(%r15), %rdi
    00003520: 	jmp	.Ltmp460 # Offset: 13600
.Ltmp248:
    00003525: 	testq	%r13, %r13
    00003528: 	je	.Ltmp461 # Offset: 13608
    0000352e: 	jmp	.Ltmp462 # Offset: 13614
    00003533: 	nopl	(%rax,%rax) # Size: 5
.Ltmp356:
    00003538: 	testq	%r13, %r13
    0000353b: 	je	.Ltmp463 # Offset: 13627
    00003541: 	jmp	.Ltmp464 # Offset: 13633
    00003546: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp229:
    00003550: 	testq	%r13, %r13
    00003553: 	je	.Ltmp465 # Offset: 13651
    00003559: 	jmp	.Ltmp466 # Offset: 13657
    0000355e: 	nop # Size: 2
.Ltmp186:
    00003560: 	testq	%r13, %r13
    00003563: 	je	.Ltmp467 # Offset: 13667
.Ltmp473:
    00003569: 	movq	(%rsp), %rsi
    0000356d: 	movq	%r13, %rdx
    00003570: 	callq	memcpy@PLT # Offset: 13680
    00003575: 	movq	0xb8(%rsp), %r13
    0000357d: 	movq	(%r15), %rdi
    00003580: 	jmp	.Ltmp467 # Offset: 13696
.Ltmp260:
    00003585: 	testq	%r13, %r13
    00003588: 	je	.Ltmp468 # Offset: 13704
.Ltmp469:
    0000358e: 	movq	(%rsp), %rsi
    00003592: 	movq	%r13, %rdx
    00003595: 	callq	memcpy@PLT # Offset: 13717
    0000359a: 	movq	0xb8(%rsp), %r13
    000035a2: 	movq	(%r15), %rdi
    000035a5: 	jmp	.Ltmp468 # Offset: 13733
.Ltmp343:
    000035aa: 	leaq	0xb8(%rsp), %rsi
    000035b2: 	xorl	%edx, %edx
    000035b4: 	movq	%r15, %rdi
    000035b7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 13751
    000035bc: 	movq	%rax, (%r15)
    000035bf: 	movq	%rax, %rdi
    000035c2: 	movq	0xb8(%rsp), %rax
    000035ca: 	movq	%rax, 0x10(%r15)
.Ltmp433:
    000035ce: 	movq	(%rsp), %rsi
    000035d2: 	movq	%r13, %rdx
    000035d5: 	callq	memcpy@PLT # Offset: 13781
    000035da: 	movq	0xb8(%rsp), %r13
    000035e2: 	movq	(%r15), %rdi
    000035e5: 	jmp	.Ltmp432 # Offset: 13797
.Ltmp283:
    000035ea: 	leaq	0xb8(%rsp), %rsi
    000035f2: 	xorl	%edx, %edx
    000035f4: 	movq	%r15, %rdi
    000035f7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 13815
    000035fc: 	movq	%rax, (%r15)
    000035ff: 	movq	%rax, %rdi
    00003602: 	movq	0xb8(%rsp), %rax
    0000360a: 	movq	%rax, 0x10(%r15)
.Ltmp439:
    0000360e: 	movq	(%rsp), %rsi
    00003612: 	movq	%r13, %rdx
    00003615: 	callq	memcpy@PLT # Offset: 13845
    0000361a: 	movq	0xb8(%rsp), %r13
    00003622: 	movq	(%r15), %rdi
    00003625: 	jmp	.Ltmp438 # Offset: 13861
.Ltmp197:
    0000362a: 	leaq	0xb8(%rsp), %rsi
    00003632: 	xorl	%edx, %edx
    00003634: 	movq	%r15, %rdi
    00003637: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 13879
    0000363c: 	movq	%rax, (%r15)
    0000363f: 	movq	%rax, %rdi
    00003642: 	movq	0xb8(%rsp), %rax
    0000364a: 	movq	%rax, 0x10(%r15)
.Ltmp435:
    0000364e: 	movq	(%rsp), %rsi
    00003652: 	movq	%r13, %rdx
    00003655: 	callq	memcpy@PLT # Offset: 13909
    0000365a: 	movq	0xb8(%rsp), %r13
    00003662: 	movq	(%r15), %rdi
    00003665: 	jmp	.Ltmp434 # Offset: 13925
.Ltmp295:
    0000366a: 	leaq	0xb8(%rsp), %rsi
    00003672: 	xorl	%edx, %edx
    00003674: 	movq	%r15, %rdi
    00003677: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 13943
    0000367c: 	movq	%rax, (%r15)
    0000367f: 	movq	%rax, %rdi
    00003682: 	movq	0xb8(%rsp), %rax
    0000368a: 	movq	%rax, 0x10(%r15)
.Ltmp437:
    0000368e: 	movq	(%rsp), %rsi
    00003692: 	movq	%r13, %rdx
    00003695: 	callq	memcpy@PLT # Offset: 13973
    0000369a: 	movq	0xb8(%rsp), %r13
    000036a2: 	movq	(%r15), %rdi
    000036a5: 	jmp	.Ltmp436 # Offset: 13989
.Ltmp307:
    000036aa: 	leaq	0xb8(%rsp), %rsi
    000036b2: 	xorl	%edx, %edx
    000036b4: 	movq	%r15, %rdi
    000036b7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14007
    000036bc: 	movq	%rax, (%r15)
    000036bf: 	movq	%rax, %rdi
    000036c2: 	movq	0xb8(%rsp), %rax
    000036ca: 	movq	%rax, 0x10(%r15)
.Ltmp445:
    000036ce: 	movq	(%rsp), %rsi
    000036d2: 	movq	%r13, %rdx
    000036d5: 	callq	memcpy@PLT # Offset: 14037
    000036da: 	movq	0xb8(%rsp), %r13
    000036e2: 	movq	(%r15), %rdi
    000036e5: 	jmp	.Ltmp444 # Offset: 14053
.Ltmp355:
    000036ea: 	leaq	0xb8(%rsp), %rsi
    000036f2: 	xorl	%edx, %edx
    000036f4: 	movq	%r15, %rdi
    000036f7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14071
    000036fc: 	movq	%rax, (%r15)
    000036ff: 	movq	%rax, %rdi
    00003702: 	movq	0xb8(%rsp), %rax
    0000370a: 	movq	%rax, 0x10(%r15)
.Ltmp464:
    0000370e: 	movq	(%rsp), %rsi
    00003712: 	movq	%r13, %rdx
    00003715: 	callq	memcpy@PLT # Offset: 14101
    0000371a: 	movq	0xb8(%rsp), %r13
    00003722: 	movq	(%r15), %rdi
    00003725: 	jmp	.Ltmp463 # Offset: 14117
.Ltmp216:
    0000372a: 	leaq	0xb8(%rsp), %rsi
    00003732: 	xorl	%edx, %edx
    00003734: 	movq	%r15, %rdi
    00003737: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14135
    0000373c: 	movq	%rax, (%r15)
    0000373f: 	movq	%rax, %rdi
    00003742: 	movq	0xb8(%rsp), %rax
    0000374a: 	movq	%rax, 0x10(%r15)
.Ltmp441:
    0000374e: 	movq	(%rsp), %rsi
    00003752: 	movq	%r13, %rdx
    00003755: 	callq	memcpy@PLT # Offset: 14165
    0000375a: 	movq	0xb8(%rsp), %r13
    00003762: 	movq	(%r15), %rdi
    00003765: 	jmp	.Ltmp440 # Offset: 14181
.Ltmp209:
    0000376a: 	leaq	0xb8(%rsp), %rsi
    00003772: 	xorl	%edx, %edx
    00003774: 	movq	%r15, %rdi
    00003777: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14199
    0000377c: 	movq	%rax, (%r15)
    0000377f: 	movq	%rax, %rdi
    00003782: 	movq	0xb8(%rsp), %rax
    0000378a: 	movq	%rax, 0x10(%r15)
.Ltmp455:
    0000378e: 	movq	(%rsp), %rsi
    00003792: 	movq	%r13, %rdx
    00003795: 	callq	memcpy@PLT # Offset: 14229
    0000379a: 	movq	0xb8(%rsp), %r13
    000037a2: 	movq	(%r15), %rdi
    000037a5: 	jmp	.Ltmp454 # Offset: 14245
.Ltmp154:
    000037aa: 	leaq	0xb8(%rsp), %rsi
    000037b2: 	xorl	%edx, %edx
    000037b4: 	movq	%r15, %rdi
    000037b7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14263
    000037bc: 	movq	%rax, (%r15)
    000037bf: 	movq	%rax, %rdi
    000037c2: 	movq	0xb8(%rsp), %rax
    000037ca: 	movq	%rax, 0x10(%r15)
.Ltmp448:
    000037ce: 	movq	(%rsp), %rsi
    000037d2: 	movq	%r13, %rdx
    000037d5: 	callq	memcpy@PLT # Offset: 14293
    000037da: 	movq	0xb8(%rsp), %r13
    000037e2: 	movq	(%r15), %rdi
    000037e5: 	jmp	.Ltmp447 # Offset: 14309
.Ltmp247:
    000037ea: 	leaq	0xb8(%rsp), %rsi
    000037f2: 	xorl	%edx, %edx
    000037f4: 	movq	%r15, %rdi
    000037f7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14327
    000037fc: 	movq	%rax, (%r15)
    000037ff: 	movq	%rax, %rdi
    00003802: 	movq	0xb8(%rsp), %rax
    0000380a: 	movq	%rax, 0x10(%r15)
.Ltmp462:
    0000380e: 	movq	(%rsp), %rsi
    00003812: 	movq	%r13, %rdx
    00003815: 	callq	memcpy@PLT # Offset: 14357
    0000381a: 	movq	0xb8(%rsp), %r13
    00003822: 	movq	(%r15), %rdi
    00003825: 	jmp	.Ltmp461 # Offset: 14373
.Ltmp142:
    0000382a: 	leaq	0xb8(%rsp), %rsi
    00003832: 	xorl	%edx, %edx
    00003834: 	movq	%r15, %rdi
    00003837: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14391
    0000383c: 	movq	%rax, (%r15)
    0000383f: 	movq	%rax, %rdi
    00003842: 	movq	0xb8(%rsp), %rax
    0000384a: 	movq	%rax, 0x10(%r15)
.Ltmp450:
    0000384e: 	movq	(%rsp), %rsi
    00003852: 	movq	%r13, %rdx
    00003855: 	callq	memcpy@PLT # Offset: 14421
    0000385a: 	movq	0xb8(%rsp), %r13
    00003862: 	movq	(%r15), %rdi
    00003865: 	jmp	.Ltmp449 # Offset: 14437
.Ltmp166:
    0000386a: 	leaq	0xb8(%rsp), %rsi
    00003872: 	xorl	%edx, %edx
    00003874: 	movq	%r15, %rdi
    00003877: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14455
    0000387c: 	movq	%rax, (%r15)
    0000387f: 	movq	%rax, %rdi
    00003882: 	movq	0xb8(%rsp), %rax
    0000388a: 	movq	%rax, 0x10(%r15)
.Ltmp443:
    0000388e: 	movq	(%rsp), %rsi
    00003892: 	movq	%r13, %rdx
    00003895: 	callq	memcpy@PLT # Offset: 14485
    0000389a: 	movq	0xb8(%rsp), %r13
    000038a2: 	movq	(%r15), %rdi
    000038a5: 	jmp	.Ltmp442 # Offset: 14501
.Ltmp271:
    000038aa: 	leaq	0xb8(%rsp), %rsi
    000038b2: 	xorl	%edx, %edx
    000038b4: 	movq	%r15, %rdi
    000038b7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14519
    000038bc: 	movq	%rax, (%r15)
    000038bf: 	movq	%rax, %rdi
    000038c2: 	movq	0xb8(%rsp), %rax
    000038ca: 	movq	%rax, 0x10(%r15)
.Ltmp457:
    000038ce: 	movq	(%rsp), %rsi
    000038d2: 	movq	%r13, %rdx
    000038d5: 	callq	memcpy@PLT # Offset: 14549
    000038da: 	movq	0xb8(%rsp), %r13
    000038e2: 	movq	(%r15), %rdi
    000038e5: 	jmp	.Ltmp456 # Offset: 14565
.Ltmp228:
    000038ea: 	leaq	0xb8(%rsp), %rsi
    000038f2: 	xorl	%edx, %edx
    000038f4: 	movq	%r15, %rdi
    000038f7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14583
    000038fc: 	movq	%rax, (%r15)
    000038ff: 	movq	%rax, %rdi
    00003902: 	movq	0xb8(%rsp), %rax
    0000390a: 	movq	%rax, 0x10(%r15)
.Ltmp466:
    0000390e: 	movq	(%rsp), %rsi
    00003912: 	movq	%r13, %rdx
    00003915: 	callq	memcpy@PLT # Offset: 14613
    0000391a: 	movq	0xb8(%rsp), %r13
    00003922: 	movq	(%r15), %rdi
    00003925: 	jmp	.Ltmp465 # Offset: 14629
.Ltmp367:
    0000392a: 	leaq	0xb8(%rsp), %rsi
    00003932: 	xorl	%edx, %edx
    00003934: 	movq	%rbx, %rdi
    00003937: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14647
    0000393c: 	movq	%rax, (%rbx)
    0000393f: 	movq	%rax, %rdi
    00003942: 	movq	0xb8(%rsp), %rax
    0000394a: 	movq	%rax, 0x10(%rbx)
.Ltmp459:
    0000394e: 	movq	%r13, %rdx
    00003951: 	movq	%rbp, %rsi
    00003954: 	callq	memcpy@PLT # Offset: 14676
    00003959: 	movq	0xb8(%rsp), %r13
    00003961: 	movq	(%rbx), %rdi
    00003964: 	jmp	.Ltmp458 # Offset: 14692
.Ltmp259:
    00003969: 	leaq	0xb8(%rsp), %rsi
    00003971: 	xorl	%edx, %edx
    00003973: 	movq	%r15, %rdi
    00003976: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14710
    0000397b: 	movq	%rax, (%r15)
    0000397e: 	movq	%rax, %rdi
    00003981: 	movq	0xb8(%rsp), %rax
    00003989: 	movq	%rax, 0x10(%r15)
    0000398d: 	jmp	.Ltmp469 # Offset: 14733
.Ltmp235:
    00003992: 	leaq	0xb8(%rsp), %rsi
    0000399a: 	xorl	%edx, %edx
    0000399c: 	movq	%r15, %rdi
    0000399f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14751
    000039a4: 	movq	%rax, (%r15)
    000039a7: 	movq	%rax, %rdi
    000039aa: 	movq	0xb8(%rsp), %rax
    000039b2: 	movq	%rax, 0x10(%r15)
.Ltmp452:
    000039b6: 	movq	(%rsp), %rsi
    000039ba: 	movq	%r13, %rdx
    000039bd: 	callq	memcpy@PLT # Offset: 14781
    000039c2: 	movq	0xb8(%rsp), %r13
    000039ca: 	movq	(%r15), %rdi
    000039cd: 	jmp	.Ltmp451 # Offset: 14797
.Ltmp331:
    000039d2: 	leaq	0xb8(%rsp), %rsi
    000039da: 	xorl	%edx, %edx
    000039dc: 	movq	%r15, %rdi
    000039df: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14815
    000039e4: 	movq	%rax, (%r15)
    000039e7: 	movq	%rax, %rdi
    000039ea: 	movq	0xb8(%rsp), %rax
    000039f2: 	movq	%rax, 0x10(%r15)
    000039f6: 	jmp	.Ltmp470 # Offset: 14838
.Ltmp319:
    000039fb: 	leaq	0xb8(%rsp), %rsi
    00003a03: 	xorl	%edx, %edx
    00003a05: 	movq	%r15, %rdi
    00003a08: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14856
    00003a0d: 	movq	%rax, (%r15)
    00003a10: 	movq	%rax, %rdi
    00003a13: 	movq	0xb8(%rsp), %rax
    00003a1b: 	movq	%rax, 0x10(%r15)
    00003a1f: 	jmp	.Ltmp471 # Offset: 14879
.Ltmp178:
    00003a24: 	leaq	0xb8(%rsp), %rsi
    00003a2c: 	xorl	%edx, %edx
    00003a2e: 	movq	%r15, %rdi
    00003a31: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14897
    00003a36: 	movq	%rax, (%r15)
    00003a39: 	movq	%rax, %rdi
    00003a3c: 	movq	0xb8(%rsp), %rax
    00003a44: 	movq	%rax, 0x10(%r15)
    00003a48: 	jmp	.Ltmp472 # Offset: 14920
.Ltmp185:
    00003a4d: 	leaq	0xb8(%rsp), %rsi
    00003a55: 	xorl	%edx, %edx
    00003a57: 	movq	%r15, %rdi
    00003a5a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14938
    00003a5f: 	movq	%rax, (%r15)
    00003a62: 	movq	%rax, %rdi
    00003a65: 	movq	0xb8(%rsp), %rax
    00003a6d: 	movq	%rax, 0x10(%r15)
    00003a71: 	jmp	.Ltmp473 # Offset: 14961
.Ltmp141:
    00003a76: 	leaq	DATAat0x23158(%rip), %rdi
    00003a7d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 14973
.Ltmp153:
    00003a82: 	leaq	DATAat0x23158(%rip), %rdi
    00003a89: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 14985
.Ltmp165:
    00003a8e: 	leaq	DATAat0x23158(%rip), %rdi
    00003a95: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 14997
.Ltmp177:
    00003a9a: 	leaq	DATAat0x23158(%rip), %rdi
    00003aa1: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15009
.Ltmp184:
    00003aa6: 	leaq	DATAat0x23158(%rip), %rdi
    00003aad: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15021
.Ltmp196:
    00003ab2: 	leaq	DATAat0x23158(%rip), %rdi
    00003ab9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15033
.Ltmp208:
    00003abe: 	leaq	DATAat0x23158(%rip), %rdi
    00003ac5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15045
.Ltmp215:
    00003aca: 	leaq	DATAat0x23158(%rip), %rdi
    00003ad1: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15057
.Ltmp227:
    00003ad6: 	leaq	DATAat0x23158(%rip), %rdi
    00003add: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15069
.Ltmp234:
    00003ae2: 	leaq	DATAat0x23158(%rip), %rdi
    00003ae9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15081
.Ltmp246:
    00003aee: 	leaq	DATAat0x23158(%rip), %rdi
    00003af5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15093
.Ltmp258:
    00003afa: 	leaq	DATAat0x23158(%rip), %rdi
    00003b01: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15105
.Ltmp270:
    00003b06: 	leaq	DATAat0x23158(%rip), %rdi
    00003b0d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15117
.Ltmp282:
    00003b12: 	leaq	DATAat0x23158(%rip), %rdi
    00003b19: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15129
.Ltmp294:
    00003b1e: 	leaq	DATAat0x23158(%rip), %rdi
    00003b25: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15141
.Ltmp306:
    00003b2a: 	leaq	DATAat0x23158(%rip), %rdi
    00003b31: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15153
.Ltmp318:
    00003b36: 	leaq	DATAat0x23158(%rip), %rdi
    00003b3d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15165
.Ltmp330:
    00003b42: 	leaq	DATAat0x23158(%rip), %rdi
    00003b49: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15177
.Ltmp342:
    00003b4e: 	leaq	DATAat0x23158(%rip), %rdi
    00003b55: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15189
.Ltmp354:
    00003b5a: 	leaq	DATAat0x23158(%rip), %rdi
    00003b61: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15201
.Ltmp366:
    00003b66: 	leaq	DATAat0x23158(%rip), %rdi
    00003b6d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15213
.Ltmp374:
    00003b72: 	callq	__stack_chk_fail@PLT # Offset: 15218
.Ltmp129:
    00003b77: 	leaq	DATAat0x23158(%rip), %rdi
    00003b7e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15230
    00003b83: 	endbr64
    00003b87: 	movq	%rax, %rbp
    00003b8a: 	jmp	.Ltmp474 # Offset: 15242
    00003b8c: 	endbr64
.Ltmp476:
    00003b90: 	movq	%rax, %rbp
    00003b93: 	jmp	.Ltmp475 # Offset: 15251
    00003b95: 	endbr64
    00003b99: 	jmp	.Ltmp476 # Offset: 15257
    00003b9b: 	endbr64
    00003b9f: 	jmp	.Ltmp476 # Offset: 15263
    00003ba1: 	endbr64
    00003ba5: 	jmp	.Ltmp476 # Offset: 15269
    00003ba7: 	endbr64
    00003bab: 	jmp	.Ltmp476 # Offset: 15275
.Ltmp479:
    00003bad: 	movq	0x100(%rsp), %rdi
    00003bb5: 	cmpq	0xa0(%rsp), %rdi
    00003bbd: 	je	.Ltmp474 # Offset: 15293
.Ltmp482:
    00003bbf: 	movq	0x110(%rsp), %rax
    00003bc7: 	leaq	0x1(%rax), %rsi
    00003bcb: 	callq	_ZdlPvm@PLT # Offset: 15307
.Ltmp474:
    00003bd0: 	movq	0xc0(%rsp), %rdi
    00003bd8: 	cmpq	0xa8(%rsp), %rdi
    00003be0: 	je	.Ltmp477 # Offset: 15328
    00003be2: 	movq	0xd0(%rsp), %rax
    00003bea: 	leaq	0x1(%rax), %rsi
    00003bee: 	callq	_ZdlPvm@PLT # Offset: 15342
.Ltmp477:
    00003bf3: 	movq	%rbp, %rdi
    00003bf6: 	callq	_Unwind_Resume@PLT # Offset: 15350
    00003bfb: 	endbr64
    00003bff: 	movq	%rax, %rbp
    00003c02: 	jmp	.Ltmp478 # Offset: 15362
    00003c04: 	endbr64
    00003c08: 	jmp	.Ltmp476 # Offset: 15368
.Ltmp475:
    00003c0a: 	movq	0x100(%rsp), %rdi
    00003c12: 	cmpq	0xa0(%rsp), %rdi
    00003c1a: 	je	.Ltmp478 # Offset: 15386
    00003c1c: 	movq	0x110(%rsp), %rax
    00003c24: 	leaq	0x1(%rax), %rsi
    00003c28: 	callq	_ZdlPvm@PLT # Offset: 15400
.Ltmp478:
    00003c2d: 	movq	0xe0(%rsp), %rdi
    00003c35: 	leaq	0xf0(%rsp), %rax
    00003c3d: 	cmpq	%rax, %rdi
    00003c40: 	je	.Ltmp474 # Offset: 15424
    00003c42: 	movq	0xf0(%rsp), %rax
    00003c4a: 	leaq	0x1(%rax), %rsi
    00003c4e: 	callq	_ZdlPvm@PLT # Offset: 15438
    00003c53: 	jmp	.Ltmp474 # Offset: 15443
    00003c58: 	endbr64
.Ltmp480:
    00003c5c: 	movq	%rax, %rbp
    00003c5f: 	jmp	.Ltmp479 # Offset: 15455
    00003c64: 	endbr64
    00003c68: 	jmp	.Ltmp476 # Offset: 15464
    00003c6d: 	endbr64
    00003c71: 	jmp	.Ltmp476 # Offset: 15473
    00003c76: 	endbr64
    00003c7a: 	jmp	.Ltmp480 # Offset: 15482
    00003c7c: 	endbr64
    00003c80: 	jmp	.Ltmp480 # Offset: 15488
    00003c82: 	endbr64
    00003c86: 	jmp	.Ltmp480 # Offset: 15494
    00003c88: 	endbr64
    00003c8c: 	jmp	.Ltmp480 # Offset: 15500
    00003c8e: 	endbr64
    00003c92: 	jmp	.Ltmp480 # Offset: 15506
    00003c94: 	endbr64
    00003c98: 	jmp	.Ltmp480 # Offset: 15512
    00003c9a: 	endbr64
    00003c9e: 	jmp	.Ltmp480 # Offset: 15518
    00003ca0: 	endbr64
    00003ca4: 	movq	%rax, %rbp
    00003ca7: 	jmp	.Ltmp481 # Offset: 15527
    00003ca9: 	endbr64
    00003cad: 	jmp	.Ltmp476 # Offset: 15533
.Ltmp481:
    00003cb2: 	movq	0x100(%rsp), %rdi
    00003cba: 	leaq	0x110(%rsp), %rax
    00003cc2: 	cmpq	%rax, %rdi
    00003cc5: 	jne	.Ltmp482 # Offset: 15557
    00003ccb: 	jmp	.Ltmp474 # Offset: 15563
    00003cd0: 	endbr64
    00003cd4: 	jmp	.Ltmp480 # Offset: 15572
    00003cd6: 	endbr64
    00003cda: 	jmp	.Ltmp480 # Offset: 15578
    00003cdc: 	endbr64
    00003ce0: 	jmp	.Ltmp476 # Offset: 15584
    00003ce5: 	endbr64
    00003ce9: 	jmp	.Ltmp476 # Offset: 15593
    00003cee: 	endbr64
    00003cf2: 	jmp	.Ltmp476 # Offset: 15602
DWARF CFI Instructions:
    <empty>
End of Function "_Z19TestOneTypeFloatingIdEvv"

Binary Function "_Z19TestOneTypeFloatingIfEvv" after disassembly {
  Number      : 44
  State       : disassembled
  Address     : 0x67b0
  Size        : 0x40f9
  MaxSize     : 0x4100
  Offset      : 0x67b0
  Section     : .text
  Orc Section : .local.text._Z19TestOneTypeFloatingIfEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB043:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x7000(%rsp), %r11
.Ltmp483:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp483 # Offset: 37
    00000027: 	subq	$0xe28, %rsp
    0000002e: 	movdqa	_Z7gLabelsB5cxx11+16(%rip), %xmm4
    00000036: 	movdqa	_Z7gLabelsB5cxx11+32(%rip), %xmm6
    0000003e: 	movq	_Z7gLabelsB5cxx11+56(%rip), %r14
    00000045: 	movq	%xmm4, %rbp
    0000004a: 	movq	%fs:0x28, %rax
    00000053: 	movq	%rax, 0x7e18(%rsp)
    0000005b: 	xorl	%eax, %eax
    0000005d: 	leaq	0xc0(%rsp), %rax
    00000065: 	movaps	%xmm4, 0x30(%rsp)
    0000006a: 	movhlps	%xmm6, %xmm4
    0000006d: 	movq	%rax, 0x98(%rsp)
    00000075: 	movq	%xmm4, %rcx
    0000007a: 	movq	%rax, 0xb0(%rsp)
    00000082: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000089: 	leaq	0x8(%rcx), %r12
    0000008d: 	movl	$0x616f6c66, 0xc0(%rsp)
    00000098: 	movq	%r12, %r13
    0000009b: 	movq	%rax, 0x10(%rsp)
    000000a0: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rax
    000000a7: 	movb	$0x74, 0xc4(%rsp)
    000000af: 	movq	$0x5, 0xb8(%rsp)
    000000bb: 	movb	$0x0, 0xc5(%rsp)
    000000c3: 	movq	%rax, (%rsp)
    000000c7: 	movaps	%xmm6, 0x40(%rsp)
    000000cc: 	movq	%xmm4, 0x70(%rsp)
    000000d2: 	movq	%xmm6, 0x28(%rsp)
    000000d8: 	cmpq	%r12, %rax
    000000db: 	jbe	.Ltmp484 # Offset: 219
    000000dd: 	nopl	(%rax) # Size: 3
.Ltmp487:
    000000e0: 	movq	(%r13), %r15
    000000e4: 	leaq	0x200(%r15), %rbx
    000000eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp486:
    000000f0: 	movq	(%r15), %rdi
    000000f3: 	leaq	0x10(%r15), %rdx
    000000f7: 	cmpq	%rdx, %rdi
    000000fa: 	je	.Ltmp485 # Offset: 250
    00000100: 	movq	0x10(%r15), %rax
    00000104: 	addq	$0x20, %r15
    00000108: 	leaq	0x1(%rax), %rsi
    0000010c: 	callq	_ZdlPvm@PLT # Offset: 268
    00000111: 	cmpq	%rbx, %r15
    00000114: 	jne	.Ltmp486 # Offset: 276
    00000116: 	addq	$0x8, %r13
    0000011a: 	cmpq	%r13, (%rsp)
    0000011e: 	ja	.Ltmp487 # Offset: 286
.Ltmp484:
    00000120: 	movq	0x70(%rsp), %rcx
    00000125: 	cmpq	%rcx, (%rsp)
    00000129: 	jne	.Ltmp488 # Offset: 297
    0000012b: 	jmp	.Ltmp489 # Offset: 299
.Ltmp491:
    00000130: 	movq	(%rbp), %rdi
    00000134: 	leaq	0x10(%rbp), %rax
    00000138: 	cmpq	%rax, %rdi
    0000013b: 	je	.Ltmp490 # Offset: 315
    0000013d: 	movq	0x10(%rbp), %rax
    00000141: 	leaq	0x1(%rax), %rsi
    00000145: 	callq	_ZdlPvm@PLT # Offset: 325
.Ltmp490:
    0000014a: 	addq	$0x20, %rbp
.Ltmp488:
    0000014e: 	cmpq	0x28(%rsp), %rbp
    00000153: 	jne	.Ltmp491 # Offset: 339
    00000155: 	cmpq	%r14, 0x10(%rsp)
    0000015a: 	je	.Ltmp492 # Offset: 346
    0000015c: 	nopl	(%rax) # Size: 4
.Ltmp494:
    00000160: 	movq	(%r14), %rdi
    00000163: 	leaq	0x10(%r14), %rax
    00000167: 	cmpq	%rax, %rdi
    0000016a: 	je	.Ltmp493 # Offset: 362
    0000016c: 	movq	0x10(%r14), %rax
    00000170: 	leaq	0x1(%rax), %rsi
    00000174: 	callq	_ZdlPvm@PLT # Offset: 372
.Ltmp493:
    00000179: 	addq	$0x20, %r14
    0000017d: 	cmpq	%r14, 0x10(%rsp)
    00000182: 	jne	.Ltmp494 # Offset: 386
.Ltmp492:
    00000184: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rax
    0000018b: 	leaq	0x8(%rax), %rbx
    0000018f: 	cmpq	%r12, %rbx
    00000192: 	jbe	.Ltmp495 # Offset: 402
    00000194: 	nopl	(%rax) # Size: 4
.Ltmp496:
    00000198: 	movq	(%r12), %rdi
    0000019c: 	movl	$0x200, %esi
    000001a1: 	addq	$0x8, %r12
    000001a5: 	callq	_ZdlPvm@PLT # Offset: 421
    000001aa: 	cmpq	%r12, %rbx
    000001ad: 	ja	.Ltmp496 # Offset: 429
.Ltmp495:
    000001af: 	movdqa	0x30(%rsp), %xmm5
    000001b5: 	leaq	0x110(%rsp), %rbp
    000001bd: 	pxor	%xmm0, %xmm0
    000001c1: 	leaq	0x7e10(%rsp), %rbx
    000001c9: 	movq	%rbp, %rax
    000001cc: 	cvtsd2ss	init_value(%rip), %xmm0
    000001d4: 	shufps	$0x0, %xmm0, %xmm0
    000001d8: 	movaps	%xmm5, _Z7gLabelsB5cxx11+48(%rip)
    000001df: 	movdqa	0x40(%rsp), %xmm5
    000001e5: 	movaps	%xmm5, _Z7gLabelsB5cxx11+64(%rip)
    000001ec: 	nopl	(%rax) # Size: 4
.Ltmp497:
    000001f0: 	movaps	%xmm0, (%rax)
    000001f3: 	addq	$0x10, %rax
    000001f7: 	cmpq	%rbx, %rax
    000001fa: 	jne	.Ltmp497 # Offset: 506
    000001fc: 	movl	base_iterations(%rip), %eax
    00000202: 	leaq	0xf0(%rsp), %r12
    0000020a: 	leaq	0xb0(%rsp), %r15
    00000212: 	leaq	DATAat0x231c8(%rip), %rdx
    00000219: 	movq	%r15, %rsi
    0000021c: 	movq	%r12, %rdi
    0000021f: 	movl	%eax, iterations(%rip)
    00000225: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 549
    0000022a: 	callq	clock@PLT # Offset: 554
    0000022f: 	movl	iterations(%rip), %edx
    00000235: 	movq	%rax, start_time(%rip)
    0000023c: 	testl	%edx, %edx
    0000023e: 	jle	.Ltmp498 # Offset: 574
    00000244: 	pxor	%xmm5, %xmm5
    00000248: 	movss	DATAat0x234e4(%rip), %xmm4
    00000250: 	xorl	%r13d, %r13d
    00000253: 	leaq	DATAat0x231d2(%rip), %r14
    0000025a: 	movss	%xmm5, 0x30(%rsp)
    00000260: 	movss	DATAat0x23940(%rip), %xmm5
    00000268: 	movss	%xmm4, 0x78(%rsp)
    0000026e: 	movss	DATAat0x235b0(%rip), %xmm4
    00000276: 	movss	%xmm5, (%rsp)
    0000027b: 	movsd	DATAat0x23458(%rip), %xmm5
    00000283: 	movaps	%xmm4, 0x40(%rsp)
    00000288: 	movq	DATAat0x234b0(%rip), %xmm4
    00000290: 	movsd	%xmm5, 0x28(%rsp)
    00000296: 	movsd	DATAat0x234a0(%rip), %xmm5
    0000029e: 	movaps	%xmm4, 0x10(%rsp)
    000002a3: 	movsd	%xmm5, 0x70(%rsp)
    000002a9: 	nopl	(%rax) # Size: 7
.Ltmp502:
    000002b0: 	movl	$0x1f40, %eax
    000002b5: 	pxor	%xmm0, %xmm0
    000002b9: 	nopl	(%rax) # Size: 7
.Ltmp499:
    000002c0: 	addss	0x78(%rsp), %xmm0
    000002c6: 	subl	$0x1, %eax
    000002c9: 	jne	.Ltmp499 # Offset: 713
    000002cb: 	movaps	0x40(%rsp), %xmm7
    000002d0: 	pxor	%xmm2, %xmm2
    000002d4: 	movaps	%xmm0, %xmm1
    000002d7: 	subss	(%rsp), %xmm1
    000002dc: 	andps	%xmm0, %xmm7
    000002df: 	cvtss2sd	%xmm7, %xmm2
    000002e3: 	comisd	0x28(%rsp), %xmm2
    000002e9: 	jbe	.Ltmp500 # Offset: 745
    000002eb: 	divss	%xmm0, %xmm1
.Ltmp500:
    000002ef: 	movsd	0x70(%rsp), %xmm7
    000002f5: 	cvtss2sd	%xmm1, %xmm1
    000002f9: 	andpd	0x10(%rsp), %xmm1
    000002ff: 	comisd	%xmm1, %xmm7
    00000303: 	jbe	.Ltmp501 # Offset: 771
.Ltmp753:
    00000309: 	addl	$0x1, %r13d
    0000030d: 	cmpl	%edx, %r13d
    00000310: 	jl	.Ltmp502 # Offset: 784
.Ltmp498:
    00000312: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000319: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    00000320: 	subq	$0x20, %rax
    00000324: 	cmpq	%rax, %r13
    00000327: 	je	.Ltmp503 # Offset: 807
    0000032d: 	leaq	0x10(%r13), %rdi
    00000331: 	movq	0xf8(%rsp), %r14
    00000339: 	movq	%rdi, (%r13)
    0000033d: 	movq	0xf0(%rsp), %rax
    00000345: 	movq	%rax, %rcx
    00000348: 	movq	%rax, (%rsp)
    0000034c: 	addq	%r14, %rcx
    0000034f: 	je	.Ltmp504 # Offset: 847
    00000351: 	testq	%rax, %rax
    00000354: 	je	.Ltmp505 # Offset: 852
.Ltmp504:
    0000035a: 	movq	%r14, 0xa8(%rsp)
    00000362: 	cmpq	$0xf, %r14
    00000366: 	ja	.Ltmp506 # Offset: 870
    0000036c: 	cmpq	$0x1, %r14
    00000370: 	jne	.Ltmp507 # Offset: 880
    00000376: 	movq	(%rsp), %rax
    0000037a: 	movzbl	(%rax), %eax
    0000037d: 	movb	%al, 0x10(%r13)
.Ltmp754:
    00000381: 	movq	%r14, 0x8(%r13)
    00000385: 	movb	$0x0, (%rdi,%r14)
    0000038a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000391: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000398: 	addq	$0x20, %rax
    0000039c: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000003a3: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    000003aa: 	je	.Ltmp508 # Offset: 938
.Ltmp786:
    000003b0: 	movq	-0x20(%rax), %r13
    000003b4: 	callq	clock@PLT # Offset: 948
    000003b9: 	pxor	%xmm0, %xmm0
    000003bd: 	movq	%rax, end_time(%rip)
    000003c4: 	movq	%r13, %rdi
    000003c7: 	subq	start_time(%rip), %rax
    000003ce: 	cvtsi2sd	%rax, %xmm0
    000003d3: 	divsd	DATAat0x23450(%rip), %xmm0
    000003db: 	callq	_Z13record_resultdPKc # Offset: 987
    000003e0: 	movq	0xf0(%rsp), %rdi
    000003e8: 	leaq	0x100(%rsp), %r14
    000003f0: 	cmpq	%r14, %rdi
    000003f3: 	je	.Ltmp509 # Offset: 1011
    000003f5: 	movq	0x100(%rsp), %rax
    000003fd: 	leaq	0x1(%rax), %rsi
    00000401: 	callq	_ZdlPvm@PLT # Offset: 1025
.Ltmp509:
    00000406: 	leaq	DATAat0x231e2(%rip), %rdx
    0000040d: 	movq	%r15, %rsi
    00000410: 	movq	%r12, %rdi
    00000413: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1043
    00000418: 	callq	clock@PLT # Offset: 1048
    0000041d: 	movl	iterations(%rip), %edx
    00000423: 	movq	%rax, start_time(%rip)
    0000042a: 	testl	%edx, %edx
    0000042c: 	jle	.Ltmp510 # Offset: 1068
    00000432: 	movsd	DATAat0x23458(%rip), %xmm5
    0000043a: 	pxor	%xmm4, %xmm4
    0000043e: 	movss	DATAat0x235b0(%rip), %xmm6
    00000446: 	xorl	%r13d, %r13d
    00000449: 	movss	%xmm4, 0x30(%rsp)
    0000044f: 	movq	DATAat0x234b0(%rip), %xmm4
    00000457: 	movaps	%xmm6, 0x40(%rsp)
    0000045c: 	movsd	DATAat0x234a0(%rip), %xmm6
    00000464: 	movsd	%xmm5, 0x28(%rsp)
    0000046a: 	movss	DATAat0x235f0(%rip), %xmm5
    00000472: 	movaps	%xmm4, 0x10(%rsp)
    00000477: 	movsd	%xmm6, 0x70(%rsp)
    0000047d: 	movss	%xmm5, 0x90(%rsp)
    00000486: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp514:
    00000490: 	movl	$0x1f40, %eax
    00000495: 	pxor	%xmm0, %xmm0
    00000499: 	nopl	(%rax) # Size: 7
.Ltmp511:
    000004a0: 	addss	0x90(%rsp), %xmm0
    000004a9: 	subl	$0x1, %eax
    000004ac: 	jne	.Ltmp511 # Offset: 1196
    000004ae: 	movaps	0x40(%rsp), %xmm3
    000004b3: 	pxor	%xmm2, %xmm2
    000004b7: 	movaps	%xmm0, %xmm1
    000004ba: 	subss	DATAat0x23944(%rip), %xmm1
    000004c2: 	andps	%xmm0, %xmm3
    000004c5: 	cvtss2sd	%xmm3, %xmm2
    000004c9: 	comisd	0x28(%rsp), %xmm2
    000004cf: 	jbe	.Ltmp512 # Offset: 1231
    000004d1: 	divss	%xmm0, %xmm1
.Ltmp512:
    000004d5: 	movsd	0x70(%rsp), %xmm5
    000004db: 	cvtss2sd	%xmm1, %xmm1
    000004df: 	andpd	0x10(%rsp), %xmm1
    000004e5: 	comisd	%xmm1, %xmm5
    000004e9: 	jbe	.Ltmp513 # Offset: 1257
.Ltmp760:
    000004ef: 	addl	$0x1, %r13d
    000004f3: 	cmpl	%edx, %r13d
    000004f6: 	jl	.Ltmp514 # Offset: 1270
.Ltmp510:
    000004f8: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000004ff: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    00000506: 	subq	$0x20, %rax
    0000050a: 	cmpq	%rax, %r13
    0000050d: 	je	.Ltmp515 # Offset: 1293
    00000513: 	leaq	0x10(%r13), %rdi
    00000517: 	movq	0xf8(%rsp), %rsi
    0000051f: 	movq	%rdi, (%r13)
    00000523: 	movq	0xf0(%rsp), %rcx
    0000052b: 	movq	%rsi, (%rsp)
    0000052f: 	movq	%rcx, %rax
    00000532: 	movq	%rcx, 0x10(%rsp)
    00000537: 	addq	%rsi, %rax
    0000053a: 	je	.Ltmp516 # Offset: 1338
    0000053c: 	testq	%rcx, %rcx
    0000053f: 	je	.Ltmp517 # Offset: 1343
.Ltmp516:
    00000545: 	movq	(%rsp), %rax
    00000549: 	movq	%rax, 0xa8(%rsp)
    00000551: 	cmpq	$0xf, %rax
    00000555: 	ja	.Ltmp518 # Offset: 1365
    0000055b: 	cmpq	$0x1, (%rsp)
    00000560: 	jne	.Ltmp519 # Offset: 1376
    00000566: 	movq	0x10(%rsp), %rax
    0000056b: 	movzbl	(%rax), %eax
    0000056e: 	movb	%al, 0x10(%r13)
.Ltmp824:
    00000572: 	movq	(%rsp), %rax
    00000576: 	movq	%rax, 0x8(%r13)
    0000057a: 	movb	$0x0, (%rdi,%rax)
    0000057e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000585: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000058c: 	addq	$0x20, %rax
    00000590: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000597: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    0000059e: 	je	.Ltmp520 # Offset: 1438
.Ltmp787:
    000005a4: 	movq	-0x20(%rax), %r13
    000005a8: 	callq	clock@PLT # Offset: 1448
    000005ad: 	pxor	%xmm0, %xmm0
    000005b1: 	movq	%rax, end_time(%rip)
    000005b8: 	movq	%r13, %rdi
    000005bb: 	subq	start_time(%rip), %rax
    000005c2: 	cvtsi2sd	%rax, %xmm0
    000005c7: 	divsd	DATAat0x23450(%rip), %xmm0
    000005cf: 	callq	_Z13record_resultdPKc # Offset: 1487
    000005d4: 	movq	0xf0(%rsp), %rdi
    000005dc: 	cmpq	%r14, %rdi
    000005df: 	je	.Ltmp521 # Offset: 1503
    000005e1: 	movq	0x100(%rsp), %rax
    000005e9: 	leaq	0x1(%rax), %rsi
    000005ed: 	callq	_ZdlPvm@PLT # Offset: 1517
.Ltmp521:
    000005f2: 	leaq	DATAat0x231f1(%rip), %rdx
    000005f9: 	movq	%r15, %rsi
    000005fc: 	movq	%r12, %rdi
    000005ff: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1535
    00000604: 	callq	clock@PLT # Offset: 1540
    00000609: 	movl	iterations(%rip), %edx
    0000060f: 	movq	%rax, start_time(%rip)
    00000616: 	testl	%edx, %edx
    00000618: 	jle	.Ltmp522 # Offset: 1560
    0000061e: 	pxor	%xmm4, %xmm4
    00000622: 	movss	DATAat0x235b0(%rip), %xmm6
    0000062a: 	movsd	DATAat0x23458(%rip), %xmm5
    00000632: 	movq	DATAat0x234b0(%rip), %xmm7
    0000063a: 	movsd	DATAat0x234a0(%rip), %xmm3
    00000642: 	movss	%xmm4, 0x30(%rsp)
    00000648: 	movss	DATAat0x235d0(%rip), %xmm4
    00000650: 	xorl	%r13d, %r13d
    00000653: 	movaps	%xmm6, 0x40(%rsp)
    00000658: 	movss	DATAat0x23948(%rip), %xmm6
    00000660: 	movsd	%xmm5, 0x28(%rsp)
    00000666: 	movaps	%xmm7, 0x10(%rsp)
    0000066b: 	movsd	%xmm3, 0x70(%rsp)
    00000671: 	movss	%xmm4, (%rsp)
    00000676: 	movss	%xmm6, 0x7c(%rsp)
    0000067c: 	nopl	(%rax) # Size: 4
.Ltmp526:
    00000680: 	movl	$0x1f40, %eax
    00000685: 	pxor	%xmm0, %xmm0
    00000689: 	nopl	(%rax) # Size: 7
.Ltmp523:
    00000690: 	addss	(%rsp), %xmm0
    00000695: 	subl	$0x1, %eax
    00000698: 	jne	.Ltmp523 # Offset: 1688
    0000069a: 	movaps	0x40(%rsp), %xmm7
    0000069f: 	pxor	%xmm2, %xmm2
    000006a3: 	movaps	%xmm0, %xmm1
    000006a6: 	subss	0x7c(%rsp), %xmm1
    000006ac: 	andps	%xmm0, %xmm7
    000006af: 	cvtss2sd	%xmm7, %xmm2
    000006b3: 	comisd	0x28(%rsp), %xmm2
    000006b9: 	jbe	.Ltmp524 # Offset: 1721
    000006bb: 	divss	%xmm0, %xmm1
.Ltmp524:
    000006bf: 	movsd	0x70(%rsp), %xmm4
    000006c5: 	cvtss2sd	%xmm1, %xmm1
    000006c9: 	andpd	0x10(%rsp), %xmm1
    000006cf: 	comisd	%xmm1, %xmm4
    000006d3: 	jbe	.Ltmp525 # Offset: 1747
.Ltmp759:
    000006d9: 	addl	$0x1, %r13d
    000006dd: 	cmpl	%edx, %r13d
    000006e0: 	jl	.Ltmp526 # Offset: 1760
.Ltmp522:
    000006e2: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000006e9: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    000006f0: 	subq	$0x20, %rax
    000006f4: 	cmpq	%rax, %r13
    000006f7: 	je	.Ltmp527 # Offset: 1783
    000006fd: 	leaq	0x10(%r13), %rdi
    00000701: 	movq	0xf8(%rsp), %rsi
    00000709: 	movq	%rdi, (%r13)
    0000070d: 	movq	0xf0(%rsp), %rcx
    00000715: 	movq	%rsi, (%rsp)
    00000719: 	movq	%rcx, %rax
    0000071c: 	movq	%rcx, 0x10(%rsp)
    00000721: 	addq	%rsi, %rax
    00000724: 	je	.Ltmp528 # Offset: 1828
    00000726: 	testq	%rcx, %rcx
    00000729: 	je	.Ltmp529 # Offset: 1833
.Ltmp528:
    0000072f: 	movq	(%rsp), %rax
    00000733: 	movq	%rax, 0xa8(%rsp)
    0000073b: 	cmpq	$0xf, %rax
    0000073f: 	ja	.Ltmp530 # Offset: 1855
    00000745: 	cmpq	$0x1, (%rsp)
    0000074a: 	jne	.Ltmp531 # Offset: 1866
    00000750: 	movq	0x10(%rsp), %rax
    00000755: 	movzbl	(%rax), %eax
    00000758: 	movb	%al, 0x10(%r13)
.Ltmp822:
    0000075c: 	movq	(%rsp), %rax
    00000760: 	movq	%rax, 0x8(%r13)
    00000764: 	movb	$0x0, (%rdi,%rax)
    00000768: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000076f: 	addq	$0x20, %rax
    00000773: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp789:
    0000077a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000781: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000788: 	je	.Ltmp532 # Offset: 1928
.Ltmp778:
    0000078e: 	movq	-0x20(%rax), %r13
    00000792: 	callq	clock@PLT # Offset: 1938
    00000797: 	pxor	%xmm0, %xmm0
    0000079b: 	movq	%rax, end_time(%rip)
    000007a2: 	movq	%r13, %rdi
    000007a5: 	subq	start_time(%rip), %rax
    000007ac: 	cvtsi2sd	%rax, %xmm0
    000007b1: 	divsd	DATAat0x23450(%rip), %xmm0
    000007b9: 	callq	_Z13record_resultdPKc # Offset: 1977
    000007be: 	movq	0xf0(%rsp), %rdi
    000007c6: 	cmpq	%r14, %rdi
    000007c9: 	je	.Ltmp533 # Offset: 1993
    000007cb: 	movq	0x100(%rsp), %rax
    000007d3: 	leaq	0x1(%rax), %rsi
    000007d7: 	callq	_ZdlPvm@PLT # Offset: 2007
.Ltmp533:
    000007dc: 	leaq	DATAat0x23205(%rip), %rdx
    000007e3: 	movq	%r15, %rsi
    000007e6: 	movq	%r12, %rdi
    000007e9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2025
    000007ee: 	callq	clock@PLT # Offset: 2030
    000007f3: 	movl	iterations(%rip), %edx
    000007f9: 	movq	%rax, start_time(%rip)
    00000800: 	testl	%edx, %edx
    00000802: 	jle	.Ltmp534 # Offset: 2050
    00000808: 	movsd	DATAat0x23458(%rip), %xmm3
    00000810: 	movq	DATAat0x234b0(%rip), %xmm4
    00000818: 	pxor	%xmm5, %xmm5
    0000081c: 	movss	DATAat0x235b0(%rip), %xmm7
    00000824: 	movsd	DATAat0x234a0(%rip), %xmm6
    0000082c: 	xorl	%r13d, %r13d
    0000082f: 	movss	%xmm5, 0x30(%rsp)
    00000835: 	movaps	%xmm7, 0x40(%rsp)
    0000083a: 	movsd	%xmm3, 0x28(%rsp)
    00000840: 	movaps	%xmm4, 0x10(%rsp)
    00000845: 	movsd	%xmm6, 0x70(%rsp)
    0000084b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp538:
    00000850: 	movl	$0x1f40, %eax
    00000855: 	pxor	%xmm0, %xmm0
    00000859: 	nopl	(%rax) # Size: 7
.Ltmp535:
    00000860: 	addss	DATAat0x2394c(%rip), %xmm0
    00000868: 	subl	$0x1, %eax
    0000086b: 	jne	.Ltmp535 # Offset: 2155
    0000086d: 	movaps	0x40(%rsp), %xmm3
    00000872: 	pxor	%xmm2, %xmm2
    00000876: 	movaps	%xmm0, %xmm1
    00000879: 	subss	DATAat0x23950(%rip), %xmm1
    00000881: 	andps	%xmm0, %xmm3
    00000884: 	cvtss2sd	%xmm3, %xmm2
    00000888: 	comisd	0x28(%rsp), %xmm2
    0000088e: 	jbe	.Ltmp536 # Offset: 2190
    00000890: 	divss	%xmm0, %xmm1
.Ltmp536:
    00000894: 	movsd	0x70(%rsp), %xmm7
    0000089a: 	cvtss2sd	%xmm1, %xmm1
    0000089e: 	andpd	0x10(%rsp), %xmm1
    000008a4: 	comisd	%xmm1, %xmm7
    000008a8: 	jbe	.Ltmp537 # Offset: 2216
.Ltmp762:
    000008ae: 	addl	$0x1, %r13d
    000008b2: 	cmpl	%edx, %r13d
    000008b5: 	jl	.Ltmp538 # Offset: 2229
.Ltmp534:
    000008b7: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000008be: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    000008c5: 	subq	$0x20, %rax
    000008c9: 	cmpq	%rax, %r13
    000008cc: 	je	.Ltmp539 # Offset: 2252
    000008d2: 	leaq	0x10(%r13), %rdi
    000008d6: 	movq	0xf8(%rsp), %rsi
    000008de: 	movq	%rdi, (%r13)
    000008e2: 	movq	0xf0(%rsp), %rcx
    000008ea: 	movq	%rsi, (%rsp)
    000008ee: 	movq	%rcx, %rax
    000008f1: 	movq	%rcx, 0x10(%rsp)
    000008f6: 	addq	%rsi, %rax
    000008f9: 	je	.Ltmp540 # Offset: 2297
    000008fb: 	testq	%rcx, %rcx
    000008fe: 	je	.Ltmp541 # Offset: 2302
.Ltmp540:
    00000904: 	movq	(%rsp), %rax
    00000908: 	movq	%rax, 0xa8(%rsp)
    00000910: 	cmpq	$0xf, %rax
    00000914: 	ja	.Ltmp542 # Offset: 2324
    0000091a: 	cmpq	$0x1, (%rsp)
    0000091f: 	jne	.Ltmp543 # Offset: 2335
    00000925: 	movq	0x10(%rsp), %rax
    0000092a: 	movzbl	(%rax), %eax
    0000092d: 	movb	%al, 0x10(%r13)
.Ltmp817:
    00000931: 	movq	(%rsp), %rax
    00000935: 	movq	%rax, 0x8(%r13)
    00000939: 	movb	$0x0, (%rdi,%rax)
    0000093d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000944: 	addq	$0x20, %rax
    00000948: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp792:
    0000094f: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000956: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000095d: 	je	.Ltmp544 # Offset: 2397
.Ltmp791:
    00000963: 	movq	-0x20(%rax), %r13
    00000967: 	callq	clock@PLT # Offset: 2407
    0000096c: 	pxor	%xmm0, %xmm0
    00000970: 	movq	%rax, end_time(%rip)
    00000977: 	movq	%r13, %rdi
    0000097a: 	subq	start_time(%rip), %rax
    00000981: 	cvtsi2sd	%rax, %xmm0
    00000986: 	divsd	DATAat0x23450(%rip), %xmm0
    0000098e: 	callq	_Z13record_resultdPKc # Offset: 2446
    00000993: 	movq	0xf0(%rsp), %rdi
    0000099b: 	cmpq	%r14, %rdi
    0000099e: 	je	.Ltmp545 # Offset: 2462
    000009a0: 	movq	0x100(%rsp), %rax
    000009a8: 	leaq	0x1(%rax), %rsi
    000009ac: 	callq	_ZdlPvm@PLT # Offset: 2476
.Ltmp545:
    000009b1: 	leaq	DATAat0x23219(%rip), %rdx
    000009b8: 	movq	%r15, %rsi
    000009bb: 	movq	%r12, %rdi
    000009be: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2494
    000009c3: 	callq	clock@PLT # Offset: 2499
    000009c8: 	movl	iterations(%rip), %edx
    000009ce: 	movq	%rax, start_time(%rip)
    000009d5: 	testl	%edx, %edx
    000009d7: 	jle	.Ltmp546 # Offset: 2519
    000009dd: 	movss	DATAat0x234e4(%rip), %xmm7
    000009e5: 	pxor	%xmm5, %xmm5
    000009e9: 	movss	DATAat0x23940(%rip), %xmm3
    000009f1: 	movss	DATAat0x235b0(%rip), %xmm4
    000009f9: 	movsd	DATAat0x23458(%rip), %xmm6
    00000a01: 	movss	%xmm5, 0x30(%rsp)
    00000a07: 	xorl	%r13d, %r13d
    00000a0a: 	movq	DATAat0x234b0(%rip), %xmm5
    00000a12: 	movss	%xmm7, 0x78(%rsp)
    00000a18: 	movsd	DATAat0x234a0(%rip), %xmm7
    00000a20: 	movss	%xmm3, (%rsp)
    00000a25: 	movaps	%xmm4, 0x40(%rsp)
    00000a2a: 	movsd	%xmm6, 0x28(%rsp)
    00000a30: 	movaps	%xmm5, 0x10(%rsp)
    00000a35: 	movsd	%xmm7, 0x70(%rsp)
    00000a3b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp550:
    00000a40: 	movl	$0x1f40, %eax
    00000a45: 	pxor	%xmm0, %xmm0
    00000a49: 	nopl	(%rax) # Size: 7
.Ltmp547:
    00000a50: 	addss	0x78(%rsp), %xmm0
    00000a56: 	subl	$0x1, %eax
    00000a59: 	jne	.Ltmp547 # Offset: 2649
    00000a5b: 	movaps	0x40(%rsp), %xmm5
    00000a60: 	pxor	%xmm2, %xmm2
    00000a64: 	movaps	%xmm0, %xmm1
    00000a67: 	subss	(%rsp), %xmm1
    00000a6c: 	andps	%xmm0, %xmm5
    00000a6f: 	cvtss2sd	%xmm5, %xmm2
    00000a73: 	comisd	0x28(%rsp), %xmm2
    00000a79: 	jbe	.Ltmp548 # Offset: 2681
    00000a7b: 	divss	%xmm0, %xmm1
.Ltmp548:
    00000a7f: 	movsd	0x70(%rsp), %xmm6
    00000a85: 	cvtss2sd	%xmm1, %xmm1
    00000a89: 	andpd	0x10(%rsp), %xmm1
    00000a8f: 	comisd	%xmm1, %xmm6
    00000a93: 	jbe	.Ltmp549 # Offset: 2707
.Ltmp761:
    00000a99: 	addl	$0x1, %r13d
    00000a9d: 	cmpl	%edx, %r13d
    00000aa0: 	jl	.Ltmp550 # Offset: 2720
.Ltmp546:
    00000aa2: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000aa9: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    00000ab0: 	subq	$0x20, %rax
    00000ab4: 	cmpq	%rax, %r13
    00000ab7: 	je	.Ltmp551 # Offset: 2743
    00000abd: 	leaq	0x10(%r13), %rdi
    00000ac1: 	movq	0xf8(%rsp), %rsi
    00000ac9: 	movq	%rdi, (%r13)
    00000acd: 	movq	0xf0(%rsp), %rcx
    00000ad5: 	movq	%rsi, (%rsp)
    00000ad9: 	movq	%rcx, %rax
    00000adc: 	movq	%rcx, 0x10(%rsp)
    00000ae1: 	addq	%rsi, %rax
    00000ae4: 	je	.Ltmp552 # Offset: 2788
    00000ae6: 	testq	%rcx, %rcx
    00000ae9: 	je	.Ltmp553 # Offset: 2793
.Ltmp552:
    00000aef: 	movq	(%rsp), %rax
    00000af3: 	movq	%rax, 0xa8(%rsp)
    00000afb: 	cmpq	$0xf, %rax
    00000aff: 	ja	.Ltmp554 # Offset: 2815
    00000b05: 	cmpq	$0x1, (%rsp)
    00000b0a: 	jne	.Ltmp555 # Offset: 2826
    00000b10: 	movq	0x10(%rsp), %rax
    00000b15: 	movzbl	(%rax), %eax
    00000b18: 	movb	%al, 0x10(%r13)
.Ltmp828:
    00000b1c: 	movq	(%rsp), %rax
    00000b20: 	movq	%rax, 0x8(%r13)
    00000b24: 	movb	$0x0, (%rdi,%rax)
    00000b28: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000b2f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000b36: 	addq	$0x20, %rax
    00000b3a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000b41: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00000b48: 	je	.Ltmp556 # Offset: 2888
.Ltmp793:
    00000b4e: 	movq	-0x20(%rax), %r13
    00000b52: 	callq	clock@PLT # Offset: 2898
    00000b57: 	pxor	%xmm0, %xmm0
    00000b5b: 	movq	%rax, end_time(%rip)
    00000b62: 	movq	%r13, %rdi
    00000b65: 	subq	start_time(%rip), %rax
    00000b6c: 	cvtsi2sd	%rax, %xmm0
    00000b71: 	divsd	DATAat0x23450(%rip), %xmm0
    00000b79: 	callq	_Z13record_resultdPKc # Offset: 2937
    00000b7e: 	movq	0xf0(%rsp), %rdi
    00000b86: 	cmpq	%r14, %rdi
    00000b89: 	je	.Ltmp557 # Offset: 2953
    00000b8b: 	movq	0x100(%rsp), %rax
    00000b93: 	leaq	0x1(%rax), %rsi
    00000b97: 	callq	_ZdlPvm@PLT # Offset: 2967
.Ltmp557:
    00000b9c: 	leaq	DATAat0x23279(%rip), %rdx
    00000ba3: 	movq	%r15, %rsi
    00000ba6: 	movq	%r12, %rdi
    00000ba9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2985
    00000bae: 	callq	clock@PLT # Offset: 2990
    00000bb3: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    00000bba: 	movq	%rax, start_time(%rip)
    00000bc1: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000bc8: 	subq	$0x20, %rax
    00000bcc: 	cmpq	%rax, %r13
    00000bcf: 	je	.Ltmp558 # Offset: 3023
    00000bd5: 	leaq	0x10(%r13), %rdi
    00000bd9: 	movq	0xf8(%rsp), %rsi
    00000be1: 	movq	%rdi, (%r13)
    00000be5: 	movq	0xf0(%rsp), %rcx
    00000bed: 	movq	%rsi, (%rsp)
    00000bf1: 	movq	%rcx, %rax
    00000bf4: 	movq	%rcx, 0x10(%rsp)
    00000bf9: 	addq	%rsi, %rax
    00000bfc: 	je	.Ltmp559 # Offset: 3068
    00000bfe: 	testq	%rcx, %rcx
    00000c01: 	je	.Ltmp560 # Offset: 3073
.Ltmp559:
    00000c07: 	movq	(%rsp), %rax
    00000c0b: 	movq	%rax, 0xa8(%rsp)
    00000c13: 	cmpq	$0xf, %rax
    00000c17: 	ja	.Ltmp561 # Offset: 3095
    00000c1d: 	cmpq	$0x1, (%rsp)
    00000c22: 	jne	.Ltmp562 # Offset: 3106
    00000c28: 	movq	0x10(%rsp), %rax
    00000c2d: 	movzbl	(%rax), %eax
    00000c30: 	movb	%al, 0x10(%r13)
.Ltmp842:
    00000c34: 	movq	(%rsp), %rax
    00000c38: 	movq	%rax, 0x8(%r13)
    00000c3c: 	movb	$0x0, (%rdi,%rax)
    00000c40: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000c47: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000c4e: 	addq	$0x20, %rax
    00000c52: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000c59: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00000c60: 	je	.Ltmp563 # Offset: 3168
.Ltmp794:
    00000c66: 	movq	-0x20(%rax), %r13
    00000c6a: 	callq	clock@PLT # Offset: 3178
    00000c6f: 	pxor	%xmm0, %xmm0
    00000c73: 	movq	%rax, end_time(%rip)
    00000c7a: 	movq	%r13, %rdi
    00000c7d: 	subq	start_time(%rip), %rax
    00000c84: 	cvtsi2sd	%rax, %xmm0
    00000c89: 	divsd	DATAat0x23450(%rip), %xmm0
    00000c91: 	callq	_Z13record_resultdPKc # Offset: 3217
    00000c96: 	movq	0xf0(%rsp), %rdi
    00000c9e: 	cmpq	%r14, %rdi
    00000ca1: 	je	.Ltmp564 # Offset: 3233
    00000ca3: 	movq	0x100(%rsp), %rax
    00000cab: 	leaq	0x1(%rax), %rsi
    00000caf: 	callq	_ZdlPvm@PLT # Offset: 3247
.Ltmp564:
    00000cb4: 	leaq	DATAat0x2322b(%rip), %rdx
    00000cbb: 	movq	%r15, %rsi
    00000cbe: 	movq	%r12, %rdi
    00000cc1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3265
    00000cc6: 	callq	clock@PLT # Offset: 3270
    00000ccb: 	movl	iterations(%rip), %edx
    00000cd1: 	movq	%rax, start_time(%rip)
    00000cd8: 	testl	%edx, %edx
    00000cda: 	jle	.Ltmp565 # Offset: 3290
    00000ce0: 	pxor	%xmm3, %xmm3
    00000ce4: 	movss	DATAat0x235b0(%rip), %xmm4
    00000cec: 	movsd	DATAat0x23458(%rip), %xmm6
    00000cf4: 	movq	DATAat0x234b0(%rip), %xmm5
    00000cfc: 	movsd	DATAat0x234a0(%rip), %xmm7
    00000d04: 	movss	%xmm3, 0x30(%rsp)
    00000d0a: 	movss	DATAat0x235d0(%rip), %xmm3
    00000d12: 	xorl	%r13d, %r13d
    00000d15: 	movaps	%xmm4, 0x40(%rsp)
    00000d1a: 	movss	DATAat0x23948(%rip), %xmm4
    00000d22: 	movsd	%xmm6, 0x28(%rsp)
    00000d28: 	movaps	%xmm5, 0x10(%rsp)
    00000d2d: 	movsd	%xmm7, 0x70(%rsp)
    00000d33: 	movss	%xmm3, (%rsp)
    00000d38: 	movss	%xmm4, 0x7c(%rsp)
    00000d3e: 	nop # Size: 2
.Ltmp569:
    00000d40: 	movl	$0x1f40, %eax
    00000d45: 	pxor	%xmm0, %xmm0
    00000d49: 	nopl	(%rax) # Size: 7
.Ltmp566:
    00000d50: 	addss	(%rsp), %xmm0
    00000d55: 	subl	$0x1, %eax
    00000d58: 	jne	.Ltmp566 # Offset: 3416
    00000d5a: 	movaps	0x40(%rsp), %xmm4
    00000d5f: 	pxor	%xmm2, %xmm2
    00000d63: 	movaps	%xmm0, %xmm1
    00000d66: 	subss	0x7c(%rsp), %xmm1
    00000d6c: 	andps	%xmm0, %xmm4
    00000d6f: 	cvtss2sd	%xmm4, %xmm2
    00000d73: 	comisd	0x28(%rsp), %xmm2
    00000d79: 	jbe	.Ltmp567 # Offset: 3449
    00000d7b: 	divss	%xmm0, %xmm1
.Ltmp567:
    00000d7f: 	movsd	0x70(%rsp), %xmm5
    00000d85: 	cvtss2sd	%xmm1, %xmm1
    00000d89: 	andpd	0x10(%rsp), %xmm1
    00000d8f: 	comisd	%xmm1, %xmm5
    00000d93: 	jbe	.Ltmp568 # Offset: 3475
.Ltmp767:
    00000d99: 	addl	$0x1, %r13d
    00000d9d: 	cmpl	%edx, %r13d
    00000da0: 	jl	.Ltmp569 # Offset: 3488
.Ltmp565:
    00000da2: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000da9: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    00000db0: 	subq	$0x20, %rax
    00000db4: 	cmpq	%rax, %r13
    00000db7: 	je	.Ltmp570 # Offset: 3511
    00000dbd: 	leaq	0x10(%r13), %rdi
    00000dc1: 	movq	0xf8(%rsp), %rsi
    00000dc9: 	movq	%rdi, (%r13)
    00000dcd: 	movq	0xf0(%rsp), %rcx
    00000dd5: 	movq	%rsi, (%rsp)
    00000dd9: 	movq	%rcx, %rax
    00000ddc: 	movq	%rcx, 0x10(%rsp)
    00000de1: 	addq	%rsi, %rax
    00000de4: 	je	.Ltmp571 # Offset: 3556
    00000de6: 	testq	%rcx, %rcx
    00000de9: 	je	.Ltmp572 # Offset: 3561
.Ltmp571:
    00000def: 	movq	(%rsp), %rax
    00000df3: 	movq	%rax, 0xa8(%rsp)
    00000dfb: 	cmpq	$0xf, %rax
    00000dff: 	ja	.Ltmp573 # Offset: 3583
    00000e05: 	cmpq	$0x1, (%rsp)
    00000e0a: 	jne	.Ltmp574 # Offset: 3594
    00000e10: 	movq	0x10(%rsp), %rax
    00000e15: 	movzbl	(%rax), %eax
    00000e18: 	movb	%al, 0x10(%r13)
.Ltmp809:
    00000e1c: 	movq	(%rsp), %rax
    00000e20: 	movq	%rax, 0x8(%r13)
    00000e24: 	movb	$0x0, (%rdi,%rax)
    00000e28: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000e2f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000e36: 	addq	$0x20, %rax
    00000e3a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000e41: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00000e48: 	je	.Ltmp575 # Offset: 3656
.Ltmp799:
    00000e4e: 	movq	-0x20(%rax), %r13
    00000e52: 	callq	clock@PLT # Offset: 3666
    00000e57: 	pxor	%xmm0, %xmm0
    00000e5b: 	movq	%rax, end_time(%rip)
    00000e62: 	movq	%r13, %rdi
    00000e65: 	subq	start_time(%rip), %rax
    00000e6c: 	cvtsi2sd	%rax, %xmm0
    00000e71: 	divsd	DATAat0x23450(%rip), %xmm0
    00000e79: 	callq	_Z13record_resultdPKc # Offset: 3705
    00000e7e: 	movq	0xf0(%rsp), %rdi
    00000e86: 	cmpq	%r14, %rdi
    00000e89: 	je	.Ltmp576 # Offset: 3721
    00000e8b: 	movq	0x100(%rsp), %rax
    00000e93: 	leaq	0x1(%rax), %rsi
    00000e97: 	callq	_ZdlPvm@PLT # Offset: 3735
.Ltmp576:
    00000e9c: 	leaq	DATAat0x2323f(%rip), %rdx
    00000ea3: 	movq	%r15, %rsi
    00000ea6: 	movq	%r12, %rdi
    00000ea9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3753
    00000eae: 	callq	clock@PLT # Offset: 3758
    00000eb3: 	movl	iterations(%rip), %edx
    00000eb9: 	movq	%rax, start_time(%rip)
    00000ec0: 	testl	%edx, %edx
    00000ec2: 	jle	.Ltmp577 # Offset: 3778
    00000ec8: 	pxor	%xmm6, %xmm6
    00000ecc: 	movss	DATAat0x235b0(%rip), %xmm5
    00000ed4: 	movsd	DATAat0x23458(%rip), %xmm7
    00000edc: 	movq	DATAat0x234b0(%rip), %xmm3
    00000ee4: 	movsd	DATAat0x234a0(%rip), %xmm4
    00000eec: 	movss	%xmm6, 0x30(%rsp)
    00000ef2: 	movss	DATAat0x235d0(%rip), %xmm6
    00000efa: 	xorl	%r13d, %r13d
    00000efd: 	movaps	%xmm5, 0x40(%rsp)
    00000f02: 	movss	DATAat0x23948(%rip), %xmm5
    00000f0a: 	movsd	%xmm7, 0x28(%rsp)
    00000f10: 	movaps	%xmm3, 0x10(%rsp)
    00000f15: 	movsd	%xmm4, 0x70(%rsp)
    00000f1b: 	movss	%xmm6, (%rsp)
    00000f20: 	movss	%xmm5, 0x7c(%rsp)
    00000f26: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp581:
    00000f30: 	movl	$0x1f40, %eax
    00000f35: 	pxor	%xmm0, %xmm0
    00000f39: 	nopl	(%rax) # Size: 7
.Ltmp578:
    00000f40: 	addss	(%rsp), %xmm0
    00000f45: 	subl	$0x1, %eax
    00000f48: 	jne	.Ltmp578 # Offset: 3912
    00000f4a: 	movaps	0x40(%rsp), %xmm7
    00000f4f: 	pxor	%xmm2, %xmm2
    00000f53: 	movaps	%xmm0, %xmm1
    00000f56: 	subss	0x7c(%rsp), %xmm1
    00000f5c: 	andps	%xmm0, %xmm7
    00000f5f: 	cvtss2sd	%xmm7, %xmm2
    00000f63: 	comisd	0x28(%rsp), %xmm2
    00000f69: 	jbe	.Ltmp579 # Offset: 3945
    00000f6b: 	divss	%xmm0, %xmm1
.Ltmp579:
    00000f6f: 	movsd	0x70(%rsp), %xmm4
    00000f75: 	cvtss2sd	%xmm1, %xmm1
    00000f79: 	andpd	0x10(%rsp), %xmm1
    00000f7f: 	comisd	%xmm1, %xmm4
    00000f83: 	jbe	.Ltmp580 # Offset: 3971
.Ltmp766:
    00000f89: 	addl	$0x1, %r13d
    00000f8d: 	cmpl	%edx, %r13d
    00000f90: 	jl	.Ltmp581 # Offset: 3984
.Ltmp577:
    00000f92: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000f99: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    00000fa0: 	subq	$0x20, %rax
    00000fa4: 	cmpq	%rax, %r13
    00000fa7: 	je	.Ltmp582 # Offset: 4007
    00000fad: 	leaq	0x10(%r13), %rdi
    00000fb1: 	movq	0xf8(%rsp), %rsi
    00000fb9: 	movq	%rdi, (%r13)
    00000fbd: 	movq	0xf0(%rsp), %rcx
    00000fc5: 	movq	%rsi, (%rsp)
    00000fc9: 	movq	%rcx, %rax
    00000fcc: 	movq	%rcx, 0x10(%rsp)
    00000fd1: 	addq	%rsi, %rax
    00000fd4: 	je	.Ltmp583 # Offset: 4052
    00000fd6: 	testq	%rcx, %rcx
    00000fd9: 	je	.Ltmp584 # Offset: 4057
.Ltmp583:
    00000fdf: 	movq	(%rsp), %rax
    00000fe3: 	movq	%rax, 0xa8(%rsp)
    00000feb: 	cmpq	$0xf, %rax
    00000fef: 	ja	.Ltmp585 # Offset: 4079
    00000ff5: 	cmpq	$0x1, (%rsp)
    00000ffa: 	jne	.Ltmp586 # Offset: 4090
    00001000: 	movq	0x10(%rsp), %rax
    00001005: 	movzbl	(%rax), %eax
    00001008: 	movb	%al, 0x10(%r13)
.Ltmp829:
    0000100c: 	movq	(%rsp), %rax
    00001010: 	movq	%rax, 0x8(%r13)
    00001014: 	movb	$0x0, (%rdi,%rax)
    00001018: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000101f: 	addq	$0x20, %rax
    00001023: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp798:
    0000102a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001031: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001038: 	je	.Ltmp587 # Offset: 4152
.Ltmp777:
    0000103e: 	movq	-0x20(%rax), %r13
    00001042: 	callq	clock@PLT # Offset: 4162
    00001047: 	pxor	%xmm0, %xmm0
    0000104b: 	movq	%rax, end_time(%rip)
    00001052: 	movq	%r13, %rdi
    00001055: 	subq	start_time(%rip), %rax
    0000105c: 	cvtsi2sd	%rax, %xmm0
    00001061: 	divsd	DATAat0x23450(%rip), %xmm0
    00001069: 	callq	_Z13record_resultdPKc # Offset: 4201
    0000106e: 	movq	0xf0(%rsp), %rdi
    00001076: 	cmpq	%r14, %rdi
    00001079: 	je	.Ltmp588 # Offset: 4217
    0000107b: 	movq	0x100(%rsp), %rax
    00001083: 	leaq	0x1(%rax), %rsi
    00001087: 	callq	_ZdlPvm@PLT # Offset: 4231
.Ltmp588:
    0000108c: 	leaq	DATAat0x23257(%rip), %rdx
    00001093: 	movq	%r15, %rsi
    00001096: 	movq	%r12, %rdi
    00001099: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4249
    0000109e: 	callq	clock@PLT # Offset: 4254
    000010a3: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    000010aa: 	movq	%rax, start_time(%rip)
    000010b1: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000010b8: 	subq	$0x20, %rax
    000010bc: 	cmpq	%rax, %r13
    000010bf: 	je	.Ltmp589 # Offset: 4287
    000010c5: 	leaq	0x10(%r13), %rdi
    000010c9: 	movq	0xf8(%rsp), %rsi
    000010d1: 	movq	%rdi, (%r13)
    000010d5: 	movq	0xf0(%rsp), %rcx
    000010dd: 	movq	%rsi, (%rsp)
    000010e1: 	movq	%rcx, %rax
    000010e4: 	movq	%rcx, 0x10(%rsp)
    000010e9: 	addq	%rsi, %rax
    000010ec: 	je	.Ltmp590 # Offset: 4332
    000010ee: 	testq	%rcx, %rcx
    000010f1: 	je	.Ltmp591 # Offset: 4337
.Ltmp590:
    000010f7: 	movq	(%rsp), %rax
    000010fb: 	movq	%rax, 0xa8(%rsp)
    00001103: 	cmpq	$0xf, %rax
    00001107: 	ja	.Ltmp592 # Offset: 4359
    0000110d: 	cmpq	$0x1, (%rsp)
    00001112: 	jne	.Ltmp593 # Offset: 4370
    00001118: 	movq	0x10(%rsp), %rax
    0000111d: 	movzbl	(%rax), %eax
    00001120: 	movb	%al, 0x10(%r13)
.Ltmp815:
    00001124: 	movq	(%rsp), %rax
    00001128: 	movq	%rax, 0x8(%r13)
    0000112c: 	movb	$0x0, (%rdi,%rax)
    00001130: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001137: 	addq	$0x20, %rax
    0000113b: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp776:
    00001142: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001149: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001150: 	je	.Ltmp594 # Offset: 4432
.Ltmp775:
    00001156: 	movq	-0x20(%rax), %r13
    0000115a: 	callq	clock@PLT # Offset: 4442
    0000115f: 	pxor	%xmm0, %xmm0
    00001163: 	movq	%rax, end_time(%rip)
    0000116a: 	movq	%r13, %rdi
    0000116d: 	subq	start_time(%rip), %rax
    00001174: 	cvtsi2sd	%rax, %xmm0
    00001179: 	divsd	DATAat0x23450(%rip), %xmm0
    00001181: 	callq	_Z13record_resultdPKc # Offset: 4481
    00001186: 	movq	0xf0(%rsp), %rdi
    0000118e: 	cmpq	%r14, %rdi
    00001191: 	je	.Ltmp595 # Offset: 4497
    00001193: 	movq	0x100(%rsp), %rax
    0000119b: 	leaq	0x1(%rax), %rsi
    0000119f: 	callq	_ZdlPvm@PLT # Offset: 4511
.Ltmp595:
    000011a4: 	leaq	DATAat0x2326c(%rip), %rdx
    000011ab: 	movq	%r15, %rsi
    000011ae: 	movq	%r12, %rdi
    000011b1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4529
    000011b6: 	callq	clock@PLT # Offset: 4534
    000011bb: 	movl	iterations(%rip), %edx
    000011c1: 	movq	%rax, start_time(%rip)
    000011c8: 	testl	%edx, %edx
    000011ca: 	jle	.Ltmp596 # Offset: 4554
    000011d0: 	pxor	%xmm7, %xmm7
    000011d4: 	movss	DATAat0x235b0(%rip), %xmm3
    000011dc: 	movsd	DATAat0x23458(%rip), %xmm4
    000011e4: 	movq	DATAat0x234b0(%rip), %xmm6
    000011ec: 	movsd	DATAat0x234a0(%rip), %xmm5
    000011f4: 	movss	%xmm7, 0x30(%rsp)
    000011fa: 	movss	DATAat0x235d0(%rip), %xmm7
    00001202: 	xorl	%r13d, %r13d
    00001205: 	movaps	%xmm3, 0x40(%rsp)
    0000120a: 	movss	DATAat0x23948(%rip), %xmm3
    00001212: 	movsd	%xmm4, 0x28(%rsp)
    00001218: 	movaps	%xmm6, 0x10(%rsp)
    0000121d: 	movsd	%xmm5, 0x70(%rsp)
    00001223: 	movss	%xmm7, (%rsp)
    00001228: 	movss	%xmm3, 0x7c(%rsp)
    0000122e: 	nop # Size: 2
.Ltmp600:
    00001230: 	movl	$0x1f40, %eax
    00001235: 	pxor	%xmm0, %xmm0
    00001239: 	nopl	(%rax) # Size: 7
.Ltmp597:
    00001240: 	addss	(%rsp), %xmm0
    00001245: 	subl	$0x1, %eax
    00001248: 	jne	.Ltmp597 # Offset: 4680
    0000124a: 	movaps	0x40(%rsp), %xmm3
    0000124f: 	pxor	%xmm2, %xmm2
    00001253: 	movaps	%xmm0, %xmm1
    00001256: 	subss	0x7c(%rsp), %xmm1
    0000125c: 	andps	%xmm0, %xmm3
    0000125f: 	cvtss2sd	%xmm3, %xmm2
    00001263: 	comisd	0x28(%rsp), %xmm2
    00001269: 	jbe	.Ltmp598 # Offset: 4713
    0000126b: 	divss	%xmm0, %xmm1
.Ltmp598:
    0000126f: 	movsd	0x70(%rsp), %xmm6
    00001275: 	cvtss2sd	%xmm1, %xmm1
    00001279: 	andpd	0x10(%rsp), %xmm1
    0000127f: 	comisd	%xmm1, %xmm6
    00001283: 	jbe	.Ltmp599 # Offset: 4739
.Ltmp765:
    00001289: 	addl	$0x1, %r13d
    0000128d: 	cmpl	%edx, %r13d
    00001290: 	jl	.Ltmp600 # Offset: 4752
.Ltmp596:
    00001292: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001299: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    000012a0: 	subq	$0x20, %rax
    000012a4: 	cmpq	%rax, %r13
    000012a7: 	je	.Ltmp601 # Offset: 4775
    000012ad: 	leaq	0x10(%r13), %rdi
    000012b1: 	movq	0xf8(%rsp), %rsi
    000012b9: 	movq	%rdi, (%r13)
    000012bd: 	movq	0xf0(%rsp), %rcx
    000012c5: 	movq	%rsi, (%rsp)
    000012c9: 	movq	%rcx, %rax
    000012cc: 	movq	%rcx, 0x10(%rsp)
    000012d1: 	addq	%rsi, %rax
    000012d4: 	je	.Ltmp602 # Offset: 4820
    000012d6: 	testq	%rcx, %rcx
    000012d9: 	je	.Ltmp603 # Offset: 4825
.Ltmp602:
    000012df: 	movq	(%rsp), %rax
    000012e3: 	movq	%rax, 0xa8(%rsp)
    000012eb: 	cmpq	$0xf, %rax
    000012ef: 	ja	.Ltmp604 # Offset: 4847
    000012f5: 	cmpq	$0x1, (%rsp)
    000012fa: 	jne	.Ltmp605 # Offset: 4858
    00001300: 	movq	0x10(%rsp), %rax
    00001305: 	movzbl	(%rax), %eax
    00001308: 	movb	%al, 0x10(%r13)
.Ltmp840:
    0000130c: 	movq	(%rsp), %rax
    00001310: 	movq	%rax, 0x8(%r13)
    00001314: 	movb	$0x0, (%rdi,%rax)
    00001318: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000131f: 	addq	$0x20, %rax
    00001323: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp783:
    0000132a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001331: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001338: 	je	.Ltmp606 # Offset: 4920
.Ltmp782:
    0000133e: 	movq	-0x20(%rax), %r13
    00001342: 	callq	clock@PLT # Offset: 4930
    00001347: 	pxor	%xmm0, %xmm0
    0000134b: 	movq	%rax, end_time(%rip)
    00001352: 	movq	%r13, %rdi
    00001355: 	subq	start_time(%rip), %rax
    0000135c: 	cvtsi2sd	%rax, %xmm0
    00001361: 	divsd	DATAat0x23450(%rip), %xmm0
    00001369: 	callq	_Z13record_resultdPKc # Offset: 4969
    0000136e: 	movq	0xf0(%rsp), %rdi
    00001376: 	cmpq	%r14, %rdi
    00001379: 	je	.Ltmp607 # Offset: 4985
    0000137b: 	movq	0x100(%rsp), %rax
    00001383: 	leaq	0x1(%rax), %rsi
    00001387: 	callq	_ZdlPvm@PLT # Offset: 4999
.Ltmp607:
    0000138c: 	leaq	DATAat0x2328a(%rip), %rdx
    00001393: 	movq	%r15, %rsi
    00001396: 	movq	%r12, %rdi
    00001399: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5017
    0000139e: 	callq	clock@PLT # Offset: 5022
    000013a3: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    000013aa: 	movq	%rax, start_time(%rip)
    000013b1: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000013b8: 	subq	$0x20, %rax
    000013bc: 	cmpq	%rax, %r13
    000013bf: 	je	.Ltmp608 # Offset: 5055
    000013c5: 	leaq	0x10(%r13), %rdi
    000013c9: 	movq	0xf8(%rsp), %rsi
    000013d1: 	movq	%rdi, (%r13)
    000013d5: 	movq	0xf0(%rsp), %rcx
    000013dd: 	movq	%rsi, (%rsp)
    000013e1: 	movq	%rcx, %rax
    000013e4: 	movq	%rcx, 0x10(%rsp)
    000013e9: 	addq	%rsi, %rax
    000013ec: 	je	.Ltmp609 # Offset: 5100
    000013ee: 	testq	%rcx, %rcx
    000013f1: 	je	.Ltmp610 # Offset: 5105
.Ltmp609:
    000013f7: 	movq	(%rsp), %rax
    000013fb: 	movq	%rax, 0xa8(%rsp)
    00001403: 	cmpq	$0xf, %rax
    00001407: 	ja	.Ltmp611 # Offset: 5127
    0000140d: 	cmpq	$0x1, (%rsp)
    00001412: 	jne	.Ltmp612 # Offset: 5138
    00001418: 	movq	0x10(%rsp), %rax
    0000141d: 	movzbl	(%rax), %eax
    00001420: 	movb	%al, 0x10(%r13)
.Ltmp826:
    00001424: 	movq	(%rsp), %rax
    00001428: 	movq	%rax, 0x8(%r13)
    0000142c: 	movb	$0x0, (%rdi,%rax)
    00001430: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001437: 	addq	$0x20, %rax
    0000143b: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp781:
    00001442: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001449: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001450: 	je	.Ltmp613 # Offset: 5200
.Ltmp780:
    00001456: 	movq	-0x20(%rax), %r13
    0000145a: 	callq	clock@PLT # Offset: 5210
    0000145f: 	pxor	%xmm0, %xmm0
    00001463: 	movq	%rax, end_time(%rip)
    0000146a: 	movq	%r13, %rdi
    0000146d: 	subq	start_time(%rip), %rax
    00001474: 	cvtsi2sd	%rax, %xmm0
    00001479: 	divsd	DATAat0x23450(%rip), %xmm0
    00001481: 	callq	_Z13record_resultdPKc # Offset: 5249
    00001486: 	movq	0xf0(%rsp), %rdi
    0000148e: 	cmpq	%r14, %rdi
    00001491: 	je	.Ltmp614 # Offset: 5265
    00001493: 	movq	0x100(%rsp), %rax
    0000149b: 	leaq	0x1(%rax), %rsi
    0000149f: 	callq	_ZdlPvm@PLT # Offset: 5279
.Ltmp614:
    000014a4: 	leaq	0xd0(%rsp), %rdi
    000014ac: 	leaq	DATAat0x232a5(%rip), %rdx
    000014b3: 	movq	%r15, %rsi
    000014b6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5302
    000014bb: 	movl	iterations(%rip), %edx
    000014c1: 	xorl	%r8d, %r8d
    000014c4: 	xorl	%ecx, %ecx
    000014c6: 	movl	$0x1f40, %esi
    000014cb: 	movq	0xd0(%rsp), %rdi
    000014d3: 	callq	_Z9summarizePKciiii # Offset: 5331
    000014d8: 	movslq	base_iterations(%rip), %rax
    000014df: 	movq	%r15, %rsi
    000014e2: 	movq	%r12, %rdi
    000014e5: 	movq	%rax, %rdx
    000014e8: 	imulq	$0x66666667, %rax, %rax
    000014ef: 	sarl	$0x1f, %edx
    000014f2: 	sarq	$0x22, %rax
    000014f6: 	subl	%edx, %eax
    000014f8: 	leaq	DATAat0x232be(%rip), %rdx
    000014ff: 	movl	%eax, iterations(%rip)
    00001505: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5381
    0000150a: 	callq	clock@PLT # Offset: 5386
    0000150f: 	movl	iterations(%rip), %edx
    00001515: 	movq	%rax, start_time(%rip)
    0000151c: 	testl	%edx, %edx
    0000151e: 	jle	.Ltmp615 # Offset: 5406
    00001524: 	pxor	%xmm4, %xmm4
    00001528: 	movss	DATAat0x235b0(%rip), %xmm6
    00001530: 	movsd	DATAat0x23458(%rip), %xmm5
    00001538: 	movq	DATAat0x234b0(%rip), %xmm7
    00001540: 	movsd	DATAat0x234a0(%rip), %xmm3
    00001548: 	movss	%xmm4, 0x30(%rsp)
    0000154e: 	movss	DATAat0x23948(%rip), %xmm4
    00001556: 	xorl	%r13d, %r13d
    00001559: 	movaps	%xmm6, 0x40(%rsp)
    0000155e: 	movss	DATAat0x235c0(%rip), %xmm6
    00001566: 	movsd	%xmm5, 0x28(%rsp)
    0000156c: 	movaps	%xmm7, 0x10(%rsp)
    00001571: 	movsd	%xmm3, 0x70(%rsp)
    00001577: 	movss	%xmm4, 0x7c(%rsp)
    0000157d: 	movss	%xmm6, (%rsp)
    00001582: 	nopw	(%rax,%rax) # Size: 6
.Ltmp619:
    00001588: 	movq	%rbp, %rax
    0000158b: 	pxor	%xmm1, %xmm1
    0000158f: 	nop # Size: 1
.Ltmp616:
    00001590: 	movaps	DATAat0x235c0(%rip), %xmm0
    00001597: 	addps	(%rax), %xmm0
    0000159a: 	addq	$0x10, %rax
    0000159e: 	addss	%xmm0, %xmm1
    000015a2: 	movaps	%xmm0, %xmm2
    000015a5: 	shufps	$0x55, %xmm0, %xmm2
    000015a9: 	addss	%xmm1, %xmm2
    000015ad: 	movaps	%xmm0, %xmm1
    000015b0: 	unpckhps	%xmm0, %xmm1
    000015b3: 	shufps	$0xff, %xmm0, %xmm0
    000015b7: 	addss	%xmm2, %xmm1
    000015bb: 	addss	%xmm0, %xmm1
    000015bf: 	cmpq	%rbx, %rax
    000015c2: 	jne	.Ltmp616 # Offset: 5570
    000015c4: 	pxor	%xmm2, %xmm2
    000015c8: 	movaps	0x40(%rsp), %xmm4
    000015cd: 	movaps	%xmm1, %xmm0
    000015d0: 	cvtsd2ss	init_value(%rip), %xmm2
    000015d8: 	addss	(%rsp), %xmm2
    000015dd: 	mulss	0x7c(%rsp), %xmm2
    000015e3: 	andps	%xmm1, %xmm4
    000015e6: 	subss	%xmm2, %xmm0
    000015ea: 	pxor	%xmm2, %xmm2
    000015ee: 	cvtss2sd	%xmm4, %xmm2
    000015f2: 	comisd	0x28(%rsp), %xmm2
    000015f8: 	jbe	.Ltmp617 # Offset: 5624
    000015fa: 	divss	%xmm1, %xmm0
.Ltmp617:
    000015fe: 	movsd	0x70(%rsp), %xmm6
    00001604: 	cvtss2sd	%xmm0, %xmm0
    00001608: 	andpd	0x10(%rsp), %xmm0
    0000160e: 	comisd	%xmm0, %xmm6
    00001612: 	jbe	.Ltmp618 # Offset: 5650
.Ltmp764:
    00001618: 	addl	$0x1, %r13d
    0000161c: 	cmpl	%edx, %r13d
    0000161f: 	jl	.Ltmp619 # Offset: 5663
.Ltmp615:
    00001625: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000162c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    00001633: 	subq	$0x20, %rax
    00001637: 	cmpq	%rax, %r13
    0000163a: 	je	.Ltmp620 # Offset: 5690
    00001640: 	leaq	0x10(%r13), %rdi
    00001644: 	movq	0xf8(%rsp), %rsi
    0000164c: 	movq	%rdi, (%r13)
    00001650: 	movq	0xf0(%rsp), %rcx
    00001658: 	movq	%rsi, (%rsp)
    0000165c: 	movq	%rcx, %rax
    0000165f: 	movq	%rcx, 0x10(%rsp)
    00001664: 	addq	%rsi, %rax
    00001667: 	je	.Ltmp621 # Offset: 5735
    00001669: 	testq	%rcx, %rcx
    0000166c: 	je	.Ltmp622 # Offset: 5740
.Ltmp621:
    00001672: 	movq	(%rsp), %rax
    00001676: 	movq	%rax, 0xa8(%rsp)
    0000167e: 	cmpq	$0xf, %rax
    00001682: 	ja	.Ltmp623 # Offset: 5762
    00001688: 	cmpq	$0x1, (%rsp)
    0000168d: 	jne	.Ltmp624 # Offset: 5773
    00001693: 	movq	0x10(%rsp), %rax
    00001698: 	movzbl	(%rax), %eax
    0000169b: 	movb	%al, 0x10(%r13)
.Ltmp836:
    0000169f: 	movq	(%rsp), %rax
    000016a3: 	movq	%rax, 0x8(%r13)
    000016a7: 	movb	$0x0, (%rdi,%rax)
    000016ab: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000016b2: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000016b9: 	addq	$0x20, %rax
    000016bd: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000016c4: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    000016cb: 	je	.Ltmp625 # Offset: 5835
.Ltmp774:
    000016d1: 	movq	-0x20(%rax), %r13
    000016d5: 	callq	clock@PLT # Offset: 5845
    000016da: 	pxor	%xmm0, %xmm0
    000016de: 	movq	%rax, end_time(%rip)
    000016e5: 	movq	%r13, %rdi
    000016e8: 	subq	start_time(%rip), %rax
    000016ef: 	cvtsi2sd	%rax, %xmm0
    000016f4: 	divsd	DATAat0x23450(%rip), %xmm0
    000016fc: 	callq	_Z13record_resultdPKc # Offset: 5884
    00001701: 	movq	0xf0(%rsp), %rdi
    00001709: 	cmpq	%r14, %rdi
    0000170c: 	je	.Ltmp626 # Offset: 5900
    0000170e: 	movq	0x100(%rsp), %rax
    00001716: 	leaq	0x1(%rax), %rsi
    0000171a: 	callq	_ZdlPvm@PLT # Offset: 5914
.Ltmp626:
    0000171f: 	leaq	DATAat0x232cc(%rip), %rdx
    00001726: 	movq	%r15, %rsi
    00001729: 	movq	%r12, %rdi
    0000172c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5932
    00001731: 	callq	clock@PLT # Offset: 5937
    00001736: 	movl	iterations(%rip), %edx
    0000173c: 	movq	%rax, start_time(%rip)
    00001743: 	testl	%edx, %edx
    00001745: 	jle	.Ltmp627 # Offset: 5957
    0000174b: 	movss	DATAat0x234e4(%rip), %xmm7
    00001753: 	pxor	%xmm5, %xmm5
    00001757: 	movss	DATAat0x235b0(%rip), %xmm3
    0000175f: 	movsd	DATAat0x23458(%rip), %xmm4
    00001767: 	movq	DATAat0x234b0(%rip), %xmm6
    0000176f: 	movss	%xmm5, 0x30(%rsp)
    00001775: 	movsd	DATAat0x234a0(%rip), %xmm5
    0000177d: 	xorl	%r13d, %r13d
    00001780: 	movss	%xmm7, 0x78(%rsp)
    00001786: 	movss	DATAat0x235f0(%rip), %xmm7
    0000178e: 	movaps	%xmm3, 0x40(%rsp)
    00001793: 	movss	DATAat0x235d0(%rip), %xmm3
    0000179b: 	movsd	%xmm4, 0x28(%rsp)
    000017a1: 	movss	DATAat0x23948(%rip), %xmm4
    000017a9: 	movaps	%xmm6, 0x10(%rsp)
    000017ae: 	movaps	DATAat0x235e0(%rip), %xmm6
    000017b5: 	movsd	%xmm5, 0x70(%rsp)
    000017bb: 	movaps	DATAat0x235f0(%rip), %xmm5
    000017c2: 	movss	%xmm7, 0x90(%rsp)
    000017cb: 	movaps	DATAat0x23600(%rip), %xmm7
    000017d2: 	movss	%xmm3, (%rsp)
    000017d7: 	movss	DATAat0x23600(%rip), %xmm3
    000017df: 	movss	%xmm4, 0x7c(%rsp)
    000017e5: 	movaps	%xmm6, 0x60(%rsp)
    000017ea: 	movaps	%xmm5, 0x50(%rsp)
    000017ef: 	movaps	%xmm7, 0x80(%rsp)
    000017f7: 	movss	%xmm3, 0x94(%rsp)
.Ltmp631:
    00001800: 	movq	%rbp, %rax
    00001803: 	pxor	%xmm1, %xmm1
    00001807: 	nopw	(%rax,%rax) # Size: 9
.Ltmp628:
    00001810: 	movaps	DATAat0x235d0(%rip), %xmm0
    00001817: 	addps	(%rax), %xmm0
    0000181a: 	addq	$0x10, %rax
    0000181e: 	addps	0x60(%rsp), %xmm0
    00001823: 	addps	0x50(%rsp), %xmm0
    00001828: 	addps	0x80(%rsp), %xmm0
    00001830: 	addss	%xmm0, %xmm1
    00001834: 	movaps	%xmm0, %xmm2
    00001837: 	shufps	$0x55, %xmm0, %xmm2
    0000183b: 	addss	%xmm1, %xmm2
    0000183f: 	movaps	%xmm0, %xmm1
    00001842: 	unpckhps	%xmm0, %xmm1
    00001845: 	shufps	$0xff, %xmm0, %xmm0
    00001849: 	addss	%xmm2, %xmm1
    0000184d: 	addss	%xmm0, %xmm1
    00001851: 	cmpq	%rax, %rbx
    00001854: 	jne	.Ltmp628 # Offset: 6228
    00001856: 	pxor	%xmm0, %xmm0
    0000185a: 	movaps	0x40(%rsp), %xmm5
    0000185f: 	movaps	%xmm1, %xmm2
    00001862: 	cvtsd2ss	init_value(%rip), %xmm0
    0000186a: 	addss	(%rsp), %xmm0
    0000186f: 	addss	0x78(%rsp), %xmm0
    00001875: 	addss	0x90(%rsp), %xmm0
    0000187e: 	andps	%xmm1, %xmm5
    00001881: 	addss	0x94(%rsp), %xmm0
    0000188a: 	mulss	0x7c(%rsp), %xmm0
    00001890: 	subss	%xmm0, %xmm2
    00001894: 	pxor	%xmm0, %xmm0
    00001898: 	cvtss2sd	%xmm5, %xmm0
    0000189c: 	comisd	0x28(%rsp), %xmm0
    000018a2: 	jbe	.Ltmp629 # Offset: 6306
    000018a4: 	divss	%xmm1, %xmm2
.Ltmp629:
    000018a8: 	movsd	0x70(%rsp), %xmm7
    000018ae: 	cvtss2sd	%xmm2, %xmm2
    000018b2: 	andpd	0x10(%rsp), %xmm2
    000018b8: 	comisd	%xmm2, %xmm7
    000018bc: 	jbe	.Ltmp630 # Offset: 6332
.Ltmp763:
    000018c2: 	addl	$0x1, %r13d
    000018c6: 	cmpl	%edx, %r13d
    000018c9: 	jl	.Ltmp631 # Offset: 6345
.Ltmp627:
    000018cf: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000018d6: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    000018dd: 	subq	$0x20, %rax
    000018e1: 	cmpq	%rax, %r13
    000018e4: 	je	.Ltmp632 # Offset: 6372
    000018ea: 	leaq	0x10(%r13), %rdi
    000018ee: 	movq	0xf8(%rsp), %rsi
    000018f6: 	movq	%rdi, (%r13)
    000018fa: 	movq	0xf0(%rsp), %rcx
    00001902: 	movq	%rsi, (%rsp)
    00001906: 	movq	%rcx, %rax
    00001909: 	movq	%rcx, 0x10(%rsp)
    0000190e: 	addq	%rsi, %rax
    00001911: 	je	.Ltmp633 # Offset: 6417
    00001913: 	testq	%rcx, %rcx
    00001916: 	je	.Ltmp634 # Offset: 6422
.Ltmp633:
    0000191c: 	movq	(%rsp), %rax
    00001920: 	movq	%rax, 0xa8(%rsp)
    00001928: 	cmpq	$0xf, %rax
    0000192c: 	ja	.Ltmp635 # Offset: 6444
    00001932: 	cmpq	$0x1, (%rsp)
    00001937: 	jne	.Ltmp636 # Offset: 6455
    0000193d: 	movq	0x10(%rsp), %rax
    00001942: 	movzbl	(%rax), %eax
    00001945: 	movb	%al, 0x10(%r13)
.Ltmp843:
    00001949: 	movq	(%rsp), %rax
    0000194d: 	movq	%rax, 0x8(%r13)
    00001951: 	movb	$0x0, (%rdi,%rax)
    00001955: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000195c: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001963: 	addq	$0x20, %rax
    00001967: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000196e: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00001975: 	je	.Ltmp637 # Offset: 6517
.Ltmp779:
    0000197b: 	movq	-0x20(%rax), %r13
    0000197f: 	callq	clock@PLT # Offset: 6527
    00001984: 	pxor	%xmm0, %xmm0
    00001988: 	movq	%rax, end_time(%rip)
    0000198f: 	movq	%r13, %rdi
    00001992: 	subq	start_time(%rip), %rax
    00001999: 	cvtsi2sd	%rax, %xmm0
    0000199e: 	divsd	DATAat0x23450(%rip), %xmm0
    000019a6: 	callq	_Z13record_resultdPKc # Offset: 6566
    000019ab: 	movq	0xf0(%rsp), %rdi
    000019b3: 	cmpq	%r14, %rdi
    000019b6: 	je	.Ltmp638 # Offset: 6582
    000019b8: 	movq	0x100(%rsp), %rax
    000019c0: 	leaq	0x1(%rax), %rsi
    000019c4: 	callq	_ZdlPvm@PLT # Offset: 6596
.Ltmp638:
    000019c9: 	leaq	DATAat0x232e4(%rip), %rdx
    000019d0: 	movq	%r15, %rsi
    000019d3: 	movq	%r12, %rdi
    000019d6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6614
    000019db: 	callq	clock@PLT # Offset: 6619
    000019e0: 	movl	iterations(%rip), %edx
    000019e6: 	movq	%rax, start_time(%rip)
    000019ed: 	testl	%edx, %edx
    000019ef: 	jle	.Ltmp639 # Offset: 6639
    000019f5: 	pxor	%xmm4, %xmm4
    000019f9: 	movss	DATAat0x235b0(%rip), %xmm6
    00001a01: 	movsd	DATAat0x23458(%rip), %xmm5
    00001a09: 	movq	DATAat0x234b0(%rip), %xmm7
    00001a11: 	movsd	DATAat0x234a0(%rip), %xmm3
    00001a19: 	movss	%xmm4, 0x30(%rsp)
    00001a1f: 	movss	DATAat0x23948(%rip), %xmm4
    00001a27: 	xorl	%r13d, %r13d
    00001a2a: 	movaps	%xmm6, 0x40(%rsp)
    00001a2f: 	movss	DATAat0x235c0(%rip), %xmm6
    00001a37: 	movsd	%xmm5, 0x28(%rsp)
    00001a3d: 	movaps	%xmm7, 0x10(%rsp)
    00001a42: 	movsd	%xmm3, 0x70(%rsp)
    00001a48: 	movss	%xmm4, 0x7c(%rsp)
    00001a4e: 	movss	%xmm6, (%rsp)
    00001a53: 	nopl	(%rax,%rax) # Size: 5
.Ltmp643:
    00001a58: 	movq	%rbp, %rax
    00001a5b: 	pxor	%xmm1, %xmm1
    00001a5f: 	nop # Size: 1
.Ltmp640:
    00001a60: 	movaps	DATAat0x23610(%rip), %xmm0
    00001a67: 	addps	(%rax), %xmm0
    00001a6a: 	addq	$0x10, %rax
    00001a6e: 	addss	%xmm0, %xmm1
    00001a72: 	movaps	%xmm0, %xmm2
    00001a75: 	shufps	$0x55, %xmm0, %xmm2
    00001a79: 	addss	%xmm1, %xmm2
    00001a7d: 	movaps	%xmm0, %xmm1
    00001a80: 	unpckhps	%xmm0, %xmm1
    00001a83: 	shufps	$0xff, %xmm0, %xmm0
    00001a87: 	addss	%xmm2, %xmm1
    00001a8b: 	addss	%xmm0, %xmm1
    00001a8f: 	cmpq	%rbx, %rax
    00001a92: 	jne	.Ltmp640 # Offset: 6802
    00001a94: 	pxor	%xmm2, %xmm2
    00001a98: 	movaps	0x40(%rsp), %xmm6
    00001a9d: 	movaps	%xmm1, %xmm0
    00001aa0: 	cvtsd2ss	init_value(%rip), %xmm2
    00001aa8: 	subss	(%rsp), %xmm2
    00001aad: 	mulss	0x7c(%rsp), %xmm2
    00001ab3: 	andps	%xmm1, %xmm6
    00001ab6: 	subss	%xmm2, %xmm0
    00001aba: 	pxor	%xmm2, %xmm2
    00001abe: 	cvtss2sd	%xmm6, %xmm2
    00001ac2: 	comisd	0x28(%rsp), %xmm2
    00001ac8: 	jbe	.Ltmp641 # Offset: 6856
    00001aca: 	divss	%xmm1, %xmm0
.Ltmp641:
    00001ace: 	movsd	0x70(%rsp), %xmm7
    00001ad4: 	cvtss2sd	%xmm0, %xmm0
    00001ad8: 	andpd	0x10(%rsp), %xmm0
    00001ade: 	comisd	%xmm0, %xmm7
    00001ae2: 	jbe	.Ltmp642 # Offset: 6882
.Ltmp758:
    00001ae8: 	addl	$0x1, %r13d
    00001aec: 	cmpl	%edx, %r13d
    00001aef: 	jl	.Ltmp643 # Offset: 6895
.Ltmp639:
    00001af5: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001afc: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    00001b03: 	subq	$0x20, %rax
    00001b07: 	cmpq	%rax, %r13
    00001b0a: 	je	.Ltmp644 # Offset: 6922
    00001b10: 	leaq	0x10(%r13), %rdi
    00001b14: 	movq	0xf8(%rsp), %rsi
    00001b1c: 	movq	%rdi, (%r13)
    00001b20: 	movq	0xf0(%rsp), %rcx
    00001b28: 	movq	%rsi, (%rsp)
    00001b2c: 	movq	%rcx, %rax
    00001b2f: 	movq	%rcx, 0x10(%rsp)
    00001b34: 	addq	%rsi, %rax
    00001b37: 	je	.Ltmp645 # Offset: 6967
    00001b39: 	testq	%rcx, %rcx
    00001b3c: 	je	.Ltmp646 # Offset: 6972
.Ltmp645:
    00001b42: 	movq	(%rsp), %rax
    00001b46: 	movq	%rax, 0xa8(%rsp)
    00001b4e: 	cmpq	$0xf, %rax
    00001b52: 	ja	.Ltmp647 # Offset: 6994
    00001b58: 	cmpq	$0x1, (%rsp)
    00001b5d: 	jne	.Ltmp648 # Offset: 7005
    00001b63: 	movq	0x10(%rsp), %rax
    00001b68: 	movzbl	(%rax), %eax
    00001b6b: 	movb	%al, 0x10(%r13)
.Ltmp831:
    00001b6f: 	movq	(%rsp), %rax
    00001b73: 	movq	%rax, 0x8(%r13)
    00001b77: 	movb	$0x0, (%rdi,%rax)
    00001b7b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001b82: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001b89: 	addq	$0x20, %rax
    00001b8d: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001b94: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00001b9b: 	je	.Ltmp649 # Offset: 7067
.Ltmp788:
    00001ba1: 	movq	-0x20(%rax), %r13
    00001ba5: 	callq	clock@PLT # Offset: 7077
    00001baa: 	pxor	%xmm0, %xmm0
    00001bae: 	movq	%rax, end_time(%rip)
    00001bb5: 	movq	%r13, %rdi
    00001bb8: 	subq	start_time(%rip), %rax
    00001bbf: 	cvtsi2sd	%rax, %xmm0
    00001bc4: 	divsd	DATAat0x23450(%rip), %xmm0
    00001bcc: 	callq	_Z13record_resultdPKc # Offset: 7116
    00001bd1: 	movq	0xf0(%rsp), %rdi
    00001bd9: 	cmpq	%r14, %rdi
    00001bdc: 	je	.Ltmp650 # Offset: 7132
    00001bde: 	movq	0x100(%rsp), %rax
    00001be6: 	leaq	0x1(%rax), %rsi
    00001bea: 	callq	_ZdlPvm@PLT # Offset: 7146
.Ltmp650:
    00001bef: 	leaq	DATAat0x232f7(%rip), %rdx
    00001bf6: 	movq	%r15, %rsi
    00001bf9: 	movq	%r12, %rdi
    00001bfc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7164
    00001c01: 	callq	clock@PLT # Offset: 7169
    00001c06: 	movl	iterations(%rip), %edx
    00001c0c: 	movq	%rax, start_time(%rip)
    00001c13: 	testl	%edx, %edx
    00001c15: 	jle	.Ltmp651 # Offset: 7189
    00001c1b: 	movss	DATAat0x234e4(%rip), %xmm7
    00001c23: 	movsd	DATAat0x23458(%rip), %xmm4
    00001c2b: 	pxor	%xmm5, %xmm5
    00001c2f: 	movss	DATAat0x235b0(%rip), %xmm3
    00001c37: 	movq	DATAat0x234b0(%rip), %xmm6
    00001c3f: 	movss	%xmm5, 0x30(%rsp)
    00001c45: 	movsd	DATAat0x234a0(%rip), %xmm5
    00001c4d: 	xorl	%r13d, %r13d
    00001c50: 	movss	%xmm7, 0x78(%rsp)
    00001c56: 	movss	DATAat0x235f0(%rip), %xmm7
    00001c5e: 	movaps	%xmm3, 0x40(%rsp)
    00001c63: 	movss	DATAat0x235d0(%rip), %xmm3
    00001c6b: 	movsd	%xmm4, 0x28(%rsp)
    00001c71: 	movss	DATAat0x23948(%rip), %xmm4
    00001c79: 	movaps	%xmm6, 0x10(%rsp)
    00001c7e: 	movss	DATAat0x23600(%rip), %xmm6
    00001c86: 	movsd	%xmm5, 0x70(%rsp)
    00001c8c: 	movss	%xmm7, 0x90(%rsp)
    00001c95: 	movss	%xmm3, (%rsp)
    00001c9a: 	movss	%xmm4, 0x7c(%rsp)
    00001ca0: 	movss	%xmm6, 0x94(%rsp)
    00001ca9: 	nopl	(%rax) # Size: 7
.Ltmp655:
    00001cb0: 	movq	%rbp, %rax
    00001cb3: 	pxor	%xmm1, %xmm1
    00001cb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp652:
    00001cc0: 	movaps	DATAat0x23620(%rip), %xmm0
    00001cc7: 	addps	(%rax), %xmm0
    00001cca: 	addq	$0x10, %rax
    00001cce: 	addps	DATAat0x23630(%rip), %xmm0
    00001cd5: 	addps	DATAat0x23640(%rip), %xmm0
    00001cdc: 	addps	DATAat0x23650(%rip), %xmm0
    00001ce3: 	addss	%xmm0, %xmm1
    00001ce7: 	movaps	%xmm0, %xmm2
    00001cea: 	shufps	$0x55, %xmm0, %xmm2
    00001cee: 	addss	%xmm1, %xmm2
    00001cf2: 	movaps	%xmm0, %xmm1
    00001cf5: 	unpckhps	%xmm0, %xmm1
    00001cf8: 	shufps	$0xff, %xmm0, %xmm0
    00001cfc: 	addss	%xmm2, %xmm1
    00001d00: 	addss	%xmm0, %xmm1
    00001d04: 	cmpq	%rax, %rbx
    00001d07: 	jne	.Ltmp652 # Offset: 7431
    00001d09: 	pxor	%xmm0, %xmm0
    00001d0d: 	movaps	0x40(%rsp), %xmm7
    00001d12: 	movaps	%xmm1, %xmm2
    00001d15: 	cvtsd2ss	init_value(%rip), %xmm0
    00001d1d: 	subss	(%rsp), %xmm0
    00001d22: 	subss	0x78(%rsp), %xmm0
    00001d28: 	subss	0x90(%rsp), %xmm0
    00001d31: 	andps	%xmm1, %xmm7
    00001d34: 	subss	0x94(%rsp), %xmm0
    00001d3d: 	mulss	0x7c(%rsp), %xmm0
    00001d43: 	subss	%xmm0, %xmm2
    00001d47: 	pxor	%xmm0, %xmm0
    00001d4b: 	cvtss2sd	%xmm7, %xmm0
    00001d4f: 	comisd	0x28(%rsp), %xmm0
    00001d55: 	jbe	.Ltmp653 # Offset: 7509
    00001d57: 	divss	%xmm1, %xmm2
.Ltmp653:
    00001d5b: 	movsd	0x70(%rsp), %xmm4
    00001d61: 	cvtss2sd	%xmm2, %xmm2
    00001d65: 	andpd	0x10(%rsp), %xmm2
    00001d6b: 	comisd	%xmm2, %xmm4
    00001d6f: 	jbe	.Ltmp654 # Offset: 7535
.Ltmp757:
    00001d75: 	addl	$0x1, %r13d
    00001d79: 	cmpl	%edx, %r13d
    00001d7c: 	jl	.Ltmp655 # Offset: 7548
.Ltmp651:
    00001d82: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001d89: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    00001d90: 	subq	$0x20, %rax
    00001d94: 	cmpq	%rax, %r13
    00001d97: 	je	.Ltmp656 # Offset: 7575
    00001d9d: 	leaq	0x10(%r13), %rdi
    00001da1: 	movq	0xf8(%rsp), %rsi
    00001da9: 	movq	%rdi, (%r13)
    00001dad: 	movq	0xf0(%rsp), %rcx
    00001db5: 	movq	%rsi, (%rsp)
    00001db9: 	movq	%rcx, %rax
    00001dbc: 	movq	%rcx, 0x10(%rsp)
    00001dc1: 	addq	%rsi, %rax
    00001dc4: 	je	.Ltmp657 # Offset: 7620
    00001dc6: 	testq	%rcx, %rcx
    00001dc9: 	je	.Ltmp658 # Offset: 7625
.Ltmp657:
    00001dcf: 	movq	(%rsp), %rax
    00001dd3: 	movq	%rax, 0xa8(%rsp)
    00001ddb: 	cmpq	$0xf, %rax
    00001ddf: 	ja	.Ltmp659 # Offset: 7647
    00001de5: 	cmpq	$0x1, (%rsp)
    00001dea: 	jne	.Ltmp660 # Offset: 7658
    00001df0: 	movq	0x10(%rsp), %rax
    00001df5: 	movzbl	(%rax), %eax
    00001df8: 	movb	%al, 0x10(%r13)
.Ltmp813:
    00001dfc: 	movq	(%rsp), %rax
    00001e00: 	movq	%rax, 0x8(%r13)
    00001e04: 	movb	$0x0, (%rdi,%rax)
    00001e08: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001e0f: 	addq	$0x20, %rax
    00001e13: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp805:
    00001e1a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001e21: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001e28: 	je	.Ltmp661 # Offset: 7720
.Ltmp804:
    00001e2e: 	movq	-0x20(%rax), %r13
    00001e32: 	callq	clock@PLT # Offset: 7730
    00001e37: 	pxor	%xmm0, %xmm0
    00001e3b: 	movq	%rax, end_time(%rip)
    00001e42: 	movq	%r13, %rdi
    00001e45: 	subq	start_time(%rip), %rax
    00001e4c: 	cvtsi2sd	%rax, %xmm0
    00001e51: 	divsd	DATAat0x23450(%rip), %xmm0
    00001e59: 	callq	_Z13record_resultdPKc # Offset: 7769
    00001e5e: 	movq	0xf0(%rsp), %rdi
    00001e66: 	cmpq	%r14, %rdi
    00001e69: 	je	.Ltmp662 # Offset: 7785
    00001e6b: 	movq	0x100(%rsp), %rax
    00001e73: 	leaq	0x1(%rax), %rsi
    00001e77: 	callq	_ZdlPvm@PLT # Offset: 7799
.Ltmp662:
    00001e7c: 	leaq	DATAat0x23314(%rip), %rdx
    00001e83: 	movq	%r15, %rsi
    00001e86: 	movq	%r12, %rdi
    00001e89: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7817
    00001e8e: 	callq	clock@PLT # Offset: 7822
    00001e93: 	movl	iterations(%rip), %edx
    00001e99: 	movq	%rax, start_time(%rip)
    00001ea0: 	testl	%edx, %edx
    00001ea2: 	jle	.Ltmp663 # Offset: 7842
    00001ea8: 	movsd	DATAat0x23458(%rip), %xmm3
    00001eb0: 	pxor	%xmm5, %xmm5
    00001eb4: 	movss	DATAat0x235b0(%rip), %xmm7
    00001ebc: 	movq	DATAat0x234b0(%rip), %xmm4
    00001ec4: 	movsd	DATAat0x234a0(%rip), %xmm6
    00001ecc: 	movss	%xmm5, 0x30(%rsp)
    00001ed2: 	movss	DATAat0x23948(%rip), %xmm5
    00001eda: 	xorl	%r13d, %r13d
    00001edd: 	movaps	%xmm7, 0x40(%rsp)
    00001ee2: 	movaps	DATAat0x23660(%rip), %xmm7
    00001ee9: 	movsd	%xmm3, 0x28(%rsp)
    00001eef: 	movss	DATAat0x23660(%rip), %xmm3
    00001ef7: 	movaps	%xmm4, 0x10(%rsp)
    00001efc: 	movsd	%xmm6, 0x70(%rsp)
    00001f02: 	movss	%xmm5, 0x7c(%rsp)
    00001f08: 	movaps	%xmm7, (%rsp)
    00001f0c: 	movss	%xmm3, 0x78(%rsp)
    00001f12: 	nopw	(%rax,%rax) # Size: 6
.Ltmp667:
    00001f18: 	movq	%rbp, %rax
    00001f1b: 	pxor	%xmm1, %xmm1
    00001f1f: 	nop # Size: 1
.Ltmp664:
    00001f20: 	movaps	(%rsp), %xmm0
    00001f24: 	mulps	(%rax), %xmm0
    00001f27: 	addq	$0x10, %rax
    00001f2b: 	addss	%xmm0, %xmm1
    00001f2f: 	movaps	%xmm0, %xmm2
    00001f32: 	shufps	$0x55, %xmm0, %xmm2
    00001f36: 	addss	%xmm1, %xmm2
    00001f3a: 	movaps	%xmm0, %xmm1
    00001f3d: 	unpckhps	%xmm0, %xmm1
    00001f40: 	shufps	$0xff, %xmm0, %xmm0
    00001f44: 	addss	%xmm2, %xmm1
    00001f48: 	addss	%xmm0, %xmm1
    00001f4c: 	cmpq	%rbx, %rax
    00001f4f: 	jne	.Ltmp664 # Offset: 8015
    00001f51: 	pxor	%xmm2, %xmm2
    00001f55: 	movaps	0x40(%rsp), %xmm3
    00001f5a: 	movaps	%xmm1, %xmm0
    00001f5d: 	cvtsd2ss	init_value(%rip), %xmm2
    00001f65: 	mulss	0x78(%rsp), %xmm2
    00001f6b: 	mulss	0x7c(%rsp), %xmm2
    00001f71: 	andps	%xmm1, %xmm3
    00001f74: 	subss	%xmm2, %xmm0
    00001f78: 	pxor	%xmm2, %xmm2
    00001f7c: 	cvtss2sd	%xmm3, %xmm2
    00001f80: 	comisd	0x28(%rsp), %xmm2
    00001f86: 	jbe	.Ltmp665 # Offset: 8070
    00001f88: 	divss	%xmm1, %xmm0
.Ltmp665:
    00001f8c: 	movsd	0x70(%rsp), %xmm4
    00001f92: 	cvtss2sd	%xmm0, %xmm0
    00001f96: 	andpd	0x10(%rsp), %xmm0
    00001f9c: 	comisd	%xmm0, %xmm4
    00001fa0: 	jbe	.Ltmp666 # Offset: 8096
.Ltmp756:
    00001fa6: 	addl	$0x1, %r13d
    00001faa: 	cmpl	%edx, %r13d
    00001fad: 	jl	.Ltmp667 # Offset: 8109
.Ltmp663:
    00001fb3: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001fba: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    00001fc1: 	subq	$0x20, %rax
    00001fc5: 	cmpq	%rax, %r13
    00001fc8: 	je	.Ltmp668 # Offset: 8136
    00001fce: 	leaq	0x10(%r13), %rdi
    00001fd2: 	movq	0xf8(%rsp), %rsi
    00001fda: 	movq	%rdi, (%r13)
    00001fde: 	movq	0xf0(%rsp), %rcx
    00001fe6: 	movq	%rsi, (%rsp)
    00001fea: 	movq	%rcx, %rax
    00001fed: 	movq	%rcx, 0x10(%rsp)
    00001ff2: 	addq	%rsi, %rax
    00001ff5: 	je	.Ltmp669 # Offset: 8181
    00001ff7: 	testq	%rcx, %rcx
    00001ffa: 	je	.Ltmp670 # Offset: 8186
.Ltmp669:
    00002000: 	movq	(%rsp), %rax
    00002004: 	movq	%rax, 0xa8(%rsp)
    0000200c: 	cmpq	$0xf, %rax
    00002010: 	ja	.Ltmp671 # Offset: 8208
    00002016: 	cmpq	$0x1, (%rsp)
    0000201b: 	jne	.Ltmp672 # Offset: 8219
    00002021: 	movq	0x10(%rsp), %rax
    00002026: 	movzbl	(%rax), %eax
    00002029: 	movb	%al, 0x10(%r13)
.Ltmp811:
    0000202d: 	movq	(%rsp), %rax
    00002031: 	movq	%rax, 0x8(%r13)
    00002035: 	movb	$0x0, (%rdi,%rax)
    00002039: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002040: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002047: 	addq	$0x20, %rax
    0000204b: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002052: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00002059: 	je	.Ltmp673 # Offset: 8281
.Ltmp790:
    0000205f: 	movq	-0x20(%rax), %r13
    00002063: 	callq	clock@PLT # Offset: 8291
    00002068: 	pxor	%xmm0, %xmm0
    0000206c: 	movq	%rax, end_time(%rip)
    00002073: 	movq	%r13, %rdi
    00002076: 	subq	start_time(%rip), %rax
    0000207d: 	cvtsi2sd	%rax, %xmm0
    00002082: 	divsd	DATAat0x23450(%rip), %xmm0
    0000208a: 	callq	_Z13record_resultdPKc # Offset: 8330
    0000208f: 	movq	0xf0(%rsp), %rdi
    00002097: 	cmpq	%r14, %rdi
    0000209a: 	je	.Ltmp674 # Offset: 8346
    0000209c: 	movq	0x100(%rsp), %rax
    000020a4: 	leaq	0x1(%rax), %rsi
    000020a8: 	callq	_ZdlPvm@PLT # Offset: 8360
.Ltmp674:
    000020ad: 	leaq	DATAat0x23327(%rip), %rdx
    000020b4: 	movq	%r15, %rsi
    000020b7: 	movq	%r12, %rdi
    000020ba: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8378
    000020bf: 	callq	clock@PLT # Offset: 8383
    000020c4: 	movl	iterations(%rip), %edx
    000020ca: 	movq	%rax, start_time(%rip)
    000020d1: 	testl	%edx, %edx
    000020d3: 	jle	.Ltmp675 # Offset: 8403
    000020d9: 	pxor	%xmm4, %xmm4
    000020dd: 	movss	DATAat0x235b0(%rip), %xmm6
    000020e5: 	movsd	DATAat0x23458(%rip), %xmm5
    000020ed: 	movq	DATAat0x234b0(%rip), %xmm7
    000020f5: 	movsd	DATAat0x234a0(%rip), %xmm3
    000020fd: 	movss	%xmm4, 0x30(%rsp)
    00002103: 	movss	DATAat0x235f0(%rip), %xmm4
    0000210b: 	xorl	%r13d, %r13d
    0000210e: 	movaps	%xmm6, 0x40(%rsp)
    00002113: 	movss	DATAat0x23948(%rip), %xmm6
    0000211b: 	movsd	%xmm5, 0x28(%rsp)
    00002121: 	movaps	DATAat0x235f0(%rip), %xmm5
    00002128: 	movaps	%xmm7, 0x10(%rsp)
    0000212d: 	movaps	DATAat0x23600(%rip), %xmm7
    00002134: 	movsd	%xmm3, 0x70(%rsp)
    0000213a: 	movss	DATAat0x23600(%rip), %xmm3
    00002142: 	movss	%xmm4, 0x90(%rsp)
    0000214b: 	movaps	DATAat0x23670(%rip), %xmm4
    00002152: 	movss	%xmm6, 0x7c(%rsp)
    00002158: 	movss	DATAat0x23670(%rip), %xmm6
    00002160: 	movaps	%xmm5, 0x50(%rsp)
    00002165: 	movaps	%xmm7, 0x80(%rsp)
    0000216d: 	movss	%xmm3, 0x94(%rsp)
    00002176: 	movaps	%xmm4, (%rsp)
    0000217a: 	movss	%xmm6, 0x78(%rsp)
.Ltmp679:
    00002180: 	movq	%rbp, %rax
    00002183: 	pxor	%xmm1, %xmm1
    00002187: 	nopw	(%rax,%rax) # Size: 9
.Ltmp676:
    00002190: 	movaps	(%rax), %xmm0
    00002193: 	addq	$0x10, %rax
    00002197: 	addps	%xmm0, %xmm0
    0000219a: 	mulps	0x50(%rsp), %xmm0
    0000219f: 	mulps	0x80(%rsp), %xmm0
    000021a7: 	mulps	(%rsp), %xmm0
    000021ab: 	addss	%xmm0, %xmm1
    000021af: 	movaps	%xmm0, %xmm2
    000021b2: 	shufps	$0x55, %xmm0, %xmm2
    000021b6: 	addss	%xmm1, %xmm2
    000021ba: 	movaps	%xmm0, %xmm1
    000021bd: 	unpckhps	%xmm0, %xmm1
    000021c0: 	shufps	$0xff, %xmm0, %xmm0
    000021c4: 	addss	%xmm2, %xmm1
    000021c8: 	addss	%xmm0, %xmm1
    000021cc: 	cmpq	%rbx, %rax
    000021cf: 	jne	.Ltmp676 # Offset: 8655
    000021d1: 	pxor	%xmm0, %xmm0
    000021d5: 	movaps	0x40(%rsp), %xmm4
    000021da: 	movaps	%xmm1, %xmm2
    000021dd: 	cvtsd2ss	init_value(%rip), %xmm0
    000021e5: 	addss	%xmm0, %xmm0
    000021e9: 	mulss	0x90(%rsp), %xmm0
    000021f2: 	mulss	0x94(%rsp), %xmm0
    000021fb: 	andps	%xmm1, %xmm4
    000021fe: 	mulss	0x78(%rsp), %xmm0
    00002204: 	mulss	0x7c(%rsp), %xmm0
    0000220a: 	subss	%xmm0, %xmm2
    0000220e: 	pxor	%xmm0, %xmm0
    00002212: 	cvtss2sd	%xmm4, %xmm0
    00002216: 	comisd	0x28(%rsp), %xmm0
    0000221c: 	jbe	.Ltmp677 # Offset: 8732
    0000221e: 	divss	%xmm1, %xmm2
.Ltmp677:
    00002222: 	movsd	0x70(%rsp), %xmm7
    00002228: 	cvtss2sd	%xmm2, %xmm2
    0000222c: 	andpd	0x10(%rsp), %xmm2
    00002232: 	comisd	%xmm2, %xmm7
    00002236: 	jbe	.Ltmp678 # Offset: 8758
.Ltmp755:
    0000223c: 	addl	$0x1, %r13d
    00002240: 	cmpl	%edx, %r13d
    00002243: 	jl	.Ltmp679 # Offset: 8771
.Ltmp675:
    00002249: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00002250: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    00002257: 	subq	$0x20, %rax
    0000225b: 	cmpq	%rax, %r13
    0000225e: 	je	.Ltmp680 # Offset: 8798
    00002264: 	leaq	0x10(%r13), %rdi
    00002268: 	movq	0xf8(%rsp), %rsi
    00002270: 	movq	%rdi, (%r13)
    00002274: 	movq	0xf0(%rsp), %rcx
    0000227c: 	movq	%rsi, (%rsp)
    00002280: 	movq	%rcx, %rax
    00002283: 	movq	%rcx, 0x10(%rsp)
    00002288: 	addq	%rsi, %rax
    0000228b: 	je	.Ltmp681 # Offset: 8843
    0000228d: 	testq	%rcx, %rcx
    00002290: 	je	.Ltmp682 # Offset: 8848
.Ltmp681:
    00002296: 	movq	(%rsp), %rax
    0000229a: 	movq	%rax, 0xa8(%rsp)
    000022a2: 	cmpq	$0xf, %rax
    000022a6: 	ja	.Ltmp683 # Offset: 8870
    000022ac: 	cmpq	$0x1, (%rsp)
    000022b1: 	jne	.Ltmp684 # Offset: 8881
    000022b7: 	movq	0x10(%rsp), %rax
    000022bc: 	movzbl	(%rax), %eax
    000022bf: 	movb	%al, 0x10(%r13)
.Ltmp819:
    000022c3: 	movq	(%rsp), %rax
    000022c7: 	movq	%rax, 0x8(%r13)
    000022cb: 	movb	$0x0, (%rdi,%rax)
    000022cf: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000022d6: 	addq	$0x20, %rax
    000022da: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp800:
    000022e1: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000022e8: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000022ef: 	je	.Ltmp685 # Offset: 8943
.Ltmp784:
    000022f5: 	movq	-0x20(%rax), %r13
    000022f9: 	callq	clock@PLT # Offset: 8953
    000022fe: 	pxor	%xmm0, %xmm0
    00002302: 	movq	%rax, end_time(%rip)
    00002309: 	movq	%r13, %rdi
    0000230c: 	subq	start_time(%rip), %rax
    00002313: 	cvtsi2sd	%rax, %xmm0
    00002318: 	divsd	DATAat0x23450(%rip), %xmm0
    00002320: 	callq	_Z13record_resultdPKc # Offset: 8992
    00002325: 	movq	0xf0(%rsp), %rdi
    0000232d: 	cmpq	%r14, %rdi
    00002330: 	je	.Ltmp686 # Offset: 9008
    00002332: 	movq	0x100(%rsp), %rax
    0000233a: 	leaq	0x1(%rax), %rsi
    0000233e: 	callq	_ZdlPvm@PLT # Offset: 9022
.Ltmp686:
    00002343: 	leaq	DATAat0x23345(%rip), %rdx
    0000234a: 	movq	%r15, %rsi
    0000234d: 	movq	%r12, %rdi
    00002350: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9040
    00002355: 	callq	clock@PLT # Offset: 9045
    0000235a: 	movl	iterations(%rip), %edx
    00002360: 	movq	%rax, start_time(%rip)
    00002367: 	testl	%edx, %edx
    00002369: 	jle	.Ltmp687 # Offset: 9065
    0000236f: 	movsd	DATAat0x23458(%rip), %xmm3
    00002377: 	pxor	%xmm5, %xmm5
    0000237b: 	movss	DATAat0x235b0(%rip), %xmm7
    00002383: 	movq	DATAat0x234b0(%rip), %xmm4
    0000238b: 	movsd	DATAat0x234a0(%rip), %xmm6
    00002393: 	movss	%xmm5, 0x30(%rsp)
    00002399: 	movss	DATAat0x23948(%rip), %xmm5
    000023a1: 	xorl	%r13d, %r13d
    000023a4: 	movaps	%xmm7, 0x40(%rsp)
    000023a9: 	movaps	DATAat0x23660(%rip), %xmm7
    000023b0: 	movsd	%xmm3, 0x28(%rsp)
    000023b6: 	movss	DATAat0x23660(%rip), %xmm3
    000023be: 	movaps	%xmm4, 0x10(%rsp)
    000023c3: 	movsd	%xmm6, 0x70(%rsp)
    000023c9: 	movss	%xmm5, 0x7c(%rsp)
    000023cf: 	movaps	%xmm7, (%rsp)
    000023d3: 	movss	%xmm3, 0x78(%rsp)
    000023d9: 	nopl	(%rax) # Size: 7
.Ltmp691:
    000023e0: 	movq	%rbp, %rax
    000023e3: 	pxor	%xmm1, %xmm1
    000023e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp688:
    000023f0: 	movaps	(%rsp), %xmm0
    000023f4: 	addps	(%rax), %xmm0
    000023f7: 	addq	$0x10, %rax
    000023fb: 	addss	%xmm0, %xmm1
    000023ff: 	movaps	%xmm0, %xmm2
    00002402: 	shufps	$0x55, %xmm0, %xmm2
    00002406: 	addss	%xmm1, %xmm2
    0000240a: 	movaps	%xmm0, %xmm1
    0000240d: 	unpckhps	%xmm0, %xmm1
    00002410: 	shufps	$0xff, %xmm0, %xmm0
    00002414: 	addss	%xmm2, %xmm1
    00002418: 	addss	%xmm0, %xmm1
    0000241c: 	cmpq	%rbx, %rax
    0000241f: 	jne	.Ltmp688 # Offset: 9247
    00002421: 	pxor	%xmm2, %xmm2
    00002425: 	movaps	0x40(%rsp), %xmm5
    0000242a: 	movaps	%xmm1, %xmm0
    0000242d: 	cvtsd2ss	init_value(%rip), %xmm2
    00002435: 	addss	0x78(%rsp), %xmm2
    0000243b: 	mulss	0x7c(%rsp), %xmm2
    00002441: 	andps	%xmm1, %xmm5
    00002444: 	subss	%xmm2, %xmm0
    00002448: 	pxor	%xmm2, %xmm2
    0000244c: 	cvtss2sd	%xmm5, %xmm2
    00002450: 	comisd	0x28(%rsp), %xmm2
    00002456: 	jbe	.Ltmp689 # Offset: 9302
    00002458: 	divss	%xmm1, %xmm0
.Ltmp689:
    0000245c: 	movsd	0x70(%rsp), %xmm7
    00002462: 	cvtss2sd	%xmm0, %xmm0
    00002466: 	andpd	0x10(%rsp), %xmm0
    0000246c: 	comisd	%xmm0, %xmm7
    00002470: 	jbe	.Ltmp690 # Offset: 9328
.Ltmp770:
    00002476: 	addl	$0x1, %r13d
    0000247a: 	cmpl	%edx, %r13d
    0000247d: 	jl	.Ltmp691 # Offset: 9341
.Ltmp687:
    00002483: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000248a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    00002491: 	subq	$0x20, %rax
    00002495: 	cmpq	%rax, %r13
    00002498: 	je	.Ltmp692 # Offset: 9368
    0000249e: 	leaq	0x10(%r13), %rdi
    000024a2: 	movq	0xf8(%rsp), %rsi
    000024aa: 	movq	%rdi, (%r13)
    000024ae: 	movq	0xf0(%rsp), %rcx
    000024b6: 	movq	%rsi, (%rsp)
    000024ba: 	movq	%rcx, %rax
    000024bd: 	movq	%rcx, 0x10(%rsp)
    000024c2: 	addq	%rsi, %rax
    000024c5: 	je	.Ltmp693 # Offset: 9413
    000024c7: 	testq	%rcx, %rcx
    000024ca: 	je	.Ltmp694 # Offset: 9418
.Ltmp693:
    000024d0: 	movq	(%rsp), %rax
    000024d4: 	movq	%rax, 0xa8(%rsp)
    000024dc: 	cmpq	$0xf, %rax
    000024e0: 	ja	.Ltmp695 # Offset: 9440
    000024e6: 	cmpq	$0x1, (%rsp)
    000024eb: 	jne	.Ltmp696 # Offset: 9451
    000024f1: 	movq	0x10(%rsp), %rax
    000024f6: 	movzbl	(%rax), %eax
    000024f9: 	movb	%al, 0x10(%r13)
.Ltmp835:
    000024fd: 	movq	(%rsp), %rax
    00002501: 	movq	%rax, 0x8(%r13)
    00002505: 	movb	$0x0, (%rdi,%rax)
    00002509: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002510: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002517: 	addq	$0x20, %rax
    0000251b: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002522: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00002529: 	je	.Ltmp697 # Offset: 9513
.Ltmp795:
    0000252f: 	movq	-0x20(%rax), %r13
    00002533: 	callq	clock@PLT # Offset: 9523
    00002538: 	pxor	%xmm0, %xmm0
    0000253c: 	movq	%rax, end_time(%rip)
    00002543: 	movq	%r13, %rdi
    00002546: 	subq	start_time(%rip), %rax
    0000254d: 	cvtsi2sd	%rax, %xmm0
    00002552: 	divsd	DATAat0x23450(%rip), %xmm0
    0000255a: 	callq	_Z13record_resultdPKc # Offset: 9562
    0000255f: 	movq	0xf0(%rsp), %rdi
    00002567: 	cmpq	%r14, %rdi
    0000256a: 	je	.Ltmp698 # Offset: 9578
    0000256c: 	movq	0x100(%rsp), %rax
    00002574: 	leaq	0x1(%rax), %rsi
    00002578: 	callq	_ZdlPvm@PLT # Offset: 9592
.Ltmp698:
    0000257d: 	leaq	DATAat0x23362(%rip), %rdx
    00002584: 	movq	%r15, %rsi
    00002587: 	movq	%r12, %rdi
    0000258a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9610
    0000258f: 	callq	clock@PLT # Offset: 9615
    00002594: 	movl	iterations(%rip), %edx
    0000259a: 	movq	%rax, start_time(%rip)
    000025a1: 	testl	%edx, %edx
    000025a3: 	jle	.Ltmp699 # Offset: 9635
    000025a9: 	movsd	DATAat0x23458(%rip), %xmm5
    000025b1: 	pxor	%xmm4, %xmm4
    000025b5: 	movss	DATAat0x235b0(%rip), %xmm6
    000025bd: 	movq	DATAat0x234b0(%rip), %xmm7
    000025c5: 	movsd	DATAat0x234a0(%rip), %xmm3
    000025cd: 	movss	%xmm4, 0x30(%rsp)
    000025d3: 	movss	DATAat0x23948(%rip), %xmm4
    000025db: 	xorl	%r13d, %r13d
    000025de: 	movaps	%xmm6, 0x40(%rsp)
    000025e3: 	movaps	DATAat0x23670(%rip), %xmm6
    000025ea: 	movsd	%xmm5, 0x28(%rsp)
    000025f0: 	movss	DATAat0x23670(%rip), %xmm5
    000025f8: 	movaps	%xmm7, 0x10(%rsp)
    000025fd: 	movsd	%xmm3, 0x70(%rsp)
    00002603: 	movss	%xmm4, 0x7c(%rsp)
    00002609: 	movaps	%xmm6, (%rsp)
    0000260d: 	movss	%xmm5, 0x78(%rsp)
    00002613: 	nopl	(%rax,%rax) # Size: 5
.Ltmp703:
    00002618: 	movq	%rbp, %rax
    0000261b: 	pxor	%xmm1, %xmm1
    0000261f: 	nop # Size: 1
.Ltmp700:
    00002620: 	movaps	(%rax), %xmm0
    00002623: 	divps	(%rsp), %xmm0
    00002627: 	addss	%xmm0, %xmm1
    0000262b: 	movaps	%xmm0, %xmm2
    0000262e: 	shufps	$0x55, %xmm0, %xmm2
    00002632: 	addq	$0x10, %rax
    00002636: 	addss	%xmm1, %xmm2
    0000263a: 	movaps	%xmm0, %xmm1
    0000263d: 	unpckhps	%xmm0, %xmm1
    00002640: 	shufps	$0xff, %xmm0, %xmm0
    00002644: 	addss	%xmm2, %xmm1
    00002648: 	addss	%xmm0, %xmm1
    0000264c: 	cmpq	%rbx, %rax
    0000264f: 	jne	.Ltmp700 # Offset: 9807
    00002651: 	pxor	%xmm2, %xmm2
    00002655: 	movaps	0x40(%rsp), %xmm6
    0000265a: 	movaps	%xmm1, %xmm0
    0000265d: 	cvtsd2ss	init_value(%rip), %xmm2
    00002665: 	divss	0x78(%rsp), %xmm2
    0000266b: 	mulss	0x7c(%rsp), %xmm2
    00002671: 	andps	%xmm1, %xmm6
    00002674: 	subss	%xmm2, %xmm0
    00002678: 	pxor	%xmm2, %xmm2
    0000267c: 	cvtss2sd	%xmm6, %xmm2
    00002680: 	comisd	0x28(%rsp), %xmm2
    00002686: 	jbe	.Ltmp701 # Offset: 9862
    00002688: 	divss	%xmm1, %xmm0
.Ltmp701:
    0000268c: 	movsd	0x70(%rsp), %xmm7
    00002692: 	cvtss2sd	%xmm0, %xmm0
    00002696: 	andpd	0x10(%rsp), %xmm0
    0000269c: 	comisd	%xmm0, %xmm7
    000026a0: 	jbe	.Ltmp702 # Offset: 9888
.Ltmp771:
    000026a6: 	addl	$0x1, %r13d
    000026aa: 	cmpl	%edx, %r13d
    000026ad: 	jl	.Ltmp703 # Offset: 9901
.Ltmp699:
    000026b3: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000026ba: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    000026c1: 	subq	$0x20, %rax
    000026c5: 	cmpq	%rax, %r13
    000026c8: 	je	.Ltmp704 # Offset: 9928
    000026ce: 	leaq	0x10(%r13), %rdi
    000026d2: 	movq	0xf8(%rsp), %rsi
    000026da: 	movq	%rdi, (%r13)
    000026de: 	movq	0xf0(%rsp), %rcx
    000026e6: 	movq	%rsi, (%rsp)
    000026ea: 	movq	%rcx, %rax
    000026ed: 	movq	%rcx, 0x10(%rsp)
    000026f2: 	addq	%rsi, %rax
    000026f5: 	je	.Ltmp705 # Offset: 9973
    000026f7: 	testq	%rcx, %rcx
    000026fa: 	je	.Ltmp706 # Offset: 9978
.Ltmp705:
    00002700: 	movq	(%rsp), %rax
    00002704: 	movq	%rax, 0xa8(%rsp)
    0000270c: 	cmpq	$0xf, %rax
    00002710: 	ja	.Ltmp707 # Offset: 10000
    00002716: 	cmpq	$0x1, (%rsp)
    0000271b: 	jne	.Ltmp708 # Offset: 10011
    00002721: 	movq	0x10(%rsp), %rax
    00002726: 	movzbl	(%rax), %eax
    00002729: 	movb	%al, 0x10(%r13)
.Ltmp821:
    0000272d: 	movq	(%rsp), %rax
    00002731: 	movq	%rax, 0x8(%r13)
    00002735: 	movb	$0x0, (%rdi,%rax)
    00002739: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002740: 	addq	$0x20, %rax
    00002744: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp797:
    0000274b: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002752: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002759: 	je	.Ltmp709 # Offset: 10073
.Ltmp796:
    0000275f: 	movq	-0x20(%rax), %r13
    00002763: 	callq	clock@PLT # Offset: 10083
    00002768: 	pxor	%xmm0, %xmm0
    0000276c: 	movq	%rax, end_time(%rip)
    00002773: 	movq	%r13, %rdi
    00002776: 	subq	start_time(%rip), %rax
    0000277d: 	cvtsi2sd	%rax, %xmm0
    00002782: 	divsd	DATAat0x23450(%rip), %xmm0
    0000278a: 	callq	_Z13record_resultdPKc # Offset: 10122
    0000278f: 	movq	0xf0(%rsp), %rdi
    00002797: 	cmpq	%r14, %rdi
    0000279a: 	je	.Ltmp710 # Offset: 10138
    0000279c: 	movq	0x100(%rsp), %rax
    000027a4: 	leaq	0x1(%rax), %rsi
    000027a8: 	callq	_ZdlPvm@PLT # Offset: 10152
.Ltmp710:
    000027ad: 	leaq	DATAat0x23373(%rip), %rdx
    000027b4: 	movq	%r15, %rsi
    000027b7: 	movq	%r12, %rdi
    000027ba: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10170
    000027bf: 	callq	clock@PLT # Offset: 10175
    000027c4: 	movl	iterations(%rip), %edx
    000027ca: 	movq	%rax, start_time(%rip)
    000027d1: 	testl	%edx, %edx
    000027d3: 	jle	.Ltmp711 # Offset: 10195
    000027d9: 	movsd	DATAat0x23458(%rip), %xmm4
    000027e1: 	movq	DATAat0x234b0(%rip), %xmm6
    000027e9: 	pxor	%xmm7, %xmm7
    000027ed: 	movss	DATAat0x235b0(%rip), %xmm3
    000027f5: 	movsd	DATAat0x234a0(%rip), %xmm5
    000027fd: 	movss	%xmm7, 0x30(%rsp)
    00002803: 	movss	DATAat0x235f0(%rip), %xmm7
    0000280b: 	xorl	%r13d, %r13d
    0000280e: 	movaps	%xmm3, 0x40(%rsp)
    00002813: 	movss	DATAat0x23948(%rip), %xmm3
    0000281b: 	movsd	%xmm4, 0x28(%rsp)
    00002821: 	movaps	DATAat0x235f0(%rip), %xmm4
    00002828: 	movaps	%xmm6, 0x10(%rsp)
    0000282d: 	movaps	DATAat0x23670(%rip), %xmm6
    00002834: 	movsd	%xmm5, 0x70(%rsp)
    0000283a: 	movss	DATAat0x23670(%rip), %xmm5
    00002842: 	movss	%xmm7, 0x90(%rsp)
    0000284b: 	movss	%xmm3, 0x7c(%rsp)
    00002851: 	movaps	%xmm4, 0x50(%rsp)
    00002856: 	movaps	%xmm6, (%rsp)
    0000285a: 	movss	%xmm5, 0x78(%rsp)
.Ltmp715:
    00002860: 	movq	%rbp, %rax
    00002863: 	pxor	%xmm1, %xmm1
    00002867: 	nopw	(%rax,%rax) # Size: 9
.Ltmp712:
    00002870: 	movaps	DATAat0x23680(%rip), %xmm0
    00002877: 	mulps	(%rax), %xmm0
    0000287a: 	addq	$0x10, %rax
    0000287e: 	divps	0x50(%rsp), %xmm0
    00002883: 	mulps	DATAat0x23690(%rip), %xmm0
    0000288a: 	divps	(%rsp), %xmm0
    0000288e: 	addss	%xmm0, %xmm1
    00002892: 	movaps	%xmm0, %xmm2
    00002895: 	shufps	$0x55, %xmm0, %xmm2
    00002899: 	addss	%xmm1, %xmm2
    0000289d: 	movaps	%xmm0, %xmm1
    000028a0: 	unpckhps	%xmm0, %xmm1
    000028a3: 	shufps	$0xff, %xmm0, %xmm0
    000028a7: 	addss	%xmm2, %xmm1
    000028ab: 	addss	%xmm0, %xmm1
    000028af: 	cmpq	%rax, %rbx
    000028b2: 	jne	.Ltmp712 # Offset: 10418
    000028b4: 	pxor	%xmm0, %xmm0
    000028b8: 	movaps	0x40(%rsp), %xmm7
    000028bd: 	movaps	%xmm1, %xmm2
    000028c0: 	cvtsd2ss	init_value(%rip), %xmm0
    000028c8: 	mulss	DATAat0x23680(%rip), %xmm0
    000028d0: 	divss	0x90(%rsp), %xmm0
    000028d9: 	andps	%xmm1, %xmm7
    000028dc: 	mulss	DATAat0x23690(%rip), %xmm0
    000028e4: 	divss	0x78(%rsp), %xmm0
    000028ea: 	mulss	0x7c(%rsp), %xmm0
    000028f0: 	subss	%xmm0, %xmm2
    000028f4: 	pxor	%xmm0, %xmm0
    000028f8: 	cvtss2sd	%xmm7, %xmm0
    000028fc: 	comisd	0x28(%rsp), %xmm0
    00002902: 	jbe	.Ltmp713 # Offset: 10498
    00002904: 	divss	%xmm1, %xmm2
.Ltmp713:
    00002908: 	movsd	0x70(%rsp), %xmm3
    0000290e: 	cvtss2sd	%xmm2, %xmm2
    00002912: 	andpd	0x10(%rsp), %xmm2
    00002918: 	comisd	%xmm2, %xmm3
    0000291c: 	jbe	.Ltmp714 # Offset: 10524
.Ltmp769:
    00002922: 	addl	$0x1, %r13d
    00002926: 	cmpl	%edx, %r13d
    00002929: 	jl	.Ltmp715 # Offset: 10537
.Ltmp711:
    0000292f: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00002936: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    0000293d: 	subq	$0x20, %rax
    00002941: 	cmpq	%rax, %r13
    00002944: 	je	.Ltmp716 # Offset: 10564
    0000294a: 	leaq	0x10(%r13), %rdi
    0000294e: 	movq	0xf8(%rsp), %rsi
    00002956: 	movq	%rdi, (%r13)
    0000295a: 	movq	0xf0(%rsp), %rcx
    00002962: 	movq	%rsi, (%rsp)
    00002966: 	movq	%rcx, %rax
    00002969: 	movq	%rcx, 0x10(%rsp)
    0000296e: 	addq	%rsi, %rax
    00002971: 	je	.Ltmp717 # Offset: 10609
    00002973: 	testq	%rcx, %rcx
    00002976: 	je	.Ltmp718 # Offset: 10614
.Ltmp717:
    0000297c: 	movq	(%rsp), %rax
    00002980: 	movq	%rax, 0xa8(%rsp)
    00002988: 	cmpq	$0xf, %rax
    0000298c: 	ja	.Ltmp719 # Offset: 10636
    00002992: 	cmpq	$0x1, (%rsp)
    00002997: 	jne	.Ltmp720 # Offset: 10647
    0000299d: 	movq	0x10(%rsp), %rax
    000029a2: 	movzbl	(%rax), %eax
    000029a5: 	movb	%al, 0x10(%r13)
.Ltmp807:
    000029a9: 	movq	(%rsp), %rax
    000029ad: 	movq	%rax, 0x8(%r13)
    000029b1: 	movb	$0x0, (%rdi,%rax)
    000029b5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000029bc: 	addq	$0x20, %rax
    000029c0: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp802:
    000029c7: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000029ce: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000029d5: 	je	.Ltmp721 # Offset: 10709
.Ltmp801:
    000029db: 	movq	-0x20(%rax), %r13
    000029df: 	callq	clock@PLT # Offset: 10719
    000029e4: 	pxor	%xmm0, %xmm0
    000029e8: 	movq	%rax, end_time(%rip)
    000029ef: 	movq	%r13, %rdi
    000029f2: 	subq	start_time(%rip), %rax
    000029f9: 	cvtsi2sd	%rax, %xmm0
    000029fe: 	divsd	DATAat0x23450(%rip), %xmm0
    00002a06: 	callq	_Z13record_resultdPKc # Offset: 10758
    00002a0b: 	movq	0xf0(%rsp), %rdi
    00002a13: 	cmpq	%r14, %rdi
    00002a16: 	je	.Ltmp722 # Offset: 10774
    00002a18: 	movq	0x100(%rsp), %rax
    00002a20: 	leaq	0x1(%rax), %rsi
    00002a24: 	callq	_ZdlPvm@PLT # Offset: 10788
.Ltmp722:
    00002a29: 	leaq	DATAat0x2338e(%rip), %rdx
    00002a30: 	movq	%r15, %rsi
    00002a33: 	movq	%r12, %rdi
    00002a36: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10806
    00002a3b: 	callq	clock@PLT # Offset: 10811
    00002a40: 	movl	iterations(%rip), %edx
    00002a46: 	movq	%rax, start_time(%rip)
    00002a4d: 	testl	%edx, %edx
    00002a4f: 	jle	.Ltmp723 # Offset: 10831
    00002a55: 	movss	DATAat0x234e4(%rip), %xmm3
    00002a5d: 	pxor	%xmm7, %xmm7
    00002a61: 	movss	DATAat0x235b0(%rip), %xmm4
    00002a69: 	movsd	DATAat0x23458(%rip), %xmm6
    00002a71: 	movq	DATAat0x234b0(%rip), %xmm5
    00002a79: 	movss	%xmm7, 0x30(%rsp)
    00002a7f: 	movsd	DATAat0x234a0(%rip), %xmm7
    00002a87: 	xorl	%r13d, %r13d
    00002a8a: 	movss	%xmm3, 0x78(%rsp)
    00002a90: 	movss	DATAat0x23948(%rip), %xmm3
    00002a98: 	movaps	%xmm4, 0x40(%rsp)
    00002a9d: 	movaps	DATAat0x235e0(%rip), %xmm4
    00002aa4: 	movsd	%xmm6, 0x28(%rsp)
    00002aaa: 	movaps	%xmm5, 0x10(%rsp)
    00002aaf: 	movsd	%xmm7, 0x70(%rsp)
    00002ab5: 	movss	%xmm3, 0x7c(%rsp)
    00002abb: 	movaps	%xmm4, 0x60(%rsp)
.Ltmp727:
    00002ac0: 	movq	%rbp, %rax
    00002ac3: 	pxor	%xmm1, %xmm1
    00002ac7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp724:
    00002ad0: 	movaps	0x60(%rsp), %xmm0
    00002ad5: 	addps	(%rax), %xmm0
    00002ad8: 	addq	$0x10, %rax
    00002adc: 	addss	%xmm0, %xmm1
    00002ae0: 	movaps	%xmm0, %xmm2
    00002ae3: 	shufps	$0x55, %xmm0, %xmm2
    00002ae7: 	addss	%xmm1, %xmm2
    00002aeb: 	movaps	%xmm0, %xmm1
    00002aee: 	unpckhps	%xmm0, %xmm1
    00002af1: 	shufps	$0xff, %xmm0, %xmm0
    00002af5: 	addss	%xmm2, %xmm1
    00002af9: 	addss	%xmm0, %xmm1
    00002afd: 	cmpq	%rbx, %rax
    00002b00: 	jne	.Ltmp724 # Offset: 11008
    00002b02: 	pxor	%xmm2, %xmm2
    00002b06: 	movaps	0x40(%rsp), %xmm3
    00002b0b: 	movaps	%xmm1, %xmm0
    00002b0e: 	cvtsd2ss	init_value(%rip), %xmm2
    00002b16: 	addss	0x78(%rsp), %xmm2
    00002b1c: 	mulss	0x7c(%rsp), %xmm2
    00002b22: 	andps	%xmm1, %xmm3
    00002b25: 	subss	%xmm2, %xmm0
    00002b29: 	pxor	%xmm2, %xmm2
    00002b2d: 	cvtss2sd	%xmm3, %xmm2
    00002b31: 	comisd	0x28(%rsp), %xmm2
    00002b37: 	jbe	.Ltmp725 # Offset: 11063
    00002b39: 	divss	%xmm1, %xmm0
.Ltmp725:
    00002b3d: 	movsd	0x70(%rsp), %xmm3
    00002b43: 	cvtss2sd	%xmm0, %xmm0
    00002b47: 	andpd	0x10(%rsp), %xmm0
    00002b4d: 	comisd	%xmm0, %xmm3
    00002b51: 	jbe	.Ltmp726 # Offset: 11089
.Ltmp768:
    00002b57: 	addl	$0x1, %r13d
    00002b5b: 	cmpl	%edx, %r13d
    00002b5e: 	jl	.Ltmp727 # Offset: 11102
.Ltmp723:
    00002b64: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00002b6b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    00002b72: 	subq	$0x20, %rax
    00002b76: 	cmpq	%rax, %r13
    00002b79: 	je	.Ltmp728 # Offset: 11129
    00002b7f: 	leaq	0x10(%r13), %rdi
    00002b83: 	movq	0xf8(%rsp), %rsi
    00002b8b: 	movq	%rdi, (%r13)
    00002b8f: 	movq	0xf0(%rsp), %rcx
    00002b97: 	movq	%rsi, (%rsp)
    00002b9b: 	movq	%rcx, %rax
    00002b9e: 	movq	%rcx, 0x10(%rsp)
    00002ba3: 	addq	%rsi, %rax
    00002ba6: 	je	.Ltmp729 # Offset: 11174
    00002ba8: 	testq	%rcx, %rcx
    00002bab: 	je	.Ltmp730 # Offset: 11179
.Ltmp729:
    00002bb1: 	movq	(%rsp), %rax
    00002bb5: 	movq	%rax, 0xa8(%rsp)
    00002bbd: 	cmpq	$0xf, %rax
    00002bc1: 	ja	.Ltmp731 # Offset: 11201
    00002bc7: 	cmpq	$0x1, (%rsp)
    00002bcc: 	jne	.Ltmp732 # Offset: 11212
    00002bd2: 	movq	0x10(%rsp), %rax
    00002bd7: 	movzbl	(%rax), %eax
    00002bda: 	movb	%al, 0x10(%r13)
.Ltmp838:
    00002bde: 	movq	(%rsp), %rax
    00002be2: 	movq	%rax, 0x8(%r13)
    00002be6: 	movb	$0x0, (%rdi,%rax)
    00002bea: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002bf1: 	addq	$0x20, %rax
    00002bf5: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp803:
    00002bfc: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002c03: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002c0a: 	je	.Ltmp733 # Offset: 11274
.Ltmp785:
    00002c10: 	movq	-0x20(%rax), %r13
    00002c14: 	callq	clock@PLT # Offset: 11284
    00002c19: 	pxor	%xmm0, %xmm0
    00002c1d: 	movq	%rax, end_time(%rip)
    00002c24: 	movq	%r13, %rdi
    00002c27: 	subq	start_time(%rip), %rax
    00002c2e: 	cvtsi2sd	%rax, %xmm0
    00002c33: 	divsd	DATAat0x23450(%rip), %xmm0
    00002c3b: 	callq	_Z13record_resultdPKc # Offset: 11323
    00002c40: 	movq	0xf0(%rsp), %rdi
    00002c48: 	cmpq	%r14, %rdi
    00002c4b: 	je	.Ltmp734 # Offset: 11339
    00002c4d: 	movq	0x100(%rsp), %rax
    00002c55: 	leaq	0x1(%rax), %rsi
    00002c59: 	callq	_ZdlPvm@PLT # Offset: 11353
.Ltmp734:
    00002c5e: 	leaq	DATAat0x233a9(%rip), %rdx
    00002c65: 	movq	%r15, %rsi
    00002c68: 	movq	%r12, %rdi
    00002c6b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11371
    00002c70: 	callq	clock@PLT # Offset: 11376
    00002c75: 	movl	iterations(%rip), %edx
    00002c7b: 	movq	%rax, start_time(%rip)
    00002c82: 	testl	%edx, %edx
    00002c84: 	jle	.Ltmp735 # Offset: 11396
    00002c8a: 	movss	DATAat0x234e4(%rip), %xmm5
    00002c92: 	pxor	%xmm6, %xmm6
    00002c96: 	movss	DATAat0x235b0(%rip), %xmm7
    00002c9e: 	movsd	DATAat0x23458(%rip), %xmm3
    00002ca6: 	movq	DATAat0x234b0(%rip), %xmm4
    00002cae: 	movss	%xmm6, 0x30(%rsp)
    00002cb4: 	movsd	DATAat0x234a0(%rip), %xmm6
    00002cbc: 	xorl	%r13d, %r13d
    00002cbf: 	movss	%xmm5, 0x78(%rsp)
    00002cc5: 	movss	DATAat0x23948(%rip), %xmm5
    00002ccd: 	movaps	%xmm7, 0x40(%rsp)
    00002cd2: 	movaps	DATAat0x235e0(%rip), %xmm7
    00002cd9: 	movsd	%xmm3, 0x28(%rsp)
    00002cdf: 	movaps	%xmm4, 0x10(%rsp)
    00002ce4: 	movsd	%xmm6, 0x70(%rsp)
    00002cea: 	movss	%xmm5, 0x7c(%rsp)
    00002cf0: 	movaps	%xmm7, 0x60(%rsp)
    00002cf5: 	nopl	(%rax) # Size: 3
.Ltmp739:
    00002cf8: 	movq	%rbp, %rax
    00002cfb: 	pxor	%xmm1, %xmm1
    00002cff: 	nop # Size: 1
.Ltmp736:
    00002d00: 	movaps	0x60(%rsp), %xmm0
    00002d05: 	addps	(%rax), %xmm0
    00002d08: 	addq	$0x10, %rax
    00002d0c: 	addps	DATAat0x236a0(%rip), %xmm0
    00002d13: 	addss	%xmm0, %xmm1
    00002d17: 	movaps	%xmm0, %xmm2
    00002d1a: 	shufps	$0x55, %xmm0, %xmm2
    00002d1e: 	addss	%xmm1, %xmm2
    00002d22: 	movaps	%xmm0, %xmm1
    00002d25: 	unpckhps	%xmm0, %xmm1
    00002d28: 	shufps	$0xff, %xmm0, %xmm0
    00002d2c: 	addss	%xmm2, %xmm1
    00002d30: 	addss	%xmm0, %xmm1
    00002d34: 	cmpq	%rax, %rbx
    00002d37: 	jne	.Ltmp736 # Offset: 11575
    00002d39: 	pxor	%xmm0, %xmm0
    00002d3d: 	movaps	0x40(%rsp), %xmm4
    00002d42: 	movaps	%xmm1, %xmm2
    00002d45: 	cvtsd2ss	init_value(%rip), %xmm0
    00002d4d: 	addss	0x78(%rsp), %xmm0
    00002d53: 	subss	DATAat0x23954(%rip), %xmm0
    00002d5b: 	mulss	0x7c(%rsp), %xmm0
    00002d61: 	andps	%xmm1, %xmm4
    00002d64: 	subss	%xmm0, %xmm2
    00002d68: 	pxor	%xmm0, %xmm0
    00002d6c: 	cvtss2sd	%xmm4, %xmm0
    00002d70: 	comisd	0x28(%rsp), %xmm0
    00002d76: 	jbe	.Ltmp737 # Offset: 11638
    00002d78: 	divss	%xmm1, %xmm2
.Ltmp737:
    00002d7c: 	movsd	0x70(%rsp), %xmm3
    00002d82: 	cvtss2sd	%xmm2, %xmm2
    00002d86: 	andpd	0x10(%rsp), %xmm2
    00002d8c: 	comisd	%xmm2, %xmm3
    00002d90: 	jbe	.Ltmp738 # Offset: 11664
.Ltmp772:
    00002d96: 	addl	$0x1, %r13d
    00002d9a: 	cmpl	%edx, %r13d
    00002d9d: 	jl	.Ltmp739 # Offset: 11677
.Ltmp735:
    00002da3: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00002daa: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00002db1: 	subq	$0x20, %rax
    00002db5: 	cmpq	%rax, %rbx
    00002db8: 	je	.Ltmp740 # Offset: 11704
    00002dbe: 	leaq	0x10(%rbx), %rdi
    00002dc2: 	movq	0xf8(%rsp), %r13
    00002dca: 	movq	%rdi, (%rbx)
    00002dcd: 	movq	0xf0(%rsp), %rbp
    00002dd5: 	movq	%rbp, %rax
    00002dd8: 	addq	%r13, %rax
    00002ddb: 	je	.Ltmp741 # Offset: 11739
    00002ddd: 	testq	%rbp, %rbp
    00002de0: 	je	.Ltmp742 # Offset: 11744
.Ltmp741:
    00002de6: 	movq	%r13, 0xa8(%rsp)
    00002dee: 	cmpq	$0xf, %r13
    00002df2: 	ja	.Ltmp743 # Offset: 11762
    00002df8: 	cmpq	$0x1, %r13
    00002dfc: 	jne	.Ltmp744 # Offset: 11772
    00002e02: 	movzbl	(%rbp), %eax
    00002e06: 	movb	%al, 0x10(%rbx)
.Ltmp833:
    00002e09: 	movq	%r13, 0x8(%rbx)
    00002e0d: 	movb	$0x0, (%rdi,%r13)
    00002e12: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002e19: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002e20: 	addq	$0x20, %rax
    00002e24: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002e2b: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00002e32: 	je	.Ltmp745 # Offset: 11826
.Ltmp773:
    00002e38: 	movq	-0x20(%rax), %rbp
    00002e3c: 	callq	clock@PLT # Offset: 11836
    00002e41: 	pxor	%xmm0, %xmm0
    00002e45: 	movq	%rax, end_time(%rip)
    00002e4c: 	movq	%rbp, %rdi
    00002e4f: 	subq	start_time(%rip), %rax
    00002e56: 	cvtsi2sd	%rax, %xmm0
    00002e5b: 	divsd	DATAat0x23450(%rip), %xmm0
    00002e63: 	callq	_Z13record_resultdPKc # Offset: 11875
    00002e68: 	movq	0xf0(%rsp), %rdi
    00002e70: 	cmpq	%r14, %rdi
    00002e73: 	je	.Ltmp746 # Offset: 11891
    00002e75: 	movq	0x100(%rsp), %rax
    00002e7d: 	leaq	0x1(%rax), %rsi
    00002e81: 	callq	_ZdlPvm@PLT # Offset: 11905
.Ltmp746:
    00002e86: 	leaq	DATAat0x232ac(%rip), %rdx
    00002e8d: 	movq	%r15, %rsi
    00002e90: 	movq	%r12, %rdi
    00002e93: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11923
    00002e98: 	movl	iterations(%rip), %edx
    00002e9e: 	xorl	%r8d, %r8d
    00002ea1: 	xorl	%ecx, %ecx
    00002ea3: 	movl	$0x1f40, %esi
    00002ea8: 	movq	0xf0(%rsp), %rdi
    00002eb0: 	callq	_Z9summarizePKciiii # Offset: 11952
    00002eb5: 	movl	base_iterations(%rip), %eax
    00002ebb: 	movq	0xf0(%rsp), %rdi
    00002ec3: 	movl	%eax, iterations(%rip)
    00002ec9: 	cmpq	%r14, %rdi
    00002ecc: 	je	.Ltmp747 # Offset: 11980
    00002ece: 	movq	0x100(%rsp), %rax
    00002ed6: 	leaq	0x1(%rax), %rsi
    00002eda: 	callq	_ZdlPvm@PLT # Offset: 11994
.Ltmp747:
    00002edf: 	movq	0xd0(%rsp), %rdi
    00002ee7: 	leaq	0xe0(%rsp), %rax
    00002eef: 	cmpq	%rax, %rdi
    00002ef2: 	je	.Ltmp748 # Offset: 12018
    00002ef4: 	movq	0xe0(%rsp), %rax
    00002efc: 	leaq	0x1(%rax), %rsi
    00002f00: 	callq	_ZdlPvm@PLT # Offset: 12032
.Ltmp748:
    00002f05: 	movq	0xb0(%rsp), %rdi
    00002f0d: 	cmpq	0x98(%rsp), %rdi
    00002f15: 	je	.Ltmp749 # Offset: 12053
    00002f17: 	movq	0xc0(%rsp), %rax
    00002f1f: 	leaq	0x1(%rax), %rsi
    00002f23: 	callq	_ZdlPvm@PLT # Offset: 12067
.Ltmp749:
    00002f28: 	movq	0x7e18(%rsp), %rax
    00002f30: 	subq	%fs:0x28, %rax
    00002f39: 	jne	.Ltmp750 # Offset: 12089
    00002f3f: 	addq	$0x7e28, %rsp
    00002f46: 	popq	%rbx
    00002f47: 	popq	%rbp
    00002f48: 	popq	%r12
    00002f4a: 	popq	%r13
    00002f4c: 	popq	%r14
    00002f4e: 	popq	%r15
    00002f50: 	retq # Offset: 12112
    00002f51: 	nopl	(%rax) # Size: 7
.Ltmp751:
    00002f58: 	addq	$0x20, %rbp
.Ltmp489:
    00002f5c: 	cmpq	%rbp, 0x10(%rsp)
    00002f61: 	je	.Ltmp492 # Offset: 12129
.Ltmp752:
    00002f67: 	movq	(%rbp), %rdi
    00002f6b: 	leaq	0x10(%rbp), %rax
    00002f6f: 	cmpq	%rax, %rdi
    00002f72: 	je	.Ltmp751 # Offset: 12146
    00002f74: 	movq	0x10(%rbp), %rax
    00002f78: 	addq	$0x20, %rbp
    00002f7c: 	leaq	0x1(%rax), %rsi
    00002f80: 	callq	_ZdlPvm@PLT # Offset: 12160
    00002f85: 	cmpq	%rbp, 0x10(%rsp)
    00002f8a: 	jne	.Ltmp752 # Offset: 12170
    00002f8c: 	jmp	.Ltmp492 # Offset: 12172
    00002f91: 	nopl	(%rax) # Size: 7
.Ltmp485:
    00002f98: 	addq	$0x20, %r15
    00002f9c: 	cmpq	%rbx, %r15
    00002f9f: 	jne	.Ltmp486 # Offset: 12191
    00002fa5: 	addq	$0x8, %r13
    00002fa9: 	cmpq	%r13, (%rsp)
    00002fad: 	ja	.Ltmp487 # Offset: 12205
    00002fb3: 	jmp	.Ltmp484 # Offset: 12211
    00002fb8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp501:
    00002fc0: 	movl	current_test(%rip), %edx
    00002fc6: 	movq	%r14, %rsi
    00002fc9: 	movl	$0x1, %edi
    00002fce: 	xorl	%eax, %eax
    00002fd0: 	callq	__printf_chk@PLT # Offset: 12240
    00002fd5: 	movl	iterations(%rip), %edx
    00002fdb: 	jmp	.Ltmp753 # Offset: 12251
.Ltmp506:
    00002fe0: 	leaq	0xa8(%rsp), %rsi
    00002fe8: 	xorl	%edx, %edx
    00002fea: 	movq	%r13, %rdi
    00002fed: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 12269
    00002ff2: 	movq	%rax, (%r13)
    00002ff6: 	movq	%rax, %rdi
    00002ff9: 	movq	0xa8(%rsp), %rax
    00003001: 	movq	%rax, 0x10(%r13)
.Ltmp806:
    00003005: 	movq	(%rsp), %rsi
    00003009: 	movq	%r14, %rdx
    0000300c: 	callq	memcpy@PLT # Offset: 12300
    00003011: 	movq	0xa8(%rsp), %r14
    00003019: 	movq	(%r13), %rdi
    0000301d: 	jmp	.Ltmp754 # Offset: 12317
    00003022: 	nopw	(%rax,%rax) # Size: 6
.Ltmp678:
    00003028: 	movl	current_test(%rip), %edx
    0000302e: 	leaq	DATAat0x231d2(%rip), %rsi
    00003035: 	movl	$0x1, %edi
    0000303a: 	xorl	%eax, %eax
    0000303c: 	callq	__printf_chk@PLT # Offset: 12348
    00003041: 	movl	iterations(%rip), %edx
    00003047: 	jmp	.Ltmp755 # Offset: 12359
    0000304c: 	nopl	(%rax) # Size: 4
.Ltmp666:
    00003050: 	movl	current_test(%rip), %edx
    00003056: 	leaq	DATAat0x231d2(%rip), %rsi
    0000305d: 	movl	$0x1, %edi
    00003062: 	xorl	%eax, %eax
    00003064: 	callq	__printf_chk@PLT # Offset: 12388
    00003069: 	movl	iterations(%rip), %edx
    0000306f: 	jmp	.Ltmp756 # Offset: 12399
    00003074: 	nopl	(%rax) # Size: 4
.Ltmp654:
    00003078: 	movl	current_test(%rip), %edx
    0000307e: 	leaq	DATAat0x231d2(%rip), %rsi
    00003085: 	movl	$0x1, %edi
    0000308a: 	xorl	%eax, %eax
    0000308c: 	callq	__printf_chk@PLT # Offset: 12428
    00003091: 	movl	iterations(%rip), %edx
    00003097: 	jmp	.Ltmp757 # Offset: 12439
    0000309c: 	nopl	(%rax) # Size: 4
.Ltmp642:
    000030a0: 	movl	current_test(%rip), %edx
    000030a6: 	leaq	DATAat0x231d2(%rip), %rsi
    000030ad: 	movl	$0x1, %edi
    000030b2: 	xorl	%eax, %eax
    000030b4: 	callq	__printf_chk@PLT # Offset: 12468
    000030b9: 	movl	iterations(%rip), %edx
    000030bf: 	jmp	.Ltmp758 # Offset: 12479
    000030c4: 	nopl	(%rax) # Size: 4
.Ltmp525:
    000030c8: 	movl	current_test(%rip), %edx
    000030ce: 	leaq	DATAat0x231d2(%rip), %rsi
    000030d5: 	movl	$0x1, %edi
    000030da: 	xorl	%eax, %eax
    000030dc: 	callq	__printf_chk@PLT # Offset: 12508
    000030e1: 	movl	iterations(%rip), %edx
    000030e7: 	jmp	.Ltmp759 # Offset: 12519
    000030ec: 	nopl	(%rax) # Size: 4
.Ltmp513:
    000030f0: 	movl	current_test(%rip), %edx
    000030f6: 	leaq	DATAat0x231d2(%rip), %rsi
    000030fd: 	movl	$0x1, %edi
    00003102: 	xorl	%eax, %eax
    00003104: 	callq	__printf_chk@PLT # Offset: 12548
    00003109: 	movl	iterations(%rip), %edx
    0000310f: 	jmp	.Ltmp760 # Offset: 12559
    00003114: 	nopl	(%rax) # Size: 4
.Ltmp549:
    00003118: 	movl	current_test(%rip), %edx
    0000311e: 	leaq	DATAat0x231d2(%rip), %rsi
    00003125: 	movl	$0x1, %edi
    0000312a: 	xorl	%eax, %eax
    0000312c: 	callq	__printf_chk@PLT # Offset: 12588
    00003131: 	movl	iterations(%rip), %edx
    00003137: 	jmp	.Ltmp761 # Offset: 12599
    0000313c: 	nopl	(%rax) # Size: 4
.Ltmp537:
    00003140: 	movl	current_test(%rip), %edx
    00003146: 	leaq	DATAat0x231d2(%rip), %rsi
    0000314d: 	movl	$0x1, %edi
    00003152: 	xorl	%eax, %eax
    00003154: 	callq	__printf_chk@PLT # Offset: 12628
    00003159: 	movl	iterations(%rip), %edx
    0000315f: 	jmp	.Ltmp762 # Offset: 12639
    00003164: 	nopl	(%rax) # Size: 4
.Ltmp630:
    00003168: 	movl	current_test(%rip), %edx
    0000316e: 	leaq	DATAat0x231d2(%rip), %rsi
    00003175: 	movl	$0x1, %edi
    0000317a: 	xorl	%eax, %eax
    0000317c: 	callq	__printf_chk@PLT # Offset: 12668
    00003181: 	movl	iterations(%rip), %edx
    00003187: 	jmp	.Ltmp763 # Offset: 12679
    0000318c: 	nopl	(%rax) # Size: 4
.Ltmp618:
    00003190: 	movl	current_test(%rip), %edx
    00003196: 	leaq	DATAat0x231d2(%rip), %rsi
    0000319d: 	movl	$0x1, %edi
    000031a2: 	xorl	%eax, %eax
    000031a4: 	callq	__printf_chk@PLT # Offset: 12708
    000031a9: 	movl	iterations(%rip), %edx
    000031af: 	jmp	.Ltmp764 # Offset: 12719
    000031b4: 	nopl	(%rax) # Size: 4
.Ltmp599:
    000031b8: 	movl	current_test(%rip), %edx
    000031be: 	leaq	DATAat0x231d2(%rip), %rsi
    000031c5: 	movl	$0x1, %edi
    000031ca: 	xorl	%eax, %eax
    000031cc: 	callq	__printf_chk@PLT # Offset: 12748
    000031d1: 	movl	iterations(%rip), %edx
    000031d7: 	jmp	.Ltmp765 # Offset: 12759
    000031dc: 	nopl	(%rax) # Size: 4
.Ltmp580:
    000031e0: 	movl	current_test(%rip), %edx
    000031e6: 	leaq	DATAat0x231d2(%rip), %rsi
    000031ed: 	movl	$0x1, %edi
    000031f2: 	xorl	%eax, %eax
    000031f4: 	callq	__printf_chk@PLT # Offset: 12788
    000031f9: 	movl	iterations(%rip), %edx
    000031ff: 	jmp	.Ltmp766 # Offset: 12799
    00003204: 	nopl	(%rax) # Size: 4
.Ltmp568:
    00003208: 	movl	current_test(%rip), %edx
    0000320e: 	leaq	DATAat0x231d2(%rip), %rsi
    00003215: 	movl	$0x1, %edi
    0000321a: 	xorl	%eax, %eax
    0000321c: 	callq	__printf_chk@PLT # Offset: 12828
    00003221: 	movl	iterations(%rip), %edx
    00003227: 	jmp	.Ltmp767 # Offset: 12839
    0000322c: 	nopl	(%rax) # Size: 4
.Ltmp726:
    00003230: 	movl	current_test(%rip), %edx
    00003236: 	leaq	DATAat0x231d2(%rip), %rsi
    0000323d: 	movl	$0x1, %edi
    00003242: 	xorl	%eax, %eax
    00003244: 	callq	__printf_chk@PLT # Offset: 12868
    00003249: 	movl	iterations(%rip), %edx
    0000324f: 	jmp	.Ltmp768 # Offset: 12879
    00003254: 	nopl	(%rax) # Size: 4
.Ltmp714:
    00003258: 	movl	current_test(%rip), %edx
    0000325e: 	leaq	DATAat0x231d2(%rip), %rsi
    00003265: 	movl	$0x1, %edi
    0000326a: 	xorl	%eax, %eax
    0000326c: 	callq	__printf_chk@PLT # Offset: 12908
    00003271: 	movl	iterations(%rip), %edx
    00003277: 	jmp	.Ltmp769 # Offset: 12919
    0000327c: 	nopl	(%rax) # Size: 4
.Ltmp690:
    00003280: 	movl	current_test(%rip), %edx
    00003286: 	leaq	DATAat0x231d2(%rip), %rsi
    0000328d: 	movl	$0x1, %edi
    00003292: 	xorl	%eax, %eax
    00003294: 	callq	__printf_chk@PLT # Offset: 12948
    00003299: 	movl	iterations(%rip), %edx
    0000329f: 	jmp	.Ltmp770 # Offset: 12959
    000032a4: 	nopl	(%rax) # Size: 4
.Ltmp702:
    000032a8: 	movl	current_test(%rip), %edx
    000032ae: 	leaq	DATAat0x231d2(%rip), %rsi
    000032b5: 	movl	$0x1, %edi
    000032ba: 	xorl	%eax, %eax
    000032bc: 	callq	__printf_chk@PLT # Offset: 12988
    000032c1: 	movl	iterations(%rip), %edx
    000032c7: 	jmp	.Ltmp771 # Offset: 12999
    000032cc: 	nopl	(%rax) # Size: 4
.Ltmp738:
    000032d0: 	movl	current_test(%rip), %edx
    000032d6: 	leaq	DATAat0x231d2(%rip), %rsi
    000032dd: 	movl	$0x1, %edi
    000032e2: 	xorl	%eax, %eax
    000032e4: 	callq	__printf_chk@PLT # Offset: 13028
    000032e9: 	movl	iterations(%rip), %edx
    000032ef: 	jmp	.Ltmp772 # Offset: 13039
.Ltmp740:
    000032f4: 	movq	%r12, %rsi
    000032f7: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000032fe: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13054
    00003303: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000330a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00003311: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00003318: 	jne	.Ltmp773 # Offset: 13080
.Ltmp745:
    0000331e: 	movq	-0x8(%rdx), %rax
    00003322: 	addq	$0x200, %rax
    00003328: 	jmp	.Ltmp773 # Offset: 13096
.Ltmp620:
    0000332d: 	movq	%r12, %rsi
    00003330: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003337: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13111
    0000333c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003343: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000334a: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00003351: 	jne	.Ltmp774 # Offset: 13137
.Ltmp625:
    00003357: 	movq	-0x8(%rdx), %rax
    0000335b: 	addq	$0x200, %rax
    00003361: 	jmp	.Ltmp774 # Offset: 13153
.Ltmp594:
    00003366: 	movq	-0x8(%rdx), %rax
    0000336a: 	addq	$0x200, %rax
    00003370: 	jmp	.Ltmp775 # Offset: 13168
.Ltmp589:
    00003375: 	movq	%r12, %rsi
    00003378: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000337f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13183
    00003384: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000338b: 	jmp	.Ltmp776 # Offset: 13195
.Ltmp587:
    00003390: 	movq	-0x8(%rdx), %rax
    00003394: 	addq	$0x200, %rax
    0000339a: 	jmp	.Ltmp777 # Offset: 13210
.Ltmp532:
    0000339f: 	movq	-0x8(%rdx), %rax
    000033a3: 	addq	$0x200, %rax
    000033a9: 	jmp	.Ltmp778 # Offset: 13225
.Ltmp632:
    000033ae: 	movq	%r12, %rsi
    000033b1: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000033b8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13240
    000033bd: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000033c4: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000033cb: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000033d2: 	jne	.Ltmp779 # Offset: 13266
.Ltmp637:
    000033d8: 	movq	-0x8(%rdx), %rax
    000033dc: 	addq	$0x200, %rax
    000033e2: 	jmp	.Ltmp779 # Offset: 13282
.Ltmp613:
    000033e7: 	movq	-0x8(%rdx), %rax
    000033eb: 	addq	$0x200, %rax
    000033f1: 	jmp	.Ltmp780 # Offset: 13297
.Ltmp608:
    000033f6: 	movq	%r12, %rsi
    000033f9: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003400: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13312
    00003405: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000340c: 	jmp	.Ltmp781 # Offset: 13324
.Ltmp606:
    00003411: 	movq	-0x8(%rdx), %rax
    00003415: 	addq	$0x200, %rax
    0000341b: 	jmp	.Ltmp782 # Offset: 13339
.Ltmp601:
    00003420: 	movq	%r12, %rsi
    00003423: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000342a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13354
    0000342f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003436: 	jmp	.Ltmp783 # Offset: 13366
.Ltmp685:
    0000343b: 	movq	-0x8(%rdx), %rax
    0000343f: 	addq	$0x200, %rax
    00003445: 	jmp	.Ltmp784 # Offset: 13381
.Ltmp733:
    0000344a: 	movq	-0x8(%rdx), %rax
    0000344e: 	addq	$0x200, %rax
    00003454: 	jmp	.Ltmp785 # Offset: 13396
.Ltmp503:
    00003459: 	movq	%r12, %rsi
    0000345c: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003463: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13411
    00003468: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000346f: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00003476: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000347d: 	jne	.Ltmp786 # Offset: 13437
.Ltmp508:
    00003483: 	movq	-0x8(%rdx), %rax
    00003487: 	addq	$0x200, %rax
    0000348d: 	jmp	.Ltmp786 # Offset: 13453
.Ltmp515:
    00003492: 	movq	%r12, %rsi
    00003495: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000349c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13468
    000034a1: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000034a8: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000034af: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000034b6: 	jne	.Ltmp787 # Offset: 13494
.Ltmp520:
    000034bc: 	movq	-0x8(%rdx), %rax
    000034c0: 	addq	$0x200, %rax
    000034c6: 	jmp	.Ltmp787 # Offset: 13510
.Ltmp644:
    000034cb: 	movq	%r12, %rsi
    000034ce: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000034d5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13525
    000034da: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000034e1: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000034e8: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000034ef: 	jne	.Ltmp788 # Offset: 13551
.Ltmp649:
    000034f5: 	movq	-0x8(%rdx), %rax
    000034f9: 	addq	$0x200, %rax
    000034ff: 	jmp	.Ltmp788 # Offset: 13567
.Ltmp527:
    00003504: 	movq	%r12, %rsi
    00003507: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000350e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13582
    00003513: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000351a: 	jmp	.Ltmp789 # Offset: 13594
.Ltmp668:
    0000351f: 	movq	%r12, %rsi
    00003522: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003529: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13609
    0000352e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003535: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000353c: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00003543: 	jne	.Ltmp790 # Offset: 13635
.Ltmp673:
    00003549: 	movq	-0x8(%rdx), %rax
    0000354d: 	addq	$0x200, %rax
    00003553: 	jmp	.Ltmp790 # Offset: 13651
.Ltmp544:
    00003558: 	movq	-0x8(%rdx), %rax
    0000355c: 	addq	$0x200, %rax
    00003562: 	jmp	.Ltmp791 # Offset: 13666
.Ltmp539:
    00003567: 	movq	%r12, %rsi
    0000356a: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003571: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13681
    00003576: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000357d: 	jmp	.Ltmp792 # Offset: 13693
.Ltmp551:
    00003582: 	movq	%r12, %rsi
    00003585: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000358c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13708
    00003591: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003598: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000359f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000035a6: 	jne	.Ltmp793 # Offset: 13734
.Ltmp556:
    000035ac: 	movq	-0x8(%rdx), %rax
    000035b0: 	addq	$0x200, %rax
    000035b6: 	jmp	.Ltmp793 # Offset: 13750
.Ltmp558:
    000035bb: 	movq	%r12, %rsi
    000035be: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000035c5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13765
    000035ca: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000035d1: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000035d8: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000035df: 	jne	.Ltmp794 # Offset: 13791
.Ltmp563:
    000035e5: 	movq	-0x8(%rdx), %rax
    000035e9: 	addq	$0x200, %rax
    000035ef: 	jmp	.Ltmp794 # Offset: 13807
.Ltmp692:
    000035f4: 	movq	%r12, %rsi
    000035f7: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000035fe: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13822
    00003603: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000360a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00003611: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00003618: 	jne	.Ltmp795 # Offset: 13848
.Ltmp697:
    0000361e: 	movq	-0x8(%rdx), %rax
    00003622: 	addq	$0x200, %rax
    00003628: 	jmp	.Ltmp795 # Offset: 13864
.Ltmp709:
    0000362d: 	movq	-0x8(%rdx), %rax
    00003631: 	addq	$0x200, %rax
    00003637: 	jmp	.Ltmp796 # Offset: 13879
.Ltmp704:
    0000363c: 	movq	%r12, %rsi
    0000363f: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003646: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13894
    0000364b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003652: 	jmp	.Ltmp797 # Offset: 13906
.Ltmp582:
    00003657: 	movq	%r12, %rsi
    0000365a: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003661: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13921
    00003666: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000366d: 	jmp	.Ltmp798 # Offset: 13933
.Ltmp570:
    00003672: 	movq	%r12, %rsi
    00003675: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000367c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13948
    00003681: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003688: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000368f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00003696: 	jne	.Ltmp799 # Offset: 13974
.Ltmp575:
    0000369c: 	movq	-0x8(%rdx), %rax
    000036a0: 	addq	$0x200, %rax
    000036a6: 	jmp	.Ltmp799 # Offset: 13990
.Ltmp680:
    000036ab: 	movq	%r12, %rsi
    000036ae: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000036b5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 14005
    000036ba: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000036c1: 	jmp	.Ltmp800 # Offset: 14017
.Ltmp721:
    000036c6: 	movq	-0x8(%rdx), %rax
    000036ca: 	addq	$0x200, %rax
    000036d0: 	jmp	.Ltmp801 # Offset: 14032
.Ltmp716:
    000036d5: 	movq	%r12, %rsi
    000036d8: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000036df: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 14047
    000036e4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000036eb: 	jmp	.Ltmp802 # Offset: 14059
.Ltmp728:
    000036f0: 	movq	%r12, %rsi
    000036f3: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000036fa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 14074
    000036ff: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003706: 	jmp	.Ltmp803 # Offset: 14086
.Ltmp661:
    0000370b: 	movq	-0x8(%rdx), %rax
    0000370f: 	addq	$0x200, %rax
    00003715: 	jmp	.Ltmp804 # Offset: 14101
.Ltmp656:
    0000371a: 	movq	%r12, %rsi
    0000371d: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00003724: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 14116
    00003729: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00003730: 	jmp	.Ltmp805 # Offset: 14128
.Ltmp507:
    00003735: 	testq	%r14, %r14
    00003738: 	je	.Ltmp754 # Offset: 14136
    0000373e: 	jmp	.Ltmp806 # Offset: 14142
    00003743: 	nopl	(%rax,%rax) # Size: 5
.Ltmp720:
    00003748: 	cmpq	$0x0, (%rsp)
    0000374d: 	je	.Ltmp807 # Offset: 14157
    00003753: 	jmp	.Ltmp808 # Offset: 14163
    00003758: 	nopl	(%rax,%rax) # Size: 8
.Ltmp574:
    00003760: 	cmpq	$0x0, (%rsp)
    00003765: 	je	.Ltmp809 # Offset: 14181
    0000376b: 	jmp	.Ltmp810 # Offset: 14187
.Ltmp672:
    00003770: 	cmpq	$0x0, (%rsp)
    00003775: 	je	.Ltmp811 # Offset: 14197
    0000377b: 	jmp	.Ltmp812 # Offset: 14203
.Ltmp660:
    00003780: 	cmpq	$0x0, (%rsp)
    00003785: 	je	.Ltmp813 # Offset: 14213
    0000378b: 	jmp	.Ltmp814 # Offset: 14219
.Ltmp593:
    00003790: 	cmpq	$0x0, (%rsp)
    00003795: 	je	.Ltmp815 # Offset: 14229
    0000379b: 	jmp	.Ltmp816 # Offset: 14235
.Ltmp543:
    000037a0: 	cmpq	$0x0, (%rsp)
    000037a5: 	je	.Ltmp817 # Offset: 14245
    000037ab: 	jmp	.Ltmp818 # Offset: 14251
.Ltmp684:
    000037b0: 	cmpq	$0x0, (%rsp)
    000037b5: 	je	.Ltmp819 # Offset: 14261
    000037bb: 	jmp	.Ltmp820 # Offset: 14267
.Ltmp708:
    000037c0: 	cmpq	$0x0, (%rsp)
    000037c5: 	je	.Ltmp821 # Offset: 14277
.Ltmp845:
    000037cb: 	movq	(%rsp), %rdx
    000037cf: 	movq	0x10(%rsp), %rsi
    000037d4: 	callq	memcpy@PLT # Offset: 14292
    000037d9: 	movq	0xa8(%rsp), %rax
    000037e1: 	movq	(%r13), %rdi
    000037e5: 	movq	%rax, (%rsp)
    000037e9: 	jmp	.Ltmp821 # Offset: 14313
.Ltmp531:
    000037ee: 	cmpq	$0x0, (%rsp)
    000037f3: 	je	.Ltmp822 # Offset: 14323
    000037f9: 	jmp	.Ltmp823 # Offset: 14329
    000037fe: 	nop # Size: 2
.Ltmp519:
    00003800: 	cmpq	$0x0, (%rsp)
    00003805: 	je	.Ltmp824 # Offset: 14341
    0000380b: 	jmp	.Ltmp825 # Offset: 14347
.Ltmp612:
    00003810: 	cmpq	$0x0, (%rsp)
    00003815: 	je	.Ltmp826 # Offset: 14357
    0000381b: 	jmp	.Ltmp827 # Offset: 14363
.Ltmp555:
    00003820: 	cmpq	$0x0, (%rsp)
    00003825: 	je	.Ltmp828 # Offset: 14373
.Ltmp847:
    0000382b: 	movq	(%rsp), %rdx
    0000382f: 	movq	0x10(%rsp), %rsi
    00003834: 	callq	memcpy@PLT # Offset: 14388
    00003839: 	movq	0xa8(%rsp), %rax
    00003841: 	movq	(%r13), %rdi
    00003845: 	movq	%rax, (%rsp)
    00003849: 	jmp	.Ltmp828 # Offset: 14409
.Ltmp586:
    0000384e: 	cmpq	$0x0, (%rsp)
    00003853: 	je	.Ltmp829 # Offset: 14419
    00003859: 	jmp	.Ltmp830 # Offset: 14425
    0000385e: 	nop # Size: 2
.Ltmp648:
    00003860: 	cmpq	$0x0, (%rsp)
    00003865: 	je	.Ltmp831 # Offset: 14437
    0000386b: 	jmp	.Ltmp832 # Offset: 14443
.Ltmp744:
    00003870: 	testq	%r13, %r13
    00003873: 	je	.Ltmp833 # Offset: 14451
    00003879: 	jmp	.Ltmp834 # Offset: 14457
    0000387e: 	nop # Size: 2
.Ltmp696:
    00003880: 	cmpq	$0x0, (%rsp)
    00003885: 	je	.Ltmp835 # Offset: 14469
.Ltmp846:
    0000388b: 	movq	(%rsp), %rdx
    0000388f: 	movq	0x10(%rsp), %rsi
    00003894: 	callq	memcpy@PLT # Offset: 14484
    00003899: 	movq	0xa8(%rsp), %rax
    000038a1: 	movq	(%r13), %rdi
    000038a5: 	movq	%rax, (%rsp)
    000038a9: 	jmp	.Ltmp835 # Offset: 14505
.Ltmp624:
    000038ae: 	cmpq	$0x0, (%rsp)
    000038b3: 	je	.Ltmp836 # Offset: 14515
    000038b9: 	jmp	.Ltmp837 # Offset: 14521
    000038be: 	nop # Size: 2
.Ltmp732:
    000038c0: 	cmpq	$0x0, (%rsp)
    000038c5: 	je	.Ltmp838 # Offset: 14533
    000038cb: 	jmp	.Ltmp839 # Offset: 14539
.Ltmp605:
    000038d0: 	cmpq	$0x0, (%rsp)
    000038d5: 	je	.Ltmp840 # Offset: 14549
    000038db: 	jmp	.Ltmp841 # Offset: 14555
.Ltmp562:
    000038e0: 	cmpq	$0x0, (%rsp)
    000038e5: 	je	.Ltmp842 # Offset: 14565
.Ltmp848:
    000038eb: 	movq	(%rsp), %rdx
    000038ef: 	movq	0x10(%rsp), %rsi
    000038f4: 	callq	memcpy@PLT # Offset: 14580
    000038f9: 	movq	0xa8(%rsp), %rax
    00003901: 	movq	(%r13), %rdi
    00003905: 	movq	%rax, (%rsp)
    00003909: 	jmp	.Ltmp842 # Offset: 14601
.Ltmp636:
    0000390e: 	cmpq	$0x0, (%rsp)
    00003913: 	je	.Ltmp843 # Offset: 14611
.Ltmp844:
    00003919: 	movq	(%rsp), %rdx
    0000391d: 	movq	0x10(%rsp), %rsi
    00003922: 	callq	memcpy@PLT # Offset: 14626
    00003927: 	movq	0xa8(%rsp), %rax
    0000392f: 	movq	(%r13), %rdi
    00003933: 	movq	%rax, (%rsp)
    00003937: 	jmp	.Ltmp843 # Offset: 14647
.Ltmp719:
    0000393c: 	leaq	0xa8(%rsp), %rsi
    00003944: 	xorl	%edx, %edx
    00003946: 	movq	%r13, %rdi
    00003949: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14665
    0000394e: 	movq	%rax, (%r13)
    00003952: 	movq	%rax, %rdi
    00003955: 	movq	0xa8(%rsp), %rax
    0000395d: 	movq	%rax, 0x10(%r13)
.Ltmp808:
    00003961: 	movq	(%rsp), %rdx
    00003965: 	movq	0x10(%rsp), %rsi
    0000396a: 	callq	memcpy@PLT # Offset: 14698
    0000396f: 	movq	0xa8(%rsp), %rax
    00003977: 	movq	(%r13), %rdi
    0000397b: 	movq	%rax, (%rsp)
    0000397f: 	jmp	.Ltmp807 # Offset: 14719
.Ltmp659:
    00003984: 	leaq	0xa8(%rsp), %rsi
    0000398c: 	xorl	%edx, %edx
    0000398e: 	movq	%r13, %rdi
    00003991: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14737
    00003996: 	movq	%rax, (%r13)
    0000399a: 	movq	%rax, %rdi
    0000399d: 	movq	0xa8(%rsp), %rax
    000039a5: 	movq	%rax, 0x10(%r13)
.Ltmp814:
    000039a9: 	movq	(%rsp), %rdx
    000039ad: 	movq	0x10(%rsp), %rsi
    000039b2: 	callq	memcpy@PLT # Offset: 14770
    000039b7: 	movq	0xa8(%rsp), %rax
    000039bf: 	movq	(%r13), %rdi
    000039c3: 	movq	%rax, (%rsp)
    000039c7: 	jmp	.Ltmp813 # Offset: 14791
.Ltmp573:
    000039cc: 	leaq	0xa8(%rsp), %rsi
    000039d4: 	xorl	%edx, %edx
    000039d6: 	movq	%r13, %rdi
    000039d9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14809
    000039de: 	movq	%rax, (%r13)
    000039e2: 	movq	%rax, %rdi
    000039e5: 	movq	0xa8(%rsp), %rax
    000039ed: 	movq	%rax, 0x10(%r13)
.Ltmp810:
    000039f1: 	movq	(%rsp), %rdx
    000039f5: 	movq	0x10(%rsp), %rsi
    000039fa: 	callq	memcpy@PLT # Offset: 14842
    000039ff: 	movq	0xa8(%rsp), %rax
    00003a07: 	movq	(%r13), %rdi
    00003a0b: 	movq	%rax, (%rsp)
    00003a0f: 	jmp	.Ltmp809 # Offset: 14863
.Ltmp671:
    00003a14: 	leaq	0xa8(%rsp), %rsi
    00003a1c: 	xorl	%edx, %edx
    00003a1e: 	movq	%r13, %rdi
    00003a21: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14881
    00003a26: 	movq	%rax, (%r13)
    00003a2a: 	movq	%rax, %rdi
    00003a2d: 	movq	0xa8(%rsp), %rax
    00003a35: 	movq	%rax, 0x10(%r13)
.Ltmp812:
    00003a39: 	movq	(%rsp), %rdx
    00003a3d: 	movq	0x10(%rsp), %rsi
    00003a42: 	callq	memcpy@PLT # Offset: 14914
    00003a47: 	movq	0xa8(%rsp), %rax
    00003a4f: 	movq	(%r13), %rdi
    00003a53: 	movq	%rax, (%rsp)
    00003a57: 	jmp	.Ltmp811 # Offset: 14935
.Ltmp683:
    00003a5c: 	leaq	0xa8(%rsp), %rsi
    00003a64: 	xorl	%edx, %edx
    00003a66: 	movq	%r13, %rdi
    00003a69: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14953
    00003a6e: 	movq	%rax, (%r13)
    00003a72: 	movq	%rax, %rdi
    00003a75: 	movq	0xa8(%rsp), %rax
    00003a7d: 	movq	%rax, 0x10(%r13)
.Ltmp820:
    00003a81: 	movq	(%rsp), %rdx
    00003a85: 	movq	0x10(%rsp), %rsi
    00003a8a: 	callq	memcpy@PLT # Offset: 14986
    00003a8f: 	movq	0xa8(%rsp), %rax
    00003a97: 	movq	(%r13), %rdi
    00003a9b: 	movq	%rax, (%rsp)
    00003a9f: 	jmp	.Ltmp819 # Offset: 15007
.Ltmp731:
    00003aa4: 	leaq	0xa8(%rsp), %rsi
    00003aac: 	xorl	%edx, %edx
    00003aae: 	movq	%r13, %rdi
    00003ab1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15025
    00003ab6: 	movq	%rax, (%r13)
    00003aba: 	movq	%rax, %rdi
    00003abd: 	movq	0xa8(%rsp), %rax
    00003ac5: 	movq	%rax, 0x10(%r13)
.Ltmp839:
    00003ac9: 	movq	(%rsp), %rdx
    00003acd: 	movq	0x10(%rsp), %rsi
    00003ad2: 	callq	memcpy@PLT # Offset: 15058
    00003ad7: 	movq	0xa8(%rsp), %rax
    00003adf: 	movq	(%r13), %rdi
    00003ae3: 	movq	%rax, (%rsp)
    00003ae7: 	jmp	.Ltmp838 # Offset: 15079
.Ltmp592:
    00003aec: 	leaq	0xa8(%rsp), %rsi
    00003af4: 	xorl	%edx, %edx
    00003af6: 	movq	%r13, %rdi
    00003af9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15097
    00003afe: 	movq	%rax, (%r13)
    00003b02: 	movq	%rax, %rdi
    00003b05: 	movq	0xa8(%rsp), %rax
    00003b0d: 	movq	%rax, 0x10(%r13)
.Ltmp816:
    00003b11: 	movq	(%rsp), %rdx
    00003b15: 	movq	0x10(%rsp), %rsi
    00003b1a: 	callq	memcpy@PLT # Offset: 15130
    00003b1f: 	movq	0xa8(%rsp), %rax
    00003b27: 	movq	(%r13), %rdi
    00003b2b: 	movq	%rax, (%rsp)
    00003b2f: 	jmp	.Ltmp815 # Offset: 15151
.Ltmp585:
    00003b34: 	leaq	0xa8(%rsp), %rsi
    00003b3c: 	xorl	%edx, %edx
    00003b3e: 	movq	%r13, %rdi
    00003b41: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15169
    00003b46: 	movq	%rax, (%r13)
    00003b4a: 	movq	%rax, %rdi
    00003b4d: 	movq	0xa8(%rsp), %rax
    00003b55: 	movq	%rax, 0x10(%r13)
.Ltmp830:
    00003b59: 	movq	(%rsp), %rdx
    00003b5d: 	movq	0x10(%rsp), %rsi
    00003b62: 	callq	memcpy@PLT # Offset: 15202
    00003b67: 	movq	0xa8(%rsp), %rax
    00003b6f: 	movq	(%r13), %rdi
    00003b73: 	movq	%rax, (%rsp)
    00003b77: 	jmp	.Ltmp829 # Offset: 15223
.Ltmp530:
    00003b7c: 	leaq	0xa8(%rsp), %rsi
    00003b84: 	xorl	%edx, %edx
    00003b86: 	movq	%r13, %rdi
    00003b89: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15241
    00003b8e: 	movq	%rax, (%r13)
    00003b92: 	movq	%rax, %rdi
    00003b95: 	movq	0xa8(%rsp), %rax
    00003b9d: 	movq	%rax, 0x10(%r13)
.Ltmp823:
    00003ba1: 	movq	(%rsp), %rdx
    00003ba5: 	movq	0x10(%rsp), %rsi
    00003baa: 	callq	memcpy@PLT # Offset: 15274
    00003baf: 	movq	0xa8(%rsp), %rax
    00003bb7: 	movq	(%r13), %rdi
    00003bbb: 	movq	%rax, (%rsp)
    00003bbf: 	jmp	.Ltmp822 # Offset: 15295
.Ltmp623:
    00003bc4: 	leaq	0xa8(%rsp), %rsi
    00003bcc: 	xorl	%edx, %edx
    00003bce: 	movq	%r13, %rdi
    00003bd1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15313
    00003bd6: 	movq	%rax, (%r13)
    00003bda: 	movq	%rax, %rdi
    00003bdd: 	movq	0xa8(%rsp), %rax
    00003be5: 	movq	%rax, 0x10(%r13)
.Ltmp837:
    00003be9: 	movq	(%rsp), %rdx
    00003bed: 	movq	0x10(%rsp), %rsi
    00003bf2: 	callq	memcpy@PLT # Offset: 15346
    00003bf7: 	movq	0xa8(%rsp), %rax
    00003bff: 	movq	(%r13), %rdi
    00003c03: 	movq	%rax, (%rsp)
    00003c07: 	jmp	.Ltmp836 # Offset: 15367
.Ltmp518:
    00003c0c: 	leaq	0xa8(%rsp), %rsi
    00003c14: 	xorl	%edx, %edx
    00003c16: 	movq	%r13, %rdi
    00003c19: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15385
    00003c1e: 	movq	%rax, (%r13)
    00003c22: 	movq	%rax, %rdi
    00003c25: 	movq	0xa8(%rsp), %rax
    00003c2d: 	movq	%rax, 0x10(%r13)
.Ltmp825:
    00003c31: 	movq	(%rsp), %rdx
    00003c35: 	movq	0x10(%rsp), %rsi
    00003c3a: 	callq	memcpy@PLT # Offset: 15418
    00003c3f: 	movq	0xa8(%rsp), %rax
    00003c47: 	movq	(%r13), %rdi
    00003c4b: 	movq	%rax, (%rsp)
    00003c4f: 	jmp	.Ltmp824 # Offset: 15439
.Ltmp542:
    00003c54: 	leaq	0xa8(%rsp), %rsi
    00003c5c: 	xorl	%edx, %edx
    00003c5e: 	movq	%r13, %rdi
    00003c61: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15457
    00003c66: 	movq	%rax, (%r13)
    00003c6a: 	movq	%rax, %rdi
    00003c6d: 	movq	0xa8(%rsp), %rax
    00003c75: 	movq	%rax, 0x10(%r13)
.Ltmp818:
    00003c79: 	movq	(%rsp), %rdx
    00003c7d: 	movq	0x10(%rsp), %rsi
    00003c82: 	callq	memcpy@PLT # Offset: 15490
    00003c87: 	movq	0xa8(%rsp), %rax
    00003c8f: 	movq	(%r13), %rdi
    00003c93: 	movq	%rax, (%rsp)
    00003c97: 	jmp	.Ltmp817 # Offset: 15511
.Ltmp647:
    00003c9c: 	leaq	0xa8(%rsp), %rsi
    00003ca4: 	xorl	%edx, %edx
    00003ca6: 	movq	%r13, %rdi
    00003ca9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15529
    00003cae: 	movq	%rax, (%r13)
    00003cb2: 	movq	%rax, %rdi
    00003cb5: 	movq	0xa8(%rsp), %rax
    00003cbd: 	movq	%rax, 0x10(%r13)
.Ltmp832:
    00003cc1: 	movq	(%rsp), %rdx
    00003cc5: 	movq	0x10(%rsp), %rsi
    00003cca: 	callq	memcpy@PLT # Offset: 15562
    00003ccf: 	movq	0xa8(%rsp), %rax
    00003cd7: 	movq	(%r13), %rdi
    00003cdb: 	movq	%rax, (%rsp)
    00003cdf: 	jmp	.Ltmp831 # Offset: 15583
.Ltmp604:
    00003ce4: 	leaq	0xa8(%rsp), %rsi
    00003cec: 	xorl	%edx, %edx
    00003cee: 	movq	%r13, %rdi
    00003cf1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15601
    00003cf6: 	movq	%rax, (%r13)
    00003cfa: 	movq	%rax, %rdi
    00003cfd: 	movq	0xa8(%rsp), %rax
    00003d05: 	movq	%rax, 0x10(%r13)
.Ltmp841:
    00003d09: 	movq	(%rsp), %rdx
    00003d0d: 	movq	0x10(%rsp), %rsi
    00003d12: 	callq	memcpy@PLT # Offset: 15634
    00003d17: 	movq	0xa8(%rsp), %rax
    00003d1f: 	movq	(%r13), %rdi
    00003d23: 	movq	%rax, (%rsp)
    00003d27: 	jmp	.Ltmp840 # Offset: 15655
.Ltmp743:
    00003d2c: 	leaq	0xa8(%rsp), %rsi
    00003d34: 	xorl	%edx, %edx
    00003d36: 	movq	%rbx, %rdi
    00003d39: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15673
    00003d3e: 	movq	%rax, (%rbx)
    00003d41: 	movq	%rax, %rdi
    00003d44: 	movq	0xa8(%rsp), %rax
    00003d4c: 	movq	%rax, 0x10(%rbx)
.Ltmp834:
    00003d50: 	movq	%r13, %rdx
    00003d53: 	movq	%rbp, %rsi
    00003d56: 	callq	memcpy@PLT # Offset: 15702
    00003d5b: 	movq	0xa8(%rsp), %r13
    00003d63: 	movq	(%rbx), %rdi
    00003d66: 	jmp	.Ltmp833 # Offset: 15718
.Ltmp635:
    00003d6b: 	leaq	0xa8(%rsp), %rsi
    00003d73: 	xorl	%edx, %edx
    00003d75: 	movq	%r13, %rdi
    00003d78: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15736
    00003d7d: 	movq	%rax, (%r13)
    00003d81: 	movq	%rax, %rdi
    00003d84: 	movq	0xa8(%rsp), %rax
    00003d8c: 	movq	%rax, 0x10(%r13)
    00003d90: 	jmp	.Ltmp844 # Offset: 15760
.Ltmp611:
    00003d95: 	leaq	0xa8(%rsp), %rsi
    00003d9d: 	xorl	%edx, %edx
    00003d9f: 	movq	%r13, %rdi
    00003da2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15778
    00003da7: 	movq	%rax, (%r13)
    00003dab: 	movq	%rax, %rdi
    00003dae: 	movq	0xa8(%rsp), %rax
    00003db6: 	movq	%rax, 0x10(%r13)
.Ltmp827:
    00003dba: 	movq	(%rsp), %rdx
    00003dbe: 	movq	0x10(%rsp), %rsi
    00003dc3: 	callq	memcpy@PLT # Offset: 15811
    00003dc8: 	movq	0xa8(%rsp), %rax
    00003dd0: 	movq	(%r13), %rdi
    00003dd4: 	movq	%rax, (%rsp)
    00003dd8: 	jmp	.Ltmp826 # Offset: 15832
.Ltmp707:
    00003ddd: 	leaq	0xa8(%rsp), %rsi
    00003de5: 	xorl	%edx, %edx
    00003de7: 	movq	%r13, %rdi
    00003dea: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15850
    00003def: 	movq	%rax, (%r13)
    00003df3: 	movq	%rax, %rdi
    00003df6: 	movq	0xa8(%rsp), %rax
    00003dfe: 	movq	%rax, 0x10(%r13)
    00003e02: 	jmp	.Ltmp845 # Offset: 15874
.Ltmp695:
    00003e07: 	leaq	0xa8(%rsp), %rsi
    00003e0f: 	xorl	%edx, %edx
    00003e11: 	movq	%r13, %rdi
    00003e14: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15892
    00003e19: 	movq	%rax, (%r13)
    00003e1d: 	movq	%rax, %rdi
    00003e20: 	movq	0xa8(%rsp), %rax
    00003e28: 	movq	%rax, 0x10(%r13)
    00003e2c: 	jmp	.Ltmp846 # Offset: 15916
.Ltmp554:
    00003e31: 	leaq	0xa8(%rsp), %rsi
    00003e39: 	xorl	%edx, %edx
    00003e3b: 	movq	%r13, %rdi
    00003e3e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15934
    00003e43: 	movq	%rax, (%r13)
    00003e47: 	movq	%rax, %rdi
    00003e4a: 	movq	0xa8(%rsp), %rax
    00003e52: 	movq	%rax, 0x10(%r13)
    00003e56: 	jmp	.Ltmp847 # Offset: 15958
.Ltmp561:
    00003e5b: 	leaq	0xa8(%rsp), %rsi
    00003e63: 	xorl	%edx, %edx
    00003e65: 	movq	%r13, %rdi
    00003e68: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15976
    00003e6d: 	movq	%rax, (%r13)
    00003e71: 	movq	%rax, %rdi
    00003e74: 	movq	0xa8(%rsp), %rax
    00003e7c: 	movq	%rax, 0x10(%r13)
    00003e80: 	jmp	.Ltmp848 # Offset: 16000
.Ltmp517:
    00003e85: 	leaq	DATAat0x23158(%rip), %rdi
    00003e8c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16012
.Ltmp529:
    00003e91: 	leaq	DATAat0x23158(%rip), %rdi
    00003e98: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16024
.Ltmp541:
    00003e9d: 	leaq	DATAat0x23158(%rip), %rdi
    00003ea4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16036
.Ltmp553:
    00003ea9: 	leaq	DATAat0x23158(%rip), %rdi
    00003eb0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16048
.Ltmp560:
    00003eb5: 	leaq	DATAat0x23158(%rip), %rdi
    00003ebc: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16060
.Ltmp572:
    00003ec1: 	leaq	DATAat0x23158(%rip), %rdi
    00003ec8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16072
.Ltmp584:
    00003ecd: 	leaq	DATAat0x23158(%rip), %rdi
    00003ed4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16084
.Ltmp591:
    00003ed9: 	leaq	DATAat0x23158(%rip), %rdi
    00003ee0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16096
.Ltmp603:
    00003ee5: 	leaq	DATAat0x23158(%rip), %rdi
    00003eec: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16108
.Ltmp610:
    00003ef1: 	leaq	DATAat0x23158(%rip), %rdi
    00003ef8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16120
.Ltmp622:
    00003efd: 	leaq	DATAat0x23158(%rip), %rdi
    00003f04: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16132
.Ltmp634:
    00003f09: 	leaq	DATAat0x23158(%rip), %rdi
    00003f10: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16144
.Ltmp646:
    00003f15: 	leaq	DATAat0x23158(%rip), %rdi
    00003f1c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16156
.Ltmp658:
    00003f21: 	leaq	DATAat0x23158(%rip), %rdi
    00003f28: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16168
.Ltmp670:
    00003f2d: 	leaq	DATAat0x23158(%rip), %rdi
    00003f34: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16180
.Ltmp682:
    00003f39: 	leaq	DATAat0x23158(%rip), %rdi
    00003f40: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16192
.Ltmp694:
    00003f45: 	leaq	DATAat0x23158(%rip), %rdi
    00003f4c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16204
.Ltmp706:
    00003f51: 	leaq	DATAat0x23158(%rip), %rdi
    00003f58: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16216
.Ltmp718:
    00003f5d: 	leaq	DATAat0x23158(%rip), %rdi
    00003f64: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16228
.Ltmp730:
    00003f69: 	leaq	DATAat0x23158(%rip), %rdi
    00003f70: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16240
.Ltmp742:
    00003f75: 	leaq	DATAat0x23158(%rip), %rdi
    00003f7c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16252
.Ltmp750:
    00003f81: 	callq	__stack_chk_fail@PLT # Offset: 16257
.Ltmp505:
    00003f86: 	leaq	DATAat0x23158(%rip), %rdi
    00003f8d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 16269
    00003f92: 	endbr64
    00003f96: 	movq	%rax, %rbp
    00003f99: 	jmp	.Ltmp849 # Offset: 16281
    00003f9b: 	endbr64
.Ltmp851:
    00003f9f: 	movq	%rax, %rbp
    00003fa2: 	jmp	.Ltmp850 # Offset: 16290
    00003fa4: 	endbr64
    00003fa8: 	jmp	.Ltmp851 # Offset: 16296
    00003faa: 	endbr64
    00003fae: 	jmp	.Ltmp851 # Offset: 16302
    00003fb0: 	endbr64
    00003fb4: 	jmp	.Ltmp851 # Offset: 16308
    00003fb6: 	endbr64
    00003fba: 	jmp	.Ltmp851 # Offset: 16314
.Ltmp854:
    00003fbc: 	movq	0xf0(%rsp), %rdi
    00003fc4: 	cmpq	%r14, %rdi
    00003fc7: 	je	.Ltmp849 # Offset: 16327
.Ltmp857:
    00003fc9: 	movq	0x100(%rsp), %rax
    00003fd1: 	leaq	0x1(%rax), %rsi
    00003fd5: 	callq	_ZdlPvm@PLT # Offset: 16341
.Ltmp849:
    00003fda: 	movq	0xb0(%rsp), %rdi
    00003fe2: 	cmpq	0x98(%rsp), %rdi
    00003fea: 	je	.Ltmp852 # Offset: 16362
    00003fec: 	movq	0xc0(%rsp), %rax
    00003ff4: 	leaq	0x1(%rax), %rsi
    00003ff8: 	callq	_ZdlPvm@PLT # Offset: 16376
.Ltmp852:
    00003ffd: 	movq	%rbp, %rdi
    00004000: 	callq	_Unwind_Resume@PLT # Offset: 16384
    00004005: 	endbr64
    00004009: 	movq	%rax, %rbp
    0000400c: 	jmp	.Ltmp853 # Offset: 16396
    0000400e: 	endbr64
    00004012: 	jmp	.Ltmp851 # Offset: 16402
.Ltmp850:
    00004014: 	movq	0xf0(%rsp), %rdi
    0000401c: 	cmpq	%r14, %rdi
    0000401f: 	je	.Ltmp853 # Offset: 16415
    00004021: 	movq	0x100(%rsp), %rax
    00004029: 	leaq	0x1(%rax), %rsi
    0000402d: 	callq	_ZdlPvm@PLT # Offset: 16429
.Ltmp853:
    00004032: 	movq	0xd0(%rsp), %rdi
    0000403a: 	leaq	0xe0(%rsp), %rax
    00004042: 	cmpq	%rax, %rdi
    00004045: 	je	.Ltmp849 # Offset: 16453
    00004047: 	movq	0xe0(%rsp), %rax
    0000404f: 	leaq	0x1(%rax), %rsi
    00004053: 	callq	_ZdlPvm@PLT # Offset: 16467
    00004058: 	jmp	.Ltmp849 # Offset: 16472
    0000405a: 	endbr64
.Ltmp855:
    0000405e: 	movq	%rax, %rbp
    00004061: 	jmp	.Ltmp854 # Offset: 16481
    00004066: 	endbr64
    0000406a: 	jmp	.Ltmp851 # Offset: 16490
    0000406f: 	endbr64
    00004073: 	jmp	.Ltmp851 # Offset: 16499
    00004078: 	endbr64
    0000407c: 	jmp	.Ltmp855 # Offset: 16508
    0000407e: 	endbr64
    00004082: 	jmp	.Ltmp855 # Offset: 16514
    00004084: 	endbr64
    00004088: 	jmp	.Ltmp855 # Offset: 16520
    0000408a: 	endbr64
    0000408e: 	jmp	.Ltmp855 # Offset: 16526
    00004090: 	endbr64
    00004094: 	jmp	.Ltmp855 # Offset: 16532
    00004096: 	endbr64
    0000409a: 	jmp	.Ltmp855 # Offset: 16538
    0000409c: 	endbr64
    000040a0: 	jmp	.Ltmp855 # Offset: 16544
    000040a2: 	endbr64
    000040a6: 	movq	%rax, %rbp
    000040a9: 	jmp	.Ltmp856 # Offset: 16553
    000040ab: 	endbr64
    000040af: 	jmp	.Ltmp851 # Offset: 16559
.Ltmp856:
    000040b4: 	movq	0xf0(%rsp), %rdi
    000040bc: 	leaq	0x100(%rsp), %rax
    000040c4: 	cmpq	%rax, %rdi
    000040c7: 	jne	.Ltmp857 # Offset: 16583
    000040cd: 	jmp	.Ltmp849 # Offset: 16589
    000040d2: 	endbr64
    000040d6: 	jmp	.Ltmp855 # Offset: 16598
    000040d8: 	endbr64
    000040dc: 	jmp	.Ltmp855 # Offset: 16604
    000040de: 	endbr64
    000040e2: 	jmp	.Ltmp851 # Offset: 16610
    000040e7: 	endbr64
    000040eb: 	jmp	.Ltmp851 # Offset: 16619
    000040f0: 	endbr64
    000040f4: 	jmp	.Ltmp851 # Offset: 16628
DWARF CFI Instructions:
    <empty>
End of Function "_Z19TestOneTypeFloatingIfEvv"

Binary Function "_Z11TestOneTypeIhEvv" after disassembly {
  Number      : 45
  State       : disassembled
  Address     : 0xa8b0
  Size        : 0x2f2c
  MaxSize     : 0x2f30
  Offset      : 0xa8b0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIhEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB044:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0x18, %rsp
    0000002a: 	movdqa	_Z7gLabelsB5cxx11+16(%rip), %xmm7
    00000032: 	leaq	_Z7gLabelsB5cxx11(%rip), %r15
    00000039: 	movq	%r15, %rdi
    0000003c: 	movq	%fs:0x28, %rax
    00000045: 	movq	%rax, 0x2008(%rsp)
    0000004d: 	xorl	%eax, %eax
    0000004f: 	leaq	0x70(%rsp), %rax
    00000054: 	movaps	%xmm7, 0x40(%rsp)
    00000059: 	movdqa	_Z7gLabelsB5cxx11+32(%rip), %xmm7
    00000061: 	leaq	0x40(%rsp), %rsi
    00000066: 	movq	%rax, 0x38(%rsp)
    0000006b: 	leaq	0xc0(%rsp), %rbp
    00000073: 	movq	%rax, 0x60(%rsp)
    00000078: 	movl	$0x5f38, %eax
    0000007d: 	leaq	0x60(%rsp), %r14
    00000082: 	leaq	0xa0(%rsp), %r12
    0000008a: 	movw	%ax, 0x74(%rsp)
    0000008f: 	movq	%rsi, 0x30(%rsp)
    00000094: 	movl	$0x746e6975, 0x70(%rsp)
    0000009c: 	movb	$0x74, 0x76(%rsp)
    000000a1: 	movq	$0x7, 0x68(%rsp)
    000000aa: 	movb	$0x0, 0x77(%rsp)
    000000af: 	movaps	%xmm7, 0x50(%rsp)
    000000b4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 180
    000000b9: 	movl	$0x3e8, %ecx
    000000be: 	movq	%rbp, %rdi
    000000c1: 	movq	%r14, %rsi
    000000c4: 	cvttsd2si	init_value(%rip), %eax
    000000cc: 	movabsq	$0x101010101010101, %rdx
    000000d6: 	movzbl	%al, %eax
    000000d9: 	imulq	%rdx, %rax
    000000dd: 	leaq	DATAat0x231c8(%rip), %rdx
    000000e4: 	rep		stosq	%rax, %es:(%rdi)
    000000e7: 	movl	base_iterations(%rip), %eax
    000000ed: 	movq	%r12, %rdi
    000000f0: 	movl	%eax, iterations(%rip)
    000000f6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 246
    000000fb: 	callq	clock@PLT # Offset: 251
    00000100: 	movq	%r12, %rsi
    00000103: 	movq	%r15, %rdi
    00000106: 	movq	%rax, start_time(%rip)
    0000010d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 269
    00000112: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000119: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000120: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000127: 	je	.Ltmp858 # Offset: 295
.Ltmp1093:
    0000012d: 	movq	-0x20(%rax), %r13
    00000131: 	callq	clock@PLT # Offset: 305
    00000136: 	pxor	%xmm0, %xmm0
    0000013a: 	movq	%rax, end_time(%rip)
    00000141: 	movq	%r13, %rdi
    00000144: 	subq	start_time(%rip), %rax
    0000014b: 	cvtsi2sd	%rax, %xmm0
    00000150: 	divsd	DATAat0x23450(%rip), %xmm0
    00000158: 	callq	_Z13record_resultdPKc # Offset: 344
    0000015d: 	movq	0xa0(%rsp), %rdi
    00000165: 	leaq	0xb0(%rsp), %r13
    0000016d: 	cmpq	%r13, %rdi
    00000170: 	je	.Ltmp859 # Offset: 368
    00000172: 	movq	0xb0(%rsp), %rax
    0000017a: 	leaq	0x1(%rax), %rsi
    0000017e: 	callq	_ZdlPvm@PLT # Offset: 382
.Ltmp859:
    00000183: 	leaq	DATAat0x231e2(%rip), %rdx
    0000018a: 	movq	%r14, %rsi
    0000018d: 	movq	%r12, %rdi
    00000190: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 400
    00000195: 	callq	clock@PLT # Offset: 405
    0000019a: 	movq	%r12, %rsi
    0000019d: 	movq	%r15, %rdi
    000001a0: 	movq	%rax, start_time(%rip)
    000001a7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 423
    000001ac: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000001b3: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000001ba: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000001c1: 	je	.Ltmp860 # Offset: 449
.Ltmp1092:
    000001c7: 	movq	-0x20(%rax), %rbx
    000001cb: 	callq	clock@PLT # Offset: 459
    000001d0: 	pxor	%xmm0, %xmm0
    000001d4: 	movq	%rax, end_time(%rip)
    000001db: 	movq	%rbx, %rdi
    000001de: 	subq	start_time(%rip), %rax
    000001e5: 	cvtsi2sd	%rax, %xmm0
    000001ea: 	divsd	DATAat0x23450(%rip), %xmm0
    000001f2: 	callq	_Z13record_resultdPKc # Offset: 498
    000001f7: 	movq	0xa0(%rsp), %rdi
    000001ff: 	cmpq	%r13, %rdi
    00000202: 	je	.Ltmp861 # Offset: 514
    00000204: 	movq	0xb0(%rsp), %rax
    0000020c: 	leaq	0x1(%rax), %rsi
    00000210: 	callq	_ZdlPvm@PLT # Offset: 528
.Ltmp861:
    00000215: 	leaq	DATAat0x231f1(%rip), %rdx
    0000021c: 	movq	%r14, %rsi
    0000021f: 	movq	%r12, %rdi
    00000222: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 546
    00000227: 	callq	clock@PLT # Offset: 551
    0000022c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00000233: 	movq	%rax, start_time(%rip)
    0000023a: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000241: 	subq	$0x20, %rax
    00000245: 	cmpq	%rax, %rbx
    00000248: 	je	.Ltmp862 # Offset: 584
    0000024e: 	leaq	0x10(%rbx), %rdi
    00000252: 	movq	0xa8(%rsp), %rsi
    0000025a: 	movq	%rdi, (%rbx)
    0000025d: 	movq	0xa0(%rsp), %rcx
    00000265: 	movq	%rsi, (%rsp)
    00000269: 	movq	%rcx, %rax
    0000026c: 	movq	%rcx, 0x10(%rsp)
    00000271: 	addq	%rsi, %rax
    00000274: 	je	.Ltmp863 # Offset: 628
    00000276: 	testq	%rcx, %rcx
    00000279: 	je	.Ltmp864 # Offset: 633
.Ltmp863:
    0000027f: 	movq	(%rsp), %rax
    00000283: 	movq	%rax, 0x40(%rsp)
    00000288: 	cmpq	$0xf, %rax
    0000028c: 	ja	.Ltmp865 # Offset: 652
    00000292: 	cmpq	$0x1, (%rsp)
    00000297: 	jne	.Ltmp866 # Offset: 663
    0000029d: 	movq	0x10(%rsp), %rax
    000002a2: 	movzbl	(%rax), %eax
    000002a5: 	movb	%al, 0x10(%rbx)
.Ltmp1054:
    000002a8: 	movq	(%rsp), %rax
    000002ac: 	movq	%rax, 0x8(%rbx)
    000002b0: 	movb	$0x0, (%rdi,%rax)
    000002b4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000002bb: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000002c2: 	addq	$0x20, %rax
    000002c6: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000002cd: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    000002d4: 	je	.Ltmp867 # Offset: 724
.Ltmp1091:
    000002da: 	movq	-0x20(%rax), %rbx
    000002de: 	callq	clock@PLT # Offset: 734
    000002e3: 	pxor	%xmm0, %xmm0
    000002e7: 	movq	%rax, end_time(%rip)
    000002ee: 	movq	%rbx, %rdi
    000002f1: 	subq	start_time(%rip), %rax
    000002f8: 	cvtsi2sd	%rax, %xmm0
    000002fd: 	divsd	DATAat0x23450(%rip), %xmm0
    00000305: 	callq	_Z13record_resultdPKc # Offset: 773
    0000030a: 	movq	0xa0(%rsp), %rdi
    00000312: 	cmpq	%r13, %rdi
    00000315: 	je	.Ltmp868 # Offset: 789
    00000317: 	movq	0xb0(%rsp), %rax
    0000031f: 	leaq	0x1(%rax), %rsi
    00000323: 	callq	_ZdlPvm@PLT # Offset: 803
.Ltmp868:
    00000328: 	leaq	DATAat0x23205(%rip), %rdx
    0000032f: 	movq	%r14, %rsi
    00000332: 	movq	%r12, %rdi
    00000335: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 821
    0000033a: 	callq	clock@PLT # Offset: 826
    0000033f: 	movq	%r12, %rsi
    00000342: 	movq	%r15, %rdi
    00000345: 	movq	%rax, start_time(%rip)
    0000034c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 844
    00000351: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000358: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000035f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000366: 	je	.Ltmp869 # Offset: 870
.Ltmp1098:
    0000036c: 	movq	-0x20(%rax), %rbx
    00000370: 	callq	clock@PLT # Offset: 880
    00000375: 	pxor	%xmm0, %xmm0
    00000379: 	movq	%rax, end_time(%rip)
    00000380: 	movq	%rbx, %rdi
    00000383: 	subq	start_time(%rip), %rax
    0000038a: 	cvtsi2sd	%rax, %xmm0
    0000038f: 	divsd	DATAat0x23450(%rip), %xmm0
    00000397: 	callq	_Z13record_resultdPKc # Offset: 919
    0000039c: 	movq	0xa0(%rsp), %rdi
    000003a4: 	cmpq	%r13, %rdi
    000003a7: 	je	.Ltmp870 # Offset: 935
    000003a9: 	movq	0xb0(%rsp), %rax
    000003b1: 	leaq	0x1(%rax), %rsi
    000003b5: 	callq	_ZdlPvm@PLT # Offset: 949
.Ltmp870:
    000003ba: 	leaq	DATAat0x23219(%rip), %rdx
    000003c1: 	movq	%r14, %rsi
    000003c4: 	movq	%r12, %rdi
    000003c7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 967
    000003cc: 	callq	clock@PLT # Offset: 972
    000003d1: 	movq	%r12, %rsi
    000003d4: 	movq	%r15, %rdi
    000003d7: 	movq	%rax, start_time(%rip)
    000003de: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 990
    000003e3: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000003ea: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000003f1: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000003f8: 	je	.Ltmp871 # Offset: 1016
.Ltmp1097:
    000003fe: 	movq	-0x20(%rax), %rbx
    00000402: 	callq	clock@PLT # Offset: 1026
    00000407: 	pxor	%xmm0, %xmm0
    0000040b: 	movq	%rax, end_time(%rip)
    00000412: 	movq	%rbx, %rdi
    00000415: 	subq	start_time(%rip), %rax
    0000041c: 	cvtsi2sd	%rax, %xmm0
    00000421: 	divsd	DATAat0x23450(%rip), %xmm0
    00000429: 	callq	_Z13record_resultdPKc # Offset: 1065
    0000042e: 	movq	0xa0(%rsp), %rdi
    00000436: 	cmpq	%r13, %rdi
    00000439: 	je	.Ltmp872 # Offset: 1081
    0000043b: 	movq	0xb0(%rsp), %rax
    00000443: 	leaq	0x1(%rax), %rsi
    00000447: 	callq	_ZdlPvm@PLT # Offset: 1095
.Ltmp872:
    0000044c: 	leaq	DATAat0x233c2(%rip), %rdx
    00000453: 	movq	%r14, %rsi
    00000456: 	movq	%r12, %rdi
    00000459: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1113
    0000045e: 	callq	clock@PLT # Offset: 1118
    00000463: 	movq	%r12, %rsi
    00000466: 	movq	%r15, %rdi
    00000469: 	movq	%rax, start_time(%rip)
    00000470: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1136
    00000475: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000047c: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000483: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000048a: 	je	.Ltmp873 # Offset: 1162
.Ltmp1096:
    00000490: 	movq	-0x20(%rax), %rbx
    00000494: 	callq	clock@PLT # Offset: 1172
    00000499: 	pxor	%xmm0, %xmm0
    0000049d: 	movq	%rax, end_time(%rip)
    000004a4: 	movq	%rbx, %rdi
    000004a7: 	subq	start_time(%rip), %rax
    000004ae: 	cvtsi2sd	%rax, %xmm0
    000004b3: 	divsd	DATAat0x23450(%rip), %xmm0
    000004bb: 	callq	_Z13record_resultdPKc # Offset: 1211
    000004c0: 	movq	0xa0(%rsp), %rdi
    000004c8: 	cmpq	%r13, %rdi
    000004cb: 	je	.Ltmp874 # Offset: 1227
    000004cd: 	movq	0xb0(%rsp), %rax
    000004d5: 	leaq	0x1(%rax), %rsi
    000004d9: 	callq	_ZdlPvm@PLT # Offset: 1241
.Ltmp874:
    000004de: 	leaq	DATAat0x23279(%rip), %rdx
    000004e5: 	movq	%r14, %rsi
    000004e8: 	movq	%r12, %rdi
    000004eb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1259
    000004f0: 	callq	clock@PLT # Offset: 1264
    000004f5: 	movq	%r12, %rsi
    000004f8: 	movq	%r15, %rdi
    000004fb: 	movq	%rax, start_time(%rip)
    00000502: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1282
    00000507: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000050e: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000515: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000051c: 	je	.Ltmp875 # Offset: 1308
.Ltmp1095:
    00000522: 	movq	-0x20(%rax), %rbx
    00000526: 	callq	clock@PLT # Offset: 1318
    0000052b: 	pxor	%xmm0, %xmm0
    0000052f: 	movq	%rax, end_time(%rip)
    00000536: 	movq	%rbx, %rdi
    00000539: 	subq	start_time(%rip), %rax
    00000540: 	cvtsi2sd	%rax, %xmm0
    00000545: 	divsd	DATAat0x23450(%rip), %xmm0
    0000054d: 	callq	_Z13record_resultdPKc # Offset: 1357
    00000552: 	movq	0xa0(%rsp), %rdi
    0000055a: 	cmpq	%r13, %rdi
    0000055d: 	je	.Ltmp876 # Offset: 1373
    0000055f: 	movq	0xb0(%rsp), %rax
    00000567: 	leaq	0x1(%rax), %rsi
    0000056b: 	callq	_ZdlPvm@PLT # Offset: 1387
.Ltmp876:
    00000570: 	leaq	DATAat0x2322b(%rip), %rdx
    00000577: 	movq	%r14, %rsi
    0000057a: 	movq	%r12, %rdi
    0000057d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1405
    00000582: 	callq	clock@PLT # Offset: 1410
    00000587: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    0000058e: 	movq	%rax, start_time(%rip)
    00000595: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000059c: 	subq	$0x20, %rax
    000005a0: 	cmpq	%rax, %rbx
    000005a3: 	je	.Ltmp877 # Offset: 1443
    000005a9: 	leaq	0x10(%rbx), %rdi
    000005ad: 	movq	0xa8(%rsp), %rsi
    000005b5: 	movq	%rdi, (%rbx)
    000005b8: 	movq	0xa0(%rsp), %rcx
    000005c0: 	movq	%rsi, (%rsp)
    000005c4: 	movq	%rcx, %rax
    000005c7: 	movq	%rcx, 0x10(%rsp)
    000005cc: 	addq	%rsi, %rax
    000005cf: 	je	.Ltmp878 # Offset: 1487
    000005d1: 	testq	%rcx, %rcx
    000005d4: 	je	.Ltmp879 # Offset: 1492
.Ltmp878:
    000005da: 	movq	(%rsp), %rax
    000005de: 	movq	%rax, 0x40(%rsp)
    000005e3: 	cmpq	$0xf, %rax
    000005e7: 	ja	.Ltmp880 # Offset: 1511
    000005ed: 	cmpq	$0x1, (%rsp)
    000005f2: 	jne	.Ltmp881 # Offset: 1522
    000005f8: 	movq	0x10(%rsp), %rax
    000005fd: 	movzbl	(%rax), %eax
    00000600: 	movb	%al, 0x10(%rbx)
.Ltmp1110:
    00000603: 	movq	(%rsp), %rax
    00000607: 	movq	%rax, 0x8(%rbx)
    0000060b: 	movb	$0x0, (%rdi,%rax)
    0000060f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000616: 	addq	$0x20, %rax
    0000061a: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1094:
    00000621: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000628: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000062f: 	je	.Ltmp882 # Offset: 1583
.Ltmp1079:
    00000635: 	movq	-0x20(%rax), %rbx
    00000639: 	callq	clock@PLT # Offset: 1593
    0000063e: 	pxor	%xmm0, %xmm0
    00000642: 	movq	%rax, end_time(%rip)
    00000649: 	movq	%rbx, %rdi
    0000064c: 	subq	start_time(%rip), %rax
    00000653: 	cvtsi2sd	%rax, %xmm0
    00000658: 	divsd	DATAat0x23450(%rip), %xmm0
    00000660: 	callq	_Z13record_resultdPKc # Offset: 1632
    00000665: 	movq	0xa0(%rsp), %rdi
    0000066d: 	cmpq	%r13, %rdi
    00000670: 	je	.Ltmp883 # Offset: 1648
    00000672: 	movq	0xb0(%rsp), %rax
    0000067a: 	leaq	0x1(%rax), %rsi
    0000067e: 	callq	_ZdlPvm@PLT # Offset: 1662
.Ltmp883:
    00000683: 	leaq	DATAat0x2323f(%rip), %rdx
    0000068a: 	movq	%r14, %rsi
    0000068d: 	movq	%r12, %rdi
    00000690: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1680
    00000695: 	callq	clock@PLT # Offset: 1685
    0000069a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    000006a1: 	movq	%rax, start_time(%rip)
    000006a8: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000006af: 	subq	$0x20, %rax
    000006b3: 	cmpq	%rax, %rbx
    000006b6: 	je	.Ltmp884 # Offset: 1718
    000006bc: 	leaq	0x10(%rbx), %rdi
    000006c0: 	movq	0xa8(%rsp), %rsi
    000006c8: 	movq	%rdi, (%rbx)
    000006cb: 	movq	0xa0(%rsp), %rcx
    000006d3: 	movq	%rsi, (%rsp)
    000006d7: 	movq	%rcx, %rax
    000006da: 	movq	%rcx, 0x10(%rsp)
    000006df: 	addq	%rsi, %rax
    000006e2: 	je	.Ltmp885 # Offset: 1762
    000006e4: 	testq	%rcx, %rcx
    000006e7: 	je	.Ltmp886 # Offset: 1767
.Ltmp885:
    000006ed: 	movq	(%rsp), %rax
    000006f1: 	movq	%rax, 0x40(%rsp)
    000006f6: 	cmpq	$0xf, %rax
    000006fa: 	ja	.Ltmp887 # Offset: 1786
    00000700: 	cmpq	$0x1, (%rsp)
    00000705: 	jne	.Ltmp888 # Offset: 1797
    0000070b: 	movq	0x10(%rsp), %rax
    00000710: 	movzbl	(%rax), %eax
    00000713: 	movb	%al, 0x10(%rbx)
.Ltmp1117:
    00000716: 	movq	(%rsp), %rax
    0000071a: 	movq	%rax, 0x8(%rbx)
    0000071e: 	movb	$0x0, (%rdi,%rax)
    00000722: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000729: 	addq	$0x20, %rax
    0000072d: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1078:
    00000734: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000073b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000742: 	je	.Ltmp889 # Offset: 1858
.Ltmp1077:
    00000748: 	movq	-0x20(%rax), %rbx
    0000074c: 	callq	clock@PLT # Offset: 1868
    00000751: 	pxor	%xmm0, %xmm0
    00000755: 	movq	%rax, end_time(%rip)
    0000075c: 	movq	%rbx, %rdi
    0000075f: 	subq	start_time(%rip), %rax
    00000766: 	cvtsi2sd	%rax, %xmm0
    0000076b: 	divsd	DATAat0x23450(%rip), %xmm0
    00000773: 	callq	_Z13record_resultdPKc # Offset: 1907
    00000778: 	movq	0xa0(%rsp), %rdi
    00000780: 	cmpq	%r13, %rdi
    00000783: 	je	.Ltmp890 # Offset: 1923
    00000785: 	movq	0xb0(%rsp), %rax
    0000078d: 	leaq	0x1(%rax), %rsi
    00000791: 	callq	_ZdlPvm@PLT # Offset: 1937
.Ltmp890:
    00000796: 	leaq	DATAat0x23257(%rip), %rdx
    0000079d: 	movq	%r14, %rsi
    000007a0: 	movq	%r12, %rdi
    000007a3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1955
    000007a8: 	callq	clock@PLT # Offset: 1960
    000007ad: 	movq	%r12, %rsi
    000007b0: 	movq	%r15, %rdi
    000007b3: 	movq	%rax, start_time(%rip)
    000007ba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1978
    000007bf: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000007c6: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000007cd: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000007d4: 	je	.Ltmp891 # Offset: 2004
.Ltmp1076:
    000007da: 	movq	-0x20(%rax), %rbx
    000007de: 	callq	clock@PLT # Offset: 2014
    000007e3: 	pxor	%xmm0, %xmm0
    000007e7: 	movq	%rax, end_time(%rip)
    000007ee: 	movq	%rbx, %rdi
    000007f1: 	subq	start_time(%rip), %rax
    000007f8: 	cvtsi2sd	%rax, %xmm0
    000007fd: 	divsd	DATAat0x23450(%rip), %xmm0
    00000805: 	callq	_Z13record_resultdPKc # Offset: 2053
    0000080a: 	movq	0xa0(%rsp), %rdi
    00000812: 	cmpq	%r13, %rdi
    00000815: 	je	.Ltmp892 # Offset: 2069
    00000817: 	movq	0xb0(%rsp), %rax
    0000081f: 	leaq	0x1(%rax), %rsi
    00000823: 	callq	_ZdlPvm@PLT # Offset: 2083
.Ltmp892:
    00000828: 	leaq	DATAat0x2326c(%rip), %rdx
    0000082f: 	movq	%r14, %rsi
    00000832: 	movq	%r12, %rdi
    00000835: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2101
    0000083a: 	callq	clock@PLT # Offset: 2106
    0000083f: 	movq	%r12, %rsi
    00000842: 	movq	%r15, %rdi
    00000845: 	movq	%rax, start_time(%rip)
    0000084c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2124
    00000851: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000858: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000085f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000866: 	je	.Ltmp893 # Offset: 2150
.Ltmp1075:
    0000086c: 	movq	-0x20(%rax), %rbx
    00000870: 	callq	clock@PLT # Offset: 2160
    00000875: 	pxor	%xmm0, %xmm0
    00000879: 	movq	%rax, end_time(%rip)
    00000880: 	movq	%rbx, %rdi
    00000883: 	subq	start_time(%rip), %rax
    0000088a: 	cvtsi2sd	%rax, %xmm0
    0000088f: 	divsd	DATAat0x23450(%rip), %xmm0
    00000897: 	callq	_Z13record_resultdPKc # Offset: 2199
    0000089c: 	movq	0xa0(%rsp), %rdi
    000008a4: 	cmpq	%r13, %rdi
    000008a7: 	je	.Ltmp894 # Offset: 2215
    000008a9: 	movq	0xb0(%rsp), %rax
    000008b1: 	leaq	0x1(%rax), %rsi
    000008b5: 	callq	_ZdlPvm@PLT # Offset: 2229
.Ltmp894:
    000008ba: 	leaq	DATAat0x2328a(%rip), %rdx
    000008c1: 	movq	%r14, %rsi
    000008c4: 	movq	%r12, %rdi
    000008c7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2247
    000008cc: 	callq	clock@PLT # Offset: 2252
    000008d1: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    000008d8: 	movq	%rax, start_time(%rip)
    000008df: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000008e6: 	subq	$0x20, %rax
    000008ea: 	cmpq	%rax, %rbx
    000008ed: 	je	.Ltmp895 # Offset: 2285
    000008f3: 	leaq	0x10(%rbx), %rdi
    000008f7: 	movq	0xa8(%rsp), %rsi
    000008ff: 	movq	%rdi, (%rbx)
    00000902: 	movq	0xa0(%rsp), %rcx
    0000090a: 	movq	%rsi, (%rsp)
    0000090e: 	movq	%rcx, %rax
    00000911: 	movq	%rcx, 0x10(%rsp)
    00000916: 	addq	%rsi, %rax
    00000919: 	je	.Ltmp896 # Offset: 2329
    0000091b: 	testq	%rcx, %rcx
    0000091e: 	je	.Ltmp897 # Offset: 2334
.Ltmp896:
    00000924: 	movq	(%rsp), %rax
    00000928: 	movq	%rax, 0x40(%rsp)
    0000092d: 	cmpq	$0xf, %rax
    00000931: 	ja	.Ltmp898 # Offset: 2353
    00000937: 	cmpq	$0x1, (%rsp)
    0000093c: 	jne	.Ltmp899 # Offset: 2364
    00000942: 	movq	0x10(%rsp), %rax
    00000947: 	movzbl	(%rax), %eax
    0000094a: 	movb	%al, 0x10(%rbx)
.Ltmp1106:
    0000094d: 	movq	(%rsp), %rax
    00000951: 	movq	%rax, 0x8(%rbx)
    00000955: 	movb	$0x0, (%rdi,%rax)
    00000959: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000960: 	addq	$0x20, %rax
    00000964: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1074:
    0000096b: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000972: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000979: 	je	.Ltmp900 # Offset: 2425
.Ltmp1073:
    0000097f: 	movq	-0x20(%rax), %rbx
    00000983: 	callq	clock@PLT # Offset: 2435
    00000988: 	pxor	%xmm0, %xmm0
    0000098c: 	movq	%rax, end_time(%rip)
    00000993: 	movq	%rbx, %rdi
    00000996: 	subq	start_time(%rip), %rax
    0000099d: 	cvtsi2sd	%rax, %xmm0
    000009a2: 	divsd	DATAat0x23450(%rip), %xmm0
    000009aa: 	callq	_Z13record_resultdPKc # Offset: 2474
    000009af: 	movq	0xa0(%rsp), %rdi
    000009b7: 	cmpq	%r13, %rdi
    000009ba: 	je	.Ltmp901 # Offset: 2490
    000009bc: 	movq	0xb0(%rsp), %rax
    000009c4: 	leaq	0x1(%rax), %rsi
    000009c8: 	callq	_ZdlPvm@PLT # Offset: 2504
.Ltmp901:
    000009cd: 	leaq	DATAat0x233d1(%rip), %rdx
    000009d4: 	movq	%r14, %rsi
    000009d7: 	movq	%r12, %rdi
    000009da: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2522
    000009df: 	callq	clock@PLT # Offset: 2527
    000009e4: 	movq	%r12, %rsi
    000009e7: 	movq	%r15, %rdi
    000009ea: 	movq	%rax, start_time(%rip)
    000009f1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2545
    000009f6: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000009fd: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000a04: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000a0b: 	je	.Ltmp902 # Offset: 2571
.Ltmp1072:
    00000a11: 	movq	-0x20(%rax), %rbx
    00000a15: 	callq	clock@PLT # Offset: 2581
    00000a1a: 	pxor	%xmm0, %xmm0
    00000a1e: 	movq	%rax, end_time(%rip)
    00000a25: 	movq	%rbx, %rdi
    00000a28: 	subq	start_time(%rip), %rax
    00000a2f: 	cvtsi2sd	%rax, %xmm0
    00000a34: 	divsd	DATAat0x23450(%rip), %xmm0
    00000a3c: 	callq	_Z13record_resultdPKc # Offset: 2620
    00000a41: 	movq	0xa0(%rsp), %rdi
    00000a49: 	cmpq	%r13, %rdi
    00000a4c: 	je	.Ltmp903 # Offset: 2636
    00000a4e: 	movq	0xb0(%rsp), %rax
    00000a56: 	leaq	0x1(%rax), %rsi
    00000a5a: 	callq	_ZdlPvm@PLT # Offset: 2650
.Ltmp903:
    00000a5f: 	leaq	DATAat0x233e0(%rip), %rdx
    00000a66: 	movq	%r14, %rsi
    00000a69: 	movq	%r12, %rdi
    00000a6c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2668
    00000a71: 	callq	clock@PLT # Offset: 2673
    00000a76: 	movq	%r12, %rsi
    00000a79: 	movq	%r15, %rdi
    00000a7c: 	movq	%rax, start_time(%rip)
    00000a83: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2691
    00000a88: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000a8f: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000a96: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000a9d: 	je	.Ltmp904 # Offset: 2717
.Ltmp1071:
    00000aa3: 	movq	-0x20(%rax), %rbx
    00000aa7: 	callq	clock@PLT # Offset: 2727
    00000aac: 	pxor	%xmm0, %xmm0
    00000ab0: 	movq	%rax, end_time(%rip)
    00000ab7: 	movq	%rbx, %rdi
    00000aba: 	subq	start_time(%rip), %rax
    00000ac1: 	cvtsi2sd	%rax, %xmm0
    00000ac6: 	divsd	DATAat0x23450(%rip), %xmm0
    00000ace: 	callq	_Z13record_resultdPKc # Offset: 2766
    00000ad3: 	movq	0xa0(%rsp), %rdi
    00000adb: 	cmpq	%r13, %rdi
    00000ade: 	je	.Ltmp905 # Offset: 2782
    00000ae0: 	movq	0xb0(%rsp), %rax
    00000ae8: 	leaq	0x1(%rax), %rsi
    00000aec: 	callq	_ZdlPvm@PLT # Offset: 2796
.Ltmp905:
    00000af1: 	leaq	DATAat0x233ee(%rip), %rdx
    00000af8: 	movq	%r14, %rsi
    00000afb: 	movq	%r12, %rdi
    00000afe: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2814
    00000b03: 	callq	clock@PLT # Offset: 2819
    00000b08: 	movq	%r12, %rsi
    00000b0b: 	movq	%r15, %rdi
    00000b0e: 	movq	%rax, start_time(%rip)
    00000b15: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2837
    00000b1a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000b21: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000b28: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000b2f: 	je	.Ltmp906 # Offset: 2863
.Ltmp1070:
    00000b35: 	movq	-0x20(%rax), %rbx
    00000b39: 	callq	clock@PLT # Offset: 2873
    00000b3e: 	pxor	%xmm0, %xmm0
    00000b42: 	movq	%rax, end_time(%rip)
    00000b49: 	movq	%rbx, %rdi
    00000b4c: 	subq	start_time(%rip), %rax
    00000b53: 	cvtsi2sd	%rax, %xmm0
    00000b58: 	divsd	DATAat0x23450(%rip), %xmm0
    00000b60: 	callq	_Z13record_resultdPKc # Offset: 2912
    00000b65: 	movq	0xa0(%rsp), %rdi
    00000b6d: 	cmpq	%r13, %rdi
    00000b70: 	je	.Ltmp907 # Offset: 2928
    00000b72: 	movq	0xb0(%rsp), %rax
    00000b7a: 	leaq	0x1(%rax), %rsi
    00000b7e: 	callq	_ZdlPvm@PLT # Offset: 2942
.Ltmp907:
    00000b83: 	leaq	0x80(%rsp), %rdi
    00000b8b: 	leaq	DATAat0x232a5(%rip), %rdx
    00000b92: 	movq	%r14, %rsi
    00000b95: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2965
    00000b9a: 	movl	iterations(%rip), %edx
    00000ba0: 	xorl	%r8d, %r8d
    00000ba3: 	xorl	%ecx, %ecx
    00000ba5: 	movl	$0x1f40, %esi
    00000baa: 	movq	0x80(%rsp), %rdi
    00000bb2: 	callq	_Z9summarizePKciiii # Offset: 2994
    00000bb7: 	movslq	base_iterations(%rip), %rax
    00000bbe: 	movq	%r14, %rsi
    00000bc1: 	movq	%r12, %rdi
    00000bc4: 	movq	%rax, %rdx
    00000bc7: 	imulq	$0x66666667, %rax, %rax
    00000bce: 	sarl	$0x1f, %edx
    00000bd1: 	sarq	$0x22, %rax
    00000bd5: 	subl	%edx, %eax
    00000bd7: 	leaq	DATAat0x232be(%rip), %rdx
    00000bde: 	movl	%eax, iterations(%rip)
    00000be4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3044
    00000be9: 	callq	clock@PLT # Offset: 3049
    00000bee: 	movl	iterations(%rip), %ecx
    00000bf4: 	movq	%rax, start_time(%rip)
    00000bfb: 	testl	%ecx, %ecx
    00000bfd: 	jle	.Ltmp908 # Offset: 3069
    00000c03: 	movdqa	DATAat0x236b0(%rip), %xmm7
    00000c0b: 	movl	$0x0, 0x10(%rsp)
    00000c13: 	leaq	0x2000(%rsp), %rbx
    00000c1b: 	movaps	%xmm7, (%rsp)
    00000c1f: 	nop # Size: 1
.Ltmp911:
    00000c20: 	movq	%rbp, %rax
    00000c23: 	pxor	%xmm0, %xmm0
    00000c27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp909:
    00000c30: 	movdqa	(%rsp), %xmm1
    00000c35: 	paddb	(%rax), %xmm1
    00000c39: 	addq	$0x10, %rax
    00000c3d: 	paddb	%xmm1, %xmm0
    00000c41: 	cmpq	%rbx, %rax
    00000c44: 	jne	.Ltmp909 # Offset: 3140
    00000c46: 	cvttsd2si	init_value(%rip), %edx
    00000c4e: 	movdqa	%xmm0, %xmm1
    00000c52: 	psrldq	$0x8, %xmm1
    00000c57: 	paddb	%xmm1, %xmm0
    00000c5b: 	pxor	%xmm1, %xmm1
    00000c5f: 	psadbw	%xmm1, %xmm0
    00000c63: 	addl	$0xa, %edx
    00000c66: 	movd	%xmm0, %eax
    00000c6a: 	shll	$0x6, %edx
    00000c6d: 	cmpb	%al, %dl
    00000c6f: 	je	.Ltmp910 # Offset: 3183
    00000c71: 	movl	current_test(%rip), %edx
    00000c77: 	leaq	DATAat0x231d2(%rip), %rsi
    00000c7e: 	movl	$0x1, %edi
    00000c83: 	xorl	%eax, %eax
    00000c85: 	callq	__printf_chk@PLT # Offset: 3205
    00000c8a: 	movl	iterations(%rip), %ecx
.Ltmp910:
    00000c90: 	addl	$0x1, 0x10(%rsp)
    00000c95: 	movl	0x10(%rsp), %eax
    00000c99: 	cmpl	%ecx, %eax
    00000c9b: 	jl	.Ltmp911 # Offset: 3227
.Ltmp908:
    00000c9d: 	movq	%r12, %rsi
    00000ca0: 	movq	%r15, %rdi
    00000ca3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3235
    00000ca8: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000caf: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000cb6: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000cbd: 	je	.Ltmp912 # Offset: 3261
.Ltmp1069:
    00000cc3: 	movq	-0x20(%rax), %rbx
    00000cc7: 	callq	clock@PLT # Offset: 3271
    00000ccc: 	pxor	%xmm0, %xmm0
    00000cd0: 	movq	%rax, end_time(%rip)
    00000cd7: 	movq	%rbx, %rdi
    00000cda: 	subq	start_time(%rip), %rax
    00000ce1: 	cvtsi2sd	%rax, %xmm0
    00000ce6: 	divsd	DATAat0x23450(%rip), %xmm0
    00000cee: 	callq	_Z13record_resultdPKc # Offset: 3310
    00000cf3: 	movq	0xa0(%rsp), %rdi
    00000cfb: 	cmpq	%r13, %rdi
    00000cfe: 	je	.Ltmp913 # Offset: 3326
    00000d00: 	movq	0xb0(%rsp), %rax
    00000d08: 	leaq	0x1(%rax), %rsi
    00000d0c: 	callq	_ZdlPvm@PLT # Offset: 3340
.Ltmp913:
    00000d11: 	leaq	DATAat0x232cc(%rip), %rdx
    00000d18: 	movq	%r14, %rsi
    00000d1b: 	movq	%r12, %rdi
    00000d1e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3358
    00000d23: 	callq	clock@PLT # Offset: 3363
    00000d28: 	movl	iterations(%rip), %ecx
    00000d2e: 	movq	%rax, start_time(%rip)
    00000d35: 	testl	%ecx, %ecx
    00000d37: 	jle	.Ltmp914 # Offset: 3383
    00000d3d: 	movdqa	DATAat0x236b0(%rip), %xmm7
    00000d45: 	movl	$0x0, 0x10(%rsp)
    00000d4d: 	leaq	0x2000(%rsp), %rbx
    00000d55: 	movaps	%xmm7, (%rsp)
    00000d59: 	nopl	(%rax) # Size: 7
.Ltmp917:
    00000d60: 	movq	%rbp, %rax
    00000d63: 	pxor	%xmm0, %xmm0
    00000d67: 	nopw	(%rax,%rax) # Size: 9
.Ltmp915:
    00000d70: 	movdqa	(%rsp), %xmm1
    00000d75: 	paddb	(%rax), %xmm1
    00000d79: 	addq	$0x10, %rax
    00000d7d: 	paddb	%xmm1, %xmm0
    00000d81: 	cmpq	%rbx, %rax
    00000d84: 	jne	.Ltmp915 # Offset: 3460
    00000d86: 	cvttsd2si	init_value(%rip), %edx
    00000d8e: 	movdqa	%xmm0, %xmm1
    00000d92: 	psrldq	$0x8, %xmm1
    00000d97: 	paddb	%xmm1, %xmm0
    00000d9b: 	pxor	%xmm1, %xmm1
    00000d9f: 	psadbw	%xmm1, %xmm0
    00000da3: 	addl	$0xa, %edx
    00000da6: 	movd	%xmm0, %eax
    00000daa: 	shll	$0x6, %edx
    00000dad: 	cmpb	%al, %dl
    00000daf: 	je	.Ltmp916 # Offset: 3503
    00000db1: 	movl	current_test(%rip), %edx
    00000db7: 	leaq	DATAat0x231d2(%rip), %rsi
    00000dbe: 	movl	$0x1, %edi
    00000dc3: 	xorl	%eax, %eax
    00000dc5: 	callq	__printf_chk@PLT # Offset: 3525
    00000dca: 	movl	iterations(%rip), %ecx
.Ltmp916:
    00000dd0: 	addl	$0x1, 0x10(%rsp)
    00000dd5: 	movl	0x10(%rsp), %eax
    00000dd9: 	cmpl	%ecx, %eax
    00000ddb: 	jl	.Ltmp917 # Offset: 3547
.Ltmp914:
    00000ddd: 	movq	%r12, %rsi
    00000de0: 	movq	%r15, %rdi
    00000de3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3555
    00000de8: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000def: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000df6: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000dfd: 	je	.Ltmp918 # Offset: 3581
.Ltmp1062:
    00000e03: 	movq	-0x20(%rax), %rbx
    00000e07: 	callq	clock@PLT # Offset: 3591
    00000e0c: 	pxor	%xmm0, %xmm0
    00000e10: 	movq	%rax, end_time(%rip)
    00000e17: 	movq	%rbx, %rdi
    00000e1a: 	subq	start_time(%rip), %rax
    00000e21: 	cvtsi2sd	%rax, %xmm0
    00000e26: 	divsd	DATAat0x23450(%rip), %xmm0
    00000e2e: 	callq	_Z13record_resultdPKc # Offset: 3630
    00000e33: 	movq	0xa0(%rsp), %rdi
    00000e3b: 	cmpq	%r13, %rdi
    00000e3e: 	je	.Ltmp919 # Offset: 3646
    00000e40: 	movq	0xb0(%rsp), %rax
    00000e48: 	leaq	0x1(%rax), %rsi
    00000e4c: 	callq	_ZdlPvm@PLT # Offset: 3660
.Ltmp919:
    00000e51: 	leaq	DATAat0x232e4(%rip), %rdx
    00000e58: 	movq	%r14, %rsi
    00000e5b: 	movq	%r12, %rdi
    00000e5e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3678
    00000e63: 	callq	clock@PLT # Offset: 3683
    00000e68: 	movl	iterations(%rip), %ecx
    00000e6e: 	movq	%rax, start_time(%rip)
    00000e75: 	testl	%ecx, %ecx
    00000e77: 	jle	.Ltmp920 # Offset: 3703
    00000e7d: 	movdqa	DATAat0x236c0(%rip), %xmm7
    00000e85: 	movl	$0x0, 0x10(%rsp)
    00000e8d: 	leaq	0x2000(%rsp), %rbx
    00000e95: 	movaps	%xmm7, (%rsp)
    00000e99: 	nopl	(%rax) # Size: 7
.Ltmp923:
    00000ea0: 	movq	%rbp, %rax
    00000ea3: 	pxor	%xmm0, %xmm0
    00000ea7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp921:
    00000eb0: 	movdqa	(%rsp), %xmm1
    00000eb5: 	paddb	(%rax), %xmm1
    00000eb9: 	addq	$0x10, %rax
    00000ebd: 	paddb	%xmm1, %xmm0
    00000ec1: 	cmpq	%rax, %rbx
    00000ec4: 	jne	.Ltmp921 # Offset: 3780
    00000ec6: 	cvttsd2si	init_value(%rip), %edx
    00000ece: 	movdqa	%xmm0, %xmm1
    00000ed2: 	psrldq	$0x8, %xmm1
    00000ed7: 	paddb	%xmm1, %xmm0
    00000edb: 	pxor	%xmm1, %xmm1
    00000edf: 	psadbw	%xmm1, %xmm0
    00000ee3: 	subl	$0xa, %edx
    00000ee6: 	movd	%xmm0, %eax
    00000eea: 	shll	$0x6, %edx
    00000eed: 	cmpb	%al, %dl
    00000eef: 	je	.Ltmp922 # Offset: 3823
    00000ef1: 	movl	current_test(%rip), %edx
    00000ef7: 	leaq	DATAat0x231d2(%rip), %rsi
    00000efe: 	movl	$0x1, %edi
    00000f03: 	xorl	%eax, %eax
    00000f05: 	callq	__printf_chk@PLT # Offset: 3845
    00000f0a: 	movl	iterations(%rip), %ecx
.Ltmp922:
    00000f10: 	addl	$0x1, 0x10(%rsp)
    00000f15: 	movl	0x10(%rsp), %eax
    00000f19: 	cmpl	%ecx, %eax
    00000f1b: 	jl	.Ltmp923 # Offset: 3867
.Ltmp920:
    00000f1d: 	movq	%r12, %rsi
    00000f20: 	movq	%r15, %rdi
    00000f23: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3875
    00000f28: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000f2f: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000f36: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000f3d: 	je	.Ltmp924 # Offset: 3901
.Ltmp1061:
    00000f43: 	movq	-0x20(%rax), %rbx
    00000f47: 	callq	clock@PLT # Offset: 3911
    00000f4c: 	pxor	%xmm0, %xmm0
    00000f50: 	movq	%rax, end_time(%rip)
    00000f57: 	movq	%rbx, %rdi
    00000f5a: 	subq	start_time(%rip), %rax
    00000f61: 	cvtsi2sd	%rax, %xmm0
    00000f66: 	divsd	DATAat0x23450(%rip), %xmm0
    00000f6e: 	callq	_Z13record_resultdPKc # Offset: 3950
    00000f73: 	movq	0xa0(%rsp), %rdi
    00000f7b: 	cmpq	%r13, %rdi
    00000f7e: 	je	.Ltmp925 # Offset: 3966
    00000f80: 	movq	0xb0(%rsp), %rax
    00000f88: 	leaq	0x1(%rax), %rsi
    00000f8c: 	callq	_ZdlPvm@PLT # Offset: 3980
.Ltmp925:
    00000f91: 	leaq	DATAat0x232f7(%rip), %rdx
    00000f98: 	movq	%r14, %rsi
    00000f9b: 	movq	%r12, %rdi
    00000f9e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3998
    00000fa3: 	callq	clock@PLT # Offset: 4003
    00000fa8: 	movl	iterations(%rip), %ecx
    00000fae: 	movq	%rax, start_time(%rip)
    00000fb5: 	testl	%ecx, %ecx
    00000fb7: 	jle	.Ltmp926 # Offset: 4023
    00000fbd: 	movdqa	DATAat0x236c0(%rip), %xmm7
    00000fc5: 	movl	$0x0, 0x10(%rsp)
    00000fcd: 	leaq	0x2000(%rsp), %rbx
    00000fd5: 	movaps	%xmm7, (%rsp)
    00000fd9: 	nopl	(%rax) # Size: 7
.Ltmp929:
    00000fe0: 	movq	%rbp, %rax
    00000fe3: 	pxor	%xmm0, %xmm0
    00000fe7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp927:
    00000ff0: 	movdqa	(%rsp), %xmm1
    00000ff5: 	paddb	(%rax), %xmm1
    00000ff9: 	addq	$0x10, %rax
    00000ffd: 	paddb	%xmm1, %xmm0
    00001001: 	cmpq	%rbx, %rax
    00001004: 	jne	.Ltmp927 # Offset: 4100
    00001006: 	cvttsd2si	init_value(%rip), %edx
    0000100e: 	movdqa	%xmm0, %xmm1
    00001012: 	psrldq	$0x8, %xmm1
    00001017: 	paddb	%xmm1, %xmm0
    0000101b: 	pxor	%xmm1, %xmm1
    0000101f: 	psadbw	%xmm1, %xmm0
    00001023: 	subl	$0xa, %edx
    00001026: 	movd	%xmm0, %eax
    0000102a: 	shll	$0x6, %edx
    0000102d: 	cmpb	%al, %dl
    0000102f: 	je	.Ltmp928 # Offset: 4143
    00001031: 	movl	current_test(%rip), %edx
    00001037: 	leaq	DATAat0x231d2(%rip), %rsi
    0000103e: 	movl	$0x1, %edi
    00001043: 	xorl	%eax, %eax
    00001045: 	callq	__printf_chk@PLT # Offset: 4165
    0000104a: 	movl	iterations(%rip), %ecx
.Ltmp928:
    00001050: 	addl	$0x1, 0x10(%rsp)
    00001055: 	movl	0x10(%rsp), %eax
    00001059: 	cmpl	%ecx, %eax
    0000105b: 	jl	.Ltmp929 # Offset: 4187
.Ltmp926:
    0000105d: 	movq	%r12, %rsi
    00001060: 	movq	%r15, %rdi
    00001063: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4195
    00001068: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000106f: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001076: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000107d: 	je	.Ltmp930 # Offset: 4221
.Ltmp1060:
    00001083: 	movq	-0x20(%rax), %rbx
    00001087: 	callq	clock@PLT # Offset: 4231
    0000108c: 	pxor	%xmm0, %xmm0
    00001090: 	movq	%rax, end_time(%rip)
    00001097: 	movq	%rbx, %rdi
    0000109a: 	subq	start_time(%rip), %rax
    000010a1: 	cvtsi2sd	%rax, %xmm0
    000010a6: 	divsd	DATAat0x23450(%rip), %xmm0
    000010ae: 	callq	_Z13record_resultdPKc # Offset: 4270
    000010b3: 	movq	0xa0(%rsp), %rdi
    000010bb: 	cmpq	%r13, %rdi
    000010be: 	je	.Ltmp931 # Offset: 4286
    000010c0: 	movq	0xb0(%rsp), %rax
    000010c8: 	leaq	0x1(%rax), %rsi
    000010cc: 	callq	_ZdlPvm@PLT # Offset: 4300
.Ltmp931:
    000010d1: 	leaq	DATAat0x23314(%rip), %rdx
    000010d8: 	movq	%r14, %rsi
    000010db: 	movq	%r12, %rdi
    000010de: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4318
    000010e3: 	callq	clock@PLT # Offset: 4323
    000010e8: 	movl	iterations(%rip), %edx
    000010ee: 	movl	$0x0, (%rsp)
    000010f5: 	leaq	0x2000(%rsp), %rbx
    000010fd: 	movq	%rax, start_time(%rip)
    00001104: 	testl	%edx, %edx
    00001106: 	jle	.Ltmp932 # Offset: 4358
    00001108: 	nopl	(%rax,%rax) # Size: 8
.Ltmp935:
    00001110: 	movq	%rbp, %rax
    00001113: 	pxor	%xmm2, %xmm2
    00001117: 	nopw	(%rax,%rax) # Size: 9
.Ltmp933:
    00001120: 	movdqa	(%rax), %xmm1
    00001124: 	addq	$0x10, %rax
    00001128: 	movdqa	%xmm1, %xmm0
    0000112c: 	paddb	%xmm1, %xmm0
    00001130: 	paddb	%xmm0, %xmm0
    00001134: 	paddb	%xmm0, %xmm0
    00001138: 	paddb	%xmm0, %xmm0
    0000113c: 	psubb	%xmm1, %xmm0
    00001140: 	paddb	%xmm0, %xmm0
    00001144: 	paddb	%xmm0, %xmm0
    00001148: 	paddb	%xmm0, %xmm0
    0000114c: 	paddb	%xmm0, %xmm2
    00001150: 	cmpq	%rbx, %rax
    00001153: 	jne	.Ltmp933 # Offset: 4435
    00001155: 	movdqa	%xmm2, %xmm0
    00001159: 	psrldq	$0x8, %xmm0
    0000115e: 	paddb	%xmm0, %xmm2
    00001162: 	pxor	%xmm0, %xmm0
    00001166: 	psadbw	%xmm0, %xmm2
    0000116a: 	movd	%xmm2, %eax
    0000116e: 	testb	%al, %al
    00001170: 	jne	.Ltmp934 # Offset: 4464
.Ltmp1056:
    00001176: 	addl	$0x1, (%rsp)
    0000117a: 	movl	(%rsp), %eax
    0000117d: 	cmpl	%edx, %eax
    0000117f: 	jl	.Ltmp935 # Offset: 4479
.Ltmp932:
    00001181: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001188: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    0000118f: 	subq	$0x20, %rax
    00001193: 	cmpq	%rax, %rbx
    00001196: 	je	.Ltmp936 # Offset: 4502
    0000119c: 	leaq	0x10(%rbx), %rdi
    000011a0: 	movq	0xa8(%rsp), %rsi
    000011a8: 	movq	%rdi, (%rbx)
    000011ab: 	movq	0xa0(%rsp), %rcx
    000011b3: 	movq	%rsi, (%rsp)
    000011b7: 	movq	%rcx, %rax
    000011ba: 	movq	%rcx, 0x10(%rsp)
    000011bf: 	addq	%rsi, %rax
    000011c2: 	je	.Ltmp937 # Offset: 4546
    000011c4: 	testq	%rcx, %rcx
    000011c7: 	je	.Ltmp938 # Offset: 4551
.Ltmp937:
    000011cd: 	movq	(%rsp), %rax
    000011d1: 	movq	%rax, 0x40(%rsp)
    000011d6: 	cmpq	$0xf, %rax
    000011da: 	ja	.Ltmp939 # Offset: 4570
    000011e0: 	cmpq	$0x1, (%rsp)
    000011e5: 	jne	.Ltmp940 # Offset: 4581
    000011eb: 	movq	0x10(%rsp), %rax
    000011f0: 	movzbl	(%rax), %eax
    000011f3: 	movb	%al, 0x10(%rbx)
.Ltmp1115:
    000011f6: 	movq	(%rsp), %rax
    000011fa: 	movq	%rax, 0x8(%rbx)
    000011fe: 	movb	$0x0, (%rdi,%rax)
    00001202: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001209: 	addq	$0x20, %rax
    0000120d: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1064:
    00001214: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000121b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001222: 	je	.Ltmp941 # Offset: 4642
.Ltmp1063:
    00001228: 	movq	-0x20(%rax), %rbx
    0000122c: 	callq	clock@PLT # Offset: 4652
    00001231: 	pxor	%xmm0, %xmm0
    00001235: 	movq	%rax, end_time(%rip)
    0000123c: 	movq	%rbx, %rdi
    0000123f: 	subq	start_time(%rip), %rax
    00001246: 	cvtsi2sd	%rax, %xmm0
    0000124b: 	divsd	DATAat0x23450(%rip), %xmm0
    00001253: 	callq	_Z13record_resultdPKc # Offset: 4691
    00001258: 	movq	0xa0(%rsp), %rdi
    00001260: 	cmpq	%r13, %rdi
    00001263: 	je	.Ltmp942 # Offset: 4707
    00001265: 	movq	0xb0(%rsp), %rax
    0000126d: 	leaq	0x1(%rax), %rsi
    00001271: 	callq	_ZdlPvm@PLT # Offset: 4721
.Ltmp942:
    00001276: 	leaq	DATAat0x23327(%rip), %rdx
    0000127d: 	movq	%r14, %rsi
    00001280: 	movq	%r12, %rdi
    00001283: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4739
    00001288: 	callq	clock@PLT # Offset: 4744
    0000128d: 	movl	iterations(%rip), %edx
    00001293: 	movl	$0x0, (%rsp)
    0000129a: 	leaq	0x2000(%rsp), %rbx
    000012a2: 	movq	%rax, start_time(%rip)
    000012a9: 	testl	%edx, %edx
    000012ab: 	jle	.Ltmp943 # Offset: 4779
    000012ad: 	nopl	(%rax) # Size: 3
.Ltmp946:
    000012b0: 	movq	%rbp, %rax
    000012b3: 	pxor	%xmm2, %xmm2
    000012b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp944:
    000012c0: 	movdqa	(%rax), %xmm1
    000012c4: 	addq	$0x10, %rax
    000012c8: 	movdqa	%xmm1, %xmm0
    000012cc: 	paddb	%xmm1, %xmm0
    000012d0: 	paddb	%xmm0, %xmm0
    000012d4: 	paddb	%xmm0, %xmm0
    000012d8: 	paddb	%xmm0, %xmm0
    000012dc: 	psubb	%xmm1, %xmm0
    000012e0: 	paddb	%xmm0, %xmm0
    000012e4: 	paddb	%xmm0, %xmm0
    000012e8: 	paddb	%xmm0, %xmm0
    000012ec: 	paddb	%xmm0, %xmm2
    000012f0: 	cmpq	%rbx, %rax
    000012f3: 	jne	.Ltmp944 # Offset: 4851
    000012f5: 	movdqa	%xmm2, %xmm0
    000012f9: 	psrldq	$0x8, %xmm0
    000012fe: 	paddb	%xmm0, %xmm2
    00001302: 	pxor	%xmm0, %xmm0
    00001306: 	psadbw	%xmm0, %xmm2
    0000130a: 	movd	%xmm2, %eax
    0000130e: 	testb	%al, %al
    00001310: 	jne	.Ltmp945 # Offset: 4880
.Ltmp1055:
    00001316: 	addl	$0x1, (%rsp)
    0000131a: 	movl	(%rsp), %eax
    0000131d: 	cmpl	%edx, %eax
    0000131f: 	jl	.Ltmp946 # Offset: 4895
.Ltmp943:
    00001321: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001328: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    0000132f: 	subq	$0x20, %rax
    00001333: 	cmpq	%rax, %rbx
    00001336: 	je	.Ltmp947 # Offset: 4918
    0000133c: 	leaq	0x10(%rbx), %rdi
    00001340: 	movq	0xa8(%rsp), %rcx
    00001348: 	movq	%rdi, (%rbx)
    0000134b: 	movq	0xa0(%rsp), %rsi
    00001353: 	movq	%rcx, (%rsp)
    00001357: 	movq	%rsi, %rax
    0000135a: 	movq	%rsi, 0x10(%rsp)
    0000135f: 	addq	%rcx, %rax
    00001362: 	je	.Ltmp948 # Offset: 4962
    00001364: 	testq	%rsi, %rsi
    00001367: 	je	.Ltmp949 # Offset: 4967
.Ltmp948:
    0000136d: 	movq	(%rsp), %rax
    00001371: 	movq	%rax, 0x40(%rsp)
    00001376: 	cmpq	$0xf, %rax
    0000137a: 	ja	.Ltmp950 # Offset: 4986
    00001380: 	cmpq	$0x1, (%rsp)
    00001385: 	jne	.Ltmp951 # Offset: 4997
    0000138b: 	movq	0x10(%rsp), %rax
    00001390: 	movzbl	(%rax), %eax
    00001393: 	movb	%al, 0x10(%rbx)
.Ltmp1104:
    00001396: 	movq	(%rsp), %rax
    0000139a: 	movq	%rax, 0x8(%rbx)
    0000139e: 	movb	$0x0, (%rdi,%rax)
    000013a2: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000013a9: 	addq	$0x20, %rax
    000013ad: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1059:
    000013b4: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000013bb: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000013c2: 	je	.Ltmp952 # Offset: 5058
.Ltmp1058:
    000013c8: 	movq	-0x20(%rax), %rbx
    000013cc: 	callq	clock@PLT # Offset: 5068
    000013d1: 	pxor	%xmm0, %xmm0
    000013d5: 	movq	%rax, end_time(%rip)
    000013dc: 	movq	%rbx, %rdi
    000013df: 	subq	start_time(%rip), %rax
    000013e6: 	cvtsi2sd	%rax, %xmm0
    000013eb: 	divsd	DATAat0x23450(%rip), %xmm0
    000013f3: 	callq	_Z13record_resultdPKc # Offset: 5107
    000013f8: 	movq	0xa0(%rsp), %rdi
    00001400: 	cmpq	%r13, %rdi
    00001403: 	je	.Ltmp953 # Offset: 5123
    00001405: 	movq	0xb0(%rsp), %rax
    0000140d: 	leaq	0x1(%rax), %rsi
    00001411: 	callq	_ZdlPvm@PLT # Offset: 5137
.Ltmp953:
    00001416: 	leaq	DATAat0x23345(%rip), %rdx
    0000141d: 	movq	%r14, %rsi
    00001420: 	movq	%r12, %rdi
    00001423: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5155
    00001428: 	callq	clock@PLT # Offset: 5160
    0000142d: 	movl	iterations(%rip), %ecx
    00001433: 	movq	%rax, start_time(%rip)
    0000143a: 	testl	%ecx, %ecx
    0000143c: 	jle	.Ltmp954 # Offset: 5180
    00001442: 	movl	$0x0, (%rsp)
    00001449: 	leaq	0x2000(%rsp), %rbx
    00001451: 	nopl	(%rax) # Size: 7
.Ltmp957:
    00001458: 	movq	%rbp, %rax
    0000145b: 	pxor	%xmm0, %xmm0
    0000145f: 	nop # Size: 1
.Ltmp955:
    00001460: 	movdqa	DATAat0x236d0(%rip), %xmm1
    00001468: 	paddb	(%rax), %xmm1
    0000146c: 	addq	$0x10, %rax
    00001470: 	paddb	%xmm1, %xmm0
    00001474: 	cmpq	%rbx, %rax
    00001477: 	jne	.Ltmp955 # Offset: 5239
    00001479: 	movdqa	%xmm0, %xmm1
    0000147d: 	cvttsd2si	init_value(%rip), %edx
    00001485: 	psrldq	$0x8, %xmm1
    0000148a: 	paddb	%xmm1, %xmm0
    0000148e: 	pxor	%xmm1, %xmm1
    00001492: 	psadbw	%xmm1, %xmm0
    00001496: 	movd	%xmm0, %eax
    0000149a: 	shll	$0x6, %edx
    0000149d: 	cmpb	%al, %dl
    0000149f: 	je	.Ltmp956 # Offset: 5279
    000014a1: 	movl	current_test(%rip), %edx
    000014a7: 	leaq	DATAat0x231d2(%rip), %rsi
    000014ae: 	movl	$0x1, %edi
    000014b3: 	xorl	%eax, %eax
    000014b5: 	callq	__printf_chk@PLT # Offset: 5301
    000014ba: 	movl	iterations(%rip), %ecx
.Ltmp956:
    000014c0: 	addl	$0x1, (%rsp)
    000014c4: 	movl	(%rsp), %eax
    000014c7: 	cmpl	%ecx, %eax
    000014c9: 	jl	.Ltmp957 # Offset: 5321
.Ltmp954:
    000014cb: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000014d2: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    000014d9: 	subq	$0x20, %rax
    000014dd: 	cmpq	%rax, %rbx
    000014e0: 	je	.Ltmp958 # Offset: 5344
    000014e6: 	leaq	0x10(%rbx), %rdi
    000014ea: 	movq	0xa8(%rsp), %rsi
    000014f2: 	movq	%rdi, (%rbx)
    000014f5: 	movq	0xa0(%rsp), %rcx
    000014fd: 	movq	%rsi, (%rsp)
    00001501: 	movq	%rcx, %rax
    00001504: 	movq	%rcx, 0x10(%rsp)
    00001509: 	addq	%rsi, %rax
    0000150c: 	je	.Ltmp959 # Offset: 5388
    0000150e: 	testq	%rcx, %rcx
    00001511: 	je	.Ltmp960 # Offset: 5393
.Ltmp959:
    00001517: 	movq	(%rsp), %rax
    0000151b: 	movq	%rax, 0x40(%rsp)
    00001520: 	cmpq	$0xf, %rax
    00001524: 	ja	.Ltmp961 # Offset: 5412
    0000152a: 	cmpq	$0x1, (%rsp)
    0000152f: 	jne	.Ltmp962 # Offset: 5423
    00001535: 	movq	0x10(%rsp), %rax
    0000153a: 	movzbl	(%rax), %eax
    0000153d: 	movb	%al, 0x10(%rbx)
.Ltmp1112:
    00001540: 	movq	(%rsp), %rax
    00001544: 	movq	%rax, 0x8(%rbx)
    00001548: 	movb	$0x0, (%rdi,%rax)
    0000154c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001553: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000155a: 	addq	$0x20, %rax
    0000155e: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001565: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    0000156c: 	je	.Ltmp963 # Offset: 5484
.Ltmp1057:
    00001572: 	movq	-0x20(%rax), %rbx
    00001576: 	callq	clock@PLT # Offset: 5494
    0000157b: 	pxor	%xmm0, %xmm0
    0000157f: 	movq	%rax, end_time(%rip)
    00001586: 	movq	%rbx, %rdi
    00001589: 	subq	start_time(%rip), %rax
    00001590: 	cvtsi2sd	%rax, %xmm0
    00001595: 	divsd	DATAat0x23450(%rip), %xmm0
    0000159d: 	callq	_Z13record_resultdPKc # Offset: 5533
    000015a2: 	movq	0xa0(%rsp), %rdi
    000015aa: 	cmpq	%r13, %rdi
    000015ad: 	je	.Ltmp964 # Offset: 5549
    000015af: 	movq	0xb0(%rsp), %rax
    000015b7: 	leaq	0x1(%rax), %rsi
    000015bb: 	callq	_ZdlPvm@PLT # Offset: 5563
.Ltmp964:
    000015c0: 	leaq	DATAat0x23362(%rip), %rdx
    000015c7: 	movq	%r14, %rsi
    000015ca: 	movq	%r12, %rdi
    000015cd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5581
    000015d2: 	callq	clock@PLT # Offset: 5586
    000015d7: 	movl	iterations(%rip), %ecx
    000015dd: 	movq	%rax, start_time(%rip)
    000015e4: 	testl	%ecx, %ecx
    000015e6: 	jle	.Ltmp965 # Offset: 5606
    000015ec: 	movdqa	DATAat0x236f0(%rip), %xmm7
    000015f4: 	movdqa	DATAat0x236e0(%rip), %xmm0
    000015fc: 	movl	$0x0, 0x2c(%rsp)
    00001604: 	leaq	0x2000(%rsp), %rbx
    0000160c: 	movaps	%xmm7, (%rsp)
    00001610: 	pxor	%xmm7, %xmm7
    00001614: 	punpcklbw	%xmm7, %xmm0
    00001618: 	movaps	%xmm0, 0x10(%rsp)
    0000161d: 	nopl	(%rax) # Size: 3
.Ltmp968:
    00001620: 	movq	%rbp, %rax
    00001623: 	pxor	%xmm2, %xmm2
    00001627: 	nopw	(%rax,%rax) # Size: 9
.Ltmp966:
    00001630: 	movdqa	(%rax), %xmm1
    00001634: 	movdqa	0x10(%rsp), %xmm5
    0000163a: 	pxor	%xmm3, %xmm3
    0000163e: 	addq	$0x10, %rax
    00001642: 	movdqa	%xmm1, %xmm0
    00001646: 	punpckhbw	%xmm3, %xmm1
    0000164a: 	punpcklbw	%xmm3, %xmm0
    0000164e: 	pmullw	%xmm5, %xmm1
    00001652: 	pmullw	%xmm5, %xmm0
    00001656: 	psrlw	$0x8, %xmm1
    0000165b: 	psrlw	$0x8, %xmm0
    00001660: 	packuswb	%xmm1, %xmm0
    00001664: 	psrlw	$0x2, %xmm0
    00001669: 	pand	(%rsp), %xmm0
    0000166e: 	paddb	%xmm0, %xmm2
    00001672: 	cmpq	%rax, %rbx
    00001675: 	jne	.Ltmp966 # Offset: 5749
    00001677: 	cvttsd2si	init_value(%rip), %eax
    0000167f: 	movl	$0xffffffcd, %esi
    00001684: 	movdqa	%xmm2, %xmm0
    00001688: 	psrldq	$0x8, %xmm0
    0000168d: 	paddb	%xmm0, %xmm2
    00001691: 	psadbw	%xmm3, %xmm2
    00001695: 	mulb	%sil
    00001698: 	movd	%xmm2, %edx
    0000169c: 	shrw	$0xa, %ax
    000016a0: 	shll	$0x6, %eax
    000016a3: 	cmpb	%dl, %al
    000016a5: 	je	.Ltmp967 # Offset: 5797
    000016a7: 	movl	current_test(%rip), %edx
    000016ad: 	leaq	DATAat0x231d2(%rip), %rsi
    000016b4: 	movl	$0x1, %edi
    000016b9: 	xorl	%eax, %eax
    000016bb: 	callq	__printf_chk@PLT # Offset: 5819
    000016c0: 	movl	iterations(%rip), %ecx
.Ltmp967:
    000016c6: 	addl	$0x1, 0x2c(%rsp)
    000016cb: 	movl	0x2c(%rsp), %eax
    000016cf: 	cmpl	%ecx, %eax
    000016d1: 	jl	.Ltmp968 # Offset: 5841
.Ltmp965:
    000016d7: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000016de: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    000016e5: 	subq	$0x20, %rax
    000016e9: 	cmpq	%rax, %rbx
    000016ec: 	je	.Ltmp969 # Offset: 5868
    000016f2: 	leaq	0x10(%rbx), %rdi
    000016f6: 	movq	0xa8(%rsp), %rcx
    000016fe: 	movq	%rdi, (%rbx)
    00001701: 	movq	0xa0(%rsp), %rsi
    00001709: 	movq	%rcx, (%rsp)
    0000170d: 	movq	%rsi, %rax
    00001710: 	movq	%rsi, 0x10(%rsp)
    00001715: 	addq	%rcx, %rax
    00001718: 	je	.Ltmp970 # Offset: 5912
    0000171a: 	testq	%rsi, %rsi
    0000171d: 	je	.Ltmp971 # Offset: 5917
.Ltmp970:
    00001723: 	movq	(%rsp), %rax
    00001727: 	movq	%rax, 0x40(%rsp)
    0000172c: 	cmpq	$0xf, %rax
    00001730: 	ja	.Ltmp972 # Offset: 5936
    00001736: 	cmpq	$0x1, (%rsp)
    0000173b: 	jne	.Ltmp973 # Offset: 5947
    00001741: 	movq	0x10(%rsp), %rax
    00001746: 	movzbl	(%rax), %eax
    00001749: 	movb	%al, 0x10(%rbx)
.Ltmp1102:
    0000174c: 	movq	(%rsp), %rax
    00001750: 	movq	%rax, 0x8(%rbx)
    00001754: 	movb	$0x0, (%rdi,%rax)
    00001758: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000175f: 	addq	$0x20, %rax
    00001763: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1088:
    0000176a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001771: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001778: 	je	.Ltmp974 # Offset: 6008
.Ltmp1087:
    0000177e: 	movq	-0x20(%rax), %rbx
    00001782: 	callq	clock@PLT # Offset: 6018
    00001787: 	pxor	%xmm0, %xmm0
    0000178b: 	movq	%rax, end_time(%rip)
    00001792: 	movq	%rbx, %rdi
    00001795: 	subq	start_time(%rip), %rax
    0000179c: 	cvtsi2sd	%rax, %xmm0
    000017a1: 	divsd	DATAat0x23450(%rip), %xmm0
    000017a9: 	callq	_Z13record_resultdPKc # Offset: 6057
    000017ae: 	movq	0xa0(%rsp), %rdi
    000017b6: 	cmpq	%r13, %rdi
    000017b9: 	je	.Ltmp975 # Offset: 6073
    000017bb: 	movq	0xb0(%rsp), %rax
    000017c3: 	leaq	0x1(%rax), %rsi
    000017c7: 	callq	_ZdlPvm@PLT # Offset: 6087
.Ltmp975:
    000017cc: 	leaq	DATAat0x23373(%rip), %rdx
    000017d3: 	movq	%r14, %rsi
    000017d6: 	movq	%r12, %rdi
    000017d9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6105
    000017de: 	callq	clock@PLT # Offset: 6110
    000017e3: 	movl	iterations(%rip), %ecx
    000017e9: 	movq	%rax, start_time(%rip)
    000017f0: 	testl	%ecx, %ecx
    000017f2: 	jle	.Ltmp976 # Offset: 6130
    000017f8: 	movdqa	DATAat0x23700(%rip), %xmm0
    00001800: 	pxor	%xmm7, %xmm7
    00001804: 	movl	$0x0, 0x10(%rsp)
    0000180c: 	leaq	0x2000(%rsp), %rbx
    00001814: 	punpcklbw	%xmm7, %xmm0
    00001818: 	movaps	%xmm0, (%rsp)
    0000181c: 	nopl	(%rax) # Size: 4
.Ltmp979:
    00001820: 	movq	%rbp, %rax
    00001823: 	pxor	%xmm2, %xmm2
    00001827: 	nopw	(%rax,%rax) # Size: 9
.Ltmp977:
    00001830: 	movdqa	(%rax), %xmm1
    00001834: 	movdqa	(%rsp), %xmm6
    00001839: 	pxor	%xmm4, %xmm4
    0000183d: 	addq	$0x10, %rax
    00001841: 	movdqa	%xmm1, %xmm0
    00001845: 	punpckhbw	%xmm4, %xmm1
    00001849: 	punpcklbw	%xmm4, %xmm0
    0000184d: 	pmullw	%xmm6, %xmm1
    00001851: 	pmullw	%xmm6, %xmm0
    00001855: 	psrlw	$0x8, %xmm1
    0000185a: 	psrlw	$0x8, %xmm0
    0000185f: 	packuswb	%xmm1, %xmm0
    00001863: 	psrlw	$0x6, %xmm0
    00001868: 	pand	DATAat0x23710(%rip), %xmm0
    00001870: 	paddb	%xmm0, %xmm2
    00001874: 	cmpq	%rax, %rbx
    00001877: 	jne	.Ltmp977 # Offset: 6263
    00001879: 	cvttsd2si	init_value(%rip), %eax
    00001881: 	movl	$0xffffff89, %esi
    00001886: 	movdqa	%xmm2, %xmm0
    0000188a: 	psrldq	$0x8, %xmm0
    0000188f: 	paddb	%xmm0, %xmm2
    00001893: 	psadbw	%xmm4, %xmm2
    00001897: 	mulb	%sil
    0000189a: 	movd	%xmm2, %edx
    0000189e: 	shrw	$0xe, %ax
    000018a2: 	shll	$0x6, %eax
    000018a5: 	cmpb	%dl, %al
    000018a7: 	je	.Ltmp978 # Offset: 6311
    000018a9: 	movl	current_test(%rip), %edx
    000018af: 	leaq	DATAat0x231d2(%rip), %rsi
    000018b6: 	movl	$0x1, %edi
    000018bb: 	xorl	%eax, %eax
    000018bd: 	callq	__printf_chk@PLT # Offset: 6333
    000018c2: 	movl	iterations(%rip), %ecx
.Ltmp978:
    000018c8: 	addl	$0x1, 0x10(%rsp)
    000018cd: 	movl	0x10(%rsp), %eax
    000018d1: 	cmpl	%ecx, %eax
    000018d3: 	jl	.Ltmp979 # Offset: 6355
.Ltmp976:
    000018d9: 	movq	%r12, %rsi
    000018dc: 	movq	%r15, %rdi
    000018df: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6367
    000018e4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000018eb: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000018f2: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000018f9: 	je	.Ltmp980 # Offset: 6393
.Ltmp1086:
    000018ff: 	movq	-0x20(%rax), %rbx
    00001903: 	callq	clock@PLT # Offset: 6403
    00001908: 	pxor	%xmm0, %xmm0
    0000190c: 	movq	%rax, end_time(%rip)
    00001913: 	movq	%rbx, %rdi
    00001916: 	subq	start_time(%rip), %rax
    0000191d: 	cvtsi2sd	%rax, %xmm0
    00001922: 	divsd	DATAat0x23450(%rip), %xmm0
    0000192a: 	callq	_Z13record_resultdPKc # Offset: 6442
    0000192f: 	movq	0xa0(%rsp), %rdi
    00001937: 	cmpq	%r13, %rdi
    0000193a: 	je	.Ltmp981 # Offset: 6458
    0000193c: 	movq	0xb0(%rsp), %rax
    00001944: 	leaq	0x1(%rax), %rsi
    00001948: 	callq	_ZdlPvm@PLT # Offset: 6472
.Ltmp981:
    0000194d: 	leaq	DATAat0x2338e(%rip), %rdx
    00001954: 	movq	%r14, %rsi
    00001957: 	movq	%r12, %rdi
    0000195a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6490
    0000195f: 	callq	clock@PLT # Offset: 6495
    00001964: 	movl	iterations(%rip), %ecx
    0000196a: 	movq	%rax, start_time(%rip)
    00001971: 	testl	%ecx, %ecx
    00001973: 	jle	.Ltmp982 # Offset: 6515
    00001979: 	movl	$0x0, (%rsp)
    00001980: 	leaq	0x2000(%rsp), %rbx
    00001988: 	nopl	(%rax,%rax) # Size: 8
.Ltmp985:
    00001990: 	movq	%rbp, %rax
    00001993: 	pxor	%xmm0, %xmm0
    00001997: 	nopw	(%rax,%rax) # Size: 9
.Ltmp983:
    000019a0: 	movdqa	DATAat0x23720(%rip), %xmm1
    000019a8: 	paddb	(%rax), %xmm1
    000019ac: 	addq	$0x10, %rax
    000019b0: 	paddb	%xmm1, %xmm0
    000019b4: 	cmpq	%rax, %rbx
    000019b7: 	jne	.Ltmp983 # Offset: 6583
    000019b9: 	cvttsd2si	init_value(%rip), %edx
    000019c1: 	movdqa	%xmm0, %xmm1
    000019c5: 	psrldq	$0x8, %xmm1
    000019ca: 	paddb	%xmm1, %xmm0
    000019ce: 	pxor	%xmm1, %xmm1
    000019d2: 	psadbw	%xmm1, %xmm0
    000019d6: 	addl	$0x2, %edx
    000019d9: 	movd	%xmm0, %eax
    000019dd: 	shll	$0x6, %edx
    000019e0: 	cmpb	%al, %dl
    000019e2: 	je	.Ltmp984 # Offset: 6626
    000019e4: 	movl	current_test(%rip), %edx
    000019ea: 	leaq	DATAat0x231d2(%rip), %rsi
    000019f1: 	movl	$0x1, %edi
    000019f6: 	xorl	%eax, %eax
    000019f8: 	callq	__printf_chk@PLT # Offset: 6648
    000019fd: 	movl	iterations(%rip), %ecx
.Ltmp984:
    00001a03: 	addl	$0x1, (%rsp)
    00001a07: 	movl	(%rsp), %eax
    00001a0a: 	cmpl	%ecx, %eax
    00001a0c: 	jl	.Ltmp985 # Offset: 6668
.Ltmp982:
    00001a0e: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001a15: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00001a1c: 	subq	$0x20, %rax
    00001a20: 	cmpq	%rax, %rbx
    00001a23: 	je	.Ltmp986 # Offset: 6691
    00001a29: 	leaq	0x10(%rbx), %rdi
    00001a2d: 	movq	0xa8(%rsp), %rsi
    00001a35: 	movq	%rdi, (%rbx)
    00001a38: 	movq	0xa0(%rsp), %rcx
    00001a40: 	movq	%rsi, (%rsp)
    00001a44: 	movq	%rcx, %rax
    00001a47: 	movq	%rcx, 0x10(%rsp)
    00001a4c: 	addq	%rsi, %rax
    00001a4f: 	je	.Ltmp987 # Offset: 6735
    00001a51: 	testq	%rcx, %rcx
    00001a54: 	je	.Ltmp988 # Offset: 6740
.Ltmp987:
    00001a5a: 	movq	(%rsp), %rax
    00001a5e: 	movq	%rax, 0x40(%rsp)
    00001a63: 	cmpq	$0xf, %rax
    00001a67: 	ja	.Ltmp989 # Offset: 6759
    00001a6d: 	cmpq	$0x1, (%rsp)
    00001a72: 	jne	.Ltmp990 # Offset: 6770
    00001a78: 	movq	0x10(%rsp), %rax
    00001a7d: 	movzbl	(%rax), %eax
    00001a80: 	movb	%al, 0x10(%rbx)
.Ltmp1100:
    00001a83: 	movq	(%rsp), %rax
    00001a87: 	movq	%rax, 0x8(%rbx)
    00001a8b: 	movb	$0x0, (%rdi,%rax)
    00001a8f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001a96: 	addq	$0x20, %rax
    00001a9a: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1085:
    00001aa1: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001aa8: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001aaf: 	je	.Ltmp991 # Offset: 6831
.Ltmp1084:
    00001ab5: 	movq	-0x20(%rax), %rbx
    00001ab9: 	callq	clock@PLT # Offset: 6841
    00001abe: 	pxor	%xmm0, %xmm0
    00001ac2: 	movq	%rax, end_time(%rip)
    00001ac9: 	movq	%rbx, %rdi
    00001acc: 	subq	start_time(%rip), %rax
    00001ad3: 	cvtsi2sd	%rax, %xmm0
    00001ad8: 	divsd	DATAat0x23450(%rip), %xmm0
    00001ae0: 	callq	_Z13record_resultdPKc # Offset: 6880
    00001ae5: 	movq	0xa0(%rsp), %rdi
    00001aed: 	cmpq	%r13, %rdi
    00001af0: 	je	.Ltmp992 # Offset: 6896
    00001af2: 	movq	0xb0(%rsp), %rax
    00001afa: 	leaq	0x1(%rax), %rsi
    00001afe: 	callq	_ZdlPvm@PLT # Offset: 6910
.Ltmp992:
    00001b03: 	leaq	DATAat0x233a9(%rip), %rdx
    00001b0a: 	movq	%r14, %rsi
    00001b0d: 	movq	%r12, %rdi
    00001b10: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6928
    00001b15: 	callq	clock@PLT # Offset: 6933
    00001b1a: 	movl	iterations(%rip), %ecx
    00001b20: 	movl	$0x0, (%rsp)
    00001b27: 	leaq	0x2000(%rsp), %rbx
    00001b2f: 	movq	%rax, start_time(%rip)
    00001b36: 	testl	%ecx, %ecx
    00001b38: 	jle	.Ltmp993 # Offset: 6968
    00001b3a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp996:
    00001b40: 	movq	%rbp, %rax
    00001b43: 	pxor	%xmm0, %xmm0
    00001b47: 	nopw	(%rax,%rax) # Size: 9
.Ltmp994:
    00001b50: 	paddb	(%rax), %xmm0
    00001b54: 	addq	$0x10, %rax
    00001b58: 	cmpq	%rbx, %rax
    00001b5b: 	jne	.Ltmp994 # Offset: 7003
    00001b5d: 	movdqa	%xmm0, %xmm1
    00001b61: 	cvttsd2si	init_value(%rip), %edx
    00001b69: 	psrldq	$0x8, %xmm1
    00001b6e: 	paddb	%xmm1, %xmm0
    00001b72: 	pxor	%xmm1, %xmm1
    00001b76: 	psadbw	%xmm1, %xmm0
    00001b7a: 	movd	%xmm0, %eax
    00001b7e: 	shll	$0x6, %edx
    00001b81: 	cmpb	%al, %dl
    00001b83: 	je	.Ltmp995 # Offset: 7043
    00001b85: 	movl	current_test(%rip), %edx
    00001b8b: 	leaq	DATAat0x231d2(%rip), %rsi
    00001b92: 	movl	$0x1, %edi
    00001b97: 	xorl	%eax, %eax
    00001b99: 	callq	__printf_chk@PLT # Offset: 7065
    00001b9e: 	movl	iterations(%rip), %ecx
.Ltmp995:
    00001ba4: 	addl	$0x1, (%rsp)
    00001ba8: 	movl	(%rsp), %eax
    00001bab: 	cmpl	%ecx, %eax
    00001bad: 	jl	.Ltmp996 # Offset: 7085
.Ltmp993:
    00001baf: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001bb6: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00001bbd: 	subq	$0x20, %rax
    00001bc1: 	cmpq	%rax, %rbx
    00001bc4: 	je	.Ltmp997 # Offset: 7108
    00001bca: 	leaq	0x10(%rbx), %rdi
    00001bce: 	movq	0xa8(%rsp), %rcx
    00001bd6: 	movq	%rdi, (%rbx)
    00001bd9: 	movq	0xa0(%rsp), %rsi
    00001be1: 	movq	%rcx, (%rsp)
    00001be5: 	movq	%rsi, %rax
    00001be8: 	movq	%rsi, 0x10(%rsp)
    00001bed: 	addq	%rcx, %rax
    00001bf0: 	je	.Ltmp998 # Offset: 7152
    00001bf2: 	testq	%rsi, %rsi
    00001bf5: 	je	.Ltmp999 # Offset: 7157
.Ltmp998:
    00001bfb: 	movq	(%rsp), %rax
    00001bff: 	movq	%rax, 0x40(%rsp)
    00001c04: 	cmpq	$0xf, %rax
    00001c08: 	ja	.Ltmp1000 # Offset: 7176
    00001c0e: 	cmpq	$0x1, (%rsp)
    00001c13: 	jne	.Ltmp1001 # Offset: 7187
    00001c19: 	movq	0x10(%rsp), %rax
    00001c1e: 	movzbl	(%rax), %eax
    00001c21: 	movb	%al, 0x10(%rbx)
.Ltmp1118:
    00001c24: 	movq	(%rsp), %rax
    00001c28: 	movq	%rax, 0x8(%rbx)
    00001c2c: 	movb	$0x0, (%rdi,%rax)
    00001c30: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001c37: 	addq	$0x20, %rax
    00001c3b: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1083:
    00001c42: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001c49: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001c50: 	je	.Ltmp1002 # Offset: 7248
.Ltmp1082:
    00001c56: 	movq	-0x20(%rax), %rbx
    00001c5a: 	callq	clock@PLT # Offset: 7258
    00001c5f: 	pxor	%xmm0, %xmm0
    00001c63: 	movq	%rax, end_time(%rip)
    00001c6a: 	movq	%rbx, %rdi
    00001c6d: 	subq	start_time(%rip), %rax
    00001c74: 	cvtsi2sd	%rax, %xmm0
    00001c79: 	divsd	DATAat0x23450(%rip), %xmm0
    00001c81: 	callq	_Z13record_resultdPKc # Offset: 7297
    00001c86: 	movq	0xa0(%rsp), %rdi
    00001c8e: 	cmpq	%r13, %rdi
    00001c91: 	je	.Ltmp1003 # Offset: 7313
    00001c93: 	movq	0xb0(%rsp), %rax
    00001c9b: 	leaq	0x1(%rax), %rsi
    00001c9f: 	callq	_ZdlPvm@PLT # Offset: 7327
.Ltmp1003:
    00001ca4: 	leaq	DATAat0x23406(%rip), %rdx
    00001cab: 	movq	%r14, %rsi
    00001cae: 	movq	%r12, %rdi
    00001cb1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7345
    00001cb6: 	callq	clock@PLT # Offset: 7350
    00001cbb: 	movl	iterations(%rip), %ecx
    00001cc1: 	movq	%rax, start_time(%rip)
    00001cc8: 	testl	%ecx, %ecx
    00001cca: 	jle	.Ltmp1004 # Offset: 7370
    00001cd0: 	movdqa	DATAat0x236b0(%rip), %xmm7
    00001cd8: 	movl	$0x0, 0x10(%rsp)
    00001ce0: 	leaq	0x2000(%rsp), %rbx
    00001ce8: 	movaps	%xmm7, (%rsp)
    00001cec: 	nopl	(%rax) # Size: 4
.Ltmp1007:
    00001cf0: 	movq	%rbp, %rax
    00001cf3: 	pxor	%xmm0, %xmm0
    00001cf7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1005:
    00001d00: 	movdqa	(%rsp), %xmm1
    00001d05: 	pand	(%rax), %xmm1
    00001d09: 	addq	$0x10, %rax
    00001d0d: 	paddb	%xmm1, %xmm0
    00001d11: 	cmpq	%rbx, %rax
    00001d14: 	jne	.Ltmp1005 # Offset: 7444
    00001d16: 	cvttsd2si	init_value(%rip), %edx
    00001d1e: 	movdqa	%xmm0, %xmm1
    00001d22: 	psrldq	$0x8, %xmm1
    00001d27: 	paddb	%xmm1, %xmm0
    00001d2b: 	pxor	%xmm1, %xmm1
    00001d2f: 	psadbw	%xmm1, %xmm0
    00001d33: 	andl	$0xa, %edx
    00001d36: 	movd	%xmm0, %eax
    00001d3a: 	shll	$0x6, %edx
    00001d3d: 	cmpb	%al, %dl
    00001d3f: 	je	.Ltmp1006 # Offset: 7487
    00001d41: 	movl	current_test(%rip), %edx
    00001d47: 	leaq	DATAat0x231d2(%rip), %rsi
    00001d4e: 	movl	$0x1, %edi
    00001d53: 	xorl	%eax, %eax
    00001d55: 	callq	__printf_chk@PLT # Offset: 7509
    00001d5a: 	movl	iterations(%rip), %ecx
.Ltmp1006:
    00001d60: 	addl	$0x1, 0x10(%rsp)
    00001d65: 	movl	0x10(%rsp), %eax
    00001d69: 	cmpl	%ecx, %eax
    00001d6b: 	jl	.Ltmp1007 # Offset: 7531
.Ltmp1004:
    00001d6d: 	movq	%r12, %rsi
    00001d70: 	movq	%r15, %rdi
    00001d73: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7539
    00001d78: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001d7f: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001d86: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001d8d: 	je	.Ltmp1008 # Offset: 7565
.Ltmp1081:
    00001d93: 	movq	-0x20(%rax), %rbx
    00001d97: 	callq	clock@PLT # Offset: 7575
    00001d9c: 	pxor	%xmm0, %xmm0
    00001da0: 	movq	%rax, end_time(%rip)
    00001da7: 	movq	%rbx, %rdi
    00001daa: 	subq	start_time(%rip), %rax
    00001db1: 	cvtsi2sd	%rax, %xmm0
    00001db6: 	divsd	DATAat0x23450(%rip), %xmm0
    00001dbe: 	callq	_Z13record_resultdPKc # Offset: 7614
    00001dc3: 	movq	0xa0(%rsp), %rdi
    00001dcb: 	cmpq	%r13, %rdi
    00001dce: 	je	.Ltmp1009 # Offset: 7630
    00001dd0: 	movq	0xb0(%rsp), %rax
    00001dd8: 	leaq	0x1(%rax), %rsi
    00001ddc: 	callq	_ZdlPvm@PLT # Offset: 7644
.Ltmp1009:
    00001de1: 	leaq	DATAat0x233fd(%rip), %rdx
    00001de8: 	movq	%r14, %rsi
    00001deb: 	movq	%r12, %rdi
    00001dee: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7662
    00001df3: 	callq	clock@PLT # Offset: 7667
    00001df8: 	movl	iterations(%rip), %ecx
    00001dfe: 	movq	%rax, start_time(%rip)
    00001e05: 	testl	%ecx, %ecx
    00001e07: 	jle	.Ltmp1010 # Offset: 7687
    00001e0d: 	movl	$0x0, (%rsp)
    00001e14: 	leaq	0x2000(%rsp), %rbx
    00001e1c: 	nopl	(%rax) # Size: 4
.Ltmp1013:
    00001e20: 	movq	%rbp, %rax
    00001e23: 	pxor	%xmm0, %xmm0
    00001e27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1011:
    00001e30: 	movdqa	DATAat0x23730(%rip), %xmm1
    00001e38: 	pand	(%rax), %xmm1
    00001e3c: 	addq	$0x10, %rax
    00001e40: 	paddb	%xmm1, %xmm0
    00001e44: 	cmpq	%rbx, %rax
    00001e47: 	jne	.Ltmp1011 # Offset: 7751
    00001e49: 	cvttsd2si	init_value(%rip), %edx
    00001e51: 	movdqa	%xmm0, %xmm1
    00001e55: 	psrldq	$0x8, %xmm1
    00001e5a: 	paddb	%xmm1, %xmm0
    00001e5e: 	pxor	%xmm1, %xmm1
    00001e62: 	psadbw	%xmm1, %xmm0
    00001e66: 	andl	$0xe, %edx
    00001e69: 	movd	%xmm0, %eax
    00001e6d: 	shll	$0x6, %edx
    00001e70: 	cmpb	%al, %dl
    00001e72: 	je	.Ltmp1012 # Offset: 7794
    00001e74: 	movl	current_test(%rip), %edx
    00001e7a: 	leaq	DATAat0x231d2(%rip), %rsi
    00001e81: 	movl	$0x1, %edi
    00001e86: 	xorl	%eax, %eax
    00001e88: 	callq	__printf_chk@PLT # Offset: 7816
    00001e8d: 	movl	iterations(%rip), %ecx
.Ltmp1012:
    00001e93: 	addl	$0x1, (%rsp)
    00001e97: 	movl	(%rsp), %eax
    00001e9a: 	cmpl	%ecx, %eax
    00001e9c: 	jl	.Ltmp1013 # Offset: 7836
.Ltmp1010:
    00001e9e: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001ea5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00001eac: 	subq	$0x20, %rax
    00001eb0: 	cmpq	%rax, %rbx
    00001eb3: 	je	.Ltmp1014 # Offset: 7859
    00001eb9: 	leaq	0x10(%rbx), %rdi
    00001ebd: 	movq	0xa8(%rsp), %rsi
    00001ec5: 	movq	%rdi, (%rbx)
    00001ec8: 	movq	0xa0(%rsp), %rcx
    00001ed0: 	movq	%rsi, (%rsp)
    00001ed4: 	movq	%rcx, %rax
    00001ed7: 	movq	%rcx, 0x10(%rsp)
    00001edc: 	addq	%rsi, %rax
    00001edf: 	je	.Ltmp1015 # Offset: 7903
    00001ee1: 	testq	%rcx, %rcx
    00001ee4: 	je	.Ltmp1016 # Offset: 7908
.Ltmp1015:
    00001eea: 	movq	(%rsp), %rax
    00001eee: 	movq	%rax, 0x40(%rsp)
    00001ef3: 	cmpq	$0xf, %rax
    00001ef7: 	ja	.Ltmp1017 # Offset: 7927
    00001efd: 	cmpq	$0x1, (%rsp)
    00001f02: 	jne	.Ltmp1018 # Offset: 7938
    00001f08: 	movq	0x10(%rsp), %rax
    00001f0d: 	movzbl	(%rax), %eax
    00001f10: 	movb	%al, 0x10(%rbx)
.Ltmp1114:
    00001f13: 	movq	(%rsp), %rax
    00001f17: 	movq	%rax, 0x8(%rbx)
    00001f1b: 	movb	$0x0, (%rdi,%rax)
    00001f1f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001f26: 	addq	$0x20, %rax
    00001f2a: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1080:
    00001f31: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001f38: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001f3f: 	je	.Ltmp1019 # Offset: 7999
.Ltmp1068:
    00001f45: 	movq	-0x20(%rax), %rbx
    00001f49: 	callq	clock@PLT # Offset: 8009
    00001f4e: 	pxor	%xmm0, %xmm0
    00001f52: 	movq	%rax, end_time(%rip)
    00001f59: 	movq	%rbx, %rdi
    00001f5c: 	subq	start_time(%rip), %rax
    00001f63: 	cvtsi2sd	%rax, %xmm0
    00001f68: 	divsd	DATAat0x23450(%rip), %xmm0
    00001f70: 	callq	_Z13record_resultdPKc # Offset: 8048
    00001f75: 	movq	0xa0(%rsp), %rdi
    00001f7d: 	cmpq	%r13, %rdi
    00001f80: 	je	.Ltmp1020 # Offset: 8064
    00001f82: 	movq	0xb0(%rsp), %rax
    00001f8a: 	leaq	0x1(%rax), %rsi
    00001f8e: 	callq	_ZdlPvm@PLT # Offset: 8078
.Ltmp1020:
    00001f93: 	leaq	DATAat0x2341d(%rip), %rdx
    00001f9a: 	movq	%r14, %rsi
    00001f9d: 	movq	%r12, %rdi
    00001fa0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8096
    00001fa5: 	callq	clock@PLT # Offset: 8101
    00001faa: 	movl	iterations(%rip), %ecx
    00001fb0: 	movq	%rax, start_time(%rip)
    00001fb7: 	testl	%ecx, %ecx
    00001fb9: 	jle	.Ltmp1021 # Offset: 8121
    00001fbf: 	movdqa	DATAat0x236b0(%rip), %xmm5
    00001fc7: 	movl	$0x0, 0x10(%rsp)
    00001fcf: 	leaq	0x2000(%rsp), %rbx
    00001fd7: 	movaps	%xmm5, (%rsp)
    00001fdb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1024:
    00001fe0: 	movq	%rbp, %rax
    00001fe3: 	pxor	%xmm0, %xmm0
    00001fe7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1022:
    00001ff0: 	movdqa	(%rsp), %xmm1
    00001ff5: 	por	(%rax), %xmm1
    00001ff9: 	addq	$0x10, %rax
    00001ffd: 	paddb	%xmm1, %xmm0
    00002001: 	cmpq	%rax, %rbx
    00002004: 	jne	.Ltmp1022 # Offset: 8196
    00002006: 	cvttsd2si	init_value(%rip), %edx
    0000200e: 	movdqa	%xmm0, %xmm1
    00002012: 	psrldq	$0x8, %xmm1
    00002017: 	paddb	%xmm1, %xmm0
    0000201b: 	pxor	%xmm1, %xmm1
    0000201f: 	psadbw	%xmm1, %xmm0
    00002023: 	orl	$0xa, %edx
    00002026: 	movd	%xmm0, %eax
    0000202a: 	shll	$0x6, %edx
    0000202d: 	cmpb	%al, %dl
    0000202f: 	je	.Ltmp1023 # Offset: 8239
    00002031: 	movl	current_test(%rip), %edx
    00002037: 	leaq	DATAat0x231d2(%rip), %rsi
    0000203e: 	movl	$0x1, %edi
    00002043: 	xorl	%eax, %eax
    00002045: 	callq	__printf_chk@PLT # Offset: 8261
    0000204a: 	movl	iterations(%rip), %ecx
.Ltmp1023:
    00002050: 	addl	$0x1, 0x10(%rsp)
    00002055: 	movl	0x10(%rsp), %eax
    00002059: 	cmpl	%ecx, %eax
    0000205b: 	jl	.Ltmp1024 # Offset: 8283
.Ltmp1021:
    0000205d: 	movq	%r12, %rsi
    00002060: 	movq	%r15, %rdi
    00002063: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8291
    00002068: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000206f: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00002076: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000207d: 	je	.Ltmp1025 # Offset: 8317
.Ltmp1067:
    00002083: 	movq	-0x20(%rax), %rbx
    00002087: 	callq	clock@PLT # Offset: 8327
    0000208c: 	pxor	%xmm0, %xmm0
    00002090: 	movq	%rax, end_time(%rip)
    00002097: 	movq	%rbx, %rdi
    0000209a: 	subq	start_time(%rip), %rax
    000020a1: 	cvtsi2sd	%rax, %xmm0
    000020a6: 	divsd	DATAat0x23450(%rip), %xmm0
    000020ae: 	callq	_Z13record_resultdPKc # Offset: 8366
    000020b3: 	movq	0xa0(%rsp), %rdi
    000020bb: 	cmpq	%r13, %rdi
    000020be: 	je	.Ltmp1026 # Offset: 8382
    000020c0: 	movq	0xb0(%rsp), %rax
    000020c8: 	leaq	0x1(%rax), %rsi
    000020cc: 	callq	_ZdlPvm@PLT # Offset: 8396
.Ltmp1026:
    000020d1: 	leaq	DATAat0x23414(%rip), %rdx
    000020d8: 	movq	%r14, %rsi
    000020db: 	movq	%r12, %rdi
    000020de: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8414
    000020e3: 	callq	clock@PLT # Offset: 8419
    000020e8: 	movl	iterations(%rip), %edx
    000020ee: 	movq	%rax, start_time(%rip)
    000020f5: 	testl	%edx, %edx
    000020f7: 	jle	.Ltmp1027 # Offset: 8439
    000020fd: 	movdqa	DATAat0x236f0(%rip), %xmm6
    00002105: 	movl	$0x0, 0x10(%rsp)
    0000210d: 	leaq	0x2000(%rsp), %rbx
    00002115: 	movaps	%xmm6, (%rsp)
    00002119: 	nopl	(%rax) # Size: 7
.Ltmp1030:
    00002120: 	movq	%rbp, %rax
    00002123: 	pxor	%xmm0, %xmm0
    00002127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1028:
    00002130: 	movdqa	(%rsp), %xmm1
    00002135: 	por	(%rax), %xmm1
    00002139: 	addq	$0x10, %rax
    0000213d: 	paddb	%xmm1, %xmm0
    00002141: 	cmpq	%rbx, %rax
    00002144: 	jne	.Ltmp1028 # Offset: 8516
    00002146: 	movdqa	%xmm0, %xmm1
    0000214a: 	psrldq	$0x8, %xmm1
    0000214f: 	paddb	%xmm1, %xmm0
    00002153: 	pxor	%xmm1, %xmm1
    00002157: 	psadbw	%xmm1, %xmm0
    0000215b: 	movd	%xmm0, %eax
    0000215f: 	cmpb	$-0x40, %al
    00002161: 	je	.Ltmp1029 # Offset: 8545
    00002163: 	movl	current_test(%rip), %edx
    00002169: 	leaq	DATAat0x231d2(%rip), %rsi
    00002170: 	movl	$0x1, %edi
    00002175: 	xorl	%eax, %eax
    00002177: 	callq	__printf_chk@PLT # Offset: 8567
    0000217c: 	movl	iterations(%rip), %edx
.Ltmp1029:
    00002182: 	addl	$0x1, 0x10(%rsp)
    00002187: 	movl	0x10(%rsp), %eax
    0000218b: 	cmpl	%edx, %eax
    0000218d: 	jl	.Ltmp1030 # Offset: 8589
.Ltmp1027:
    0000218f: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00002196: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    0000219d: 	subq	$0x20, %rax
    000021a1: 	cmpq	%rax, %rbx
    000021a4: 	je	.Ltmp1031 # Offset: 8612
    000021aa: 	leaq	0x10(%rbx), %rdi
    000021ae: 	movq	0xa8(%rsp), %rcx
    000021b6: 	movq	%rdi, (%rbx)
    000021b9: 	movq	0xa0(%rsp), %rsi
    000021c1: 	movq	%rcx, (%rsp)
    000021c5: 	movq	%rsi, %rax
    000021c8: 	movq	%rsi, 0x10(%rsp)
    000021cd: 	addq	%rcx, %rax
    000021d0: 	je	.Ltmp1032 # Offset: 8656
    000021d2: 	testq	%rsi, %rsi
    000021d5: 	je	.Ltmp1033 # Offset: 8661
.Ltmp1032:
    000021db: 	movq	(%rsp), %rax
    000021df: 	movq	%rax, 0x40(%rsp)
    000021e4: 	cmpq	$0xf, %rax
    000021e8: 	ja	.Ltmp1034 # Offset: 8680
    000021ee: 	cmpq	$0x1, (%rsp)
    000021f3: 	jne	.Ltmp1035 # Offset: 8691
    000021f9: 	movq	0x10(%rsp), %rax
    000021fe: 	movzbl	(%rax), %eax
    00002201: 	movb	%al, 0x10(%rbx)
.Ltmp1108:
    00002204: 	movq	(%rsp), %rax
    00002208: 	movq	%rax, 0x8(%rbx)
    0000220c: 	movb	$0x0, (%rdi,%rax)
    00002210: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002217: 	addq	$0x20, %rax
    0000221b: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1066:
    00002222: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002229: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002230: 	je	.Ltmp1036 # Offset: 8752
.Ltmp1065:
    00002236: 	movq	-0x20(%rax), %rbx
    0000223a: 	callq	clock@PLT # Offset: 8762
    0000223f: 	pxor	%xmm0, %xmm0
    00002243: 	movq	%rax, end_time(%rip)
    0000224a: 	movq	%rbx, %rdi
    0000224d: 	subq	start_time(%rip), %rax
    00002254: 	cvtsi2sd	%rax, %xmm0
    00002259: 	divsd	DATAat0x23450(%rip), %xmm0
    00002261: 	callq	_Z13record_resultdPKc # Offset: 8801
    00002266: 	movq	0xa0(%rsp), %rdi
    0000226e: 	cmpq	%r13, %rdi
    00002271: 	je	.Ltmp1037 # Offset: 8817
    00002273: 	movq	0xb0(%rsp), %rax
    0000227b: 	leaq	0x1(%rax), %rsi
    0000227f: 	callq	_ZdlPvm@PLT # Offset: 8831
.Ltmp1037:
    00002284: 	leaq	DATAat0x23433(%rip), %rdx
    0000228b: 	movq	%r14, %rsi
    0000228e: 	movq	%r12, %rdi
    00002291: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8849
    00002296: 	callq	clock@PLT # Offset: 8854
    0000229b: 	movl	iterations(%rip), %ecx
    000022a1: 	movq	%rax, start_time(%rip)
    000022a8: 	testl	%ecx, %ecx
    000022aa: 	jle	.Ltmp1038 # Offset: 8874
    000022b0: 	movdqa	DATAat0x236b0(%rip), %xmm7
    000022b8: 	movl	$0x0, 0x10(%rsp)
    000022c0: 	leaq	0x2000(%rsp), %rbx
    000022c8: 	movaps	%xmm7, (%rsp)
    000022cc: 	nopl	(%rax) # Size: 4
.Ltmp1041:
    000022d0: 	movq	%rbp, %rax
    000022d3: 	pxor	%xmm0, %xmm0
    000022d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1039:
    000022e0: 	movdqa	(%rsp), %xmm1
    000022e5: 	pxor	(%rax), %xmm1
    000022e9: 	addq	$0x10, %rax
    000022ed: 	paddb	%xmm1, %xmm0
    000022f1: 	cmpq	%rbx, %rax
    000022f4: 	jne	.Ltmp1039 # Offset: 8948
    000022f6: 	cvttsd2si	init_value(%rip), %edx
    000022fe: 	movdqa	%xmm0, %xmm1
    00002302: 	psrldq	$0x8, %xmm1
    00002307: 	paddb	%xmm1, %xmm0
    0000230b: 	pxor	%xmm1, %xmm1
    0000230f: 	psadbw	%xmm1, %xmm0
    00002313: 	xorl	$0xa, %edx
    00002316: 	movd	%xmm0, %eax
    0000231a: 	shll	$0x6, %edx
    0000231d: 	cmpb	%dl, %al
    0000231f: 	je	.Ltmp1040 # Offset: 8991
    00002321: 	movl	current_test(%rip), %edx
    00002327: 	leaq	DATAat0x231d2(%rip), %rsi
    0000232e: 	movl	$0x1, %edi
    00002333: 	xorl	%eax, %eax
    00002335: 	callq	__printf_chk@PLT # Offset: 9013
    0000233a: 	movl	iterations(%rip), %ecx
.Ltmp1040:
    00002340: 	addl	$0x1, 0x10(%rsp)
    00002345: 	movl	0x10(%rsp), %eax
    00002349: 	cmpl	%ecx, %eax
    0000234b: 	jl	.Ltmp1041 # Offset: 9035
.Ltmp1038:
    0000234d: 	movq	%r12, %rsi
    00002350: 	movq	%r15, %rdi
    00002353: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9043
    00002358: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000235f: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00002366: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000236d: 	je	.Ltmp1042 # Offset: 9069
.Ltmp1090:
    00002373: 	movq	-0x20(%rax), %rbx
    00002377: 	callq	clock@PLT # Offset: 9079
    0000237c: 	pxor	%xmm0, %xmm0
    00002380: 	movq	%rax, end_time(%rip)
    00002387: 	movq	%rbx, %rdi
    0000238a: 	subq	start_time(%rip), %rax
    00002391: 	cvtsi2sd	%rax, %xmm0
    00002396: 	divsd	DATAat0x23450(%rip), %xmm0
    0000239e: 	callq	_Z13record_resultdPKc # Offset: 9118
    000023a3: 	movq	0xa0(%rsp), %rdi
    000023ab: 	cmpq	%r13, %rdi
    000023ae: 	je	.Ltmp1043 # Offset: 9134
    000023b0: 	movq	0xb0(%rsp), %rax
    000023b8: 	leaq	0x1(%rax), %rsi
    000023bc: 	callq	_ZdlPvm@PLT # Offset: 9148
.Ltmp1043:
    000023c1: 	leaq	DATAat0x2342a(%rip), %rdx
    000023c8: 	movq	%r14, %rsi
    000023cb: 	movq	%r12, %rdi
    000023ce: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9166
    000023d3: 	callq	clock@PLT # Offset: 9171
    000023d8: 	movl	iterations(%rip), %ecx
    000023de: 	movq	%rax, start_time(%rip)
    000023e5: 	testl	%ecx, %ecx
    000023e7: 	jle	.Ltmp1044 # Offset: 9191
    000023ed: 	movl	$0x0, (%rsp)
    000023f4: 	leaq	0x2000(%rsp), %rbx
    000023fc: 	nopl	(%rax) # Size: 4
.Ltmp1047:
    00002400: 	movq	%rbp, %rax
    00002403: 	pxor	%xmm0, %xmm0
    00002407: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1045:
    00002410: 	movdqa	DATAat0x23740(%rip), %xmm1
    00002418: 	pxor	(%rax), %xmm1
    0000241c: 	addq	$0x10, %rax
    00002420: 	paddb	%xmm1, %xmm0
    00002424: 	cmpq	%rbx, %rax
    00002427: 	jne	.Ltmp1045 # Offset: 9255
    00002429: 	cvttsd2si	init_value(%rip), %edx
    00002431: 	movdqa	%xmm0, %xmm1
    00002435: 	psrldq	$0x8, %xmm1
    0000243a: 	paddb	%xmm1, %xmm0
    0000243e: 	pxor	%xmm1, %xmm1
    00002442: 	psadbw	%xmm1, %xmm0
    00002446: 	xorl	$0x31, %edx
    00002449: 	movd	%xmm0, %eax
    0000244d: 	shll	$0x6, %edx
    00002450: 	cmpb	%al, %dl
    00002452: 	je	.Ltmp1046 # Offset: 9298
    00002454: 	movl	current_test(%rip), %edx
    0000245a: 	leaq	DATAat0x231d2(%rip), %rsi
    00002461: 	movl	$0x1, %edi
    00002466: 	xorl	%eax, %eax
    00002468: 	callq	__printf_chk@PLT # Offset: 9320
    0000246d: 	movl	iterations(%rip), %ecx
.Ltmp1046:
    00002473: 	addl	$0x1, (%rsp)
    00002477: 	movl	(%rsp), %eax
    0000247a: 	cmpl	%ecx, %eax
    0000247c: 	jl	.Ltmp1047 # Offset: 9340
.Ltmp1044:
    0000247e: 	movq	%r12, %rsi
    00002481: 	movq	%r15, %rdi
    00002484: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9348
    00002489: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002490: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00002497: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000249e: 	je	.Ltmp1048 # Offset: 9374
.Ltmp1089:
    000024a4: 	movq	-0x20(%rax), %rbp
    000024a8: 	callq	clock@PLT # Offset: 9384
    000024ad: 	pxor	%xmm0, %xmm0
    000024b1: 	movq	%rax, end_time(%rip)
    000024b8: 	movq	%rbp, %rdi
    000024bb: 	subq	start_time(%rip), %rax
    000024c2: 	cvtsi2sd	%rax, %xmm0
    000024c7: 	divsd	DATAat0x23450(%rip), %xmm0
    000024cf: 	callq	_Z13record_resultdPKc # Offset: 9423
    000024d4: 	movq	0xa0(%rsp), %rdi
    000024dc: 	cmpq	%r13, %rdi
    000024df: 	je	.Ltmp1049 # Offset: 9439
    000024e1: 	movq	0xb0(%rsp), %rax
    000024e9: 	leaq	0x1(%rax), %rsi
    000024ed: 	callq	_ZdlPvm@PLT # Offset: 9453
.Ltmp1049:
    000024f2: 	leaq	DATAat0x232ac(%rip), %rdx
    000024f9: 	movq	%r14, %rsi
    000024fc: 	movq	%r12, %rdi
    000024ff: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9471
    00002504: 	movl	iterations(%rip), %edx
    0000250a: 	xorl	%r8d, %r8d
    0000250d: 	xorl	%ecx, %ecx
    0000250f: 	movl	$0x1f40, %esi
    00002514: 	movq	0xa0(%rsp), %rdi
    0000251c: 	callq	_Z9summarizePKciiii # Offset: 9500
    00002521: 	movl	base_iterations(%rip), %eax
    00002527: 	movq	0xa0(%rsp), %rdi
    0000252f: 	movl	%eax, iterations(%rip)
    00002535: 	cmpq	%r13, %rdi
    00002538: 	je	.Ltmp1050 # Offset: 9528
    0000253a: 	movq	0xb0(%rsp), %rax
    00002542: 	leaq	0x1(%rax), %rsi
    00002546: 	callq	_ZdlPvm@PLT # Offset: 9542
.Ltmp1050:
    0000254b: 	movq	0x80(%rsp), %rdi
    00002553: 	leaq	0x90(%rsp), %rax
    0000255b: 	cmpq	%rax, %rdi
    0000255e: 	je	.Ltmp1051 # Offset: 9566
    00002560: 	movq	0x90(%rsp), %rax
    00002568: 	leaq	0x1(%rax), %rsi
    0000256c: 	callq	_ZdlPvm@PLT # Offset: 9580
.Ltmp1051:
    00002571: 	movq	0x60(%rsp), %rdi
    00002576: 	cmpq	0x38(%rsp), %rdi
    0000257b: 	je	.Ltmp1052 # Offset: 9595
    0000257d: 	movq	0x70(%rsp), %rax
    00002582: 	leaq	0x1(%rax), %rsi
    00002586: 	callq	_ZdlPvm@PLT # Offset: 9606
.Ltmp1052:
    0000258b: 	movq	0x2008(%rsp), %rax
    00002593: 	subq	%fs:0x28, %rax
    0000259c: 	jne	.Ltmp1053 # Offset: 9628
    000025a2: 	addq	$0x2018, %rsp
    000025a9: 	popq	%rbx
    000025aa: 	popq	%rbp
    000025ab: 	popq	%r12
    000025ad: 	popq	%r13
    000025af: 	popq	%r14
    000025b1: 	popq	%r15
    000025b3: 	retq # Offset: 9651
.Ltmp865:
    000025b4: 	movq	0x30(%rsp), %rsi
    000025b9: 	xorl	%edx, %edx
    000025bb: 	movq	%rbx, %rdi
    000025be: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9662
    000025c3: 	movq	%rax, (%rbx)
    000025c6: 	movq	%rax, %rdi
    000025c9: 	movq	0x40(%rsp), %rax
    000025ce: 	movq	%rax, 0x10(%rbx)
.Ltmp1099:
    000025d2: 	movq	(%rsp), %rdx
    000025d6: 	movq	0x10(%rsp), %rsi
    000025db: 	callq	memcpy@PLT # Offset: 9691
    000025e0: 	movq	0x40(%rsp), %rax
    000025e5: 	movq	(%rbx), %rdi
    000025e8: 	movq	%rax, (%rsp)
    000025ec: 	jmp	.Ltmp1054 # Offset: 9708
    000025f1: 	nopl	(%rax) # Size: 7
.Ltmp945:
    000025f8: 	movl	current_test(%rip), %edx
    000025fe: 	leaq	DATAat0x231d2(%rip), %rsi
    00002605: 	movl	$0x1, %edi
    0000260a: 	xorl	%eax, %eax
    0000260c: 	callq	__printf_chk@PLT # Offset: 9740
    00002611: 	movl	iterations(%rip), %edx
    00002617: 	jmp	.Ltmp1055 # Offset: 9751
    0000261c: 	nopl	(%rax) # Size: 4
.Ltmp934:
    00002620: 	movl	current_test(%rip), %edx
    00002626: 	leaq	DATAat0x231d2(%rip), %rsi
    0000262d: 	movl	$0x1, %edi
    00002632: 	xorl	%eax, %eax
    00002634: 	callq	__printf_chk@PLT # Offset: 9780
    00002639: 	movl	iterations(%rip), %edx
    0000263f: 	jmp	.Ltmp1056 # Offset: 9791
.Ltmp958:
    00002644: 	movq	%r12, %rsi
    00002647: 	movq	%r15, %rdi
    0000264a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9802
    0000264f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002656: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000265d: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002664: 	jne	.Ltmp1057 # Offset: 9828
.Ltmp963:
    0000266a: 	movq	-0x8(%rdx), %rax
    0000266e: 	addq	$0x200, %rax
    00002674: 	jmp	.Ltmp1057 # Offset: 9844
.Ltmp952:
    00002679: 	movq	-0x8(%rdx), %rax
    0000267d: 	addq	$0x200, %rax
    00002683: 	jmp	.Ltmp1058 # Offset: 9859
.Ltmp947:
    00002688: 	movq	%r12, %rsi
    0000268b: 	movq	%r15, %rdi
    0000268e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9870
    00002693: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000269a: 	jmp	.Ltmp1059 # Offset: 9882
.Ltmp930:
    0000269f: 	movq	-0x8(%rdx), %rax
    000026a3: 	addq	$0x200, %rax
    000026a9: 	jmp	.Ltmp1060 # Offset: 9897
.Ltmp924:
    000026ae: 	movq	-0x8(%rdx), %rax
    000026b2: 	addq	$0x200, %rax
    000026b8: 	jmp	.Ltmp1061 # Offset: 9912
.Ltmp918:
    000026bd: 	movq	-0x8(%rdx), %rax
    000026c1: 	addq	$0x200, %rax
    000026c7: 	jmp	.Ltmp1062 # Offset: 9927
.Ltmp941:
    000026cc: 	movq	-0x8(%rdx), %rax
    000026d0: 	addq	$0x200, %rax
    000026d6: 	jmp	.Ltmp1063 # Offset: 9942
.Ltmp936:
    000026db: 	movq	%r12, %rsi
    000026de: 	movq	%r15, %rdi
    000026e1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9953
    000026e6: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000026ed: 	jmp	.Ltmp1064 # Offset: 9965
.Ltmp1036:
    000026f2: 	movq	-0x8(%rdx), %rax
    000026f6: 	addq	$0x200, %rax
    000026fc: 	jmp	.Ltmp1065 # Offset: 9980
.Ltmp1031:
    00002701: 	movq	%r12, %rsi
    00002704: 	movq	%r15, %rdi
    00002707: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9991
    0000270c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002713: 	jmp	.Ltmp1066 # Offset: 10003
.Ltmp1025:
    00002718: 	movq	-0x8(%rdx), %rax
    0000271c: 	addq	$0x200, %rax
    00002722: 	jmp	.Ltmp1067 # Offset: 10018
.Ltmp1019:
    00002727: 	movq	-0x8(%rdx), %rax
    0000272b: 	addq	$0x200, %rax
    00002731: 	jmp	.Ltmp1068 # Offset: 10033
.Ltmp912:
    00002736: 	movq	-0x8(%rdx), %rax
    0000273a: 	addq	$0x200, %rax
    00002740: 	jmp	.Ltmp1069 # Offset: 10048
.Ltmp906:
    00002745: 	movq	-0x8(%rdx), %rax
    00002749: 	addq	$0x200, %rax
    0000274f: 	jmp	.Ltmp1070 # Offset: 10063
.Ltmp904:
    00002754: 	movq	-0x8(%rdx), %rax
    00002758: 	addq	$0x200, %rax
    0000275e: 	jmp	.Ltmp1071 # Offset: 10078
.Ltmp902:
    00002763: 	movq	-0x8(%rdx), %rax
    00002767: 	addq	$0x200, %rax
    0000276d: 	jmp	.Ltmp1072 # Offset: 10093
.Ltmp900:
    00002772: 	movq	-0x8(%rdx), %rax
    00002776: 	addq	$0x200, %rax
    0000277c: 	jmp	.Ltmp1073 # Offset: 10108
.Ltmp895:
    00002781: 	movq	%r12, %rsi
    00002784: 	movq	%r15, %rdi
    00002787: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10119
    0000278c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002793: 	jmp	.Ltmp1074 # Offset: 10131
.Ltmp893:
    00002798: 	movq	-0x8(%rdx), %rax
    0000279c: 	addq	$0x200, %rax
    000027a2: 	jmp	.Ltmp1075 # Offset: 10146
.Ltmp891:
    000027a7: 	movq	-0x8(%rdx), %rax
    000027ab: 	addq	$0x200, %rax
    000027b1: 	jmp	.Ltmp1076 # Offset: 10161
.Ltmp889:
    000027b6: 	movq	-0x8(%rdx), %rax
    000027ba: 	addq	$0x200, %rax
    000027c0: 	jmp	.Ltmp1077 # Offset: 10176
.Ltmp884:
    000027c5: 	movq	%r12, %rsi
    000027c8: 	movq	%r15, %rdi
    000027cb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10187
    000027d0: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000027d7: 	jmp	.Ltmp1078 # Offset: 10199
.Ltmp882:
    000027dc: 	movq	-0x8(%rdx), %rax
    000027e0: 	addq	$0x200, %rax
    000027e6: 	jmp	.Ltmp1079 # Offset: 10214
.Ltmp1014:
    000027eb: 	movq	%r12, %rsi
    000027ee: 	movq	%r15, %rdi
    000027f1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10225
    000027f6: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000027fd: 	jmp	.Ltmp1080 # Offset: 10237
.Ltmp1008:
    00002802: 	movq	-0x8(%rdx), %rax
    00002806: 	addq	$0x200, %rax
    0000280c: 	jmp	.Ltmp1081 # Offset: 10252
.Ltmp1002:
    00002811: 	movq	-0x8(%rdx), %rax
    00002815: 	addq	$0x200, %rax
    0000281b: 	jmp	.Ltmp1082 # Offset: 10267
.Ltmp997:
    00002820: 	movq	%r12, %rsi
    00002823: 	movq	%r15, %rdi
    00002826: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10278
    0000282b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002832: 	jmp	.Ltmp1083 # Offset: 10290
.Ltmp991:
    00002837: 	movq	-0x8(%rdx), %rax
    0000283b: 	addq	$0x200, %rax
    00002841: 	jmp	.Ltmp1084 # Offset: 10305
.Ltmp986:
    00002846: 	movq	%r12, %rsi
    00002849: 	movq	%r15, %rdi
    0000284c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10316
    00002851: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002858: 	jmp	.Ltmp1085 # Offset: 10328
.Ltmp980:
    0000285d: 	movq	-0x8(%rdx), %rax
    00002861: 	addq	$0x200, %rax
    00002867: 	jmp	.Ltmp1086 # Offset: 10343
.Ltmp974:
    0000286c: 	movq	-0x8(%rdx), %rax
    00002870: 	addq	$0x200, %rax
    00002876: 	jmp	.Ltmp1087 # Offset: 10358
.Ltmp969:
    0000287b: 	movq	%r12, %rsi
    0000287e: 	movq	%r15, %rdi
    00002881: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10369
    00002886: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000288d: 	jmp	.Ltmp1088 # Offset: 10381
.Ltmp1048:
    00002892: 	movq	-0x8(%rdx), %rax
    00002896: 	addq	$0x200, %rax
    0000289c: 	jmp	.Ltmp1089 # Offset: 10396
.Ltmp1042:
    000028a1: 	movq	-0x8(%rdx), %rax
    000028a5: 	addq	$0x200, %rax
    000028ab: 	jmp	.Ltmp1090 # Offset: 10411
.Ltmp862:
    000028b0: 	movq	%r12, %rsi
    000028b3: 	movq	%r15, %rdi
    000028b6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10422
    000028bb: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000028c2: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000028c9: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000028d0: 	jne	.Ltmp1091 # Offset: 10448
.Ltmp867:
    000028d6: 	movq	-0x8(%rdx), %rax
    000028da: 	addq	$0x200, %rax
    000028e0: 	jmp	.Ltmp1091 # Offset: 10464
.Ltmp860:
    000028e5: 	movq	-0x8(%rdx), %rax
    000028e9: 	addq	$0x200, %rax
    000028ef: 	jmp	.Ltmp1092 # Offset: 10479
.Ltmp858:
    000028f4: 	movq	-0x8(%rdx), %rax
    000028f8: 	addq	$0x200, %rax
    000028fe: 	jmp	.Ltmp1093 # Offset: 10494
.Ltmp877:
    00002903: 	movq	%r12, %rsi
    00002906: 	movq	%r15, %rdi
    00002909: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10505
    0000290e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002915: 	jmp	.Ltmp1094 # Offset: 10517
.Ltmp875:
    0000291a: 	movq	-0x8(%rdx), %rax
    0000291e: 	addq	$0x200, %rax
    00002924: 	jmp	.Ltmp1095 # Offset: 10532
.Ltmp873:
    00002929: 	movq	-0x8(%rdx), %rax
    0000292d: 	addq	$0x200, %rax
    00002933: 	jmp	.Ltmp1096 # Offset: 10547
.Ltmp871:
    00002938: 	movq	-0x8(%rdx), %rax
    0000293c: 	addq	$0x200, %rax
    00002942: 	jmp	.Ltmp1097 # Offset: 10562
.Ltmp869:
    00002947: 	movq	-0x8(%rdx), %rax
    0000294b: 	addq	$0x200, %rax
    00002951: 	jmp	.Ltmp1098 # Offset: 10577
.Ltmp866:
    00002956: 	cmpq	$0x0, (%rsp)
    0000295b: 	je	.Ltmp1054 # Offset: 10587
    00002961: 	jmp	.Ltmp1099 # Offset: 10593
    00002966: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp990:
    00002970: 	cmpq	$0x0, (%rsp)
    00002975: 	je	.Ltmp1100 # Offset: 10613
    0000297b: 	jmp	.Ltmp1101 # Offset: 10619
.Ltmp973:
    00002980: 	cmpq	$0x0, (%rsp)
    00002985: 	je	.Ltmp1102 # Offset: 10629
    0000298b: 	jmp	.Ltmp1103 # Offset: 10635
.Ltmp951:
    00002990: 	cmpq	$0x0, (%rsp)
    00002995: 	je	.Ltmp1104 # Offset: 10645
    0000299b: 	jmp	.Ltmp1105 # Offset: 10651
.Ltmp899:
    000029a0: 	cmpq	$0x0, (%rsp)
    000029a5: 	je	.Ltmp1106 # Offset: 10661
    000029ab: 	jmp	.Ltmp1107 # Offset: 10667
.Ltmp1035:
    000029b0: 	cmpq	$0x0, (%rsp)
    000029b5: 	je	.Ltmp1108 # Offset: 10677
    000029bb: 	jmp	.Ltmp1109 # Offset: 10683
.Ltmp881:
    000029c0: 	cmpq	$0x0, (%rsp)
    000029c5: 	je	.Ltmp1110 # Offset: 10693
    000029cb: 	jmp	.Ltmp1111 # Offset: 10699
.Ltmp962:
    000029d0: 	cmpq	$0x0, (%rsp)
    000029d5: 	je	.Ltmp1112 # Offset: 10709
    000029db: 	jmp	.Ltmp1113 # Offset: 10715
.Ltmp1018:
    000029e0: 	cmpq	$0x0, (%rsp)
    000029e5: 	je	.Ltmp1114 # Offset: 10725
.Ltmp1121:
    000029eb: 	movq	(%rsp), %rdx
    000029ef: 	movq	0x10(%rsp), %rsi
    000029f4: 	callq	memcpy@PLT # Offset: 10740
    000029f9: 	movq	0x40(%rsp), %rax
    000029fe: 	movq	(%rbx), %rdi
    00002a01: 	movq	%rax, (%rsp)
    00002a05: 	jmp	.Ltmp1114 # Offset: 10757
.Ltmp940:
    00002a0a: 	cmpq	$0x0, (%rsp)
    00002a0f: 	je	.Ltmp1115 # Offset: 10767
    00002a15: 	jmp	.Ltmp1116 # Offset: 10773
    00002a1a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp888:
    00002a20: 	cmpq	$0x0, (%rsp)
    00002a25: 	je	.Ltmp1117 # Offset: 10789
.Ltmp1120:
    00002a2b: 	movq	(%rsp), %rdx
    00002a2f: 	movq	0x10(%rsp), %rsi
    00002a34: 	callq	memcpy@PLT # Offset: 10804
    00002a39: 	movq	0x40(%rsp), %rax
    00002a3e: 	movq	(%rbx), %rdi
    00002a41: 	movq	%rax, (%rsp)
    00002a45: 	jmp	.Ltmp1117 # Offset: 10821
.Ltmp1001:
    00002a4a: 	cmpq	$0x0, (%rsp)
    00002a4f: 	je	.Ltmp1118 # Offset: 10831
    00002a55: 	jmp	.Ltmp1119 # Offset: 10837
    00002a5a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp989:
    00002a60: 	movq	0x30(%rsp), %rsi
    00002a65: 	xorl	%edx, %edx
    00002a67: 	movq	%rbx, %rdi
    00002a6a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10858
    00002a6f: 	movq	%rax, (%rbx)
    00002a72: 	movq	%rax, %rdi
    00002a75: 	movq	0x40(%rsp), %rax
    00002a7a: 	movq	%rax, 0x10(%rbx)
.Ltmp1101:
    00002a7e: 	movq	(%rsp), %rdx
    00002a82: 	movq	0x10(%rsp), %rsi
    00002a87: 	callq	memcpy@PLT # Offset: 10887
    00002a8c: 	movq	0x40(%rsp), %rax
    00002a91: 	movq	(%rbx), %rdi
    00002a94: 	movq	%rax, (%rsp)
    00002a98: 	jmp	.Ltmp1100 # Offset: 10904
.Ltmp880:
    00002a9d: 	movq	0x30(%rsp), %rsi
    00002aa2: 	xorl	%edx, %edx
    00002aa4: 	movq	%rbx, %rdi
    00002aa7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10919
    00002aac: 	movq	%rax, (%rbx)
    00002aaf: 	movq	%rax, %rdi
    00002ab2: 	movq	0x40(%rsp), %rax
    00002ab7: 	movq	%rax, 0x10(%rbx)
.Ltmp1111:
    00002abb: 	movq	(%rsp), %rdx
    00002abf: 	movq	0x10(%rsp), %rsi
    00002ac4: 	callq	memcpy@PLT # Offset: 10948
    00002ac9: 	movq	0x40(%rsp), %rax
    00002ace: 	movq	(%rbx), %rdi
    00002ad1: 	movq	%rax, (%rsp)
    00002ad5: 	jmp	.Ltmp1110 # Offset: 10965
.Ltmp972:
    00002ada: 	movq	0x30(%rsp), %rsi
    00002adf: 	xorl	%edx, %edx
    00002ae1: 	movq	%rbx, %rdi
    00002ae4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10980
    00002ae9: 	movq	%rax, (%rbx)
    00002aec: 	movq	%rax, %rdi
    00002aef: 	movq	0x40(%rsp), %rax
    00002af4: 	movq	%rax, 0x10(%rbx)
.Ltmp1103:
    00002af8: 	movq	(%rsp), %rdx
    00002afc: 	movq	0x10(%rsp), %rsi
    00002b01: 	callq	memcpy@PLT # Offset: 11009
    00002b06: 	movq	0x40(%rsp), %rax
    00002b0b: 	movq	(%rbx), %rdi
    00002b0e: 	movq	%rax, (%rsp)
    00002b12: 	jmp	.Ltmp1102 # Offset: 11026
.Ltmp1000:
    00002b17: 	movq	0x30(%rsp), %rsi
    00002b1c: 	xorl	%edx, %edx
    00002b1e: 	movq	%rbx, %rdi
    00002b21: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11041
    00002b26: 	movq	%rax, (%rbx)
    00002b29: 	movq	%rax, %rdi
    00002b2c: 	movq	0x40(%rsp), %rax
    00002b31: 	movq	%rax, 0x10(%rbx)
.Ltmp1119:
    00002b35: 	movq	(%rsp), %rdx
    00002b39: 	movq	0x10(%rsp), %rsi
    00002b3e: 	callq	memcpy@PLT # Offset: 11070
    00002b43: 	movq	0x40(%rsp), %rax
    00002b48: 	movq	(%rbx), %rdi
    00002b4b: 	movq	%rax, (%rsp)
    00002b4f: 	jmp	.Ltmp1118 # Offset: 11087
.Ltmp950:
    00002b54: 	movq	0x30(%rsp), %rsi
    00002b59: 	xorl	%edx, %edx
    00002b5b: 	movq	%rbx, %rdi
    00002b5e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11102
    00002b63: 	movq	%rax, (%rbx)
    00002b66: 	movq	%rax, %rdi
    00002b69: 	movq	0x40(%rsp), %rax
    00002b6e: 	movq	%rax, 0x10(%rbx)
.Ltmp1105:
    00002b72: 	movq	(%rsp), %rdx
    00002b76: 	movq	0x10(%rsp), %rsi
    00002b7b: 	callq	memcpy@PLT # Offset: 11131
    00002b80: 	movq	0x40(%rsp), %rax
    00002b85: 	movq	(%rbx), %rdi
    00002b88: 	movq	%rax, (%rsp)
    00002b8c: 	jmp	.Ltmp1104 # Offset: 11148
.Ltmp961:
    00002b91: 	movq	0x30(%rsp), %rsi
    00002b96: 	xorl	%edx, %edx
    00002b98: 	movq	%rbx, %rdi
    00002b9b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11163
    00002ba0: 	movq	%rax, (%rbx)
    00002ba3: 	movq	%rax, %rdi
    00002ba6: 	movq	0x40(%rsp), %rax
    00002bab: 	movq	%rax, 0x10(%rbx)
.Ltmp1113:
    00002baf: 	movq	(%rsp), %rdx
    00002bb3: 	movq	0x10(%rsp), %rsi
    00002bb8: 	callq	memcpy@PLT # Offset: 11192
    00002bbd: 	movq	0x40(%rsp), %rax
    00002bc2: 	movq	(%rbx), %rdi
    00002bc5: 	movq	%rax, (%rsp)
    00002bc9: 	jmp	.Ltmp1112 # Offset: 11209
.Ltmp898:
    00002bce: 	movq	0x30(%rsp), %rsi
    00002bd3: 	xorl	%edx, %edx
    00002bd5: 	movq	%rbx, %rdi
    00002bd8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11224
    00002bdd: 	movq	%rax, (%rbx)
    00002be0: 	movq	%rax, %rdi
    00002be3: 	movq	0x40(%rsp), %rax
    00002be8: 	movq	%rax, 0x10(%rbx)
.Ltmp1107:
    00002bec: 	movq	(%rsp), %rdx
    00002bf0: 	movq	0x10(%rsp), %rsi
    00002bf5: 	callq	memcpy@PLT # Offset: 11253
    00002bfa: 	movq	0x40(%rsp), %rax
    00002bff: 	movq	(%rbx), %rdi
    00002c02: 	movq	%rax, (%rsp)
    00002c06: 	jmp	.Ltmp1106 # Offset: 11270
.Ltmp1034:
    00002c0b: 	movq	0x30(%rsp), %rsi
    00002c10: 	xorl	%edx, %edx
    00002c12: 	movq	%rbx, %rdi
    00002c15: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11285
    00002c1a: 	movq	%rax, (%rbx)
    00002c1d: 	movq	%rax, %rdi
    00002c20: 	movq	0x40(%rsp), %rax
    00002c25: 	movq	%rax, 0x10(%rbx)
.Ltmp1109:
    00002c29: 	movq	(%rsp), %rdx
    00002c2d: 	movq	0x10(%rsp), %rsi
    00002c32: 	callq	memcpy@PLT # Offset: 11314
    00002c37: 	movq	0x40(%rsp), %rax
    00002c3c: 	movq	(%rbx), %rdi
    00002c3f: 	movq	%rax, (%rsp)
    00002c43: 	jmp	.Ltmp1108 # Offset: 11331
.Ltmp939:
    00002c48: 	movq	0x30(%rsp), %rsi
    00002c4d: 	xorl	%edx, %edx
    00002c4f: 	movq	%rbx, %rdi
    00002c52: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11346
    00002c57: 	movq	%rax, (%rbx)
    00002c5a: 	movq	%rax, %rdi
    00002c5d: 	movq	0x40(%rsp), %rax
    00002c62: 	movq	%rax, 0x10(%rbx)
.Ltmp1116:
    00002c66: 	movq	(%rsp), %rdx
    00002c6a: 	movq	0x10(%rsp), %rsi
    00002c6f: 	callq	memcpy@PLT # Offset: 11375
    00002c74: 	movq	0x40(%rsp), %rax
    00002c79: 	movq	(%rbx), %rdi
    00002c7c: 	movq	%rax, (%rsp)
    00002c80: 	jmp	.Ltmp1115 # Offset: 11392
.Ltmp887:
    00002c85: 	movq	0x30(%rsp), %rsi
    00002c8a: 	xorl	%edx, %edx
    00002c8c: 	movq	%rbx, %rdi
    00002c8f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11407
    00002c94: 	movq	%rax, (%rbx)
    00002c97: 	movq	%rax, %rdi
    00002c9a: 	movq	0x40(%rsp), %rax
    00002c9f: 	movq	%rax, 0x10(%rbx)
    00002ca3: 	jmp	.Ltmp1120 # Offset: 11427
.Ltmp1017:
    00002ca8: 	movq	0x30(%rsp), %rsi
    00002cad: 	xorl	%edx, %edx
    00002caf: 	movq	%rbx, %rdi
    00002cb2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11442
    00002cb7: 	movq	%rax, (%rbx)
    00002cba: 	movq	%rax, %rdi
    00002cbd: 	movq	0x40(%rsp), %rax
    00002cc2: 	movq	%rax, 0x10(%rbx)
    00002cc6: 	jmp	.Ltmp1121 # Offset: 11462
.Ltmp879:
    00002ccb: 	leaq	DATAat0x23158(%rip), %rdi
    00002cd2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11474
.Ltmp886:
    00002cd7: 	leaq	DATAat0x23158(%rip), %rdi
    00002cde: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11486
.Ltmp897:
    00002ce3: 	leaq	DATAat0x23158(%rip), %rdi
    00002cea: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11498
.Ltmp938:
    00002cef: 	leaq	DATAat0x23158(%rip), %rdi
    00002cf6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11510
.Ltmp949:
    00002cfb: 	leaq	DATAat0x23158(%rip), %rdi
    00002d02: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11522
.Ltmp960:
    00002d07: 	leaq	DATAat0x23158(%rip), %rdi
    00002d0e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11534
.Ltmp971:
    00002d13: 	leaq	DATAat0x23158(%rip), %rdi
    00002d1a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11546
.Ltmp988:
    00002d1f: 	leaq	DATAat0x23158(%rip), %rdi
    00002d26: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11558
.Ltmp999:
    00002d2b: 	leaq	DATAat0x23158(%rip), %rdi
    00002d32: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11570
.Ltmp1016:
    00002d37: 	leaq	DATAat0x23158(%rip), %rdi
    00002d3e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11582
.Ltmp1033:
    00002d43: 	leaq	DATAat0x23158(%rip), %rdi
    00002d4a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11594
.Ltmp1053:
    00002d4f: 	callq	__stack_chk_fail@PLT # Offset: 11599
.Ltmp864:
    00002d54: 	leaq	DATAat0x23158(%rip), %rdi
    00002d5b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11611
    00002d60: 	endbr64
    00002d64: 	movq	%rax, %rbx
    00002d67: 	jmp	.Ltmp1122 # Offset: 11623
    00002d69: 	endbr64
    00002d6d: 	movq	%rax, %rbx
    00002d70: 	jmp	.Ltmp1123 # Offset: 11632
    00002d72: 	endbr64
.Ltmp1128:
    00002d76: 	movq	%rax, %rbx
    00002d79: 	jmp	.Ltmp1124 # Offset: 11641
.Ltmp1122:
    00002d7b: 	movq	0xa0(%rsp), %rdi
    00002d83: 	leaq	0xb0(%rsp), %rax
    00002d8b: 	cmpq	%rax, %rdi
    00002d8e: 	je	.Ltmp1123 # Offset: 11662
.Ltmp1126:
    00002d90: 	movq	0xb0(%rsp), %rax
    00002d98: 	leaq	0x1(%rax), %rsi
    00002d9c: 	callq	_ZdlPvm@PLT # Offset: 11676
.Ltmp1123:
    00002da1: 	movq	0x60(%rsp), %rdi
    00002da6: 	cmpq	0x38(%rsp), %rdi
    00002dab: 	je	.Ltmp1125 # Offset: 11691
    00002dad: 	movq	0x70(%rsp), %rax
    00002db2: 	leaq	0x1(%rax), %rsi
    00002db6: 	callq	_ZdlPvm@PLT # Offset: 11702
.Ltmp1125:
    00002dbb: 	movq	%rbx, %rdi
    00002dbe: 	callq	_Unwind_Resume@PLT # Offset: 11710
.Ltmp1124:
    00002dc3: 	movq	0xa0(%rsp), %rdi
    00002dcb: 	cmpq	%r13, %rdi
    00002dce: 	jne	.Ltmp1126 # Offset: 11726
    00002dd0: 	jmp	.Ltmp1123 # Offset: 11728
    00002dd2: 	endbr64
.Ltmp1130:
    00002dd6: 	movq	%rax, %rbx
    00002dd9: 	jmp	.Ltmp1127 # Offset: 11737
    00002ddb: 	endbr64
    00002ddf: 	jmp	.Ltmp1128 # Offset: 11743
    00002de1: 	endbr64
    00002de5: 	jmp	.Ltmp1128 # Offset: 11749
    00002de7: 	endbr64
    00002deb: 	jmp	.Ltmp1128 # Offset: 11755
.Ltmp1127:
    00002ded: 	movq	0xa0(%rsp), %rdi
    00002df5: 	cmpq	%r13, %rdi
    00002df8: 	je	.Ltmp1129 # Offset: 11768
    00002dfa: 	movq	0xb0(%rsp), %rax
    00002e02: 	leaq	0x1(%rax), %rsi
    00002e06: 	callq	_ZdlPvm@PLT # Offset: 11782
.Ltmp1129:
    00002e0b: 	movq	0x80(%rsp), %rdi
    00002e13: 	leaq	0x90(%rsp), %rax
    00002e1b: 	cmpq	%rax, %rdi
    00002e1e: 	je	.Ltmp1123 # Offset: 11806
    00002e20: 	movq	0x90(%rsp), %rax
    00002e28: 	leaq	0x1(%rax), %rsi
    00002e2c: 	callq	_ZdlPvm@PLT # Offset: 11820
    00002e31: 	jmp	.Ltmp1123 # Offset: 11825
    00002e36: 	endbr64
    00002e3a: 	jmp	.Ltmp1128 # Offset: 11834
    00002e3f: 	endbr64
    00002e43: 	jmp	.Ltmp1130 # Offset: 11843
    00002e45: 	endbr64
    00002e49: 	jmp	.Ltmp1130 # Offset: 11849
    00002e4b: 	endbr64
    00002e4f: 	jmp	.Ltmp1130 # Offset: 11855
    00002e51: 	endbr64
    00002e55: 	jmp	.Ltmp1128 # Offset: 11861
    00002e5a: 	endbr64
    00002e5e: 	jmp	.Ltmp1130 # Offset: 11870
    00002e63: 	endbr64
    00002e67: 	jmp	.Ltmp1130 # Offset: 11879
    00002e6c: 	endbr64
    00002e70: 	jmp	.Ltmp1130 # Offset: 11888
    00002e75: 	endbr64
    00002e79: 	jmp	.Ltmp1130 # Offset: 11897
    00002e7e: 	endbr64
    00002e82: 	jmp	.Ltmp1128 # Offset: 11906
    00002e87: 	endbr64
    00002e8b: 	jmp	.Ltmp1128 # Offset: 11915
    00002e90: 	endbr64
    00002e94: 	jmp	.Ltmp1128 # Offset: 11924
    00002e99: 	endbr64
    00002e9d: 	jmp	.Ltmp1130 # Offset: 11933
    00002ea2: 	endbr64
    00002ea6: 	jmp	.Ltmp1128 # Offset: 11942
    00002eab: 	endbr64
    00002eaf: 	jmp	.Ltmp1128 # Offset: 11951
    00002eb4: 	endbr64
    00002eb8: 	movq	%rax, %rbx
    00002ebb: 	jmp	.Ltmp1129 # Offset: 11963
    00002ec0: 	endbr64
    00002ec4: 	jmp	.Ltmp1130 # Offset: 11972
    00002ec9: 	endbr64
    00002ecd: 	jmp	.Ltmp1130 # Offset: 11981
    00002ed2: 	endbr64
    00002ed6: 	jmp	.Ltmp1130 # Offset: 11990
    00002edb: 	endbr64
    00002edf: 	jmp	.Ltmp1130 # Offset: 11999
    00002ee4: 	endbr64
    00002ee8: 	jmp	.Ltmp1130 # Offset: 12008
    00002eed: 	endbr64
    00002ef1: 	jmp	.Ltmp1128 # Offset: 12017
    00002ef6: 	endbr64
    00002efa: 	jmp	.Ltmp1128 # Offset: 12026
    00002eff: 	endbr64
    00002f03: 	jmp	.Ltmp1128 # Offset: 12035
    00002f08: 	endbr64
    00002f0c: 	jmp	.Ltmp1130 # Offset: 12044
    00002f11: 	endbr64
    00002f15: 	jmp	.Ltmp1130 # Offset: 12053
    00002f1a: 	endbr64
    00002f1e: 	jmp	.Ltmp1130 # Offset: 12062
    00002f23: 	endbr64
    00002f27: 	jmp	.Ltmp1130 # Offset: 12071
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIhEvv"

Binary Function "_Z11TestOneTypeIaEvv" after disassembly {
  Number      : 46
  State       : disassembled
  Address     : 0xd7e0
  Size        : 0x2fa6
  MaxSize     : 0x2fb0
  Offset      : 0xd7e0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIaEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB045:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0x38, %rsp
    0000002a: 	movdqa	_Z7gLabelsB5cxx11+16(%rip), %xmm7
    00000032: 	movdqa	_Z7gLabelsB5cxx11+32(%rip), %xmm3
    0000003a: 	leaq	_Z7gLabelsB5cxx11(%rip), %r15
    00000041: 	movq	%r15, %rdi
    00000044: 	movq	%fs:0x28, %rax
    0000004d: 	movq	%rax, 0x2028(%rsp)
    00000055: 	xorl	%eax, %eax
    00000057: 	leaq	0x90(%rsp), %rax
    0000005f: 	leaq	0x60(%rsp), %rsi
    00000064: 	movl	$0x38746e69, 0x90(%rsp)
    0000006f: 	movq	%rax, 0x58(%rsp)
    00000074: 	leaq	0xe0(%rsp), %rbp
    0000007c: 	leaq	0xc0(%rsp), %r12
    00000084: 	movq	%rax, 0x80(%rsp)
    0000008c: 	movl	$0x745f, %eax
    00000091: 	leaq	0x80(%rsp), %r14
    00000099: 	movw	%ax, 0x94(%rsp)
    000000a1: 	movq	%rsi, 0x50(%rsp)
    000000a6: 	movq	$0x6, 0x88(%rsp)
    000000b2: 	movb	$0x0, 0x96(%rsp)
    000000ba: 	movaps	%xmm7, 0x60(%rsp)
    000000bf: 	movaps	%xmm3, 0x70(%rsp)
    000000c4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 196
    000000c9: 	movl	$0x3e8, %ecx
    000000ce: 	movq	%rbp, %rdi
    000000d1: 	movq	%r14, %rsi
    000000d4: 	cvttsd2si	init_value(%rip), %eax
    000000dc: 	movabsq	$0x101010101010101, %rdx
    000000e6: 	movzbl	%al, %eax
    000000e9: 	imulq	%rdx, %rax
    000000ed: 	leaq	DATAat0x231c8(%rip), %rdx
    000000f4: 	rep		stosq	%rax, %es:(%rdi)
    000000f7: 	movl	base_iterations(%rip), %eax
    000000fd: 	movq	%r12, %rdi
    00000100: 	movl	%eax, iterations(%rip)
    00000106: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 262
    0000010b: 	callq	clock@PLT # Offset: 267
    00000110: 	movq	%r12, %rsi
    00000113: 	movq	%r15, %rdi
    00000116: 	movq	%rax, start_time(%rip)
    0000011d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 285
    00000122: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000129: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000130: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000137: 	je	.Ltmp1131 # Offset: 311
.Ltmp1347:
    0000013d: 	movq	-0x20(%rax), %r13
    00000141: 	callq	clock@PLT # Offset: 321
    00000146: 	pxor	%xmm0, %xmm0
    0000014a: 	movq	%rax, end_time(%rip)
    00000151: 	movq	%r13, %rdi
    00000154: 	subq	start_time(%rip), %rax
    0000015b: 	cvtsi2sd	%rax, %xmm0
    00000160: 	divsd	DATAat0x23450(%rip), %xmm0
    00000168: 	callq	_Z13record_resultdPKc # Offset: 360
    0000016d: 	movq	0xc0(%rsp), %rdi
    00000175: 	leaq	0xd0(%rsp), %r13
    0000017d: 	cmpq	%r13, %rdi
    00000180: 	je	.Ltmp1132 # Offset: 384
    00000182: 	movq	0xd0(%rsp), %rax
    0000018a: 	leaq	0x1(%rax), %rsi
    0000018e: 	callq	_ZdlPvm@PLT # Offset: 398
.Ltmp1132:
    00000193: 	leaq	DATAat0x231e2(%rip), %rdx
    0000019a: 	movq	%r14, %rsi
    0000019d: 	movq	%r12, %rdi
    000001a0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 416
    000001a5: 	callq	clock@PLT # Offset: 421
    000001aa: 	movq	%r12, %rsi
    000001ad: 	movq	%r15, %rdi
    000001b0: 	movq	%rax, start_time(%rip)
    000001b7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 439
    000001bc: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000001c3: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000001ca: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000001d1: 	je	.Ltmp1133 # Offset: 465
.Ltmp1346:
    000001d7: 	movq	-0x20(%rax), %rbx
    000001db: 	callq	clock@PLT # Offset: 475
    000001e0: 	pxor	%xmm0, %xmm0
    000001e4: 	movq	%rax, end_time(%rip)
    000001eb: 	movq	%rbx, %rdi
    000001ee: 	subq	start_time(%rip), %rax
    000001f5: 	cvtsi2sd	%rax, %xmm0
    000001fa: 	divsd	DATAat0x23450(%rip), %xmm0
    00000202: 	callq	_Z13record_resultdPKc # Offset: 514
    00000207: 	movq	0xc0(%rsp), %rdi
    0000020f: 	cmpq	%r13, %rdi
    00000212: 	je	.Ltmp1134 # Offset: 530
    00000214: 	movq	0xd0(%rsp), %rax
    0000021c: 	leaq	0x1(%rax), %rsi
    00000220: 	callq	_ZdlPvm@PLT # Offset: 544
.Ltmp1134:
    00000225: 	leaq	DATAat0x231f1(%rip), %rdx
    0000022c: 	movq	%r14, %rsi
    0000022f: 	movq	%r12, %rdi
    00000232: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 562
    00000237: 	callq	clock@PLT # Offset: 567
    0000023c: 	movq	%r12, %rsi
    0000023f: 	movq	%r15, %rdi
    00000242: 	movq	%rax, start_time(%rip)
    00000249: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 585
    0000024e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000255: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000025c: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000263: 	je	.Ltmp1135 # Offset: 611
.Ltmp1345:
    00000269: 	movq	-0x20(%rax), %rbx
    0000026d: 	callq	clock@PLT # Offset: 621
    00000272: 	pxor	%xmm0, %xmm0
    00000276: 	movq	%rax, end_time(%rip)
    0000027d: 	movq	%rbx, %rdi
    00000280: 	subq	start_time(%rip), %rax
    00000287: 	cvtsi2sd	%rax, %xmm0
    0000028c: 	divsd	DATAat0x23450(%rip), %xmm0
    00000294: 	callq	_Z13record_resultdPKc # Offset: 660
    00000299: 	movq	0xc0(%rsp), %rdi
    000002a1: 	cmpq	%r13, %rdi
    000002a4: 	je	.Ltmp1136 # Offset: 676
    000002a6: 	movq	0xd0(%rsp), %rax
    000002ae: 	leaq	0x1(%rax), %rsi
    000002b2: 	callq	_ZdlPvm@PLT # Offset: 690
.Ltmp1136:
    000002b7: 	leaq	DATAat0x23205(%rip), %rdx
    000002be: 	movq	%r14, %rsi
    000002c1: 	movq	%r12, %rdi
    000002c4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 708
    000002c9: 	callq	clock@PLT # Offset: 713
    000002ce: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    000002d5: 	movq	%rax, start_time(%rip)
    000002dc: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000002e3: 	subq	$0x20, %rax
    000002e7: 	cmpq	%rax, %rbx
    000002ea: 	je	.Ltmp1137 # Offset: 746
    000002f0: 	leaq	0x10(%rbx), %rdi
    000002f4: 	movq	0xc8(%rsp), %rsi
    000002fc: 	movq	%rdi, (%rbx)
    000002ff: 	movq	0xc0(%rsp), %rcx
    00000307: 	movq	%rsi, (%rsp)
    0000030b: 	movq	%rcx, %rax
    0000030e: 	movq	%rcx, 0x10(%rsp)
    00000313: 	addq	%rsi, %rax
    00000316: 	je	.Ltmp1138 # Offset: 790
    00000318: 	testq	%rcx, %rcx
    0000031b: 	je	.Ltmp1139 # Offset: 795
.Ltmp1138:
    00000321: 	movq	(%rsp), %rax
    00000325: 	movq	%rax, 0x60(%rsp)
    0000032a: 	cmpq	$0xf, %rax
    0000032e: 	ja	.Ltmp1140 # Offset: 814
    00000334: 	cmpq	$0x1, (%rsp)
    00000339: 	jne	.Ltmp1141 # Offset: 825
    0000033f: 	movq	0x10(%rsp), %rax
    00000344: 	movzbl	(%rax), %eax
    00000347: 	movb	%al, 0x10(%rbx)
.Ltmp1327:
    0000034a: 	movq	(%rsp), %rax
    0000034e: 	movq	%rax, 0x8(%rbx)
    00000352: 	movb	$0x0, (%rdi,%rax)
    00000356: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000035d: 	addq	$0x20, %rax
    00000361: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1344:
    00000368: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000036f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000376: 	je	.Ltmp1142 # Offset: 886
.Ltmp1331:
    0000037c: 	movq	-0x20(%rax), %rbx
    00000380: 	callq	clock@PLT # Offset: 896
    00000385: 	pxor	%xmm0, %xmm0
    00000389: 	movq	%rax, end_time(%rip)
    00000390: 	movq	%rbx, %rdi
    00000393: 	subq	start_time(%rip), %rax
    0000039a: 	cvtsi2sd	%rax, %xmm0
    0000039f: 	divsd	DATAat0x23450(%rip), %xmm0
    000003a7: 	callq	_Z13record_resultdPKc # Offset: 935
    000003ac: 	movq	0xc0(%rsp), %rdi
    000003b4: 	cmpq	%r13, %rdi
    000003b7: 	je	.Ltmp1143 # Offset: 951
    000003b9: 	movq	0xd0(%rsp), %rax
    000003c1: 	leaq	0x1(%rax), %rsi
    000003c5: 	callq	_ZdlPvm@PLT # Offset: 965
.Ltmp1143:
    000003ca: 	leaq	DATAat0x23219(%rip), %rdx
    000003d1: 	movq	%r14, %rsi
    000003d4: 	movq	%r12, %rdi
    000003d7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 983
    000003dc: 	callq	clock@PLT # Offset: 988
    000003e1: 	movq	%r12, %rsi
    000003e4: 	movq	%r15, %rdi
    000003e7: 	movq	%rax, start_time(%rip)
    000003ee: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1006
    000003f3: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000003fa: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000401: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000408: 	je	.Ltmp1144 # Offset: 1032
.Ltmp1350:
    0000040e: 	movq	-0x20(%rax), %rbx
    00000412: 	callq	clock@PLT # Offset: 1042
    00000417: 	pxor	%xmm0, %xmm0
    0000041b: 	movq	%rax, end_time(%rip)
    00000422: 	movq	%rbx, %rdi
    00000425: 	subq	start_time(%rip), %rax
    0000042c: 	cvtsi2sd	%rax, %xmm0
    00000431: 	divsd	DATAat0x23450(%rip), %xmm0
    00000439: 	callq	_Z13record_resultdPKc # Offset: 1081
    0000043e: 	movq	0xc0(%rsp), %rdi
    00000446: 	cmpq	%r13, %rdi
    00000449: 	je	.Ltmp1145 # Offset: 1097
    0000044b: 	movq	0xd0(%rsp), %rax
    00000453: 	leaq	0x1(%rax), %rsi
    00000457: 	callq	_ZdlPvm@PLT # Offset: 1111
.Ltmp1145:
    0000045c: 	leaq	DATAat0x233c2(%rip), %rdx
    00000463: 	movq	%r14, %rsi
    00000466: 	movq	%r12, %rdi
    00000469: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1129
    0000046e: 	callq	clock@PLT # Offset: 1134
    00000473: 	movq	%r12, %rsi
    00000476: 	movq	%r15, %rdi
    00000479: 	movq	%rax, start_time(%rip)
    00000480: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1152
    00000485: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000048c: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000493: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000049a: 	je	.Ltmp1146 # Offset: 1178
.Ltmp1349:
    000004a0: 	movq	-0x20(%rax), %rbx
    000004a4: 	callq	clock@PLT # Offset: 1188
    000004a9: 	pxor	%xmm0, %xmm0
    000004ad: 	movq	%rax, end_time(%rip)
    000004b4: 	movq	%rbx, %rdi
    000004b7: 	subq	start_time(%rip), %rax
    000004be: 	cvtsi2sd	%rax, %xmm0
    000004c3: 	divsd	DATAat0x23450(%rip), %xmm0
    000004cb: 	callq	_Z13record_resultdPKc # Offset: 1227
    000004d0: 	movq	0xc0(%rsp), %rdi
    000004d8: 	cmpq	%r13, %rdi
    000004db: 	je	.Ltmp1147 # Offset: 1243
    000004dd: 	movq	0xd0(%rsp), %rax
    000004e5: 	leaq	0x1(%rax), %rsi
    000004e9: 	callq	_ZdlPvm@PLT # Offset: 1257
.Ltmp1147:
    000004ee: 	leaq	DATAat0x23279(%rip), %rdx
    000004f5: 	movq	%r14, %rsi
    000004f8: 	movq	%r12, %rdi
    000004fb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1275
    00000500: 	callq	clock@PLT # Offset: 1280
    00000505: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    0000050c: 	movq	%rax, start_time(%rip)
    00000513: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000051a: 	subq	$0x20, %rax
    0000051e: 	cmpq	%rax, %rbx
    00000521: 	je	.Ltmp1148 # Offset: 1313
    00000527: 	leaq	0x10(%rbx), %rdi
    0000052b: 	movq	0xc8(%rsp), %rsi
    00000533: 	movq	%rdi, (%rbx)
    00000536: 	movq	0xc0(%rsp), %rcx
    0000053e: 	movq	%rsi, (%rsp)
    00000542: 	movq	%rcx, %rax
    00000545: 	movq	%rcx, 0x10(%rsp)
    0000054a: 	addq	%rsi, %rax
    0000054d: 	je	.Ltmp1149 # Offset: 1357
    0000054f: 	testq	%rcx, %rcx
    00000552: 	je	.Ltmp1150 # Offset: 1362
.Ltmp1149:
    00000558: 	movq	(%rsp), %rax
    0000055c: 	movq	%rax, 0x60(%rsp)
    00000561: 	cmpq	$0xf, %rax
    00000565: 	ja	.Ltmp1151 # Offset: 1381
    0000056b: 	cmpq	$0x1, (%rsp)
    00000570: 	jne	.Ltmp1152 # Offset: 1392
    00000576: 	movq	0x10(%rsp), %rax
    0000057b: 	movzbl	(%rax), %eax
    0000057e: 	movb	%al, 0x10(%rbx)
.Ltmp1384:
    00000581: 	movq	(%rsp), %rax
    00000585: 	movq	%rax, 0x8(%rbx)
    00000589: 	movb	$0x0, (%rdi,%rax)
    0000058d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000594: 	addq	$0x20, %rax
    00000598: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1348:
    0000059f: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000005a6: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000005ad: 	je	.Ltmp1153 # Offset: 1453
.Ltmp1343:
    000005b3: 	movq	-0x20(%rax), %rbx
    000005b7: 	callq	clock@PLT # Offset: 1463
    000005bc: 	pxor	%xmm0, %xmm0
    000005c0: 	movq	%rax, end_time(%rip)
    000005c7: 	movq	%rbx, %rdi
    000005ca: 	subq	start_time(%rip), %rax
    000005d1: 	cvtsi2sd	%rax, %xmm0
    000005d6: 	divsd	DATAat0x23450(%rip), %xmm0
    000005de: 	callq	_Z13record_resultdPKc # Offset: 1502
    000005e3: 	movq	0xc0(%rsp), %rdi
    000005eb: 	cmpq	%r13, %rdi
    000005ee: 	je	.Ltmp1154 # Offset: 1518
    000005f0: 	movq	0xd0(%rsp), %rax
    000005f8: 	leaq	0x1(%rax), %rsi
    000005fc: 	callq	_ZdlPvm@PLT # Offset: 1532
.Ltmp1154:
    00000601: 	leaq	DATAat0x2322b(%rip), %rdx
    00000608: 	movq	%r14, %rsi
    0000060b: 	movq	%r12, %rdi
    0000060e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1550
    00000613: 	callq	clock@PLT # Offset: 1555
    00000618: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    0000061f: 	movq	%rax, start_time(%rip)
    00000626: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000062d: 	subq	$0x20, %rax
    00000631: 	cmpq	%rax, %rbx
    00000634: 	je	.Ltmp1155 # Offset: 1588
    0000063a: 	leaq	0x10(%rbx), %rdi
    0000063e: 	movq	0xc8(%rsp), %rsi
    00000646: 	movq	%rdi, (%rbx)
    00000649: 	movq	0xc0(%rsp), %rcx
    00000651: 	movq	%rsi, (%rsp)
    00000655: 	movq	%rcx, %rax
    00000658: 	movq	%rcx, 0x10(%rsp)
    0000065d: 	addq	%rsi, %rax
    00000660: 	je	.Ltmp1156 # Offset: 1632
    00000662: 	testq	%rcx, %rcx
    00000665: 	je	.Ltmp1157 # Offset: 1637
.Ltmp1156:
    0000066b: 	movq	(%rsp), %rax
    0000066f: 	movq	%rax, 0x60(%rsp)
    00000674: 	cmpq	$0xf, %rax
    00000678: 	ja	.Ltmp1158 # Offset: 1656
    0000067e: 	cmpq	$0x1, (%rsp)
    00000683: 	jne	.Ltmp1159 # Offset: 1667
    00000689: 	movq	0x10(%rsp), %rax
    0000068e: 	movzbl	(%rax), %eax
    00000691: 	movb	%al, 0x10(%rbx)
.Ltmp1389:
    00000694: 	movq	(%rsp), %rax
    00000698: 	movq	%rax, 0x8(%rbx)
    0000069c: 	movb	$0x0, (%rdi,%rax)
    000006a0: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000006a7: 	addq	$0x20, %rax
    000006ab: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1342:
    000006b2: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000006b9: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000006c0: 	je	.Ltmp1160 # Offset: 1728
.Ltmp1341:
    000006c6: 	movq	-0x20(%rax), %rbx
    000006ca: 	callq	clock@PLT # Offset: 1738
    000006cf: 	pxor	%xmm0, %xmm0
    000006d3: 	movq	%rax, end_time(%rip)
    000006da: 	movq	%rbx, %rdi
    000006dd: 	subq	start_time(%rip), %rax
    000006e4: 	cvtsi2sd	%rax, %xmm0
    000006e9: 	divsd	DATAat0x23450(%rip), %xmm0
    000006f1: 	callq	_Z13record_resultdPKc # Offset: 1777
    000006f6: 	movq	0xc0(%rsp), %rdi
    000006fe: 	cmpq	%r13, %rdi
    00000701: 	je	.Ltmp1161 # Offset: 1793
    00000703: 	movq	0xd0(%rsp), %rax
    0000070b: 	leaq	0x1(%rax), %rsi
    0000070f: 	callq	_ZdlPvm@PLT # Offset: 1807
.Ltmp1161:
    00000714: 	leaq	DATAat0x2323f(%rip), %rdx
    0000071b: 	movq	%r14, %rsi
    0000071e: 	movq	%r12, %rdi
    00000721: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1825
    00000726: 	callq	clock@PLT # Offset: 1830
    0000072b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00000732: 	movq	%rax, start_time(%rip)
    00000739: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000740: 	subq	$0x20, %rax
    00000744: 	cmpq	%rax, %rbx
    00000747: 	je	.Ltmp1162 # Offset: 1863
    0000074d: 	leaq	0x10(%rbx), %rdi
    00000751: 	movq	0xc8(%rsp), %rsi
    00000759: 	movq	%rdi, (%rbx)
    0000075c: 	movq	0xc0(%rsp), %rcx
    00000764: 	movq	%rsi, (%rsp)
    00000768: 	movq	%rcx, %rax
    0000076b: 	movq	%rcx, 0x10(%rsp)
    00000770: 	addq	%rsi, %rax
    00000773: 	je	.Ltmp1163 # Offset: 1907
    00000775: 	testq	%rcx, %rcx
    00000778: 	je	.Ltmp1164 # Offset: 1912
.Ltmp1163:
    0000077e: 	movq	(%rsp), %rax
    00000782: 	movq	%rax, 0x60(%rsp)
    00000787: 	cmpq	$0xf, %rax
    0000078b: 	ja	.Ltmp1165 # Offset: 1931
    00000791: 	cmpq	$0x1, (%rsp)
    00000796: 	jne	.Ltmp1166 # Offset: 1942
    0000079c: 	movq	0x10(%rsp), %rax
    000007a1: 	movzbl	(%rax), %eax
    000007a4: 	movb	%al, 0x10(%rbx)
.Ltmp1382:
    000007a7: 	movq	(%rsp), %rax
    000007ab: 	movq	%rax, 0x8(%rbx)
    000007af: 	movb	$0x0, (%rdi,%rax)
    000007b3: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000007ba: 	addq	$0x20, %rax
    000007be: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1340:
    000007c5: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000007cc: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000007d3: 	je	.Ltmp1167 # Offset: 2003
.Ltmp1339:
    000007d9: 	movq	-0x20(%rax), %rbx
    000007dd: 	callq	clock@PLT # Offset: 2013
    000007e2: 	pxor	%xmm0, %xmm0
    000007e6: 	movq	%rax, end_time(%rip)
    000007ed: 	movq	%rbx, %rdi
    000007f0: 	subq	start_time(%rip), %rax
    000007f7: 	cvtsi2sd	%rax, %xmm0
    000007fc: 	divsd	DATAat0x23450(%rip), %xmm0
    00000804: 	callq	_Z13record_resultdPKc # Offset: 2052
    00000809: 	movq	0xc0(%rsp), %rdi
    00000811: 	cmpq	%r13, %rdi
    00000814: 	je	.Ltmp1168 # Offset: 2068
    00000816: 	movq	0xd0(%rsp), %rax
    0000081e: 	leaq	0x1(%rax), %rsi
    00000822: 	callq	_ZdlPvm@PLT # Offset: 2082
.Ltmp1168:
    00000827: 	leaq	DATAat0x23257(%rip), %rdx
    0000082e: 	movq	%r14, %rsi
    00000831: 	movq	%r12, %rdi
    00000834: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2100
    00000839: 	callq	clock@PLT # Offset: 2105
    0000083e: 	movq	%r12, %rsi
    00000841: 	movq	%r15, %rdi
    00000844: 	movq	%rax, start_time(%rip)
    0000084b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2123
    00000850: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000857: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000085e: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000865: 	je	.Ltmp1169 # Offset: 2149
.Ltmp1338:
    0000086b: 	movq	-0x20(%rax), %rbx
    0000086f: 	callq	clock@PLT # Offset: 2159
    00000874: 	pxor	%xmm0, %xmm0
    00000878: 	movq	%rax, end_time(%rip)
    0000087f: 	movq	%rbx, %rdi
    00000882: 	subq	start_time(%rip), %rax
    00000889: 	cvtsi2sd	%rax, %xmm0
    0000088e: 	divsd	DATAat0x23450(%rip), %xmm0
    00000896: 	callq	_Z13record_resultdPKc # Offset: 2198
    0000089b: 	movq	0xc0(%rsp), %rdi
    000008a3: 	cmpq	%r13, %rdi
    000008a6: 	je	.Ltmp1170 # Offset: 2214
    000008a8: 	movq	0xd0(%rsp), %rax
    000008b0: 	leaq	0x1(%rax), %rsi
    000008b4: 	callq	_ZdlPvm@PLT # Offset: 2228
.Ltmp1170:
    000008b9: 	leaq	DATAat0x2326c(%rip), %rdx
    000008c0: 	movq	%r14, %rsi
    000008c3: 	movq	%r12, %rdi
    000008c6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2246
    000008cb: 	callq	clock@PLT # Offset: 2251
    000008d0: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    000008d7: 	movq	%rax, start_time(%rip)
    000008de: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000008e5: 	subq	$0x20, %rax
    000008e9: 	cmpq	%rax, %rbx
    000008ec: 	je	.Ltmp1171 # Offset: 2284
    000008f2: 	leaq	0x10(%rbx), %rdi
    000008f6: 	movq	0xc8(%rsp), %rcx
    000008fe: 	movq	%rdi, (%rbx)
    00000901: 	movq	0xc0(%rsp), %rsi
    00000909: 	movq	%rcx, (%rsp)
    0000090d: 	movq	%rsi, %rax
    00000910: 	movq	%rsi, 0x10(%rsp)
    00000915: 	addq	%rcx, %rax
    00000918: 	je	.Ltmp1172 # Offset: 2328
    0000091a: 	testq	%rsi, %rsi
    0000091d: 	je	.Ltmp1173 # Offset: 2333
.Ltmp1172:
    00000923: 	movq	(%rsp), %rax
    00000927: 	movq	%rax, 0x60(%rsp)
    0000092c: 	cmpq	$0xf, %rax
    00000930: 	ja	.Ltmp1174 # Offset: 2352
    00000936: 	cmpq	$0x1, (%rsp)
    0000093b: 	jne	.Ltmp1175 # Offset: 2363
    00000941: 	movq	0x10(%rsp), %rax
    00000946: 	movzbl	(%rax), %eax
    00000949: 	movb	%al, 0x10(%rbx)
.Ltmp1391:
    0000094c: 	movq	(%rsp), %rax
    00000950: 	movq	%rax, 0x8(%rbx)
    00000954: 	movb	$0x0, (%rdi,%rax)
    00000958: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000095f: 	addq	$0x20, %rax
    00000963: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1337:
    0000096a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000971: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000978: 	je	.Ltmp1176 # Offset: 2424
.Ltmp1336:
    0000097e: 	movq	-0x20(%rax), %rbx
    00000982: 	callq	clock@PLT # Offset: 2434
    00000987: 	pxor	%xmm0, %xmm0
    0000098b: 	movq	%rax, end_time(%rip)
    00000992: 	movq	%rbx, %rdi
    00000995: 	subq	start_time(%rip), %rax
    0000099c: 	cvtsi2sd	%rax, %xmm0
    000009a1: 	divsd	DATAat0x23450(%rip), %xmm0
    000009a9: 	callq	_Z13record_resultdPKc # Offset: 2473
    000009ae: 	movq	0xc0(%rsp), %rdi
    000009b6: 	cmpq	%r13, %rdi
    000009b9: 	je	.Ltmp1177 # Offset: 2489
    000009bb: 	movq	0xd0(%rsp), %rax
    000009c3: 	leaq	0x1(%rax), %rsi
    000009c7: 	callq	_ZdlPvm@PLT # Offset: 2503
.Ltmp1177:
    000009cc: 	leaq	DATAat0x2328a(%rip), %rdx
    000009d3: 	movq	%r14, %rsi
    000009d6: 	movq	%r12, %rdi
    000009d9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2521
    000009de: 	callq	clock@PLT # Offset: 2526
    000009e3: 	movq	%r12, %rsi
    000009e6: 	movq	%r15, %rdi
    000009e9: 	movq	%rax, start_time(%rip)
    000009f0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2544
    000009f5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000009fc: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000a03: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000a0a: 	je	.Ltmp1178 # Offset: 2570
.Ltmp1335:
    00000a10: 	movq	-0x20(%rax), %rbx
    00000a14: 	callq	clock@PLT # Offset: 2580
    00000a19: 	pxor	%xmm0, %xmm0
    00000a1d: 	movq	%rax, end_time(%rip)
    00000a24: 	movq	%rbx, %rdi
    00000a27: 	subq	start_time(%rip), %rax
    00000a2e: 	cvtsi2sd	%rax, %xmm0
    00000a33: 	divsd	DATAat0x23450(%rip), %xmm0
    00000a3b: 	callq	_Z13record_resultdPKc # Offset: 2619
    00000a40: 	movq	0xc0(%rsp), %rdi
    00000a48: 	cmpq	%r13, %rdi
    00000a4b: 	je	.Ltmp1179 # Offset: 2635
    00000a4d: 	movq	0xd0(%rsp), %rax
    00000a55: 	leaq	0x1(%rax), %rsi
    00000a59: 	callq	_ZdlPvm@PLT # Offset: 2649
.Ltmp1179:
    00000a5e: 	leaq	DATAat0x233d1(%rip), %rdx
    00000a65: 	movq	%r14, %rsi
    00000a68: 	movq	%r12, %rdi
    00000a6b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2667
    00000a70: 	callq	clock@PLT # Offset: 2672
    00000a75: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00000a7c: 	movq	%rax, start_time(%rip)
    00000a83: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000a8a: 	subq	$0x20, %rax
    00000a8e: 	cmpq	%rax, %rbx
    00000a91: 	je	.Ltmp1180 # Offset: 2705
    00000a97: 	leaq	0x10(%rbx), %rdi
    00000a9b: 	movq	0xc8(%rsp), %rsi
    00000aa3: 	movq	%rdi, (%rbx)
    00000aa6: 	movq	0xc0(%rsp), %rcx
    00000aae: 	movq	%rsi, (%rsp)
    00000ab2: 	movq	%rcx, %rax
    00000ab5: 	movq	%rcx, 0x10(%rsp)
    00000aba: 	addq	%rsi, %rax
    00000abd: 	je	.Ltmp1181 # Offset: 2749
    00000abf: 	testq	%rcx, %rcx
    00000ac2: 	je	.Ltmp1182 # Offset: 2754
.Ltmp1181:
    00000ac8: 	movq	(%rsp), %rax
    00000acc: 	movq	%rax, 0x60(%rsp)
    00000ad1: 	cmpq	$0xf, %rax
    00000ad5: 	ja	.Ltmp1183 # Offset: 2773
    00000adb: 	cmpq	$0x1, (%rsp)
    00000ae0: 	jne	.Ltmp1184 # Offset: 2784
    00000ae6: 	movq	0x10(%rsp), %rax
    00000aeb: 	movzbl	(%rax), %eax
    00000aee: 	movb	%al, 0x10(%rbx)
.Ltmp1373:
    00000af1: 	movq	(%rsp), %rax
    00000af5: 	movq	%rax, 0x8(%rbx)
    00000af9: 	movb	$0x0, (%rdi,%rax)
    00000afd: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000b04: 	addq	$0x20, %rax
    00000b08: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1372:
    00000b0f: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000b16: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000b1d: 	je	.Ltmp1185 # Offset: 2845
.Ltmp1371:
    00000b23: 	movq	-0x20(%rax), %rbx
    00000b27: 	callq	clock@PLT # Offset: 2855
    00000b2c: 	pxor	%xmm0, %xmm0
    00000b30: 	movq	%rax, end_time(%rip)
    00000b37: 	movq	%rbx, %rdi
    00000b3a: 	subq	start_time(%rip), %rax
    00000b41: 	cvtsi2sd	%rax, %xmm0
    00000b46: 	divsd	DATAat0x23450(%rip), %xmm0
    00000b4e: 	callq	_Z13record_resultdPKc # Offset: 2894
    00000b53: 	movq	0xc0(%rsp), %rdi
    00000b5b: 	cmpq	%r13, %rdi
    00000b5e: 	je	.Ltmp1186 # Offset: 2910
    00000b60: 	movq	0xd0(%rsp), %rax
    00000b68: 	leaq	0x1(%rax), %rsi
    00000b6c: 	callq	_ZdlPvm@PLT # Offset: 2924
.Ltmp1186:
    00000b71: 	leaq	DATAat0x233e0(%rip), %rdx
    00000b78: 	movq	%r14, %rsi
    00000b7b: 	movq	%r12, %rdi
    00000b7e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2942
    00000b83: 	callq	clock@PLT # Offset: 2947
    00000b88: 	movq	%r12, %rsi
    00000b8b: 	movq	%r15, %rdi
    00000b8e: 	movq	%rax, start_time(%rip)
    00000b95: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2965
    00000b9a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000ba1: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000ba8: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000baf: 	je	.Ltmp1187 # Offset: 2991
.Ltmp1370:
    00000bb5: 	movq	-0x20(%rax), %rbx
    00000bb9: 	callq	clock@PLT # Offset: 3001
    00000bbe: 	pxor	%xmm0, %xmm0
    00000bc2: 	movq	%rax, end_time(%rip)
    00000bc9: 	movq	%rbx, %rdi
    00000bcc: 	subq	start_time(%rip), %rax
    00000bd3: 	cvtsi2sd	%rax, %xmm0
    00000bd8: 	divsd	DATAat0x23450(%rip), %xmm0
    00000be0: 	callq	_Z13record_resultdPKc # Offset: 3040
    00000be5: 	movq	0xc0(%rsp), %rdi
    00000bed: 	cmpq	%r13, %rdi
    00000bf0: 	je	.Ltmp1188 # Offset: 3056
    00000bf2: 	movq	0xd0(%rsp), %rax
    00000bfa: 	leaq	0x1(%rax), %rsi
    00000bfe: 	callq	_ZdlPvm@PLT # Offset: 3070
.Ltmp1188:
    00000c03: 	leaq	DATAat0x233ee(%rip), %rdx
    00000c0a: 	movq	%r14, %rsi
    00000c0d: 	movq	%r12, %rdi
    00000c10: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3088
    00000c15: 	callq	clock@PLT # Offset: 3093
    00000c1a: 	movq	%r12, %rsi
    00000c1d: 	movq	%r15, %rdi
    00000c20: 	movq	%rax, start_time(%rip)
    00000c27: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3111
    00000c2c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000c33: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000c3a: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000c41: 	je	.Ltmp1189 # Offset: 3137
.Ltmp1369:
    00000c47: 	movq	-0x20(%rax), %rbx
    00000c4b: 	callq	clock@PLT # Offset: 3147
    00000c50: 	pxor	%xmm0, %xmm0
    00000c54: 	movq	%rax, end_time(%rip)
    00000c5b: 	movq	%rbx, %rdi
    00000c5e: 	subq	start_time(%rip), %rax
    00000c65: 	cvtsi2sd	%rax, %xmm0
    00000c6a: 	divsd	DATAat0x23450(%rip), %xmm0
    00000c72: 	callq	_Z13record_resultdPKc # Offset: 3186
    00000c77: 	movq	0xc0(%rsp), %rdi
    00000c7f: 	cmpq	%r13, %rdi
    00000c82: 	je	.Ltmp1190 # Offset: 3202
    00000c84: 	movq	0xd0(%rsp), %rax
    00000c8c: 	leaq	0x1(%rax), %rsi
    00000c90: 	callq	_ZdlPvm@PLT # Offset: 3216
.Ltmp1190:
    00000c95: 	leaq	0xa0(%rsp), %rdi
    00000c9d: 	leaq	DATAat0x232a5(%rip), %rdx
    00000ca4: 	movq	%r14, %rsi
    00000ca7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3239
    00000cac: 	movl	iterations(%rip), %edx
    00000cb2: 	xorl	%r8d, %r8d
    00000cb5: 	xorl	%ecx, %ecx
    00000cb7: 	movl	$0x1f40, %esi
    00000cbc: 	movq	0xa0(%rsp), %rdi
    00000cc4: 	callq	_Z9summarizePKciiii # Offset: 3268
    00000cc9: 	movslq	base_iterations(%rip), %rax
    00000cd0: 	movq	%r14, %rsi
    00000cd3: 	movq	%r12, %rdi
    00000cd6: 	movq	%rax, %rdx
    00000cd9: 	imulq	$0x66666667, %rax, %rax
    00000ce0: 	sarl	$0x1f, %edx
    00000ce3: 	sarq	$0x22, %rax
    00000ce7: 	subl	%edx, %eax
    00000ce9: 	leaq	DATAat0x232be(%rip), %rdx
    00000cf0: 	movl	%eax, iterations(%rip)
    00000cf6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3318
    00000cfb: 	callq	clock@PLT # Offset: 3323
    00000d00: 	movl	iterations(%rip), %ecx
    00000d06: 	movq	%rax, start_time(%rip)
    00000d0d: 	testl	%ecx, %ecx
    00000d0f: 	jle	.Ltmp1191 # Offset: 3343
    00000d15: 	movdqa	DATAat0x236b0(%rip), %xmm5
    00000d1d: 	movl	$0x0, 0x10(%rsp)
    00000d25: 	leaq	0x2020(%rsp), %rbx
    00000d2d: 	movaps	%xmm5, (%rsp)
    00000d31: 	nopl	(%rax) # Size: 7
.Ltmp1194:
    00000d38: 	movq	%rbp, %rax
    00000d3b: 	pxor	%xmm0, %xmm0
    00000d3f: 	nop # Size: 1
.Ltmp1192:
    00000d40: 	paddb	(%rsp), %xmm0
    00000d45: 	addq	$0x10, %rax
    00000d49: 	paddb	-0x10(%rax), %xmm0
    00000d4e: 	cmpq	%rax, %rbx
    00000d51: 	jne	.Ltmp1192 # Offset: 3409
    00000d53: 	cvttsd2si	init_value(%rip), %edx
    00000d5b: 	movdqa	%xmm0, %xmm1
    00000d5f: 	pxor	%xmm4, %xmm4
    00000d63: 	psrldq	$0x8, %xmm1
    00000d68: 	paddb	%xmm1, %xmm0
    00000d6c: 	psadbw	%xmm4, %xmm0
    00000d70: 	addl	$0xa, %edx
    00000d73: 	movd	%xmm0, %eax
    00000d77: 	shll	$0x6, %edx
    00000d7a: 	cmpb	%al, %dl
    00000d7c: 	je	.Ltmp1193 # Offset: 3452
    00000d7e: 	movl	current_test(%rip), %edx
    00000d84: 	leaq	DATAat0x231d2(%rip), %rsi
    00000d8b: 	movl	$0x1, %edi
    00000d90: 	xorl	%eax, %eax
    00000d92: 	callq	__printf_chk@PLT # Offset: 3474
    00000d97: 	movl	iterations(%rip), %ecx
.Ltmp1193:
    00000d9d: 	addl	$0x1, 0x10(%rsp)
    00000da2: 	movl	0x10(%rsp), %eax
    00000da6: 	cmpl	%ecx, %eax
    00000da8: 	jl	.Ltmp1194 # Offset: 3496
.Ltmp1191:
    00000daa: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000db1: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00000db8: 	subq	$0x20, %rax
    00000dbc: 	cmpq	%rax, %rbx
    00000dbf: 	je	.Ltmp1195 # Offset: 3519
    00000dc5: 	leaq	0x10(%rbx), %rdi
    00000dc9: 	movq	0xc8(%rsp), %rcx
    00000dd1: 	movq	%rdi, (%rbx)
    00000dd4: 	movq	0xc0(%rsp), %rsi
    00000ddc: 	movq	%rcx, (%rsp)
    00000de0: 	movq	%rsi, %rax
    00000de3: 	movq	%rsi, 0x10(%rsp)
    00000de8: 	addq	%rcx, %rax
    00000deb: 	je	.Ltmp1196 # Offset: 3563
    00000ded: 	testq	%rsi, %rsi
    00000df0: 	je	.Ltmp1197 # Offset: 3568
.Ltmp1196:
    00000df6: 	movq	(%rsp), %rax
    00000dfa: 	movq	%rax, 0x60(%rsp)
    00000dff: 	cmpq	$0xf, %rax
    00000e03: 	ja	.Ltmp1198 # Offset: 3587
    00000e09: 	cmpq	$0x1, (%rsp)
    00000e0e: 	jne	.Ltmp1199 # Offset: 3598
    00000e14: 	movq	0x10(%rsp), %rax
    00000e19: 	movzbl	(%rax), %eax
    00000e1c: 	movb	%al, 0x10(%rbx)
.Ltmp1392:
    00000e1f: 	movq	(%rsp), %rax
    00000e23: 	movq	%rax, 0x8(%rbx)
    00000e27: 	movb	$0x0, (%rdi,%rax)
    00000e2b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000e32: 	addq	$0x20, %rax
    00000e36: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1368:
    00000e3d: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000e44: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000e4b: 	je	.Ltmp1200 # Offset: 3659
.Ltmp1334:
    00000e51: 	movq	-0x20(%rax), %rbx
    00000e55: 	callq	clock@PLT # Offset: 3669
    00000e5a: 	pxor	%xmm0, %xmm0
    00000e5e: 	movq	%rax, end_time(%rip)
    00000e65: 	movq	%rbx, %rdi
    00000e68: 	subq	start_time(%rip), %rax
    00000e6f: 	cvtsi2sd	%rax, %xmm0
    00000e74: 	divsd	DATAat0x23450(%rip), %xmm0
    00000e7c: 	callq	_Z13record_resultdPKc # Offset: 3708
    00000e81: 	movq	0xc0(%rsp), %rdi
    00000e89: 	cmpq	%r13, %rdi
    00000e8c: 	je	.Ltmp1201 # Offset: 3724
    00000e8e: 	movq	0xd0(%rsp), %rax
    00000e96: 	leaq	0x1(%rax), %rsi
    00000e9a: 	callq	_ZdlPvm@PLT # Offset: 3738
.Ltmp1201:
    00000e9f: 	leaq	DATAat0x232cc(%rip), %rdx
    00000ea6: 	movq	%r14, %rsi
    00000ea9: 	movq	%r12, %rdi
    00000eac: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3756
    00000eb1: 	callq	clock@PLT # Offset: 3761
    00000eb6: 	movl	iterations(%rip), %ecx
    00000ebc: 	movq	%rax, start_time(%rip)
    00000ec3: 	testl	%ecx, %ecx
    00000ec5: 	jle	.Ltmp1202 # Offset: 3781
    00000ecb: 	movdqa	DATAat0x236b0(%rip), %xmm7
    00000ed3: 	movl	$0x0, 0x10(%rsp)
    00000edb: 	leaq	0x2020(%rsp), %rbx
    00000ee3: 	movaps	%xmm7, (%rsp)
    00000ee7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1205:
    00000ef0: 	movq	%rbp, %rax
    00000ef3: 	pxor	%xmm0, %xmm0
    00000ef7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1203:
    00000f00: 	paddb	(%rsp), %xmm0
    00000f05: 	addq	$0x10, %rax
    00000f09: 	paddb	-0x10(%rax), %xmm0
    00000f0e: 	cmpq	%rbx, %rax
    00000f11: 	jne	.Ltmp1203 # Offset: 3857
    00000f13: 	cvttsd2si	init_value(%rip), %edx
    00000f1b: 	movdqa	%xmm0, %xmm1
    00000f1f: 	pxor	%xmm5, %xmm5
    00000f23: 	psrldq	$0x8, %xmm1
    00000f28: 	paddb	%xmm1, %xmm0
    00000f2c: 	psadbw	%xmm5, %xmm0
    00000f30: 	addl	$0xa, %edx
    00000f33: 	movd	%xmm0, %eax
    00000f37: 	shll	$0x6, %edx
    00000f3a: 	cmpb	%al, %dl
    00000f3c: 	je	.Ltmp1204 # Offset: 3900
    00000f3e: 	movl	current_test(%rip), %edx
    00000f44: 	leaq	DATAat0x231d2(%rip), %rsi
    00000f4b: 	movl	$0x1, %edi
    00000f50: 	xorl	%eax, %eax
    00000f52: 	callq	__printf_chk@PLT # Offset: 3922
    00000f57: 	movl	iterations(%rip), %ecx
.Ltmp1204:
    00000f5d: 	addl	$0x1, 0x10(%rsp)
    00000f62: 	movl	0x10(%rsp), %eax
    00000f66: 	cmpl	%ecx, %eax
    00000f68: 	jl	.Ltmp1205 # Offset: 3944
.Ltmp1202:
    00000f6a: 	movq	%r12, %rsi
    00000f6d: 	movq	%r15, %rdi
    00000f70: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3952
    00000f75: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000f7c: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000f83: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000f8a: 	je	.Ltmp1206 # Offset: 3978
.Ltmp1333:
    00000f90: 	movq	-0x20(%rax), %rbx
    00000f94: 	callq	clock@PLT # Offset: 3988
    00000f99: 	pxor	%xmm0, %xmm0
    00000f9d: 	movq	%rax, end_time(%rip)
    00000fa4: 	movq	%rbx, %rdi
    00000fa7: 	subq	start_time(%rip), %rax
    00000fae: 	cvtsi2sd	%rax, %xmm0
    00000fb3: 	divsd	DATAat0x23450(%rip), %xmm0
    00000fbb: 	callq	_Z13record_resultdPKc # Offset: 4027
    00000fc0: 	movq	0xc0(%rsp), %rdi
    00000fc8: 	cmpq	%r13, %rdi
    00000fcb: 	je	.Ltmp1207 # Offset: 4043
    00000fcd: 	movq	0xd0(%rsp), %rax
    00000fd5: 	leaq	0x1(%rax), %rsi
    00000fd9: 	callq	_ZdlPvm@PLT # Offset: 4057
.Ltmp1207:
    00000fde: 	leaq	DATAat0x232e4(%rip), %rdx
    00000fe5: 	movq	%r14, %rsi
    00000fe8: 	movq	%r12, %rdi
    00000feb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4075
    00000ff0: 	callq	clock@PLT # Offset: 4080
    00000ff5: 	movl	iterations(%rip), %ecx
    00000ffb: 	movq	%rax, start_time(%rip)
    00001002: 	testl	%ecx, %ecx
    00001004: 	jle	.Ltmp1208 # Offset: 4100
    0000100a: 	movdqa	DATAat0x236c0(%rip), %xmm3
    00001012: 	movl	$0x0, 0x10(%rsp)
    0000101a: 	leaq	0x2020(%rsp), %rbx
    00001022: 	movaps	%xmm3, (%rsp)
    00001026: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1211:
    00001030: 	movq	%rbp, %rax
    00001033: 	pxor	%xmm0, %xmm0
    00001037: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1209:
    00001040: 	paddb	(%rsp), %xmm0
    00001045: 	addq	$0x10, %rax
    00001049: 	paddb	-0x10(%rax), %xmm0
    0000104e: 	cmpq	%rbx, %rax
    00001051: 	jne	.Ltmp1209 # Offset: 4177
    00001053: 	cvttsd2si	init_value(%rip), %edx
    0000105b: 	movdqa	%xmm0, %xmm1
    0000105f: 	pxor	%xmm4, %xmm4
    00001063: 	psrldq	$0x8, %xmm1
    00001068: 	paddb	%xmm1, %xmm0
    0000106c: 	psadbw	%xmm4, %xmm0
    00001070: 	subl	$0xa, %edx
    00001073: 	movd	%xmm0, %eax
    00001077: 	shll	$0x6, %edx
    0000107a: 	cmpb	%al, %dl
    0000107c: 	je	.Ltmp1210 # Offset: 4220
    0000107e: 	movl	current_test(%rip), %edx
    00001084: 	leaq	DATAat0x231d2(%rip), %rsi
    0000108b: 	movl	$0x1, %edi
    00001090: 	xorl	%eax, %eax
    00001092: 	callq	__printf_chk@PLT # Offset: 4242
    00001097: 	movl	iterations(%rip), %ecx
.Ltmp1210:
    0000109d: 	addl	$0x1, 0x10(%rsp)
    000010a2: 	movl	0x10(%rsp), %eax
    000010a6: 	cmpl	%ecx, %eax
    000010a8: 	jl	.Ltmp1211 # Offset: 4264
.Ltmp1208:
    000010aa: 	movq	%r12, %rsi
    000010ad: 	movq	%r15, %rdi
    000010b0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4272
    000010b5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000010bc: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000010c3: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000010ca: 	je	.Ltmp1212 # Offset: 4298
.Ltmp1332:
    000010d0: 	movq	-0x20(%rax), %rbx
    000010d4: 	callq	clock@PLT # Offset: 4308
    000010d9: 	pxor	%xmm0, %xmm0
    000010dd: 	movq	%rax, end_time(%rip)
    000010e4: 	movq	%rbx, %rdi
    000010e7: 	subq	start_time(%rip), %rax
    000010ee: 	cvtsi2sd	%rax, %xmm0
    000010f3: 	divsd	DATAat0x23450(%rip), %xmm0
    000010fb: 	callq	_Z13record_resultdPKc # Offset: 4347
    00001100: 	movq	0xc0(%rsp), %rdi
    00001108: 	cmpq	%r13, %rdi
    0000110b: 	je	.Ltmp1213 # Offset: 4363
    0000110d: 	movq	0xd0(%rsp), %rax
    00001115: 	leaq	0x1(%rax), %rsi
    00001119: 	callq	_ZdlPvm@PLT # Offset: 4377
.Ltmp1213:
    0000111e: 	leaq	DATAat0x232f7(%rip), %rdx
    00001125: 	movq	%r14, %rsi
    00001128: 	movq	%r12, %rdi
    0000112b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4395
    00001130: 	callq	clock@PLT # Offset: 4400
    00001135: 	movl	iterations(%rip), %ecx
    0000113b: 	movq	%rax, start_time(%rip)
    00001142: 	testl	%ecx, %ecx
    00001144: 	jle	.Ltmp1214 # Offset: 4420
    0000114a: 	movdqa	DATAat0x236c0(%rip), %xmm5
    00001152: 	movl	$0x0, 0x10(%rsp)
    0000115a: 	leaq	0x2020(%rsp), %rbx
    00001162: 	movaps	%xmm5, (%rsp)
    00001166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1217:
    00001170: 	movq	%rbp, %rax
    00001173: 	pxor	%xmm0, %xmm0
    00001177: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1215:
    00001180: 	paddb	(%rsp), %xmm0
    00001185: 	addq	$0x10, %rax
    00001189: 	paddb	-0x10(%rax), %xmm0
    0000118e: 	cmpq	%rbx, %rax
    00001191: 	jne	.Ltmp1215 # Offset: 4497
    00001193: 	cvttsd2si	init_value(%rip), %edx
    0000119b: 	movdqa	%xmm0, %xmm1
    0000119f: 	pxor	%xmm5, %xmm5
    000011a3: 	psrldq	$0x8, %xmm1
    000011a8: 	paddb	%xmm1, %xmm0
    000011ac: 	psadbw	%xmm5, %xmm0
    000011b0: 	subl	$0xa, %edx
    000011b3: 	movd	%xmm0, %eax
    000011b7: 	shll	$0x6, %edx
    000011ba: 	cmpb	%al, %dl
    000011bc: 	je	.Ltmp1216 # Offset: 4540
    000011be: 	movl	current_test(%rip), %edx
    000011c4: 	leaq	DATAat0x231d2(%rip), %rsi
    000011cb: 	movl	$0x1, %edi
    000011d0: 	xorl	%eax, %eax
    000011d2: 	callq	__printf_chk@PLT # Offset: 4562
    000011d7: 	movl	iterations(%rip), %ecx
.Ltmp1216:
    000011dd: 	addl	$0x1, 0x10(%rsp)
    000011e2: 	movl	0x10(%rsp), %eax
    000011e6: 	cmpl	%ecx, %eax
    000011e8: 	jl	.Ltmp1217 # Offset: 4584
.Ltmp1214:
    000011ea: 	movq	%r12, %rsi
    000011ed: 	movq	%r15, %rdi
    000011f0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4592
    000011f5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000011fc: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001203: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000120a: 	je	.Ltmp1218 # Offset: 4618
.Ltmp1330:
    00001210: 	movq	-0x20(%rax), %rbx
    00001214: 	callq	clock@PLT # Offset: 4628
    00001219: 	pxor	%xmm0, %xmm0
    0000121d: 	movq	%rax, end_time(%rip)
    00001224: 	movq	%rbx, %rdi
    00001227: 	subq	start_time(%rip), %rax
    0000122e: 	cvtsi2sd	%rax, %xmm0
    00001233: 	divsd	DATAat0x23450(%rip), %xmm0
    0000123b: 	callq	_Z13record_resultdPKc # Offset: 4667
    00001240: 	movq	0xc0(%rsp), %rdi
    00001248: 	cmpq	%r13, %rdi
    0000124b: 	je	.Ltmp1219 # Offset: 4683
    0000124d: 	movq	0xd0(%rsp), %rax
    00001255: 	leaq	0x1(%rax), %rsi
    00001259: 	callq	_ZdlPvm@PLT # Offset: 4697
.Ltmp1219:
    0000125e: 	leaq	DATAat0x23314(%rip), %rdx
    00001265: 	movq	%r14, %rsi
    00001268: 	movq	%r12, %rdi
    0000126b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4715
    00001270: 	callq	clock@PLT # Offset: 4720
    00001275: 	movl	iterations(%rip), %edx
    0000127b: 	movl	$0x0, (%rsp)
    00001282: 	leaq	0x2020(%rsp), %rbx
    0000128a: 	movq	%rax, start_time(%rip)
    00001291: 	testl	%edx, %edx
    00001293: 	jle	.Ltmp1220 # Offset: 4755
    00001295: 	nopl	(%rax) # Size: 3
.Ltmp1223:
    00001298: 	movq	%rbp, %rax
    0000129b: 	pxor	%xmm2, %xmm2
    0000129f: 	nop # Size: 1
.Ltmp1221:
    000012a0: 	movdqa	(%rax), %xmm1
    000012a4: 	addq	$0x10, %rax
    000012a8: 	movdqa	%xmm1, %xmm0
    000012ac: 	paddb	%xmm1, %xmm0
    000012b0: 	paddb	%xmm0, %xmm0
    000012b4: 	paddb	%xmm0, %xmm0
    000012b8: 	paddb	%xmm0, %xmm0
    000012bc: 	psubb	%xmm1, %xmm0
    000012c0: 	paddb	%xmm0, %xmm0
    000012c4: 	paddb	%xmm0, %xmm0
    000012c8: 	paddb	%xmm0, %xmm0
    000012cc: 	paddb	%xmm0, %xmm2
    000012d0: 	cmpq	%rbx, %rax
    000012d3: 	jne	.Ltmp1221 # Offset: 4819
    000012d5: 	movdqa	%xmm2, %xmm0
    000012d9: 	psrldq	$0x8, %xmm0
    000012de: 	paddb	%xmm0, %xmm2
    000012e2: 	pxor	%xmm0, %xmm0
    000012e6: 	psadbw	%xmm0, %xmm2
    000012ea: 	movd	%xmm2, %eax
    000012ee: 	testb	%al, %al
    000012f0: 	jne	.Ltmp1222 # Offset: 4848
.Ltmp1329:
    000012f6: 	addl	$0x1, (%rsp)
    000012fa: 	movl	(%rsp), %eax
    000012fd: 	cmpl	%edx, %eax
    000012ff: 	jl	.Ltmp1223 # Offset: 4863
.Ltmp1220:
    00001301: 	movq	%r12, %rsi
    00001304: 	movq	%r15, %rdi
    00001307: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4871
    0000130c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001313: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000131a: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001321: 	je	.Ltmp1224 # Offset: 4897
.Ltmp1352:
    00001327: 	movq	-0x20(%rax), %rbx
    0000132b: 	callq	clock@PLT # Offset: 4907
    00001330: 	pxor	%xmm0, %xmm0
    00001334: 	movq	%rax, end_time(%rip)
    0000133b: 	movq	%rbx, %rdi
    0000133e: 	subq	start_time(%rip), %rax
    00001345: 	cvtsi2sd	%rax, %xmm0
    0000134a: 	divsd	DATAat0x23450(%rip), %xmm0
    00001352: 	callq	_Z13record_resultdPKc # Offset: 4946
    00001357: 	movq	0xc0(%rsp), %rdi
    0000135f: 	cmpq	%r13, %rdi
    00001362: 	je	.Ltmp1225 # Offset: 4962
    00001364: 	movq	0xd0(%rsp), %rax
    0000136c: 	leaq	0x1(%rax), %rsi
    00001370: 	callq	_ZdlPvm@PLT # Offset: 4976
.Ltmp1225:
    00001375: 	leaq	DATAat0x23327(%rip), %rdx
    0000137c: 	movq	%r14, %rsi
    0000137f: 	movq	%r12, %rdi
    00001382: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4994
    00001387: 	callq	clock@PLT # Offset: 4999
    0000138c: 	movl	iterations(%rip), %edx
    00001392: 	movl	$0x0, (%rsp)
    00001399: 	leaq	0x2020(%rsp), %rbx
    000013a1: 	movq	%rax, start_time(%rip)
    000013a8: 	testl	%edx, %edx
    000013aa: 	jle	.Ltmp1226 # Offset: 5034
    000013ac: 	nopl	(%rax) # Size: 4
.Ltmp1229:
    000013b0: 	movq	%rbp, %rax
    000013b3: 	pxor	%xmm2, %xmm2
    000013b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1227:
    000013c0: 	movdqa	(%rax), %xmm1
    000013c4: 	addq	$0x10, %rax
    000013c8: 	movdqa	%xmm1, %xmm0
    000013cc: 	paddb	%xmm1, %xmm0
    000013d0: 	paddb	%xmm0, %xmm0
    000013d4: 	paddb	%xmm0, %xmm0
    000013d8: 	paddb	%xmm0, %xmm0
    000013dc: 	psubb	%xmm1, %xmm0
    000013e0: 	paddb	%xmm0, %xmm0
    000013e4: 	paddb	%xmm0, %xmm0
    000013e8: 	paddb	%xmm0, %xmm0
    000013ec: 	paddb	%xmm0, %xmm2
    000013f0: 	cmpq	%rax, %rbx
    000013f3: 	jne	.Ltmp1227 # Offset: 5107
    000013f5: 	movdqa	%xmm2, %xmm0
    000013f9: 	psrldq	$0x8, %xmm0
    000013fe: 	paddb	%xmm0, %xmm2
    00001402: 	pxor	%xmm0, %xmm0
    00001406: 	psadbw	%xmm0, %xmm2
    0000140a: 	movd	%xmm2, %eax
    0000140e: 	testb	%al, %al
    00001410: 	jne	.Ltmp1228 # Offset: 5136
.Ltmp1328:
    00001416: 	addl	$0x1, (%rsp)
    0000141a: 	movl	(%rsp), %eax
    0000141d: 	cmpl	%edx, %eax
    0000141f: 	jl	.Ltmp1229 # Offset: 5151
.Ltmp1226:
    00001421: 	movq	%r12, %rsi
    00001424: 	movq	%r15, %rdi
    00001427: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5159
    0000142c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001433: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000143a: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001441: 	je	.Ltmp1230 # Offset: 5185
.Ltmp1354:
    00001447: 	movq	-0x20(%rax), %rbx
    0000144b: 	callq	clock@PLT # Offset: 5195
    00001450: 	pxor	%xmm0, %xmm0
    00001454: 	movq	%rax, end_time(%rip)
    0000145b: 	movq	%rbx, %rdi
    0000145e: 	subq	start_time(%rip), %rax
    00001465: 	cvtsi2sd	%rax, %xmm0
    0000146a: 	divsd	DATAat0x23450(%rip), %xmm0
    00001472: 	callq	_Z13record_resultdPKc # Offset: 5234
    00001477: 	movq	0xc0(%rsp), %rdi
    0000147f: 	cmpq	%r13, %rdi
    00001482: 	je	.Ltmp1231 # Offset: 5250
    00001484: 	movq	0xd0(%rsp), %rax
    0000148c: 	leaq	0x1(%rax), %rsi
    00001490: 	callq	_ZdlPvm@PLT # Offset: 5264
.Ltmp1231:
    00001495: 	leaq	DATAat0x23345(%rip), %rdx
    0000149c: 	movq	%r14, %rsi
    0000149f: 	movq	%r12, %rdi
    000014a2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5282
    000014a7: 	callq	clock@PLT # Offset: 5287
    000014ac: 	movl	iterations(%rip), %ecx
    000014b2: 	movq	%rax, start_time(%rip)
    000014b9: 	testl	%ecx, %ecx
    000014bb: 	jle	.Ltmp1232 # Offset: 5307
    000014c1: 	movl	$0x0, (%rsp)
    000014c8: 	leaq	0x2020(%rsp), %rbx
.Ltmp1235:
    000014d0: 	movq	%rbp, %rax
    000014d3: 	pxor	%xmm0, %xmm0
    000014d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1233:
    000014e0: 	paddb	DATAat0x236d0(%rip), %xmm0
    000014e8: 	addq	$0x10, %rax
    000014ec: 	paddb	-0x10(%rax), %xmm0
    000014f1: 	cmpq	%rbx, %rax
    000014f4: 	jne	.Ltmp1233 # Offset: 5364
    000014f6: 	movdqa	%xmm0, %xmm1
    000014fa: 	cvttsd2si	init_value(%rip), %edx
    00001502: 	pxor	%xmm7, %xmm7
    00001506: 	psrldq	$0x8, %xmm1
    0000150b: 	paddb	%xmm1, %xmm0
    0000150f: 	psadbw	%xmm7, %xmm0
    00001513: 	movd	%xmm0, %eax
    00001517: 	shll	$0x6, %edx
    0000151a: 	cmpb	%al, %dl
    0000151c: 	je	.Ltmp1234 # Offset: 5404
    0000151e: 	movl	current_test(%rip), %edx
    00001524: 	leaq	DATAat0x231d2(%rip), %rsi
    0000152b: 	movl	$0x1, %edi
    00001530: 	xorl	%eax, %eax
    00001532: 	callq	__printf_chk@PLT # Offset: 5426
    00001537: 	movl	iterations(%rip), %ecx
.Ltmp1234:
    0000153d: 	addl	$0x1, (%rsp)
    00001541: 	movl	(%rsp), %eax
    00001544: 	cmpl	%ecx, %eax
    00001546: 	jl	.Ltmp1235 # Offset: 5446
.Ltmp1232:
    00001548: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000154f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00001556: 	subq	$0x20, %rax
    0000155a: 	cmpq	%rax, %rbx
    0000155d: 	je	.Ltmp1236 # Offset: 5469
    00001563: 	leaq	0x10(%rbx), %rdi
    00001567: 	movq	0xc8(%rsp), %rsi
    0000156f: 	movq	%rdi, (%rbx)
    00001572: 	movq	0xc0(%rsp), %rcx
    0000157a: 	movq	%rsi, (%rsp)
    0000157e: 	movq	%rcx, %rax
    00001581: 	movq	%rcx, 0x10(%rsp)
    00001586: 	addq	%rsi, %rax
    00001589: 	je	.Ltmp1237 # Offset: 5513
    0000158b: 	testq	%rcx, %rcx
    0000158e: 	je	.Ltmp1238 # Offset: 5518
.Ltmp1237:
    00001594: 	movq	(%rsp), %rax
    00001598: 	movq	%rax, 0x60(%rsp)
    0000159d: 	cmpq	$0xf, %rax
    000015a1: 	ja	.Ltmp1239 # Offset: 5537
    000015a7: 	cmpq	$0x1, (%rsp)
    000015ac: 	jne	.Ltmp1240 # Offset: 5548
    000015b2: 	movq	0x10(%rsp), %rax
    000015b7: 	movzbl	(%rax), %eax
    000015ba: 	movb	%al, 0x10(%rbx)
.Ltmp1378:
    000015bd: 	movq	(%rsp), %rax
    000015c1: 	movq	%rax, 0x8(%rbx)
    000015c5: 	movb	$0x0, (%rdi,%rax)
    000015c9: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000015d0: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000015d7: 	addq	$0x20, %rax
    000015db: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000015e2: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    000015e9: 	je	.Ltmp1241 # Offset: 5609
.Ltmp1353:
    000015ef: 	movq	-0x20(%rax), %rbx
    000015f3: 	callq	clock@PLT # Offset: 5619
    000015f8: 	pxor	%xmm0, %xmm0
    000015fc: 	movq	%rax, end_time(%rip)
    00001603: 	movq	%rbx, %rdi
    00001606: 	subq	start_time(%rip), %rax
    0000160d: 	cvtsi2sd	%rax, %xmm0
    00001612: 	divsd	DATAat0x23450(%rip), %xmm0
    0000161a: 	callq	_Z13record_resultdPKc # Offset: 5658
    0000161f: 	movq	0xc0(%rsp), %rdi
    00001627: 	cmpq	%r13, %rdi
    0000162a: 	je	.Ltmp1242 # Offset: 5674
    0000162c: 	movq	0xd0(%rsp), %rax
    00001634: 	leaq	0x1(%rax), %rsi
    00001638: 	callq	_ZdlPvm@PLT # Offset: 5688
.Ltmp1242:
    0000163d: 	leaq	DATAat0x23362(%rip), %rdx
    00001644: 	movq	%r14, %rsi
    00001647: 	movq	%r12, %rdi
    0000164a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5706
    0000164f: 	callq	clock@PLT # Offset: 5711
    00001654: 	movl	iterations(%rip), %esi
    0000165a: 	movq	%rax, start_time(%rip)
    00001661: 	testl	%esi, %esi
    00001663: 	jle	.Ltmp1243 # Offset: 5731
    00001669: 	movdqa	DATAat0x23780(%rip), %xmm7
    00001671: 	pxor	%xmm3, %xmm3
    00001675: 	movl	$0x0, 0x20(%rsp)
    0000167d: 	leaq	0x2020(%rsp), %rbx
    00001685: 	pcmpgtb	DATAat0x23750(%rip), %xmm3
    0000168d: 	movaps	%xmm7, 0x10(%rsp)
    00001692: 	movdqa	DATAat0x23750(%rip), %xmm7
    0000169a: 	punpcklbw	%xmm3, %xmm7
    0000169e: 	movaps	%xmm3, 0x30(%rsp)
    000016a3: 	movaps	%xmm7, (%rsp)
    000016a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1246:
    000016b0: 	movdqa	DATAat0x23750(%rip), %xmm5
    000016b8: 	movq	%rbp, %rax
    000016bb: 	pxor	%xmm3, %xmm3
    000016bf: 	punpckhbw	0x30(%rsp), %xmm5
    000016c5: 	nopl	(%rax) # Size: 3
.Ltmp1244:
    000016c8: 	movdqa	(%rax), %xmm1
    000016cc: 	pxor	%xmm4, %xmm4
    000016d0: 	addq	$0x10, %rax
    000016d4: 	pcmpgtb	%xmm1, %xmm4
    000016d8: 	movdqa	%xmm1, %xmm2
    000016dc: 	movdqa	%xmm1, %xmm0
    000016e0: 	psraw	$0x7, %xmm1
    000016e5: 	pand	0x10(%rsp), %xmm1
    000016eb: 	punpckhbw	%xmm4, %xmm2
    000016ef: 	punpcklbw	%xmm4, %xmm0
    000016f3: 	pmullw	(%rsp), %xmm0
    000016f8: 	pmullw	%xmm5, %xmm2
    000016fc: 	psrlw	$0x8, %xmm0
    00001701: 	psrlw	$0x8, %xmm2
    00001706: 	packuswb	%xmm2, %xmm0
    0000170a: 	psraw	$0x1, %xmm0
    0000170f: 	pand	DATAat0x23760(%rip), %xmm0
    00001717: 	pxor	DATAat0x23770(%rip), %xmm0
    0000171f: 	psubb	DATAat0x23770(%rip), %xmm0
    00001727: 	paddb	%xmm0, %xmm1
    0000172b: 	paddb	%xmm1, %xmm3
    0000172f: 	cmpq	%rax, %rbx
    00001732: 	jne	.Ltmp1244 # Offset: 5938
    00001734: 	cvttsd2si	init_value(%rip), %edi
    0000173c: 	movl	$0x67, %eax
    00001741: 	movdqa	%xmm3, %xmm0
    00001745: 	psrldq	$0x8, %xmm0
    0000174a: 	pxor	%xmm5, %xmm5
    0000174e: 	paddb	%xmm0, %xmm3
    00001752: 	psadbw	%xmm5, %xmm3
    00001756: 	imulb	%dil
    00001759: 	sarb	$0x7, %dil
    0000175d: 	movd	%xmm3, %edx
    00001761: 	sarw	$0x9, %ax
    00001765: 	subl	%edi, %eax
    00001767: 	shll	$0x6, %eax
    0000176a: 	cmpb	%dl, %al
    0000176c: 	je	.Ltmp1245 # Offset: 5996
    0000176e: 	movl	current_test(%rip), %edx
    00001774: 	leaq	DATAat0x231d2(%rip), %rsi
    0000177b: 	movl	$0x1, %edi
    00001780: 	xorl	%eax, %eax
    00001782: 	callq	__printf_chk@PLT # Offset: 6018
    00001787: 	movl	iterations(%rip), %esi
.Ltmp1245:
    0000178d: 	addl	$0x1, 0x20(%rsp)
    00001792: 	movl	0x20(%rsp), %eax
    00001796: 	cmpl	%esi, %eax
    00001798: 	jl	.Ltmp1246 # Offset: 6040
.Ltmp1243:
    0000179e: 	movq	%r12, %rsi
    000017a1: 	movq	%r15, %rdi
    000017a4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6052
    000017a9: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000017b0: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000017b7: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000017be: 	je	.Ltmp1247 # Offset: 6078
.Ltmp1367:
    000017c4: 	movq	-0x20(%rax), %rbx
    000017c8: 	callq	clock@PLT # Offset: 6088
    000017cd: 	pxor	%xmm0, %xmm0
    000017d1: 	movq	%rax, end_time(%rip)
    000017d8: 	movq	%rbx, %rdi
    000017db: 	subq	start_time(%rip), %rax
    000017e2: 	cvtsi2sd	%rax, %xmm0
    000017e7: 	divsd	DATAat0x23450(%rip), %xmm0
    000017ef: 	callq	_Z13record_resultdPKc # Offset: 6127
    000017f4: 	movq	0xc0(%rsp), %rdi
    000017fc: 	cmpq	%r13, %rdi
    000017ff: 	je	.Ltmp1248 # Offset: 6143
    00001801: 	movq	0xd0(%rsp), %rax
    00001809: 	leaq	0x1(%rax), %rsi
    0000180d: 	callq	_ZdlPvm@PLT # Offset: 6157
.Ltmp1248:
    00001812: 	leaq	DATAat0x23373(%rip), %rdx
    00001819: 	movq	%r14, %rsi
    0000181c: 	movq	%r12, %rdi
    0000181f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6175
    00001824: 	callq	clock@PLT # Offset: 6180
    00001829: 	movl	iterations(%rip), %esi
    0000182f: 	movq	%rax, start_time(%rip)
    00001836: 	testl	%esi, %esi
    00001838: 	jle	.Ltmp1249 # Offset: 6200
    0000183e: 	movdqa	DATAat0x23720(%rip), %xmm5
    00001846: 	movdqa	DATAat0x23700(%rip), %xmm7
    0000184e: 	movl	$0x0, 0x30(%rsp)
    00001856: 	leaq	0x2020(%rsp), %rbx
    0000185e: 	movdqa	DATAat0x23780(%rip), %xmm3
    00001866: 	movaps	%xmm5, (%rsp)
    0000186a: 	pxor	%xmm5, %xmm5
    0000186e: 	pcmpgtb	DATAat0x23700(%rip), %xmm5
    00001876: 	movaps	%xmm3, 0x10(%rsp)
    0000187b: 	punpcklbw	%xmm5, %xmm7
    0000187f: 	movaps	%xmm5, 0x40(%rsp)
    00001884: 	movaps	%xmm7, 0x20(%rsp)
    00001889: 	nopl	(%rax) # Size: 7
.Ltmp1252:
    00001890: 	movdqa	DATAat0x23700(%rip), %xmm4
    00001898: 	movq	%rbp, %rax
    0000189b: 	pxor	%xmm3, %xmm3
    0000189f: 	punpckhbw	0x40(%rsp), %xmm4
    000018a5: 	nopl	(%rax) # Size: 3
.Ltmp1250:
    000018a8: 	movdqa	(%rax), %xmm1
    000018ac: 	pxor	%xmm5, %xmm5
    000018b0: 	movdqa	(%rsp), %xmm6
    000018b5: 	addq	$0x10, %rax
    000018b9: 	pcmpgtb	%xmm1, %xmm5
    000018bd: 	movdqa	%xmm1, %xmm2
    000018c1: 	movdqa	%xmm1, %xmm0
    000018c5: 	punpckhbw	%xmm5, %xmm2
    000018c9: 	punpcklbw	%xmm5, %xmm0
    000018cd: 	pmullw	0x20(%rsp), %xmm0
    000018d3: 	pmullw	%xmm4, %xmm2
    000018d7: 	psrlw	$0x8, %xmm0
    000018dc: 	psrlw	$0x8, %xmm2
    000018e1: 	packuswb	%xmm2, %xmm0
    000018e5: 	paddb	%xmm1, %xmm0
    000018e9: 	psraw	$0x7, %xmm1
    000018ee: 	pand	0x10(%rsp), %xmm1
    000018f4: 	psraw	$0x6, %xmm0
    000018f9: 	pand	DATAat0x23710(%rip), %xmm0
    00001901: 	pxor	%xmm6, %xmm0
    00001905: 	psubb	%xmm6, %xmm0
    00001909: 	paddb	%xmm0, %xmm1
    0000190d: 	paddb	%xmm1, %xmm3
    00001911: 	cmpq	%rbx, %rax
    00001914: 	jne	.Ltmp1250 # Offset: 6420
    00001916: 	cvttsd2si	init_value(%rip), %edi
    0000191e: 	movl	$0xffffff89, %eax
    00001923: 	movdqa	%xmm3, %xmm0
    00001927: 	psrldq	$0x8, %xmm0
    0000192c: 	pxor	%xmm4, %xmm4
    00001930: 	paddb	%xmm0, %xmm3
    00001934: 	psadbw	%xmm4, %xmm3
    00001938: 	imulb	%dil
    0000193b: 	movd	%xmm3, %edx
    0000193f: 	shrw	$0x8, %ax
    00001943: 	addl	%edi, %eax
    00001945: 	sarb	$0x7, %dil
    00001949: 	sarb	$0x6, %al
    0000194c: 	subl	%edi, %eax
    0000194e: 	shll	$0x6, %eax
    00001951: 	cmpb	%dl, %al
    00001953: 	je	.Ltmp1251 # Offset: 6483
    00001955: 	movl	current_test(%rip), %edx
    0000195b: 	leaq	DATAat0x231d2(%rip), %rsi
    00001962: 	movl	$0x1, %edi
    00001967: 	xorl	%eax, %eax
    00001969: 	callq	__printf_chk@PLT # Offset: 6505
    0000196e: 	movl	iterations(%rip), %esi
.Ltmp1251:
    00001974: 	addl	$0x1, 0x30(%rsp)
    00001979: 	movl	0x30(%rsp), %eax
    0000197d: 	cmpl	%esi, %eax
    0000197f: 	jl	.Ltmp1252 # Offset: 6527
.Ltmp1249:
    00001985: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000198c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00001993: 	subq	$0x20, %rax
    00001997: 	cmpq	%rax, %rbx
    0000199a: 	je	.Ltmp1253 # Offset: 6554
    000019a0: 	leaq	0x10(%rbx), %rdi
    000019a4: 	movq	0xc8(%rsp), %rcx
    000019ac: 	movq	%rdi, (%rbx)
    000019af: 	movq	0xc0(%rsp), %rsi
    000019b7: 	movq	%rcx, (%rsp)
    000019bb: 	movq	%rsi, %rax
    000019be: 	movq	%rsi, 0x10(%rsp)
    000019c3: 	addq	%rcx, %rax
    000019c6: 	je	.Ltmp1254 # Offset: 6598
    000019c8: 	testq	%rsi, %rsi
    000019cb: 	je	.Ltmp1255 # Offset: 6603
.Ltmp1254:
    000019d1: 	movq	(%rsp), %rax
    000019d5: 	movq	%rax, 0x60(%rsp)
    000019da: 	cmpq	$0xf, %rax
    000019de: 	ja	.Ltmp1256 # Offset: 6622
    000019e4: 	cmpq	$0x1, (%rsp)
    000019e9: 	jne	.Ltmp1257 # Offset: 6633
    000019ef: 	movq	0x10(%rsp), %rax
    000019f4: 	movzbl	(%rax), %eax
    000019f7: 	movb	%al, 0x10(%rbx)
.Ltmp1374:
    000019fa: 	movq	(%rsp), %rax
    000019fe: 	movq	%rax, 0x8(%rbx)
    00001a02: 	movb	$0x0, (%rdi,%rax)
    00001a06: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001a0d: 	addq	$0x20, %rax
    00001a11: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1366:
    00001a18: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001a1f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001a26: 	je	.Ltmp1258 # Offset: 6694
.Ltmp1365:
    00001a2c: 	movq	-0x20(%rax), %rbx
    00001a30: 	callq	clock@PLT # Offset: 6704
    00001a35: 	pxor	%xmm0, %xmm0
    00001a39: 	movq	%rax, end_time(%rip)
    00001a40: 	movq	%rbx, %rdi
    00001a43: 	subq	start_time(%rip), %rax
    00001a4a: 	cvtsi2sd	%rax, %xmm0
    00001a4f: 	divsd	DATAat0x23450(%rip), %xmm0
    00001a57: 	callq	_Z13record_resultdPKc # Offset: 6743
    00001a5c: 	movq	0xc0(%rsp), %rdi
    00001a64: 	cmpq	%r13, %rdi
    00001a67: 	je	.Ltmp1259 # Offset: 6759
    00001a69: 	movq	0xd0(%rsp), %rax
    00001a71: 	leaq	0x1(%rax), %rsi
    00001a75: 	callq	_ZdlPvm@PLT # Offset: 6773
.Ltmp1259:
    00001a7a: 	leaq	DATAat0x2338e(%rip), %rdx
    00001a81: 	movq	%r14, %rsi
    00001a84: 	movq	%r12, %rdi
    00001a87: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6791
    00001a8c: 	callq	clock@PLT # Offset: 6796
    00001a91: 	movl	iterations(%rip), %ecx
    00001a97: 	movq	%rax, start_time(%rip)
    00001a9e: 	testl	%ecx, %ecx
    00001aa0: 	jle	.Ltmp1260 # Offset: 6816
    00001aa6: 	movdqa	DATAat0x23720(%rip), %xmm7
    00001aae: 	movl	$0x0, 0x10(%rsp)
    00001ab6: 	leaq	0x2020(%rsp), %rbx
    00001abe: 	movaps	%xmm7, (%rsp)
    00001ac2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1263:
    00001ac8: 	movq	%rbp, %rax
    00001acb: 	pxor	%xmm0, %xmm0
    00001acf: 	nop # Size: 1
.Ltmp1261:
    00001ad0: 	paddb	(%rsp), %xmm0
    00001ad5: 	addq	$0x10, %rax
    00001ad9: 	paddb	-0x10(%rax), %xmm0
    00001ade: 	cmpq	%rbx, %rax
    00001ae1: 	jne	.Ltmp1261 # Offset: 6881
    00001ae3: 	cvttsd2si	init_value(%rip), %edx
    00001aeb: 	movdqa	%xmm0, %xmm1
    00001aef: 	pxor	%xmm3, %xmm3
    00001af3: 	psrldq	$0x8, %xmm1
    00001af8: 	paddb	%xmm1, %xmm0
    00001afc: 	psadbw	%xmm3, %xmm0
    00001b00: 	addl	$0x2, %edx
    00001b03: 	movd	%xmm0, %eax
    00001b07: 	shll	$0x6, %edx
    00001b0a: 	cmpb	%dl, %al
    00001b0c: 	je	.Ltmp1262 # Offset: 6924
    00001b0e: 	movl	current_test(%rip), %edx
    00001b14: 	leaq	DATAat0x231d2(%rip), %rsi
    00001b1b: 	movl	$0x1, %edi
    00001b20: 	xorl	%eax, %eax
    00001b22: 	callq	__printf_chk@PLT # Offset: 6946
    00001b27: 	movl	iterations(%rip), %ecx
.Ltmp1262:
    00001b2d: 	addl	$0x1, 0x10(%rsp)
    00001b32: 	movl	0x10(%rsp), %eax
    00001b36: 	cmpl	%ecx, %eax
    00001b38: 	jl	.Ltmp1263 # Offset: 6968
.Ltmp1260:
    00001b3a: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001b41: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00001b48: 	subq	$0x20, %rax
    00001b4c: 	cmpq	%rax, %rbx
    00001b4f: 	je	.Ltmp1264 # Offset: 6991
    00001b55: 	leaq	0x10(%rbx), %rdi
    00001b59: 	movq	0xc8(%rsp), %rsi
    00001b61: 	movq	%rdi, (%rbx)
    00001b64: 	movq	0xc0(%rsp), %rcx
    00001b6c: 	movq	%rsi, (%rsp)
    00001b70: 	movq	%rcx, %rax
    00001b73: 	movq	%rcx, 0x10(%rsp)
    00001b78: 	addq	%rsi, %rax
    00001b7b: 	je	.Ltmp1265 # Offset: 7035
    00001b7d: 	testq	%rcx, %rcx
    00001b80: 	je	.Ltmp1266 # Offset: 7040
.Ltmp1265:
    00001b86: 	movq	(%rsp), %rax
    00001b8a: 	movq	%rax, 0x60(%rsp)
    00001b8f: 	cmpq	$0xf, %rax
    00001b93: 	ja	.Ltmp1267 # Offset: 7059
    00001b99: 	cmpq	$0x1, (%rsp)
    00001b9e: 	jne	.Ltmp1268 # Offset: 7070
    00001ba4: 	movq	0x10(%rsp), %rax
    00001ba9: 	movzbl	(%rax), %eax
    00001bac: 	movb	%al, 0x10(%rbx)
.Ltmp1376:
    00001baf: 	movq	(%rsp), %rax
    00001bb3: 	movq	%rax, 0x8(%rbx)
    00001bb7: 	movb	$0x0, (%rdi,%rax)
    00001bbb: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001bc2: 	addq	$0x20, %rax
    00001bc6: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1364:
    00001bcd: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001bd4: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001bdb: 	je	.Ltmp1269 # Offset: 7131
.Ltmp1363:
    00001be1: 	movq	-0x20(%rax), %rbx
    00001be5: 	callq	clock@PLT # Offset: 7141
    00001bea: 	pxor	%xmm0, %xmm0
    00001bee: 	movq	%rax, end_time(%rip)
    00001bf5: 	movq	%rbx, %rdi
    00001bf8: 	subq	start_time(%rip), %rax
    00001bff: 	cvtsi2sd	%rax, %xmm0
    00001c04: 	divsd	DATAat0x23450(%rip), %xmm0
    00001c0c: 	callq	_Z13record_resultdPKc # Offset: 7180
    00001c11: 	movq	0xc0(%rsp), %rdi
    00001c19: 	cmpq	%r13, %rdi
    00001c1c: 	je	.Ltmp1270 # Offset: 7196
    00001c1e: 	movq	0xd0(%rsp), %rax
    00001c26: 	leaq	0x1(%rax), %rsi
    00001c2a: 	callq	_ZdlPvm@PLT # Offset: 7210
.Ltmp1270:
    00001c2f: 	leaq	DATAat0x233a9(%rip), %rdx
    00001c36: 	movq	%r14, %rsi
    00001c39: 	movq	%r12, %rdi
    00001c3c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7228
    00001c41: 	callq	clock@PLT # Offset: 7233
    00001c46: 	movl	iterations(%rip), %ecx
    00001c4c: 	movl	$0x0, (%rsp)
    00001c53: 	leaq	0x2020(%rsp), %rbx
    00001c5b: 	movq	%rax, start_time(%rip)
    00001c62: 	testl	%ecx, %ecx
    00001c64: 	jle	.Ltmp1271 # Offset: 7268
    00001c66: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1274:
    00001c70: 	movq	%rbp, %rax
    00001c73: 	pxor	%xmm0, %xmm0
    00001c77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1272:
    00001c80: 	paddb	(%rax), %xmm0
    00001c84: 	addq	$0x10, %rax
    00001c88: 	cmpq	%rbx, %rax
    00001c8b: 	jne	.Ltmp1272 # Offset: 7307
    00001c8d: 	movdqa	%xmm0, %xmm1
    00001c91: 	cvttsd2si	init_value(%rip), %edx
    00001c99: 	psrldq	$0x8, %xmm1
    00001c9e: 	paddb	%xmm1, %xmm0
    00001ca2: 	pxor	%xmm1, %xmm1
    00001ca6: 	psadbw	%xmm1, %xmm0
    00001caa: 	movd	%xmm0, %eax
    00001cae: 	shll	$0x6, %edx
    00001cb1: 	cmpb	%al, %dl
    00001cb3: 	je	.Ltmp1273 # Offset: 7347
    00001cb5: 	movl	current_test(%rip), %edx
    00001cbb: 	leaq	DATAat0x231d2(%rip), %rsi
    00001cc2: 	movl	$0x1, %edi
    00001cc7: 	xorl	%eax, %eax
    00001cc9: 	callq	__printf_chk@PLT # Offset: 7369
    00001cce: 	movl	iterations(%rip), %ecx
.Ltmp1273:
    00001cd4: 	addl	$0x1, (%rsp)
    00001cd8: 	movl	(%rsp), %eax
    00001cdb: 	cmpl	%ecx, %eax
    00001cdd: 	jl	.Ltmp1274 # Offset: 7389
.Ltmp1271:
    00001cdf: 	movq	%r12, %rsi
    00001ce2: 	movq	%r15, %rdi
    00001ce5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7397
    00001cea: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001cf1: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001cf8: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001cff: 	je	.Ltmp1275 # Offset: 7423
.Ltmp1362:
    00001d05: 	movq	-0x20(%rax), %rbx
    00001d09: 	callq	clock@PLT # Offset: 7433
    00001d0e: 	pxor	%xmm0, %xmm0
    00001d12: 	movq	%rax, end_time(%rip)
    00001d19: 	movq	%rbx, %rdi
    00001d1c: 	subq	start_time(%rip), %rax
    00001d23: 	cvtsi2sd	%rax, %xmm0
    00001d28: 	divsd	DATAat0x23450(%rip), %xmm0
    00001d30: 	callq	_Z13record_resultdPKc # Offset: 7472
    00001d35: 	movq	0xc0(%rsp), %rdi
    00001d3d: 	cmpq	%r13, %rdi
    00001d40: 	je	.Ltmp1276 # Offset: 7488
    00001d42: 	movq	0xd0(%rsp), %rax
    00001d4a: 	leaq	0x1(%rax), %rsi
    00001d4e: 	callq	_ZdlPvm@PLT # Offset: 7502
.Ltmp1276:
    00001d53: 	leaq	DATAat0x23406(%rip), %rdx
    00001d5a: 	movq	%r14, %rsi
    00001d5d: 	movq	%r12, %rdi
    00001d60: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7520
    00001d65: 	callq	clock@PLT # Offset: 7525
    00001d6a: 	movl	iterations(%rip), %ecx
    00001d70: 	movq	%rax, start_time(%rip)
    00001d77: 	testl	%ecx, %ecx
    00001d79: 	jle	.Ltmp1277 # Offset: 7545
    00001d7f: 	movdqa	DATAat0x236b0(%rip), %xmm3
    00001d87: 	movl	$0x0, 0x10(%rsp)
    00001d8f: 	leaq	0x2020(%rsp), %rbx
    00001d97: 	movaps	%xmm3, (%rsp)
    00001d9b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1280:
    00001da0: 	movq	%rbp, %rax
    00001da3: 	pxor	%xmm0, %xmm0
    00001da7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1278:
    00001db0: 	movdqa	(%rsp), %xmm1
    00001db5: 	pand	(%rax), %xmm1
    00001db9: 	addq	$0x10, %rax
    00001dbd: 	paddb	%xmm1, %xmm0
    00001dc1: 	cmpq	%rbx, %rax
    00001dc4: 	jne	.Ltmp1278 # Offset: 7620
    00001dc6: 	cvttsd2si	init_value(%rip), %edx
    00001dce: 	movdqa	%xmm0, %xmm1
    00001dd2: 	psrldq	$0x8, %xmm1
    00001dd7: 	paddb	%xmm1, %xmm0
    00001ddb: 	pxor	%xmm1, %xmm1
    00001ddf: 	psadbw	%xmm1, %xmm0
    00001de3: 	andl	$0xa, %edx
    00001de6: 	movd	%xmm0, %eax
    00001dea: 	shll	$0x6, %edx
    00001ded: 	cmpb	%dl, %al
    00001def: 	je	.Ltmp1279 # Offset: 7663
    00001df1: 	movl	current_test(%rip), %edx
    00001df7: 	leaq	DATAat0x231d2(%rip), %rsi
    00001dfe: 	movl	$0x1, %edi
    00001e03: 	xorl	%eax, %eax
    00001e05: 	callq	__printf_chk@PLT # Offset: 7685
    00001e0a: 	movl	iterations(%rip), %ecx
.Ltmp1279:
    00001e10: 	addl	$0x1, 0x10(%rsp)
    00001e15: 	movl	0x10(%rsp), %eax
    00001e19: 	cmpl	%ecx, %eax
    00001e1b: 	jl	.Ltmp1280 # Offset: 7707
.Ltmp1277:
    00001e1d: 	movq	%r12, %rsi
    00001e20: 	movq	%r15, %rdi
    00001e23: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7715
    00001e28: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001e2f: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001e36: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001e3d: 	je	.Ltmp1281 # Offset: 7741
.Ltmp1361:
    00001e43: 	movq	-0x20(%rax), %rbx
    00001e47: 	callq	clock@PLT # Offset: 7751
    00001e4c: 	pxor	%xmm0, %xmm0
    00001e50: 	movq	%rax, end_time(%rip)
    00001e57: 	movq	%rbx, %rdi
    00001e5a: 	subq	start_time(%rip), %rax
    00001e61: 	cvtsi2sd	%rax, %xmm0
    00001e66: 	divsd	DATAat0x23450(%rip), %xmm0
    00001e6e: 	callq	_Z13record_resultdPKc # Offset: 7790
    00001e73: 	movq	0xc0(%rsp), %rdi
    00001e7b: 	cmpq	%r13, %rdi
    00001e7e: 	je	.Ltmp1282 # Offset: 7806
    00001e80: 	movq	0xd0(%rsp), %rax
    00001e88: 	leaq	0x1(%rax), %rsi
    00001e8c: 	callq	_ZdlPvm@PLT # Offset: 7820
.Ltmp1282:
    00001e91: 	leaq	DATAat0x233fd(%rip), %rdx
    00001e98: 	movq	%r14, %rsi
    00001e9b: 	movq	%r12, %rdi
    00001e9e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7838
    00001ea3: 	callq	clock@PLT # Offset: 7843
    00001ea8: 	movl	iterations(%rip), %ecx
    00001eae: 	movq	%rax, start_time(%rip)
    00001eb5: 	testl	%ecx, %ecx
    00001eb7: 	jle	.Ltmp1283 # Offset: 7863
    00001ebd: 	movl	$0x0, (%rsp)
    00001ec4: 	leaq	0x2020(%rsp), %rbx
    00001ecc: 	nopl	(%rax) # Size: 4
.Ltmp1286:
    00001ed0: 	movq	%rbp, %rax
    00001ed3: 	pxor	%xmm0, %xmm0
    00001ed7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1284:
    00001ee0: 	movdqa	DATAat0x23730(%rip), %xmm1
    00001ee8: 	pand	(%rax), %xmm1
    00001eec: 	addq	$0x10, %rax
    00001ef0: 	paddb	%xmm1, %xmm0
    00001ef4: 	cmpq	%rax, %rbx
    00001ef7: 	jne	.Ltmp1284 # Offset: 7927
    00001ef9: 	cvttsd2si	init_value(%rip), %edx
    00001f01: 	movdqa	%xmm0, %xmm1
    00001f05: 	psrldq	$0x8, %xmm1
    00001f0a: 	paddb	%xmm1, %xmm0
    00001f0e: 	pxor	%xmm1, %xmm1
    00001f12: 	psadbw	%xmm1, %xmm0
    00001f16: 	andl	$0xe, %edx
    00001f19: 	movd	%xmm0, %eax
    00001f1d: 	shll	$0x6, %edx
    00001f20: 	cmpb	%al, %dl
    00001f22: 	je	.Ltmp1285 # Offset: 7970
    00001f24: 	movl	current_test(%rip), %edx
    00001f2a: 	leaq	DATAat0x231d2(%rip), %rsi
    00001f31: 	movl	$0x1, %edi
    00001f36: 	xorl	%eax, %eax
    00001f38: 	callq	__printf_chk@PLT # Offset: 7992
    00001f3d: 	movl	iterations(%rip), %ecx
.Ltmp1285:
    00001f43: 	addl	$0x1, (%rsp)
    00001f47: 	movl	(%rsp), %eax
    00001f4a: 	cmpl	%ecx, %eax
    00001f4c: 	jl	.Ltmp1286 # Offset: 8012
.Ltmp1283:
    00001f4e: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001f55: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00001f5c: 	subq	$0x20, %rax
    00001f60: 	cmpq	%rax, %rbx
    00001f63: 	je	.Ltmp1287 # Offset: 8035
    00001f69: 	leaq	0x10(%rbx), %rdi
    00001f6d: 	movq	0xc8(%rsp), %rcx
    00001f75: 	movq	%rdi, (%rbx)
    00001f78: 	movq	0xc0(%rsp), %rsi
    00001f80: 	movq	%rcx, (%rsp)
    00001f84: 	movq	%rsi, %rax
    00001f87: 	movq	%rsi, 0x10(%rsp)
    00001f8c: 	addq	%rcx, %rax
    00001f8f: 	je	.Ltmp1288 # Offset: 8079
    00001f91: 	testq	%rsi, %rsi
    00001f94: 	je	.Ltmp1289 # Offset: 8084
.Ltmp1288:
    00001f9a: 	movq	(%rsp), %rax
    00001f9e: 	movq	%rax, 0x60(%rsp)
    00001fa3: 	cmpq	$0xf, %rax
    00001fa7: 	ja	.Ltmp1290 # Offset: 8103
    00001fad: 	cmpq	$0x1, (%rsp)
    00001fb2: 	jne	.Ltmp1291 # Offset: 8114
    00001fb8: 	movq	0x10(%rsp), %rax
    00001fbd: 	movzbl	(%rax), %eax
    00001fc0: 	movb	%al, 0x10(%rbx)
.Ltmp1380:
    00001fc3: 	movq	(%rsp), %rax
    00001fc7: 	movq	%rax, 0x8(%rbx)
    00001fcb: 	movb	$0x0, (%rdi,%rax)
    00001fcf: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001fd6: 	addq	$0x20, %rax
    00001fda: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1360:
    00001fe1: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001fe8: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001fef: 	je	.Ltmp1292 # Offset: 8175
.Ltmp1359:
    00001ff5: 	movq	-0x20(%rax), %rbx
    00001ff9: 	callq	clock@PLT # Offset: 8185
    00001ffe: 	pxor	%xmm0, %xmm0
    00002002: 	movq	%rax, end_time(%rip)
    00002009: 	movq	%rbx, %rdi
    0000200c: 	subq	start_time(%rip), %rax
    00002013: 	cvtsi2sd	%rax, %xmm0
    00002018: 	divsd	DATAat0x23450(%rip), %xmm0
    00002020: 	callq	_Z13record_resultdPKc # Offset: 8224
    00002025: 	movq	0xc0(%rsp), %rdi
    0000202d: 	cmpq	%r13, %rdi
    00002030: 	je	.Ltmp1293 # Offset: 8240
    00002032: 	movq	0xd0(%rsp), %rax
    0000203a: 	leaq	0x1(%rax), %rsi
    0000203e: 	callq	_ZdlPvm@PLT # Offset: 8254
.Ltmp1293:
    00002043: 	leaq	DATAat0x2341d(%rip), %rdx
    0000204a: 	movq	%r14, %rsi
    0000204d: 	movq	%r12, %rdi
    00002050: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8272
    00002055: 	callq	clock@PLT # Offset: 8277
    0000205a: 	movl	iterations(%rip), %ecx
    00002060: 	movq	%rax, start_time(%rip)
    00002067: 	testl	%ecx, %ecx
    00002069: 	jle	.Ltmp1294 # Offset: 8297
    0000206f: 	movdqa	DATAat0x236b0(%rip), %xmm5
    00002077: 	movl	$0x0, 0x10(%rsp)
    0000207f: 	leaq	0x2020(%rsp), %rbx
    00002087: 	movaps	%xmm5, (%rsp)
    0000208b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1297:
    00002090: 	movq	%rbp, %rax
    00002093: 	pxor	%xmm0, %xmm0
    00002097: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1295:
    000020a0: 	movdqa	(%rsp), %xmm1
    000020a5: 	por	(%rax), %xmm1
    000020a9: 	addq	$0x10, %rax
    000020ad: 	paddb	%xmm1, %xmm0
    000020b1: 	cmpq	%rbx, %rax
    000020b4: 	jne	.Ltmp1295 # Offset: 8372
    000020b6: 	cvttsd2si	init_value(%rip), %edx
    000020be: 	movdqa	%xmm0, %xmm1
    000020c2: 	psrldq	$0x8, %xmm1
    000020c7: 	paddb	%xmm1, %xmm0
    000020cb: 	pxor	%xmm1, %xmm1
    000020cf: 	psadbw	%xmm1, %xmm0
    000020d3: 	orl	$0xa, %edx
    000020d6: 	movd	%xmm0, %eax
    000020da: 	shll	$0x6, %edx
    000020dd: 	cmpb	%al, %dl
    000020df: 	je	.Ltmp1296 # Offset: 8415
    000020e1: 	movl	current_test(%rip), %edx
    000020e7: 	leaq	DATAat0x231d2(%rip), %rsi
    000020ee: 	movl	$0x1, %edi
    000020f3: 	xorl	%eax, %eax
    000020f5: 	callq	__printf_chk@PLT # Offset: 8437
    000020fa: 	movl	iterations(%rip), %ecx
.Ltmp1296:
    00002100: 	addl	$0x1, 0x10(%rsp)
    00002105: 	movl	0x10(%rsp), %eax
    00002109: 	cmpl	%ecx, %eax
    0000210b: 	jl	.Ltmp1297 # Offset: 8459
.Ltmp1294:
    0000210d: 	movq	%r12, %rsi
    00002110: 	movq	%r15, %rdi
    00002113: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8467
    00002118: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000211f: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00002126: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000212d: 	je	.Ltmp1298 # Offset: 8493
.Ltmp1358:
    00002133: 	movq	-0x20(%rax), %rbx
    00002137: 	callq	clock@PLT # Offset: 8503
    0000213c: 	pxor	%xmm0, %xmm0
    00002140: 	movq	%rax, end_time(%rip)
    00002147: 	movq	%rbx, %rdi
    0000214a: 	subq	start_time(%rip), %rax
    00002151: 	cvtsi2sd	%rax, %xmm0
    00002156: 	divsd	DATAat0x23450(%rip), %xmm0
    0000215e: 	callq	_Z13record_resultdPKc # Offset: 8542
    00002163: 	movq	0xc0(%rsp), %rdi
    0000216b: 	cmpq	%r13, %rdi
    0000216e: 	je	.Ltmp1299 # Offset: 8558
    00002170: 	movq	0xd0(%rsp), %rax
    00002178: 	leaq	0x1(%rax), %rsi
    0000217c: 	callq	_ZdlPvm@PLT # Offset: 8572
.Ltmp1299:
    00002181: 	leaq	DATAat0x23414(%rip), %rdx
    00002188: 	movq	%r14, %rsi
    0000218b: 	movq	%r12, %rdi
    0000218e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8590
    00002193: 	callq	clock@PLT # Offset: 8595
    00002198: 	movl	iterations(%rip), %edx
    0000219e: 	movq	%rax, start_time(%rip)
    000021a5: 	testl	%edx, %edx
    000021a7: 	jle	.Ltmp1300 # Offset: 8615
    000021ad: 	movl	$0x0, (%rsp)
    000021b4: 	leaq	0x2020(%rsp), %rbx
    000021bc: 	nopl	(%rax) # Size: 4
.Ltmp1303:
    000021c0: 	movq	%rbp, %rax
    000021c3: 	pxor	%xmm0, %xmm0
    000021c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1301:
    000021d0: 	movdqa	DATAat0x236f0(%rip), %xmm1
    000021d8: 	por	(%rax), %xmm1
    000021dc: 	addq	$0x10, %rax
    000021e0: 	paddb	%xmm1, %xmm0
    000021e4: 	cmpq	%rax, %rbx
    000021e7: 	jne	.Ltmp1301 # Offset: 8679
    000021e9: 	movdqa	%xmm0, %xmm1
    000021ed: 	psrldq	$0x8, %xmm1
    000021f2: 	paddb	%xmm1, %xmm0
    000021f6: 	pxor	%xmm1, %xmm1
    000021fa: 	psadbw	%xmm1, %xmm0
    000021fe: 	movd	%xmm0, %eax
    00002202: 	cmpb	$-0x40, %al
    00002204: 	je	.Ltmp1302 # Offset: 8708
    00002206: 	movl	current_test(%rip), %edx
    0000220c: 	leaq	DATAat0x231d2(%rip), %rsi
    00002213: 	movl	$0x1, %edi
    00002218: 	xorl	%eax, %eax
    0000221a: 	callq	__printf_chk@PLT # Offset: 8730
    0000221f: 	movl	iterations(%rip), %edx
.Ltmp1302:
    00002225: 	addl	$0x1, (%rsp)
    00002229: 	movl	(%rsp), %eax
    0000222c: 	cmpl	%edx, %eax
    0000222e: 	jl	.Ltmp1303 # Offset: 8750
.Ltmp1300:
    00002230: 	movq	%r12, %rsi
    00002233: 	movq	%r15, %rdi
    00002236: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8758
    0000223b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002242: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00002249: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002250: 	je	.Ltmp1304 # Offset: 8784
.Ltmp1357:
    00002256: 	movq	-0x20(%rax), %rbx
    0000225a: 	callq	clock@PLT # Offset: 8794
    0000225f: 	pxor	%xmm0, %xmm0
    00002263: 	movq	%rax, end_time(%rip)
    0000226a: 	movq	%rbx, %rdi
    0000226d: 	subq	start_time(%rip), %rax
    00002274: 	cvtsi2sd	%rax, %xmm0
    00002279: 	divsd	DATAat0x23450(%rip), %xmm0
    00002281: 	callq	_Z13record_resultdPKc # Offset: 8833
    00002286: 	movq	0xc0(%rsp), %rdi
    0000228e: 	cmpq	%r13, %rdi
    00002291: 	je	.Ltmp1305 # Offset: 8849
    00002293: 	movq	0xd0(%rsp), %rax
    0000229b: 	leaq	0x1(%rax), %rsi
    0000229f: 	callq	_ZdlPvm@PLT # Offset: 8863
.Ltmp1305:
    000022a4: 	leaq	DATAat0x23433(%rip), %rdx
    000022ab: 	movq	%r14, %rsi
    000022ae: 	movq	%r12, %rdi
    000022b1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8881
    000022b6: 	callq	clock@PLT # Offset: 8886
    000022bb: 	movl	iterations(%rip), %ecx
    000022c1: 	movq	%rax, start_time(%rip)
    000022c8: 	testl	%ecx, %ecx
    000022ca: 	jle	.Ltmp1306 # Offset: 8906
    000022d0: 	movdqa	DATAat0x236b0(%rip), %xmm7
    000022d8: 	movl	$0x0, 0x10(%rsp)
    000022e0: 	leaq	0x2020(%rsp), %rbx
    000022e8: 	movaps	%xmm7, (%rsp)
    000022ec: 	nopl	(%rax) # Size: 4
.Ltmp1309:
    000022f0: 	movq	%rbp, %rax
    000022f3: 	pxor	%xmm0, %xmm0
    000022f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1307:
    00002300: 	movdqa	(%rsp), %xmm1
    00002305: 	pxor	(%rax), %xmm1
    00002309: 	addq	$0x10, %rax
    0000230d: 	paddb	%xmm1, %xmm0
    00002311: 	cmpq	%rbx, %rax
    00002314: 	jne	.Ltmp1307 # Offset: 8980
    00002316: 	cvttsd2si	init_value(%rip), %edx
    0000231e: 	movdqa	%xmm0, %xmm1
    00002322: 	psrldq	$0x8, %xmm1
    00002327: 	paddb	%xmm1, %xmm0
    0000232b: 	pxor	%xmm1, %xmm1
    0000232f: 	psadbw	%xmm1, %xmm0
    00002333: 	xorl	$0xa, %edx
    00002336: 	movd	%xmm0, %eax
    0000233a: 	shll	$0x6, %edx
    0000233d: 	cmpb	%dl, %al
    0000233f: 	je	.Ltmp1308 # Offset: 9023
    00002341: 	movl	current_test(%rip), %edx
    00002347: 	leaq	DATAat0x231d2(%rip), %rsi
    0000234e: 	movl	$0x1, %edi
    00002353: 	xorl	%eax, %eax
    00002355: 	callq	__printf_chk@PLT # Offset: 9045
    0000235a: 	movl	iterations(%rip), %ecx
.Ltmp1308:
    00002360: 	addl	$0x1, 0x10(%rsp)
    00002365: 	movl	0x10(%rsp), %eax
    00002369: 	cmpl	%ecx, %eax
    0000236b: 	jl	.Ltmp1309 # Offset: 9067
.Ltmp1306:
    0000236d: 	movq	%r12, %rsi
    00002370: 	movq	%r15, %rdi
    00002373: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9075
    00002378: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000237f: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00002386: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000238d: 	je	.Ltmp1310 # Offset: 9101
.Ltmp1356:
    00002393: 	movq	-0x20(%rax), %rbx
    00002397: 	callq	clock@PLT # Offset: 9111
    0000239c: 	pxor	%xmm0, %xmm0
    000023a0: 	movq	%rax, end_time(%rip)
    000023a7: 	movq	%rbx, %rdi
    000023aa: 	subq	start_time(%rip), %rax
    000023b1: 	cvtsi2sd	%rax, %xmm0
    000023b6: 	divsd	DATAat0x23450(%rip), %xmm0
    000023be: 	callq	_Z13record_resultdPKc # Offset: 9150
    000023c3: 	movq	0xc0(%rsp), %rdi
    000023cb: 	cmpq	%r13, %rdi
    000023ce: 	je	.Ltmp1311 # Offset: 9166
    000023d0: 	movq	0xd0(%rsp), %rax
    000023d8: 	leaq	0x1(%rax), %rsi
    000023dc: 	callq	_ZdlPvm@PLT # Offset: 9180
.Ltmp1311:
    000023e1: 	leaq	DATAat0x2342a(%rip), %rdx
    000023e8: 	movq	%r14, %rsi
    000023eb: 	movq	%r12, %rdi
    000023ee: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9198
    000023f3: 	callq	clock@PLT # Offset: 9203
    000023f8: 	movl	iterations(%rip), %ecx
    000023fe: 	movq	%rax, start_time(%rip)
    00002405: 	testl	%ecx, %ecx
    00002407: 	jle	.Ltmp1312 # Offset: 9223
    0000240d: 	movl	$0x0, (%rsp)
    00002414: 	leaq	0x2020(%rsp), %rbx
    0000241c: 	nopl	(%rax) # Size: 4
.Ltmp1315:
    00002420: 	movq	%rbp, %rax
    00002423: 	pxor	%xmm0, %xmm0
    00002427: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1313:
    00002430: 	movdqa	DATAat0x23740(%rip), %xmm1
    00002438: 	pxor	(%rax), %xmm1
    0000243c: 	addq	$0x10, %rax
    00002440: 	paddb	%xmm1, %xmm0
    00002444: 	cmpq	%rbx, %rax
    00002447: 	jne	.Ltmp1313 # Offset: 9287
    00002449: 	cvttsd2si	init_value(%rip), %edx
    00002451: 	movdqa	%xmm0, %xmm1
    00002455: 	psrldq	$0x8, %xmm1
    0000245a: 	paddb	%xmm1, %xmm0
    0000245e: 	pxor	%xmm1, %xmm1
    00002462: 	psadbw	%xmm1, %xmm0
    00002466: 	xorl	$0x31, %edx
    00002469: 	movd	%xmm0, %eax
    0000246d: 	shll	$0x6, %edx
    00002470: 	cmpb	%al, %dl
    00002472: 	je	.Ltmp1314 # Offset: 9330
    00002474: 	movl	current_test(%rip), %edx
    0000247a: 	leaq	DATAat0x231d2(%rip), %rsi
    00002481: 	movl	$0x1, %edi
    00002486: 	xorl	%eax, %eax
    00002488: 	callq	__printf_chk@PLT # Offset: 9352
    0000248d: 	movl	iterations(%rip), %ecx
.Ltmp1314:
    00002493: 	addl	$0x1, (%rsp)
    00002497: 	movl	(%rsp), %eax
    0000249a: 	cmpl	%ecx, %eax
    0000249c: 	jl	.Ltmp1315 # Offset: 9372
.Ltmp1312:
    0000249e: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000024a5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    000024ac: 	subq	$0x20, %rax
    000024b0: 	cmpq	%rax, %rbx
    000024b3: 	je	.Ltmp1316 # Offset: 9395
    000024b9: 	leaq	0x10(%rbx), %rdi
    000024bd: 	movq	0xc8(%rsp), %r15
    000024c5: 	movq	%rdi, (%rbx)
    000024c8: 	movq	0xc0(%rsp), %rbp
    000024d0: 	movq	%rbp, %rax
    000024d3: 	addq	%r15, %rax
    000024d6: 	je	.Ltmp1317 # Offset: 9430
    000024d8: 	testq	%rbp, %rbp
    000024db: 	je	.Ltmp1318 # Offset: 9435
.Ltmp1317:
    000024e1: 	movq	%r15, 0x60(%rsp)
    000024e6: 	cmpq	$0xf, %r15
    000024ea: 	ja	.Ltmp1319 # Offset: 9450
    000024f0: 	cmpq	$0x1, %r15
    000024f4: 	jne	.Ltmp1320 # Offset: 9460
    000024fa: 	movzbl	(%rbp), %eax
    000024fe: 	movb	%al, 0x10(%rbx)
.Ltmp1387:
    00002501: 	movq	%r15, 0x8(%rbx)
    00002505: 	movb	$0x0, (%rdi,%r15)
    0000250a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002511: 	addq	$0x20, %rax
    00002515: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1355:
    0000251c: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002523: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000252a: 	je	.Ltmp1321 # Offset: 9514
.Ltmp1351:
    00002530: 	movq	-0x20(%rax), %rbp
    00002534: 	callq	clock@PLT # Offset: 9524
    00002539: 	pxor	%xmm0, %xmm0
    0000253d: 	movq	%rax, end_time(%rip)
    00002544: 	movq	%rbp, %rdi
    00002547: 	subq	start_time(%rip), %rax
    0000254e: 	cvtsi2sd	%rax, %xmm0
    00002553: 	divsd	DATAat0x23450(%rip), %xmm0
    0000255b: 	callq	_Z13record_resultdPKc # Offset: 9563
    00002560: 	movq	0xc0(%rsp), %rdi
    00002568: 	cmpq	%r13, %rdi
    0000256b: 	je	.Ltmp1322 # Offset: 9579
    0000256d: 	movq	0xd0(%rsp), %rax
    00002575: 	leaq	0x1(%rax), %rsi
    00002579: 	callq	_ZdlPvm@PLT # Offset: 9593
.Ltmp1322:
    0000257e: 	leaq	DATAat0x232ac(%rip), %rdx
    00002585: 	movq	%r14, %rsi
    00002588: 	movq	%r12, %rdi
    0000258b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9611
    00002590: 	movl	iterations(%rip), %edx
    00002596: 	xorl	%r8d, %r8d
    00002599: 	xorl	%ecx, %ecx
    0000259b: 	movl	$0x1f40, %esi
    000025a0: 	movq	0xc0(%rsp), %rdi
    000025a8: 	callq	_Z9summarizePKciiii # Offset: 9640
    000025ad: 	movl	base_iterations(%rip), %eax
    000025b3: 	movq	0xc0(%rsp), %rdi
    000025bb: 	movl	%eax, iterations(%rip)
    000025c1: 	cmpq	%r13, %rdi
    000025c4: 	je	.Ltmp1323 # Offset: 9668
    000025c6: 	movq	0xd0(%rsp), %rax
    000025ce: 	leaq	0x1(%rax), %rsi
    000025d2: 	callq	_ZdlPvm@PLT # Offset: 9682
.Ltmp1323:
    000025d7: 	movq	0xa0(%rsp), %rdi
    000025df: 	leaq	0xb0(%rsp), %rax
    000025e7: 	cmpq	%rax, %rdi
    000025ea: 	je	.Ltmp1324 # Offset: 9706
    000025ec: 	movq	0xb0(%rsp), %rax
    000025f4: 	leaq	0x1(%rax), %rsi
    000025f8: 	callq	_ZdlPvm@PLT # Offset: 9720
.Ltmp1324:
    000025fd: 	movq	0x80(%rsp), %rdi
    00002605: 	cmpq	0x58(%rsp), %rdi
    0000260a: 	je	.Ltmp1325 # Offset: 9738
    0000260c: 	movq	0x90(%rsp), %rax
    00002614: 	leaq	0x1(%rax), %rsi
    00002618: 	callq	_ZdlPvm@PLT # Offset: 9752
.Ltmp1325:
    0000261d: 	movq	0x2028(%rsp), %rax
    00002625: 	subq	%fs:0x28, %rax
    0000262e: 	jne	.Ltmp1326 # Offset: 9774
    00002634: 	addq	$0x2038, %rsp
    0000263b: 	popq	%rbx
    0000263c: 	popq	%rbp
    0000263d: 	popq	%r12
    0000263f: 	popq	%r13
    00002641: 	popq	%r14
    00002643: 	popq	%r15
    00002645: 	retq # Offset: 9797
.Ltmp1140:
    00002646: 	movq	0x50(%rsp), %rsi
    0000264b: 	xorl	%edx, %edx
    0000264d: 	movq	%rbx, %rdi
    00002650: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9808
    00002655: 	movq	%rax, (%rbx)
    00002658: 	movq	%rax, %rdi
    0000265b: 	movq	0x60(%rsp), %rax
    00002660: 	movq	%rax, 0x10(%rbx)
.Ltmp1386:
    00002664: 	movq	(%rsp), %rdx
    00002668: 	movq	0x10(%rsp), %rsi
    0000266d: 	callq	memcpy@PLT # Offset: 9837
    00002672: 	movq	0x60(%rsp), %rax
    00002677: 	movq	(%rbx), %rdi
    0000267a: 	movq	%rax, (%rsp)
    0000267e: 	jmp	.Ltmp1327 # Offset: 9854
    00002683: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1228:
    00002688: 	movl	current_test(%rip), %edx
    0000268e: 	leaq	DATAat0x231d2(%rip), %rsi
    00002695: 	movl	$0x1, %edi
    0000269a: 	xorl	%eax, %eax
    0000269c: 	callq	__printf_chk@PLT # Offset: 9884
    000026a1: 	movl	iterations(%rip), %edx
    000026a7: 	jmp	.Ltmp1328 # Offset: 9895
    000026ac: 	nopl	(%rax) # Size: 4
.Ltmp1222:
    000026b0: 	movl	current_test(%rip), %edx
    000026b6: 	leaq	DATAat0x231d2(%rip), %rsi
    000026bd: 	movl	$0x1, %edi
    000026c2: 	xorl	%eax, %eax
    000026c4: 	callq	__printf_chk@PLT # Offset: 9924
    000026c9: 	movl	iterations(%rip), %edx
    000026cf: 	jmp	.Ltmp1329 # Offset: 9935
.Ltmp1218:
    000026d4: 	movq	-0x8(%rdx), %rax
    000026d8: 	addq	$0x200, %rax
    000026de: 	jmp	.Ltmp1330 # Offset: 9950
.Ltmp1142:
    000026e3: 	movq	-0x8(%rdx), %rax
    000026e7: 	addq	$0x200, %rax
    000026ed: 	jmp	.Ltmp1331 # Offset: 9965
.Ltmp1212:
    000026f2: 	movq	-0x8(%rdx), %rax
    000026f6: 	addq	$0x200, %rax
    000026fc: 	jmp	.Ltmp1332 # Offset: 9980
.Ltmp1206:
    00002701: 	movq	-0x8(%rdx), %rax
    00002705: 	addq	$0x200, %rax
    0000270b: 	jmp	.Ltmp1333 # Offset: 9995
.Ltmp1200:
    00002710: 	movq	-0x8(%rdx), %rax
    00002714: 	addq	$0x200, %rax
    0000271a: 	jmp	.Ltmp1334 # Offset: 10010
.Ltmp1178:
    0000271f: 	movq	-0x8(%rdx), %rax
    00002723: 	addq	$0x200, %rax
    00002729: 	jmp	.Ltmp1335 # Offset: 10025
.Ltmp1176:
    0000272e: 	movq	-0x8(%rdx), %rax
    00002732: 	addq	$0x200, %rax
    00002738: 	jmp	.Ltmp1336 # Offset: 10040
.Ltmp1171:
    0000273d: 	movq	%r12, %rsi
    00002740: 	movq	%r15, %rdi
    00002743: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10051
    00002748: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000274f: 	jmp	.Ltmp1337 # Offset: 10063
.Ltmp1169:
    00002754: 	movq	-0x8(%rdx), %rax
    00002758: 	addq	$0x200, %rax
    0000275e: 	jmp	.Ltmp1338 # Offset: 10078
.Ltmp1167:
    00002763: 	movq	-0x8(%rdx), %rax
    00002767: 	addq	$0x200, %rax
    0000276d: 	jmp	.Ltmp1339 # Offset: 10093
.Ltmp1162:
    00002772: 	movq	%r12, %rsi
    00002775: 	movq	%r15, %rdi
    00002778: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10104
    0000277d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002784: 	jmp	.Ltmp1340 # Offset: 10116
.Ltmp1160:
    00002789: 	movq	-0x8(%rdx), %rax
    0000278d: 	addq	$0x200, %rax
    00002793: 	jmp	.Ltmp1341 # Offset: 10131
.Ltmp1155:
    00002798: 	movq	%r12, %rsi
    0000279b: 	movq	%r15, %rdi
    0000279e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10142
    000027a3: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000027aa: 	jmp	.Ltmp1342 # Offset: 10154
.Ltmp1153:
    000027af: 	movq	-0x8(%rdx), %rax
    000027b3: 	addq	$0x200, %rax
    000027b9: 	jmp	.Ltmp1343 # Offset: 10169
.Ltmp1137:
    000027be: 	movq	%r12, %rsi
    000027c1: 	movq	%r15, %rdi
    000027c4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10180
    000027c9: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000027d0: 	jmp	.Ltmp1344 # Offset: 10192
.Ltmp1135:
    000027d5: 	movq	-0x8(%rdx), %rax
    000027d9: 	addq	$0x200, %rax
    000027df: 	jmp	.Ltmp1345 # Offset: 10207
.Ltmp1133:
    000027e4: 	movq	-0x8(%rdx), %rax
    000027e8: 	addq	$0x200, %rax
    000027ee: 	jmp	.Ltmp1346 # Offset: 10222
.Ltmp1131:
    000027f3: 	movq	-0x8(%rdx), %rax
    000027f7: 	addq	$0x200, %rax
    000027fd: 	jmp	.Ltmp1347 # Offset: 10237
.Ltmp1148:
    00002802: 	movq	%r12, %rsi
    00002805: 	movq	%r15, %rdi
    00002808: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10248
    0000280d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002814: 	jmp	.Ltmp1348 # Offset: 10260
.Ltmp1146:
    00002819: 	movq	-0x8(%rdx), %rax
    0000281d: 	addq	$0x200, %rax
    00002823: 	jmp	.Ltmp1349 # Offset: 10275
.Ltmp1144:
    00002828: 	movq	-0x8(%rdx), %rax
    0000282c: 	addq	$0x200, %rax
    00002832: 	jmp	.Ltmp1350 # Offset: 10290
.Ltmp1321:
    00002837: 	movq	-0x8(%rdx), %rax
    0000283b: 	addq	$0x200, %rax
    00002841: 	jmp	.Ltmp1351 # Offset: 10305
.Ltmp1224:
    00002846: 	movq	-0x8(%rdx), %rax
    0000284a: 	addq	$0x200, %rax
    00002850: 	jmp	.Ltmp1352 # Offset: 10320
.Ltmp1236:
    00002855: 	movq	%r12, %rsi
    00002858: 	movq	%r15, %rdi
    0000285b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10331
    00002860: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002867: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000286e: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002875: 	jne	.Ltmp1353 # Offset: 10357
.Ltmp1241:
    0000287b: 	movq	-0x8(%rdx), %rax
    0000287f: 	addq	$0x200, %rax
    00002885: 	jmp	.Ltmp1353 # Offset: 10373
.Ltmp1230:
    0000288a: 	movq	-0x8(%rdx), %rax
    0000288e: 	addq	$0x200, %rax
    00002894: 	jmp	.Ltmp1354 # Offset: 10388
.Ltmp1316:
    00002899: 	movq	%r12, %rsi
    0000289c: 	movq	%r15, %rdi
    0000289f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10399
    000028a4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000028ab: 	jmp	.Ltmp1355 # Offset: 10411
.Ltmp1310:
    000028b0: 	movq	-0x8(%rdx), %rax
    000028b4: 	addq	$0x200, %rax
    000028ba: 	jmp	.Ltmp1356 # Offset: 10426
.Ltmp1304:
    000028bf: 	movq	-0x8(%rdx), %rax
    000028c3: 	addq	$0x200, %rax
    000028c9: 	jmp	.Ltmp1357 # Offset: 10441
.Ltmp1298:
    000028ce: 	movq	-0x8(%rdx), %rax
    000028d2: 	addq	$0x200, %rax
    000028d8: 	jmp	.Ltmp1358 # Offset: 10456
.Ltmp1292:
    000028dd: 	movq	-0x8(%rdx), %rax
    000028e1: 	addq	$0x200, %rax
    000028e7: 	jmp	.Ltmp1359 # Offset: 10471
.Ltmp1287:
    000028ec: 	movq	%r12, %rsi
    000028ef: 	movq	%r15, %rdi
    000028f2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10482
    000028f7: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000028fe: 	jmp	.Ltmp1360 # Offset: 10494
.Ltmp1281:
    00002903: 	movq	-0x8(%rdx), %rax
    00002907: 	addq	$0x200, %rax
    0000290d: 	jmp	.Ltmp1361 # Offset: 10509
.Ltmp1275:
    00002912: 	movq	-0x8(%rdx), %rax
    00002916: 	addq	$0x200, %rax
    0000291c: 	jmp	.Ltmp1362 # Offset: 10524
.Ltmp1269:
    00002921: 	movq	-0x8(%rdx), %rax
    00002925: 	addq	$0x200, %rax
    0000292b: 	jmp	.Ltmp1363 # Offset: 10539
.Ltmp1264:
    00002930: 	movq	%r12, %rsi
    00002933: 	movq	%r15, %rdi
    00002936: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10550
    0000293b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002942: 	jmp	.Ltmp1364 # Offset: 10562
.Ltmp1258:
    00002947: 	movq	-0x8(%rdx), %rax
    0000294b: 	addq	$0x200, %rax
    00002951: 	jmp	.Ltmp1365 # Offset: 10577
.Ltmp1253:
    00002956: 	movq	%r12, %rsi
    00002959: 	movq	%r15, %rdi
    0000295c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10588
    00002961: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002968: 	jmp	.Ltmp1366 # Offset: 10600
.Ltmp1247:
    0000296d: 	movq	-0x8(%rdx), %rax
    00002971: 	addq	$0x200, %rax
    00002977: 	jmp	.Ltmp1367 # Offset: 10615
.Ltmp1195:
    0000297c: 	movq	%r12, %rsi
    0000297f: 	movq	%r15, %rdi
    00002982: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10626
    00002987: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000298e: 	jmp	.Ltmp1368 # Offset: 10638
.Ltmp1189:
    00002993: 	movq	-0x8(%rdx), %rax
    00002997: 	addq	$0x200, %rax
    0000299d: 	jmp	.Ltmp1369 # Offset: 10653
.Ltmp1187:
    000029a2: 	movq	-0x8(%rdx), %rax
    000029a6: 	addq	$0x200, %rax
    000029ac: 	jmp	.Ltmp1370 # Offset: 10668
.Ltmp1185:
    000029b1: 	movq	-0x8(%rdx), %rax
    000029b5: 	addq	$0x200, %rax
    000029bb: 	jmp	.Ltmp1371 # Offset: 10683
.Ltmp1180:
    000029c0: 	movq	%r12, %rsi
    000029c3: 	movq	%r15, %rdi
    000029c6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10694
    000029cb: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000029d2: 	jmp	.Ltmp1372 # Offset: 10706
.Ltmp1184:
    000029d7: 	cmpq	$0x0, (%rsp)
    000029dc: 	je	.Ltmp1373 # Offset: 10716
.Ltmp1393:
    000029e2: 	movq	(%rsp), %rdx
    000029e6: 	movq	0x10(%rsp), %rsi
    000029eb: 	callq	memcpy@PLT # Offset: 10731
    000029f0: 	movq	0x60(%rsp), %rax
    000029f5: 	movq	(%rbx), %rdi
    000029f8: 	movq	%rax, (%rsp)
    000029fc: 	jmp	.Ltmp1373 # Offset: 10748
.Ltmp1257:
    00002a01: 	cmpq	$0x0, (%rsp)
    00002a06: 	je	.Ltmp1374 # Offset: 10758
    00002a0c: 	jmp	.Ltmp1375 # Offset: 10764
    00002a11: 	nopl	(%rax) # Size: 7
.Ltmp1268:
    00002a18: 	cmpq	$0x0, (%rsp)
    00002a1d: 	je	.Ltmp1376 # Offset: 10781
    00002a23: 	jmp	.Ltmp1377 # Offset: 10787
    00002a28: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1240:
    00002a30: 	cmpq	$0x0, (%rsp)
    00002a35: 	je	.Ltmp1378 # Offset: 10805
    00002a3b: 	jmp	.Ltmp1379 # Offset: 10811
.Ltmp1291:
    00002a40: 	cmpq	$0x0, (%rsp)
    00002a45: 	je	.Ltmp1380 # Offset: 10821
    00002a4b: 	jmp	.Ltmp1381 # Offset: 10827
.Ltmp1166:
    00002a50: 	cmpq	$0x0, (%rsp)
    00002a55: 	je	.Ltmp1382 # Offset: 10837
    00002a5b: 	jmp	.Ltmp1383 # Offset: 10843
.Ltmp1152:
    00002a60: 	cmpq	$0x0, (%rsp)
    00002a65: 	je	.Ltmp1384 # Offset: 10853
    00002a6b: 	jmp	.Ltmp1385 # Offset: 10859
.Ltmp1141:
    00002a70: 	cmpq	$0x0, (%rsp)
    00002a75: 	je	.Ltmp1327 # Offset: 10869
    00002a7b: 	jmp	.Ltmp1386 # Offset: 10875
.Ltmp1320:
    00002a80: 	testq	%r15, %r15
    00002a83: 	je	.Ltmp1387 # Offset: 10883
    00002a89: 	jmp	.Ltmp1388 # Offset: 10889
    00002a8e: 	nop # Size: 2
.Ltmp1159:
    00002a90: 	cmpq	$0x0, (%rsp)
    00002a95: 	je	.Ltmp1389 # Offset: 10901
    00002a9b: 	jmp	.Ltmp1390 # Offset: 10907
.Ltmp1175:
    00002aa0: 	cmpq	$0x0, (%rsp)
    00002aa5: 	je	.Ltmp1391 # Offset: 10917
.Ltmp1395:
    00002aab: 	movq	(%rsp), %rdx
    00002aaf: 	movq	0x10(%rsp), %rsi
    00002ab4: 	callq	memcpy@PLT # Offset: 10932
    00002ab9: 	movq	0x60(%rsp), %rax
    00002abe: 	movq	(%rbx), %rdi
    00002ac1: 	movq	%rax, (%rsp)
    00002ac5: 	jmp	.Ltmp1391 # Offset: 10949
.Ltmp1199:
    00002aca: 	cmpq	$0x0, (%rsp)
    00002acf: 	je	.Ltmp1392 # Offset: 10959
.Ltmp1394:
    00002ad5: 	movq	(%rsp), %rdx
    00002ad9: 	movq	0x10(%rsp), %rsi
    00002ade: 	callq	memcpy@PLT # Offset: 10974
    00002ae3: 	movq	0x60(%rsp), %rax
    00002ae8: 	movq	(%rbx), %rdi
    00002aeb: 	movq	%rax, (%rsp)
    00002aef: 	jmp	.Ltmp1392 # Offset: 10991
.Ltmp1319:
    00002af4: 	movq	0x50(%rsp), %rsi
    00002af9: 	xorl	%edx, %edx
    00002afb: 	movq	%rbx, %rdi
    00002afe: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11006
    00002b03: 	movq	%rax, (%rbx)
    00002b06: 	movq	%rax, %rdi
    00002b09: 	movq	0x60(%rsp), %rax
    00002b0e: 	movq	%rax, 0x10(%rbx)
.Ltmp1388:
    00002b12: 	movq	%r15, %rdx
    00002b15: 	movq	%rbp, %rsi
    00002b18: 	callq	memcpy@PLT # Offset: 11032
    00002b1d: 	movq	0x60(%rsp), %r15
    00002b22: 	movq	(%rbx), %rdi
    00002b25: 	jmp	.Ltmp1387 # Offset: 11045
.Ltmp1256:
    00002b2a: 	movq	0x50(%rsp), %rsi
    00002b2f: 	xorl	%edx, %edx
    00002b31: 	movq	%rbx, %rdi
    00002b34: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11060
    00002b39: 	movq	%rax, (%rbx)
    00002b3c: 	movq	%rax, %rdi
    00002b3f: 	movq	0x60(%rsp), %rax
    00002b44: 	movq	%rax, 0x10(%rbx)
.Ltmp1375:
    00002b48: 	movq	(%rsp), %rdx
    00002b4c: 	movq	0x10(%rsp), %rsi
    00002b51: 	callq	memcpy@PLT # Offset: 11089
    00002b56: 	movq	0x60(%rsp), %rax
    00002b5b: 	movq	(%rbx), %rdi
    00002b5e: 	movq	%rax, (%rsp)
    00002b62: 	jmp	.Ltmp1374 # Offset: 11106
.Ltmp1267:
    00002b67: 	movq	0x50(%rsp), %rsi
    00002b6c: 	xorl	%edx, %edx
    00002b6e: 	movq	%rbx, %rdi
    00002b71: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11121
    00002b76: 	movq	%rax, (%rbx)
    00002b79: 	movq	%rax, %rdi
    00002b7c: 	movq	0x60(%rsp), %rax
    00002b81: 	movq	%rax, 0x10(%rbx)
.Ltmp1377:
    00002b85: 	movq	(%rsp), %rdx
    00002b89: 	movq	0x10(%rsp), %rsi
    00002b8e: 	callq	memcpy@PLT # Offset: 11150
    00002b93: 	movq	0x60(%rsp), %rax
    00002b98: 	movq	(%rbx), %rdi
    00002b9b: 	movq	%rax, (%rsp)
    00002b9f: 	jmp	.Ltmp1376 # Offset: 11167
.Ltmp1239:
    00002ba4: 	movq	0x50(%rsp), %rsi
    00002ba9: 	xorl	%edx, %edx
    00002bab: 	movq	%rbx, %rdi
    00002bae: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11182
    00002bb3: 	movq	%rax, (%rbx)
    00002bb6: 	movq	%rax, %rdi
    00002bb9: 	movq	0x60(%rsp), %rax
    00002bbe: 	movq	%rax, 0x10(%rbx)
.Ltmp1379:
    00002bc2: 	movq	(%rsp), %rdx
    00002bc6: 	movq	0x10(%rsp), %rsi
    00002bcb: 	callq	memcpy@PLT # Offset: 11211
    00002bd0: 	movq	0x60(%rsp), %rax
    00002bd5: 	movq	(%rbx), %rdi
    00002bd8: 	movq	%rax, (%rsp)
    00002bdc: 	jmp	.Ltmp1378 # Offset: 11228
.Ltmp1290:
    00002be1: 	movq	0x50(%rsp), %rsi
    00002be6: 	xorl	%edx, %edx
    00002be8: 	movq	%rbx, %rdi
    00002beb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11243
    00002bf0: 	movq	%rax, (%rbx)
    00002bf3: 	movq	%rax, %rdi
    00002bf6: 	movq	0x60(%rsp), %rax
    00002bfb: 	movq	%rax, 0x10(%rbx)
.Ltmp1381:
    00002bff: 	movq	(%rsp), %rdx
    00002c03: 	movq	0x10(%rsp), %rsi
    00002c08: 	callq	memcpy@PLT # Offset: 11272
    00002c0d: 	movq	0x60(%rsp), %rax
    00002c12: 	movq	(%rbx), %rdi
    00002c15: 	movq	%rax, (%rsp)
    00002c19: 	jmp	.Ltmp1380 # Offset: 11289
.Ltmp1183:
    00002c1e: 	movq	0x50(%rsp), %rsi
    00002c23: 	xorl	%edx, %edx
    00002c25: 	movq	%rbx, %rdi
    00002c28: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11304
    00002c2d: 	movq	%rax, (%rbx)
    00002c30: 	movq	%rax, %rdi
    00002c33: 	movq	0x60(%rsp), %rax
    00002c38: 	movq	%rax, 0x10(%rbx)
    00002c3c: 	jmp	.Ltmp1393 # Offset: 11324
.Ltmp1198:
    00002c41: 	movq	0x50(%rsp), %rsi
    00002c46: 	xorl	%edx, %edx
    00002c48: 	movq	%rbx, %rdi
    00002c4b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11339
    00002c50: 	movq	%rax, (%rbx)
    00002c53: 	movq	%rax, %rdi
    00002c56: 	movq	0x60(%rsp), %rax
    00002c5b: 	movq	%rax, 0x10(%rbx)
    00002c5f: 	jmp	.Ltmp1394 # Offset: 11359
.Ltmp1151:
    00002c64: 	movq	0x50(%rsp), %rsi
    00002c69: 	xorl	%edx, %edx
    00002c6b: 	movq	%rbx, %rdi
    00002c6e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11374
    00002c73: 	movq	%rax, (%rbx)
    00002c76: 	movq	%rax, %rdi
    00002c79: 	movq	0x60(%rsp), %rax
    00002c7e: 	movq	%rax, 0x10(%rbx)
.Ltmp1385:
    00002c82: 	movq	(%rsp), %rdx
    00002c86: 	movq	0x10(%rsp), %rsi
    00002c8b: 	callq	memcpy@PLT # Offset: 11403
    00002c90: 	movq	0x60(%rsp), %rax
    00002c95: 	movq	(%rbx), %rdi
    00002c98: 	movq	%rax, (%rsp)
    00002c9c: 	jmp	.Ltmp1384 # Offset: 11420
.Ltmp1165:
    00002ca1: 	movq	0x50(%rsp), %rsi
    00002ca6: 	xorl	%edx, %edx
    00002ca8: 	movq	%rbx, %rdi
    00002cab: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11435
    00002cb0: 	movq	%rax, (%rbx)
    00002cb3: 	movq	%rax, %rdi
    00002cb6: 	movq	0x60(%rsp), %rax
    00002cbb: 	movq	%rax, 0x10(%rbx)
.Ltmp1383:
    00002cbf: 	movq	(%rsp), %rdx
    00002cc3: 	movq	0x10(%rsp), %rsi
    00002cc8: 	callq	memcpy@PLT # Offset: 11464
    00002ccd: 	movq	0x60(%rsp), %rax
    00002cd2: 	movq	(%rbx), %rdi
    00002cd5: 	movq	%rax, (%rsp)
    00002cd9: 	jmp	.Ltmp1382 # Offset: 11481
.Ltmp1158:
    00002cde: 	movq	0x50(%rsp), %rsi
    00002ce3: 	xorl	%edx, %edx
    00002ce5: 	movq	%rbx, %rdi
    00002ce8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11496
    00002ced: 	movq	%rax, (%rbx)
    00002cf0: 	movq	%rax, %rdi
    00002cf3: 	movq	0x60(%rsp), %rax
    00002cf8: 	movq	%rax, 0x10(%rbx)
.Ltmp1390:
    00002cfc: 	movq	(%rsp), %rdx
    00002d00: 	movq	0x10(%rsp), %rsi
    00002d05: 	callq	memcpy@PLT # Offset: 11525
    00002d0a: 	movq	0x60(%rsp), %rax
    00002d0f: 	movq	(%rbx), %rdi
    00002d12: 	movq	%rax, (%rsp)
    00002d16: 	jmp	.Ltmp1389 # Offset: 11542
.Ltmp1174:
    00002d1b: 	movq	0x50(%rsp), %rsi
    00002d20: 	xorl	%edx, %edx
    00002d22: 	movq	%rbx, %rdi
    00002d25: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11557
    00002d2a: 	movq	%rax, (%rbx)
    00002d2d: 	movq	%rax, %rdi
    00002d30: 	movq	0x60(%rsp), %rax
    00002d35: 	movq	%rax, 0x10(%rbx)
    00002d39: 	jmp	.Ltmp1395 # Offset: 11577
.Ltmp1150:
    00002d3e: 	leaq	DATAat0x23158(%rip), %rdi
    00002d45: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11589
.Ltmp1157:
    00002d4a: 	leaq	DATAat0x23158(%rip), %rdi
    00002d51: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11601
.Ltmp1164:
    00002d56: 	leaq	DATAat0x23158(%rip), %rdi
    00002d5d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11613
.Ltmp1173:
    00002d62: 	leaq	DATAat0x23158(%rip), %rdi
    00002d69: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11625
.Ltmp1182:
    00002d6e: 	leaq	DATAat0x23158(%rip), %rdi
    00002d75: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11637
.Ltmp1197:
    00002d7a: 	leaq	DATAat0x23158(%rip), %rdi
    00002d81: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11649
.Ltmp1238:
    00002d86: 	leaq	DATAat0x23158(%rip), %rdi
    00002d8d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11661
.Ltmp1255:
    00002d92: 	leaq	DATAat0x23158(%rip), %rdi
    00002d99: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11673
.Ltmp1266:
    00002d9e: 	leaq	DATAat0x23158(%rip), %rdi
    00002da5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11685
.Ltmp1289:
    00002daa: 	leaq	DATAat0x23158(%rip), %rdi
    00002db1: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11697
.Ltmp1318:
    00002db6: 	leaq	DATAat0x23158(%rip), %rdi
    00002dbd: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11709
.Ltmp1326:
    00002dc2: 	callq	__stack_chk_fail@PLT # Offset: 11714
.Ltmp1139:
    00002dc7: 	leaq	DATAat0x23158(%rip), %rdi
    00002dce: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11726
    00002dd3: 	endbr64
    00002dd7: 	movq	%rax, %rbx
    00002dda: 	jmp	.Ltmp1396 # Offset: 11738
    00002ddc: 	endbr64
    00002de0: 	movq	%rax, %rbx
    00002de3: 	jmp	.Ltmp1397 # Offset: 11747
    00002de5: 	endbr64
.Ltmp1404:
    00002de9: 	movq	%rax, %rbx
    00002dec: 	jmp	.Ltmp1398 # Offset: 11756
.Ltmp1396:
    00002dee: 	movq	0xc0(%rsp), %rdi
    00002df6: 	leaq	0xd0(%rsp), %rax
    00002dfe: 	cmpq	%rax, %rdi
    00002e01: 	je	.Ltmp1397 # Offset: 11777
.Ltmp1400:
    00002e03: 	movq	0xd0(%rsp), %rax
    00002e0b: 	leaq	0x1(%rax), %rsi
    00002e0f: 	callq	_ZdlPvm@PLT # Offset: 11791
.Ltmp1397:
    00002e14: 	movq	0x80(%rsp), %rdi
    00002e1c: 	cmpq	0x58(%rsp), %rdi
    00002e21: 	je	.Ltmp1399 # Offset: 11809
    00002e23: 	movq	0x90(%rsp), %rax
    00002e2b: 	leaq	0x1(%rax), %rsi
    00002e2f: 	callq	_ZdlPvm@PLT # Offset: 11823
.Ltmp1399:
    00002e34: 	movq	%rbx, %rdi
    00002e37: 	callq	_Unwind_Resume@PLT # Offset: 11831
.Ltmp1398:
    00002e3c: 	movq	0xc0(%rsp), %rdi
    00002e44: 	cmpq	%r13, %rdi
    00002e47: 	jne	.Ltmp1400 # Offset: 11847
    00002e49: 	jmp	.Ltmp1397 # Offset: 11849
    00002e4b: 	endbr64
.Ltmp1402:
    00002e4f: 	movq	%rax, %rbx
    00002e52: 	jmp	.Ltmp1401 # Offset: 11858
    00002e54: 	endbr64
    00002e58: 	jmp	.Ltmp1402 # Offset: 11864
    00002e5a: 	endbr64
    00002e5e: 	jmp	.Ltmp1402 # Offset: 11870
    00002e60: 	endbr64
    00002e64: 	jmp	.Ltmp1402 # Offset: 11876
.Ltmp1401:
    00002e66: 	movq	0xc0(%rsp), %rdi
    00002e6e: 	cmpq	%r13, %rdi
    00002e71: 	je	.Ltmp1403 # Offset: 11889
    00002e73: 	movq	0xd0(%rsp), %rax
    00002e7b: 	leaq	0x1(%rax), %rsi
    00002e7f: 	callq	_ZdlPvm@PLT # Offset: 11903
.Ltmp1403:
    00002e84: 	movq	0xa0(%rsp), %rdi
    00002e8c: 	leaq	0xb0(%rsp), %rax
    00002e94: 	cmpq	%rax, %rdi
    00002e97: 	je	.Ltmp1397 # Offset: 11927
    00002e9d: 	movq	0xb0(%rsp), %rax
    00002ea5: 	leaq	0x1(%rax), %rsi
    00002ea9: 	callq	_ZdlPvm@PLT # Offset: 11945
    00002eae: 	jmp	.Ltmp1397 # Offset: 11950
    00002eb3: 	endbr64
    00002eb7: 	jmp	.Ltmp1402 # Offset: 11959
    00002eb9: 	endbr64
    00002ebd: 	jmp	.Ltmp1402 # Offset: 11965
    00002ebf: 	endbr64
    00002ec3: 	jmp	.Ltmp1402 # Offset: 11971
    00002ec5: 	endbr64
    00002ec9: 	jmp	.Ltmp1402 # Offset: 11977
    00002ecb: 	endbr64
    00002ecf: 	jmp	.Ltmp1404 # Offset: 11983
    00002ed4: 	endbr64
    00002ed8: 	jmp	.Ltmp1402 # Offset: 11992
    00002edd: 	endbr64
    00002ee1: 	jmp	.Ltmp1402 # Offset: 12001
    00002ee6: 	endbr64
    00002eea: 	jmp	.Ltmp1402 # Offset: 12010
    00002eef: 	endbr64
    00002ef3: 	jmp	.Ltmp1402 # Offset: 12019
    00002ef8: 	endbr64
    00002efc: 	jmp	.Ltmp1404 # Offset: 12028
    00002f01: 	endbr64
    00002f05: 	jmp	.Ltmp1404 # Offset: 12037
    00002f0a: 	endbr64
    00002f0e: 	jmp	.Ltmp1404 # Offset: 12046
    00002f13: 	endbr64
    00002f17: 	jmp	.Ltmp1402 # Offset: 12055
    00002f1c: 	endbr64
    00002f20: 	jmp	.Ltmp1402 # Offset: 12064
    00002f25: 	endbr64
    00002f29: 	jmp	.Ltmp1402 # Offset: 12073
    00002f2e: 	endbr64
    00002f32: 	jmp	.Ltmp1402 # Offset: 12082
    00002f37: 	endbr64
    00002f3b: 	jmp	.Ltmp1402 # Offset: 12091
    00002f40: 	endbr64
    00002f44: 	jmp	.Ltmp1404 # Offset: 12100
    00002f49: 	endbr64
    00002f4d: 	jmp	.Ltmp1404 # Offset: 12109
    00002f52: 	endbr64
    00002f56: 	jmp	.Ltmp1402 # Offset: 12118
    00002f5b: 	endbr64
    00002f5f: 	jmp	.Ltmp1404 # Offset: 12127
    00002f64: 	endbr64
    00002f68: 	jmp	.Ltmp1404 # Offset: 12136
    00002f6d: 	endbr64
    00002f71: 	jmp	.Ltmp1404 # Offset: 12145
    00002f76: 	endbr64
    00002f7a: 	jmp	.Ltmp1404 # Offset: 12154
    00002f7f: 	endbr64
    00002f83: 	movq	%rax, %rbx
    00002f86: 	jmp	.Ltmp1403 # Offset: 12166
    00002f8b: 	endbr64
    00002f8f: 	jmp	.Ltmp1404 # Offset: 12175
    00002f94: 	endbr64
    00002f98: 	jmp	.Ltmp1404 # Offset: 12184
    00002f9d: 	endbr64
    00002fa1: 	jmp	.Ltmp1404 # Offset: 12193
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIaEvv"

Binary Function "_Z11TestOneTypeIiEvv" after disassembly {
  Number      : 47
  State       : disassembled
  Address     : 0x10790
  Size        : 0x314a
  MaxSize     : 0x3150
  Offset      : 0x10790
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIiEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB046:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x7000(%rsp), %r11
.Ltmp1405:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp1405 # Offset: 37
    00000027: 	subq	$0xdc8, %rsp
    0000002e: 	movdqa	_Z7gLabelsB5cxx11+16(%rip), %xmm6
    00000036: 	movdqa	_Z7gLabelsB5cxx11+32(%rip), %xmm7
    0000003e: 	leaq	_Z7gLabelsB5cxx11(%rip), %r15
    00000045: 	movq	%r15, %rdi
    00000048: 	movq	%fs:0x28, %rax
    00000051: 	movq	%rax, 0x7db8(%rsp)
    00000059: 	xorl	%eax, %eax
    0000005b: 	leaq	0x60(%rsp), %rax
    00000060: 	leaq	0x30(%rsp), %rsi
    00000065: 	movl	$0x33746e69, 0x60(%rsp)
    0000006d: 	movq	%rax, 0x20(%rsp)
    00000072: 	leaq	0xb0(%rsp), %rbp
    0000007a: 	leaq	0x7db0(%rsp), %rbx
    00000082: 	movq	%rax, 0x50(%rsp)
    00000087: 	movl	$0x5f32, %eax
    0000008c: 	movw	%ax, 0x64(%rsp)
    00000091: 	movb	$0x74, 0x66(%rsp)
    00000096: 	movq	$0x7, 0x58(%rsp)
    0000009f: 	movb	$0x0, 0x67(%rsp)
    000000a4: 	movq	%rsi, 0x18(%rsp)
    000000a9: 	movaps	%xmm6, 0x30(%rsp)
    000000ae: 	movaps	%xmm7, 0x40(%rsp)
    000000b3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 179
    000000b8: 	cvttsd2si	init_value(%rip), %eax
    000000c0: 	movd	%eax, %xmm0
    000000c4: 	movq	%rbp, %rax
    000000c7: 	pshufd	$0x0, %xmm0, %xmm0
    000000cc: 	nopl	(%rax) # Size: 4
.Ltmp1406:
    000000d0: 	movaps	%xmm0, (%rax)
    000000d3: 	addq	$0x10, %rax
    000000d7: 	cmpq	%rbx, %rax
    000000da: 	jne	.Ltmp1406 # Offset: 218
    000000dc: 	movl	base_iterations(%rip), %eax
    000000e2: 	leaq	0x90(%rsp), %r12
    000000ea: 	leaq	0x50(%rsp), %r14
    000000ef: 	leaq	DATAat0x231c8(%rip), %rdx
    000000f6: 	movq	%r14, %rsi
    000000f9: 	movq	%r12, %rdi
    000000fc: 	movl	%eax, iterations(%rip)
    00000102: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 258
    00000107: 	callq	clock@PLT # Offset: 263
    0000010c: 	movq	%r12, %rsi
    0000010f: 	movq	%r15, %rdi
    00000112: 	movq	%rax, start_time(%rip)
    00000119: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 281
    0000011e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000125: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000012c: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000133: 	je	.Ltmp1407 # Offset: 307
.Ltmp1611:
    00000139: 	movq	-0x20(%rax), %r13
    0000013d: 	callq	clock@PLT # Offset: 317
    00000142: 	pxor	%xmm0, %xmm0
    00000146: 	movq	%rax, end_time(%rip)
    0000014d: 	movq	%r13, %rdi
    00000150: 	subq	start_time(%rip), %rax
    00000157: 	cvtsi2sd	%rax, %xmm0
    0000015c: 	divsd	DATAat0x23450(%rip), %xmm0
    00000164: 	callq	_Z13record_resultdPKc # Offset: 356
    00000169: 	movq	0x90(%rsp), %rdi
    00000171: 	leaq	0xa0(%rsp), %r13
    00000179: 	cmpq	%r13, %rdi
    0000017c: 	je	.Ltmp1408 # Offset: 380
    0000017e: 	movq	0xa0(%rsp), %rax
    00000186: 	leaq	0x1(%rax), %rsi
    0000018a: 	callq	_ZdlPvm@PLT # Offset: 394
.Ltmp1408:
    0000018f: 	leaq	DATAat0x231e2(%rip), %rdx
    00000196: 	movq	%r14, %rsi
    00000199: 	movq	%r12, %rdi
    0000019c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 412
    000001a1: 	callq	clock@PLT # Offset: 417
    000001a6: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    000001ad: 	movq	%rax, start_time(%rip)
    000001b4: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000001bb: 	movq	%rsi, 0x10(%rsp)
    000001c0: 	subq	$0x20, %rax
    000001c4: 	cmpq	%rax, %rsi
    000001c7: 	je	.Ltmp1409 # Offset: 455
    000001cd: 	leaq	0x10(%rsi), %rdi
    000001d1: 	movq	%rdi, (%rsi)
    000001d4: 	movq	0x90(%rsp), %rcx
    000001dc: 	movq	0x98(%rsp), %rsi
    000001e4: 	movq	%rcx, %rax
    000001e7: 	movq	%rcx, 0x28(%rsp)
    000001ec: 	addq	%rsi, %rax
    000001ef: 	movq	%rsi, (%rsp)
    000001f3: 	je	.Ltmp1410 # Offset: 499
    000001f5: 	testq	%rcx, %rcx
    000001f8: 	je	.Ltmp1411 # Offset: 504
.Ltmp1410:
    000001fe: 	movq	(%rsp), %rax
    00000202: 	movq	%rax, 0x30(%rsp)
    00000207: 	cmpq	$0xf, %rax
    0000020b: 	ja	.Ltmp1412 # Offset: 523
    00000211: 	cmpq	$0x1, (%rsp)
    00000216: 	jne	.Ltmp1413 # Offset: 534
    0000021c: 	movq	0x28(%rsp), %rax
    00000221: 	movq	0x10(%rsp), %rcx
    00000226: 	movzbl	(%rax), %eax
    00000229: 	movb	%al, 0x10(%rcx)
.Ltmp1603:
    0000022c: 	movq	(%rsp), %rax
    00000230: 	movq	0x10(%rsp), %rcx
    00000235: 	movq	%rax, 0x8(%rcx)
    00000239: 	movb	$0x0, (%rdi,%rax)
    0000023d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000244: 	addq	$0x20, %rax
    00000248: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1610:
    0000024f: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000256: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000025d: 	je	.Ltmp1414 # Offset: 605
.Ltmp1609:
    00000263: 	movq	-0x20(%rax), %rdi
    00000267: 	movq	%rdi, (%rsp)
    0000026b: 	callq	clock@PLT # Offset: 619
    00000270: 	movq	(%rsp), %rdi
    00000274: 	pxor	%xmm0, %xmm0
    00000278: 	movq	%rax, end_time(%rip)
    0000027f: 	subq	start_time(%rip), %rax
    00000286: 	cvtsi2sd	%rax, %xmm0
    0000028b: 	divsd	DATAat0x23450(%rip), %xmm0
    00000293: 	callq	_Z13record_resultdPKc # Offset: 659
    00000298: 	movq	0x90(%rsp), %rdi
    000002a0: 	cmpq	%r13, %rdi
    000002a3: 	je	.Ltmp1415 # Offset: 675
    000002a5: 	movq	0xa0(%rsp), %rax
    000002ad: 	leaq	0x1(%rax), %rsi
    000002b1: 	callq	_ZdlPvm@PLT # Offset: 689
.Ltmp1415:
    000002b6: 	leaq	DATAat0x231f1(%rip), %rdx
    000002bd: 	movq	%r14, %rsi
    000002c0: 	movq	%r12, %rdi
    000002c3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 707
    000002c8: 	callq	clock@PLT # Offset: 712
    000002cd: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    000002d4: 	movq	%rax, start_time(%rip)
    000002db: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000002e2: 	movq	%rsi, 0x10(%rsp)
    000002e7: 	subq	$0x20, %rax
    000002eb: 	cmpq	%rax, %rsi
    000002ee: 	je	.Ltmp1416 # Offset: 750
    000002f4: 	leaq	0x10(%rsi), %rdi
    000002f8: 	movq	0x98(%rsp), %rcx
    00000300: 	movq	%rdi, (%rsi)
    00000303: 	movq	0x90(%rsp), %rsi
    0000030b: 	movq	%rcx, (%rsp)
    0000030f: 	movq	%rsi, %rax
    00000312: 	movq	%rsi, 0x28(%rsp)
    00000317: 	addq	%rcx, %rax
    0000031a: 	je	.Ltmp1417 # Offset: 794
    0000031c: 	testq	%rsi, %rsi
    0000031f: 	je	.Ltmp1418 # Offset: 799
.Ltmp1417:
    00000325: 	movq	(%rsp), %rax
    00000329: 	movq	%rax, 0x30(%rsp)
    0000032e: 	cmpq	$0xf, %rax
    00000332: 	ja	.Ltmp1419 # Offset: 818
    00000338: 	cmpq	$0x1, (%rsp)
    0000033d: 	jne	.Ltmp1420 # Offset: 829
    00000343: 	movq	0x28(%rsp), %rax
    00000348: 	movq	0x10(%rsp), %rsi
    0000034d: 	movzbl	(%rax), %eax
    00000350: 	movb	%al, 0x10(%rsi)
.Ltmp1664:
    00000353: 	movq	(%rsp), %rax
    00000357: 	movq	0x10(%rsp), %rcx
    0000035c: 	movq	%rax, 0x8(%rcx)
    00000360: 	movb	$0x0, (%rdi,%rax)
    00000364: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000036b: 	addq	$0x20, %rax
    0000036f: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1615:
    00000376: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000037d: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000384: 	je	.Ltmp1421 # Offset: 900
.Ltmp1614:
    0000038a: 	movq	-0x20(%rax), %rdi
    0000038e: 	movq	%rdi, (%rsp)
    00000392: 	callq	clock@PLT # Offset: 914
    00000397: 	movq	(%rsp), %rdi
    0000039b: 	pxor	%xmm0, %xmm0
    0000039f: 	movq	%rax, end_time(%rip)
    000003a6: 	subq	start_time(%rip), %rax
    000003ad: 	cvtsi2sd	%rax, %xmm0
    000003b2: 	divsd	DATAat0x23450(%rip), %xmm0
    000003ba: 	callq	_Z13record_resultdPKc # Offset: 954
    000003bf: 	movq	0x90(%rsp), %rdi
    000003c7: 	cmpq	%r13, %rdi
    000003ca: 	je	.Ltmp1422 # Offset: 970
    000003cc: 	movq	0xa0(%rsp), %rax
    000003d4: 	leaq	0x1(%rax), %rsi
    000003d8: 	callq	_ZdlPvm@PLT # Offset: 984
.Ltmp1422:
    000003dd: 	leaq	DATAat0x23205(%rip), %rdx
    000003e4: 	movq	%r14, %rsi
    000003e7: 	movq	%r12, %rdi
    000003ea: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1002
    000003ef: 	callq	clock@PLT # Offset: 1007
    000003f4: 	movq	%r12, %rsi
    000003f7: 	movq	%r15, %rdi
    000003fa: 	movq	%rax, start_time(%rip)
    00000401: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1025
    00000406: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000040d: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000414: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000041b: 	je	.Ltmp1423 # Offset: 1051
.Ltmp1613:
    00000421: 	movq	-0x20(%rax), %rdi
    00000425: 	movq	%rdi, (%rsp)
    00000429: 	callq	clock@PLT # Offset: 1065
    0000042e: 	movq	(%rsp), %rdi
    00000432: 	pxor	%xmm0, %xmm0
    00000436: 	movq	%rax, end_time(%rip)
    0000043d: 	subq	start_time(%rip), %rax
    00000444: 	cvtsi2sd	%rax, %xmm0
    00000449: 	divsd	DATAat0x23450(%rip), %xmm0
    00000451: 	callq	_Z13record_resultdPKc # Offset: 1105
    00000456: 	movq	0x90(%rsp), %rdi
    0000045e: 	cmpq	%r13, %rdi
    00000461: 	je	.Ltmp1424 # Offset: 1121
    00000463: 	movq	0xa0(%rsp), %rax
    0000046b: 	leaq	0x1(%rax), %rsi
    0000046f: 	callq	_ZdlPvm@PLT # Offset: 1135
.Ltmp1424:
    00000474: 	leaq	DATAat0x23219(%rip), %rdx
    0000047b: 	movq	%r14, %rsi
    0000047e: 	movq	%r12, %rdi
    00000481: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1153
    00000486: 	callq	clock@PLT # Offset: 1158
    0000048b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00000492: 	movq	%rax, start_time(%rip)
    00000499: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000004a0: 	movq	%rsi, 0x10(%rsp)
    000004a5: 	subq	$0x20, %rax
    000004a9: 	cmpq	%rax, %rsi
    000004ac: 	je	.Ltmp1425 # Offset: 1196
    000004b2: 	leaq	0x10(%rsi), %rdi
    000004b6: 	movq	%rdi, (%rsi)
    000004b9: 	movq	0x90(%rsp), %rcx
    000004c1: 	movq	0x98(%rsp), %rsi
    000004c9: 	movq	%rcx, %rax
    000004cc: 	movq	%rcx, 0x28(%rsp)
    000004d1: 	addq	%rsi, %rax
    000004d4: 	movq	%rsi, (%rsp)
    000004d8: 	je	.Ltmp1426 # Offset: 1240
    000004da: 	testq	%rcx, %rcx
    000004dd: 	je	.Ltmp1427 # Offset: 1245
.Ltmp1426:
    000004e3: 	movq	(%rsp), %rax
    000004e7: 	movq	%rax, 0x30(%rsp)
    000004ec: 	cmpq	$0xf, %rax
    000004f0: 	ja	.Ltmp1428 # Offset: 1264
    000004f6: 	cmpq	$0x1, (%rsp)
    000004fb: 	jne	.Ltmp1429 # Offset: 1275
    00000501: 	movq	0x28(%rsp), %rax
    00000506: 	movq	0x10(%rsp), %rcx
    0000050b: 	movzbl	(%rax), %eax
    0000050e: 	movb	%al, 0x10(%rcx)
.Ltmp1655:
    00000511: 	movq	(%rsp), %rax
    00000515: 	movq	0x10(%rsp), %rcx
    0000051a: 	movq	%rax, 0x8(%rcx)
    0000051e: 	movb	$0x0, (%rdi,%rax)
    00000522: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000529: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000530: 	addq	$0x20, %rax
    00000534: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000053b: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00000542: 	je	.Ltmp1430 # Offset: 1346
.Ltmp1612:
    00000548: 	movq	-0x20(%rax), %rdi
    0000054c: 	movq	%rdi, (%rsp)
    00000550: 	callq	clock@PLT # Offset: 1360
    00000555: 	movq	(%rsp), %rdi
    00000559: 	pxor	%xmm0, %xmm0
    0000055d: 	movq	%rax, end_time(%rip)
    00000564: 	subq	start_time(%rip), %rax
    0000056b: 	cvtsi2sd	%rax, %xmm0
    00000570: 	divsd	DATAat0x23450(%rip), %xmm0
    00000578: 	callq	_Z13record_resultdPKc # Offset: 1400
    0000057d: 	movq	0x90(%rsp), %rdi
    00000585: 	cmpq	%r13, %rdi
    00000588: 	je	.Ltmp1431 # Offset: 1416
    0000058a: 	movq	0xa0(%rsp), %rax
    00000592: 	leaq	0x1(%rax), %rsi
    00000596: 	callq	_ZdlPvm@PLT # Offset: 1430
.Ltmp1431:
    0000059b: 	leaq	DATAat0x233c2(%rip), %rdx
    000005a2: 	movq	%r14, %rsi
    000005a5: 	movq	%r12, %rdi
    000005a8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1448
    000005ad: 	callq	clock@PLT # Offset: 1453
    000005b2: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    000005b9: 	movq	%rax, start_time(%rip)
    000005c0: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000005c7: 	movq	%rsi, 0x10(%rsp)
    000005cc: 	subq	$0x20, %rax
    000005d0: 	cmpq	%rax, %rsi
    000005d3: 	je	.Ltmp1432 # Offset: 1491
    000005d9: 	leaq	0x10(%rsi), %rdi
    000005dd: 	movq	0x98(%rsp), %rcx
    000005e5: 	movq	%rdi, (%rsi)
    000005e8: 	movq	0x90(%rsp), %rsi
    000005f0: 	movq	%rcx, (%rsp)
    000005f4: 	movq	%rsi, %rax
    000005f7: 	movq	%rsi, 0x28(%rsp)
    000005fc: 	addq	%rcx, %rax
    000005ff: 	je	.Ltmp1433 # Offset: 1535
    00000601: 	testq	%rsi, %rsi
    00000604: 	je	.Ltmp1434 # Offset: 1540
.Ltmp1433:
    0000060a: 	movq	(%rsp), %rax
    0000060e: 	movq	%rax, 0x30(%rsp)
    00000613: 	cmpq	$0xf, %rax
    00000617: 	ja	.Ltmp1435 # Offset: 1559
    0000061d: 	cmpq	$0x1, (%rsp)
    00000622: 	jne	.Ltmp1436 # Offset: 1570
    00000628: 	movq	0x28(%rsp), %rax
    0000062d: 	movq	0x10(%rsp), %rsi
    00000632: 	movzbl	(%rax), %eax
    00000635: 	movb	%al, 0x10(%rsi)
.Ltmp1659:
    00000638: 	movq	(%rsp), %rax
    0000063c: 	movq	0x10(%rsp), %rsi
    00000641: 	movq	%rax, 0x8(%rsi)
    00000645: 	movb	$0x0, (%rdi,%rax)
    00000649: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000650: 	addq	$0x20, %rax
    00000654: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1625:
    0000065b: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000662: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000669: 	je	.Ltmp1437 # Offset: 1641
.Ltmp1624:
    0000066f: 	movq	-0x20(%rax), %rdi
    00000673: 	movq	%rdi, (%rsp)
    00000677: 	callq	clock@PLT # Offset: 1655
    0000067c: 	movq	(%rsp), %rdi
    00000680: 	pxor	%xmm0, %xmm0
    00000684: 	movq	%rax, end_time(%rip)
    0000068b: 	subq	start_time(%rip), %rax
    00000692: 	cvtsi2sd	%rax, %xmm0
    00000697: 	divsd	DATAat0x23450(%rip), %xmm0
    0000069f: 	callq	_Z13record_resultdPKc # Offset: 1695
    000006a4: 	movq	0x90(%rsp), %rdi
    000006ac: 	cmpq	%r13, %rdi
    000006af: 	je	.Ltmp1438 # Offset: 1711
    000006b1: 	movq	0xa0(%rsp), %rax
    000006b9: 	leaq	0x1(%rax), %rsi
    000006bd: 	callq	_ZdlPvm@PLT # Offset: 1725
.Ltmp1438:
    000006c2: 	leaq	DATAat0x23279(%rip), %rdx
    000006c9: 	movq	%r14, %rsi
    000006cc: 	movq	%r12, %rdi
    000006cf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1743
    000006d4: 	callq	clock@PLT # Offset: 1748
    000006d9: 	movq	%r12, %rsi
    000006dc: 	movq	%r15, %rdi
    000006df: 	movq	%rax, start_time(%rip)
    000006e6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1766
    000006eb: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000006f2: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000006f9: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000700: 	je	.Ltmp1439 # Offset: 1792
.Ltmp1623:
    00000706: 	movq	-0x20(%rax), %rdi
    0000070a: 	movq	%rdi, (%rsp)
    0000070e: 	callq	clock@PLT # Offset: 1806
    00000713: 	movq	(%rsp), %rdi
    00000717: 	pxor	%xmm0, %xmm0
    0000071b: 	movq	%rax, end_time(%rip)
    00000722: 	subq	start_time(%rip), %rax
    00000729: 	cvtsi2sd	%rax, %xmm0
    0000072e: 	divsd	DATAat0x23450(%rip), %xmm0
    00000736: 	callq	_Z13record_resultdPKc # Offset: 1846
    0000073b: 	movq	0x90(%rsp), %rdi
    00000743: 	cmpq	%r13, %rdi
    00000746: 	je	.Ltmp1440 # Offset: 1862
    00000748: 	movq	0xa0(%rsp), %rax
    00000750: 	leaq	0x1(%rax), %rsi
    00000754: 	callq	_ZdlPvm@PLT # Offset: 1876
.Ltmp1440:
    00000759: 	leaq	DATAat0x2322b(%rip), %rdx
    00000760: 	movq	%r14, %rsi
    00000763: 	movq	%r12, %rdi
    00000766: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1894
    0000076b: 	callq	clock@PLT # Offset: 1899
    00000770: 	movq	%r12, %rsi
    00000773: 	movq	%r15, %rdi
    00000776: 	movq	%rax, start_time(%rip)
    0000077d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1917
    00000782: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000789: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000790: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000797: 	je	.Ltmp1441 # Offset: 1943
.Ltmp1622:
    0000079d: 	movq	-0x20(%rax), %rdi
    000007a1: 	movq	%rdi, (%rsp)
    000007a5: 	callq	clock@PLT # Offset: 1957
    000007aa: 	movq	(%rsp), %rdi
    000007ae: 	pxor	%xmm0, %xmm0
    000007b2: 	movq	%rax, end_time(%rip)
    000007b9: 	subq	start_time(%rip), %rax
    000007c0: 	cvtsi2sd	%rax, %xmm0
    000007c5: 	divsd	DATAat0x23450(%rip), %xmm0
    000007cd: 	callq	_Z13record_resultdPKc # Offset: 1997
    000007d2: 	movq	0x90(%rsp), %rdi
    000007da: 	cmpq	%r13, %rdi
    000007dd: 	je	.Ltmp1442 # Offset: 2013
    000007df: 	movq	0xa0(%rsp), %rax
    000007e7: 	leaq	0x1(%rax), %rsi
    000007eb: 	callq	_ZdlPvm@PLT # Offset: 2027
.Ltmp1442:
    000007f0: 	leaq	DATAat0x2323f(%rip), %rdx
    000007f7: 	movq	%r14, %rsi
    000007fa: 	movq	%r12, %rdi
    000007fd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2045
    00000802: 	callq	clock@PLT # Offset: 2050
    00000807: 	movq	%r12, %rsi
    0000080a: 	movq	%r15, %rdi
    0000080d: 	movq	%rax, start_time(%rip)
    00000814: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2068
    00000819: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000820: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000827: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000082e: 	je	.Ltmp1443 # Offset: 2094
.Ltmp1621:
    00000834: 	movq	-0x20(%rax), %rdi
    00000838: 	movq	%rdi, (%rsp)
    0000083c: 	callq	clock@PLT # Offset: 2108
    00000841: 	movq	(%rsp), %rdi
    00000845: 	pxor	%xmm0, %xmm0
    00000849: 	movq	%rax, end_time(%rip)
    00000850: 	subq	start_time(%rip), %rax
    00000857: 	cvtsi2sd	%rax, %xmm0
    0000085c: 	divsd	DATAat0x23450(%rip), %xmm0
    00000864: 	callq	_Z13record_resultdPKc # Offset: 2148
    00000869: 	movq	0x90(%rsp), %rdi
    00000871: 	cmpq	%r13, %rdi
    00000874: 	je	.Ltmp1444 # Offset: 2164
    00000876: 	movq	0xa0(%rsp), %rax
    0000087e: 	leaq	0x1(%rax), %rsi
    00000882: 	callq	_ZdlPvm@PLT # Offset: 2178
.Ltmp1444:
    00000887: 	leaq	DATAat0x23257(%rip), %rdx
    0000088e: 	movq	%r14, %rsi
    00000891: 	movq	%r12, %rdi
    00000894: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2196
    00000899: 	callq	clock@PLT # Offset: 2201
    0000089e: 	movq	%r12, %rsi
    000008a1: 	movq	%r15, %rdi
    000008a4: 	movq	%rax, start_time(%rip)
    000008ab: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2219
    000008b0: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000008b7: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000008be: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000008c5: 	je	.Ltmp1445 # Offset: 2245
.Ltmp1620:
    000008cb: 	movq	-0x20(%rax), %rdi
    000008cf: 	movq	%rdi, (%rsp)
    000008d3: 	callq	clock@PLT # Offset: 2259
    000008d8: 	movq	(%rsp), %rdi
    000008dc: 	pxor	%xmm0, %xmm0
    000008e0: 	movq	%rax, end_time(%rip)
    000008e7: 	subq	start_time(%rip), %rax
    000008ee: 	cvtsi2sd	%rax, %xmm0
    000008f3: 	divsd	DATAat0x23450(%rip), %xmm0
    000008fb: 	callq	_Z13record_resultdPKc # Offset: 2299
    00000900: 	movq	0x90(%rsp), %rdi
    00000908: 	cmpq	%r13, %rdi
    0000090b: 	je	.Ltmp1446 # Offset: 2315
    0000090d: 	movq	0xa0(%rsp), %rax
    00000915: 	leaq	0x1(%rax), %rsi
    00000919: 	callq	_ZdlPvm@PLT # Offset: 2329
.Ltmp1446:
    0000091e: 	leaq	DATAat0x2326c(%rip), %rdx
    00000925: 	movq	%r14, %rsi
    00000928: 	movq	%r12, %rdi
    0000092b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2347
    00000930: 	callq	clock@PLT # Offset: 2352
    00000935: 	movq	%r12, %rsi
    00000938: 	movq	%r15, %rdi
    0000093b: 	movq	%rax, start_time(%rip)
    00000942: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2370
    00000947: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000094e: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000955: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000095c: 	je	.Ltmp1447 # Offset: 2396
.Ltmp1619:
    00000962: 	movq	-0x20(%rax), %rdi
    00000966: 	movq	%rdi, (%rsp)
    0000096a: 	callq	clock@PLT # Offset: 2410
    0000096f: 	movq	(%rsp), %rdi
    00000973: 	pxor	%xmm0, %xmm0
    00000977: 	movq	%rax, end_time(%rip)
    0000097e: 	subq	start_time(%rip), %rax
    00000985: 	cvtsi2sd	%rax, %xmm0
    0000098a: 	divsd	DATAat0x23450(%rip), %xmm0
    00000992: 	callq	_Z13record_resultdPKc # Offset: 2450
    00000997: 	movq	0x90(%rsp), %rdi
    0000099f: 	cmpq	%r13, %rdi
    000009a2: 	je	.Ltmp1448 # Offset: 2466
    000009a4: 	movq	0xa0(%rsp), %rax
    000009ac: 	leaq	0x1(%rax), %rsi
    000009b0: 	callq	_ZdlPvm@PLT # Offset: 2480
.Ltmp1448:
    000009b5: 	leaq	DATAat0x2328a(%rip), %rdx
    000009bc: 	movq	%r14, %rsi
    000009bf: 	movq	%r12, %rdi
    000009c2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2498
    000009c7: 	callq	clock@PLT # Offset: 2503
    000009cc: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    000009d3: 	movq	%rax, start_time(%rip)
    000009da: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000009e1: 	movq	%rsi, 0x10(%rsp)
    000009e6: 	subq	$0x20, %rax
    000009ea: 	cmpq	%rax, %rsi
    000009ed: 	je	.Ltmp1449 # Offset: 2541
    000009f3: 	leaq	0x10(%rsi), %rdi
    000009f7: 	movq	%rdi, (%rsi)
    000009fa: 	movq	0x90(%rsp), %rcx
    00000a02: 	movq	0x98(%rsp), %rsi
    00000a0a: 	movq	%rcx, %rax
    00000a0d: 	movq	%rcx, 0x28(%rsp)
    00000a12: 	addq	%rsi, %rax
    00000a15: 	movq	%rsi, (%rsp)
    00000a19: 	je	.Ltmp1450 # Offset: 2585
    00000a1b: 	testq	%rcx, %rcx
    00000a1e: 	je	.Ltmp1451 # Offset: 2590
.Ltmp1450:
    00000a24: 	movq	(%rsp), %rax
    00000a28: 	movq	%rax, 0x30(%rsp)
    00000a2d: 	cmpq	$0xf, %rax
    00000a31: 	ja	.Ltmp1452 # Offset: 2609
    00000a37: 	cmpq	$0x1, (%rsp)
    00000a3c: 	jne	.Ltmp1453 # Offset: 2620
    00000a42: 	movq	0x28(%rsp), %rax
    00000a47: 	movq	0x10(%rsp), %rcx
    00000a4c: 	movzbl	(%rax), %eax
    00000a4f: 	movb	%al, 0x10(%rcx)
.Ltmp1656:
    00000a52: 	movq	(%rsp), %rax
    00000a56: 	movq	0x10(%rsp), %rcx
    00000a5b: 	movq	%rax, 0x8(%rcx)
    00000a5f: 	movb	$0x0, (%rdi,%rax)
    00000a63: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000a6a: 	addq	$0x20, %rax
    00000a6e: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1618:
    00000a75: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000a7c: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000a83: 	je	.Ltmp1454 # Offset: 2691
.Ltmp1617:
    00000a89: 	movq	-0x20(%rax), %rdi
    00000a8d: 	movq	%rdi, (%rsp)
    00000a91: 	callq	clock@PLT # Offset: 2705
    00000a96: 	movq	(%rsp), %rdi
    00000a9a: 	pxor	%xmm0, %xmm0
    00000a9e: 	movq	%rax, end_time(%rip)
    00000aa5: 	subq	start_time(%rip), %rax
    00000aac: 	cvtsi2sd	%rax, %xmm0
    00000ab1: 	divsd	DATAat0x23450(%rip), %xmm0
    00000ab9: 	callq	_Z13record_resultdPKc # Offset: 2745
    00000abe: 	movq	0x90(%rsp), %rdi
    00000ac6: 	cmpq	%r13, %rdi
    00000ac9: 	je	.Ltmp1455 # Offset: 2761
    00000acb: 	movq	0xa0(%rsp), %rax
    00000ad3: 	leaq	0x1(%rax), %rsi
    00000ad7: 	callq	_ZdlPvm@PLT # Offset: 2775
.Ltmp1455:
    00000adc: 	leaq	DATAat0x233d1(%rip), %rdx
    00000ae3: 	movq	%r14, %rsi
    00000ae6: 	movq	%r12, %rdi
    00000ae9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2793
    00000aee: 	callq	clock@PLT # Offset: 2798
    00000af3: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rcx
    00000afa: 	movq	%rax, start_time(%rip)
    00000b01: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000b08: 	movq	%rcx, 0x10(%rsp)
    00000b0d: 	subq	$0x20, %rax
    00000b11: 	cmpq	%rax, %rcx
    00000b14: 	je	.Ltmp1456 # Offset: 2836
    00000b1a: 	leaq	0x10(%rcx), %rdi
    00000b1e: 	movq	%rdi, (%rcx)
    00000b21: 	movq	0x90(%rsp), %rsi
    00000b29: 	movq	0x98(%rsp), %rcx
    00000b31: 	movq	%rsi, %rax
    00000b34: 	movq	%rsi, 0x28(%rsp)
    00000b39: 	addq	%rcx, %rax
    00000b3c: 	movq	%rcx, (%rsp)
    00000b40: 	je	.Ltmp1457 # Offset: 2880
    00000b42: 	testq	%rsi, %rsi
    00000b45: 	je	.Ltmp1458 # Offset: 2885
.Ltmp1457:
    00000b4b: 	movq	(%rsp), %rax
    00000b4f: 	movq	%rax, 0x30(%rsp)
    00000b54: 	cmpq	$0xf, %rax
    00000b58: 	ja	.Ltmp1459 # Offset: 2904
    00000b5e: 	cmpq	$0x1, (%rsp)
    00000b63: 	jne	.Ltmp1460 # Offset: 2915
    00000b69: 	movq	0x28(%rsp), %rax
    00000b6e: 	movq	0x10(%rsp), %rsi
    00000b73: 	movzbl	(%rax), %eax
    00000b76: 	movb	%al, 0x10(%rsi)
.Ltmp1646:
    00000b79: 	movq	(%rsp), %rax
    00000b7d: 	movq	0x10(%rsp), %rsi
    00000b82: 	movq	%rax, 0x8(%rsi)
    00000b86: 	movb	$0x0, (%rdi,%rax)
    00000b8a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000b91: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000b98: 	addq	$0x20, %rax
    00000b9c: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000ba3: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00000baa: 	je	.Ltmp1461 # Offset: 2986
.Ltmp1616:
    00000bb0: 	movq	-0x20(%rax), %rdi
    00000bb4: 	movq	%rdi, (%rsp)
    00000bb8: 	callq	clock@PLT # Offset: 3000
    00000bbd: 	movq	(%rsp), %rdi
    00000bc1: 	pxor	%xmm0, %xmm0
    00000bc5: 	movq	%rax, end_time(%rip)
    00000bcc: 	subq	start_time(%rip), %rax
    00000bd3: 	cvtsi2sd	%rax, %xmm0
    00000bd8: 	divsd	DATAat0x23450(%rip), %xmm0
    00000be0: 	callq	_Z13record_resultdPKc # Offset: 3040
    00000be5: 	movq	0x90(%rsp), %rdi
    00000bed: 	cmpq	%r13, %rdi
    00000bf0: 	je	.Ltmp1462 # Offset: 3056
    00000bf2: 	movq	0xa0(%rsp), %rax
    00000bfa: 	leaq	0x1(%rax), %rsi
    00000bfe: 	callq	_ZdlPvm@PLT # Offset: 3070
.Ltmp1462:
    00000c03: 	leaq	DATAat0x233e0(%rip), %rdx
    00000c0a: 	movq	%r14, %rsi
    00000c0d: 	movq	%r12, %rdi
    00000c10: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3088
    00000c15: 	callq	clock@PLT # Offset: 3093
    00000c1a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00000c21: 	movq	%rax, start_time(%rip)
    00000c28: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000c2f: 	movq	%rsi, 0x10(%rsp)
    00000c34: 	subq	$0x20, %rax
    00000c38: 	cmpq	%rax, %rsi
    00000c3b: 	je	.Ltmp1463 # Offset: 3131
    00000c41: 	leaq	0x10(%rsi), %rdi
    00000c45: 	movq	%rdi, (%rsi)
    00000c48: 	movq	0x90(%rsp), %rcx
    00000c50: 	movq	0x98(%rsp), %rsi
    00000c58: 	movq	%rcx, %rax
    00000c5b: 	movq	%rcx, 0x28(%rsp)
    00000c60: 	addq	%rsi, %rax
    00000c63: 	movq	%rsi, (%rsp)
    00000c67: 	je	.Ltmp1464 # Offset: 3175
    00000c69: 	testq	%rcx, %rcx
    00000c6c: 	je	.Ltmp1465 # Offset: 3180
.Ltmp1464:
    00000c72: 	movq	(%rsp), %rax
    00000c76: 	movq	%rax, 0x30(%rsp)
    00000c7b: 	cmpq	$0xf, %rax
    00000c7f: 	ja	.Ltmp1466 # Offset: 3199
    00000c85: 	cmpq	$0x1, (%rsp)
    00000c8a: 	jne	.Ltmp1467 # Offset: 3210
    00000c90: 	movq	0x28(%rsp), %rax
    00000c95: 	movq	0x10(%rsp), %rcx
    00000c9a: 	movzbl	(%rax), %eax
    00000c9d: 	movb	%al, 0x10(%rcx)
.Ltmp1651:
    00000ca0: 	movq	(%rsp), %rax
    00000ca4: 	movq	0x10(%rsp), %rcx
    00000ca9: 	movq	%rax, 0x8(%rcx)
    00000cad: 	movb	$0x0, (%rdi,%rax)
    00000cb1: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000cb8: 	addq	$0x20, %rax
    00000cbc: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1645:
    00000cc3: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000cca: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000cd1: 	je	.Ltmp1468 # Offset: 3281
.Ltmp1644:
    00000cd7: 	movq	-0x20(%rax), %rdi
    00000cdb: 	movq	%rdi, (%rsp)
    00000cdf: 	callq	clock@PLT # Offset: 3295
    00000ce4: 	movq	(%rsp), %rdi
    00000ce8: 	pxor	%xmm0, %xmm0
    00000cec: 	movq	%rax, end_time(%rip)
    00000cf3: 	subq	start_time(%rip), %rax
    00000cfa: 	cvtsi2sd	%rax, %xmm0
    00000cff: 	divsd	DATAat0x23450(%rip), %xmm0
    00000d07: 	callq	_Z13record_resultdPKc # Offset: 3335
    00000d0c: 	movq	0x90(%rsp), %rdi
    00000d14: 	cmpq	%r13, %rdi
    00000d17: 	je	.Ltmp1469 # Offset: 3351
    00000d19: 	movq	0xa0(%rsp), %rax
    00000d21: 	leaq	0x1(%rax), %rsi
    00000d25: 	callq	_ZdlPvm@PLT # Offset: 3365
.Ltmp1469:
    00000d2a: 	leaq	DATAat0x233ee(%rip), %rdx
    00000d31: 	movq	%r14, %rsi
    00000d34: 	movq	%r12, %rdi
    00000d37: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3383
    00000d3c: 	callq	clock@PLT # Offset: 3388
    00000d41: 	movq	%r12, %rsi
    00000d44: 	movq	%r15, %rdi
    00000d47: 	movq	%rax, start_time(%rip)
    00000d4e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3406
    00000d53: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000d5a: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000d61: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000d68: 	je	.Ltmp1470 # Offset: 3432
.Ltmp1643:
    00000d6e: 	movq	-0x20(%rax), %rdi
    00000d72: 	movq	%rdi, (%rsp)
    00000d76: 	callq	clock@PLT # Offset: 3446
    00000d7b: 	movq	(%rsp), %rdi
    00000d7f: 	pxor	%xmm0, %xmm0
    00000d83: 	movq	%rax, end_time(%rip)
    00000d8a: 	subq	start_time(%rip), %rax
    00000d91: 	cvtsi2sd	%rax, %xmm0
    00000d96: 	divsd	DATAat0x23450(%rip), %xmm0
    00000d9e: 	callq	_Z13record_resultdPKc # Offset: 3486
    00000da3: 	movq	0x90(%rsp), %rdi
    00000dab: 	cmpq	%r13, %rdi
    00000dae: 	je	.Ltmp1471 # Offset: 3502
    00000db0: 	movq	0xa0(%rsp), %rax
    00000db8: 	leaq	0x1(%rax), %rsi
    00000dbc: 	callq	_ZdlPvm@PLT # Offset: 3516
.Ltmp1471:
    00000dc1: 	leaq	0x70(%rsp), %rdi
    00000dc6: 	leaq	DATAat0x232a5(%rip), %rdx
    00000dcd: 	movq	%r14, %rsi
    00000dd0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3536
    00000dd5: 	movl	iterations(%rip), %edx
    00000ddb: 	movq	0x70(%rsp), %rdi
    00000de0: 	xorl	%r8d, %r8d
    00000de3: 	xorl	%ecx, %ecx
    00000de5: 	movl	$0x1f40, %esi
    00000dea: 	callq	_Z9summarizePKciiii # Offset: 3562
    00000def: 	movslq	base_iterations(%rip), %rax
    00000df6: 	movq	%r14, %rsi
    00000df9: 	movq	%r12, %rdi
    00000dfc: 	movq	%rax, %rdx
    00000dff: 	imulq	$0x66666667, %rax, %rax
    00000e06: 	sarl	$0x1f, %edx
    00000e09: 	sarq	$0x22, %rax
    00000e0d: 	subl	%edx, %eax
    00000e0f: 	leaq	DATAat0x232be(%rip), %rdx
    00000e16: 	movl	%eax, iterations(%rip)
    00000e1c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3612
    00000e21: 	callq	clock@PLT # Offset: 3617
    00000e26: 	movl	iterations(%rip), %ecx
    00000e2c: 	movq	%rax, start_time(%rip)
    00000e33: 	testl	%ecx, %ecx
    00000e35: 	jle	.Ltmp1472 # Offset: 3637
    00000e3b: 	movdqa	DATAat0x23790(%rip), %xmm6
    00000e43: 	movl	$0x0, 0x10(%rsp)
    00000e4b: 	movaps	%xmm6, (%rsp)
    00000e4f: 	nop # Size: 1
.Ltmp1475:
    00000e50: 	movq	%rbp, %rax
    00000e53: 	pxor	%xmm0, %xmm0
    00000e57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1473:
    00000e60: 	movdqa	(%rsp), %xmm1
    00000e65: 	paddd	(%rax), %xmm1
    00000e69: 	addq	$0x10, %rax
    00000e6d: 	paddd	%xmm1, %xmm0
    00000e71: 	cmpq	%rax, %rbx
    00000e74: 	jne	.Ltmp1473 # Offset: 3700
    00000e76: 	cvttsd2si	init_value(%rip), %edx
    00000e7e: 	movdqa	%xmm0, %xmm1
    00000e82: 	psrldq	$0x8, %xmm1
    00000e87: 	paddd	%xmm1, %xmm0
    00000e8b: 	movdqa	%xmm0, %xmm1
    00000e8f: 	addl	$0xa, %edx
    00000e92: 	psrldq	$0x4, %xmm1
    00000e97: 	imull	$0x1f40, %edx, %edx
    00000e9d: 	paddd	%xmm1, %xmm0
    00000ea1: 	movd	%xmm0, %eax
    00000ea5: 	cmpl	%eax, %edx
    00000ea7: 	je	.Ltmp1474 # Offset: 3751
    00000ea9: 	movl	current_test(%rip), %edx
    00000eaf: 	leaq	DATAat0x231d2(%rip), %rsi
    00000eb6: 	movl	$0x1, %edi
    00000ebb: 	xorl	%eax, %eax
    00000ebd: 	callq	__printf_chk@PLT # Offset: 3773
    00000ec2: 	movl	iterations(%rip), %ecx
.Ltmp1474:
    00000ec8: 	addl	$0x1, 0x10(%rsp)
    00000ecd: 	movl	0x10(%rsp), %eax
    00000ed1: 	cmpl	%ecx, %eax
    00000ed3: 	jl	.Ltmp1475 # Offset: 3795
.Ltmp1472:
    00000ed9: 	movq	%r12, %rsi
    00000edc: 	movq	%r15, %rdi
    00000edf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3807
    00000ee4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000eeb: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000ef2: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000ef9: 	je	.Ltmp1476 # Offset: 3833
.Ltmp1642:
    00000eff: 	movq	-0x20(%rax), %rdi
    00000f03: 	movq	%rdi, (%rsp)
    00000f07: 	callq	clock@PLT # Offset: 3847
    00000f0c: 	movq	(%rsp), %rdi
    00000f10: 	pxor	%xmm0, %xmm0
    00000f14: 	movq	%rax, end_time(%rip)
    00000f1b: 	subq	start_time(%rip), %rax
    00000f22: 	cvtsi2sd	%rax, %xmm0
    00000f27: 	divsd	DATAat0x23450(%rip), %xmm0
    00000f2f: 	callq	_Z13record_resultdPKc # Offset: 3887
    00000f34: 	movq	0x90(%rsp), %rdi
    00000f3c: 	cmpq	%r13, %rdi
    00000f3f: 	je	.Ltmp1477 # Offset: 3903
    00000f41: 	movq	0xa0(%rsp), %rax
    00000f49: 	leaq	0x1(%rax), %rsi
    00000f4d: 	callq	_ZdlPvm@PLT # Offset: 3917
.Ltmp1477:
    00000f52: 	leaq	DATAat0x232cc(%rip), %rdx
    00000f59: 	movq	%r14, %rsi
    00000f5c: 	movq	%r12, %rdi
    00000f5f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3935
    00000f64: 	callq	clock@PLT # Offset: 3940
    00000f69: 	movl	iterations(%rip), %ecx
    00000f6f: 	movq	%rax, start_time(%rip)
    00000f76: 	testl	%ecx, %ecx
    00000f78: 	jle	.Ltmp1478 # Offset: 3960
    00000f7e: 	movdqa	DATAat0x23790(%rip), %xmm7
    00000f86: 	movl	$0x0, 0x10(%rsp)
    00000f8e: 	movaps	%xmm7, (%rsp)
    00000f92: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1481:
    00000f98: 	movq	%rbp, %rax
    00000f9b: 	pxor	%xmm0, %xmm0
    00000f9f: 	nop # Size: 1
.Ltmp1479:
    00000fa0: 	movdqa	(%rsp), %xmm1
    00000fa5: 	paddd	(%rax), %xmm1
    00000fa9: 	addq	$0x10, %rax
    00000fad: 	paddd	%xmm1, %xmm0
    00000fb1: 	cmpq	%rbx, %rax
    00000fb4: 	jne	.Ltmp1479 # Offset: 4020
    00000fb6: 	cvttsd2si	init_value(%rip), %edx
    00000fbe: 	movdqa	%xmm0, %xmm1
    00000fc2: 	psrldq	$0x8, %xmm1
    00000fc7: 	paddd	%xmm1, %xmm0
    00000fcb: 	movdqa	%xmm0, %xmm1
    00000fcf: 	addl	$0xa, %edx
    00000fd2: 	psrldq	$0x4, %xmm1
    00000fd7: 	imull	$0x1f40, %edx, %edx
    00000fdd: 	paddd	%xmm1, %xmm0
    00000fe1: 	movd	%xmm0, %eax
    00000fe5: 	cmpl	%eax, %edx
    00000fe7: 	je	.Ltmp1480 # Offset: 4071
    00000fe9: 	movl	current_test(%rip), %edx
    00000fef: 	leaq	DATAat0x231d2(%rip), %rsi
    00000ff6: 	movl	$0x1, %edi
    00000ffb: 	xorl	%eax, %eax
    00000ffd: 	callq	__printf_chk@PLT # Offset: 4093
    00001002: 	movl	iterations(%rip), %ecx
.Ltmp1480:
    00001008: 	addl	$0x1, 0x10(%rsp)
    0000100d: 	movl	0x10(%rsp), %eax
    00001011: 	cmpl	%ecx, %eax
    00001013: 	jl	.Ltmp1481 # Offset: 4115
.Ltmp1478:
    00001019: 	movq	%r12, %rsi
    0000101c: 	movq	%r15, %rdi
    0000101f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4127
    00001024: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000102b: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001032: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001039: 	je	.Ltmp1482 # Offset: 4153
.Ltmp1641:
    0000103f: 	movq	-0x20(%rax), %rdi
    00001043: 	movq	%rdi, (%rsp)
    00001047: 	callq	clock@PLT # Offset: 4167
    0000104c: 	movq	(%rsp), %rdi
    00001050: 	pxor	%xmm0, %xmm0
    00001054: 	movq	%rax, end_time(%rip)
    0000105b: 	subq	start_time(%rip), %rax
    00001062: 	cvtsi2sd	%rax, %xmm0
    00001067: 	divsd	DATAat0x23450(%rip), %xmm0
    0000106f: 	callq	_Z13record_resultdPKc # Offset: 4207
    00001074: 	movq	0x90(%rsp), %rdi
    0000107c: 	cmpq	%r13, %rdi
    0000107f: 	je	.Ltmp1483 # Offset: 4223
    00001081: 	movq	0xa0(%rsp), %rax
    00001089: 	leaq	0x1(%rax), %rsi
    0000108d: 	callq	_ZdlPvm@PLT # Offset: 4237
.Ltmp1483:
    00001092: 	leaq	DATAat0x232e4(%rip), %rdx
    00001099: 	movq	%r14, %rsi
    0000109c: 	movq	%r12, %rdi
    0000109f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4255
    000010a4: 	callq	clock@PLT # Offset: 4260
    000010a9: 	movl	iterations(%rip), %ecx
    000010af: 	movq	%rax, start_time(%rip)
    000010b6: 	testl	%ecx, %ecx
    000010b8: 	jle	.Ltmp1484 # Offset: 4280
    000010be: 	movdqa	DATAat0x237a0(%rip), %xmm6
    000010c6: 	movl	$0x0, 0x10(%rsp)
    000010ce: 	movaps	%xmm6, (%rsp)
    000010d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1487:
    000010d8: 	movq	%rbp, %rax
    000010db: 	pxor	%xmm0, %xmm0
    000010df: 	nop # Size: 1
.Ltmp1485:
    000010e0: 	movdqa	(%rsp), %xmm1
    000010e5: 	paddd	(%rax), %xmm1
    000010e9: 	addq	$0x10, %rax
    000010ed: 	paddd	%xmm1, %xmm0
    000010f1: 	cmpq	%rax, %rbx
    000010f4: 	jne	.Ltmp1485 # Offset: 4340
    000010f6: 	cvttsd2si	init_value(%rip), %edx
    000010fe: 	movdqa	%xmm0, %xmm1
    00001102: 	psrldq	$0x8, %xmm1
    00001107: 	paddd	%xmm1, %xmm0
    0000110b: 	movdqa	%xmm0, %xmm1
    0000110f: 	subl	$0xa, %edx
    00001112: 	psrldq	$0x4, %xmm1
    00001117: 	imull	$0x1f40, %edx, %edx
    0000111d: 	paddd	%xmm1, %xmm0
    00001121: 	movd	%xmm0, %eax
    00001125: 	cmpl	%eax, %edx
    00001127: 	je	.Ltmp1486 # Offset: 4391
    00001129: 	movl	current_test(%rip), %edx
    0000112f: 	leaq	DATAat0x231d2(%rip), %rsi
    00001136: 	movl	$0x1, %edi
    0000113b: 	xorl	%eax, %eax
    0000113d: 	callq	__printf_chk@PLT # Offset: 4413
    00001142: 	movl	iterations(%rip), %ecx
.Ltmp1486:
    00001148: 	addl	$0x1, 0x10(%rsp)
    0000114d: 	movl	0x10(%rsp), %eax
    00001151: 	cmpl	%ecx, %eax
    00001153: 	jl	.Ltmp1487 # Offset: 4435
.Ltmp1484:
    00001159: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001160: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rcx
    00001167: 	subq	$0x20, %rax
    0000116b: 	movq	%rcx, (%rsp)
    0000116f: 	cmpq	%rax, %rcx
    00001172: 	je	.Ltmp1488 # Offset: 4466
    00001178: 	leaq	0x10(%rcx), %rdi
    0000117c: 	movq	%rdi, (%rcx)
    0000117f: 	movq	0x90(%rsp), %rsi
    00001187: 	movq	0x98(%rsp), %rcx
    0000118f: 	movq	%rsi, %rax
    00001192: 	movq	%rsi, 0x28(%rsp)
    00001197: 	addq	%rcx, %rax
    0000119a: 	movq	%rcx, 0x10(%rsp)
    0000119f: 	je	.Ltmp1489 # Offset: 4511
    000011a1: 	testq	%rsi, %rsi
    000011a4: 	je	.Ltmp1490 # Offset: 4516
.Ltmp1489:
    000011aa: 	movq	0x10(%rsp), %rax
    000011af: 	movq	%rax, 0x30(%rsp)
    000011b4: 	cmpq	$0xf, %rax
    000011b8: 	ja	.Ltmp1491 # Offset: 4536
    000011be: 	cmpq	$0x1, 0x10(%rsp)
    000011c4: 	jne	.Ltmp1492 # Offset: 4548
    000011ca: 	movq	0x28(%rsp), %rax
    000011cf: 	movq	(%rsp), %rsi
    000011d3: 	movzbl	(%rax), %eax
    000011d6: 	movb	%al, 0x10(%rsi)
.Ltmp1648:
    000011d9: 	movq	0x10(%rsp), %rax
    000011de: 	movq	(%rsp), %rsi
    000011e2: 	movq	%rax, 0x8(%rsi)
    000011e6: 	movb	$0x0, (%rdi,%rax)
    000011ea: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000011f1: 	addq	$0x20, %rax
    000011f5: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1640:
    000011fc: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001203: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000120a: 	je	.Ltmp1493 # Offset: 4618
.Ltmp1639:
    00001210: 	movq	-0x20(%rax), %rdi
    00001214: 	movq	%rdi, (%rsp)
    00001218: 	callq	clock@PLT # Offset: 4632
    0000121d: 	movq	(%rsp), %rdi
    00001221: 	pxor	%xmm0, %xmm0
    00001225: 	movq	%rax, end_time(%rip)
    0000122c: 	subq	start_time(%rip), %rax
    00001233: 	cvtsi2sd	%rax, %xmm0
    00001238: 	divsd	DATAat0x23450(%rip), %xmm0
    00001240: 	callq	_Z13record_resultdPKc # Offset: 4672
    00001245: 	movq	0x90(%rsp), %rdi
    0000124d: 	cmpq	%r13, %rdi
    00001250: 	je	.Ltmp1494 # Offset: 4688
    00001252: 	movq	0xa0(%rsp), %rax
    0000125a: 	leaq	0x1(%rax), %rsi
    0000125e: 	callq	_ZdlPvm@PLT # Offset: 4702
.Ltmp1494:
    00001263: 	leaq	DATAat0x232f7(%rip), %rdx
    0000126a: 	movq	%r14, %rsi
    0000126d: 	movq	%r12, %rdi
    00001270: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4720
    00001275: 	callq	clock@PLT # Offset: 4725
    0000127a: 	movl	iterations(%rip), %ecx
    00001280: 	movq	%rax, start_time(%rip)
    00001287: 	testl	%ecx, %ecx
    00001289: 	jle	.Ltmp1495 # Offset: 4745
    0000128f: 	movdqa	DATAat0x237a0(%rip), %xmm7
    00001297: 	movl	$0x0, 0x10(%rsp)
    0000129f: 	movaps	%xmm7, (%rsp)
    000012a3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1498:
    000012a8: 	movq	%rbp, %rax
    000012ab: 	pxor	%xmm0, %xmm0
    000012af: 	nop # Size: 1
.Ltmp1496:
    000012b0: 	movdqa	(%rsp), %xmm1
    000012b5: 	paddd	(%rax), %xmm1
    000012b9: 	addq	$0x10, %rax
    000012bd: 	paddd	%xmm1, %xmm0
    000012c1: 	cmpq	%rbx, %rax
    000012c4: 	jne	.Ltmp1496 # Offset: 4804
    000012c6: 	cvttsd2si	init_value(%rip), %edx
    000012ce: 	movdqa	%xmm0, %xmm1
    000012d2: 	psrldq	$0x8, %xmm1
    000012d7: 	paddd	%xmm1, %xmm0
    000012db: 	movdqa	%xmm0, %xmm1
    000012df: 	subl	$0xa, %edx
    000012e2: 	psrldq	$0x4, %xmm1
    000012e7: 	imull	$0x1f40, %edx, %edx
    000012ed: 	paddd	%xmm1, %xmm0
    000012f1: 	movd	%xmm0, %eax
    000012f5: 	cmpl	%eax, %edx
    000012f7: 	je	.Ltmp1497 # Offset: 4855
    000012f9: 	movl	current_test(%rip), %edx
    000012ff: 	leaq	DATAat0x231d2(%rip), %rsi
    00001306: 	movl	$0x1, %edi
    0000130b: 	xorl	%eax, %eax
    0000130d: 	callq	__printf_chk@PLT # Offset: 4877
    00001312: 	movl	iterations(%rip), %ecx
.Ltmp1497:
    00001318: 	addl	$0x1, 0x10(%rsp)
    0000131d: 	movl	0x10(%rsp), %eax
    00001321: 	cmpl	%ecx, %eax
    00001323: 	jl	.Ltmp1498 # Offset: 4899
.Ltmp1495:
    00001329: 	movq	%r12, %rsi
    0000132c: 	movq	%r15, %rdi
    0000132f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4911
    00001334: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000133b: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001342: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001349: 	je	.Ltmp1499 # Offset: 4937
.Ltmp1638:
    0000134f: 	movq	-0x20(%rax), %rdi
    00001353: 	movq	%rdi, (%rsp)
    00001357: 	callq	clock@PLT # Offset: 4951
    0000135c: 	movq	(%rsp), %rdi
    00001360: 	pxor	%xmm0, %xmm0
    00001364: 	movq	%rax, end_time(%rip)
    0000136b: 	subq	start_time(%rip), %rax
    00001372: 	cvtsi2sd	%rax, %xmm0
    00001377: 	divsd	DATAat0x23450(%rip), %xmm0
    0000137f: 	callq	_Z13record_resultdPKc # Offset: 4991
    00001384: 	movq	0x90(%rsp), %rdi
    0000138c: 	cmpq	%r13, %rdi
    0000138f: 	je	.Ltmp1500 # Offset: 5007
    00001391: 	movq	0xa0(%rsp), %rax
    00001399: 	leaq	0x1(%rax), %rsi
    0000139d: 	callq	_ZdlPvm@PLT # Offset: 5021
.Ltmp1500:
    000013a2: 	leaq	DATAat0x23314(%rip), %rdx
    000013a9: 	movq	%r14, %rsi
    000013ac: 	movq	%r12, %rdi
    000013af: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5039
    000013b4: 	callq	clock@PLT # Offset: 5044
    000013b9: 	movl	iterations(%rip), %ecx
    000013bf: 	movl	$0x0, (%rsp)
    000013c6: 	movq	%rax, start_time(%rip)
    000013cd: 	testl	%ecx, %ecx
    000013cf: 	jle	.Ltmp1501 # Offset: 5071
    000013d5: 	nopl	(%rax) # Size: 3
.Ltmp1504:
    000013d8: 	movq	%rbp, %rax
    000013db: 	pxor	%xmm1, %xmm1
    000013df: 	nop # Size: 1
.Ltmp1502:
    000013e0: 	movdqa	(%rax), %xmm0
    000013e4: 	addq	$0x10, %rax
    000013e8: 	pslld	$0x4, %xmm0
    000013ed: 	psubd	-0x10(%rax), %xmm0
    000013f2: 	pslld	$0x3, %xmm0
    000013f7: 	paddd	%xmm0, %xmm1
    000013fb: 	cmpq	%rax, %rbx
    000013fe: 	jne	.Ltmp1502 # Offset: 5118
    00001400: 	movdqa	%xmm1, %xmm0
    00001404: 	cvttsd2si	init_value(%rip), %edx
    0000140c: 	psrldq	$0x8, %xmm0
    00001411: 	paddd	%xmm0, %xmm1
    00001415: 	movdqa	%xmm1, %xmm0
    00001419: 	psrldq	$0x4, %xmm0
    0000141e: 	imull	$0xea600, %edx, %edx
    00001424: 	paddd	%xmm0, %xmm1
    00001428: 	movd	%xmm1, %eax
    0000142c: 	cmpl	%eax, %edx
    0000142e: 	je	.Ltmp1503 # Offset: 5166
    00001430: 	movl	current_test(%rip), %edx
    00001436: 	leaq	DATAat0x231d2(%rip), %rsi
    0000143d: 	movl	$0x1, %edi
    00001442: 	xorl	%eax, %eax
    00001444: 	callq	__printf_chk@PLT # Offset: 5188
    00001449: 	movl	iterations(%rip), %ecx
.Ltmp1503:
    0000144f: 	addl	$0x1, (%rsp)
    00001453: 	movl	(%rsp), %eax
    00001456: 	cmpl	%ecx, %eax
    00001458: 	jl	.Ltmp1504 # Offset: 5208
.Ltmp1501:
    0000145e: 	movq	%r12, %rsi
    00001461: 	movq	%r15, %rdi
    00001464: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5220
    00001469: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001470: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001477: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000147e: 	je	.Ltmp1505 # Offset: 5246
.Ltmp1637:
    00001484: 	movq	-0x20(%rax), %rdi
    00001488: 	movq	%rdi, (%rsp)
    0000148c: 	callq	clock@PLT # Offset: 5260
    00001491: 	movq	(%rsp), %rdi
    00001495: 	pxor	%xmm0, %xmm0
    00001499: 	movq	%rax, end_time(%rip)
    000014a0: 	subq	start_time(%rip), %rax
    000014a7: 	cvtsi2sd	%rax, %xmm0
    000014ac: 	divsd	DATAat0x23450(%rip), %xmm0
    000014b4: 	callq	_Z13record_resultdPKc # Offset: 5300
    000014b9: 	movq	0x90(%rsp), %rdi
    000014c1: 	cmpq	%r13, %rdi
    000014c4: 	je	.Ltmp1506 # Offset: 5316
    000014c6: 	movq	0xa0(%rsp), %rax
    000014ce: 	leaq	0x1(%rax), %rsi
    000014d2: 	callq	_ZdlPvm@PLT # Offset: 5330
.Ltmp1506:
    000014d7: 	leaq	DATAat0x23327(%rip), %rdx
    000014de: 	movq	%r14, %rsi
    000014e1: 	movq	%r12, %rdi
    000014e4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5348
    000014e9: 	callq	clock@PLT # Offset: 5353
    000014ee: 	movl	iterations(%rip), %ecx
    000014f4: 	movl	$0x0, (%rsp)
    000014fb: 	movq	%rax, start_time(%rip)
    00001502: 	testl	%ecx, %ecx
    00001504: 	jle	.Ltmp1507 # Offset: 5380
    0000150a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1510:
    00001510: 	movq	%rbp, %rax
    00001513: 	pxor	%xmm1, %xmm1
    00001517: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1508:
    00001520: 	movdqa	(%rax), %xmm0
    00001524: 	addq	$0x10, %rax
    00001528: 	pslld	$0x4, %xmm0
    0000152d: 	psubd	-0x10(%rax), %xmm0
    00001532: 	pslld	$0x3, %xmm0
    00001537: 	paddd	%xmm0, %xmm1
    0000153b: 	cmpq	%rbx, %rax
    0000153e: 	jne	.Ltmp1508 # Offset: 5438
    00001540: 	movdqa	%xmm1, %xmm0
    00001544: 	cvttsd2si	init_value(%rip), %edx
    0000154c: 	psrldq	$0x8, %xmm0
    00001551: 	paddd	%xmm0, %xmm1
    00001555: 	movdqa	%xmm1, %xmm0
    00001559: 	psrldq	$0x4, %xmm0
    0000155e: 	imull	$0xea600, %edx, %edx
    00001564: 	paddd	%xmm0, %xmm1
    00001568: 	movd	%xmm1, %eax
    0000156c: 	cmpl	%eax, %edx
    0000156e: 	je	.Ltmp1509 # Offset: 5486
    00001570: 	movl	current_test(%rip), %edx
    00001576: 	leaq	DATAat0x231d2(%rip), %rsi
    0000157d: 	movl	$0x1, %edi
    00001582: 	xorl	%eax, %eax
    00001584: 	callq	__printf_chk@PLT # Offset: 5508
    00001589: 	movl	iterations(%rip), %ecx
.Ltmp1509:
    0000158f: 	addl	$0x1, (%rsp)
    00001593: 	movl	(%rsp), %eax
    00001596: 	cmpl	%ecx, %eax
    00001598: 	jl	.Ltmp1510 # Offset: 5528
.Ltmp1507:
    0000159e: 	movq	%r12, %rsi
    000015a1: 	movq	%r15, %rdi
    000015a4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5540
    000015a9: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000015b0: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000015b7: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000015be: 	je	.Ltmp1511 # Offset: 5566
.Ltmp1636:
    000015c4: 	movq	-0x20(%rax), %rdi
    000015c8: 	movq	%rdi, (%rsp)
    000015cc: 	callq	clock@PLT # Offset: 5580
    000015d1: 	movq	(%rsp), %rdi
    000015d5: 	pxor	%xmm0, %xmm0
    000015d9: 	movq	%rax, end_time(%rip)
    000015e0: 	subq	start_time(%rip), %rax
    000015e7: 	cvtsi2sd	%rax, %xmm0
    000015ec: 	divsd	DATAat0x23450(%rip), %xmm0
    000015f4: 	callq	_Z13record_resultdPKc # Offset: 5620
    000015f9: 	movq	0x90(%rsp), %rdi
    00001601: 	cmpq	%r13, %rdi
    00001604: 	je	.Ltmp1512 # Offset: 5636
    00001606: 	movq	0xa0(%rsp), %rax
    0000160e: 	leaq	0x1(%rax), %rsi
    00001612: 	callq	_ZdlPvm@PLT # Offset: 5650
.Ltmp1512:
    00001617: 	leaq	DATAat0x23345(%rip), %rdx
    0000161e: 	movq	%r14, %rsi
    00001621: 	movq	%r12, %rdi
    00001624: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5668
    00001629: 	callq	clock@PLT # Offset: 5673
    0000162e: 	movl	iterations(%rip), %ecx
    00001634: 	movq	%rax, start_time(%rip)
    0000163b: 	testl	%ecx, %ecx
    0000163d: 	jle	.Ltmp1513 # Offset: 5693
    00001643: 	movl	$0x0, (%rsp)
    0000164a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1516:
    00001650: 	movq	%rbp, %rax
    00001653: 	pxor	%xmm0, %xmm0
    00001657: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1514:
    00001660: 	movdqa	DATAat0x237b0(%rip), %xmm1
    00001668: 	paddd	(%rax), %xmm1
    0000166c: 	addq	$0x10, %rax
    00001670: 	paddd	%xmm1, %xmm0
    00001674: 	cmpq	%rax, %rbx
    00001677: 	jne	.Ltmp1514 # Offset: 5751
    00001679: 	cvttsd2si	init_value(%rip), %edx
    00001681: 	movdqa	%xmm0, %xmm1
    00001685: 	psrldq	$0x8, %xmm1
    0000168a: 	paddd	%xmm1, %xmm0
    0000168e: 	movdqa	%xmm0, %xmm1
    00001692: 	addl	$0x78, %edx
    00001695: 	psrldq	$0x4, %xmm1
    0000169a: 	imull	$0x1f40, %edx, %edx
    000016a0: 	paddd	%xmm1, %xmm0
    000016a4: 	movd	%xmm0, %eax
    000016a8: 	cmpl	%eax, %edx
    000016aa: 	je	.Ltmp1515 # Offset: 5802
    000016ac: 	movl	current_test(%rip), %edx
    000016b2: 	leaq	DATAat0x231d2(%rip), %rsi
    000016b9: 	movl	$0x1, %edi
    000016be: 	xorl	%eax, %eax
    000016c0: 	callq	__printf_chk@PLT # Offset: 5824
    000016c5: 	movl	iterations(%rip), %ecx
.Ltmp1515:
    000016cb: 	addl	$0x1, (%rsp)
    000016cf: 	movl	(%rsp), %eax
    000016d2: 	cmpl	%ecx, %eax
    000016d4: 	jl	.Ltmp1516 # Offset: 5844
.Ltmp1513:
    000016da: 	movq	%r12, %rsi
    000016dd: 	movq	%r15, %rdi
    000016e0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5856
    000016e5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000016ec: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000016f3: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000016fa: 	je	.Ltmp1517 # Offset: 5882
.Ltmp1635:
    00001700: 	movq	-0x20(%rax), %rdi
    00001704: 	movq	%rdi, (%rsp)
    00001708: 	callq	clock@PLT # Offset: 5896
    0000170d: 	movq	(%rsp), %rdi
    00001711: 	pxor	%xmm0, %xmm0
    00001715: 	movq	%rax, end_time(%rip)
    0000171c: 	subq	start_time(%rip), %rax
    00001723: 	cvtsi2sd	%rax, %xmm0
    00001728: 	divsd	DATAat0x23450(%rip), %xmm0
    00001730: 	callq	_Z13record_resultdPKc # Offset: 5936
    00001735: 	movq	0x90(%rsp), %rdi
    0000173d: 	cmpq	%r13, %rdi
    00001740: 	je	.Ltmp1518 # Offset: 5952
    00001742: 	movq	0xa0(%rsp), %rax
    0000174a: 	leaq	0x1(%rax), %rsi
    0000174e: 	callq	_ZdlPvm@PLT # Offset: 5966
.Ltmp1518:
    00001753: 	leaq	DATAat0x23362(%rip), %rdx
    0000175a: 	movq	%r14, %rsi
    0000175d: 	movq	%r12, %rdi
    00001760: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5984
    00001765: 	callq	clock@PLT # Offset: 5989
    0000176a: 	movl	iterations(%rip), %ecx
    00001770: 	movq	%rax, start_time(%rip)
    00001777: 	testl	%ecx, %ecx
    00001779: 	jle	.Ltmp1519 # Offset: 6009
    0000177f: 	pxor	%xmm6, %xmm6
    00001783: 	movl	$0x0, 0x10(%rsp)
    0000178b: 	pcmpgtd	DATAat0x237c0(%rip), %xmm6
    00001793: 	movaps	%xmm6, (%rsp)
    00001797: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1522:
    000017a0: 	movq	%rbp, %rax
    000017a3: 	pxor	%xmm4, %xmm4
    000017a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1520:
    000017b0: 	movdqa	(%rax), %xmm1
    000017b4: 	movdqa	(%rsp), %xmm6
    000017b9: 	pxor	%xmm2, %xmm2
    000017bd: 	addq	$0x10, %rax
    000017c1: 	movdqa	%xmm1, %xmm0
    000017c5: 	movdqa	%xmm6, %xmm3
    000017c9: 	movdqa	%xmm6, %xmm5
    000017cd: 	punpckldq	%xmm1, %xmm0
    000017d1: 	pmuludq	%xmm0, %xmm3
    000017d5: 	pcmpgtd	%xmm0, %xmm2
    000017d9: 	pmuludq	DATAat0x237c0(%rip), %xmm2
    000017e1: 	pmuludq	DATAat0x237c0(%rip), %xmm0
    000017e9: 	paddq	%xmm3, %xmm2
    000017ed: 	pxor	%xmm3, %xmm3
    000017f1: 	psllq	$0x20, %xmm2
    000017f6: 	paddq	%xmm2, %xmm0
    000017fa: 	movdqa	%xmm1, %xmm2
    000017fe: 	punpckhdq	%xmm1, %xmm2
    00001802: 	psrad	$0x1f, %xmm1
    00001807: 	pmuludq	%xmm2, %xmm5
    0000180b: 	pcmpgtd	%xmm2, %xmm3
    0000180f: 	pmuludq	DATAat0x237c0(%rip), %xmm3
    00001817: 	pmuludq	DATAat0x237c0(%rip), %xmm2
    0000181f: 	paddq	%xmm5, %xmm3
    00001823: 	psllq	$0x20, %xmm3
    00001828: 	paddq	%xmm3, %xmm2
    0000182c: 	shufps	$0xdd, %xmm2, %xmm0
    00001830: 	psrad	$0x1, %xmm0
    00001835: 	psubd	%xmm1, %xmm0
    00001839: 	paddd	%xmm0, %xmm4
    0000183d: 	cmpq	%rbx, %rax
    00001840: 	jne	.Ltmp1520 # Offset: 6208
    00001846: 	cvttsd2si	init_value(%rip), %eax
    0000184e: 	movdqa	%xmm4, %xmm0
    00001852: 	psrldq	$0x8, %xmm0
    00001857: 	paddd	%xmm0, %xmm4
    0000185b: 	movdqa	%xmm4, %xmm0
    0000185f: 	movslq	%eax, %rdx
    00001862: 	sarl	$0x1f, %eax
    00001865: 	psrldq	$0x4, %xmm0
    0000186a: 	imulq	$0x66666667, %rdx, %rdx
    00001871: 	paddd	%xmm0, %xmm4
    00001875: 	sarq	$0x21, %rdx
    00001879: 	subl	%eax, %edx
    0000187b: 	movd	%xmm4, %eax
    0000187f: 	imull	$0x1f40, %edx, %edx
    00001885: 	cmpl	%eax, %edx
    00001887: 	je	.Ltmp1521 # Offset: 6279
    00001889: 	movl	current_test(%rip), %edx
    0000188f: 	leaq	DATAat0x231d2(%rip), %rsi
    00001896: 	movl	$0x1, %edi
    0000189b: 	xorl	%eax, %eax
    0000189d: 	callq	__printf_chk@PLT # Offset: 6301
    000018a2: 	movl	iterations(%rip), %ecx
.Ltmp1521:
    000018a8: 	addl	$0x1, 0x10(%rsp)
    000018ad: 	movl	0x10(%rsp), %eax
    000018b1: 	cmpl	%ecx, %eax
    000018b3: 	jl	.Ltmp1522 # Offset: 6323
.Ltmp1519:
    000018b9: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000018c0: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    000018c7: 	subq	$0x20, %rax
    000018cb: 	movq	%rsi, (%rsp)
    000018cf: 	cmpq	%rax, %rsi
    000018d2: 	je	.Ltmp1523 # Offset: 6354
    000018d8: 	leaq	0x10(%rsi), %rdi
    000018dc: 	movq	%rdi, (%rsi)
    000018df: 	movq	0x90(%rsp), %rcx
    000018e7: 	movq	0x98(%rsp), %rsi
    000018ef: 	movq	%rcx, %rax
    000018f2: 	movq	%rcx, 0x28(%rsp)
    000018f7: 	addq	%rsi, %rax
    000018fa: 	movq	%rsi, 0x10(%rsp)
    000018ff: 	je	.Ltmp1524 # Offset: 6399
    00001901: 	testq	%rcx, %rcx
    00001904: 	je	.Ltmp1525 # Offset: 6404
.Ltmp1524:
    0000190a: 	movq	0x10(%rsp), %rax
    0000190f: 	movq	%rax, 0x30(%rsp)
    00001914: 	cmpq	$0xf, %rax
    00001918: 	ja	.Ltmp1526 # Offset: 6424
    0000191e: 	cmpq	$0x1, 0x10(%rsp)
    00001924: 	jne	.Ltmp1527 # Offset: 6436
    0000192a: 	movq	0x28(%rsp), %rax
    0000192f: 	movq	(%rsp), %rcx
    00001933: 	movzbl	(%rax), %eax
    00001936: 	movb	%al, 0x10(%rcx)
.Ltmp1653:
    00001939: 	movq	0x10(%rsp), %rax
    0000193e: 	movq	(%rsp), %rcx
    00001942: 	movq	%rax, 0x8(%rcx)
    00001946: 	movb	$0x0, (%rdi,%rax)
    0000194a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001951: 	addq	$0x20, %rax
    00001955: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1634:
    0000195c: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001963: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000196a: 	je	.Ltmp1528 # Offset: 6506
.Ltmp1633:
    00001970: 	movq	-0x20(%rax), %rdi
    00001974: 	movq	%rdi, (%rsp)
    00001978: 	callq	clock@PLT # Offset: 6520
    0000197d: 	movq	(%rsp), %rdi
    00001981: 	pxor	%xmm0, %xmm0
    00001985: 	movq	%rax, end_time(%rip)
    0000198c: 	subq	start_time(%rip), %rax
    00001993: 	cvtsi2sd	%rax, %xmm0
    00001998: 	divsd	DATAat0x23450(%rip), %xmm0
    000019a0: 	callq	_Z13record_resultdPKc # Offset: 6560
    000019a5: 	movq	0x90(%rsp), %rdi
    000019ad: 	cmpq	%r13, %rdi
    000019b0: 	je	.Ltmp1529 # Offset: 6576
    000019b2: 	movq	0xa0(%rsp), %rax
    000019ba: 	leaq	0x1(%rax), %rsi
    000019be: 	callq	_ZdlPvm@PLT # Offset: 6590
.Ltmp1529:
    000019c3: 	leaq	DATAat0x23373(%rip), %rdx
    000019ca: 	movq	%r14, %rsi
    000019cd: 	movq	%r12, %rdi
    000019d0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6608
    000019d5: 	callq	clock@PLT # Offset: 6613
    000019da: 	movl	iterations(%rip), %ecx
    000019e0: 	movq	%rax, start_time(%rip)
    000019e7: 	testl	%ecx, %ecx
    000019e9: 	jle	.Ltmp1530 # Offset: 6633
    000019ef: 	pxor	%xmm7, %xmm7
    000019f3: 	movl	$0x0, 0x10(%rsp)
    000019fb: 	pcmpgtd	DATAat0x237d0(%rip), %xmm7
    00001a03: 	movaps	%xmm7, (%rsp)
    00001a07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1533:
    00001a10: 	movq	%rbp, %rax
    00001a13: 	pxor	%xmm4, %xmm4
    00001a17: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1531:
    00001a20: 	movdqa	(%rax), %xmm1
    00001a24: 	movdqa	(%rsp), %xmm7
    00001a29: 	pxor	%xmm2, %xmm2
    00001a2d: 	addq	$0x10, %rax
    00001a31: 	movdqa	%xmm1, %xmm0
    00001a35: 	movdqa	%xmm7, %xmm3
    00001a39: 	movdqa	%xmm7, %xmm5
    00001a3d: 	punpckldq	%xmm1, %xmm0
    00001a41: 	pmuludq	%xmm0, %xmm3
    00001a45: 	pcmpgtd	%xmm0, %xmm2
    00001a49: 	pmuludq	DATAat0x237d0(%rip), %xmm2
    00001a51: 	pmuludq	DATAat0x237d0(%rip), %xmm0
    00001a59: 	paddq	%xmm3, %xmm2
    00001a5d: 	pxor	%xmm3, %xmm3
    00001a61: 	psllq	$0x20, %xmm2
    00001a66: 	paddq	%xmm2, %xmm0
    00001a6a: 	movdqa	%xmm1, %xmm2
    00001a6e: 	punpckhdq	%xmm1, %xmm2
    00001a72: 	pmuludq	%xmm2, %xmm5
    00001a76: 	pcmpgtd	%xmm2, %xmm3
    00001a7a: 	pmuludq	DATAat0x237d0(%rip), %xmm3
    00001a82: 	pmuludq	DATAat0x237d0(%rip), %xmm2
    00001a8a: 	paddq	%xmm5, %xmm3
    00001a8e: 	psllq	$0x20, %xmm3
    00001a93: 	paddq	%xmm3, %xmm2
    00001a97: 	shufps	$0xdd, %xmm2, %xmm0
    00001a9b: 	paddd	%xmm1, %xmm0
    00001a9f: 	psrad	$0x1f, %xmm1
    00001aa4: 	psrad	$0x6, %xmm0
    00001aa9: 	psubd	%xmm1, %xmm0
    00001aad: 	paddd	%xmm0, %xmm4
    00001ab1: 	cmpq	%rbx, %rax
    00001ab4: 	jne	.Ltmp1531 # Offset: 6836
    00001aba: 	cvttsd2si	init_value(%rip), %eax
    00001ac2: 	movdqa	%xmm4, %xmm0
    00001ac6: 	psrldq	$0x8, %xmm0
    00001acb: 	paddd	%xmm0, %xmm4
    00001acf: 	movdqa	%xmm4, %xmm0
    00001ad3: 	movslq	%eax, %rdx
    00001ad6: 	psrldq	$0x4, %xmm0
    00001adb: 	imulq	$-0x77777777, %rdx, %rdx
    00001ae2: 	paddd	%xmm0, %xmm4
    00001ae6: 	shrq	$0x20, %rdx
    00001aea: 	addl	%eax, %edx
    00001aec: 	sarl	$0x1f, %eax
    00001aef: 	sarl	$0x6, %edx
    00001af2: 	subl	%eax, %edx
    00001af4: 	movd	%xmm4, %eax
    00001af8: 	imull	$0x1f40, %edx, %edx
    00001afe: 	cmpl	%eax, %edx
    00001b00: 	je	.Ltmp1532 # Offset: 6912
    00001b02: 	movl	current_test(%rip), %edx
    00001b08: 	leaq	DATAat0x231d2(%rip), %rsi
    00001b0f: 	movl	$0x1, %edi
    00001b14: 	xorl	%eax, %eax
    00001b16: 	callq	__printf_chk@PLT # Offset: 6934
    00001b1b: 	movl	iterations(%rip), %ecx
.Ltmp1532:
    00001b21: 	addl	$0x1, 0x10(%rsp)
    00001b26: 	movl	0x10(%rsp), %eax
    00001b2a: 	cmpl	%ecx, %eax
    00001b2c: 	jl	.Ltmp1533 # Offset: 6956
.Ltmp1530:
    00001b32: 	movq	%r12, %rsi
    00001b35: 	movq	%r15, %rdi
    00001b38: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6968
    00001b3d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001b44: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001b4b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001b52: 	je	.Ltmp1534 # Offset: 6994
.Ltmp1632:
    00001b58: 	movq	-0x20(%rax), %rdi
    00001b5c: 	movq	%rdi, (%rsp)
    00001b60: 	callq	clock@PLT # Offset: 7008
    00001b65: 	movq	(%rsp), %rdi
    00001b69: 	pxor	%xmm0, %xmm0
    00001b6d: 	movq	%rax, end_time(%rip)
    00001b74: 	subq	start_time(%rip), %rax
    00001b7b: 	cvtsi2sd	%rax, %xmm0
    00001b80: 	divsd	DATAat0x23450(%rip), %xmm0
    00001b88: 	callq	_Z13record_resultdPKc # Offset: 7048
    00001b8d: 	movq	0x90(%rsp), %rdi
    00001b95: 	cmpq	%r13, %rdi
    00001b98: 	je	.Ltmp1535 # Offset: 7064
    00001b9a: 	movq	0xa0(%rsp), %rax
    00001ba2: 	leaq	0x1(%rax), %rsi
    00001ba6: 	callq	_ZdlPvm@PLT # Offset: 7078
.Ltmp1535:
    00001bab: 	leaq	DATAat0x2338e(%rip), %rdx
    00001bb2: 	movq	%r14, %rsi
    00001bb5: 	movq	%r12, %rdi
    00001bb8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7096
    00001bbd: 	callq	clock@PLT # Offset: 7101
    00001bc2: 	movl	iterations(%rip), %ecx
    00001bc8: 	movq	%rax, start_time(%rip)
    00001bcf: 	testl	%ecx, %ecx
    00001bd1: 	jle	.Ltmp1536 # Offset: 7121
    00001bd7: 	movl	$0x0, (%rsp)
    00001bde: 	nop # Size: 2
.Ltmp1539:
    00001be0: 	movq	%rbp, %rax
    00001be3: 	pxor	%xmm0, %xmm0
    00001be7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1537:
    00001bf0: 	movdqa	DATAat0x237e0(%rip), %xmm1
    00001bf8: 	paddd	(%rax), %xmm1
    00001bfc: 	addq	$0x10, %rax
    00001c00: 	paddd	%xmm1, %xmm0
    00001c04: 	cmpq	%rbx, %rax
    00001c07: 	jne	.Ltmp1537 # Offset: 7175
    00001c09: 	cvttsd2si	init_value(%rip), %edx
    00001c11: 	movdqa	%xmm0, %xmm1
    00001c15: 	psrldq	$0x8, %xmm1
    00001c1a: 	paddd	%xmm1, %xmm0
    00001c1e: 	movdqa	%xmm0, %xmm1
    00001c22: 	addl	$0x2, %edx
    00001c25: 	psrldq	$0x4, %xmm1
    00001c2a: 	imull	$0x1f40, %edx, %edx
    00001c30: 	paddd	%xmm1, %xmm0
    00001c34: 	movd	%xmm0, %eax
    00001c38: 	cmpl	%eax, %edx
    00001c3a: 	je	.Ltmp1538 # Offset: 7226
    00001c3c: 	movl	current_test(%rip), %edx
    00001c42: 	leaq	DATAat0x231d2(%rip), %rsi
    00001c49: 	movl	$0x1, %edi
    00001c4e: 	xorl	%eax, %eax
    00001c50: 	callq	__printf_chk@PLT # Offset: 7248
    00001c55: 	movl	iterations(%rip), %ecx
.Ltmp1538:
    00001c5b: 	addl	$0x1, (%rsp)
    00001c5f: 	movl	(%rsp), %eax
    00001c62: 	cmpl	%ecx, %eax
    00001c64: 	jl	.Ltmp1539 # Offset: 7268
.Ltmp1536:
    00001c6a: 	movq	%r12, %rsi
    00001c6d: 	movq	%r15, %rdi
    00001c70: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7280
    00001c75: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001c7c: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001c83: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001c8a: 	je	.Ltmp1540 # Offset: 7306
.Ltmp1631:
    00001c90: 	movq	-0x20(%rax), %rdi
    00001c94: 	movq	%rdi, (%rsp)
    00001c98: 	callq	clock@PLT # Offset: 7320
    00001c9d: 	movq	(%rsp), %rdi
    00001ca1: 	pxor	%xmm0, %xmm0
    00001ca5: 	movq	%rax, end_time(%rip)
    00001cac: 	subq	start_time(%rip), %rax
    00001cb3: 	cvtsi2sd	%rax, %xmm0
    00001cb8: 	divsd	DATAat0x23450(%rip), %xmm0
    00001cc0: 	callq	_Z13record_resultdPKc # Offset: 7360
    00001cc5: 	movq	0x90(%rsp), %rdi
    00001ccd: 	cmpq	%r13, %rdi
    00001cd0: 	je	.Ltmp1541 # Offset: 7376
    00001cd2: 	movq	0xa0(%rsp), %rax
    00001cda: 	leaq	0x1(%rax), %rsi
    00001cde: 	callq	_ZdlPvm@PLT # Offset: 7390
.Ltmp1541:
    00001ce3: 	leaq	DATAat0x233a9(%rip), %rdx
    00001cea: 	movq	%r14, %rsi
    00001ced: 	movq	%r12, %rdi
    00001cf0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7408
    00001cf5: 	callq	clock@PLT # Offset: 7413
    00001cfa: 	movl	iterations(%rip), %ecx
    00001d00: 	movl	$0x0, (%rsp)
    00001d07: 	movq	%rax, start_time(%rip)
    00001d0e: 	testl	%ecx, %ecx
    00001d10: 	jle	.Ltmp1542 # Offset: 7440
    00001d12: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1545:
    00001d18: 	movq	%rbp, %rax
    00001d1b: 	pxor	%xmm0, %xmm0
    00001d1f: 	nop # Size: 1
.Ltmp1543:
    00001d20: 	paddd	(%rax), %xmm0
    00001d24: 	addq	$0x10, %rax
    00001d28: 	cmpq	%rbx, %rax
    00001d2b: 	jne	.Ltmp1543 # Offset: 7467
    00001d2d: 	movdqa	%xmm0, %xmm1
    00001d31: 	cvttsd2si	init_value(%rip), %edx
    00001d39: 	psrldq	$0x8, %xmm1
    00001d3e: 	paddd	%xmm1, %xmm0
    00001d42: 	movdqa	%xmm0, %xmm1
    00001d46: 	psrldq	$0x4, %xmm1
    00001d4b: 	imull	$0x1f40, %edx, %edx
    00001d51: 	paddd	%xmm1, %xmm0
    00001d55: 	movd	%xmm0, %eax
    00001d59: 	cmpl	%eax, %edx
    00001d5b: 	je	.Ltmp1544 # Offset: 7515
    00001d5d: 	movl	current_test(%rip), %edx
    00001d63: 	leaq	DATAat0x231d2(%rip), %rsi
    00001d6a: 	movl	$0x1, %edi
    00001d6f: 	xorl	%eax, %eax
    00001d71: 	callq	__printf_chk@PLT # Offset: 7537
    00001d76: 	movl	iterations(%rip), %ecx
.Ltmp1544:
    00001d7c: 	addl	$0x1, (%rsp)
    00001d80: 	movl	(%rsp), %eax
    00001d83: 	cmpl	%ecx, %eax
    00001d85: 	jl	.Ltmp1545 # Offset: 7557
.Ltmp1542:
    00001d87: 	movq	%r12, %rsi
    00001d8a: 	movq	%r15, %rdi
    00001d8d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7565
    00001d92: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001d99: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001da0: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001da7: 	je	.Ltmp1546 # Offset: 7591
.Ltmp1630:
    00001dad: 	movq	-0x20(%rax), %rdi
    00001db1: 	movq	%rdi, (%rsp)
    00001db5: 	callq	clock@PLT # Offset: 7605
    00001dba: 	movq	(%rsp), %rdi
    00001dbe: 	pxor	%xmm0, %xmm0
    00001dc2: 	movq	%rax, end_time(%rip)
    00001dc9: 	subq	start_time(%rip), %rax
    00001dd0: 	cvtsi2sd	%rax, %xmm0
    00001dd5: 	divsd	DATAat0x23450(%rip), %xmm0
    00001ddd: 	callq	_Z13record_resultdPKc # Offset: 7645
    00001de2: 	movq	0x90(%rsp), %rdi
    00001dea: 	cmpq	%r13, %rdi
    00001ded: 	je	.Ltmp1547 # Offset: 7661
    00001def: 	movq	0xa0(%rsp), %rax
    00001df7: 	leaq	0x1(%rax), %rsi
    00001dfb: 	callq	_ZdlPvm@PLT # Offset: 7675
.Ltmp1547:
    00001e00: 	leaq	DATAat0x23406(%rip), %rdx
    00001e07: 	movq	%r14, %rsi
    00001e0a: 	movq	%r12, %rdi
    00001e0d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7693
    00001e12: 	callq	clock@PLT # Offset: 7698
    00001e17: 	movl	iterations(%rip), %ecx
    00001e1d: 	movq	%rax, start_time(%rip)
    00001e24: 	testl	%ecx, %ecx
    00001e26: 	jle	.Ltmp1548 # Offset: 7718
    00001e2c: 	movdqa	DATAat0x23790(%rip), %xmm6
    00001e34: 	movl	$0x0, 0x10(%rsp)
    00001e3c: 	movaps	%xmm6, (%rsp)
.Ltmp1551:
    00001e40: 	movq	%rbp, %rax
    00001e43: 	pxor	%xmm0, %xmm0
    00001e47: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1549:
    00001e50: 	movdqa	(%rsp), %xmm1
    00001e55: 	pand	(%rax), %xmm1
    00001e59: 	addq	$0x10, %rax
    00001e5d: 	paddd	%xmm1, %xmm0
    00001e61: 	cmpq	%rbx, %rax
    00001e64: 	jne	.Ltmp1549 # Offset: 7780
    00001e66: 	cvttsd2si	init_value(%rip), %edx
    00001e6e: 	movdqa	%xmm0, %xmm1
    00001e72: 	psrldq	$0x8, %xmm1
    00001e77: 	paddd	%xmm1, %xmm0
    00001e7b: 	movdqa	%xmm0, %xmm1
    00001e7f: 	andl	$0xa, %edx
    00001e82: 	psrldq	$0x4, %xmm1
    00001e87: 	imull	$0x1f40, %edx, %edx
    00001e8d: 	paddd	%xmm1, %xmm0
    00001e91: 	movd	%xmm0, %eax
    00001e95: 	cmpl	%eax, %edx
    00001e97: 	je	.Ltmp1550 # Offset: 7831
    00001e99: 	movl	current_test(%rip), %edx
    00001e9f: 	leaq	DATAat0x231d2(%rip), %rsi
    00001ea6: 	movl	$0x1, %edi
    00001eab: 	xorl	%eax, %eax
    00001ead: 	callq	__printf_chk@PLT # Offset: 7853
    00001eb2: 	movl	iterations(%rip), %ecx
.Ltmp1550:
    00001eb8: 	addl	$0x1, 0x10(%rsp)
    00001ebd: 	movl	0x10(%rsp), %eax
    00001ec1: 	cmpl	%ecx, %eax
    00001ec3: 	jl	.Ltmp1551 # Offset: 7875
.Ltmp1548:
    00001ec9: 	movq	%r12, %rsi
    00001ecc: 	movq	%r15, %rdi
    00001ecf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7887
    00001ed4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001edb: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001ee2: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001ee9: 	je	.Ltmp1552 # Offset: 7913
.Ltmp1629:
    00001eef: 	movq	-0x20(%rax), %rdi
    00001ef3: 	movq	%rdi, (%rsp)
    00001ef7: 	callq	clock@PLT # Offset: 7927
    00001efc: 	movq	(%rsp), %rdi
    00001f00: 	pxor	%xmm0, %xmm0
    00001f04: 	movq	%rax, end_time(%rip)
    00001f0b: 	subq	start_time(%rip), %rax
    00001f12: 	cvtsi2sd	%rax, %xmm0
    00001f17: 	divsd	DATAat0x23450(%rip), %xmm0
    00001f1f: 	callq	_Z13record_resultdPKc # Offset: 7967
    00001f24: 	movq	0x90(%rsp), %rdi
    00001f2c: 	cmpq	%r13, %rdi
    00001f2f: 	je	.Ltmp1553 # Offset: 7983
    00001f31: 	movq	0xa0(%rsp), %rax
    00001f39: 	leaq	0x1(%rax), %rsi
    00001f3d: 	callq	_ZdlPvm@PLT # Offset: 7997
.Ltmp1553:
    00001f42: 	leaq	DATAat0x233fd(%rip), %rdx
    00001f49: 	movq	%r14, %rsi
    00001f4c: 	movq	%r12, %rdi
    00001f4f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8015
    00001f54: 	callq	clock@PLT # Offset: 8020
    00001f59: 	movl	iterations(%rip), %ecx
    00001f5f: 	movq	%rax, start_time(%rip)
    00001f66: 	testl	%ecx, %ecx
    00001f68: 	jle	.Ltmp1554 # Offset: 8040
    00001f6e: 	movl	$0x0, (%rsp)
    00001f75: 	nopl	(%rax) # Size: 3
.Ltmp1557:
    00001f78: 	movq	%rbp, %rax
    00001f7b: 	pxor	%xmm0, %xmm0
    00001f7f: 	nop # Size: 1
.Ltmp1555:
    00001f80: 	movdqa	DATAat0x237f0(%rip), %xmm1
    00001f88: 	pand	(%rax), %xmm1
    00001f8c: 	addq	$0x10, %rax
    00001f90: 	paddd	%xmm1, %xmm0
    00001f94: 	cmpq	%rbx, %rax
    00001f97: 	jne	.Ltmp1555 # Offset: 8087
    00001f99: 	cvttsd2si	init_value(%rip), %edx
    00001fa1: 	movdqa	%xmm0, %xmm1
    00001fa5: 	psrldq	$0x8, %xmm1
    00001faa: 	paddd	%xmm1, %xmm0
    00001fae: 	movdqa	%xmm0, %xmm1
    00001fb2: 	andl	$0xe, %edx
    00001fb5: 	psrldq	$0x4, %xmm1
    00001fba: 	imull	$0x1f40, %edx, %edx
    00001fc0: 	paddd	%xmm1, %xmm0
    00001fc4: 	movd	%xmm0, %eax
    00001fc8: 	cmpl	%eax, %edx
    00001fca: 	je	.Ltmp1556 # Offset: 8138
    00001fcc: 	movl	current_test(%rip), %edx
    00001fd2: 	leaq	DATAat0x231d2(%rip), %rsi
    00001fd9: 	movl	$0x1, %edi
    00001fde: 	xorl	%eax, %eax
    00001fe0: 	callq	__printf_chk@PLT # Offset: 8160
    00001fe5: 	movl	iterations(%rip), %ecx
.Ltmp1556:
    00001feb: 	addl	$0x1, (%rsp)
    00001fef: 	movl	(%rsp), %eax
    00001ff2: 	cmpl	%ecx, %eax
    00001ff4: 	jl	.Ltmp1557 # Offset: 8180
.Ltmp1554:
    00001ff6: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001ffd: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rcx
    00002004: 	subq	$0x20, %rax
    00002008: 	movq	%rcx, (%rsp)
    0000200c: 	cmpq	%rax, %rcx
    0000200f: 	je	.Ltmp1558 # Offset: 8207
    00002015: 	leaq	0x10(%rcx), %rdi
    00002019: 	movq	%rdi, (%rcx)
    0000201c: 	movq	0x90(%rsp), %rsi
    00002024: 	movq	0x98(%rsp), %rcx
    0000202c: 	movq	%rsi, %rax
    0000202f: 	movq	%rsi, 0x28(%rsp)
    00002034: 	addq	%rcx, %rax
    00002037: 	movq	%rcx, 0x10(%rsp)
    0000203c: 	je	.Ltmp1559 # Offset: 8252
    0000203e: 	testq	%rsi, %rsi
    00002041: 	je	.Ltmp1560 # Offset: 8257
.Ltmp1559:
    00002047: 	movq	0x10(%rsp), %rax
    0000204c: 	movq	%rax, 0x30(%rsp)
    00002051: 	cmpq	$0xf, %rax
    00002055: 	ja	.Ltmp1561 # Offset: 8277
    0000205b: 	cmpq	$0x1, 0x10(%rsp)
    00002061: 	jne	.Ltmp1562 # Offset: 8289
    00002067: 	movq	0x28(%rsp), %rax
    0000206c: 	movq	(%rsp), %rsi
    00002070: 	movzbl	(%rax), %eax
    00002073: 	movb	%al, 0x10(%rsi)
.Ltmp1650:
    00002076: 	movq	0x10(%rsp), %rax
    0000207b: 	movq	(%rsp), %rsi
    0000207f: 	movq	%rax, 0x8(%rsi)
    00002083: 	movb	$0x0, (%rdi,%rax)
    00002087: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000208e: 	addq	$0x20, %rax
    00002092: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1628:
    00002099: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000020a0: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000020a7: 	je	.Ltmp1563 # Offset: 8359
.Ltmp1627:
    000020ad: 	movq	-0x20(%rax), %rdi
    000020b1: 	movq	%rdi, (%rsp)
    000020b5: 	callq	clock@PLT # Offset: 8373
    000020ba: 	movq	(%rsp), %rdi
    000020be: 	pxor	%xmm0, %xmm0
    000020c2: 	movq	%rax, end_time(%rip)
    000020c9: 	subq	start_time(%rip), %rax
    000020d0: 	cvtsi2sd	%rax, %xmm0
    000020d5: 	divsd	DATAat0x23450(%rip), %xmm0
    000020dd: 	callq	_Z13record_resultdPKc # Offset: 8413
    000020e2: 	movq	0x90(%rsp), %rdi
    000020ea: 	cmpq	%r13, %rdi
    000020ed: 	je	.Ltmp1564 # Offset: 8429
    000020ef: 	movq	0xa0(%rsp), %rax
    000020f7: 	leaq	0x1(%rax), %rsi
    000020fb: 	callq	_ZdlPvm@PLT # Offset: 8443
.Ltmp1564:
    00002100: 	leaq	DATAat0x2341d(%rip), %rdx
    00002107: 	movq	%r14, %rsi
    0000210a: 	movq	%r12, %rdi
    0000210d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8461
    00002112: 	callq	clock@PLT # Offset: 8466
    00002117: 	movl	iterations(%rip), %ecx
    0000211d: 	movq	%rax, start_time(%rip)
    00002124: 	testl	%ecx, %ecx
    00002126: 	jle	.Ltmp1565 # Offset: 8486
    0000212c: 	movdqa	DATAat0x23790(%rip), %xmm7
    00002134: 	movl	$0x0, 0x10(%rsp)
    0000213c: 	movaps	%xmm7, (%rsp)
.Ltmp1568:
    00002140: 	movq	%rbp, %rax
    00002143: 	pxor	%xmm0, %xmm0
    00002147: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1566:
    00002150: 	movdqa	(%rsp), %xmm1
    00002155: 	por	(%rax), %xmm1
    00002159: 	addq	$0x10, %rax
    0000215d: 	paddd	%xmm1, %xmm0
    00002161: 	cmpq	%rbx, %rax
    00002164: 	jne	.Ltmp1566 # Offset: 8548
    00002166: 	cvttsd2si	init_value(%rip), %edx
    0000216e: 	movdqa	%xmm0, %xmm1
    00002172: 	psrldq	$0x8, %xmm1
    00002177: 	paddd	%xmm1, %xmm0
    0000217b: 	movdqa	%xmm0, %xmm1
    0000217f: 	orl	$0xa, %edx
    00002182: 	psrldq	$0x4, %xmm1
    00002187: 	imull	$0x1f40, %edx, %edx
    0000218d: 	paddd	%xmm1, %xmm0
    00002191: 	movd	%xmm0, %eax
    00002195: 	cmpl	%eax, %edx
    00002197: 	je	.Ltmp1567 # Offset: 8599
    00002199: 	movl	current_test(%rip), %edx
    0000219f: 	leaq	DATAat0x231d2(%rip), %rsi
    000021a6: 	movl	$0x1, %edi
    000021ab: 	xorl	%eax, %eax
    000021ad: 	callq	__printf_chk@PLT # Offset: 8621
    000021b2: 	movl	iterations(%rip), %ecx
.Ltmp1567:
    000021b8: 	addl	$0x1, 0x10(%rsp)
    000021bd: 	movl	0x10(%rsp), %eax
    000021c1: 	cmpl	%ecx, %eax
    000021c3: 	jl	.Ltmp1568 # Offset: 8643
.Ltmp1565:
    000021c9: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000021d0: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    000021d7: 	subq	$0x20, %rax
    000021db: 	movq	%rsi, (%rsp)
    000021df: 	cmpq	%rax, %rsi
    000021e2: 	je	.Ltmp1569 # Offset: 8674
    000021e8: 	leaq	0x10(%rsi), %rdi
    000021ec: 	movq	%rdi, (%rsi)
    000021ef: 	movq	0x90(%rsp), %rcx
    000021f7: 	movq	0x98(%rsp), %rsi
    000021ff: 	movq	%rcx, %rax
    00002202: 	movq	%rcx, 0x28(%rsp)
    00002207: 	addq	%rsi, %rax
    0000220a: 	movq	%rsi, 0x10(%rsp)
    0000220f: 	je	.Ltmp1570 # Offset: 8719
    00002211: 	testq	%rcx, %rcx
    00002214: 	je	.Ltmp1571 # Offset: 8724
.Ltmp1570:
    0000221a: 	movq	0x10(%rsp), %rax
    0000221f: 	movq	%rax, 0x30(%rsp)
    00002224: 	cmpq	$0xf, %rax
    00002228: 	ja	.Ltmp1572 # Offset: 8744
    0000222e: 	cmpq	$0x1, 0x10(%rsp)
    00002234: 	jne	.Ltmp1573 # Offset: 8756
    0000223a: 	movq	0x28(%rsp), %rax
    0000223f: 	movq	(%rsp), %rcx
    00002243: 	movzbl	(%rax), %eax
    00002246: 	movb	%al, 0x10(%rcx)
.Ltmp1662:
    00002249: 	movq	0x10(%rsp), %rax
    0000224e: 	movq	(%rsp), %rcx
    00002252: 	movq	%rax, 0x8(%rcx)
    00002256: 	movb	$0x0, (%rdi,%rax)
    0000225a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002261: 	addq	$0x20, %rax
    00002265: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1626:
    0000226c: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002273: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000227a: 	je	.Ltmp1574 # Offset: 8826
.Ltmp1608:
    00002280: 	movq	-0x20(%rax), %rdi
    00002284: 	movq	%rdi, (%rsp)
    00002288: 	callq	clock@PLT # Offset: 8840
    0000228d: 	movq	(%rsp), %rdi
    00002291: 	pxor	%xmm0, %xmm0
    00002295: 	movq	%rax, end_time(%rip)
    0000229c: 	subq	start_time(%rip), %rax
    000022a3: 	cvtsi2sd	%rax, %xmm0
    000022a8: 	divsd	DATAat0x23450(%rip), %xmm0
    000022b0: 	callq	_Z13record_resultdPKc # Offset: 8880
    000022b5: 	movq	0x90(%rsp), %rdi
    000022bd: 	cmpq	%r13, %rdi
    000022c0: 	je	.Ltmp1575 # Offset: 8896
    000022c2: 	movq	0xa0(%rsp), %rax
    000022ca: 	leaq	0x1(%rax), %rsi
    000022ce: 	callq	_ZdlPvm@PLT # Offset: 8910
.Ltmp1575:
    000022d3: 	leaq	DATAat0x23414(%rip), %rdx
    000022da: 	movq	%r14, %rsi
    000022dd: 	movq	%r12, %rdi
    000022e0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8928
    000022e5: 	callq	clock@PLT # Offset: 8933
    000022ea: 	movl	iterations(%rip), %ecx
    000022f0: 	movq	%rax, start_time(%rip)
    000022f7: 	testl	%ecx, %ecx
    000022f9: 	jle	.Ltmp1576 # Offset: 8953
    000022ff: 	movl	$0x0, (%rsp)
    00002306: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1579:
    00002310: 	movq	%rbp, %rax
    00002313: 	pxor	%xmm0, %xmm0
    00002317: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1577:
    00002320: 	movdqa	DATAat0x23800(%rip), %xmm1
    00002328: 	por	(%rax), %xmm1
    0000232c: 	addq	$0x10, %rax
    00002330: 	paddd	%xmm1, %xmm0
    00002334: 	cmpq	%rbx, %rax
    00002337: 	jne	.Ltmp1577 # Offset: 9015
    00002339: 	cvttsd2si	init_value(%rip), %edx
    00002341: 	movdqa	%xmm0, %xmm1
    00002345: 	psrldq	$0x8, %xmm1
    0000234a: 	paddd	%xmm1, %xmm0
    0000234e: 	movdqa	%xmm0, %xmm1
    00002352: 	orl	$0x3f, %edx
    00002355: 	psrldq	$0x4, %xmm1
    0000235a: 	imull	$0x1f40, %edx, %edx
    00002360: 	paddd	%xmm1, %xmm0
    00002364: 	movd	%xmm0, %eax
    00002368: 	cmpl	%edx, %eax
    0000236a: 	je	.Ltmp1578 # Offset: 9066
    0000236c: 	movl	current_test(%rip), %edx
    00002372: 	leaq	DATAat0x231d2(%rip), %rsi
    00002379: 	movl	$0x1, %edi
    0000237e: 	xorl	%eax, %eax
    00002380: 	callq	__printf_chk@PLT # Offset: 9088
    00002385: 	movl	iterations(%rip), %ecx
.Ltmp1578:
    0000238b: 	addl	$0x1, (%rsp)
    0000238f: 	movl	(%rsp), %eax
    00002392: 	cmpl	%ecx, %eax
    00002394: 	jl	.Ltmp1579 # Offset: 9108
.Ltmp1576:
    0000239a: 	movq	%r12, %rsi
    0000239d: 	movq	%r15, %rdi
    000023a0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9120
    000023a5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000023ac: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000023b3: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000023ba: 	je	.Ltmp1580 # Offset: 9146
.Ltmp1607:
    000023c0: 	movq	-0x20(%rax), %rdi
    000023c4: 	movq	%rdi, (%rsp)
    000023c8: 	callq	clock@PLT # Offset: 9160
    000023cd: 	movq	(%rsp), %rdi
    000023d1: 	pxor	%xmm0, %xmm0
    000023d5: 	movq	%rax, end_time(%rip)
    000023dc: 	subq	start_time(%rip), %rax
    000023e3: 	cvtsi2sd	%rax, %xmm0
    000023e8: 	divsd	DATAat0x23450(%rip), %xmm0
    000023f0: 	callq	_Z13record_resultdPKc # Offset: 9200
    000023f5: 	movq	0x90(%rsp), %rdi
    000023fd: 	cmpq	%r13, %rdi
    00002400: 	je	.Ltmp1581 # Offset: 9216
    00002402: 	movq	0xa0(%rsp), %rax
    0000240a: 	leaq	0x1(%rax), %rsi
    0000240e: 	callq	_ZdlPvm@PLT # Offset: 9230
.Ltmp1581:
    00002413: 	leaq	DATAat0x23433(%rip), %rdx
    0000241a: 	movq	%r14, %rsi
    0000241d: 	movq	%r12, %rdi
    00002420: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9248
    00002425: 	callq	clock@PLT # Offset: 9253
    0000242a: 	movl	iterations(%rip), %ecx
    00002430: 	movq	%rax, start_time(%rip)
    00002437: 	testl	%ecx, %ecx
    00002439: 	jle	.Ltmp1582 # Offset: 9273
    0000243f: 	movdqa	DATAat0x23790(%rip), %xmm6
    00002447: 	movl	$0x0, 0x10(%rsp)
    0000244f: 	movaps	%xmm6, (%rsp)
    00002453: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1585:
    00002458: 	movq	%rbp, %rax
    0000245b: 	pxor	%xmm0, %xmm0
    0000245f: 	nop # Size: 1
.Ltmp1583:
    00002460: 	movdqa	(%rsp), %xmm1
    00002465: 	pxor	(%rax), %xmm1
    00002469: 	addq	$0x10, %rax
    0000246d: 	paddd	%xmm1, %xmm0
    00002471: 	cmpq	%rbx, %rax
    00002474: 	jne	.Ltmp1583 # Offset: 9332
    00002476: 	cvttsd2si	init_value(%rip), %edx
    0000247e: 	movdqa	%xmm0, %xmm1
    00002482: 	psrldq	$0x8, %xmm1
    00002487: 	paddd	%xmm1, %xmm0
    0000248b: 	movdqa	%xmm0, %xmm1
    0000248f: 	xorl	$0xa, %edx
    00002492: 	psrldq	$0x4, %xmm1
    00002497: 	imull	$0x1f40, %edx, %edx
    0000249d: 	paddd	%xmm1, %xmm0
    000024a1: 	movd	%xmm0, %eax
    000024a5: 	cmpl	%eax, %edx
    000024a7: 	je	.Ltmp1584 # Offset: 9383
    000024a9: 	movl	current_test(%rip), %edx
    000024af: 	leaq	DATAat0x231d2(%rip), %rsi
    000024b6: 	movl	$0x1, %edi
    000024bb: 	xorl	%eax, %eax
    000024bd: 	callq	__printf_chk@PLT # Offset: 9405
    000024c2: 	movl	iterations(%rip), %ecx
.Ltmp1584:
    000024c8: 	addl	$0x1, 0x10(%rsp)
    000024cd: 	movl	0x10(%rsp), %eax
    000024d1: 	cmpl	%ecx, %eax
    000024d3: 	jl	.Ltmp1585 # Offset: 9427
.Ltmp1582:
    000024d9: 	movq	%r12, %rsi
    000024dc: 	movq	%r15, %rdi
    000024df: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9439
    000024e4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000024eb: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000024f2: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000024f9: 	je	.Ltmp1586 # Offset: 9465
.Ltmp1606:
    000024ff: 	movq	-0x20(%rax), %rdi
    00002503: 	movq	%rdi, (%rsp)
    00002507: 	callq	clock@PLT # Offset: 9479
    0000250c: 	movq	(%rsp), %rdi
    00002510: 	pxor	%xmm0, %xmm0
    00002514: 	movq	%rax, end_time(%rip)
    0000251b: 	subq	start_time(%rip), %rax
    00002522: 	cvtsi2sd	%rax, %xmm0
    00002527: 	divsd	DATAat0x23450(%rip), %xmm0
    0000252f: 	callq	_Z13record_resultdPKc # Offset: 9519
    00002534: 	movq	0x90(%rsp), %rdi
    0000253c: 	cmpq	%r13, %rdi
    0000253f: 	je	.Ltmp1587 # Offset: 9535
    00002541: 	movq	0xa0(%rsp), %rax
    00002549: 	leaq	0x1(%rax), %rsi
    0000254d: 	callq	_ZdlPvm@PLT # Offset: 9549
.Ltmp1587:
    00002552: 	leaq	DATAat0x2342a(%rip), %rdx
    00002559: 	movq	%r14, %rsi
    0000255c: 	movq	%r12, %rdi
    0000255f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9567
    00002564: 	callq	clock@PLT # Offset: 9572
    00002569: 	movl	iterations(%rip), %ecx
    0000256f: 	movq	%rax, start_time(%rip)
    00002576: 	testl	%ecx, %ecx
    00002578: 	jle	.Ltmp1588 # Offset: 9592
    0000257e: 	movl	$0x0, (%rsp)
    00002585: 	nopl	(%rax) # Size: 3
.Ltmp1591:
    00002588: 	movq	%rbp, %rax
    0000258b: 	pxor	%xmm0, %xmm0
    0000258f: 	nop # Size: 1
.Ltmp1589:
    00002590: 	movdqa	DATAat0x23810(%rip), %xmm1
    00002598: 	pxor	(%rax), %xmm1
    0000259c: 	addq	$0x10, %rax
    000025a0: 	paddd	%xmm1, %xmm0
    000025a4: 	cmpq	%rbx, %rax
    000025a7: 	jne	.Ltmp1589 # Offset: 9639
    000025a9: 	cvttsd2si	init_value(%rip), %edx
    000025b1: 	movdqa	%xmm0, %xmm1
    000025b5: 	psrldq	$0x8, %xmm1
    000025ba: 	paddd	%xmm1, %xmm0
    000025be: 	movdqa	%xmm0, %xmm1
    000025c2: 	xorl	$0x31, %edx
    000025c5: 	psrldq	$0x4, %xmm1
    000025ca: 	imull	$0x1f40, %edx, %edx
    000025d0: 	paddd	%xmm1, %xmm0
    000025d4: 	movd	%xmm0, %eax
    000025d8: 	cmpl	%eax, %edx
    000025da: 	je	.Ltmp1590 # Offset: 9690
    000025dc: 	movl	current_test(%rip), %edx
    000025e2: 	leaq	DATAat0x231d2(%rip), %rsi
    000025e9: 	movl	$0x1, %edi
    000025ee: 	xorl	%eax, %eax
    000025f0: 	callq	__printf_chk@PLT # Offset: 9712
    000025f5: 	movl	iterations(%rip), %ecx
.Ltmp1590:
    000025fb: 	addl	$0x1, (%rsp)
    000025ff: 	movl	(%rsp), %eax
    00002602: 	cmpl	%ecx, %eax
    00002604: 	jl	.Ltmp1591 # Offset: 9732
.Ltmp1588:
    00002606: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000260d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00002614: 	subq	$0x20, %rax
    00002618: 	cmpq	%rax, %rbx
    0000261b: 	je	.Ltmp1592 # Offset: 9755
    00002621: 	leaq	0x10(%rbx), %rdi
    00002625: 	movq	0x98(%rsp), %r15
    0000262d: 	movq	%rdi, (%rbx)
    00002630: 	movq	0x90(%rsp), %rbp
    00002638: 	movq	%rbp, %rax
    0000263b: 	addq	%r15, %rax
    0000263e: 	je	.Ltmp1593 # Offset: 9790
    00002640: 	testq	%rbp, %rbp
    00002643: 	je	.Ltmp1594 # Offset: 9795
.Ltmp1593:
    00002649: 	movq	%r15, 0x30(%rsp)
    0000264e: 	cmpq	$0xf, %r15
    00002652: 	ja	.Ltmp1595 # Offset: 9810
    00002658: 	cmpq	$0x1, %r15
    0000265c: 	jne	.Ltmp1596 # Offset: 9820
    00002662: 	movzbl	(%rbp), %eax
    00002666: 	movb	%al, 0x10(%rbx)
.Ltmp1658:
    00002669: 	movq	%r15, 0x8(%rbx)
    0000266d: 	movb	$0x0, (%rdi,%r15)
    00002672: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002679: 	addq	$0x20, %rax
    0000267d: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1605:
    00002684: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000268b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002692: 	je	.Ltmp1597 # Offset: 9874
.Ltmp1604:
    00002698: 	movq	-0x20(%rax), %rbp
    0000269c: 	callq	clock@PLT # Offset: 9884
    000026a1: 	pxor	%xmm0, %xmm0
    000026a5: 	movq	%rax, end_time(%rip)
    000026ac: 	movq	%rbp, %rdi
    000026af: 	subq	start_time(%rip), %rax
    000026b6: 	cvtsi2sd	%rax, %xmm0
    000026bb: 	divsd	DATAat0x23450(%rip), %xmm0
    000026c3: 	callq	_Z13record_resultdPKc # Offset: 9923
    000026c8: 	movq	0x90(%rsp), %rdi
    000026d0: 	cmpq	%r13, %rdi
    000026d3: 	je	.Ltmp1598 # Offset: 9939
    000026d5: 	movq	0xa0(%rsp), %rax
    000026dd: 	leaq	0x1(%rax), %rsi
    000026e1: 	callq	_ZdlPvm@PLT # Offset: 9953
.Ltmp1598:
    000026e6: 	leaq	DATAat0x232ac(%rip), %rdx
    000026ed: 	movq	%r14, %rsi
    000026f0: 	movq	%r12, %rdi
    000026f3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9971
    000026f8: 	movl	iterations(%rip), %edx
    000026fe: 	xorl	%r8d, %r8d
    00002701: 	xorl	%ecx, %ecx
    00002703: 	movl	$0x1f40, %esi
    00002708: 	movq	0x90(%rsp), %rdi
    00002710: 	callq	_Z9summarizePKciiii # Offset: 10000
    00002715: 	movl	base_iterations(%rip), %eax
    0000271b: 	movq	0x90(%rsp), %rdi
    00002723: 	movl	%eax, iterations(%rip)
    00002729: 	cmpq	%r13, %rdi
    0000272c: 	je	.Ltmp1599 # Offset: 10028
    0000272e: 	movq	0xa0(%rsp), %rax
    00002736: 	leaq	0x1(%rax), %rsi
    0000273a: 	callq	_ZdlPvm@PLT # Offset: 10042
.Ltmp1599:
    0000273f: 	movq	0x70(%rsp), %rdi
    00002744: 	leaq	0x80(%rsp), %rax
    0000274c: 	cmpq	%rax, %rdi
    0000274f: 	je	.Ltmp1600 # Offset: 10063
    00002751: 	movq	0x80(%rsp), %rax
    00002759: 	leaq	0x1(%rax), %rsi
    0000275d: 	callq	_ZdlPvm@PLT # Offset: 10077
.Ltmp1600:
    00002762: 	movq	0x50(%rsp), %rdi
    00002767: 	cmpq	0x20(%rsp), %rdi
    0000276c: 	je	.Ltmp1601 # Offset: 10092
    0000276e: 	movq	0x60(%rsp), %rax
    00002773: 	leaq	0x1(%rax), %rsi
    00002777: 	callq	_ZdlPvm@PLT # Offset: 10103
.Ltmp1601:
    0000277c: 	movq	0x7db8(%rsp), %rax
    00002784: 	subq	%fs:0x28, %rax
    0000278d: 	jne	.Ltmp1602 # Offset: 10125
    00002793: 	addq	$0x7dc8, %rsp
    0000279a: 	popq	%rbx
    0000279b: 	popq	%rbp
    0000279c: 	popq	%r12
    0000279e: 	popq	%r13
    000027a0: 	popq	%r14
    000027a2: 	popq	%r15
    000027a4: 	retq # Offset: 10148
.Ltmp1412:
    000027a5: 	movq	0x18(%rsp), %rsi
    000027aa: 	movq	0x10(%rsp), %rdi
    000027af: 	xorl	%edx, %edx
    000027b1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10161
    000027b6: 	movq	0x10(%rsp), %rsi
    000027bb: 	movq	%rax, %rdi
    000027be: 	movq	%rax, (%rsi)
    000027c1: 	movq	0x30(%rsp), %rax
    000027c6: 	movq	%rax, 0x10(%rsi)
.Ltmp1661:
    000027ca: 	movq	(%rsp), %rdx
    000027ce: 	movq	0x28(%rsp), %rsi
    000027d3: 	callq	memcpy@PLT # Offset: 10195
    000027d8: 	movq	0x30(%rsp), %rax
    000027dd: 	movq	%rax, (%rsp)
    000027e1: 	movq	0x10(%rsp), %rax
    000027e6: 	movq	(%rax), %rdi
    000027e9: 	jmp	.Ltmp1603 # Offset: 10217
.Ltmp1597:
    000027ee: 	movq	-0x8(%rdx), %rax
    000027f2: 	addq	$0x200, %rax
    000027f8: 	jmp	.Ltmp1604 # Offset: 10232
.Ltmp1592:
    000027fd: 	movq	%r12, %rsi
    00002800: 	movq	%r15, %rdi
    00002803: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10243
    00002808: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000280f: 	jmp	.Ltmp1605 # Offset: 10255
.Ltmp1586:
    00002814: 	movq	-0x8(%rdx), %rax
    00002818: 	addq	$0x200, %rax
    0000281e: 	jmp	.Ltmp1606 # Offset: 10270
.Ltmp1580:
    00002823: 	movq	-0x8(%rdx), %rax
    00002827: 	addq	$0x200, %rax
    0000282d: 	jmp	.Ltmp1607 # Offset: 10285
.Ltmp1574:
    00002832: 	movq	-0x8(%rdx), %rax
    00002836: 	addq	$0x200, %rax
    0000283c: 	jmp	.Ltmp1608 # Offset: 10300
.Ltmp1414:
    00002841: 	movq	-0x8(%rdx), %rax
    00002845: 	addq	$0x200, %rax
    0000284b: 	jmp	.Ltmp1609 # Offset: 10315
.Ltmp1409:
    00002850: 	movq	%r12, %rsi
    00002853: 	movq	%r15, %rdi
    00002856: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10326
    0000285b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002862: 	jmp	.Ltmp1610 # Offset: 10338
.Ltmp1407:
    00002867: 	movq	-0x8(%rdx), %rax
    0000286b: 	addq	$0x200, %rax
    00002871: 	jmp	.Ltmp1611 # Offset: 10353
.Ltmp1425:
    00002876: 	movq	%r12, %rsi
    00002879: 	movq	%r15, %rdi
    0000287c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10364
    00002881: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002888: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000288f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002896: 	jne	.Ltmp1612 # Offset: 10390
.Ltmp1430:
    0000289c: 	movq	-0x8(%rdx), %rax
    000028a0: 	addq	$0x200, %rax
    000028a6: 	jmp	.Ltmp1612 # Offset: 10406
.Ltmp1423:
    000028ab: 	movq	-0x8(%rdx), %rax
    000028af: 	addq	$0x200, %rax
    000028b5: 	jmp	.Ltmp1613 # Offset: 10421
.Ltmp1421:
    000028ba: 	movq	-0x8(%rdx), %rax
    000028be: 	addq	$0x200, %rax
    000028c4: 	jmp	.Ltmp1614 # Offset: 10436
.Ltmp1416:
    000028c9: 	movq	%r12, %rsi
    000028cc: 	movq	%r15, %rdi
    000028cf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10447
    000028d4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000028db: 	jmp	.Ltmp1615 # Offset: 10459
.Ltmp1456:
    000028e0: 	movq	%r12, %rsi
    000028e3: 	movq	%r15, %rdi
    000028e6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10470
    000028eb: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000028f2: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000028f9: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002900: 	jne	.Ltmp1616 # Offset: 10496
.Ltmp1461:
    00002906: 	movq	-0x8(%rdx), %rax
    0000290a: 	addq	$0x200, %rax
    00002910: 	jmp	.Ltmp1616 # Offset: 10512
.Ltmp1454:
    00002915: 	movq	-0x8(%rdx), %rax
    00002919: 	addq	$0x200, %rax
    0000291f: 	jmp	.Ltmp1617 # Offset: 10527
.Ltmp1449:
    00002924: 	movq	%r12, %rsi
    00002927: 	movq	%r15, %rdi
    0000292a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10538
    0000292f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002936: 	jmp	.Ltmp1618 # Offset: 10550
.Ltmp1447:
    0000293b: 	movq	-0x8(%rdx), %rax
    0000293f: 	addq	$0x200, %rax
    00002945: 	jmp	.Ltmp1619 # Offset: 10565
.Ltmp1445:
    0000294a: 	movq	-0x8(%rdx), %rax
    0000294e: 	addq	$0x200, %rax
    00002954: 	jmp	.Ltmp1620 # Offset: 10580
.Ltmp1443:
    00002959: 	movq	-0x8(%rdx), %rax
    0000295d: 	addq	$0x200, %rax
    00002963: 	jmp	.Ltmp1621 # Offset: 10595
.Ltmp1441:
    00002968: 	movq	-0x8(%rdx), %rax
    0000296c: 	addq	$0x200, %rax
    00002972: 	jmp	.Ltmp1622 # Offset: 10610
.Ltmp1439:
    00002977: 	movq	-0x8(%rdx), %rax
    0000297b: 	addq	$0x200, %rax
    00002981: 	jmp	.Ltmp1623 # Offset: 10625
.Ltmp1437:
    00002986: 	movq	-0x8(%rdx), %rax
    0000298a: 	addq	$0x200, %rax
    00002990: 	jmp	.Ltmp1624 # Offset: 10640
.Ltmp1432:
    00002995: 	movq	%r12, %rsi
    00002998: 	movq	%r15, %rdi
    0000299b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10651
    000029a0: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000029a7: 	jmp	.Ltmp1625 # Offset: 10663
.Ltmp1569:
    000029ac: 	movq	%r12, %rsi
    000029af: 	movq	%r15, %rdi
    000029b2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10674
    000029b7: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000029be: 	jmp	.Ltmp1626 # Offset: 10686
.Ltmp1563:
    000029c3: 	movq	-0x8(%rdx), %rax
    000029c7: 	addq	$0x200, %rax
    000029cd: 	jmp	.Ltmp1627 # Offset: 10701
.Ltmp1558:
    000029d2: 	movq	%r12, %rsi
    000029d5: 	movq	%r15, %rdi
    000029d8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10712
    000029dd: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000029e4: 	jmp	.Ltmp1628 # Offset: 10724
.Ltmp1552:
    000029e9: 	movq	-0x8(%rdx), %rax
    000029ed: 	addq	$0x200, %rax
    000029f3: 	jmp	.Ltmp1629 # Offset: 10739
.Ltmp1546:
    000029f8: 	movq	-0x8(%rdx), %rax
    000029fc: 	addq	$0x200, %rax
    00002a02: 	jmp	.Ltmp1630 # Offset: 10754
.Ltmp1540:
    00002a07: 	movq	-0x8(%rdx), %rax
    00002a0b: 	addq	$0x200, %rax
    00002a11: 	jmp	.Ltmp1631 # Offset: 10769
.Ltmp1534:
    00002a16: 	movq	-0x8(%rdx), %rax
    00002a1a: 	addq	$0x200, %rax
    00002a20: 	jmp	.Ltmp1632 # Offset: 10784
.Ltmp1528:
    00002a25: 	movq	-0x8(%rdx), %rax
    00002a29: 	addq	$0x200, %rax
    00002a2f: 	jmp	.Ltmp1633 # Offset: 10799
.Ltmp1523:
    00002a34: 	movq	%r12, %rsi
    00002a37: 	movq	%r15, %rdi
    00002a3a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10810
    00002a3f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002a46: 	jmp	.Ltmp1634 # Offset: 10822
.Ltmp1517:
    00002a4b: 	movq	-0x8(%rdx), %rax
    00002a4f: 	addq	$0x200, %rax
    00002a55: 	jmp	.Ltmp1635 # Offset: 10837
.Ltmp1511:
    00002a5a: 	movq	-0x8(%rdx), %rax
    00002a5e: 	addq	$0x200, %rax
    00002a64: 	jmp	.Ltmp1636 # Offset: 10852
.Ltmp1505:
    00002a69: 	movq	-0x8(%rdx), %rax
    00002a6d: 	addq	$0x200, %rax
    00002a73: 	jmp	.Ltmp1637 # Offset: 10867
.Ltmp1499:
    00002a78: 	movq	-0x8(%rdx), %rax
    00002a7c: 	addq	$0x200, %rax
    00002a82: 	jmp	.Ltmp1638 # Offset: 10882
.Ltmp1493:
    00002a87: 	movq	-0x8(%rdx), %rax
    00002a8b: 	addq	$0x200, %rax
    00002a91: 	jmp	.Ltmp1639 # Offset: 10897
.Ltmp1488:
    00002a96: 	movq	%r12, %rsi
    00002a99: 	movq	%r15, %rdi
    00002a9c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10908
    00002aa1: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002aa8: 	jmp	.Ltmp1640 # Offset: 10920
.Ltmp1482:
    00002aad: 	movq	-0x8(%rdx), %rax
    00002ab1: 	addq	$0x200, %rax
    00002ab7: 	jmp	.Ltmp1641 # Offset: 10935
.Ltmp1476:
    00002abc: 	movq	-0x8(%rdx), %rax
    00002ac0: 	addq	$0x200, %rax
    00002ac6: 	jmp	.Ltmp1642 # Offset: 10950
.Ltmp1470:
    00002acb: 	movq	-0x8(%rdx), %rax
    00002acf: 	addq	$0x200, %rax
    00002ad5: 	jmp	.Ltmp1643 # Offset: 10965
.Ltmp1468:
    00002ada: 	movq	-0x8(%rdx), %rax
    00002ade: 	addq	$0x200, %rax
    00002ae4: 	jmp	.Ltmp1644 # Offset: 10980
.Ltmp1463:
    00002ae9: 	movq	%r12, %rsi
    00002aec: 	movq	%r15, %rdi
    00002aef: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10991
    00002af4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002afb: 	jmp	.Ltmp1645 # Offset: 11003
.Ltmp1460:
    00002b00: 	cmpq	$0x0, (%rsp)
    00002b05: 	je	.Ltmp1646 # Offset: 11013
    00002b0b: 	jmp	.Ltmp1647 # Offset: 11019
.Ltmp1492:
    00002b10: 	cmpq	$0x0, 0x10(%rsp)
    00002b16: 	je	.Ltmp1648 # Offset: 11030
    00002b1c: 	jmp	.Ltmp1649 # Offset: 11036
    00002b21: 	nopl	(%rax) # Size: 7
.Ltmp1562:
    00002b28: 	cmpq	$0x0, 0x10(%rsp)
    00002b2e: 	je	.Ltmp1650 # Offset: 11054
.Ltmp1666:
    00002b34: 	movq	0x10(%rsp), %rdx
    00002b39: 	movq	0x28(%rsp), %rsi
    00002b3e: 	callq	memcpy@PLT # Offset: 11070
    00002b43: 	movq	0x30(%rsp), %rax
    00002b48: 	movq	%rax, 0x10(%rsp)
    00002b4d: 	movq	(%rsp), %rax
    00002b51: 	movq	(%rax), %rdi
    00002b54: 	jmp	.Ltmp1650 # Offset: 11092
.Ltmp1467:
    00002b59: 	cmpq	$0x0, (%rsp)
    00002b5e: 	je	.Ltmp1651 # Offset: 11102
    00002b64: 	jmp	.Ltmp1652 # Offset: 11108
    00002b69: 	nopl	(%rax) # Size: 7
.Ltmp1527:
    00002b70: 	cmpq	$0x0, 0x10(%rsp)
    00002b76: 	je	.Ltmp1653 # Offset: 11126
    00002b7c: 	jmp	.Ltmp1654 # Offset: 11132
    00002b81: 	nopl	(%rax) # Size: 7
.Ltmp1429:
    00002b88: 	cmpq	$0x0, (%rsp)
    00002b8d: 	je	.Ltmp1655 # Offset: 11149
.Ltmp1667:
    00002b93: 	movq	(%rsp), %rdx
    00002b97: 	movq	0x28(%rsp), %rsi
    00002b9c: 	callq	memcpy@PLT # Offset: 11164
    00002ba1: 	movq	0x30(%rsp), %rax
    00002ba6: 	movq	%rax, (%rsp)
    00002baa: 	movq	0x10(%rsp), %rax
    00002baf: 	movq	(%rax), %rdi
    00002bb2: 	jmp	.Ltmp1655 # Offset: 11186
.Ltmp1453:
    00002bb7: 	cmpq	$0x0, (%rsp)
    00002bbc: 	je	.Ltmp1656 # Offset: 11196
    00002bc2: 	jmp	.Ltmp1657 # Offset: 11202
    00002bc7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1596:
    00002bd0: 	testq	%r15, %r15
    00002bd3: 	je	.Ltmp1658 # Offset: 11219
.Ltmp1668:
    00002bd9: 	movq	%r15, %rdx
    00002bdc: 	movq	%rbp, %rsi
    00002bdf: 	callq	memcpy@PLT # Offset: 11231
    00002be4: 	movq	0x30(%rsp), %r15
    00002be9: 	movq	(%rbx), %rdi
    00002bec: 	jmp	.Ltmp1658 # Offset: 11244
.Ltmp1436:
    00002bf1: 	cmpq	$0x0, (%rsp)
    00002bf6: 	je	.Ltmp1659 # Offset: 11254
    00002bfc: 	jmp	.Ltmp1660 # Offset: 11260
    00002c01: 	nopl	(%rax) # Size: 7
.Ltmp1413:
    00002c08: 	cmpq	$0x0, (%rsp)
    00002c0d: 	je	.Ltmp1603 # Offset: 11277
    00002c13: 	jmp	.Ltmp1661 # Offset: 11283
    00002c18: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1573:
    00002c20: 	cmpq	$0x0, 0x10(%rsp)
    00002c26: 	je	.Ltmp1662 # Offset: 11302
    00002c2c: 	jmp	.Ltmp1663 # Offset: 11308
    00002c2e: 	nop # Size: 2
.Ltmp1420:
    00002c30: 	cmpq	$0x0, (%rsp)
    00002c35: 	je	.Ltmp1664 # Offset: 11317
.Ltmp1665:
    00002c3b: 	movq	(%rsp), %rdx
    00002c3f: 	movq	0x28(%rsp), %rsi
    00002c44: 	callq	memcpy@PLT # Offset: 11332
    00002c49: 	movq	0x30(%rsp), %rax
    00002c4e: 	movq	%rax, (%rsp)
    00002c52: 	movq	0x10(%rsp), %rax
    00002c57: 	movq	(%rax), %rdi
    00002c5a: 	jmp	.Ltmp1664 # Offset: 11354
.Ltmp1572:
    00002c5f: 	movq	0x18(%rsp), %rsi
    00002c64: 	movq	(%rsp), %rdi
    00002c68: 	xorl	%edx, %edx
    00002c6a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11370
    00002c6f: 	movq	(%rsp), %rsi
    00002c73: 	movq	%rax, %rdi
    00002c76: 	movq	%rax, (%rsi)
    00002c79: 	movq	0x30(%rsp), %rax
    00002c7e: 	movq	%rax, 0x10(%rsi)
.Ltmp1663:
    00002c82: 	movq	0x10(%rsp), %rdx
    00002c87: 	movq	0x28(%rsp), %rsi
    00002c8c: 	callq	memcpy@PLT # Offset: 11404
    00002c91: 	movq	0x30(%rsp), %rax
    00002c96: 	movq	%rax, 0x10(%rsp)
    00002c9b: 	movq	(%rsp), %rax
    00002c9f: 	movq	(%rax), %rdi
    00002ca2: 	jmp	.Ltmp1662 # Offset: 11426
.Ltmp1435:
    00002ca7: 	movq	0x18(%rsp), %rsi
    00002cac: 	movq	0x10(%rsp), %rdi
    00002cb1: 	xorl	%edx, %edx
    00002cb3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11443
    00002cb8: 	movq	0x10(%rsp), %rcx
    00002cbd: 	movq	%rax, %rdi
    00002cc0: 	movq	%rax, (%rcx)
    00002cc3: 	movq	0x30(%rsp), %rax
    00002cc8: 	movq	%rax, 0x10(%rcx)
.Ltmp1660:
    00002ccc: 	movq	(%rsp), %rdx
    00002cd0: 	movq	0x28(%rsp), %rsi
    00002cd5: 	callq	memcpy@PLT # Offset: 11477
    00002cda: 	movq	0x30(%rsp), %rax
    00002cdf: 	movq	%rax, (%rsp)
    00002ce3: 	movq	0x10(%rsp), %rax
    00002ce8: 	movq	(%rax), %rdi
    00002ceb: 	jmp	.Ltmp1659 # Offset: 11499
.Ltmp1419:
    00002cf0: 	movq	0x18(%rsp), %rsi
    00002cf5: 	movq	0x10(%rsp), %rdi
    00002cfa: 	xorl	%edx, %edx
    00002cfc: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11516
    00002d01: 	movq	0x10(%rsp), %rcx
    00002d06: 	movq	%rax, %rdi
    00002d09: 	movq	%rax, (%rcx)
    00002d0c: 	movq	0x30(%rsp), %rax
    00002d11: 	movq	%rax, 0x10(%rcx)
    00002d15: 	jmp	.Ltmp1665 # Offset: 11541
.Ltmp1459:
    00002d1a: 	movq	0x18(%rsp), %rsi
    00002d1f: 	movq	0x10(%rsp), %rdi
    00002d24: 	xorl	%edx, %edx
    00002d26: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11558
    00002d2b: 	movq	0x10(%rsp), %rcx
    00002d30: 	movq	%rax, %rdi
    00002d33: 	movq	%rax, (%rcx)
    00002d36: 	movq	0x30(%rsp), %rax
    00002d3b: 	movq	%rax, 0x10(%rcx)
.Ltmp1647:
    00002d3f: 	movq	(%rsp), %rdx
    00002d43: 	movq	0x28(%rsp), %rsi
    00002d48: 	callq	memcpy@PLT # Offset: 11592
    00002d4d: 	movq	0x30(%rsp), %rax
    00002d52: 	movq	%rax, (%rsp)
    00002d56: 	movq	0x10(%rsp), %rax
    00002d5b: 	movq	(%rax), %rdi
    00002d5e: 	jmp	.Ltmp1646 # Offset: 11614
.Ltmp1452:
    00002d63: 	movq	0x18(%rsp), %rsi
    00002d68: 	movq	0x10(%rsp), %rdi
    00002d6d: 	xorl	%edx, %edx
    00002d6f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11631
    00002d74: 	movq	0x10(%rsp), %rsi
    00002d79: 	movq	%rax, %rdi
    00002d7c: 	movq	%rax, (%rsi)
    00002d7f: 	movq	0x30(%rsp), %rax
    00002d84: 	movq	%rax, 0x10(%rsi)
.Ltmp1657:
    00002d88: 	movq	(%rsp), %rdx
    00002d8c: 	movq	0x28(%rsp), %rsi
    00002d91: 	callq	memcpy@PLT # Offset: 11665
    00002d96: 	movq	0x30(%rsp), %rax
    00002d9b: 	movq	%rax, (%rsp)
    00002d9f: 	movq	0x10(%rsp), %rax
    00002da4: 	movq	(%rax), %rdi
    00002da7: 	jmp	.Ltmp1656 # Offset: 11687
.Ltmp1491:
    00002dac: 	movq	0x18(%rsp), %rsi
    00002db1: 	movq	(%rsp), %rdi
    00002db5: 	xorl	%edx, %edx
    00002db7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11703
    00002dbc: 	movq	(%rsp), %rcx
    00002dc0: 	movq	%rax, %rdi
    00002dc3: 	movq	%rax, (%rcx)
    00002dc6: 	movq	0x30(%rsp), %rax
    00002dcb: 	movq	%rax, 0x10(%rcx)
.Ltmp1649:
    00002dcf: 	movq	0x10(%rsp), %rdx
    00002dd4: 	movq	0x28(%rsp), %rsi
    00002dd9: 	callq	memcpy@PLT # Offset: 11737
    00002dde: 	movq	0x30(%rsp), %rax
    00002de3: 	movq	%rax, 0x10(%rsp)
    00002de8: 	movq	(%rsp), %rax
    00002dec: 	movq	(%rax), %rdi
    00002def: 	jmp	.Ltmp1648 # Offset: 11759
.Ltmp1466:
    00002df4: 	movq	0x18(%rsp), %rsi
    00002df9: 	movq	0x10(%rsp), %rdi
    00002dfe: 	xorl	%edx, %edx
    00002e00: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11776
    00002e05: 	movq	0x10(%rsp), %rsi
    00002e0a: 	movq	%rax, %rdi
    00002e0d: 	movq	%rax, (%rsi)
    00002e10: 	movq	0x30(%rsp), %rax
    00002e15: 	movq	%rax, 0x10(%rsi)
.Ltmp1652:
    00002e19: 	movq	(%rsp), %rdx
    00002e1d: 	movq	0x28(%rsp), %rsi
    00002e22: 	callq	memcpy@PLT # Offset: 11810
    00002e27: 	movq	0x30(%rsp), %rax
    00002e2c: 	movq	%rax, (%rsp)
    00002e30: 	movq	0x10(%rsp), %rax
    00002e35: 	movq	(%rax), %rdi
    00002e38: 	jmp	.Ltmp1651 # Offset: 11832
.Ltmp1561:
    00002e3d: 	movq	0x18(%rsp), %rsi
    00002e42: 	movq	(%rsp), %rdi
    00002e46: 	xorl	%edx, %edx
    00002e48: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11848
    00002e4d: 	movq	(%rsp), %rcx
    00002e51: 	movq	%rax, %rdi
    00002e54: 	movq	%rax, (%rcx)
    00002e57: 	movq	0x30(%rsp), %rax
    00002e5c: 	movq	%rax, 0x10(%rcx)
    00002e60: 	jmp	.Ltmp1666 # Offset: 11872
.Ltmp1526:
    00002e65: 	movq	0x18(%rsp), %rsi
    00002e6a: 	movq	(%rsp), %rdi
    00002e6e: 	xorl	%edx, %edx
    00002e70: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11888
    00002e75: 	movq	(%rsp), %rsi
    00002e79: 	movq	%rax, %rdi
    00002e7c: 	movq	%rax, (%rsi)
    00002e7f: 	movq	0x30(%rsp), %rax
    00002e84: 	movq	%rax, 0x10(%rsi)
.Ltmp1654:
    00002e88: 	movq	0x10(%rsp), %rdx
    00002e8d: 	movq	0x28(%rsp), %rsi
    00002e92: 	callq	memcpy@PLT # Offset: 11922
    00002e97: 	movq	0x30(%rsp), %rax
    00002e9c: 	movq	%rax, 0x10(%rsp)
    00002ea1: 	movq	(%rsp), %rax
    00002ea5: 	movq	(%rax), %rdi
    00002ea8: 	jmp	.Ltmp1653 # Offset: 11944
.Ltmp1428:
    00002ead: 	movq	0x18(%rsp), %rsi
    00002eb2: 	movq	0x10(%rsp), %rdi
    00002eb7: 	xorl	%edx, %edx
    00002eb9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11961
    00002ebe: 	movq	0x10(%rsp), %rsi
    00002ec3: 	movq	%rax, %rdi
    00002ec6: 	movq	%rax, (%rsi)
    00002ec9: 	movq	0x30(%rsp), %rax
    00002ece: 	movq	%rax, 0x10(%rsi)
    00002ed2: 	jmp	.Ltmp1667 # Offset: 11986
.Ltmp1595:
    00002ed7: 	movq	0x18(%rsp), %rsi
    00002edc: 	xorl	%edx, %edx
    00002ede: 	movq	%rbx, %rdi
    00002ee1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 12001
    00002ee6: 	movq	%rax, (%rbx)
    00002ee9: 	movq	%rax, %rdi
    00002eec: 	movq	0x30(%rsp), %rax
    00002ef1: 	movq	%rax, 0x10(%rbx)
    00002ef5: 	jmp	.Ltmp1668 # Offset: 12021
.Ltmp1418:
    00002efa: 	leaq	DATAat0x23158(%rip), %rdi
    00002f01: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12033
.Ltmp1427:
    00002f06: 	leaq	DATAat0x23158(%rip), %rdi
    00002f0d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12045
.Ltmp1434:
    00002f12: 	leaq	DATAat0x23158(%rip), %rdi
    00002f19: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12057
.Ltmp1451:
    00002f1e: 	leaq	DATAat0x23158(%rip), %rdi
    00002f25: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12069
.Ltmp1458:
    00002f2a: 	leaq	DATAat0x23158(%rip), %rdi
    00002f31: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12081
.Ltmp1465:
    00002f36: 	leaq	DATAat0x23158(%rip), %rdi
    00002f3d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12093
.Ltmp1490:
    00002f42: 	leaq	DATAat0x23158(%rip), %rdi
    00002f49: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12105
.Ltmp1525:
    00002f4e: 	leaq	DATAat0x23158(%rip), %rdi
    00002f55: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12117
.Ltmp1560:
    00002f5a: 	leaq	DATAat0x23158(%rip), %rdi
    00002f61: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12129
.Ltmp1571:
    00002f66: 	leaq	DATAat0x23158(%rip), %rdi
    00002f6d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12141
.Ltmp1594:
    00002f72: 	leaq	DATAat0x23158(%rip), %rdi
    00002f79: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12153
.Ltmp1602:
    00002f7e: 	callq	__stack_chk_fail@PLT # Offset: 12158
.Ltmp1411:
    00002f83: 	leaq	DATAat0x23158(%rip), %rdi
    00002f8a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12170
    00002f8f: 	endbr64
.Ltmp1670:
    00002f93: 	movq	%rax, %rbx
    00002f96: 	jmp	.Ltmp1669 # Offset: 12182
    00002f9b: 	endbr64
    00002f9f: 	jmp	.Ltmp1670 # Offset: 12191
    00002fa1: 	endbr64
    00002fa5: 	jmp	.Ltmp1670 # Offset: 12197
    00002fa7: 	endbr64
    00002fab: 	jmp	.Ltmp1670 # Offset: 12203
    00002fad: 	endbr64
    00002fb1: 	jmp	.Ltmp1670 # Offset: 12209
    00002fb3: 	endbr64
    00002fb7: 	movq	%rax, %rbx
    00002fba: 	jmp	.Ltmp1671 # Offset: 12218
    00002fbc: 	endbr64
    00002fc0: 	movq	%rax, %rbx
    00002fc3: 	jmp	.Ltmp1672 # Offset: 12227
    00002fc5: 	endbr64
    00002fc9: 	jmp	.Ltmp1670 # Offset: 12233
.Ltmp1671:
    00002fcb: 	movq	0x90(%rsp), %rdi
    00002fd3: 	leaq	0xa0(%rsp), %rax
    00002fdb: 	cmpq	%rax, %rdi
    00002fde: 	je	.Ltmp1672 # Offset: 12254
.Ltmp1675:
    00002fe0: 	movq	0xa0(%rsp), %rax
    00002fe8: 	leaq	0x1(%rax), %rsi
    00002fec: 	callq	_ZdlPvm@PLT # Offset: 12268
.Ltmp1672:
    00002ff1: 	movq	0x50(%rsp), %rdi
    00002ff6: 	cmpq	0x20(%rsp), %rdi
    00002ffb: 	je	.Ltmp1673 # Offset: 12283
    00002ffd: 	movq	0x60(%rsp), %rax
    00003002: 	leaq	0x1(%rax), %rsi
    00003006: 	callq	_ZdlPvm@PLT # Offset: 12294
.Ltmp1673:
    0000300b: 	movq	%rbx, %rdi
    0000300e: 	callq	_Unwind_Resume@PLT # Offset: 12302
    00003013: 	endbr64
.Ltmp1676:
    00003017: 	movq	%rax, %rbx
    0000301a: 	jmp	.Ltmp1674 # Offset: 12314
    0000301c: 	endbr64
    00003020: 	jmp	.Ltmp1670 # Offset: 12320
    00003025: 	endbr64
    00003029: 	jmp	.Ltmp1670 # Offset: 12329
    0000302e: 	endbr64
    00003032: 	jmp	.Ltmp1670 # Offset: 12338
.Ltmp1674:
    00003037: 	movq	0x90(%rsp), %rdi
    0000303f: 	cmpq	%r13, %rdi
    00003042: 	jne	.Ltmp1675 # Offset: 12354
    00003044: 	jmp	.Ltmp1672 # Offset: 12356
    00003046: 	endbr64
    0000304a: 	jmp	.Ltmp1670 # Offset: 12362
    0000304f: 	endbr64
    00003053: 	jmp	.Ltmp1676 # Offset: 12371
    00003055: 	endbr64
    00003059: 	jmp	.Ltmp1676 # Offset: 12377
    0000305b: 	endbr64
    0000305f: 	jmp	.Ltmp1676 # Offset: 12383
    00003061: 	endbr64
    00003065: 	jmp	.Ltmp1676 # Offset: 12389
    00003067: 	endbr64
    0000306b: 	jmp	.Ltmp1676 # Offset: 12395
    0000306d: 	endbr64
    00003071: 	jmp	.Ltmp1676 # Offset: 12401
    00003073: 	endbr64
    00003077: 	jmp	.Ltmp1676 # Offset: 12407
    00003079: 	endbr64
    0000307d: 	jmp	.Ltmp1670 # Offset: 12413
    00003082: 	endbr64
    00003086: 	jmp	.Ltmp1670 # Offset: 12422
    0000308b: 	endbr64
    0000308f: 	jmp	.Ltmp1670 # Offset: 12431
    00003094: 	endbr64
    00003098: 	jmp	.Ltmp1670 # Offset: 12440
    0000309d: 	endbr64
    000030a1: 	jmp	.Ltmp1676 # Offset: 12449
    000030a6: 	endbr64
    000030aa: 	jmp	.Ltmp1676 # Offset: 12458
    000030af: 	endbr64
    000030b3: 	jmp	.Ltmp1676 # Offset: 12467
    000030b8: 	endbr64
    000030bc: 	jmp	.Ltmp1676 # Offset: 12476
    000030c1: 	endbr64
    000030c5: 	jmp	.Ltmp1670 # Offset: 12485
    000030ca: 	endbr64
    000030ce: 	jmp	.Ltmp1670 # Offset: 12494
    000030d3: 	endbr64
    000030d7: 	jmp	.Ltmp1670 # Offset: 12503
    000030dc: 	endbr64
    000030e0: 	jmp	.Ltmp1670 # Offset: 12512
    000030e5: 	endbr64
    000030e9: 	jmp	.Ltmp1676 # Offset: 12521
    000030ee: 	endbr64
    000030f2: 	movq	%rax, %rbx
    000030f5: 	jmp	.Ltmp1677 # Offset: 12533
    000030f7: 	endbr64
    000030fb: 	jmp	.Ltmp1676 # Offset: 12539
.Ltmp1669:
    00003100: 	movq	0x90(%rsp), %rdi
    00003108: 	cmpq	%r13, %rdi
    0000310b: 	je	.Ltmp1677 # Offset: 12555
    0000310d: 	movq	0xa0(%rsp), %rax
    00003115: 	leaq	0x1(%rax), %rsi
    00003119: 	callq	_ZdlPvm@PLT # Offset: 12569
.Ltmp1677:
    0000311e: 	movq	0x70(%rsp), %rdi
    00003123: 	leaq	0x80(%rsp), %rax
    0000312b: 	cmpq	%rax, %rdi
    0000312e: 	je	.Ltmp1672 # Offset: 12590
    00003134: 	movq	0x80(%rsp), %rax
    0000313c: 	leaq	0x1(%rax), %rsi
    00003140: 	callq	_ZdlPvm@PLT # Offset: 12608
    00003145: 	jmp	.Ltmp1672 # Offset: 12613
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIiEvv"

Binary Function "_Z11TestOneTypeIsEvv" after disassembly {
  Number      : 48
  State       : disassembled
  Address     : 0x138e0
  Size        : 0x314a
  MaxSize     : 0x3150
  Offset      : 0x138e0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIsEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB047:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0x1000, %rsp
    0000002d: 	orq	$0x0, (%rsp)
    00000032: 	subq	$0xf48, %rsp
    00000039: 	movdqa	_Z7gLabelsB5cxx11+16(%rip), %xmm7
    00000041: 	leaq	_Z7gLabelsB5cxx11(%rip), %r15
    00000048: 	movq	%r15, %rdi
    0000004b: 	movq	%fs:0x28, %rax
    00000054: 	movq	%rax, 0x3f38(%rsp)
    0000005c: 	xorl	%eax, %eax
    0000005e: 	leaq	0x60(%rsp), %rax
    00000063: 	movaps	%xmm7, 0x30(%rsp)
    00000068: 	movdqa	_Z7gLabelsB5cxx11+32(%rip), %xmm7
    00000070: 	movq	%rax, 0x20(%rsp)
    00000075: 	leaq	0x30(%rsp), %rsi
    0000007a: 	leaq	0xb0(%rsp), %rbp
    00000082: 	movq	%rax, 0x50(%rsp)
    00000087: 	movl	$0x5f36, %eax
    0000008c: 	leaq	0x3f30(%rsp), %rbx
    00000094: 	movw	%ax, 0x64(%rsp)
    00000099: 	movl	$0x31746e69, 0x60(%rsp)
    000000a1: 	movb	$0x74, 0x66(%rsp)
    000000a6: 	movq	$0x7, 0x58(%rsp)
    000000af: 	movb	$0x0, 0x67(%rsp)
    000000b4: 	movq	%rsi, 0x18(%rsp)
    000000b9: 	movaps	%xmm7, 0x40(%rsp)
    000000be: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 190
    000000c3: 	cvttsd2si	init_value(%rip), %eax
    000000cb: 	movd	%eax, %xmm0
    000000cf: 	movq	%rbp, %rax
    000000d2: 	punpcklwd	%xmm0, %xmm0
    000000d6: 	pshufd	$0x0, %xmm0, %xmm0
    000000db: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1678:
    000000e0: 	movaps	%xmm0, (%rax)
    000000e3: 	addq	$0x10, %rax
    000000e7: 	cmpq	%rbx, %rax
    000000ea: 	jne	.Ltmp1678 # Offset: 234
    000000ec: 	movl	base_iterations(%rip), %eax
    000000f2: 	leaq	0x90(%rsp), %r12
    000000fa: 	leaq	0x50(%rsp), %r14
    000000ff: 	leaq	DATAat0x231c8(%rip), %rdx
    00000106: 	movq	%r14, %rsi
    00000109: 	movq	%r12, %rdi
    0000010c: 	movl	%eax, iterations(%rip)
    00000112: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 274
    00000117: 	callq	clock@PLT # Offset: 279
    0000011c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    00000123: 	movq	%rax, start_time(%rip)
    0000012a: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000131: 	subq	$0x20, %rax
    00000135: 	cmpq	%rax, %r13
    00000138: 	je	.Ltmp1679 # Offset: 312
    0000013e: 	leaq	0x10(%r13), %rdi
    00000142: 	movq	0x98(%rsp), %rcx
    0000014a: 	movq	%rdi, (%r13)
    0000014e: 	movq	0x90(%rsp), %rsi
    00000156: 	movq	%rcx, (%rsp)
    0000015a: 	movq	%rsi, %rax
    0000015d: 	movq	%rsi, 0x10(%rsp)
    00000162: 	addq	%rcx, %rax
    00000165: 	je	.Ltmp1680 # Offset: 357
    00000167: 	testq	%rsi, %rsi
    0000016a: 	je	.Ltmp1681 # Offset: 362
.Ltmp1680:
    00000170: 	movq	(%rsp), %rax
    00000174: 	movq	%rax, 0x30(%rsp)
    00000179: 	cmpq	$0xf, %rax
    0000017d: 	ja	.Ltmp1682 # Offset: 381
    00000183: 	cmpq	$0x1, (%rsp)
    00000188: 	jne	.Ltmp1683 # Offset: 392
    0000018e: 	movq	0x10(%rsp), %rax
    00000193: 	movzbl	(%rax), %eax
    00000196: 	movb	%al, 0x10(%r13)
.Ltmp1875:
    0000019a: 	movq	(%rsp), %rax
    0000019e: 	movq	%rax, 0x8(%r13)
    000001a2: 	movb	$0x0, (%rdi,%rax)
    000001a6: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000001ad: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000001b4: 	addq	$0x20, %rax
    000001b8: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000001bf: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    000001c6: 	je	.Ltmp1684 # Offset: 454
.Ltmp1878:
    000001cc: 	movq	-0x20(%rax), %r13
    000001d0: 	callq	clock@PLT # Offset: 464
    000001d5: 	pxor	%xmm0, %xmm0
    000001d9: 	movq	%rax, end_time(%rip)
    000001e0: 	movq	%r13, %rdi
    000001e3: 	subq	start_time(%rip), %rax
    000001ea: 	cvtsi2sd	%rax, %xmm0
    000001ef: 	divsd	DATAat0x23450(%rip), %xmm0
    000001f7: 	callq	_Z13record_resultdPKc # Offset: 503
    000001fc: 	movq	0x90(%rsp), %rdi
    00000204: 	leaq	0xa0(%rsp), %r13
    0000020c: 	cmpq	%r13, %rdi
    0000020f: 	je	.Ltmp1685 # Offset: 527
    00000211: 	movq	0xa0(%rsp), %rax
    00000219: 	leaq	0x1(%rax), %rsi
    0000021d: 	callq	_ZdlPvm@PLT # Offset: 541
.Ltmp1685:
    00000222: 	leaq	DATAat0x231e2(%rip), %rdx
    00000229: 	movq	%r14, %rsi
    0000022c: 	movq	%r12, %rdi
    0000022f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 559
    00000234: 	callq	clock@PLT # Offset: 564
    00000239: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00000240: 	movq	%rax, start_time(%rip)
    00000247: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000024e: 	movq	%rsi, 0x10(%rsp)
    00000253: 	subq	$0x20, %rax
    00000257: 	cmpq	%rax, %rsi
    0000025a: 	je	.Ltmp1686 # Offset: 602
    00000260: 	leaq	0x10(%rsi), %rdi
    00000264: 	movq	0x98(%rsp), %rcx
    0000026c: 	movq	%rdi, (%rsi)
    0000026f: 	movq	0x90(%rsp), %rsi
    00000277: 	movq	%rcx, (%rsp)
    0000027b: 	movq	%rsi, %rax
    0000027e: 	movq	%rsi, 0x28(%rsp)
    00000283: 	addq	%rcx, %rax
    00000286: 	je	.Ltmp1687 # Offset: 646
    00000288: 	testq	%rsi, %rsi
    0000028b: 	je	.Ltmp1688 # Offset: 651
.Ltmp1687:
    00000291: 	movq	(%rsp), %rax
    00000295: 	movq	%rax, 0x30(%rsp)
    0000029a: 	cmpq	$0xf, %rax
    0000029e: 	ja	.Ltmp1689 # Offset: 670
    000002a4: 	cmpq	$0x1, (%rsp)
    000002a9: 	jne	.Ltmp1690 # Offset: 681
    000002af: 	movq	0x28(%rsp), %rax
    000002b4: 	movq	0x10(%rsp), %rcx
    000002b9: 	movzbl	(%rax), %eax
    000002bc: 	movb	%al, 0x10(%rcx)
.Ltmp1933:
    000002bf: 	movq	(%rsp), %rax
    000002c3: 	movq	0x10(%rsp), %rsi
    000002c8: 	movq	%rax, 0x8(%rsi)
    000002cc: 	movb	$0x0, (%rdi,%rax)
    000002d0: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000002d7: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000002de: 	addq	$0x20, %rax
    000002e2: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000002e9: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    000002f0: 	je	.Ltmp1691 # Offset: 752
.Ltmp1879:
    000002f6: 	movq	-0x20(%rax), %rdi
    000002fa: 	movq	%rdi, (%rsp)
    000002fe: 	callq	clock@PLT # Offset: 766
    00000303: 	movq	(%rsp), %rdi
    00000307: 	pxor	%xmm0, %xmm0
    0000030b: 	movq	%rax, end_time(%rip)
    00000312: 	subq	start_time(%rip), %rax
    00000319: 	cvtsi2sd	%rax, %xmm0
    0000031e: 	divsd	DATAat0x23450(%rip), %xmm0
    00000326: 	callq	_Z13record_resultdPKc # Offset: 806
    0000032b: 	movq	0x90(%rsp), %rdi
    00000333: 	cmpq	%r13, %rdi
    00000336: 	je	.Ltmp1692 # Offset: 822
    00000338: 	movq	0xa0(%rsp), %rax
    00000340: 	leaq	0x1(%rax), %rsi
    00000344: 	callq	_ZdlPvm@PLT # Offset: 836
.Ltmp1692:
    00000349: 	leaq	DATAat0x231f1(%rip), %rdx
    00000350: 	movq	%r14, %rsi
    00000353: 	movq	%r12, %rdi
    00000356: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 854
    0000035b: 	callq	clock@PLT # Offset: 859
    00000360: 	movq	%r12, %rsi
    00000363: 	movq	%r15, %rdi
    00000366: 	movq	%rax, start_time(%rip)
    0000036d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 877
    00000372: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000379: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000380: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000387: 	je	.Ltmp1693 # Offset: 903
.Ltmp1885:
    0000038d: 	movq	-0x20(%rax), %rdi
    00000391: 	movq	%rdi, (%rsp)
    00000395: 	callq	clock@PLT # Offset: 917
    0000039a: 	movq	(%rsp), %rdi
    0000039e: 	pxor	%xmm0, %xmm0
    000003a2: 	movq	%rax, end_time(%rip)
    000003a9: 	subq	start_time(%rip), %rax
    000003b0: 	cvtsi2sd	%rax, %xmm0
    000003b5: 	divsd	DATAat0x23450(%rip), %xmm0
    000003bd: 	callq	_Z13record_resultdPKc # Offset: 957
    000003c2: 	movq	0x90(%rsp), %rdi
    000003ca: 	cmpq	%r13, %rdi
    000003cd: 	je	.Ltmp1694 # Offset: 973
    000003cf: 	movq	0xa0(%rsp), %rax
    000003d7: 	leaq	0x1(%rax), %rsi
    000003db: 	callq	_ZdlPvm@PLT # Offset: 987
.Ltmp1694:
    000003e0: 	leaq	DATAat0x23205(%rip), %rdx
    000003e7: 	movq	%r14, %rsi
    000003ea: 	movq	%r12, %rdi
    000003ed: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1005
    000003f2: 	callq	clock@PLT # Offset: 1010
    000003f7: 	movq	%r12, %rsi
    000003fa: 	movq	%r15, %rdi
    000003fd: 	movq	%rax, start_time(%rip)
    00000404: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1028
    00000409: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000410: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000417: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000041e: 	je	.Ltmp1695 # Offset: 1054
.Ltmp1884:
    00000424: 	movq	-0x20(%rax), %rdi
    00000428: 	movq	%rdi, (%rsp)
    0000042c: 	callq	clock@PLT # Offset: 1068
    00000431: 	movq	(%rsp), %rdi
    00000435: 	pxor	%xmm0, %xmm0
    00000439: 	movq	%rax, end_time(%rip)
    00000440: 	subq	start_time(%rip), %rax
    00000447: 	cvtsi2sd	%rax, %xmm0
    0000044c: 	divsd	DATAat0x23450(%rip), %xmm0
    00000454: 	callq	_Z13record_resultdPKc # Offset: 1108
    00000459: 	movq	0x90(%rsp), %rdi
    00000461: 	cmpq	%r13, %rdi
    00000464: 	je	.Ltmp1696 # Offset: 1124
    00000466: 	movq	0xa0(%rsp), %rax
    0000046e: 	leaq	0x1(%rax), %rsi
    00000472: 	callq	_ZdlPvm@PLT # Offset: 1138
.Ltmp1696:
    00000477: 	leaq	DATAat0x23219(%rip), %rdx
    0000047e: 	movq	%r14, %rsi
    00000481: 	movq	%r12, %rdi
    00000484: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1156
    00000489: 	callq	clock@PLT # Offset: 1161
    0000048e: 	movq	%r12, %rsi
    00000491: 	movq	%r15, %rdi
    00000494: 	movq	%rax, start_time(%rip)
    0000049b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1179
    000004a0: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000004a7: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000004ae: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000004b5: 	je	.Ltmp1697 # Offset: 1205
.Ltmp1883:
    000004bb: 	movq	-0x20(%rax), %rdi
    000004bf: 	movq	%rdi, (%rsp)
    000004c3: 	callq	clock@PLT # Offset: 1219
    000004c8: 	movq	(%rsp), %rdi
    000004cc: 	pxor	%xmm0, %xmm0
    000004d0: 	movq	%rax, end_time(%rip)
    000004d7: 	subq	start_time(%rip), %rax
    000004de: 	cvtsi2sd	%rax, %xmm0
    000004e3: 	divsd	DATAat0x23450(%rip), %xmm0
    000004eb: 	callq	_Z13record_resultdPKc # Offset: 1259
    000004f0: 	movq	0x90(%rsp), %rdi
    000004f8: 	cmpq	%r13, %rdi
    000004fb: 	je	.Ltmp1698 # Offset: 1275
    000004fd: 	movq	0xa0(%rsp), %rax
    00000505: 	leaq	0x1(%rax), %rsi
    00000509: 	callq	_ZdlPvm@PLT # Offset: 1289
.Ltmp1698:
    0000050e: 	leaq	DATAat0x233c2(%rip), %rdx
    00000515: 	movq	%r14, %rsi
    00000518: 	movq	%r12, %rdi
    0000051b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1307
    00000520: 	callq	clock@PLT # Offset: 1312
    00000525: 	movq	%r12, %rsi
    00000528: 	movq	%r15, %rdi
    0000052b: 	movq	%rax, start_time(%rip)
    00000532: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1330
    00000537: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000053e: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000545: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000054c: 	je	.Ltmp1699 # Offset: 1356
.Ltmp1882:
    00000552: 	movq	-0x20(%rax), %rdi
    00000556: 	movq	%rdi, (%rsp)
    0000055a: 	callq	clock@PLT # Offset: 1370
    0000055f: 	movq	(%rsp), %rdi
    00000563: 	pxor	%xmm0, %xmm0
    00000567: 	movq	%rax, end_time(%rip)
    0000056e: 	subq	start_time(%rip), %rax
    00000575: 	cvtsi2sd	%rax, %xmm0
    0000057a: 	divsd	DATAat0x23450(%rip), %xmm0
    00000582: 	callq	_Z13record_resultdPKc # Offset: 1410
    00000587: 	movq	0x90(%rsp), %rdi
    0000058f: 	cmpq	%r13, %rdi
    00000592: 	je	.Ltmp1700 # Offset: 1426
    00000594: 	movq	0xa0(%rsp), %rax
    0000059c: 	leaq	0x1(%rax), %rsi
    000005a0: 	callq	_ZdlPvm@PLT # Offset: 1440
.Ltmp1700:
    000005a5: 	leaq	DATAat0x23279(%rip), %rdx
    000005ac: 	movq	%r14, %rsi
    000005af: 	movq	%r12, %rdi
    000005b2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1458
    000005b7: 	callq	clock@PLT # Offset: 1463
    000005bc: 	movq	%r12, %rsi
    000005bf: 	movq	%r15, %rdi
    000005c2: 	movq	%rax, start_time(%rip)
    000005c9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1481
    000005ce: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000005d5: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000005dc: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000005e3: 	je	.Ltmp1701 # Offset: 1507
.Ltmp1881:
    000005e9: 	movq	-0x20(%rax), %rdi
    000005ed: 	movq	%rdi, (%rsp)
    000005f1: 	callq	clock@PLT # Offset: 1521
    000005f6: 	movq	(%rsp), %rdi
    000005fa: 	pxor	%xmm0, %xmm0
    000005fe: 	movq	%rax, end_time(%rip)
    00000605: 	subq	start_time(%rip), %rax
    0000060c: 	cvtsi2sd	%rax, %xmm0
    00000611: 	divsd	DATAat0x23450(%rip), %xmm0
    00000619: 	callq	_Z13record_resultdPKc # Offset: 1561
    0000061e: 	movq	0x90(%rsp), %rdi
    00000626: 	cmpq	%r13, %rdi
    00000629: 	je	.Ltmp1702 # Offset: 1577
    0000062b: 	movq	0xa0(%rsp), %rax
    00000633: 	leaq	0x1(%rax), %rsi
    00000637: 	callq	_ZdlPvm@PLT # Offset: 1591
.Ltmp1702:
    0000063c: 	leaq	DATAat0x2322b(%rip), %rdx
    00000643: 	movq	%r14, %rsi
    00000646: 	movq	%r12, %rdi
    00000649: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1609
    0000064e: 	callq	clock@PLT # Offset: 1614
    00000653: 	movq	%r12, %rsi
    00000656: 	movq	%r15, %rdi
    00000659: 	movq	%rax, start_time(%rip)
    00000660: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1632
    00000665: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000066c: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000673: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000067a: 	je	.Ltmp1703 # Offset: 1658
.Ltmp1880:
    00000680: 	movq	-0x20(%rax), %rdi
    00000684: 	movq	%rdi, (%rsp)
    00000688: 	callq	clock@PLT # Offset: 1672
    0000068d: 	movq	(%rsp), %rdi
    00000691: 	pxor	%xmm0, %xmm0
    00000695: 	movq	%rax, end_time(%rip)
    0000069c: 	subq	start_time(%rip), %rax
    000006a3: 	cvtsi2sd	%rax, %xmm0
    000006a8: 	divsd	DATAat0x23450(%rip), %xmm0
    000006b0: 	callq	_Z13record_resultdPKc # Offset: 1712
    000006b5: 	movq	0x90(%rsp), %rdi
    000006bd: 	cmpq	%r13, %rdi
    000006c0: 	je	.Ltmp1704 # Offset: 1728
    000006c2: 	movq	0xa0(%rsp), %rax
    000006ca: 	leaq	0x1(%rax), %rsi
    000006ce: 	callq	_ZdlPvm@PLT # Offset: 1742
.Ltmp1704:
    000006d3: 	leaq	DATAat0x2323f(%rip), %rdx
    000006da: 	movq	%r14, %rsi
    000006dd: 	movq	%r12, %rdi
    000006e0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1760
    000006e5: 	callq	clock@PLT # Offset: 1765
    000006ea: 	movq	%r12, %rsi
    000006ed: 	movq	%r15, %rdi
    000006f0: 	movq	%rax, start_time(%rip)
    000006f7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1783
    000006fc: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000703: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000070a: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000711: 	je	.Ltmp1705 # Offset: 1809
.Ltmp1896:
    00000717: 	movq	-0x20(%rax), %rdi
    0000071b: 	movq	%rdi, (%rsp)
    0000071f: 	callq	clock@PLT # Offset: 1823
    00000724: 	movq	(%rsp), %rdi
    00000728: 	pxor	%xmm0, %xmm0
    0000072c: 	movq	%rax, end_time(%rip)
    00000733: 	subq	start_time(%rip), %rax
    0000073a: 	cvtsi2sd	%rax, %xmm0
    0000073f: 	divsd	DATAat0x23450(%rip), %xmm0
    00000747: 	callq	_Z13record_resultdPKc # Offset: 1863
    0000074c: 	movq	0x90(%rsp), %rdi
    00000754: 	cmpq	%r13, %rdi
    00000757: 	je	.Ltmp1706 # Offset: 1879
    00000759: 	movq	0xa0(%rsp), %rax
    00000761: 	leaq	0x1(%rax), %rsi
    00000765: 	callq	_ZdlPvm@PLT # Offset: 1893
.Ltmp1706:
    0000076a: 	leaq	DATAat0x23257(%rip), %rdx
    00000771: 	movq	%r14, %rsi
    00000774: 	movq	%r12, %rdi
    00000777: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1911
    0000077c: 	callq	clock@PLT # Offset: 1916
    00000781: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00000788: 	movq	%rax, start_time(%rip)
    0000078f: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000796: 	movq	%rsi, 0x10(%rsp)
    0000079b: 	subq	$0x20, %rax
    0000079f: 	cmpq	%rax, %rsi
    000007a2: 	je	.Ltmp1707 # Offset: 1954
    000007a8: 	leaq	0x10(%rsi), %rdi
    000007ac: 	movq	0x98(%rsp), %rcx
    000007b4: 	movq	%rdi, (%rsi)
    000007b7: 	movq	0x90(%rsp), %rsi
    000007bf: 	movq	%rcx, (%rsp)
    000007c3: 	movq	%rsi, %rax
    000007c6: 	movq	%rsi, 0x28(%rsp)
    000007cb: 	addq	%rcx, %rax
    000007ce: 	je	.Ltmp1708 # Offset: 1998
    000007d0: 	testq	%rsi, %rsi
    000007d3: 	je	.Ltmp1709 # Offset: 2003
.Ltmp1708:
    000007d9: 	movq	(%rsp), %rax
    000007dd: 	movq	%rax, 0x30(%rsp)
    000007e2: 	cmpq	$0xf, %rax
    000007e6: 	ja	.Ltmp1710 # Offset: 2022
    000007ec: 	cmpq	$0x1, (%rsp)
    000007f1: 	jne	.Ltmp1711 # Offset: 2033
    000007f7: 	movq	0x28(%rsp), %rax
    000007fc: 	movq	0x10(%rsp), %rcx
    00000801: 	movzbl	(%rax), %eax
    00000804: 	movb	%al, 0x10(%rcx)
.Ltmp1928:
    00000807: 	movq	(%rsp), %rax
    0000080b: 	movq	0x10(%rsp), %rsi
    00000810: 	movq	%rax, 0x8(%rsi)
    00000814: 	movb	$0x0, (%rdi,%rax)
    00000818: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000081f: 	addq	$0x20, %rax
    00000823: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1895:
    0000082a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000831: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000838: 	je	.Ltmp1712 # Offset: 2104
.Ltmp1894:
    0000083e: 	movq	-0x20(%rax), %rdi
    00000842: 	movq	%rdi, (%rsp)
    00000846: 	callq	clock@PLT # Offset: 2118
    0000084b: 	movq	(%rsp), %rdi
    0000084f: 	pxor	%xmm0, %xmm0
    00000853: 	movq	%rax, end_time(%rip)
    0000085a: 	subq	start_time(%rip), %rax
    00000861: 	cvtsi2sd	%rax, %xmm0
    00000866: 	divsd	DATAat0x23450(%rip), %xmm0
    0000086e: 	callq	_Z13record_resultdPKc # Offset: 2158
    00000873: 	movq	0x90(%rsp), %rdi
    0000087b: 	cmpq	%r13, %rdi
    0000087e: 	je	.Ltmp1713 # Offset: 2174
    00000880: 	movq	0xa0(%rsp), %rax
    00000888: 	leaq	0x1(%rax), %rsi
    0000088c: 	callq	_ZdlPvm@PLT # Offset: 2188
.Ltmp1713:
    00000891: 	leaq	DATAat0x2326c(%rip), %rdx
    00000898: 	movq	%r14, %rsi
    0000089b: 	movq	%r12, %rdi
    0000089e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2206
    000008a3: 	callq	clock@PLT # Offset: 2211
    000008a8: 	movq	%r12, %rsi
    000008ab: 	movq	%r15, %rdi
    000008ae: 	movq	%rax, start_time(%rip)
    000008b5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2229
    000008ba: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000008c1: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000008c8: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000008cf: 	je	.Ltmp1714 # Offset: 2255
.Ltmp1893:
    000008d5: 	movq	-0x20(%rax), %rdi
    000008d9: 	movq	%rdi, (%rsp)
    000008dd: 	callq	clock@PLT # Offset: 2269
    000008e2: 	movq	(%rsp), %rdi
    000008e6: 	pxor	%xmm0, %xmm0
    000008ea: 	movq	%rax, end_time(%rip)
    000008f1: 	subq	start_time(%rip), %rax
    000008f8: 	cvtsi2sd	%rax, %xmm0
    000008fd: 	divsd	DATAat0x23450(%rip), %xmm0
    00000905: 	callq	_Z13record_resultdPKc # Offset: 2309
    0000090a: 	movq	0x90(%rsp), %rdi
    00000912: 	cmpq	%r13, %rdi
    00000915: 	je	.Ltmp1715 # Offset: 2325
    00000917: 	movq	0xa0(%rsp), %rax
    0000091f: 	leaq	0x1(%rax), %rsi
    00000923: 	callq	_ZdlPvm@PLT # Offset: 2339
.Ltmp1715:
    00000928: 	leaq	DATAat0x2328a(%rip), %rdx
    0000092f: 	movq	%r14, %rsi
    00000932: 	movq	%r12, %rdi
    00000935: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2357
    0000093a: 	callq	clock@PLT # Offset: 2362
    0000093f: 	movq	%r12, %rsi
    00000942: 	movq	%r15, %rdi
    00000945: 	movq	%rax, start_time(%rip)
    0000094c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2380
    00000951: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000958: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000095f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000966: 	je	.Ltmp1716 # Offset: 2406
.Ltmp1892:
    0000096c: 	movq	-0x20(%rax), %rdi
    00000970: 	movq	%rdi, (%rsp)
    00000974: 	callq	clock@PLT # Offset: 2420
    00000979: 	movq	(%rsp), %rdi
    0000097d: 	pxor	%xmm0, %xmm0
    00000981: 	movq	%rax, end_time(%rip)
    00000988: 	subq	start_time(%rip), %rax
    0000098f: 	cvtsi2sd	%rax, %xmm0
    00000994: 	divsd	DATAat0x23450(%rip), %xmm0
    0000099c: 	callq	_Z13record_resultdPKc # Offset: 2460
    000009a1: 	movq	0x90(%rsp), %rdi
    000009a9: 	cmpq	%r13, %rdi
    000009ac: 	je	.Ltmp1717 # Offset: 2476
    000009ae: 	movq	0xa0(%rsp), %rax
    000009b6: 	leaq	0x1(%rax), %rsi
    000009ba: 	callq	_ZdlPvm@PLT # Offset: 2490
.Ltmp1717:
    000009bf: 	leaq	DATAat0x233d1(%rip), %rdx
    000009c6: 	movq	%r14, %rsi
    000009c9: 	movq	%r12, %rdi
    000009cc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2508
    000009d1: 	callq	clock@PLT # Offset: 2513
    000009d6: 	movq	%r12, %rsi
    000009d9: 	movq	%r15, %rdi
    000009dc: 	movq	%rax, start_time(%rip)
    000009e3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2531
    000009e8: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000009ef: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000009f6: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000009fd: 	je	.Ltmp1718 # Offset: 2557
.Ltmp1891:
    00000a03: 	movq	-0x20(%rax), %rdi
    00000a07: 	movq	%rdi, (%rsp)
    00000a0b: 	callq	clock@PLT # Offset: 2571
    00000a10: 	movq	(%rsp), %rdi
    00000a14: 	pxor	%xmm0, %xmm0
    00000a18: 	movq	%rax, end_time(%rip)
    00000a1f: 	subq	start_time(%rip), %rax
    00000a26: 	cvtsi2sd	%rax, %xmm0
    00000a2b: 	divsd	DATAat0x23450(%rip), %xmm0
    00000a33: 	callq	_Z13record_resultdPKc # Offset: 2611
    00000a38: 	movq	0x90(%rsp), %rdi
    00000a40: 	cmpq	%r13, %rdi
    00000a43: 	je	.Ltmp1719 # Offset: 2627
    00000a45: 	movq	0xa0(%rsp), %rax
    00000a4d: 	leaq	0x1(%rax), %rsi
    00000a51: 	callq	_ZdlPvm@PLT # Offset: 2641
.Ltmp1719:
    00000a56: 	leaq	DATAat0x233e0(%rip), %rdx
    00000a5d: 	movq	%r14, %rsi
    00000a60: 	movq	%r12, %rdi
    00000a63: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2659
    00000a68: 	callq	clock@PLT # Offset: 2664
    00000a6d: 	movq	%r12, %rsi
    00000a70: 	movq	%r15, %rdi
    00000a73: 	movq	%rax, start_time(%rip)
    00000a7a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2682
    00000a7f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000a86: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000a8d: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000a94: 	je	.Ltmp1720 # Offset: 2708
.Ltmp1890:
    00000a9a: 	movq	-0x20(%rax), %rdi
    00000a9e: 	movq	%rdi, (%rsp)
    00000aa2: 	callq	clock@PLT # Offset: 2722
    00000aa7: 	movq	(%rsp), %rdi
    00000aab: 	pxor	%xmm0, %xmm0
    00000aaf: 	movq	%rax, end_time(%rip)
    00000ab6: 	subq	start_time(%rip), %rax
    00000abd: 	cvtsi2sd	%rax, %xmm0
    00000ac2: 	divsd	DATAat0x23450(%rip), %xmm0
    00000aca: 	callq	_Z13record_resultdPKc # Offset: 2762
    00000acf: 	movq	0x90(%rsp), %rdi
    00000ad7: 	cmpq	%r13, %rdi
    00000ada: 	je	.Ltmp1721 # Offset: 2778
    00000adc: 	movq	0xa0(%rsp), %rax
    00000ae4: 	leaq	0x1(%rax), %rsi
    00000ae8: 	callq	_ZdlPvm@PLT # Offset: 2792
.Ltmp1721:
    00000aed: 	leaq	DATAat0x233ee(%rip), %rdx
    00000af4: 	movq	%r14, %rsi
    00000af7: 	movq	%r12, %rdi
    00000afa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2810
    00000aff: 	callq	clock@PLT # Offset: 2815
    00000b04: 	movq	%r12, %rsi
    00000b07: 	movq	%r15, %rdi
    00000b0a: 	movq	%rax, start_time(%rip)
    00000b11: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2833
    00000b16: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000b1d: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000b24: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000b2b: 	je	.Ltmp1722 # Offset: 2859
.Ltmp1889:
    00000b31: 	movq	-0x20(%rax), %rdi
    00000b35: 	movq	%rdi, (%rsp)
    00000b39: 	callq	clock@PLT # Offset: 2873
    00000b3e: 	movq	(%rsp), %rdi
    00000b42: 	pxor	%xmm0, %xmm0
    00000b46: 	movq	%rax, end_time(%rip)
    00000b4d: 	subq	start_time(%rip), %rax
    00000b54: 	cvtsi2sd	%rax, %xmm0
    00000b59: 	divsd	DATAat0x23450(%rip), %xmm0
    00000b61: 	callq	_Z13record_resultdPKc # Offset: 2913
    00000b66: 	movq	0x90(%rsp), %rdi
    00000b6e: 	cmpq	%r13, %rdi
    00000b71: 	je	.Ltmp1723 # Offset: 2929
    00000b73: 	movq	0xa0(%rsp), %rax
    00000b7b: 	leaq	0x1(%rax), %rsi
    00000b7f: 	callq	_ZdlPvm@PLT # Offset: 2943
.Ltmp1723:
    00000b84: 	leaq	0x70(%rsp), %rdi
    00000b89: 	leaq	DATAat0x232a5(%rip), %rdx
    00000b90: 	movq	%r14, %rsi
    00000b93: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2963
    00000b98: 	movl	iterations(%rip), %edx
    00000b9e: 	movq	0x70(%rsp), %rdi
    00000ba3: 	xorl	%r8d, %r8d
    00000ba6: 	xorl	%ecx, %ecx
    00000ba8: 	movl	$0x1f40, %esi
    00000bad: 	callq	_Z9summarizePKciiii # Offset: 2989
    00000bb2: 	movslq	base_iterations(%rip), %rax
    00000bb9: 	movq	%r14, %rsi
    00000bbc: 	movq	%r12, %rdi
    00000bbf: 	movq	%rax, %rdx
    00000bc2: 	imulq	$0x66666667, %rax, %rax
    00000bc9: 	sarl	$0x1f, %edx
    00000bcc: 	sarq	$0x22, %rax
    00000bd0: 	subl	%edx, %eax
    00000bd2: 	leaq	DATAat0x232be(%rip), %rdx
    00000bd9: 	movl	%eax, iterations(%rip)
    00000bdf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3039
    00000be4: 	callq	clock@PLT # Offset: 3044
    00000be9: 	movl	iterations(%rip), %ecx
    00000bef: 	movq	%rax, start_time(%rip)
    00000bf6: 	testl	%ecx, %ecx
    00000bf8: 	jle	.Ltmp1724 # Offset: 3064
    00000bfe: 	movdqa	DATAat0x23820(%rip), %xmm7
    00000c06: 	movl	$0x0, 0x10(%rsp)
    00000c0e: 	movaps	%xmm7, (%rsp)
    00000c12: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1727:
    00000c18: 	movq	%rbp, %rax
    00000c1b: 	pxor	%xmm0, %xmm0
    00000c1f: 	nop # Size: 1
.Ltmp1725:
    00000c20: 	paddw	(%rsp), %xmm0
    00000c25: 	addq	$0x10, %rax
    00000c29: 	paddw	-0x10(%rax), %xmm0
    00000c2e: 	cmpq	%rbx, %rax
    00000c31: 	jne	.Ltmp1725 # Offset: 3121
    00000c33: 	movdqa	%xmm0, %xmm1
    00000c37: 	cvttsd2si	init_value(%rip), %eax
    00000c3f: 	psrldq	$0x8, %xmm1
    00000c44: 	paddw	%xmm1, %xmm0
    00000c48: 	movdqa	%xmm0, %xmm1
    00000c4c: 	psrldq	$0x4, %xmm1
    00000c51: 	addl	$0xa, %eax
    00000c54: 	imulw	$0x1f40, %ax, %ax
    00000c59: 	paddw	%xmm1, %xmm0
    00000c5d: 	movdqa	%xmm0, %xmm1
    00000c61: 	psrldq	$0x2, %xmm1
    00000c66: 	paddw	%xmm1, %xmm0
    00000c6a: 	pextrw	$0x0, %xmm0, %edx
    00000c6f: 	cmpw	%dx, %ax
    00000c72: 	je	.Ltmp1726 # Offset: 3186
    00000c74: 	movl	current_test(%rip), %edx
    00000c7a: 	leaq	DATAat0x231d2(%rip), %rsi
    00000c81: 	movl	$0x1, %edi
    00000c86: 	xorl	%eax, %eax
    00000c88: 	callq	__printf_chk@PLT # Offset: 3208
    00000c8d: 	movl	iterations(%rip), %ecx
.Ltmp1726:
    00000c93: 	addl	$0x1, 0x10(%rsp)
    00000c98: 	movl	0x10(%rsp), %eax
    00000c9c: 	cmpl	%ecx, %eax
    00000c9e: 	jl	.Ltmp1727 # Offset: 3230
.Ltmp1724:
    00000ca4: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000cab: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00000cb2: 	subq	$0x20, %rax
    00000cb6: 	movq	%rsi, (%rsp)
    00000cba: 	cmpq	%rax, %rsi
    00000cbd: 	je	.Ltmp1728 # Offset: 3261
    00000cc3: 	leaq	0x10(%rsi), %rdi
    00000cc7: 	movq	0x98(%rsp), %rcx
    00000ccf: 	movq	%rdi, (%rsi)
    00000cd2: 	movq	0x90(%rsp), %rsi
    00000cda: 	movq	%rcx, 0x10(%rsp)
    00000cdf: 	movq	%rsi, %rax
    00000ce2: 	movq	%rsi, 0x28(%rsp)
    00000ce7: 	addq	%rcx, %rax
    00000cea: 	je	.Ltmp1729 # Offset: 3306
    00000cec: 	testq	%rsi, %rsi
    00000cef: 	je	.Ltmp1730 # Offset: 3311
.Ltmp1729:
    00000cf5: 	movq	0x10(%rsp), %rax
    00000cfa: 	movq	%rax, 0x30(%rsp)
    00000cff: 	cmpq	$0xf, %rax
    00000d03: 	ja	.Ltmp1731 # Offset: 3331
    00000d09: 	cmpq	$0x1, 0x10(%rsp)
    00000d0f: 	jne	.Ltmp1732 # Offset: 3343
    00000d15: 	movq	0x28(%rsp), %rax
    00000d1a: 	movq	(%rsp), %rsi
    00000d1e: 	movzbl	(%rax), %eax
    00000d21: 	movb	%al, 0x10(%rsi)
.Ltmp1922:
    00000d24: 	movq	0x10(%rsp), %rax
    00000d29: 	movq	(%rsp), %rsi
    00000d2d: 	movq	%rax, 0x8(%rsi)
    00000d31: 	movb	$0x0, (%rdi,%rax)
    00000d35: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000d3c: 	addq	$0x20, %rax
    00000d40: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1888:
    00000d47: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000d4e: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000d55: 	je	.Ltmp1733 # Offset: 3413
.Ltmp1887:
    00000d5b: 	movq	-0x20(%rax), %rdi
    00000d5f: 	movq	%rdi, (%rsp)
    00000d63: 	callq	clock@PLT # Offset: 3427
    00000d68: 	movq	(%rsp), %rdi
    00000d6c: 	pxor	%xmm0, %xmm0
    00000d70: 	movq	%rax, end_time(%rip)
    00000d77: 	subq	start_time(%rip), %rax
    00000d7e: 	cvtsi2sd	%rax, %xmm0
    00000d83: 	divsd	DATAat0x23450(%rip), %xmm0
    00000d8b: 	callq	_Z13record_resultdPKc # Offset: 3467
    00000d90: 	movq	0x90(%rsp), %rdi
    00000d98: 	cmpq	%r13, %rdi
    00000d9b: 	je	.Ltmp1734 # Offset: 3483
    00000d9d: 	movq	0xa0(%rsp), %rax
    00000da5: 	leaq	0x1(%rax), %rsi
    00000da9: 	callq	_ZdlPvm@PLT # Offset: 3497
.Ltmp1734:
    00000dae: 	leaq	DATAat0x232cc(%rip), %rdx
    00000db5: 	movq	%r14, %rsi
    00000db8: 	movq	%r12, %rdi
    00000dbb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3515
    00000dc0: 	callq	clock@PLT # Offset: 3520
    00000dc5: 	movl	iterations(%rip), %ecx
    00000dcb: 	movq	%rax, start_time(%rip)
    00000dd2: 	testl	%ecx, %ecx
    00000dd4: 	jle	.Ltmp1735 # Offset: 3540
    00000dda: 	movdqa	DATAat0x23820(%rip), %xmm7
    00000de2: 	movl	$0x0, 0x10(%rsp)
    00000dea: 	movaps	%xmm7, (%rsp)
    00000dee: 	nop # Size: 2
.Ltmp1738:
    00000df0: 	movq	%rbp, %rax
    00000df3: 	pxor	%xmm0, %xmm0
    00000df7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1736:
    00000e00: 	paddw	(%rsp), %xmm0
    00000e05: 	addq	$0x10, %rax
    00000e09: 	paddw	-0x10(%rax), %xmm0
    00000e0e: 	cmpq	%rbx, %rax
    00000e11: 	jne	.Ltmp1736 # Offset: 3601
    00000e13: 	movdqa	%xmm0, %xmm1
    00000e17: 	cvttsd2si	init_value(%rip), %eax
    00000e1f: 	psrldq	$0x8, %xmm1
    00000e24: 	paddw	%xmm1, %xmm0
    00000e28: 	movdqa	%xmm0, %xmm1
    00000e2c: 	psrldq	$0x4, %xmm1
    00000e31: 	addl	$0xa, %eax
    00000e34: 	imulw	$0x1f40, %ax, %ax
    00000e39: 	paddw	%xmm1, %xmm0
    00000e3d: 	movdqa	%xmm0, %xmm1
    00000e41: 	psrldq	$0x2, %xmm1
    00000e46: 	paddw	%xmm1, %xmm0
    00000e4a: 	pextrw	$0x0, %xmm0, %edx
    00000e4f: 	cmpw	%dx, %ax
    00000e52: 	je	.Ltmp1737 # Offset: 3666
    00000e54: 	movl	current_test(%rip), %edx
    00000e5a: 	leaq	DATAat0x231d2(%rip), %rsi
    00000e61: 	movl	$0x1, %edi
    00000e66: 	xorl	%eax, %eax
    00000e68: 	callq	__printf_chk@PLT # Offset: 3688
    00000e6d: 	movl	iterations(%rip), %ecx
.Ltmp1737:
    00000e73: 	addl	$0x1, 0x10(%rsp)
    00000e78: 	movl	0x10(%rsp), %eax
    00000e7c: 	cmpl	%ecx, %eax
    00000e7e: 	jl	.Ltmp1738 # Offset: 3710
.Ltmp1735:
    00000e84: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000e8b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00000e92: 	subq	$0x20, %rax
    00000e96: 	movq	%rsi, (%rsp)
    00000e9a: 	cmpq	%rax, %rsi
    00000e9d: 	je	.Ltmp1739 # Offset: 3741
    00000ea3: 	leaq	0x10(%rsi), %rdi
    00000ea7: 	movq	%rdi, (%rsi)
    00000eaa: 	movq	0x90(%rsp), %rcx
    00000eb2: 	movq	0x98(%rsp), %rsi
    00000eba: 	movq	%rcx, %rax
    00000ebd: 	movq	%rcx, 0x28(%rsp)
    00000ec2: 	addq	%rsi, %rax
    00000ec5: 	movq	%rsi, 0x10(%rsp)
    00000eca: 	je	.Ltmp1740 # Offset: 3786
    00000ecc: 	testq	%rcx, %rcx
    00000ecf: 	je	.Ltmp1741 # Offset: 3791
.Ltmp1740:
    00000ed5: 	movq	0x10(%rsp), %rax
    00000eda: 	movq	%rax, 0x30(%rsp)
    00000edf: 	cmpq	$0xf, %rax
    00000ee3: 	ja	.Ltmp1742 # Offset: 3811
    00000ee9: 	cmpq	$0x1, 0x10(%rsp)
    00000eef: 	jne	.Ltmp1743 # Offset: 3823
    00000ef5: 	movq	0x28(%rsp), %rax
    00000efa: 	movq	(%rsp), %rcx
    00000efe: 	movzbl	(%rax), %eax
    00000f01: 	movb	%al, 0x10(%rcx)
.Ltmp1916:
    00000f04: 	movq	0x10(%rsp), %rax
    00000f09: 	movq	(%rsp), %rsi
    00000f0d: 	movq	%rax, 0x8(%rsi)
    00000f11: 	movb	$0x0, (%rdi,%rax)
    00000f15: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000f1c: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000f23: 	addq	$0x20, %rax
    00000f27: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000f2e: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00000f35: 	je	.Ltmp1744 # Offset: 3893
.Ltmp1886:
    00000f3b: 	movq	-0x20(%rax), %rdi
    00000f3f: 	movq	%rdi, (%rsp)
    00000f43: 	callq	clock@PLT # Offset: 3907
    00000f48: 	movq	(%rsp), %rdi
    00000f4c: 	pxor	%xmm0, %xmm0
    00000f50: 	movq	%rax, end_time(%rip)
    00000f57: 	subq	start_time(%rip), %rax
    00000f5e: 	cvtsi2sd	%rax, %xmm0
    00000f63: 	divsd	DATAat0x23450(%rip), %xmm0
    00000f6b: 	callq	_Z13record_resultdPKc # Offset: 3947
    00000f70: 	movq	0x90(%rsp), %rdi
    00000f78: 	cmpq	%r13, %rdi
    00000f7b: 	je	.Ltmp1745 # Offset: 3963
    00000f7d: 	movq	0xa0(%rsp), %rax
    00000f85: 	leaq	0x1(%rax), %rsi
    00000f89: 	callq	_ZdlPvm@PLT # Offset: 3977
.Ltmp1745:
    00000f8e: 	leaq	DATAat0x232e4(%rip), %rdx
    00000f95: 	movq	%r14, %rsi
    00000f98: 	movq	%r12, %rdi
    00000f9b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3995
    00000fa0: 	callq	clock@PLT # Offset: 4000
    00000fa5: 	movl	iterations(%rip), %ecx
    00000fab: 	movq	%rax, start_time(%rip)
    00000fb2: 	testl	%ecx, %ecx
    00000fb4: 	jle	.Ltmp1746 # Offset: 4020
    00000fba: 	movdqa	DATAat0x23830(%rip), %xmm7
    00000fc2: 	movl	$0x0, 0x10(%rsp)
    00000fca: 	movaps	%xmm7, (%rsp)
    00000fce: 	nop # Size: 2
.Ltmp1749:
    00000fd0: 	movq	%rbp, %rax
    00000fd3: 	pxor	%xmm0, %xmm0
    00000fd7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1747:
    00000fe0: 	paddw	(%rsp), %xmm0
    00000fe5: 	addq	$0x10, %rax
    00000fe9: 	paddw	-0x10(%rax), %xmm0
    00000fee: 	cmpq	%rbx, %rax
    00000ff1: 	jne	.Ltmp1747 # Offset: 4081
    00000ff3: 	movdqa	%xmm0, %xmm1
    00000ff7: 	cvttsd2si	init_value(%rip), %eax
    00000fff: 	psrldq	$0x8, %xmm1
    00001004: 	paddw	%xmm1, %xmm0
    00001008: 	movdqa	%xmm0, %xmm1
    0000100c: 	psrldq	$0x4, %xmm1
    00001011: 	subl	$0xa, %eax
    00001014: 	imulw	$0x1f40, %ax, %ax
    00001019: 	paddw	%xmm1, %xmm0
    0000101d: 	movdqa	%xmm0, %xmm1
    00001021: 	psrldq	$0x2, %xmm1
    00001026: 	paddw	%xmm1, %xmm0
    0000102a: 	pextrw	$0x0, %xmm0, %edx
    0000102f: 	cmpw	%dx, %ax
    00001032: 	je	.Ltmp1748 # Offset: 4146
    00001034: 	movl	current_test(%rip), %edx
    0000103a: 	leaq	DATAat0x231d2(%rip), %rsi
    00001041: 	movl	$0x1, %edi
    00001046: 	xorl	%eax, %eax
    00001048: 	callq	__printf_chk@PLT # Offset: 4168
    0000104d: 	movl	iterations(%rip), %ecx
.Ltmp1748:
    00001053: 	addl	$0x1, 0x10(%rsp)
    00001058: 	movl	0x10(%rsp), %eax
    0000105c: 	cmpl	%ecx, %eax
    0000105e: 	jl	.Ltmp1749 # Offset: 4190
.Ltmp1746:
    00001064: 	movq	%r12, %rsi
    00001067: 	movq	%r15, %rdi
    0000106a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4202
    0000106f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001076: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000107d: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001084: 	je	.Ltmp1750 # Offset: 4228
.Ltmp1915:
    0000108a: 	movq	-0x20(%rax), %rdi
    0000108e: 	movq	%rdi, (%rsp)
    00001092: 	callq	clock@PLT # Offset: 4242
    00001097: 	movq	(%rsp), %rdi
    0000109b: 	pxor	%xmm0, %xmm0
    0000109f: 	movq	%rax, end_time(%rip)
    000010a6: 	subq	start_time(%rip), %rax
    000010ad: 	cvtsi2sd	%rax, %xmm0
    000010b2: 	divsd	DATAat0x23450(%rip), %xmm0
    000010ba: 	callq	_Z13record_resultdPKc # Offset: 4282
    000010bf: 	movq	0x90(%rsp), %rdi
    000010c7: 	cmpq	%r13, %rdi
    000010ca: 	je	.Ltmp1751 # Offset: 4298
    000010cc: 	movq	0xa0(%rsp), %rax
    000010d4: 	leaq	0x1(%rax), %rsi
    000010d8: 	callq	_ZdlPvm@PLT # Offset: 4312
.Ltmp1751:
    000010dd: 	leaq	DATAat0x232f7(%rip), %rdx
    000010e4: 	movq	%r14, %rsi
    000010e7: 	movq	%r12, %rdi
    000010ea: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4330
    000010ef: 	callq	clock@PLT # Offset: 4335
    000010f4: 	movl	iterations(%rip), %ecx
    000010fa: 	movq	%rax, start_time(%rip)
    00001101: 	testl	%ecx, %ecx
    00001103: 	jle	.Ltmp1752 # Offset: 4355
    00001109: 	movdqa	DATAat0x23830(%rip), %xmm7
    00001111: 	movl	$0x0, 0x10(%rsp)
    00001119: 	movaps	%xmm7, (%rsp)
    0000111d: 	nopl	(%rax) # Size: 3
.Ltmp1755:
    00001120: 	movq	%rbp, %rax
    00001123: 	pxor	%xmm0, %xmm0
    00001127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1753:
    00001130: 	paddw	(%rsp), %xmm0
    00001135: 	addq	$0x10, %rax
    00001139: 	paddw	-0x10(%rax), %xmm0
    0000113e: 	cmpq	%rax, %rbx
    00001141: 	jne	.Ltmp1753 # Offset: 4417
    00001143: 	movdqa	%xmm0, %xmm1
    00001147: 	cvttsd2si	init_value(%rip), %eax
    0000114f: 	psrldq	$0x8, %xmm1
    00001154: 	paddw	%xmm1, %xmm0
    00001158: 	movdqa	%xmm0, %xmm1
    0000115c: 	psrldq	$0x4, %xmm1
    00001161: 	subl	$0xa, %eax
    00001164: 	imulw	$0x1f40, %ax, %ax
    00001169: 	paddw	%xmm1, %xmm0
    0000116d: 	movdqa	%xmm0, %xmm1
    00001171: 	psrldq	$0x2, %xmm1
    00001176: 	paddw	%xmm1, %xmm0
    0000117a: 	pextrw	$0x0, %xmm0, %edx
    0000117f: 	cmpw	%dx, %ax
    00001182: 	je	.Ltmp1754 # Offset: 4482
    00001184: 	movl	current_test(%rip), %edx
    0000118a: 	leaq	DATAat0x231d2(%rip), %rsi
    00001191: 	movl	$0x1, %edi
    00001196: 	xorl	%eax, %eax
    00001198: 	callq	__printf_chk@PLT # Offset: 4504
    0000119d: 	movl	iterations(%rip), %ecx
.Ltmp1754:
    000011a3: 	addl	$0x1, 0x10(%rsp)
    000011a8: 	movl	0x10(%rsp), %eax
    000011ac: 	cmpl	%ecx, %eax
    000011ae: 	jl	.Ltmp1755 # Offset: 4526
.Ltmp1752:
    000011b4: 	movq	%r12, %rsi
    000011b7: 	movq	%r15, %rdi
    000011ba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4538
    000011bf: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000011c6: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000011cd: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000011d4: 	je	.Ltmp1756 # Offset: 4564
.Ltmp1914:
    000011da: 	movq	-0x20(%rax), %rdi
    000011de: 	movq	%rdi, (%rsp)
    000011e2: 	callq	clock@PLT # Offset: 4578
    000011e7: 	movq	(%rsp), %rdi
    000011eb: 	pxor	%xmm0, %xmm0
    000011ef: 	movq	%rax, end_time(%rip)
    000011f6: 	subq	start_time(%rip), %rax
    000011fd: 	cvtsi2sd	%rax, %xmm0
    00001202: 	divsd	DATAat0x23450(%rip), %xmm0
    0000120a: 	callq	_Z13record_resultdPKc # Offset: 4618
    0000120f: 	movq	0x90(%rsp), %rdi
    00001217: 	cmpq	%r13, %rdi
    0000121a: 	je	.Ltmp1757 # Offset: 4634
    0000121c: 	movq	0xa0(%rsp), %rax
    00001224: 	leaq	0x1(%rax), %rsi
    00001228: 	callq	_ZdlPvm@PLT # Offset: 4648
.Ltmp1757:
    0000122d: 	leaq	DATAat0x23314(%rip), %rdx
    00001234: 	movq	%r14, %rsi
    00001237: 	movq	%r12, %rdi
    0000123a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4666
    0000123f: 	callq	clock@PLT # Offset: 4671
    00001244: 	movl	iterations(%rip), %ecx
    0000124a: 	movl	$0x0, (%rsp)
    00001251: 	movq	%rax, start_time(%rip)
    00001258: 	testl	%ecx, %ecx
    0000125a: 	jle	.Ltmp1758 # Offset: 4698
.Ltmp1761:
    00001260: 	movq	%rbp, %rax
    00001263: 	pxor	%xmm1, %xmm1
    00001267: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1759:
    00001270: 	movdqa	(%rax), %xmm0
    00001274: 	addq	$0x10, %rax
    00001278: 	psllw	$0x4, %xmm0
    0000127d: 	psubw	-0x10(%rax), %xmm0
    00001282: 	psllw	$0x3, %xmm0
    00001287: 	paddw	%xmm0, %xmm1
    0000128b: 	cmpq	%rbx, %rax
    0000128e: 	jne	.Ltmp1759 # Offset: 4750
    00001290: 	movdqa	%xmm1, %xmm0
    00001294: 	cvttsd2si	init_value(%rip), %eax
    0000129c: 	psrldq	$0x8, %xmm0
    000012a1: 	paddw	%xmm0, %xmm1
    000012a5: 	movdqa	%xmm1, %xmm0
    000012a9: 	psrldq	$0x4, %xmm0
    000012ae: 	imulw	$0xa600, %ax, %ax
    000012b3: 	paddw	%xmm0, %xmm1
    000012b7: 	movdqa	%xmm1, %xmm0
    000012bb: 	psrldq	$0x2, %xmm0
    000012c0: 	paddw	%xmm0, %xmm1
    000012c4: 	pextrw	$0x0, %xmm1, %edx
    000012c9: 	cmpw	%dx, %ax
    000012cc: 	je	.Ltmp1760 # Offset: 4812
    000012ce: 	movl	current_test(%rip), %edx
    000012d4: 	leaq	DATAat0x231d2(%rip), %rsi
    000012db: 	movl	$0x1, %edi
    000012e0: 	xorl	%eax, %eax
    000012e2: 	callq	__printf_chk@PLT # Offset: 4834
    000012e7: 	movl	iterations(%rip), %ecx
.Ltmp1760:
    000012ed: 	addl	$0x1, (%rsp)
    000012f1: 	movl	(%rsp), %eax
    000012f4: 	cmpl	%ecx, %eax
    000012f6: 	jl	.Ltmp1761 # Offset: 4854
.Ltmp1758:
    000012fc: 	movq	%r12, %rsi
    000012ff: 	movq	%r15, %rdi
    00001302: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4866
    00001307: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000130e: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001315: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000131c: 	je	.Ltmp1762 # Offset: 4892
.Ltmp1913:
    00001322: 	movq	-0x20(%rax), %rdi
    00001326: 	movq	%rdi, (%rsp)
    0000132a: 	callq	clock@PLT # Offset: 4906
    0000132f: 	movq	(%rsp), %rdi
    00001333: 	pxor	%xmm0, %xmm0
    00001337: 	movq	%rax, end_time(%rip)
    0000133e: 	subq	start_time(%rip), %rax
    00001345: 	cvtsi2sd	%rax, %xmm0
    0000134a: 	divsd	DATAat0x23450(%rip), %xmm0
    00001352: 	callq	_Z13record_resultdPKc # Offset: 4946
    00001357: 	movq	0x90(%rsp), %rdi
    0000135f: 	cmpq	%r13, %rdi
    00001362: 	je	.Ltmp1763 # Offset: 4962
    00001364: 	movq	0xa0(%rsp), %rax
    0000136c: 	leaq	0x1(%rax), %rsi
    00001370: 	callq	_ZdlPvm@PLT # Offset: 4976
.Ltmp1763:
    00001375: 	leaq	DATAat0x23327(%rip), %rdx
    0000137c: 	movq	%r14, %rsi
    0000137f: 	movq	%r12, %rdi
    00001382: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4994
    00001387: 	callq	clock@PLT # Offset: 4999
    0000138c: 	movl	iterations(%rip), %ecx
    00001392: 	movl	$0x0, (%rsp)
    00001399: 	movq	%rax, start_time(%rip)
    000013a0: 	testl	%ecx, %ecx
    000013a2: 	jle	.Ltmp1764 # Offset: 5026
    000013a8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1767:
    000013b0: 	movq	%rbp, %rax
    000013b3: 	pxor	%xmm1, %xmm1
    000013b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1765:
    000013c0: 	movdqa	(%rax), %xmm0
    000013c4: 	addq	$0x10, %rax
    000013c8: 	psllw	$0x4, %xmm0
    000013cd: 	psubw	-0x10(%rax), %xmm0
    000013d2: 	psllw	$0x3, %xmm0
    000013d7: 	paddw	%xmm0, %xmm1
    000013db: 	cmpq	%rbx, %rax
    000013de: 	jne	.Ltmp1765 # Offset: 5086
    000013e0: 	movdqa	%xmm1, %xmm0
    000013e4: 	cvttsd2si	init_value(%rip), %eax
    000013ec: 	psrldq	$0x8, %xmm0
    000013f1: 	paddw	%xmm0, %xmm1
    000013f5: 	movdqa	%xmm1, %xmm0
    000013f9: 	psrldq	$0x4, %xmm0
    000013fe: 	imulw	$0xa600, %ax, %ax
    00001403: 	paddw	%xmm0, %xmm1
    00001407: 	movdqa	%xmm1, %xmm0
    0000140b: 	psrldq	$0x2, %xmm0
    00001410: 	paddw	%xmm0, %xmm1
    00001414: 	pextrw	$0x0, %xmm1, %edx
    00001419: 	cmpw	%dx, %ax
    0000141c: 	je	.Ltmp1766 # Offset: 5148
    0000141e: 	movl	current_test(%rip), %edx
    00001424: 	leaq	DATAat0x231d2(%rip), %rsi
    0000142b: 	movl	$0x1, %edi
    00001430: 	xorl	%eax, %eax
    00001432: 	callq	__printf_chk@PLT # Offset: 5170
    00001437: 	movl	iterations(%rip), %ecx
.Ltmp1766:
    0000143d: 	addl	$0x1, (%rsp)
    00001441: 	movl	(%rsp), %eax
    00001444: 	cmpl	%ecx, %eax
    00001446: 	jl	.Ltmp1767 # Offset: 5190
.Ltmp1764:
    0000144c: 	movq	%r12, %rsi
    0000144f: 	movq	%r15, %rdi
    00001452: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5202
    00001457: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000145e: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001465: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000146c: 	je	.Ltmp1768 # Offset: 5228
.Ltmp1912:
    00001472: 	movq	-0x20(%rax), %rdi
    00001476: 	movq	%rdi, (%rsp)
    0000147a: 	callq	clock@PLT # Offset: 5242
    0000147f: 	movq	(%rsp), %rdi
    00001483: 	pxor	%xmm0, %xmm0
    00001487: 	movq	%rax, end_time(%rip)
    0000148e: 	subq	start_time(%rip), %rax
    00001495: 	cvtsi2sd	%rax, %xmm0
    0000149a: 	divsd	DATAat0x23450(%rip), %xmm0
    000014a2: 	callq	_Z13record_resultdPKc # Offset: 5282
    000014a7: 	movq	0x90(%rsp), %rdi
    000014af: 	cmpq	%r13, %rdi
    000014b2: 	je	.Ltmp1769 # Offset: 5298
    000014b4: 	movq	0xa0(%rsp), %rax
    000014bc: 	leaq	0x1(%rax), %rsi
    000014c0: 	callq	_ZdlPvm@PLT # Offset: 5312
.Ltmp1769:
    000014c5: 	leaq	DATAat0x23345(%rip), %rdx
    000014cc: 	movq	%r14, %rsi
    000014cf: 	movq	%r12, %rdi
    000014d2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5330
    000014d7: 	callq	clock@PLT # Offset: 5335
    000014dc: 	movl	iterations(%rip), %ecx
    000014e2: 	movq	%rax, start_time(%rip)
    000014e9: 	testl	%ecx, %ecx
    000014eb: 	jle	.Ltmp1770 # Offset: 5355
    000014f1: 	movl	$0x0, (%rsp)
    000014f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1773:
    00001500: 	movq	%rbp, %rax
    00001503: 	pxor	%xmm0, %xmm0
    00001507: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1771:
    00001510: 	paddw	DATAat0x23840(%rip), %xmm0
    00001518: 	addq	$0x10, %rax
    0000151c: 	paddw	-0x10(%rax), %xmm0
    00001521: 	cmpq	%rbx, %rax
    00001524: 	jne	.Ltmp1771 # Offset: 5412
    00001526: 	movdqa	%xmm0, %xmm1
    0000152a: 	cvttsd2si	init_value(%rip), %eax
    00001532: 	psrldq	$0x8, %xmm1
    00001537: 	paddw	%xmm1, %xmm0
    0000153b: 	movdqa	%xmm0, %xmm1
    0000153f: 	psrldq	$0x4, %xmm1
    00001544: 	addl	$0x78, %eax
    00001547: 	imulw	$0x1f40, %ax, %ax
    0000154c: 	paddw	%xmm1, %xmm0
    00001550: 	movdqa	%xmm0, %xmm1
    00001554: 	psrldq	$0x2, %xmm1
    00001559: 	paddw	%xmm1, %xmm0
    0000155d: 	pextrw	$0x0, %xmm0, %edx
    00001562: 	cmpw	%dx, %ax
    00001565: 	je	.Ltmp1772 # Offset: 5477
    00001567: 	movl	current_test(%rip), %edx
    0000156d: 	leaq	DATAat0x231d2(%rip), %rsi
    00001574: 	movl	$0x1, %edi
    00001579: 	xorl	%eax, %eax
    0000157b: 	callq	__printf_chk@PLT # Offset: 5499
    00001580: 	movl	iterations(%rip), %ecx
.Ltmp1772:
    00001586: 	addl	$0x1, (%rsp)
    0000158a: 	movl	(%rsp), %eax
    0000158d: 	cmpl	%ecx, %eax
    0000158f: 	jl	.Ltmp1773 # Offset: 5519
.Ltmp1770:
    00001595: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000159c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    000015a3: 	subq	$0x20, %rax
    000015a7: 	movq	%rsi, (%rsp)
    000015ab: 	cmpq	%rax, %rsi
    000015ae: 	je	.Ltmp1774 # Offset: 5550
    000015b4: 	leaq	0x10(%rsi), %rdi
    000015b8: 	movq	0x98(%rsp), %rcx
    000015c0: 	movq	%rdi, (%rsi)
    000015c3: 	movq	0x90(%rsp), %rsi
    000015cb: 	movq	%rcx, 0x10(%rsp)
    000015d0: 	movq	%rsi, %rax
    000015d3: 	movq	%rsi, 0x28(%rsp)
    000015d8: 	addq	%rcx, %rax
    000015db: 	je	.Ltmp1775 # Offset: 5595
    000015dd: 	testq	%rsi, %rsi
    000015e0: 	je	.Ltmp1776 # Offset: 5600
.Ltmp1775:
    000015e6: 	movq	0x10(%rsp), %rax
    000015eb: 	movq	%rax, 0x30(%rsp)
    000015f0: 	cmpq	$0xf, %rax
    000015f4: 	ja	.Ltmp1777 # Offset: 5620
    000015fa: 	cmpq	$0x1, 0x10(%rsp)
    00001600: 	jne	.Ltmp1778 # Offset: 5632
    00001606: 	movq	0x28(%rsp), %rax
    0000160b: 	movq	(%rsp), %rsi
    0000160f: 	movzbl	(%rax), %eax
    00001612: 	movb	%al, 0x10(%rsi)
.Ltmp1917:
    00001615: 	movq	0x10(%rsp), %rax
    0000161a: 	movq	(%rsp), %rsi
    0000161e: 	movq	%rax, 0x8(%rsi)
    00001622: 	movb	$0x0, (%rdi,%rax)
    00001626: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000162d: 	addq	$0x20, %rax
    00001631: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1911:
    00001638: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000163f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001646: 	je	.Ltmp1779 # Offset: 5702
.Ltmp1910:
    0000164c: 	movq	-0x20(%rax), %rdi
    00001650: 	movq	%rdi, (%rsp)
    00001654: 	callq	clock@PLT # Offset: 5716
    00001659: 	movq	(%rsp), %rdi
    0000165d: 	pxor	%xmm0, %xmm0
    00001661: 	movq	%rax, end_time(%rip)
    00001668: 	subq	start_time(%rip), %rax
    0000166f: 	cvtsi2sd	%rax, %xmm0
    00001674: 	divsd	DATAat0x23450(%rip), %xmm0
    0000167c: 	callq	_Z13record_resultdPKc # Offset: 5756
    00001681: 	movq	0x90(%rsp), %rdi
    00001689: 	cmpq	%r13, %rdi
    0000168c: 	je	.Ltmp1780 # Offset: 5772
    0000168e: 	movq	0xa0(%rsp), %rax
    00001696: 	leaq	0x1(%rax), %rsi
    0000169a: 	callq	_ZdlPvm@PLT # Offset: 5786
.Ltmp1780:
    0000169f: 	leaq	DATAat0x23362(%rip), %rdx
    000016a6: 	movq	%r14, %rsi
    000016a9: 	movq	%r12, %rdi
    000016ac: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5804
    000016b1: 	callq	clock@PLT # Offset: 5809
    000016b6: 	movl	iterations(%rip), %ecx
    000016bc: 	movq	%rax, start_time(%rip)
    000016c3: 	testl	%ecx, %ecx
    000016c5: 	jle	.Ltmp1781 # Offset: 5829
    000016cb: 	movl	$0x0, (%rsp)
    000016d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1784:
    000016d8: 	movq	%rbp, %rax
    000016db: 	pxor	%xmm2, %xmm2
    000016df: 	nop # Size: 1
.Ltmp1782:
    000016e0: 	movdqa	(%rax), %xmm1
    000016e4: 	movdqa	(%rax), %xmm0
    000016e8: 	pmulhw	DATAat0x23850(%rip), %xmm0
    000016f0: 	addq	$0x10, %rax
    000016f4: 	psraw	$0x1, %xmm0
    000016f9: 	psraw	$0xf, %xmm1
    000016fe: 	psubw	%xmm1, %xmm0
    00001702: 	paddw	%xmm0, %xmm2
    00001706: 	cmpq	%rbx, %rax
    00001709: 	jne	.Ltmp1782 # Offset: 5897
    0000170b: 	cvttsd2si	init_value(%rip), %edx
    00001713: 	movdqa	%xmm2, %xmm0
    00001717: 	psrldq	$0x8, %xmm0
    0000171c: 	paddw	%xmm0, %xmm2
    00001720: 	movdqa	%xmm2, %xmm0
    00001724: 	movswl	%dx, %eax
    00001727: 	psrldq	$0x4, %xmm0
    0000172c: 	sarw	$0xf, %dx
    00001730: 	imull	$0x6667, %eax, %eax
    00001736: 	paddw	%xmm0, %xmm2
    0000173a: 	movdqa	%xmm2, %xmm0
    0000173e: 	psrldq	$0x2, %xmm0
    00001743: 	sarl	$0x11, %eax
    00001746: 	paddw	%xmm0, %xmm2
    0000174a: 	subl	%edx, %eax
    0000174c: 	pextrw	$0x0, %xmm2, %edx
    00001751: 	imulw	$0x1f40, %ax, %ax
    00001756: 	cmpw	%dx, %ax
    00001759: 	je	.Ltmp1783 # Offset: 5977
    0000175b: 	movl	current_test(%rip), %edx
    00001761: 	leaq	DATAat0x231d2(%rip), %rsi
    00001768: 	movl	$0x1, %edi
    0000176d: 	xorl	%eax, %eax
    0000176f: 	callq	__printf_chk@PLT # Offset: 5999
    00001774: 	movl	iterations(%rip), %ecx
.Ltmp1783:
    0000177a: 	addl	$0x1, (%rsp)
    0000177e: 	movl	(%rsp), %eax
    00001781: 	cmpl	%ecx, %eax
    00001783: 	jl	.Ltmp1784 # Offset: 6019
.Ltmp1781:
    00001789: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001790: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00001797: 	subq	$0x20, %rax
    0000179b: 	movq	%rsi, (%rsp)
    0000179f: 	cmpq	%rax, %rsi
    000017a2: 	je	.Ltmp1785 # Offset: 6050
    000017a8: 	leaq	0x10(%rsi), %rdi
    000017ac: 	movq	%rdi, (%rsi)
    000017af: 	movq	0x90(%rsp), %rcx
    000017b7: 	movq	0x98(%rsp), %rsi
    000017bf: 	movq	%rcx, %rax
    000017c2: 	movq	%rcx, 0x28(%rsp)
    000017c7: 	addq	%rsi, %rax
    000017ca: 	movq	%rsi, 0x10(%rsp)
    000017cf: 	je	.Ltmp1786 # Offset: 6095
    000017d1: 	testq	%rcx, %rcx
    000017d4: 	je	.Ltmp1787 # Offset: 6100
.Ltmp1786:
    000017da: 	movq	0x10(%rsp), %rax
    000017df: 	movq	%rax, 0x30(%rsp)
    000017e4: 	cmpq	$0xf, %rax
    000017e8: 	ja	.Ltmp1788 # Offset: 6120
    000017ee: 	cmpq	$0x1, 0x10(%rsp)
    000017f4: 	jne	.Ltmp1789 # Offset: 6132
    000017fa: 	movq	0x28(%rsp), %rax
    000017ff: 	movq	(%rsp), %rcx
    00001803: 	movzbl	(%rax), %eax
    00001806: 	movb	%al, 0x10(%rcx)
.Ltmp1918:
    00001809: 	movq	0x10(%rsp), %rax
    0000180e: 	movq	(%rsp), %rsi
    00001812: 	movq	%rax, 0x8(%rsi)
    00001816: 	movb	$0x0, (%rdi,%rax)
    0000181a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001821: 	addq	$0x20, %rax
    00001825: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1909:
    0000182c: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001833: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000183a: 	je	.Ltmp1790 # Offset: 6202
.Ltmp1908:
    00001840: 	movq	-0x20(%rax), %rdi
    00001844: 	movq	%rdi, (%rsp)
    00001848: 	callq	clock@PLT # Offset: 6216
    0000184d: 	movq	(%rsp), %rdi
    00001851: 	pxor	%xmm0, %xmm0
    00001855: 	movq	%rax, end_time(%rip)
    0000185c: 	subq	start_time(%rip), %rax
    00001863: 	cvtsi2sd	%rax, %xmm0
    00001868: 	divsd	DATAat0x23450(%rip), %xmm0
    00001870: 	callq	_Z13record_resultdPKc # Offset: 6256
    00001875: 	movq	0x90(%rsp), %rdi
    0000187d: 	cmpq	%r13, %rdi
    00001880: 	je	.Ltmp1791 # Offset: 6272
    00001882: 	movq	0xa0(%rsp), %rax
    0000188a: 	leaq	0x1(%rax), %rsi
    0000188e: 	callq	_ZdlPvm@PLT # Offset: 6286
.Ltmp1791:
    00001893: 	leaq	DATAat0x23373(%rip), %rdx
    0000189a: 	movq	%r14, %rsi
    0000189d: 	movq	%r12, %rdi
    000018a0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6304
    000018a5: 	callq	clock@PLT # Offset: 6309
    000018aa: 	movl	iterations(%rip), %edx
    000018b0: 	movq	%rax, start_time(%rip)
    000018b7: 	testl	%edx, %edx
    000018b9: 	jle	.Ltmp1792 # Offset: 6329
    000018bf: 	movl	$0x0, (%rsp)
    000018c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1795:
    000018d0: 	movq	%rbp, %rax
    000018d3: 	pxor	%xmm2, %xmm2
    000018d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1793:
    000018e0: 	movdqa	(%rax), %xmm1
    000018e4: 	addq	$0x10, %rax
    000018e8: 	movdqa	%xmm1, %xmm0
    000018ec: 	pmulhw	DATAat0x23860(%rip), %xmm0
    000018f4: 	paddw	%xmm1, %xmm0
    000018f8: 	psraw	$0x6, %xmm0
    000018fd: 	psraw	$0xf, %xmm1
    00001902: 	psubw	%xmm1, %xmm0
    00001906: 	paddw	%xmm0, %xmm2
    0000190a: 	cmpq	%rax, %rbx
    0000190d: 	jne	.Ltmp1793 # Offset: 6413
    0000190f: 	cvttsd2si	init_value(%rip), %ecx
    00001917: 	movdqa	%xmm2, %xmm0
    0000191b: 	psrldq	$0x8, %xmm0
    00001920: 	paddw	%xmm0, %xmm2
    00001924: 	movdqa	%xmm2, %xmm0
    00001928: 	movswl	%cx, %eax
    0000192b: 	psrldq	$0x4, %xmm0
    00001930: 	imull	$0xffff8889, %eax, %eax
    00001936: 	paddw	%xmm0, %xmm2
    0000193a: 	movdqa	%xmm2, %xmm0
    0000193e: 	psrldq	$0x2, %xmm0
    00001943: 	shrl	$0x10, %eax
    00001946: 	paddw	%xmm0, %xmm2
    0000194a: 	addl	%ecx, %eax
    0000194c: 	sarw	$0xf, %cx
    00001950: 	sarw	$0x6, %ax
    00001954: 	subl	%ecx, %eax
    00001956: 	pextrw	$0x0, %xmm2, %ecx
    0000195b: 	imulw	$0x1f40, %ax, %ax
    00001960: 	cmpw	%cx, %ax
    00001963: 	je	.Ltmp1794 # Offset: 6499
    00001965: 	movl	current_test(%rip), %edx
    0000196b: 	leaq	DATAat0x231d2(%rip), %rsi
    00001972: 	movl	$0x1, %edi
    00001977: 	xorl	%eax, %eax
    00001979: 	callq	__printf_chk@PLT # Offset: 6521
    0000197e: 	movl	iterations(%rip), %edx
.Ltmp1794:
    00001984: 	addl	$0x1, (%rsp)
    00001988: 	movl	(%rsp), %eax
    0000198b: 	cmpl	%edx, %eax
    0000198d: 	jl	.Ltmp1795 # Offset: 6541
.Ltmp1792:
    00001993: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000199a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    000019a1: 	subq	$0x20, %rax
    000019a5: 	movq	%rsi, (%rsp)
    000019a9: 	cmpq	%rax, %rsi
    000019ac: 	je	.Ltmp1796 # Offset: 6572
    000019b2: 	leaq	0x10(%rsi), %rdi
    000019b6: 	movq	0x98(%rsp), %rcx
    000019be: 	movq	%rdi, (%rsi)
    000019c1: 	movq	0x90(%rsp), %rsi
    000019c9: 	movq	%rcx, 0x10(%rsp)
    000019ce: 	movq	%rsi, %rax
    000019d1: 	movq	%rsi, 0x28(%rsp)
    000019d6: 	addq	%rcx, %rax
    000019d9: 	je	.Ltmp1797 # Offset: 6617
    000019db: 	testq	%rsi, %rsi
    000019de: 	je	.Ltmp1798 # Offset: 6622
.Ltmp1797:
    000019e4: 	movq	0x10(%rsp), %rax
    000019e9: 	movq	%rax, 0x30(%rsp)
    000019ee: 	cmpq	$0xf, %rax
    000019f2: 	ja	.Ltmp1799 # Offset: 6642
    000019f8: 	cmpq	$0x1, 0x10(%rsp)
    000019fe: 	jne	.Ltmp1800 # Offset: 6654
    00001a04: 	movq	0x28(%rsp), %rax
    00001a09: 	movq	(%rsp), %rsi
    00001a0d: 	movzbl	(%rax), %eax
    00001a10: 	movb	%al, 0x10(%rsi)
.Ltmp1920:
    00001a13: 	movq	0x10(%rsp), %rax
    00001a18: 	movq	(%rsp), %rsi
    00001a1c: 	movq	%rax, 0x8(%rsi)
    00001a20: 	movb	$0x0, (%rdi,%rax)
    00001a24: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001a2b: 	addq	$0x20, %rax
    00001a2f: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1907:
    00001a36: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001a3d: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001a44: 	je	.Ltmp1801 # Offset: 6724
.Ltmp1906:
    00001a4a: 	movq	-0x20(%rax), %rdi
    00001a4e: 	movq	%rdi, (%rsp)
    00001a52: 	callq	clock@PLT # Offset: 6738
    00001a57: 	movq	(%rsp), %rdi
    00001a5b: 	pxor	%xmm0, %xmm0
    00001a5f: 	movq	%rax, end_time(%rip)
    00001a66: 	subq	start_time(%rip), %rax
    00001a6d: 	cvtsi2sd	%rax, %xmm0
    00001a72: 	divsd	DATAat0x23450(%rip), %xmm0
    00001a7a: 	callq	_Z13record_resultdPKc # Offset: 6778
    00001a7f: 	movq	0x90(%rsp), %rdi
    00001a87: 	cmpq	%r13, %rdi
    00001a8a: 	je	.Ltmp1802 # Offset: 6794
    00001a8c: 	movq	0xa0(%rsp), %rax
    00001a94: 	leaq	0x1(%rax), %rsi
    00001a98: 	callq	_ZdlPvm@PLT # Offset: 6808
.Ltmp1802:
    00001a9d: 	leaq	DATAat0x2338e(%rip), %rdx
    00001aa4: 	movq	%r14, %rsi
    00001aa7: 	movq	%r12, %rdi
    00001aaa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6826
    00001aaf: 	callq	clock@PLT # Offset: 6831
    00001ab4: 	movl	iterations(%rip), %ecx
    00001aba: 	movq	%rax, start_time(%rip)
    00001ac1: 	testl	%ecx, %ecx
    00001ac3: 	jle	.Ltmp1803 # Offset: 6851
    00001ac9: 	movl	$0x0, (%rsp)
.Ltmp1806:
    00001ad0: 	movq	%rbp, %rax
    00001ad3: 	pxor	%xmm0, %xmm0
    00001ad7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1804:
    00001ae0: 	paddw	DATAat0x23870(%rip), %xmm0
    00001ae8: 	addq	$0x10, %rax
    00001aec: 	paddw	-0x10(%rax), %xmm0
    00001af1: 	cmpq	%rbx, %rax
    00001af4: 	jne	.Ltmp1804 # Offset: 6900
    00001af6: 	movdqa	%xmm0, %xmm1
    00001afa: 	cvttsd2si	init_value(%rip), %eax
    00001b02: 	psrldq	$0x8, %xmm1
    00001b07: 	paddw	%xmm1, %xmm0
    00001b0b: 	movdqa	%xmm0, %xmm1
    00001b0f: 	psrldq	$0x4, %xmm1
    00001b14: 	addl	$0x2, %eax
    00001b17: 	imulw	$0x1f40, %ax, %ax
    00001b1c: 	paddw	%xmm1, %xmm0
    00001b20: 	movdqa	%xmm0, %xmm1
    00001b24: 	psrldq	$0x2, %xmm1
    00001b29: 	paddw	%xmm1, %xmm0
    00001b2d: 	pextrw	$0x0, %xmm0, %edx
    00001b32: 	cmpw	%dx, %ax
    00001b35: 	je	.Ltmp1805 # Offset: 6965
    00001b37: 	movl	current_test(%rip), %edx
    00001b3d: 	leaq	DATAat0x231d2(%rip), %rsi
    00001b44: 	movl	$0x1, %edi
    00001b49: 	xorl	%eax, %eax
    00001b4b: 	callq	__printf_chk@PLT # Offset: 6987
    00001b50: 	movl	iterations(%rip), %ecx
.Ltmp1805:
    00001b56: 	addl	$0x1, (%rsp)
    00001b5a: 	movl	(%rsp), %eax
    00001b5d: 	cmpl	%ecx, %eax
    00001b5f: 	jl	.Ltmp1806 # Offset: 7007
.Ltmp1803:
    00001b65: 	movq	%r12, %rsi
    00001b68: 	movq	%r15, %rdi
    00001b6b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7019
    00001b70: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001b77: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001b7e: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001b85: 	je	.Ltmp1807 # Offset: 7045
.Ltmp1905:
    00001b8b: 	movq	-0x20(%rax), %rdi
    00001b8f: 	movq	%rdi, (%rsp)
    00001b93: 	callq	clock@PLT # Offset: 7059
    00001b98: 	movq	(%rsp), %rdi
    00001b9c: 	pxor	%xmm0, %xmm0
    00001ba0: 	movq	%rax, end_time(%rip)
    00001ba7: 	subq	start_time(%rip), %rax
    00001bae: 	cvtsi2sd	%rax, %xmm0
    00001bb3: 	divsd	DATAat0x23450(%rip), %xmm0
    00001bbb: 	callq	_Z13record_resultdPKc # Offset: 7099
    00001bc0: 	movq	0x90(%rsp), %rdi
    00001bc8: 	cmpq	%r13, %rdi
    00001bcb: 	je	.Ltmp1808 # Offset: 7115
    00001bcd: 	movq	0xa0(%rsp), %rax
    00001bd5: 	leaq	0x1(%rax), %rsi
    00001bd9: 	callq	_ZdlPvm@PLT # Offset: 7129
.Ltmp1808:
    00001bde: 	leaq	DATAat0x233a9(%rip), %rdx
    00001be5: 	movq	%r14, %rsi
    00001be8: 	movq	%r12, %rdi
    00001beb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7147
    00001bf0: 	callq	clock@PLT # Offset: 7152
    00001bf5: 	movl	iterations(%rip), %ecx
    00001bfb: 	movl	$0x0, (%rsp)
    00001c02: 	movq	%rax, start_time(%rip)
    00001c09: 	testl	%ecx, %ecx
    00001c0b: 	jle	.Ltmp1809 # Offset: 7179
    00001c11: 	nopl	(%rax) # Size: 7
.Ltmp1812:
    00001c18: 	movq	%rbp, %rax
    00001c1b: 	pxor	%xmm0, %xmm0
    00001c1f: 	nop # Size: 1
.Ltmp1810:
    00001c20: 	paddw	(%rax), %xmm0
    00001c24: 	addq	$0x10, %rax
    00001c28: 	cmpq	%rbx, %rax
    00001c2b: 	jne	.Ltmp1810 # Offset: 7211
    00001c2d: 	movdqa	%xmm0, %xmm1
    00001c31: 	cvttsd2si	init_value(%rip), %eax
    00001c39: 	psrldq	$0x8, %xmm1
    00001c3e: 	paddw	%xmm1, %xmm0
    00001c42: 	movdqa	%xmm0, %xmm1
    00001c46: 	psrldq	$0x4, %xmm1
    00001c4b: 	imulw	$0x1f40, %ax, %ax
    00001c50: 	paddw	%xmm1, %xmm0
    00001c54: 	movdqa	%xmm0, %xmm1
    00001c58: 	psrldq	$0x2, %xmm1
    00001c5d: 	paddw	%xmm1, %xmm0
    00001c61: 	pextrw	$0x0, %xmm0, %edx
    00001c66: 	cmpw	%dx, %ax
    00001c69: 	je	.Ltmp1811 # Offset: 7273
    00001c6b: 	movl	current_test(%rip), %edx
    00001c71: 	leaq	DATAat0x231d2(%rip), %rsi
    00001c78: 	movl	$0x1, %edi
    00001c7d: 	xorl	%eax, %eax
    00001c7f: 	callq	__printf_chk@PLT # Offset: 7295
    00001c84: 	movl	iterations(%rip), %ecx
.Ltmp1811:
    00001c8a: 	addl	$0x1, (%rsp)
    00001c8e: 	movl	(%rsp), %eax
    00001c91: 	cmpl	%ecx, %eax
    00001c93: 	jl	.Ltmp1812 # Offset: 7315
.Ltmp1809:
    00001c99: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001ca0: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00001ca7: 	subq	$0x20, %rax
    00001cab: 	movq	%rsi, (%rsp)
    00001caf: 	cmpq	%rax, %rsi
    00001cb2: 	je	.Ltmp1813 # Offset: 7346
    00001cb8: 	leaq	0x10(%rsi), %rdi
    00001cbc: 	movq	%rdi, (%rsi)
    00001cbf: 	movq	0x90(%rsp), %rcx
    00001cc7: 	movq	0x98(%rsp), %rsi
    00001ccf: 	movq	%rcx, %rax
    00001cd2: 	movq	%rcx, 0x28(%rsp)
    00001cd7: 	addq	%rsi, %rax
    00001cda: 	movq	%rsi, 0x10(%rsp)
    00001cdf: 	je	.Ltmp1814 # Offset: 7391
    00001ce1: 	testq	%rcx, %rcx
    00001ce4: 	je	.Ltmp1815 # Offset: 7396
.Ltmp1814:
    00001cea: 	movq	0x10(%rsp), %rax
    00001cef: 	movq	%rax, 0x30(%rsp)
    00001cf4: 	cmpq	$0xf, %rax
    00001cf8: 	ja	.Ltmp1816 # Offset: 7416
    00001cfe: 	cmpq	$0x1, 0x10(%rsp)
    00001d04: 	jne	.Ltmp1817 # Offset: 7428
    00001d0a: 	movq	0x28(%rsp), %rax
    00001d0f: 	movq	(%rsp), %rcx
    00001d13: 	movzbl	(%rax), %eax
    00001d16: 	movb	%al, 0x10(%rcx)
.Ltmp1929:
    00001d19: 	movq	0x10(%rsp), %rax
    00001d1e: 	movq	(%rsp), %rsi
    00001d22: 	movq	%rax, 0x8(%rsi)
    00001d26: 	movb	$0x0, (%rdi,%rax)
    00001d2a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001d31: 	addq	$0x20, %rax
    00001d35: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1904:
    00001d3c: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001d43: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001d4a: 	je	.Ltmp1818 # Offset: 7498
.Ltmp1903:
    00001d50: 	movq	-0x20(%rax), %rdi
    00001d54: 	movq	%rdi, (%rsp)
    00001d58: 	callq	clock@PLT # Offset: 7512
    00001d5d: 	movq	(%rsp), %rdi
    00001d61: 	pxor	%xmm0, %xmm0
    00001d65: 	movq	%rax, end_time(%rip)
    00001d6c: 	subq	start_time(%rip), %rax
    00001d73: 	cvtsi2sd	%rax, %xmm0
    00001d78: 	divsd	DATAat0x23450(%rip), %xmm0
    00001d80: 	callq	_Z13record_resultdPKc # Offset: 7552
    00001d85: 	movq	0x90(%rsp), %rdi
    00001d8d: 	cmpq	%r13, %rdi
    00001d90: 	je	.Ltmp1819 # Offset: 7568
    00001d92: 	movq	0xa0(%rsp), %rax
    00001d9a: 	leaq	0x1(%rax), %rsi
    00001d9e: 	callq	_ZdlPvm@PLT # Offset: 7582
.Ltmp1819:
    00001da3: 	leaq	DATAat0x23406(%rip), %rdx
    00001daa: 	movq	%r14, %rsi
    00001dad: 	movq	%r12, %rdi
    00001db0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7600
    00001db5: 	callq	clock@PLT # Offset: 7605
    00001dba: 	movl	iterations(%rip), %ecx
    00001dc0: 	movq	%rax, start_time(%rip)
    00001dc7: 	testl	%ecx, %ecx
    00001dc9: 	jle	.Ltmp1820 # Offset: 7625
    00001dcf: 	movdqa	DATAat0x23820(%rip), %xmm7
    00001dd7: 	movl	$0x0, 0x10(%rsp)
    00001ddf: 	movaps	%xmm7, (%rsp)
    00001de3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1823:
    00001de8: 	movq	%rbp, %rax
    00001deb: 	pxor	%xmm0, %xmm0
    00001def: 	nop # Size: 1
.Ltmp1821:
    00001df0: 	movdqa	(%rsp), %xmm1
    00001df5: 	pand	(%rax), %xmm1
    00001df9: 	addq	$0x10, %rax
    00001dfd: 	paddw	%xmm1, %xmm0
    00001e01: 	cmpq	%rbx, %rax
    00001e04: 	jne	.Ltmp1821 # Offset: 7684
    00001e06: 	movdqa	%xmm0, %xmm1
    00001e0a: 	cvttsd2si	init_value(%rip), %eax
    00001e12: 	psrldq	$0x8, %xmm1
    00001e17: 	paddw	%xmm1, %xmm0
    00001e1b: 	movdqa	%xmm0, %xmm1
    00001e1f: 	psrldq	$0x4, %xmm1
    00001e24: 	andl	$0xa, %eax
    00001e27: 	imulw	$0x1f40, %ax, %ax
    00001e2c: 	paddw	%xmm1, %xmm0
    00001e30: 	movdqa	%xmm0, %xmm1
    00001e34: 	psrldq	$0x2, %xmm1
    00001e39: 	paddw	%xmm1, %xmm0
    00001e3d: 	pextrw	$0x0, %xmm0, %edx
    00001e42: 	cmpw	%dx, %ax
    00001e45: 	je	.Ltmp1822 # Offset: 7749
    00001e47: 	movl	current_test(%rip), %edx
    00001e4d: 	leaq	DATAat0x231d2(%rip), %rsi
    00001e54: 	movl	$0x1, %edi
    00001e59: 	xorl	%eax, %eax
    00001e5b: 	callq	__printf_chk@PLT # Offset: 7771
    00001e60: 	movl	iterations(%rip), %ecx
.Ltmp1822:
    00001e66: 	addl	$0x1, 0x10(%rsp)
    00001e6b: 	movl	0x10(%rsp), %eax
    00001e6f: 	cmpl	%ecx, %eax
    00001e71: 	jl	.Ltmp1823 # Offset: 7793
.Ltmp1820:
    00001e77: 	movq	%r12, %rsi
    00001e7a: 	movq	%r15, %rdi
    00001e7d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7805
    00001e82: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001e89: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001e90: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001e97: 	je	.Ltmp1824 # Offset: 7831
.Ltmp1902:
    00001e9d: 	movq	-0x20(%rax), %rdi
    00001ea1: 	movq	%rdi, (%rsp)
    00001ea5: 	callq	clock@PLT # Offset: 7845
    00001eaa: 	movq	(%rsp), %rdi
    00001eae: 	pxor	%xmm0, %xmm0
    00001eb2: 	movq	%rax, end_time(%rip)
    00001eb9: 	subq	start_time(%rip), %rax
    00001ec0: 	cvtsi2sd	%rax, %xmm0
    00001ec5: 	divsd	DATAat0x23450(%rip), %xmm0
    00001ecd: 	callq	_Z13record_resultdPKc # Offset: 7885
    00001ed2: 	movq	0x90(%rsp), %rdi
    00001eda: 	cmpq	%r13, %rdi
    00001edd: 	je	.Ltmp1825 # Offset: 7901
    00001edf: 	movq	0xa0(%rsp), %rax
    00001ee7: 	leaq	0x1(%rax), %rsi
    00001eeb: 	callq	_ZdlPvm@PLT # Offset: 7915
.Ltmp1825:
    00001ef0: 	leaq	DATAat0x233fd(%rip), %rdx
    00001ef7: 	movq	%r14, %rsi
    00001efa: 	movq	%r12, %rdi
    00001efd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7933
    00001f02: 	callq	clock@PLT # Offset: 7938
    00001f07: 	movl	iterations(%rip), %ecx
    00001f0d: 	movq	%rax, start_time(%rip)
    00001f14: 	testl	%ecx, %ecx
    00001f16: 	jle	.Ltmp1826 # Offset: 7958
    00001f1c: 	movl	$0x0, (%rsp)
    00001f23: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1829:
    00001f28: 	movq	%rbp, %rax
    00001f2b: 	pxor	%xmm0, %xmm0
    00001f2f: 	nop # Size: 1
.Ltmp1827:
    00001f30: 	movdqa	DATAat0x23880(%rip), %xmm1
    00001f38: 	pand	(%rax), %xmm1
    00001f3c: 	addq	$0x10, %rax
    00001f40: 	paddw	%xmm1, %xmm0
    00001f44: 	cmpq	%rbx, %rax
    00001f47: 	jne	.Ltmp1827 # Offset: 8007
    00001f49: 	movdqa	%xmm0, %xmm1
    00001f4d: 	cvttsd2si	init_value(%rip), %eax
    00001f55: 	psrldq	$0x8, %xmm1
    00001f5a: 	paddw	%xmm1, %xmm0
    00001f5e: 	movdqa	%xmm0, %xmm1
    00001f62: 	psrldq	$0x4, %xmm1
    00001f67: 	andl	$0xe, %eax
    00001f6a: 	imulw	$0x1f40, %ax, %ax
    00001f6f: 	paddw	%xmm1, %xmm0
    00001f73: 	movdqa	%xmm0, %xmm1
    00001f77: 	psrldq	$0x2, %xmm1
    00001f7c: 	paddw	%xmm1, %xmm0
    00001f80: 	pextrw	$0x0, %xmm0, %edx
    00001f85: 	cmpw	%ax, %dx
    00001f88: 	je	.Ltmp1828 # Offset: 8072
    00001f8a: 	movl	current_test(%rip), %edx
    00001f90: 	leaq	DATAat0x231d2(%rip), %rsi
    00001f97: 	movl	$0x1, %edi
    00001f9c: 	xorl	%eax, %eax
    00001f9e: 	callq	__printf_chk@PLT # Offset: 8094
    00001fa3: 	movl	iterations(%rip), %ecx
.Ltmp1828:
    00001fa9: 	addl	$0x1, (%rsp)
    00001fad: 	movl	(%rsp), %eax
    00001fb0: 	cmpl	%ecx, %eax
    00001fb2: 	jl	.Ltmp1829 # Offset: 8114
.Ltmp1826:
    00001fb8: 	movq	%r12, %rsi
    00001fbb: 	movq	%r15, %rdi
    00001fbe: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8126
    00001fc3: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001fca: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001fd1: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001fd8: 	je	.Ltmp1830 # Offset: 8152
.Ltmp1901:
    00001fde: 	movq	-0x20(%rax), %rdi
    00001fe2: 	movq	%rdi, (%rsp)
    00001fe6: 	callq	clock@PLT # Offset: 8166
    00001feb: 	movq	(%rsp), %rdi
    00001fef: 	pxor	%xmm0, %xmm0
    00001ff3: 	movq	%rax, end_time(%rip)
    00001ffa: 	subq	start_time(%rip), %rax
    00002001: 	cvtsi2sd	%rax, %xmm0
    00002006: 	divsd	DATAat0x23450(%rip), %xmm0
    0000200e: 	callq	_Z13record_resultdPKc # Offset: 8206
    00002013: 	movq	0x90(%rsp), %rdi
    0000201b: 	cmpq	%r13, %rdi
    0000201e: 	je	.Ltmp1831 # Offset: 8222
    00002020: 	movq	0xa0(%rsp), %rax
    00002028: 	leaq	0x1(%rax), %rsi
    0000202c: 	callq	_ZdlPvm@PLT # Offset: 8236
.Ltmp1831:
    00002031: 	leaq	DATAat0x2341d(%rip), %rdx
    00002038: 	movq	%r14, %rsi
    0000203b: 	movq	%r12, %rdi
    0000203e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8254
    00002043: 	callq	clock@PLT # Offset: 8259
    00002048: 	movl	iterations(%rip), %ecx
    0000204e: 	movq	%rax, start_time(%rip)
    00002055: 	testl	%ecx, %ecx
    00002057: 	jle	.Ltmp1832 # Offset: 8279
    0000205d: 	movdqa	DATAat0x23820(%rip), %xmm7
    00002065: 	movl	$0x0, 0x10(%rsp)
    0000206d: 	movaps	%xmm7, (%rsp)
    00002071: 	nopl	(%rax) # Size: 7
.Ltmp1835:
    00002078: 	movq	%rbp, %rax
    0000207b: 	pxor	%xmm0, %xmm0
    0000207f: 	nop # Size: 1
.Ltmp1833:
    00002080: 	movdqa	(%rsp), %xmm1
    00002085: 	por	(%rax), %xmm1
    00002089: 	addq	$0x10, %rax
    0000208d: 	paddw	%xmm1, %xmm0
    00002091: 	cmpq	%rax, %rbx
    00002094: 	jne	.Ltmp1833 # Offset: 8340
    00002096: 	movdqa	%xmm0, %xmm1
    0000209a: 	cvttsd2si	init_value(%rip), %eax
    000020a2: 	psrldq	$0x8, %xmm1
    000020a7: 	paddw	%xmm1, %xmm0
    000020ab: 	movdqa	%xmm0, %xmm1
    000020af: 	psrldq	$0x4, %xmm1
    000020b4: 	orl	$0xa, %eax
    000020b7: 	imulw	$0x1f40, %ax, %ax
    000020bc: 	paddw	%xmm1, %xmm0
    000020c0: 	movdqa	%xmm0, %xmm1
    000020c4: 	psrldq	$0x2, %xmm1
    000020c9: 	paddw	%xmm1, %xmm0
    000020cd: 	pextrw	$0x0, %xmm0, %edx
    000020d2: 	cmpw	%ax, %dx
    000020d5: 	je	.Ltmp1834 # Offset: 8405
    000020d7: 	movl	current_test(%rip), %edx
    000020dd: 	leaq	DATAat0x231d2(%rip), %rsi
    000020e4: 	movl	$0x1, %edi
    000020e9: 	xorl	%eax, %eax
    000020eb: 	callq	__printf_chk@PLT # Offset: 8427
    000020f0: 	movl	iterations(%rip), %ecx
.Ltmp1834:
    000020f6: 	addl	$0x1, 0x10(%rsp)
    000020fb: 	movl	0x10(%rsp), %eax
    000020ff: 	cmpl	%ecx, %eax
    00002101: 	jl	.Ltmp1835 # Offset: 8449
.Ltmp1832:
    00002107: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000210e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00002115: 	subq	$0x20, %rax
    00002119: 	movq	%rsi, (%rsp)
    0000211d: 	cmpq	%rax, %rsi
    00002120: 	je	.Ltmp1836 # Offset: 8480
    00002126: 	leaq	0x10(%rsi), %rdi
    0000212a: 	movq	0x98(%rsp), %rcx
    00002132: 	movq	%rdi, (%rsi)
    00002135: 	movq	0x90(%rsp), %rsi
    0000213d: 	movq	%rcx, 0x10(%rsp)
    00002142: 	movq	%rsi, %rax
    00002145: 	movq	%rsi, 0x28(%rsp)
    0000214a: 	addq	%rcx, %rax
    0000214d: 	je	.Ltmp1837 # Offset: 8525
    0000214f: 	testq	%rsi, %rsi
    00002152: 	je	.Ltmp1838 # Offset: 8530
.Ltmp1837:
    00002158: 	movq	0x10(%rsp), %rax
    0000215d: 	movq	%rax, 0x30(%rsp)
    00002162: 	cmpq	$0xf, %rax
    00002166: 	ja	.Ltmp1839 # Offset: 8550
    0000216c: 	cmpq	$0x1, 0x10(%rsp)
    00002172: 	jne	.Ltmp1840 # Offset: 8562
    00002178: 	movq	0x28(%rsp), %rax
    0000217d: 	movq	(%rsp), %rsi
    00002181: 	movzbl	(%rax), %eax
    00002184: 	movb	%al, 0x10(%rsi)
.Ltmp1925:
    00002187: 	movq	0x10(%rsp), %rax
    0000218c: 	movq	(%rsp), %rsi
    00002190: 	movq	%rax, 0x8(%rsi)
    00002194: 	movb	$0x0, (%rdi,%rax)
    00002198: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000219f: 	addq	$0x20, %rax
    000021a3: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1900:
    000021aa: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000021b1: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000021b8: 	je	.Ltmp1841 # Offset: 8632
.Ltmp1899:
    000021be: 	movq	-0x20(%rax), %rdi
    000021c2: 	movq	%rdi, (%rsp)
    000021c6: 	callq	clock@PLT # Offset: 8646
    000021cb: 	movq	(%rsp), %rdi
    000021cf: 	pxor	%xmm0, %xmm0
    000021d3: 	movq	%rax, end_time(%rip)
    000021da: 	subq	start_time(%rip), %rax
    000021e1: 	cvtsi2sd	%rax, %xmm0
    000021e6: 	divsd	DATAat0x23450(%rip), %xmm0
    000021ee: 	callq	_Z13record_resultdPKc # Offset: 8686
    000021f3: 	movq	0x90(%rsp), %rdi
    000021fb: 	cmpq	%r13, %rdi
    000021fe: 	je	.Ltmp1842 # Offset: 8702
    00002200: 	movq	0xa0(%rsp), %rax
    00002208: 	leaq	0x1(%rax), %rsi
    0000220c: 	callq	_ZdlPvm@PLT # Offset: 8716
.Ltmp1842:
    00002211: 	leaq	DATAat0x23414(%rip), %rdx
    00002218: 	movq	%r14, %rsi
    0000221b: 	movq	%r12, %rdi
    0000221e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8734
    00002223: 	callq	clock@PLT # Offset: 8739
    00002228: 	movl	iterations(%rip), %ecx
    0000222e: 	movq	%rax, start_time(%rip)
    00002235: 	testl	%ecx, %ecx
    00002237: 	jle	.Ltmp1843 # Offset: 8759
    0000223d: 	movl	$0x0, (%rsp)
    00002244: 	nopl	(%rax) # Size: 4
.Ltmp1846:
    00002248: 	movq	%rbp, %rax
    0000224b: 	pxor	%xmm0, %xmm0
    0000224f: 	nop # Size: 1
.Ltmp1844:
    00002250: 	movdqa	DATAat0x23890(%rip), %xmm1
    00002258: 	por	(%rax), %xmm1
    0000225c: 	addq	$0x10, %rax
    00002260: 	paddw	%xmm1, %xmm0
    00002264: 	cmpq	%rbx, %rax
    00002267: 	jne	.Ltmp1844 # Offset: 8807
    00002269: 	movdqa	%xmm0, %xmm1
    0000226d: 	cvttsd2si	init_value(%rip), %eax
    00002275: 	psrldq	$0x8, %xmm1
    0000227a: 	paddw	%xmm1, %xmm0
    0000227e: 	movdqa	%xmm0, %xmm1
    00002282: 	psrldq	$0x4, %xmm1
    00002287: 	orl	$0x3f, %eax
    0000228a: 	imulw	$0x1f40, %ax, %ax
    0000228f: 	paddw	%xmm1, %xmm0
    00002293: 	movdqa	%xmm0, %xmm1
    00002297: 	psrldq	$0x2, %xmm1
    0000229c: 	paddw	%xmm1, %xmm0
    000022a0: 	pextrw	$0x0, %xmm0, %edx
    000022a5: 	cmpw	%dx, %ax
    000022a8: 	je	.Ltmp1845 # Offset: 8872
    000022aa: 	movl	current_test(%rip), %edx
    000022b0: 	leaq	DATAat0x231d2(%rip), %rsi
    000022b7: 	movl	$0x1, %edi
    000022bc: 	xorl	%eax, %eax
    000022be: 	callq	__printf_chk@PLT # Offset: 8894
    000022c3: 	movl	iterations(%rip), %ecx
.Ltmp1845:
    000022c9: 	addl	$0x1, (%rsp)
    000022cd: 	movl	(%rsp), %eax
    000022d0: 	cmpl	%ecx, %eax
    000022d2: 	jl	.Ltmp1846 # Offset: 8914
.Ltmp1843:
    000022d8: 	movq	%r12, %rsi
    000022db: 	movq	%r15, %rdi
    000022de: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8926
    000022e3: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000022ea: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000022f1: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000022f8: 	je	.Ltmp1847 # Offset: 8952
.Ltmp1898:
    000022fe: 	movq	-0x20(%rax), %rdi
    00002302: 	movq	%rdi, (%rsp)
    00002306: 	callq	clock@PLT # Offset: 8966
    0000230b: 	movq	(%rsp), %rdi
    0000230f: 	pxor	%xmm0, %xmm0
    00002313: 	movq	%rax, end_time(%rip)
    0000231a: 	subq	start_time(%rip), %rax
    00002321: 	cvtsi2sd	%rax, %xmm0
    00002326: 	divsd	DATAat0x23450(%rip), %xmm0
    0000232e: 	callq	_Z13record_resultdPKc # Offset: 9006
    00002333: 	movq	0x90(%rsp), %rdi
    0000233b: 	cmpq	%r13, %rdi
    0000233e: 	je	.Ltmp1848 # Offset: 9022
    00002340: 	movq	0xa0(%rsp), %rax
    00002348: 	leaq	0x1(%rax), %rsi
    0000234c: 	callq	_ZdlPvm@PLT # Offset: 9036
.Ltmp1848:
    00002351: 	leaq	DATAat0x23433(%rip), %rdx
    00002358: 	movq	%r14, %rsi
    0000235b: 	movq	%r12, %rdi
    0000235e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9054
    00002363: 	callq	clock@PLT # Offset: 9059
    00002368: 	movl	iterations(%rip), %ecx
    0000236e: 	movq	%rax, start_time(%rip)
    00002375: 	testl	%ecx, %ecx
    00002377: 	jle	.Ltmp1849 # Offset: 9079
    0000237d: 	movdqa	DATAat0x23820(%rip), %xmm7
    00002385: 	movl	$0x0, 0x10(%rsp)
    0000238d: 	movaps	%xmm7, (%rsp)
    00002391: 	nopl	(%rax) # Size: 7
.Ltmp1852:
    00002398: 	movq	%rbp, %rax
    0000239b: 	pxor	%xmm0, %xmm0
    0000239f: 	nop # Size: 1
.Ltmp1850:
    000023a0: 	movdqa	(%rsp), %xmm1
    000023a5: 	pxor	(%rax), %xmm1
    000023a9: 	addq	$0x10, %rax
    000023ad: 	paddw	%xmm1, %xmm0
    000023b1: 	cmpq	%rbx, %rax
    000023b4: 	jne	.Ltmp1850 # Offset: 9140
    000023b6: 	movdqa	%xmm0, %xmm1
    000023ba: 	cvttsd2si	init_value(%rip), %eax
    000023c2: 	psrldq	$0x8, %xmm1
    000023c7: 	paddw	%xmm1, %xmm0
    000023cb: 	movdqa	%xmm0, %xmm1
    000023cf: 	psrldq	$0x4, %xmm1
    000023d4: 	xorl	$0xa, %eax
    000023d7: 	imulw	$0x1f40, %ax, %ax
    000023dc: 	paddw	%xmm1, %xmm0
    000023e0: 	movdqa	%xmm0, %xmm1
    000023e4: 	psrldq	$0x2, %xmm1
    000023e9: 	paddw	%xmm1, %xmm0
    000023ed: 	pextrw	$0x0, %xmm0, %edx
    000023f2: 	cmpw	%ax, %dx
    000023f5: 	je	.Ltmp1851 # Offset: 9205
    000023f7: 	movl	current_test(%rip), %edx
    000023fd: 	leaq	DATAat0x231d2(%rip), %rsi
    00002404: 	movl	$0x1, %edi
    00002409: 	xorl	%eax, %eax
    0000240b: 	callq	__printf_chk@PLT # Offset: 9227
    00002410: 	movl	iterations(%rip), %ecx
.Ltmp1851:
    00002416: 	addl	$0x1, 0x10(%rsp)
    0000241b: 	movl	0x10(%rsp), %eax
    0000241f: 	cmpl	%ecx, %eax
    00002421: 	jl	.Ltmp1852 # Offset: 9249
.Ltmp1849:
    00002427: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000242e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00002435: 	subq	$0x20, %rax
    00002439: 	movq	%rsi, (%rsp)
    0000243d: 	cmpq	%rax, %rsi
    00002440: 	je	.Ltmp1853 # Offset: 9280
    00002446: 	leaq	0x10(%rsi), %rdi
    0000244a: 	movq	%rdi, (%rsi)
    0000244d: 	movq	0x90(%rsp), %rcx
    00002455: 	movq	0x98(%rsp), %rsi
    0000245d: 	movq	%rcx, %rax
    00002460: 	movq	%rcx, 0x28(%rsp)
    00002465: 	addq	%rsi, %rax
    00002468: 	movq	%rsi, 0x10(%rsp)
    0000246d: 	je	.Ltmp1854 # Offset: 9325
    0000246f: 	testq	%rcx, %rcx
    00002472: 	je	.Ltmp1855 # Offset: 9330
.Ltmp1854:
    00002478: 	movq	0x10(%rsp), %rax
    0000247d: 	movq	%rax, 0x30(%rsp)
    00002482: 	cmpq	$0xf, %rax
    00002486: 	ja	.Ltmp1856 # Offset: 9350
    0000248c: 	cmpq	$0x1, 0x10(%rsp)
    00002492: 	jne	.Ltmp1857 # Offset: 9362
    00002498: 	movq	0x28(%rsp), %rax
    0000249d: 	movq	(%rsp), %rcx
    000024a1: 	movzbl	(%rax), %eax
    000024a4: 	movb	%al, 0x10(%rcx)
.Ltmp1931:
    000024a7: 	movq	0x10(%rsp), %rax
    000024ac: 	movq	(%rsp), %rsi
    000024b0: 	movq	%rax, 0x8(%rsi)
    000024b4: 	movb	$0x0, (%rdi,%rax)
    000024b8: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000024bf: 	addq	$0x20, %rax
    000024c3: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp1897:
    000024ca: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000024d1: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000024d8: 	je	.Ltmp1858 # Offset: 9432
.Ltmp1877:
    000024de: 	movq	-0x20(%rax), %rdi
    000024e2: 	movq	%rdi, (%rsp)
    000024e6: 	callq	clock@PLT # Offset: 9446
    000024eb: 	movq	(%rsp), %rdi
    000024ef: 	pxor	%xmm0, %xmm0
    000024f3: 	movq	%rax, end_time(%rip)
    000024fa: 	subq	start_time(%rip), %rax
    00002501: 	cvtsi2sd	%rax, %xmm0
    00002506: 	divsd	DATAat0x23450(%rip), %xmm0
    0000250e: 	callq	_Z13record_resultdPKc # Offset: 9486
    00002513: 	movq	0x90(%rsp), %rdi
    0000251b: 	cmpq	%r13, %rdi
    0000251e: 	je	.Ltmp1859 # Offset: 9502
    00002520: 	movq	0xa0(%rsp), %rax
    00002528: 	leaq	0x1(%rax), %rsi
    0000252c: 	callq	_ZdlPvm@PLT # Offset: 9516
.Ltmp1859:
    00002531: 	leaq	DATAat0x2342a(%rip), %rdx
    00002538: 	movq	%r14, %rsi
    0000253b: 	movq	%r12, %rdi
    0000253e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9534
    00002543: 	callq	clock@PLT # Offset: 9539
    00002548: 	movl	iterations(%rip), %ecx
    0000254e: 	movq	%rax, start_time(%rip)
    00002555: 	testl	%ecx, %ecx
    00002557: 	jle	.Ltmp1860 # Offset: 9559
    0000255d: 	movl	$0x0, (%rsp)
    00002564: 	nopl	(%rax) # Size: 4
.Ltmp1863:
    00002568: 	movq	%rbp, %rax
    0000256b: 	pxor	%xmm0, %xmm0
    0000256f: 	nop # Size: 1
.Ltmp1861:
    00002570: 	movdqa	DATAat0x238a0(%rip), %xmm1
    00002578: 	pxor	(%rax), %xmm1
    0000257c: 	addq	$0x10, %rax
    00002580: 	paddw	%xmm1, %xmm0
    00002584: 	cmpq	%rbx, %rax
    00002587: 	jne	.Ltmp1861 # Offset: 9607
    00002589: 	movdqa	%xmm0, %xmm1
    0000258d: 	cvttsd2si	init_value(%rip), %eax
    00002595: 	psrldq	$0x8, %xmm1
    0000259a: 	paddw	%xmm1, %xmm0
    0000259e: 	movdqa	%xmm0, %xmm1
    000025a2: 	psrldq	$0x4, %xmm1
    000025a7: 	xorl	$0x31, %eax
    000025aa: 	imulw	$0x1f40, %ax, %ax
    000025af: 	paddw	%xmm1, %xmm0
    000025b3: 	movdqa	%xmm0, %xmm1
    000025b7: 	psrldq	$0x2, %xmm1
    000025bc: 	paddw	%xmm1, %xmm0
    000025c0: 	pextrw	$0x0, %xmm0, %edx
    000025c5: 	cmpw	%dx, %ax
    000025c8: 	je	.Ltmp1862 # Offset: 9672
    000025ca: 	movl	current_test(%rip), %edx
    000025d0: 	leaq	DATAat0x231d2(%rip), %rsi
    000025d7: 	movl	$0x1, %edi
    000025dc: 	xorl	%eax, %eax
    000025de: 	callq	__printf_chk@PLT # Offset: 9694
    000025e3: 	movl	iterations(%rip), %ecx
.Ltmp1862:
    000025e9: 	addl	$0x1, (%rsp)
    000025ed: 	movl	(%rsp), %eax
    000025f0: 	cmpl	%ecx, %eax
    000025f2: 	jl	.Ltmp1863 # Offset: 9714
.Ltmp1860:
    000025f8: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000025ff: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00002606: 	subq	$0x20, %rax
    0000260a: 	cmpq	%rax, %rbx
    0000260d: 	je	.Ltmp1864 # Offset: 9741
    00002613: 	leaq	0x10(%rbx), %rdi
    00002617: 	movq	0x98(%rsp), %r15
    0000261f: 	movq	%rdi, (%rbx)
    00002622: 	movq	0x90(%rsp), %rbp
    0000262a: 	movq	%rbp, %rax
    0000262d: 	addq	%r15, %rax
    00002630: 	je	.Ltmp1865 # Offset: 9776
    00002632: 	testq	%rbp, %rbp
    00002635: 	je	.Ltmp1866 # Offset: 9781
.Ltmp1865:
    0000263b: 	movq	%r15, 0x30(%rsp)
    00002640: 	cmpq	$0xf, %r15
    00002644: 	ja	.Ltmp1867 # Offset: 9796
    0000264a: 	cmpq	$0x1, %r15
    0000264e: 	jne	.Ltmp1868 # Offset: 9806
    00002654: 	movzbl	(%rbp), %eax
    00002658: 	movb	%al, 0x10(%rbx)
.Ltmp1924:
    0000265b: 	movq	%r15, 0x8(%rbx)
    0000265f: 	movb	$0x0, (%rdi,%r15)
    00002664: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000266b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002672: 	addq	$0x20, %rax
    00002676: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000267d: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00002684: 	je	.Ltmp1869 # Offset: 9860
.Ltmp1876:
    0000268a: 	movq	-0x20(%rax), %rbp
    0000268e: 	callq	clock@PLT # Offset: 9870
    00002693: 	pxor	%xmm0, %xmm0
    00002697: 	movq	%rax, end_time(%rip)
    0000269e: 	movq	%rbp, %rdi
    000026a1: 	subq	start_time(%rip), %rax
    000026a8: 	cvtsi2sd	%rax, %xmm0
    000026ad: 	divsd	DATAat0x23450(%rip), %xmm0
    000026b5: 	callq	_Z13record_resultdPKc # Offset: 9909
    000026ba: 	movq	0x90(%rsp), %rdi
    000026c2: 	cmpq	%r13, %rdi
    000026c5: 	je	.Ltmp1870 # Offset: 9925
    000026c7: 	movq	0xa0(%rsp), %rax
    000026cf: 	leaq	0x1(%rax), %rsi
    000026d3: 	callq	_ZdlPvm@PLT # Offset: 9939
.Ltmp1870:
    000026d8: 	leaq	DATAat0x232ac(%rip), %rdx
    000026df: 	movq	%r14, %rsi
    000026e2: 	movq	%r12, %rdi
    000026e5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9957
    000026ea: 	movl	iterations(%rip), %edx
    000026f0: 	xorl	%r8d, %r8d
    000026f3: 	xorl	%ecx, %ecx
    000026f5: 	movl	$0x1f40, %esi
    000026fa: 	movq	0x90(%rsp), %rdi
    00002702: 	callq	_Z9summarizePKciiii # Offset: 9986
    00002707: 	movl	base_iterations(%rip), %eax
    0000270d: 	movq	0x90(%rsp), %rdi
    00002715: 	movl	%eax, iterations(%rip)
    0000271b: 	cmpq	%r13, %rdi
    0000271e: 	je	.Ltmp1871 # Offset: 10014
    00002720: 	movq	0xa0(%rsp), %rax
    00002728: 	leaq	0x1(%rax), %rsi
    0000272c: 	callq	_ZdlPvm@PLT # Offset: 10028
.Ltmp1871:
    00002731: 	movq	0x70(%rsp), %rdi
    00002736: 	leaq	0x80(%rsp), %rax
    0000273e: 	cmpq	%rax, %rdi
    00002741: 	je	.Ltmp1872 # Offset: 10049
    00002743: 	movq	0x80(%rsp), %rax
    0000274b: 	leaq	0x1(%rax), %rsi
    0000274f: 	callq	_ZdlPvm@PLT # Offset: 10063
.Ltmp1872:
    00002754: 	movq	0x50(%rsp), %rdi
    00002759: 	cmpq	0x20(%rsp), %rdi
    0000275e: 	je	.Ltmp1873 # Offset: 10078
    00002760: 	movq	0x60(%rsp), %rax
    00002765: 	leaq	0x1(%rax), %rsi
    00002769: 	callq	_ZdlPvm@PLT # Offset: 10089
.Ltmp1873:
    0000276e: 	movq	0x3f38(%rsp), %rax
    00002776: 	subq	%fs:0x28, %rax
    0000277f: 	jne	.Ltmp1874 # Offset: 10111
    00002785: 	addq	$0x3f48, %rsp
    0000278c: 	popq	%rbx
    0000278d: 	popq	%rbp
    0000278e: 	popq	%r12
    00002790: 	popq	%r13
    00002792: 	popq	%r14
    00002794: 	popq	%r15
    00002796: 	retq # Offset: 10134
.Ltmp1682:
    00002797: 	movq	0x18(%rsp), %rsi
    0000279c: 	xorl	%edx, %edx
    0000279e: 	movq	%r13, %rdi
    000027a1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10145
    000027a6: 	movq	%rax, (%r13)
    000027aa: 	movq	%rax, %rdi
    000027ad: 	movq	0x30(%rsp), %rax
    000027b2: 	movq	%rax, 0x10(%r13)
.Ltmp1927:
    000027b6: 	movq	(%rsp), %rdx
    000027ba: 	movq	0x10(%rsp), %rsi
    000027bf: 	callq	memcpy@PLT # Offset: 10175
    000027c4: 	movq	0x30(%rsp), %rax
    000027c9: 	movq	(%r13), %rdi
    000027cd: 	movq	%rax, (%rsp)
    000027d1: 	jmp	.Ltmp1875 # Offset: 10193
.Ltmp1864:
    000027d6: 	movq	%r12, %rsi
    000027d9: 	movq	%r15, %rdi
    000027dc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10204
    000027e1: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000027e8: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000027ef: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000027f6: 	jne	.Ltmp1876 # Offset: 10230
.Ltmp1869:
    000027fc: 	movq	-0x8(%rdx), %rax
    00002800: 	addq	$0x200, %rax
    00002806: 	jmp	.Ltmp1876 # Offset: 10246
.Ltmp1858:
    0000280b: 	movq	-0x8(%rdx), %rax
    0000280f: 	addq	$0x200, %rax
    00002815: 	jmp	.Ltmp1877 # Offset: 10261
.Ltmp1679:
    0000281a: 	movq	%r12, %rsi
    0000281d: 	movq	%r15, %rdi
    00002820: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10272
    00002825: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000282c: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002833: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000283a: 	jne	.Ltmp1878 # Offset: 10298
.Ltmp1684:
    00002840: 	movq	-0x8(%rdx), %rax
    00002844: 	addq	$0x200, %rax
    0000284a: 	jmp	.Ltmp1878 # Offset: 10314
.Ltmp1686:
    0000284f: 	movq	%r12, %rsi
    00002852: 	movq	%r15, %rdi
    00002855: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10325
    0000285a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002861: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002868: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000286f: 	jne	.Ltmp1879 # Offset: 10351
.Ltmp1691:
    00002875: 	movq	-0x8(%rdx), %rax
    00002879: 	addq	$0x200, %rax
    0000287f: 	jmp	.Ltmp1879 # Offset: 10367
.Ltmp1703:
    00002884: 	movq	-0x8(%rdx), %rax
    00002888: 	addq	$0x200, %rax
    0000288e: 	jmp	.Ltmp1880 # Offset: 10382
.Ltmp1701:
    00002893: 	movq	-0x8(%rdx), %rax
    00002897: 	addq	$0x200, %rax
    0000289d: 	jmp	.Ltmp1881 # Offset: 10397
.Ltmp1699:
    000028a2: 	movq	-0x8(%rdx), %rax
    000028a6: 	addq	$0x200, %rax
    000028ac: 	jmp	.Ltmp1882 # Offset: 10412
.Ltmp1697:
    000028b1: 	movq	-0x8(%rdx), %rax
    000028b5: 	addq	$0x200, %rax
    000028bb: 	jmp	.Ltmp1883 # Offset: 10427
.Ltmp1695:
    000028c0: 	movq	-0x8(%rdx), %rax
    000028c4: 	addq	$0x200, %rax
    000028ca: 	jmp	.Ltmp1884 # Offset: 10442
.Ltmp1693:
    000028cf: 	movq	-0x8(%rdx), %rax
    000028d3: 	addq	$0x200, %rax
    000028d9: 	jmp	.Ltmp1885 # Offset: 10457
.Ltmp1739:
    000028de: 	movq	%r12, %rsi
    000028e1: 	movq	%r15, %rdi
    000028e4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10468
    000028e9: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000028f0: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000028f7: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000028fe: 	jne	.Ltmp1886 # Offset: 10494
.Ltmp1744:
    00002904: 	movq	-0x8(%rdx), %rax
    00002908: 	addq	$0x200, %rax
    0000290e: 	jmp	.Ltmp1886 # Offset: 10510
.Ltmp1733:
    00002913: 	movq	-0x8(%rdx), %rax
    00002917: 	addq	$0x200, %rax
    0000291d: 	jmp	.Ltmp1887 # Offset: 10525
.Ltmp1728:
    00002922: 	movq	%r12, %rsi
    00002925: 	movq	%r15, %rdi
    00002928: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10536
    0000292d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002934: 	jmp	.Ltmp1888 # Offset: 10548
.Ltmp1722:
    00002939: 	movq	-0x8(%rdx), %rax
    0000293d: 	addq	$0x200, %rax
    00002943: 	jmp	.Ltmp1889 # Offset: 10563
.Ltmp1720:
    00002948: 	movq	-0x8(%rdx), %rax
    0000294c: 	addq	$0x200, %rax
    00002952: 	jmp	.Ltmp1890 # Offset: 10578
.Ltmp1718:
    00002957: 	movq	-0x8(%rdx), %rax
    0000295b: 	addq	$0x200, %rax
    00002961: 	jmp	.Ltmp1891 # Offset: 10593
.Ltmp1716:
    00002966: 	movq	-0x8(%rdx), %rax
    0000296a: 	addq	$0x200, %rax
    00002970: 	jmp	.Ltmp1892 # Offset: 10608
.Ltmp1714:
    00002975: 	movq	-0x8(%rdx), %rax
    00002979: 	addq	$0x200, %rax
    0000297f: 	jmp	.Ltmp1893 # Offset: 10623
.Ltmp1712:
    00002984: 	movq	-0x8(%rdx), %rax
    00002988: 	addq	$0x200, %rax
    0000298e: 	jmp	.Ltmp1894 # Offset: 10638
.Ltmp1707:
    00002993: 	movq	%r12, %rsi
    00002996: 	movq	%r15, %rdi
    00002999: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10649
    0000299e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000029a5: 	jmp	.Ltmp1895 # Offset: 10661
.Ltmp1705:
    000029aa: 	movq	-0x8(%rdx), %rax
    000029ae: 	addq	$0x200, %rax
    000029b4: 	jmp	.Ltmp1896 # Offset: 10676
.Ltmp1853:
    000029b9: 	movq	%r12, %rsi
    000029bc: 	movq	%r15, %rdi
    000029bf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10687
    000029c4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000029cb: 	jmp	.Ltmp1897 # Offset: 10699
.Ltmp1847:
    000029d0: 	movq	-0x8(%rdx), %rax
    000029d4: 	addq	$0x200, %rax
    000029da: 	jmp	.Ltmp1898 # Offset: 10714
.Ltmp1841:
    000029df: 	movq	-0x8(%rdx), %rax
    000029e3: 	addq	$0x200, %rax
    000029e9: 	jmp	.Ltmp1899 # Offset: 10729
.Ltmp1836:
    000029ee: 	movq	%r12, %rsi
    000029f1: 	movq	%r15, %rdi
    000029f4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10740
    000029f9: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002a00: 	jmp	.Ltmp1900 # Offset: 10752
.Ltmp1830:
    00002a05: 	movq	-0x8(%rdx), %rax
    00002a09: 	addq	$0x200, %rax
    00002a0f: 	jmp	.Ltmp1901 # Offset: 10767
.Ltmp1824:
    00002a14: 	movq	-0x8(%rdx), %rax
    00002a18: 	addq	$0x200, %rax
    00002a1e: 	jmp	.Ltmp1902 # Offset: 10782
.Ltmp1818:
    00002a23: 	movq	-0x8(%rdx), %rax
    00002a27: 	addq	$0x200, %rax
    00002a2d: 	jmp	.Ltmp1903 # Offset: 10797
.Ltmp1813:
    00002a32: 	movq	%r12, %rsi
    00002a35: 	movq	%r15, %rdi
    00002a38: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10808
    00002a3d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002a44: 	jmp	.Ltmp1904 # Offset: 10820
.Ltmp1807:
    00002a49: 	movq	-0x8(%rdx), %rax
    00002a4d: 	addq	$0x200, %rax
    00002a53: 	jmp	.Ltmp1905 # Offset: 10835
.Ltmp1801:
    00002a58: 	movq	-0x8(%rdx), %rax
    00002a5c: 	addq	$0x200, %rax
    00002a62: 	jmp	.Ltmp1906 # Offset: 10850
.Ltmp1796:
    00002a67: 	movq	%r12, %rsi
    00002a6a: 	movq	%r15, %rdi
    00002a6d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10861
    00002a72: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002a79: 	jmp	.Ltmp1907 # Offset: 10873
.Ltmp1790:
    00002a7e: 	movq	-0x8(%rdx), %rax
    00002a82: 	addq	$0x200, %rax
    00002a88: 	jmp	.Ltmp1908 # Offset: 10888
.Ltmp1785:
    00002a8d: 	movq	%r12, %rsi
    00002a90: 	movq	%r15, %rdi
    00002a93: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10899
    00002a98: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002a9f: 	jmp	.Ltmp1909 # Offset: 10911
.Ltmp1779:
    00002aa4: 	movq	-0x8(%rdx), %rax
    00002aa8: 	addq	$0x200, %rax
    00002aae: 	jmp	.Ltmp1910 # Offset: 10926
.Ltmp1774:
    00002ab3: 	movq	%r12, %rsi
    00002ab6: 	movq	%r15, %rdi
    00002ab9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10937
    00002abe: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002ac5: 	jmp	.Ltmp1911 # Offset: 10949
.Ltmp1768:
    00002aca: 	movq	-0x8(%rdx), %rax
    00002ace: 	addq	$0x200, %rax
    00002ad4: 	jmp	.Ltmp1912 # Offset: 10964
.Ltmp1762:
    00002ad9: 	movq	-0x8(%rdx), %rax
    00002add: 	addq	$0x200, %rax
    00002ae3: 	jmp	.Ltmp1913 # Offset: 10979
.Ltmp1756:
    00002ae8: 	movq	-0x8(%rdx), %rax
    00002aec: 	addq	$0x200, %rax
    00002af2: 	jmp	.Ltmp1914 # Offset: 10994
.Ltmp1750:
    00002af7: 	movq	-0x8(%rdx), %rax
    00002afb: 	addq	$0x200, %rax
    00002b01: 	jmp	.Ltmp1915 # Offset: 11009
.Ltmp1743:
    00002b06: 	cmpq	$0x0, 0x10(%rsp)
    00002b0c: 	je	.Ltmp1916 # Offset: 11020
.Ltmp1937:
    00002b12: 	movq	0x10(%rsp), %rdx
    00002b17: 	movq	0x28(%rsp), %rsi
    00002b1c: 	callq	memcpy@PLT # Offset: 11036
    00002b21: 	movq	0x30(%rsp), %rax
    00002b26: 	movq	%rax, 0x10(%rsp)
    00002b2b: 	movq	(%rsp), %rax
    00002b2f: 	movq	(%rax), %rdi
    00002b32: 	jmp	.Ltmp1916 # Offset: 11058
.Ltmp1778:
    00002b37: 	cmpq	$0x0, 0x10(%rsp)
    00002b3d: 	je	.Ltmp1917 # Offset: 11069
.Ltmp1934:
    00002b43: 	movq	0x10(%rsp), %rdx
    00002b48: 	movq	0x28(%rsp), %rsi
    00002b4d: 	callq	memcpy@PLT # Offset: 11085
    00002b52: 	movq	0x30(%rsp), %rax
    00002b57: 	movq	%rax, 0x10(%rsp)
    00002b5c: 	movq	(%rsp), %rax
    00002b60: 	movq	(%rax), %rdi
    00002b63: 	jmp	.Ltmp1917 # Offset: 11107
.Ltmp1789:
    00002b68: 	cmpq	$0x0, 0x10(%rsp)
    00002b6e: 	je	.Ltmp1918 # Offset: 11118
    00002b74: 	jmp	.Ltmp1919 # Offset: 11124
    00002b79: 	nopl	(%rax) # Size: 7
.Ltmp1800:
    00002b80: 	cmpq	$0x0, 0x10(%rsp)
    00002b86: 	je	.Ltmp1920 # Offset: 11142
    00002b8c: 	jmp	.Ltmp1921 # Offset: 11148
    00002b91: 	nopl	(%rax) # Size: 7
.Ltmp1732:
    00002b98: 	cmpq	$0x0, 0x10(%rsp)
    00002b9e: 	je	.Ltmp1922 # Offset: 11166
    00002ba4: 	jmp	.Ltmp1923 # Offset: 11172
    00002ba9: 	nopl	(%rax) # Size: 7
.Ltmp1868:
    00002bb0: 	testq	%r15, %r15
    00002bb3: 	je	.Ltmp1924 # Offset: 11187
.Ltmp1938:
    00002bb9: 	movq	%r15, %rdx
    00002bbc: 	movq	%rbp, %rsi
    00002bbf: 	callq	memcpy@PLT # Offset: 11199
    00002bc4: 	movq	0x30(%rsp), %r15
    00002bc9: 	movq	(%rbx), %rdi
    00002bcc: 	jmp	.Ltmp1924 # Offset: 11212
.Ltmp1840:
    00002bd1: 	cmpq	$0x0, 0x10(%rsp)
    00002bd7: 	je	.Ltmp1925 # Offset: 11223
    00002bdd: 	jmp	.Ltmp1926 # Offset: 11229
    00002be2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1683:
    00002be8: 	cmpq	$0x0, (%rsp)
    00002bed: 	je	.Ltmp1875 # Offset: 11245
    00002bf3: 	jmp	.Ltmp1927 # Offset: 11251
    00002bf8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1711:
    00002c00: 	cmpq	$0x0, (%rsp)
    00002c05: 	je	.Ltmp1928 # Offset: 11269
.Ltmp1935:
    00002c0b: 	movq	(%rsp), %rdx
    00002c0f: 	movq	0x28(%rsp), %rsi
    00002c14: 	callq	memcpy@PLT # Offset: 11284
    00002c19: 	movq	0x30(%rsp), %rax
    00002c1e: 	movq	%rax, (%rsp)
    00002c22: 	movq	0x10(%rsp), %rax
    00002c27: 	movq	(%rax), %rdi
    00002c2a: 	jmp	.Ltmp1928 # Offset: 11306
.Ltmp1817:
    00002c2f: 	cmpq	$0x0, 0x10(%rsp)
    00002c35: 	je	.Ltmp1929 # Offset: 11317
    00002c3b: 	jmp	.Ltmp1930 # Offset: 11323
.Ltmp1857:
    00002c40: 	cmpq	$0x0, 0x10(%rsp)
    00002c46: 	je	.Ltmp1931 # Offset: 11334
    00002c4c: 	jmp	.Ltmp1932 # Offset: 11340
    00002c51: 	nopl	(%rax) # Size: 7
.Ltmp1690:
    00002c58: 	cmpq	$0x0, (%rsp)
    00002c5d: 	je	.Ltmp1933 # Offset: 11357
.Ltmp1936:
    00002c63: 	movq	(%rsp), %rdx
    00002c67: 	movq	0x28(%rsp), %rsi
    00002c6c: 	callq	memcpy@PLT # Offset: 11372
    00002c71: 	movq	0x30(%rsp), %rax
    00002c76: 	movq	%rax, (%rsp)
    00002c7a: 	movq	0x10(%rsp), %rax
    00002c7f: 	movq	(%rax), %rdi
    00002c82: 	jmp	.Ltmp1933 # Offset: 11394
.Ltmp1788:
    00002c87: 	movq	0x18(%rsp), %rsi
    00002c8c: 	movq	(%rsp), %rdi
    00002c90: 	xorl	%edx, %edx
    00002c92: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11410
    00002c97: 	movq	(%rsp), %rsi
    00002c9b: 	movq	%rax, %rdi
    00002c9e: 	movq	%rax, (%rsi)
    00002ca1: 	movq	0x30(%rsp), %rax
    00002ca6: 	movq	%rax, 0x10(%rsi)
.Ltmp1919:
    00002caa: 	movq	0x10(%rsp), %rdx
    00002caf: 	movq	0x28(%rsp), %rsi
    00002cb4: 	callq	memcpy@PLT # Offset: 11444
    00002cb9: 	movq	0x30(%rsp), %rax
    00002cbe: 	movq	%rax, 0x10(%rsp)
    00002cc3: 	movq	(%rsp), %rax
    00002cc7: 	movq	(%rax), %rdi
    00002cca: 	jmp	.Ltmp1918 # Offset: 11466
.Ltmp1799:
    00002ccf: 	movq	0x18(%rsp), %rsi
    00002cd4: 	movq	(%rsp), %rdi
    00002cd8: 	xorl	%edx, %edx
    00002cda: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11482
    00002cdf: 	movq	(%rsp), %rcx
    00002ce3: 	movq	%rax, %rdi
    00002ce6: 	movq	%rax, (%rcx)
    00002ce9: 	movq	0x30(%rsp), %rax
    00002cee: 	movq	%rax, 0x10(%rcx)
.Ltmp1921:
    00002cf2: 	movq	0x10(%rsp), %rdx
    00002cf7: 	movq	0x28(%rsp), %rsi
    00002cfc: 	callq	memcpy@PLT # Offset: 11516
    00002d01: 	movq	0x30(%rsp), %rax
    00002d06: 	movq	%rax, 0x10(%rsp)
    00002d0b: 	movq	(%rsp), %rax
    00002d0f: 	movq	(%rax), %rdi
    00002d12: 	jmp	.Ltmp1920 # Offset: 11538
.Ltmp1856:
    00002d17: 	movq	0x18(%rsp), %rsi
    00002d1c: 	movq	(%rsp), %rdi
    00002d20: 	xorl	%edx, %edx
    00002d22: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11554
    00002d27: 	movq	(%rsp), %rsi
    00002d2b: 	movq	%rax, %rdi
    00002d2e: 	movq	%rax, (%rsi)
    00002d31: 	movq	0x30(%rsp), %rax
    00002d36: 	movq	%rax, 0x10(%rsi)
.Ltmp1932:
    00002d3a: 	movq	0x10(%rsp), %rdx
    00002d3f: 	movq	0x28(%rsp), %rsi
    00002d44: 	callq	memcpy@PLT # Offset: 11588
    00002d49: 	movq	0x30(%rsp), %rax
    00002d4e: 	movq	%rax, 0x10(%rsp)
    00002d53: 	movq	(%rsp), %rax
    00002d57: 	movq	(%rax), %rdi
    00002d5a: 	jmp	.Ltmp1931 # Offset: 11610
.Ltmp1777:
    00002d5f: 	movq	0x18(%rsp), %rsi
    00002d64: 	movq	(%rsp), %rdi
    00002d68: 	xorl	%edx, %edx
    00002d6a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11626
    00002d6f: 	movq	(%rsp), %rcx
    00002d73: 	movq	%rax, %rdi
    00002d76: 	movq	%rax, (%rcx)
    00002d79: 	movq	0x30(%rsp), %rax
    00002d7e: 	movq	%rax, 0x10(%rcx)
    00002d82: 	jmp	.Ltmp1934 # Offset: 11650
.Ltmp1731:
    00002d87: 	movq	0x18(%rsp), %rsi
    00002d8c: 	movq	(%rsp), %rdi
    00002d90: 	xorl	%edx, %edx
    00002d92: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11666
    00002d97: 	movq	(%rsp), %rsi
    00002d9b: 	movq	%rax, %rdi
    00002d9e: 	movq	%rax, (%rsi)
    00002da1: 	movq	0x30(%rsp), %rax
    00002da6: 	movq	%rax, 0x10(%rsi)
.Ltmp1923:
    00002daa: 	movq	0x10(%rsp), %rdx
    00002daf: 	movq	0x28(%rsp), %rsi
    00002db4: 	callq	memcpy@PLT # Offset: 11700
    00002db9: 	movq	0x30(%rsp), %rax
    00002dbe: 	movq	%rax, 0x10(%rsp)
    00002dc3: 	movq	(%rsp), %rax
    00002dc7: 	movq	(%rax), %rdi
    00002dca: 	jmp	.Ltmp1922 # Offset: 11722
.Ltmp1839:
    00002dcf: 	movq	0x18(%rsp), %rsi
    00002dd4: 	movq	(%rsp), %rdi
    00002dd8: 	xorl	%edx, %edx
    00002dda: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11738
    00002ddf: 	movq	(%rsp), %rcx
    00002de3: 	movq	%rax, %rdi
    00002de6: 	movq	%rax, (%rcx)
    00002de9: 	movq	0x30(%rsp), %rax
    00002dee: 	movq	%rax, 0x10(%rcx)
.Ltmp1926:
    00002df2: 	movq	0x10(%rsp), %rdx
    00002df7: 	movq	0x28(%rsp), %rsi
    00002dfc: 	callq	memcpy@PLT # Offset: 11772
    00002e01: 	movq	0x30(%rsp), %rax
    00002e06: 	movq	%rax, 0x10(%rsp)
    00002e0b: 	movq	(%rsp), %rax
    00002e0f: 	movq	(%rax), %rdi
    00002e12: 	jmp	.Ltmp1925 # Offset: 11794
.Ltmp1816:
    00002e17: 	movq	0x18(%rsp), %rsi
    00002e1c: 	movq	(%rsp), %rdi
    00002e20: 	xorl	%edx, %edx
    00002e22: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11810
    00002e27: 	movq	(%rsp), %rsi
    00002e2b: 	movq	%rax, %rdi
    00002e2e: 	movq	%rax, (%rsi)
    00002e31: 	movq	0x30(%rsp), %rax
    00002e36: 	movq	%rax, 0x10(%rsi)
.Ltmp1930:
    00002e3a: 	movq	0x10(%rsp), %rdx
    00002e3f: 	movq	0x28(%rsp), %rsi
    00002e44: 	callq	memcpy@PLT # Offset: 11844
    00002e49: 	movq	0x30(%rsp), %rax
    00002e4e: 	movq	%rax, 0x10(%rsp)
    00002e53: 	movq	(%rsp), %rax
    00002e57: 	movq	(%rax), %rdi
    00002e5a: 	jmp	.Ltmp1929 # Offset: 11866
.Ltmp1710:
    00002e5f: 	movq	0x18(%rsp), %rsi
    00002e64: 	movq	0x10(%rsp), %rdi
    00002e69: 	xorl	%edx, %edx
    00002e6b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11883
    00002e70: 	movq	0x10(%rsp), %rsi
    00002e75: 	movq	%rax, %rdi
    00002e78: 	movq	%rax, (%rsi)
    00002e7b: 	movq	0x30(%rsp), %rax
    00002e80: 	movq	%rax, 0x10(%rsi)
    00002e84: 	jmp	.Ltmp1935 # Offset: 11908
.Ltmp1689:
    00002e89: 	movq	0x18(%rsp), %rsi
    00002e8e: 	movq	0x10(%rsp), %rdi
    00002e93: 	xorl	%edx, %edx
    00002e95: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11925
    00002e9a: 	movq	0x10(%rsp), %rsi
    00002e9f: 	movq	%rax, %rdi
    00002ea2: 	movq	%rax, (%rsi)
    00002ea5: 	movq	0x30(%rsp), %rax
    00002eaa: 	movq	%rax, 0x10(%rsi)
    00002eae: 	jmp	.Ltmp1936 # Offset: 11950
.Ltmp1742:
    00002eb3: 	movq	0x18(%rsp), %rsi
    00002eb8: 	movq	(%rsp), %rdi
    00002ebc: 	xorl	%edx, %edx
    00002ebe: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11966
    00002ec3: 	movq	(%rsp), %rsi
    00002ec7: 	movq	%rax, %rdi
    00002eca: 	movq	%rax, (%rsi)
    00002ecd: 	movq	0x30(%rsp), %rax
    00002ed2: 	movq	%rax, 0x10(%rsi)
    00002ed6: 	jmp	.Ltmp1937 # Offset: 11990
.Ltmp1867:
    00002edb: 	movq	0x18(%rsp), %rsi
    00002ee0: 	xorl	%edx, %edx
    00002ee2: 	movq	%rbx, %rdi
    00002ee5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 12005
    00002eea: 	movq	%rax, (%rbx)
    00002eed: 	movq	%rax, %rdi
    00002ef0: 	movq	0x30(%rsp), %rax
    00002ef5: 	movq	%rax, 0x10(%rbx)
    00002ef9: 	jmp	.Ltmp1938 # Offset: 12025
.Ltmp1688:
    00002efe: 	leaq	DATAat0x23158(%rip), %rdi
    00002f05: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12037
.Ltmp1709:
    00002f0a: 	leaq	DATAat0x23158(%rip), %rdi
    00002f11: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12049
.Ltmp1730:
    00002f16: 	leaq	DATAat0x23158(%rip), %rdi
    00002f1d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12061
.Ltmp1741:
    00002f22: 	leaq	DATAat0x23158(%rip), %rdi
    00002f29: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12073
.Ltmp1776:
    00002f2e: 	leaq	DATAat0x23158(%rip), %rdi
    00002f35: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12085
.Ltmp1787:
    00002f3a: 	leaq	DATAat0x23158(%rip), %rdi
    00002f41: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12097
.Ltmp1798:
    00002f46: 	leaq	DATAat0x23158(%rip), %rdi
    00002f4d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12109
.Ltmp1815:
    00002f52: 	leaq	DATAat0x23158(%rip), %rdi
    00002f59: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12121
.Ltmp1838:
    00002f5e: 	leaq	DATAat0x23158(%rip), %rdi
    00002f65: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12133
.Ltmp1855:
    00002f6a: 	leaq	DATAat0x23158(%rip), %rdi
    00002f71: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12145
.Ltmp1866:
    00002f76: 	leaq	DATAat0x23158(%rip), %rdi
    00002f7d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12157
.Ltmp1874:
    00002f82: 	callq	__stack_chk_fail@PLT # Offset: 12162
.Ltmp1681:
    00002f87: 	leaq	DATAat0x23158(%rip), %rdi
    00002f8e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12174
    00002f93: 	endbr64
    00002f97: 	movq	%rax, %rbx
    00002f9a: 	jmp	.Ltmp1939 # Offset: 12186
    00002f9c: 	endbr64
    00002fa0: 	movq	%rax, %rbx
    00002fa3: 	jmp	.Ltmp1940 # Offset: 12195
    00002fa5: 	endbr64
.Ltmp1945:
    00002fa9: 	movq	%rax, %rbx
    00002fac: 	jmp	.Ltmp1941 # Offset: 12204
.Ltmp1946:
    00002fae: 	movq	0x90(%rsp), %rdi
    00002fb6: 	cmpq	%r13, %rdi
    00002fb9: 	je	.Ltmp1939 # Offset: 12217
.Ltmp1943:
    00002fbb: 	movq	0xa0(%rsp), %rax
    00002fc3: 	leaq	0x1(%rax), %rsi
    00002fc7: 	callq	_ZdlPvm@PLT # Offset: 12231
.Ltmp1939:
    00002fcc: 	movq	0x50(%rsp), %rdi
    00002fd1: 	cmpq	0x20(%rsp), %rdi
    00002fd6: 	je	.Ltmp1942 # Offset: 12246
    00002fd8: 	movq	0x60(%rsp), %rax
    00002fdd: 	leaq	0x1(%rax), %rsi
    00002fe1: 	callq	_ZdlPvm@PLT # Offset: 12257
.Ltmp1942:
    00002fe6: 	movq	%rbx, %rdi
    00002fe9: 	callq	_Unwind_Resume@PLT # Offset: 12265
.Ltmp1940:
    00002fee: 	movq	0x90(%rsp), %rdi
    00002ff6: 	leaq	0xa0(%rsp), %rax
    00002ffe: 	cmpq	%rax, %rdi
    00003001: 	jne	.Ltmp1943 # Offset: 12289
    00003003: 	jmp	.Ltmp1939 # Offset: 12291
.Ltmp1941:
    00003005: 	movq	0x90(%rsp), %rdi
    0000300d: 	cmpq	%r13, %rdi
    00003010: 	je	.Ltmp1944 # Offset: 12304
    00003012: 	movq	0xa0(%rsp), %rax
    0000301a: 	leaq	0x1(%rax), %rsi
    0000301e: 	callq	_ZdlPvm@PLT # Offset: 12318
.Ltmp1944:
    00003023: 	movq	0x70(%rsp), %rdi
    00003028: 	leaq	0x80(%rsp), %rax
    00003030: 	cmpq	%rax, %rdi
    00003033: 	je	.Ltmp1939 # Offset: 12339
    00003035: 	movq	0x80(%rsp), %rax
    0000303d: 	leaq	0x1(%rax), %rsi
    00003041: 	callq	_ZdlPvm@PLT # Offset: 12353
    00003046: 	jmp	.Ltmp1939 # Offset: 12358
    00003048: 	endbr64
    0000304c: 	jmp	.Ltmp1945 # Offset: 12364
    00003051: 	endbr64
    00003055: 	jmp	.Ltmp1945 # Offset: 12373
    0000305a: 	endbr64
    0000305e: 	jmp	.Ltmp1945 # Offset: 12382
    00003063: 	endbr64
    00003067: 	jmp	.Ltmp1945 # Offset: 12391
    0000306c: 	endbr64
    00003070: 	jmp	.Ltmp1945 # Offset: 12400
    00003075: 	endbr64
    00003079: 	jmp	.Ltmp1945 # Offset: 12409
    0000307e: 	endbr64
    00003082: 	jmp	.Ltmp1945 # Offset: 12418
    00003087: 	endbr64
    0000308b: 	jmp	.Ltmp1945 # Offset: 12427
    00003090: 	endbr64
    00003094: 	jmp	.Ltmp1945 # Offset: 12436
    00003099: 	endbr64
    0000309d: 	jmp	.Ltmp1945 # Offset: 12445
    000030a2: 	endbr64
    000030a6: 	jmp	.Ltmp1945 # Offset: 12454
    000030ab: 	endbr64
    000030af: 	jmp	.Ltmp1945 # Offset: 12463
    000030b4: 	endbr64
    000030b8: 	jmp	.Ltmp1945 # Offset: 12472
    000030bd: 	endbr64
.Ltmp1947:
    000030c1: 	movq	%rax, %rbx
    000030c4: 	jmp	.Ltmp1946 # Offset: 12484
    000030c9: 	endbr64
    000030cd: 	jmp	.Ltmp1947 # Offset: 12493
    000030cf: 	endbr64
    000030d3: 	jmp	.Ltmp1947 # Offset: 12499
    000030d5: 	endbr64
    000030d9: 	jmp	.Ltmp1945 # Offset: 12505
    000030de: 	endbr64
    000030e2: 	jmp	.Ltmp1947 # Offset: 12514
    000030e4: 	endbr64
    000030e8: 	jmp	.Ltmp1947 # Offset: 12520
    000030ea: 	endbr64
    000030ee: 	jmp	.Ltmp1947 # Offset: 12526
    000030f0: 	endbr64
    000030f4: 	jmp	.Ltmp1947 # Offset: 12532
    000030f6: 	endbr64
    000030fa: 	movq	%rax, %rbx
    000030fd: 	jmp	.Ltmp1944 # Offset: 12541
    00003102: 	endbr64
    00003106: 	jmp	.Ltmp1945 # Offset: 12550
    0000310b: 	endbr64
    0000310f: 	jmp	.Ltmp1945 # Offset: 12559
    00003114: 	endbr64
    00003118: 	jmp	.Ltmp1945 # Offset: 12568
    0000311d: 	endbr64
    00003121: 	jmp	.Ltmp1947 # Offset: 12577
    00003123: 	endbr64
    00003127: 	jmp	.Ltmp1947 # Offset: 12583
    00003129: 	endbr64
    0000312d: 	jmp	.Ltmp1947 # Offset: 12589
    0000312f: 	endbr64
    00003133: 	jmp	.Ltmp1947 # Offset: 12595
    00003135: 	endbr64
    00003139: 	jmp	.Ltmp1947 # Offset: 12601
    0000313b: 	endbr64
    0000313f: 	jmp	.Ltmp1947 # Offset: 12607
    00003141: 	endbr64
    00003145: 	jmp	.Ltmp1947 # Offset: 12613
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIsEvv"

Binary Function "_Z11TestOneTypeIlEvv" after disassembly {
  Number      : 49
  State       : disassembled
  Address     : 0x16a30
  Size        : 0x2cba
  MaxSize     : 0x2cc0
  Offset      : 0x16a30
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIlEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB048:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp1948:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp1948 # Offset: 37
    00000027: 	subq	$0xac8, %rsp
    0000002e: 	movdqa	_Z7gLabelsB5cxx11+16(%rip), %xmm2
    00000036: 	movdqa	_Z7gLabelsB5cxx11+32(%rip), %xmm3
    0000003e: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000045: 	movq	%fs:0x28, %rax
    0000004e: 	movq	%rax, 0xfab8(%rsp)
    00000056: 	xorl	%eax, %eax
    00000058: 	leaq	0x60(%rsp), %rax
    0000005d: 	leaq	0x30(%rsp), %rsi
    00000062: 	movl	$0x36746e69, 0x60(%rsp)
    0000006a: 	movq	%rax, 0x28(%rsp)
    0000006f: 	leaq	0xb0(%rsp), %rbp
    00000077: 	leaq	0xfab0(%rsp), %rbx
    0000007f: 	movq	%rax, 0x50(%rsp)
    00000084: 	movl	$0x5f34, %eax
    00000089: 	movw	%ax, 0x64(%rsp)
    0000008e: 	movb	$0x74, 0x66(%rsp)
    00000093: 	movq	$0x7, 0x58(%rsp)
    0000009c: 	movb	$0x0, 0x67(%rsp)
    000000a1: 	movq	%rsi, 0x20(%rsp)
    000000a6: 	movaps	%xmm2, 0x30(%rsp)
    000000ab: 	movaps	%xmm3, 0x40(%rsp)
    000000b0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 176
    000000b5: 	cvttsd2si	init_value(%rip), %rax
    000000be: 	movq	%rax, %xmm0
    000000c3: 	movq	%rbp, %rax
    000000c6: 	punpcklqdq	%xmm0, %xmm0
    000000ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1949:
    000000d0: 	movaps	%xmm0, (%rax)
    000000d3: 	addq	$0x10, %rax
    000000d7: 	cmpq	%rbx, %rax
    000000da: 	jne	.Ltmp1949 # Offset: 218
    000000dc: 	movl	base_iterations(%rip), %eax
    000000e2: 	leaq	0x90(%rsp), %r12
    000000ea: 	leaq	0x50(%rsp), %r13
    000000ef: 	leaq	DATAat0x231c8(%rip), %rdx
    000000f6: 	movq	%r13, %rsi
    000000f9: 	movq	%r12, %rdi
    000000fc: 	movl	%eax, iterations(%rip)
    00000102: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 258
    00000107: 	callq	clock@PLT # Offset: 263
    0000010c: 	movq	%r12, %rsi
    0000010f: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000116: 	movq	%rax, start_time(%rip)
    0000011d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 285
    00000122: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000129: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000130: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000137: 	je	.Ltmp1950 # Offset: 311
.Ltmp2161:
    0000013d: 	movq	-0x20(%rax), %r14
    00000141: 	callq	clock@PLT # Offset: 321
    00000146: 	pxor	%xmm0, %xmm0
    0000014a: 	movq	%rax, end_time(%rip)
    00000151: 	movq	%r14, %rdi
    00000154: 	subq	start_time(%rip), %rax
    0000015b: 	cvtsi2sd	%rax, %xmm0
    00000160: 	divsd	DATAat0x23450(%rip), %xmm0
    00000168: 	callq	_Z13record_resultdPKc # Offset: 360
    0000016d: 	movq	0x90(%rsp), %rdi
    00000175: 	leaq	0xa0(%rsp), %rax
    0000017d: 	movq	%rax, 0x18(%rsp)
    00000182: 	cmpq	%rax, %rdi
    00000185: 	je	.Ltmp1951 # Offset: 389
    00000187: 	movq	0xa0(%rsp), %rax
    0000018f: 	leaq	0x1(%rax), %rsi
    00000193: 	callq	_ZdlPvm@PLT # Offset: 403
.Ltmp1951:
    00000198: 	leaq	DATAat0x231e2(%rip), %rdx
    0000019f: 	movq	%r13, %rsi
    000001a2: 	movq	%r12, %rdi
    000001a5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 421
    000001aa: 	callq	clock@PLT # Offset: 426
    000001af: 	movq	%r12, %rsi
    000001b2: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000001b9: 	movq	%rax, start_time(%rip)
    000001c0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 448
    000001c5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000001cc: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000001d3: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000001da: 	je	.Ltmp1952 # Offset: 474
.Ltmp2160:
    000001e0: 	movq	-0x20(%rax), %r14
    000001e4: 	callq	clock@PLT # Offset: 484
    000001e9: 	pxor	%xmm0, %xmm0
    000001ed: 	movq	%rax, end_time(%rip)
    000001f4: 	movq	%r14, %rdi
    000001f7: 	subq	start_time(%rip), %rax
    000001fe: 	cvtsi2sd	%rax, %xmm0
    00000203: 	divsd	DATAat0x23450(%rip), %xmm0
    0000020b: 	callq	_Z13record_resultdPKc # Offset: 523
    00000210: 	movq	0x90(%rsp), %rdi
    00000218: 	cmpq	0x18(%rsp), %rdi
    0000021d: 	je	.Ltmp1953 # Offset: 541
    0000021f: 	movq	0xa0(%rsp), %rax
    00000227: 	leaq	0x1(%rax), %rsi
    0000022b: 	callq	_ZdlPvm@PLT # Offset: 555
.Ltmp1953:
    00000230: 	leaq	DATAat0x231f1(%rip), %rdx
    00000237: 	movq	%r13, %rsi
    0000023a: 	movq	%r12, %rdi
    0000023d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 573
    00000242: 	callq	clock@PLT # Offset: 578
    00000247: 	movq	%r12, %rsi
    0000024a: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000251: 	movq	%rax, start_time(%rip)
    00000258: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 600
    0000025d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000264: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000026b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000272: 	je	.Ltmp1954 # Offset: 626
.Ltmp2159:
    00000278: 	movq	-0x20(%rax), %r14
    0000027c: 	callq	clock@PLT # Offset: 636
    00000281: 	pxor	%xmm0, %xmm0
    00000285: 	movq	%rax, end_time(%rip)
    0000028c: 	movq	%r14, %rdi
    0000028f: 	subq	start_time(%rip), %rax
    00000296: 	cvtsi2sd	%rax, %xmm0
    0000029b: 	divsd	DATAat0x23450(%rip), %xmm0
    000002a3: 	callq	_Z13record_resultdPKc # Offset: 675
    000002a8: 	movq	0x90(%rsp), %rdi
    000002b0: 	cmpq	0x18(%rsp), %rdi
    000002b5: 	je	.Ltmp1955 # Offset: 693
    000002b7: 	movq	0xa0(%rsp), %rax
    000002bf: 	leaq	0x1(%rax), %rsi
    000002c3: 	callq	_ZdlPvm@PLT # Offset: 707
.Ltmp1955:
    000002c8: 	leaq	DATAat0x23205(%rip), %rdx
    000002cf: 	movq	%r13, %rsi
    000002d2: 	movq	%r12, %rdi
    000002d5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 725
    000002da: 	callq	clock@PLT # Offset: 730
    000002df: 	movq	%r12, %rsi
    000002e2: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000002e9: 	movq	%rax, start_time(%rip)
    000002f0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 752
    000002f5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000002fc: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000303: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000030a: 	je	.Ltmp1956 # Offset: 778
.Ltmp2158:
    00000310: 	movq	-0x20(%rax), %r14
    00000314: 	callq	clock@PLT # Offset: 788
    00000319: 	pxor	%xmm0, %xmm0
    0000031d: 	movq	%rax, end_time(%rip)
    00000324: 	movq	%r14, %rdi
    00000327: 	subq	start_time(%rip), %rax
    0000032e: 	cvtsi2sd	%rax, %xmm0
    00000333: 	divsd	DATAat0x23450(%rip), %xmm0
    0000033b: 	callq	_Z13record_resultdPKc # Offset: 827
    00000340: 	movq	0x90(%rsp), %rdi
    00000348: 	cmpq	0x18(%rsp), %rdi
    0000034d: 	je	.Ltmp1957 # Offset: 845
    0000034f: 	movq	0xa0(%rsp), %rax
    00000357: 	leaq	0x1(%rax), %rsi
    0000035b: 	callq	_ZdlPvm@PLT # Offset: 859
.Ltmp1957:
    00000360: 	leaq	DATAat0x23219(%rip), %rdx
    00000367: 	movq	%r13, %rsi
    0000036a: 	movq	%r12, %rdi
    0000036d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 877
    00000372: 	callq	clock@PLT # Offset: 882
    00000377: 	movq	%r12, %rsi
    0000037a: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000381: 	movq	%rax, start_time(%rip)
    00000388: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 904
    0000038d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000394: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000039b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000003a2: 	je	.Ltmp1958 # Offset: 930
.Ltmp2157:
    000003a8: 	movq	-0x20(%rax), %r14
    000003ac: 	callq	clock@PLT # Offset: 940
    000003b1: 	pxor	%xmm0, %xmm0
    000003b5: 	movq	%rax, end_time(%rip)
    000003bc: 	movq	%r14, %rdi
    000003bf: 	subq	start_time(%rip), %rax
    000003c6: 	cvtsi2sd	%rax, %xmm0
    000003cb: 	divsd	DATAat0x23450(%rip), %xmm0
    000003d3: 	callq	_Z13record_resultdPKc # Offset: 979
    000003d8: 	movq	0x90(%rsp), %rdi
    000003e0: 	cmpq	0x18(%rsp), %rdi
    000003e5: 	je	.Ltmp1959 # Offset: 997
    000003e7: 	movq	0xa0(%rsp), %rax
    000003ef: 	leaq	0x1(%rax), %rsi
    000003f3: 	callq	_ZdlPvm@PLT # Offset: 1011
.Ltmp1959:
    000003f8: 	leaq	DATAat0x233c2(%rip), %rdx
    000003ff: 	movq	%r13, %rsi
    00000402: 	movq	%r12, %rdi
    00000405: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1029
    0000040a: 	callq	clock@PLT # Offset: 1034
    0000040f: 	movq	%r12, %rsi
    00000412: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000419: 	movq	%rax, start_time(%rip)
    00000420: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1056
    00000425: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000042c: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000433: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000043a: 	je	.Ltmp1960 # Offset: 1082
.Ltmp2148:
    00000440: 	movq	-0x20(%rax), %r14
    00000444: 	callq	clock@PLT # Offset: 1092
    00000449: 	pxor	%xmm0, %xmm0
    0000044d: 	movq	%rax, end_time(%rip)
    00000454: 	movq	%r14, %rdi
    00000457: 	subq	start_time(%rip), %rax
    0000045e: 	cvtsi2sd	%rax, %xmm0
    00000463: 	divsd	DATAat0x23450(%rip), %xmm0
    0000046b: 	callq	_Z13record_resultdPKc # Offset: 1131
    00000470: 	movq	0x90(%rsp), %rdi
    00000478: 	cmpq	0x18(%rsp), %rdi
    0000047d: 	je	.Ltmp1961 # Offset: 1149
    0000047f: 	movq	0xa0(%rsp), %rax
    00000487: 	leaq	0x1(%rax), %rsi
    0000048b: 	callq	_ZdlPvm@PLT # Offset: 1163
.Ltmp1961:
    00000490: 	leaq	DATAat0x23279(%rip), %rdx
    00000497: 	movq	%r13, %rsi
    0000049a: 	movq	%r12, %rdi
    0000049d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1181
    000004a2: 	callq	clock@PLT # Offset: 1186
    000004a7: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    000004ae: 	movq	%rax, start_time(%rip)
    000004b5: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000004bc: 	subq	$0x20, %rax
    000004c0: 	cmpq	%rax, %r15
    000004c3: 	je	.Ltmp1962 # Offset: 1219
    000004c9: 	leaq	0x10(%r15), %rdi
    000004cd: 	movq	0x98(%rsp), %r14
    000004d5: 	movq	%rdi, (%r15)
    000004d8: 	movq	0x90(%rsp), %rax
    000004e0: 	movq	%rax, %rsi
    000004e3: 	movq	%rax, (%rsp)
    000004e7: 	addq	%r14, %rsi
    000004ea: 	je	.Ltmp1963 # Offset: 1258
    000004ec: 	testq	%rax, %rax
    000004ef: 	je	.Ltmp1964 # Offset: 1263
.Ltmp1963:
    000004f5: 	movq	%r14, 0x30(%rsp)
    000004fa: 	cmpq	$0xf, %r14
    000004fe: 	ja	.Ltmp1965 # Offset: 1278
    00000504: 	cmpq	$0x1, %r14
    00000508: 	jne	.Ltmp1966 # Offset: 1288
    0000050e: 	movq	(%rsp), %rax
    00000512: 	movzbl	(%rax), %eax
    00000515: 	movb	%al, 0x10(%r15)
.Ltmp2146:
    00000519: 	movq	%r14, 0x8(%r15)
    0000051d: 	movb	$0x0, (%rdi,%r14)
    00000522: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000529: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000530: 	addq	$0x20, %rax
    00000534: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000053b: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00000542: 	je	.Ltmp1967 # Offset: 1346
.Ltmp2147:
    00000548: 	movq	-0x20(%rax), %r14
    0000054c: 	callq	clock@PLT # Offset: 1356
    00000551: 	pxor	%xmm0, %xmm0
    00000555: 	movq	%rax, end_time(%rip)
    0000055c: 	movq	%r14, %rdi
    0000055f: 	subq	start_time(%rip), %rax
    00000566: 	cvtsi2sd	%rax, %xmm0
    0000056b: 	divsd	DATAat0x23450(%rip), %xmm0
    00000573: 	callq	_Z13record_resultdPKc # Offset: 1395
    00000578: 	movq	0x90(%rsp), %rdi
    00000580: 	cmpq	0x18(%rsp), %rdi
    00000585: 	je	.Ltmp1968 # Offset: 1413
    00000587: 	movq	0xa0(%rsp), %rax
    0000058f: 	leaq	0x1(%rax), %rsi
    00000593: 	callq	_ZdlPvm@PLT # Offset: 1427
.Ltmp1968:
    00000598: 	leaq	DATAat0x2322b(%rip), %rdx
    0000059f: 	movq	%r13, %rsi
    000005a2: 	movq	%r12, %rdi
    000005a5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1445
    000005aa: 	callq	clock@PLT # Offset: 1450
    000005af: 	movq	%r12, %rsi
    000005b2: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000005b9: 	movq	%rax, start_time(%rip)
    000005c0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1472
    000005c5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000005cc: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000005d3: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000005da: 	je	.Ltmp1969 # Offset: 1498
.Ltmp2171:
    000005e0: 	movq	-0x20(%rax), %r14
    000005e4: 	callq	clock@PLT # Offset: 1508
    000005e9: 	pxor	%xmm0, %xmm0
    000005ed: 	movq	%rax, end_time(%rip)
    000005f4: 	movq	%r14, %rdi
    000005f7: 	subq	start_time(%rip), %rax
    000005fe: 	cvtsi2sd	%rax, %xmm0
    00000603: 	divsd	DATAat0x23450(%rip), %xmm0
    0000060b: 	callq	_Z13record_resultdPKc # Offset: 1547
    00000610: 	movq	0x90(%rsp), %rdi
    00000618: 	cmpq	0x18(%rsp), %rdi
    0000061d: 	je	.Ltmp1970 # Offset: 1565
    0000061f: 	movq	0xa0(%rsp), %rax
    00000627: 	leaq	0x1(%rax), %rsi
    0000062b: 	callq	_ZdlPvm@PLT # Offset: 1579
.Ltmp1970:
    00000630: 	leaq	DATAat0x2323f(%rip), %rdx
    00000637: 	movq	%r13, %rsi
    0000063a: 	movq	%r12, %rdi
    0000063d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1597
    00000642: 	callq	clock@PLT # Offset: 1602
    00000647: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    0000064e: 	movq	%rax, start_time(%rip)
    00000655: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000065c: 	subq	$0x20, %rax
    00000660: 	cmpq	%rax, %r15
    00000663: 	je	.Ltmp1971 # Offset: 1635
    00000669: 	leaq	0x10(%r15), %rdi
    0000066d: 	movq	0x98(%rsp), %r14
    00000675: 	movq	%rdi, (%r15)
    00000678: 	movq	0x90(%rsp), %rax
    00000680: 	movq	%rax, %rsi
    00000683: 	movq	%rax, (%rsp)
    00000687: 	addq	%r14, %rsi
    0000068a: 	je	.Ltmp1972 # Offset: 1674
    0000068c: 	testq	%rax, %rax
    0000068f: 	je	.Ltmp1973 # Offset: 1679
.Ltmp1972:
    00000695: 	movq	%r14, 0x30(%rsp)
    0000069a: 	cmpq	$0xf, %r14
    0000069e: 	ja	.Ltmp1974 # Offset: 1694
    000006a4: 	cmpq	$0x1, %r14
    000006a8: 	jne	.Ltmp1975 # Offset: 1704
    000006ae: 	movq	(%rsp), %rax
    000006b2: 	movzbl	(%rax), %eax
    000006b5: 	movb	%al, 0x10(%r15)
.Ltmp2208:
    000006b9: 	movq	%r14, 0x8(%r15)
    000006bd: 	movb	$0x0, (%rdi,%r14)
    000006c2: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000006c9: 	addq	$0x20, %rax
    000006cd: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2170:
    000006d4: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000006db: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000006e2: 	je	.Ltmp1976 # Offset: 1762
.Ltmp2169:
    000006e8: 	movq	-0x20(%rax), %r14
    000006ec: 	callq	clock@PLT # Offset: 1772
    000006f1: 	pxor	%xmm0, %xmm0
    000006f5: 	movq	%rax, end_time(%rip)
    000006fc: 	movq	%r14, %rdi
    000006ff: 	subq	start_time(%rip), %rax
    00000706: 	cvtsi2sd	%rax, %xmm0
    0000070b: 	divsd	DATAat0x23450(%rip), %xmm0
    00000713: 	callq	_Z13record_resultdPKc # Offset: 1811
    00000718: 	movq	0x90(%rsp), %rdi
    00000720: 	cmpq	0x18(%rsp), %rdi
    00000725: 	je	.Ltmp1977 # Offset: 1829
    00000727: 	movq	0xa0(%rsp), %rax
    0000072f: 	leaq	0x1(%rax), %rsi
    00000733: 	callq	_ZdlPvm@PLT # Offset: 1843
.Ltmp1977:
    00000738: 	leaq	DATAat0x23257(%rip), %rdx
    0000073f: 	movq	%r13, %rsi
    00000742: 	movq	%r12, %rdi
    00000745: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1861
    0000074a: 	callq	clock@PLT # Offset: 1866
    0000074f: 	movq	%r12, %rsi
    00000752: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000759: 	movq	%rax, start_time(%rip)
    00000760: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1888
    00000765: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000076c: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000773: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000077a: 	je	.Ltmp1978 # Offset: 1914
.Ltmp2168:
    00000780: 	movq	-0x20(%rax), %r14
    00000784: 	callq	clock@PLT # Offset: 1924
    00000789: 	pxor	%xmm0, %xmm0
    0000078d: 	movq	%rax, end_time(%rip)
    00000794: 	movq	%r14, %rdi
    00000797: 	subq	start_time(%rip), %rax
    0000079e: 	cvtsi2sd	%rax, %xmm0
    000007a3: 	divsd	DATAat0x23450(%rip), %xmm0
    000007ab: 	callq	_Z13record_resultdPKc # Offset: 1963
    000007b0: 	movq	0x90(%rsp), %rdi
    000007b8: 	cmpq	0x18(%rsp), %rdi
    000007bd: 	je	.Ltmp1979 # Offset: 1981
    000007bf: 	movq	0xa0(%rsp), %rax
    000007c7: 	leaq	0x1(%rax), %rsi
    000007cb: 	callq	_ZdlPvm@PLT # Offset: 1995
.Ltmp1979:
    000007d0: 	leaq	DATAat0x2326c(%rip), %rdx
    000007d7: 	movq	%r13, %rsi
    000007da: 	movq	%r12, %rdi
    000007dd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2013
    000007e2: 	callq	clock@PLT # Offset: 2018
    000007e7: 	movq	%r12, %rsi
    000007ea: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000007f1: 	movq	%rax, start_time(%rip)
    000007f8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2040
    000007fd: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000804: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000080b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000812: 	je	.Ltmp1980 # Offset: 2066
.Ltmp2167:
    00000818: 	movq	-0x20(%rax), %r14
    0000081c: 	callq	clock@PLT # Offset: 2076
    00000821: 	pxor	%xmm0, %xmm0
    00000825: 	movq	%rax, end_time(%rip)
    0000082c: 	movq	%r14, %rdi
    0000082f: 	subq	start_time(%rip), %rax
    00000836: 	cvtsi2sd	%rax, %xmm0
    0000083b: 	divsd	DATAat0x23450(%rip), %xmm0
    00000843: 	callq	_Z13record_resultdPKc # Offset: 2115
    00000848: 	movq	0x90(%rsp), %rdi
    00000850: 	cmpq	0x18(%rsp), %rdi
    00000855: 	je	.Ltmp1981 # Offset: 2133
    00000857: 	movq	0xa0(%rsp), %rax
    0000085f: 	leaq	0x1(%rax), %rsi
    00000863: 	callq	_ZdlPvm@PLT # Offset: 2147
.Ltmp1981:
    00000868: 	leaq	DATAat0x2328a(%rip), %rdx
    0000086f: 	movq	%r13, %rsi
    00000872: 	movq	%r12, %rdi
    00000875: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2165
    0000087a: 	callq	clock@PLT # Offset: 2170
    0000087f: 	movq	%r12, %rsi
    00000882: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000889: 	movq	%rax, start_time(%rip)
    00000890: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2192
    00000895: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000089c: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000008a3: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000008aa: 	je	.Ltmp1982 # Offset: 2218
.Ltmp2166:
    000008b0: 	movq	-0x20(%rax), %r14
    000008b4: 	callq	clock@PLT # Offset: 2228
    000008b9: 	pxor	%xmm0, %xmm0
    000008bd: 	movq	%rax, end_time(%rip)
    000008c4: 	movq	%r14, %rdi
    000008c7: 	subq	start_time(%rip), %rax
    000008ce: 	cvtsi2sd	%rax, %xmm0
    000008d3: 	divsd	DATAat0x23450(%rip), %xmm0
    000008db: 	callq	_Z13record_resultdPKc # Offset: 2267
    000008e0: 	movq	0x90(%rsp), %rdi
    000008e8: 	cmpq	0x18(%rsp), %rdi
    000008ed: 	je	.Ltmp1983 # Offset: 2285
    000008ef: 	movq	0xa0(%rsp), %rax
    000008f7: 	leaq	0x1(%rax), %rsi
    000008fb: 	callq	_ZdlPvm@PLT # Offset: 2299
.Ltmp1983:
    00000900: 	leaq	DATAat0x233d1(%rip), %rdx
    00000907: 	movq	%r13, %rsi
    0000090a: 	movq	%r12, %rdi
    0000090d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2317
    00000912: 	callq	clock@PLT # Offset: 2322
    00000917: 	movq	%r12, %rsi
    0000091a: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000921: 	movq	%rax, start_time(%rip)
    00000928: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2344
    0000092d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000934: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000093b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000942: 	je	.Ltmp1984 # Offset: 2370
.Ltmp2165:
    00000948: 	movq	-0x20(%rax), %r14
    0000094c: 	callq	clock@PLT # Offset: 2380
    00000951: 	pxor	%xmm0, %xmm0
    00000955: 	movq	%rax, end_time(%rip)
    0000095c: 	movq	%r14, %rdi
    0000095f: 	subq	start_time(%rip), %rax
    00000966: 	cvtsi2sd	%rax, %xmm0
    0000096b: 	divsd	DATAat0x23450(%rip), %xmm0
    00000973: 	callq	_Z13record_resultdPKc # Offset: 2419
    00000978: 	movq	0x90(%rsp), %rdi
    00000980: 	cmpq	0x18(%rsp), %rdi
    00000985: 	je	.Ltmp1985 # Offset: 2437
    00000987: 	movq	0xa0(%rsp), %rax
    0000098f: 	leaq	0x1(%rax), %rsi
    00000993: 	callq	_ZdlPvm@PLT # Offset: 2451
.Ltmp1985:
    00000998: 	leaq	DATAat0x233e0(%rip), %rdx
    0000099f: 	movq	%r13, %rsi
    000009a2: 	movq	%r12, %rdi
    000009a5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2469
    000009aa: 	callq	clock@PLT # Offset: 2474
    000009af: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    000009b6: 	movq	%rax, start_time(%rip)
    000009bd: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000009c4: 	subq	$0x20, %rax
    000009c8: 	cmpq	%rax, %r15
    000009cb: 	je	.Ltmp1986 # Offset: 2507
    000009d1: 	leaq	0x10(%r15), %rdi
    000009d5: 	movq	0x98(%rsp), %r14
    000009dd: 	movq	%rdi, (%r15)
    000009e0: 	movq	0x90(%rsp), %rax
    000009e8: 	movq	%rax, %rsi
    000009eb: 	movq	%rax, (%rsp)
    000009ef: 	addq	%r14, %rsi
    000009f2: 	je	.Ltmp1987 # Offset: 2546
    000009f4: 	testq	%rax, %rax
    000009f7: 	je	.Ltmp1988 # Offset: 2551
.Ltmp1987:
    000009fd: 	movq	%r14, 0x30(%rsp)
    00000a02: 	cmpq	$0xf, %r14
    00000a06: 	ja	.Ltmp1989 # Offset: 2566
    00000a0c: 	cmpq	$0x1, %r14
    00000a10: 	jne	.Ltmp1990 # Offset: 2576
    00000a16: 	movq	(%rsp), %rax
    00000a1a: 	movzbl	(%rax), %eax
    00000a1d: 	movb	%al, 0x10(%r15)
.Ltmp2207:
    00000a21: 	movq	%r14, 0x8(%r15)
    00000a25: 	movb	$0x0, (%rdi,%r14)
    00000a2a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000a31: 	addq	$0x20, %rax
    00000a35: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2164:
    00000a3c: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000a43: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000a4a: 	je	.Ltmp1991 # Offset: 2634
.Ltmp2163:
    00000a50: 	movq	-0x20(%rax), %r14
    00000a54: 	callq	clock@PLT # Offset: 2644
    00000a59: 	pxor	%xmm0, %xmm0
    00000a5d: 	movq	%rax, end_time(%rip)
    00000a64: 	movq	%r14, %rdi
    00000a67: 	subq	start_time(%rip), %rax
    00000a6e: 	cvtsi2sd	%rax, %xmm0
    00000a73: 	divsd	DATAat0x23450(%rip), %xmm0
    00000a7b: 	callq	_Z13record_resultdPKc # Offset: 2683
    00000a80: 	movq	0x90(%rsp), %rdi
    00000a88: 	cmpq	0x18(%rsp), %rdi
    00000a8d: 	je	.Ltmp1992 # Offset: 2701
    00000a8f: 	movq	0xa0(%rsp), %rax
    00000a97: 	leaq	0x1(%rax), %rsi
    00000a9b: 	callq	_ZdlPvm@PLT # Offset: 2715
.Ltmp1992:
    00000aa0: 	leaq	DATAat0x233ee(%rip), %rdx
    00000aa7: 	movq	%r13, %rsi
    00000aaa: 	movq	%r12, %rdi
    00000aad: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2733
    00000ab2: 	callq	clock@PLT # Offset: 2738
    00000ab7: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00000abe: 	movq	%rax, start_time(%rip)
    00000ac5: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000acc: 	subq	$0x20, %rax
    00000ad0: 	cmpq	%rax, %r15
    00000ad3: 	je	.Ltmp1993 # Offset: 2771
    00000ad9: 	leaq	0x10(%r15), %rdi
    00000add: 	movq	0x98(%rsp), %r14
    00000ae5: 	movq	%rdi, (%r15)
    00000ae8: 	movq	0x90(%rsp), %rax
    00000af0: 	movq	%rax, %rsi
    00000af3: 	movq	%rax, (%rsp)
    00000af7: 	addq	%r14, %rsi
    00000afa: 	je	.Ltmp1994 # Offset: 2810
    00000afc: 	testq	%rax, %rax
    00000aff: 	je	.Ltmp1995 # Offset: 2815
.Ltmp1994:
    00000b05: 	movq	%r14, 0x30(%rsp)
    00000b0a: 	cmpq	$0xf, %r14
    00000b0e: 	ja	.Ltmp1996 # Offset: 2830
    00000b14: 	cmpq	$0x1, %r14
    00000b18: 	jne	.Ltmp1997 # Offset: 2840
    00000b1e: 	movq	(%rsp), %rax
    00000b22: 	movzbl	(%rax), %eax
    00000b25: 	movb	%al, 0x10(%r15)
.Ltmp2189:
    00000b29: 	movq	%r14, 0x8(%r15)
    00000b2d: 	movb	$0x0, (%rdi,%r14)
    00000b32: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000b39: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000b40: 	addq	$0x20, %rax
    00000b44: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000b4b: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00000b52: 	je	.Ltmp1998 # Offset: 2898
.Ltmp2162:
    00000b58: 	movq	-0x20(%rax), %r14
    00000b5c: 	callq	clock@PLT # Offset: 2908
    00000b61: 	pxor	%xmm0, %xmm0
    00000b65: 	movq	%rax, end_time(%rip)
    00000b6c: 	movq	%r14, %rdi
    00000b6f: 	subq	start_time(%rip), %rax
    00000b76: 	cvtsi2sd	%rax, %xmm0
    00000b7b: 	divsd	DATAat0x23450(%rip), %xmm0
    00000b83: 	callq	_Z13record_resultdPKc # Offset: 2947
    00000b88: 	movq	0x90(%rsp), %rdi
    00000b90: 	cmpq	0x18(%rsp), %rdi
    00000b95: 	je	.Ltmp1999 # Offset: 2965
    00000b97: 	movq	0xa0(%rsp), %rax
    00000b9f: 	leaq	0x1(%rax), %rsi
    00000ba3: 	callq	_ZdlPvm@PLT # Offset: 2979
.Ltmp1999:
    00000ba8: 	leaq	0x70(%rsp), %rdi
    00000bad: 	leaq	DATAat0x232a5(%rip), %rdx
    00000bb4: 	movq	%r13, %rsi
    00000bb7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2999
    00000bbc: 	movl	iterations(%rip), %edx
    00000bc2: 	movq	0x70(%rsp), %rdi
    00000bc7: 	xorl	%r8d, %r8d
    00000bca: 	xorl	%ecx, %ecx
    00000bcc: 	movl	$0x1f40, %esi
    00000bd1: 	callq	_Z9summarizePKciiii # Offset: 3025
    00000bd6: 	movslq	base_iterations(%rip), %rax
    00000bdd: 	movq	%r13, %rsi
    00000be0: 	movq	%r12, %rdi
    00000be3: 	movq	%rax, %rdx
    00000be6: 	imulq	$0x66666667, %rax, %rax
    00000bed: 	sarl	$0x1f, %edx
    00000bf0: 	sarq	$0x22, %rax
    00000bf4: 	subl	%edx, %eax
    00000bf6: 	leaq	DATAat0x232be(%rip), %rdx
    00000bfd: 	movl	%eax, iterations(%rip)
    00000c03: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3075
    00000c08: 	callq	clock@PLT # Offset: 3080
    00000c0d: 	movl	iterations(%rip), %ecx
    00000c13: 	movq	%rax, start_time(%rip)
    00000c1a: 	testl	%ecx, %ecx
    00000c1c: 	jle	.Ltmp2000 # Offset: 3100
    00000c22: 	movdqa	DATAat0x238b0(%rip), %xmm4
    00000c2a: 	xorl	%r14d, %r14d
    00000c2d: 	leaq	DATAat0x231d2(%rip), %r15
    00000c34: 	movaps	%xmm4, (%rsp)
    00000c38: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2003:
    00000c40: 	movq	%rbp, %rax
    00000c43: 	pxor	%xmm0, %xmm0
    00000c47: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2001:
    00000c50: 	movdqa	(%rsp), %xmm1
    00000c55: 	paddq	(%rax), %xmm1
    00000c59: 	addq	$0x10, %rax
    00000c5d: 	paddq	%xmm1, %xmm0
    00000c61: 	cmpq	%rax, %rbx
    00000c64: 	jne	.Ltmp2001 # Offset: 3172
    00000c66: 	cvttsd2si	init_value(%rip), %rdx
    00000c6f: 	movdqa	%xmm0, %xmm1
    00000c73: 	psrldq	$0x8, %xmm1
    00000c78: 	paddq	%xmm1, %xmm0
    00000c7c: 	movq	%xmm0, %rax
    00000c81: 	addq	$0xa, %rdx
    00000c85: 	imulq	$0x1f40, %rdx, %rdx
    00000c8c: 	cmpq	%rax, %rdx
    00000c8f: 	je	.Ltmp2002 # Offset: 3215
    00000c91: 	movl	current_test(%rip), %edx
    00000c97: 	movq	%r15, %rsi
    00000c9a: 	movl	$0x1, %edi
    00000c9f: 	xorl	%eax, %eax
    00000ca1: 	callq	__printf_chk@PLT # Offset: 3233
    00000ca6: 	movl	iterations(%rip), %ecx
.Ltmp2002:
    00000cac: 	addl	$0x1, %r14d
    00000cb0: 	cmpl	%ecx, %r14d
    00000cb3: 	jl	.Ltmp2003 # Offset: 3251
.Ltmp2000:
    00000cb5: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000cbc: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00000cc3: 	subq	$0x20, %rax
    00000cc7: 	cmpq	%rax, %r15
    00000cca: 	je	.Ltmp2004 # Offset: 3274
    00000cd0: 	leaq	0x10(%r15), %rdi
    00000cd4: 	movq	0x98(%rsp), %r14
    00000cdc: 	movq	%rdi, (%r15)
    00000cdf: 	movq	0x90(%rsp), %rax
    00000ce7: 	movq	%rax, %rsi
    00000cea: 	movq	%rax, (%rsp)
    00000cee: 	addq	%r14, %rsi
    00000cf1: 	je	.Ltmp2005 # Offset: 3313
    00000cf3: 	testq	%rax, %rax
    00000cf6: 	je	.Ltmp2006 # Offset: 3318
.Ltmp2005:
    00000cfc: 	movq	%r14, 0x30(%rsp)
    00000d01: 	cmpq	$0xf, %r14
    00000d05: 	ja	.Ltmp2007 # Offset: 3333
    00000d0b: 	cmpq	$0x1, %r14
    00000d0f: 	jne	.Ltmp2008 # Offset: 3343
    00000d15: 	movq	(%rsp), %rax
    00000d19: 	movzbl	(%rax), %eax
    00000d1c: 	movb	%al, 0x10(%r15)
.Ltmp2192:
    00000d20: 	movq	%r14, 0x8(%r15)
    00000d24: 	movb	$0x0, (%rdi,%r14)
    00000d29: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000d30: 	addq	$0x20, %rax
    00000d34: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2188:
    00000d3b: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000d42: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000d49: 	je	.Ltmp2009 # Offset: 3401
.Ltmp2187:
    00000d4f: 	movq	-0x20(%rax), %r14
    00000d53: 	callq	clock@PLT # Offset: 3411
    00000d58: 	pxor	%xmm0, %xmm0
    00000d5c: 	movq	%rax, end_time(%rip)
    00000d63: 	movq	%r14, %rdi
    00000d66: 	subq	start_time(%rip), %rax
    00000d6d: 	cvtsi2sd	%rax, %xmm0
    00000d72: 	divsd	DATAat0x23450(%rip), %xmm0
    00000d7a: 	callq	_Z13record_resultdPKc # Offset: 3450
    00000d7f: 	movq	0x90(%rsp), %rdi
    00000d87: 	cmpq	0x18(%rsp), %rdi
    00000d8c: 	je	.Ltmp2010 # Offset: 3468
    00000d8e: 	movq	0xa0(%rsp), %rax
    00000d96: 	leaq	0x1(%rax), %rsi
    00000d9a: 	callq	_ZdlPvm@PLT # Offset: 3482
.Ltmp2010:
    00000d9f: 	leaq	DATAat0x232cc(%rip), %rdx
    00000da6: 	movq	%r13, %rsi
    00000da9: 	movq	%r12, %rdi
    00000dac: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3500
    00000db1: 	callq	clock@PLT # Offset: 3505
    00000db6: 	movl	iterations(%rip), %ecx
    00000dbc: 	movq	%rax, start_time(%rip)
    00000dc3: 	testl	%ecx, %ecx
    00000dc5: 	jle	.Ltmp2011 # Offset: 3525
    00000dcb: 	movdqa	DATAat0x238b0(%rip), %xmm5
    00000dd3: 	xorl	%r14d, %r14d
    00000dd6: 	leaq	DATAat0x231d2(%rip), %r15
    00000ddd: 	movaps	%xmm5, (%rsp)
    00000de1: 	nopl	(%rax) # Size: 7
.Ltmp2014:
    00000de8: 	movq	%rbp, %rax
    00000deb: 	pxor	%xmm0, %xmm0
    00000def: 	nop # Size: 1
.Ltmp2012:
    00000df0: 	movdqa	(%rsp), %xmm1
    00000df5: 	paddq	(%rax), %xmm1
    00000df9: 	addq	$0x10, %rax
    00000dfd: 	paddq	%xmm1, %xmm0
    00000e01: 	cmpq	%rbx, %rax
    00000e04: 	jne	.Ltmp2012 # Offset: 3588
    00000e06: 	cvttsd2si	init_value(%rip), %rdx
    00000e0f: 	movdqa	%xmm0, %xmm1
    00000e13: 	psrldq	$0x8, %xmm1
    00000e18: 	paddq	%xmm1, %xmm0
    00000e1c: 	movq	%xmm0, %rax
    00000e21: 	addq	$0xa, %rdx
    00000e25: 	imulq	$0x1f40, %rdx, %rdx
    00000e2c: 	cmpq	%rax, %rdx
    00000e2f: 	je	.Ltmp2013 # Offset: 3631
    00000e31: 	movl	current_test(%rip), %edx
    00000e37: 	movq	%r15, %rsi
    00000e3a: 	movl	$0x1, %edi
    00000e3f: 	xorl	%eax, %eax
    00000e41: 	callq	__printf_chk@PLT # Offset: 3649
    00000e46: 	movl	iterations(%rip), %ecx
.Ltmp2013:
    00000e4c: 	addl	$0x1, %r14d
    00000e50: 	cmpl	%ecx, %r14d
    00000e53: 	jl	.Ltmp2014 # Offset: 3667
.Ltmp2011:
    00000e55: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000e5c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00000e63: 	subq	$0x20, %rax
    00000e67: 	cmpq	%rax, %r15
    00000e6a: 	je	.Ltmp2015 # Offset: 3690
    00000e70: 	leaq	0x10(%r15), %rdi
    00000e74: 	movq	0x98(%rsp), %r14
    00000e7c: 	movq	%rdi, (%r15)
    00000e7f: 	movq	0x90(%rsp), %rax
    00000e87: 	movq	%rax, %rsi
    00000e8a: 	movq	%rax, (%rsp)
    00000e8e: 	addq	%r14, %rsi
    00000e91: 	je	.Ltmp2016 # Offset: 3729
    00000e93: 	testq	%rax, %rax
    00000e96: 	je	.Ltmp2017 # Offset: 3734
.Ltmp2016:
    00000e9c: 	movq	%r14, 0x30(%rsp)
    00000ea1: 	cmpq	$0xf, %r14
    00000ea5: 	ja	.Ltmp2018 # Offset: 3749
    00000eab: 	cmpq	$0x1, %r14
    00000eaf: 	jne	.Ltmp2019 # Offset: 3759
    00000eb5: 	movq	(%rsp), %rax
    00000eb9: 	movzbl	(%rax), %eax
    00000ebc: 	movb	%al, 0x10(%r15)
.Ltmp2190:
    00000ec0: 	movq	%r14, 0x8(%r15)
    00000ec4: 	movb	$0x0, (%rdi,%r14)
    00000ec9: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000ed0: 	addq	$0x20, %rax
    00000ed4: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2186:
    00000edb: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000ee2: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000ee9: 	je	.Ltmp2020 # Offset: 3817
.Ltmp2185:
    00000eef: 	movq	-0x20(%rax), %r14
    00000ef3: 	callq	clock@PLT # Offset: 3827
    00000ef8: 	pxor	%xmm0, %xmm0
    00000efc: 	movq	%rax, end_time(%rip)
    00000f03: 	movq	%r14, %rdi
    00000f06: 	subq	start_time(%rip), %rax
    00000f0d: 	cvtsi2sd	%rax, %xmm0
    00000f12: 	divsd	DATAat0x23450(%rip), %xmm0
    00000f1a: 	callq	_Z13record_resultdPKc # Offset: 3866
    00000f1f: 	movq	0x90(%rsp), %rdi
    00000f27: 	cmpq	0x18(%rsp), %rdi
    00000f2c: 	je	.Ltmp2021 # Offset: 3884
    00000f2e: 	movq	0xa0(%rsp), %rax
    00000f36: 	leaq	0x1(%rax), %rsi
    00000f3a: 	callq	_ZdlPvm@PLT # Offset: 3898
.Ltmp2021:
    00000f3f: 	leaq	DATAat0x232e4(%rip), %rdx
    00000f46: 	movq	%r13, %rsi
    00000f49: 	movq	%r12, %rdi
    00000f4c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3916
    00000f51: 	callq	clock@PLT # Offset: 3921
    00000f56: 	movl	iterations(%rip), %ecx
    00000f5c: 	movq	%rax, start_time(%rip)
    00000f63: 	testl	%ecx, %ecx
    00000f65: 	jle	.Ltmp2022 # Offset: 3941
    00000f6b: 	movdqa	DATAat0x238c0(%rip), %xmm6
    00000f73: 	xorl	%r14d, %r14d
    00000f76: 	leaq	DATAat0x231d2(%rip), %r15
    00000f7d: 	movaps	%xmm6, (%rsp)
    00000f81: 	nopl	(%rax) # Size: 7
.Ltmp2025:
    00000f88: 	movq	%rbp, %rax
    00000f8b: 	pxor	%xmm0, %xmm0
    00000f8f: 	nop # Size: 1
.Ltmp2023:
    00000f90: 	movdqa	(%rsp), %xmm1
    00000f95: 	paddq	(%rax), %xmm1
    00000f99: 	addq	$0x10, %rax
    00000f9d: 	paddq	%xmm1, %xmm0
    00000fa1: 	cmpq	%rbx, %rax
    00000fa4: 	jne	.Ltmp2023 # Offset: 4004
    00000fa6: 	cvttsd2si	init_value(%rip), %rdx
    00000faf: 	movdqa	%xmm0, %xmm1
    00000fb3: 	psrldq	$0x8, %xmm1
    00000fb8: 	paddq	%xmm1, %xmm0
    00000fbc: 	movq	%xmm0, %rax
    00000fc1: 	subq	$0xa, %rdx
    00000fc5: 	imulq	$0x1f40, %rdx, %rdx
    00000fcc: 	cmpq	%rax, %rdx
    00000fcf: 	je	.Ltmp2024 # Offset: 4047
    00000fd1: 	movl	current_test(%rip), %edx
    00000fd7: 	movq	%r15, %rsi
    00000fda: 	movl	$0x1, %edi
    00000fdf: 	xorl	%eax, %eax
    00000fe1: 	callq	__printf_chk@PLT # Offset: 4065
    00000fe6: 	movl	iterations(%rip), %ecx
.Ltmp2024:
    00000fec: 	addl	$0x1, %r14d
    00000ff0: 	cmpl	%ecx, %r14d
    00000ff3: 	jl	.Ltmp2025 # Offset: 4083
.Ltmp2022:
    00000ff5: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000ffc: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00001003: 	subq	$0x20, %rax
    00001007: 	cmpq	%rax, %r15
    0000100a: 	je	.Ltmp2026 # Offset: 4106
    00001010: 	leaq	0x10(%r15), %rdi
    00001014: 	movq	0x98(%rsp), %r14
    0000101c: 	movq	%rdi, (%r15)
    0000101f: 	movq	0x90(%rsp), %rax
    00001027: 	movq	%rax, %rsi
    0000102a: 	movq	%rax, (%rsp)
    0000102e: 	addq	%r14, %rsi
    00001031: 	je	.Ltmp2027 # Offset: 4145
    00001033: 	testq	%rax, %rax
    00001036: 	je	.Ltmp2028 # Offset: 4150
.Ltmp2027:
    0000103c: 	movq	%r14, 0x30(%rsp)
    00001041: 	cmpq	$0xf, %r14
    00001045: 	ja	.Ltmp2029 # Offset: 4165
    0000104b: 	cmpq	$0x1, %r14
    0000104f: 	jne	.Ltmp2030 # Offset: 4175
    00001055: 	movq	(%rsp), %rax
    00001059: 	movzbl	(%rax), %eax
    0000105c: 	movb	%al, 0x10(%r15)
.Ltmp2200:
    00001060: 	movq	%r14, 0x8(%r15)
    00001064: 	movb	$0x0, (%rdi,%r14)
    00001069: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001070: 	addq	$0x20, %rax
    00001074: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2184:
    0000107b: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001082: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001089: 	je	.Ltmp2031 # Offset: 4233
.Ltmp2183:
    0000108f: 	movq	-0x20(%rax), %r14
    00001093: 	callq	clock@PLT # Offset: 4243
    00001098: 	pxor	%xmm0, %xmm0
    0000109c: 	movq	%rax, end_time(%rip)
    000010a3: 	movq	%r14, %rdi
    000010a6: 	subq	start_time(%rip), %rax
    000010ad: 	cvtsi2sd	%rax, %xmm0
    000010b2: 	divsd	DATAat0x23450(%rip), %xmm0
    000010ba: 	callq	_Z13record_resultdPKc # Offset: 4282
    000010bf: 	movq	0x90(%rsp), %rdi
    000010c7: 	cmpq	0x18(%rsp), %rdi
    000010cc: 	je	.Ltmp2032 # Offset: 4300
    000010ce: 	movq	0xa0(%rsp), %rax
    000010d6: 	leaq	0x1(%rax), %rsi
    000010da: 	callq	_ZdlPvm@PLT # Offset: 4314
.Ltmp2032:
    000010df: 	leaq	DATAat0x232f7(%rip), %rdx
    000010e6: 	movq	%r13, %rsi
    000010e9: 	movq	%r12, %rdi
    000010ec: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4332
    000010f1: 	callq	clock@PLT # Offset: 4337
    000010f6: 	movl	iterations(%rip), %ecx
    000010fc: 	movq	%rax, start_time(%rip)
    00001103: 	testl	%ecx, %ecx
    00001105: 	jle	.Ltmp2033 # Offset: 4357
    0000110b: 	movdqa	DATAat0x238c0(%rip), %xmm7
    00001113: 	xorl	%r14d, %r14d
    00001116: 	leaq	DATAat0x231d2(%rip), %r15
    0000111d: 	movaps	%xmm7, (%rsp)
    00001121: 	nopl	(%rax) # Size: 7
.Ltmp2036:
    00001128: 	movq	%rbp, %rax
    0000112b: 	pxor	%xmm0, %xmm0
    0000112f: 	nop # Size: 1
.Ltmp2034:
    00001130: 	movdqa	(%rsp), %xmm1
    00001135: 	paddq	(%rax), %xmm1
    00001139: 	addq	$0x10, %rax
    0000113d: 	paddq	%xmm1, %xmm0
    00001141: 	cmpq	%rbx, %rax
    00001144: 	jne	.Ltmp2034 # Offset: 4420
    00001146: 	cvttsd2si	init_value(%rip), %rdx
    0000114f: 	movdqa	%xmm0, %xmm1
    00001153: 	psrldq	$0x8, %xmm1
    00001158: 	paddq	%xmm1, %xmm0
    0000115c: 	movq	%xmm0, %rax
    00001161: 	subq	$0xa, %rdx
    00001165: 	imulq	$0x1f40, %rdx, %rdx
    0000116c: 	cmpq	%rax, %rdx
    0000116f: 	je	.Ltmp2035 # Offset: 4463
    00001171: 	movl	current_test(%rip), %edx
    00001177: 	movq	%r15, %rsi
    0000117a: 	movl	$0x1, %edi
    0000117f: 	xorl	%eax, %eax
    00001181: 	callq	__printf_chk@PLT # Offset: 4481
    00001186: 	movl	iterations(%rip), %ecx
.Ltmp2035:
    0000118c: 	addl	$0x1, %r14d
    00001190: 	cmpl	%ecx, %r14d
    00001193: 	jl	.Ltmp2036 # Offset: 4499
.Ltmp2033:
    00001195: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000119c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    000011a3: 	subq	$0x20, %rax
    000011a7: 	cmpq	%rax, %r15
    000011aa: 	je	.Ltmp2037 # Offset: 4522
    000011b0: 	leaq	0x10(%r15), %rdi
    000011b4: 	movq	0x98(%rsp), %r14
    000011bc: 	movq	%rdi, (%r15)
    000011bf: 	movq	0x90(%rsp), %rax
    000011c7: 	movq	%rax, %rsi
    000011ca: 	movq	%rax, (%rsp)
    000011ce: 	addq	%r14, %rsi
    000011d1: 	je	.Ltmp2038 # Offset: 4561
    000011d3: 	testq	%rax, %rax
    000011d6: 	je	.Ltmp2039 # Offset: 4566
.Ltmp2038:
    000011dc: 	movq	%r14, 0x30(%rsp)
    000011e1: 	cmpq	$0xf, %r14
    000011e5: 	ja	.Ltmp2040 # Offset: 4581
    000011eb: 	cmpq	$0x1, %r14
    000011ef: 	jne	.Ltmp2041 # Offset: 4591
    000011f5: 	movq	(%rsp), %rax
    000011f9: 	movzbl	(%rax), %eax
    000011fc: 	movb	%al, 0x10(%r15)
.Ltmp2196:
    00001200: 	movq	%r14, 0x8(%r15)
    00001204: 	movb	$0x0, (%rdi,%r14)
    00001209: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001210: 	addq	$0x20, %rax
    00001214: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2182:
    0000121b: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001222: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001229: 	je	.Ltmp2042 # Offset: 4649
.Ltmp2181:
    0000122f: 	movq	-0x20(%rax), %r14
    00001233: 	callq	clock@PLT # Offset: 4659
    00001238: 	pxor	%xmm0, %xmm0
    0000123c: 	movq	%rax, end_time(%rip)
    00001243: 	movq	%r14, %rdi
    00001246: 	subq	start_time(%rip), %rax
    0000124d: 	cvtsi2sd	%rax, %xmm0
    00001252: 	divsd	DATAat0x23450(%rip), %xmm0
    0000125a: 	callq	_Z13record_resultdPKc # Offset: 4698
    0000125f: 	movq	0x90(%rsp), %rdi
    00001267: 	cmpq	0x18(%rsp), %rdi
    0000126c: 	je	.Ltmp2043 # Offset: 4716
    0000126e: 	movq	0xa0(%rsp), %rax
    00001276: 	leaq	0x1(%rax), %rsi
    0000127a: 	callq	_ZdlPvm@PLT # Offset: 4730
.Ltmp2043:
    0000127f: 	leaq	DATAat0x23314(%rip), %rdx
    00001286: 	movq	%r13, %rsi
    00001289: 	movq	%r12, %rdi
    0000128c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4748
    00001291: 	callq	clock@PLT # Offset: 4753
    00001296: 	movl	iterations(%rip), %edi
    0000129c: 	xorl	%r14d, %r14d
    0000129f: 	leaq	DATAat0x231d2(%rip), %r15
    000012a6: 	movq	%rax, start_time(%rip)
    000012ad: 	testl	%edi, %edi
    000012af: 	jle	.Ltmp2044 # Offset: 4783
    000012b1: 	nopl	(%rax) # Size: 7
.Ltmp2047:
    000012b8: 	movq	%rbp, %rax
    000012bb: 	xorl	%esi, %esi
    000012bd: 	nopl	(%rax) # Size: 3
.Ltmp2045:
    000012c0: 	movq	(%rax), %rcx
    000012c3: 	addq	$0x8, %rax
    000012c7: 	movq	%rcx, %rdx
    000012ca: 	shlq	$0x4, %rdx
    000012ce: 	subq	%rcx, %rdx
    000012d1: 	leaq	(%rsi,%rdx,8), %rsi
    000012d5: 	cmpq	%rbx, %rax
    000012d8: 	jne	.Ltmp2045 # Offset: 4824
    000012da: 	cvttsd2si	init_value(%rip), %rax
    000012e3: 	imulq	$0xea600, %rax, %rax
    000012ea: 	cmpq	%rax, %rsi
    000012ed: 	je	.Ltmp2046 # Offset: 4845
    000012ef: 	movl	current_test(%rip), %edx
    000012f5: 	movq	%r15, %rsi
    000012f8: 	movl	$0x1, %edi
    000012fd: 	xorl	%eax, %eax
    000012ff: 	callq	__printf_chk@PLT # Offset: 4863
    00001304: 	movl	iterations(%rip), %edi
.Ltmp2046:
    0000130a: 	addl	$0x1, %r14d
    0000130e: 	cmpl	%edi, %r14d
    00001311: 	jl	.Ltmp2047 # Offset: 4881
.Ltmp2044:
    00001313: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000131a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00001321: 	subq	$0x20, %rax
    00001325: 	cmpq	%rax, %r15
    00001328: 	je	.Ltmp2048 # Offset: 4904
    0000132e: 	leaq	0x10(%r15), %rdi
    00001332: 	movq	0x98(%rsp), %r14
    0000133a: 	movq	%rdi, (%r15)
    0000133d: 	movq	0x90(%rsp), %rax
    00001345: 	movq	%rax, %rsi
    00001348: 	movq	%rax, (%rsp)
    0000134c: 	addq	%r14, %rsi
    0000134f: 	je	.Ltmp2049 # Offset: 4943
    00001351: 	testq	%rax, %rax
    00001354: 	je	.Ltmp2050 # Offset: 4948
.Ltmp2049:
    0000135a: 	movq	%r14, 0x30(%rsp)
    0000135f: 	cmpq	$0xf, %r14
    00001363: 	ja	.Ltmp2051 # Offset: 4963
    00001369: 	cmpq	$0x1, %r14
    0000136d: 	jne	.Ltmp2052 # Offset: 4973
    00001373: 	movq	(%rsp), %rax
    00001377: 	movzbl	(%rax), %eax
    0000137a: 	movb	%al, 0x10(%r15)
.Ltmp2198:
    0000137e: 	movq	%r14, 0x8(%r15)
    00001382: 	movb	$0x0, (%rdi,%r14)
    00001387: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000138e: 	addq	$0x20, %rax
    00001392: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2180:
    00001399: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000013a0: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000013a7: 	je	.Ltmp2053 # Offset: 5031
.Ltmp2179:
    000013ad: 	movq	-0x20(%rax), %r14
    000013b1: 	callq	clock@PLT # Offset: 5041
    000013b6: 	pxor	%xmm0, %xmm0
    000013ba: 	movq	%rax, end_time(%rip)
    000013c1: 	movq	%r14, %rdi
    000013c4: 	subq	start_time(%rip), %rax
    000013cb: 	cvtsi2sd	%rax, %xmm0
    000013d0: 	divsd	DATAat0x23450(%rip), %xmm0
    000013d8: 	callq	_Z13record_resultdPKc # Offset: 5080
    000013dd: 	movq	0x90(%rsp), %rdi
    000013e5: 	cmpq	0x18(%rsp), %rdi
    000013ea: 	je	.Ltmp2054 # Offset: 5098
    000013ec: 	movq	0xa0(%rsp), %rax
    000013f4: 	leaq	0x1(%rax), %rsi
    000013f8: 	callq	_ZdlPvm@PLT # Offset: 5112
.Ltmp2054:
    000013fd: 	leaq	DATAat0x23327(%rip), %rdx
    00001404: 	movq	%r13, %rsi
    00001407: 	movq	%r12, %rdi
    0000140a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5130
    0000140f: 	callq	clock@PLT # Offset: 5135
    00001414: 	movl	iterations(%rip), %edi
    0000141a: 	xorl	%r14d, %r14d
    0000141d: 	leaq	DATAat0x231d2(%rip), %r15
    00001424: 	movq	%rax, start_time(%rip)
    0000142b: 	testl	%edi, %edi
    0000142d: 	jle	.Ltmp2055 # Offset: 5165
    0000142f: 	nop # Size: 1
.Ltmp2058:
    00001430: 	movq	%rbp, %rax
    00001433: 	xorl	%esi, %esi
    00001435: 	nopl	(%rax) # Size: 3
.Ltmp2056:
    00001438: 	movq	(%rax), %rcx
    0000143b: 	addq	$0x8, %rax
    0000143f: 	movq	%rcx, %rdx
    00001442: 	shlq	$0x4, %rdx
    00001446: 	subq	%rcx, %rdx
    00001449: 	leaq	(%rsi,%rdx,8), %rsi
    0000144d: 	cmpq	%rbx, %rax
    00001450: 	jne	.Ltmp2056 # Offset: 5200
    00001452: 	cvttsd2si	init_value(%rip), %rax
    0000145b: 	imulq	$0xea600, %rax, %rax
    00001462: 	cmpq	%rax, %rsi
    00001465: 	je	.Ltmp2057 # Offset: 5221
    00001467: 	movl	current_test(%rip), %edx
    0000146d: 	movq	%r15, %rsi
    00001470: 	movl	$0x1, %edi
    00001475: 	xorl	%eax, %eax
    00001477: 	callq	__printf_chk@PLT # Offset: 5239
    0000147c: 	movl	iterations(%rip), %edi
.Ltmp2057:
    00001482: 	addl	$0x1, %r14d
    00001486: 	cmpl	%edi, %r14d
    00001489: 	jl	.Ltmp2058 # Offset: 5257
.Ltmp2055:
    0000148b: 	movq	%r12, %rsi
    0000148e: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00001495: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5269
    0000149a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000014a1: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000014a8: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000014af: 	je	.Ltmp2059 # Offset: 5295
.Ltmp2178:
    000014b5: 	movq	-0x20(%rax), %r14
    000014b9: 	callq	clock@PLT # Offset: 5305
    000014be: 	pxor	%xmm0, %xmm0
    000014c2: 	movq	%rax, end_time(%rip)
    000014c9: 	movq	%r14, %rdi
    000014cc: 	subq	start_time(%rip), %rax
    000014d3: 	cvtsi2sd	%rax, %xmm0
    000014d8: 	divsd	DATAat0x23450(%rip), %xmm0
    000014e0: 	callq	_Z13record_resultdPKc # Offset: 5344
    000014e5: 	movq	0x90(%rsp), %rdi
    000014ed: 	cmpq	0x18(%rsp), %rdi
    000014f2: 	je	.Ltmp2060 # Offset: 5362
    000014f4: 	movq	0xa0(%rsp), %rax
    000014fc: 	leaq	0x1(%rax), %rsi
    00001500: 	callq	_ZdlPvm@PLT # Offset: 5376
.Ltmp2060:
    00001505: 	leaq	DATAat0x23345(%rip), %rdx
    0000150c: 	movq	%r13, %rsi
    0000150f: 	movq	%r12, %rdi
    00001512: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5394
    00001517: 	callq	clock@PLT # Offset: 5399
    0000151c: 	movl	iterations(%rip), %ecx
    00001522: 	xorl	%r14d, %r14d
    00001525: 	leaq	DATAat0x231d2(%rip), %r15
    0000152c: 	movq	%rax, start_time(%rip)
    00001533: 	testl	%ecx, %ecx
    00001535: 	jle	.Ltmp2061 # Offset: 5429
    0000153b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2064:
    00001540: 	movq	%rbp, %rax
    00001543: 	pxor	%xmm0, %xmm0
    00001547: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2062:
    00001550: 	movdqa	DATAat0x238d0(%rip), %xmm1
    00001558: 	paddq	(%rax), %xmm1
    0000155c: 	addq	$0x10, %rax
    00001560: 	paddq	%xmm1, %xmm0
    00001564: 	cmpq	%rbx, %rax
    00001567: 	jne	.Ltmp2062 # Offset: 5479
    00001569: 	cvttsd2si	init_value(%rip), %rdx
    00001572: 	movdqa	%xmm0, %xmm1
    00001576: 	psrldq	$0x8, %xmm1
    0000157b: 	paddq	%xmm1, %xmm0
    0000157f: 	movq	%xmm0, %rax
    00001584: 	addq	$0x78, %rdx
    00001588: 	imulq	$0x1f40, %rdx, %rdx
    0000158f: 	cmpq	%rax, %rdx
    00001592: 	je	.Ltmp2063 # Offset: 5522
    00001594: 	movl	current_test(%rip), %edx
    0000159a: 	movq	%r15, %rsi
    0000159d: 	movl	$0x1, %edi
    000015a2: 	xorl	%eax, %eax
    000015a4: 	callq	__printf_chk@PLT # Offset: 5540
    000015a9: 	movl	iterations(%rip), %ecx
.Ltmp2063:
    000015af: 	addl	$0x1, %r14d
    000015b3: 	cmpl	%ecx, %r14d
    000015b6: 	jl	.Ltmp2064 # Offset: 5558
.Ltmp2061:
    000015b8: 	movq	%r12, %rsi
    000015bb: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000015c2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5570
    000015c7: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000015ce: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000015d5: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000015dc: 	je	.Ltmp2065 # Offset: 5596
.Ltmp2177:
    000015e2: 	movq	-0x20(%rax), %r14
    000015e6: 	callq	clock@PLT # Offset: 5606
    000015eb: 	pxor	%xmm0, %xmm0
    000015ef: 	movq	%rax, end_time(%rip)
    000015f6: 	movq	%r14, %rdi
    000015f9: 	subq	start_time(%rip), %rax
    00001600: 	cvtsi2sd	%rax, %xmm0
    00001605: 	divsd	DATAat0x23450(%rip), %xmm0
    0000160d: 	callq	_Z13record_resultdPKc # Offset: 5645
    00001612: 	movq	0x90(%rsp), %rdi
    0000161a: 	cmpq	0x18(%rsp), %rdi
    0000161f: 	je	.Ltmp2066 # Offset: 5663
    00001621: 	movq	0xa0(%rsp), %rax
    00001629: 	leaq	0x1(%rax), %rsi
    0000162d: 	callq	_ZdlPvm@PLT # Offset: 5677
.Ltmp2066:
    00001632: 	leaq	DATAat0x23362(%rip), %rdx
    00001639: 	movq	%r13, %rsi
    0000163c: 	movq	%r12, %rdi
    0000163f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5695
    00001644: 	callq	clock@PLT # Offset: 5700
    00001649: 	xorl	%r15d, %r15d
    0000164c: 	movl	iterations(%rip), %r8d
    00001653: 	movabsq	$0x6666666666666667, %r14
    0000165d: 	movq	%rax, start_time(%rip)
    00001664: 	testl	%r8d, %r8d
    00001667: 	jle	.Ltmp2067 # Offset: 5735
    00001669: 	nopl	(%rax) # Size: 7
.Ltmp2070:
    00001670: 	movq	%rbp, %rsi
    00001673: 	xorl	%edi, %edi
    00001675: 	nopl	(%rax) # Size: 3
.Ltmp2068:
    00001678: 	movq	(%rsi), %rcx
    0000167b: 	addq	$0x8, %rsi
    0000167f: 	movq	%rcx, %rax
    00001682: 	sarq	$0x3f, %rcx
    00001686: 	imulq	%r14
    00001689: 	sarq	%rdx
    0000168c: 	subq	%rcx, %rdx
    0000168f: 	addq	%rdx, %rdi
    00001692: 	cmpq	%rbx, %rsi
    00001695: 	jne	.Ltmp2068 # Offset: 5781
    00001697: 	cvttsd2si	init_value(%rip), %rcx
    000016a0: 	movq	%rcx, %rax
    000016a3: 	sarq	$0x3f, %rcx
    000016a7: 	imulq	%r14
    000016aa: 	sarq	%rdx
    000016ad: 	subq	%rcx, %rdx
    000016b0: 	imulq	$0x1f40, %rdx, %rdx
    000016b7: 	cmpq	%rdx, %rdi
    000016ba: 	je	.Ltmp2069 # Offset: 5818
    000016bc: 	movl	current_test(%rip), %edx
    000016c2: 	leaq	DATAat0x231d2(%rip), %rsi
    000016c9: 	movl	$0x1, %edi
    000016ce: 	xorl	%eax, %eax
    000016d0: 	callq	__printf_chk@PLT # Offset: 5840
    000016d5: 	movl	iterations(%rip), %r8d
.Ltmp2069:
    000016dc: 	addl	$0x1, %r15d
    000016e0: 	cmpl	%r8d, %r15d
    000016e3: 	jl	.Ltmp2070 # Offset: 5859
.Ltmp2067:
    000016e5: 	movq	%r12, %rsi
    000016e8: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000016ef: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5871
    000016f4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000016fb: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001702: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001709: 	je	.Ltmp2071 # Offset: 5897
.Ltmp2176:
    0000170f: 	movq	-0x20(%rax), %r14
    00001713: 	callq	clock@PLT # Offset: 5907
    00001718: 	pxor	%xmm0, %xmm0
    0000171c: 	movq	%rax, end_time(%rip)
    00001723: 	movq	%r14, %rdi
    00001726: 	subq	start_time(%rip), %rax
    0000172d: 	cvtsi2sd	%rax, %xmm0
    00001732: 	divsd	DATAat0x23450(%rip), %xmm0
    0000173a: 	callq	_Z13record_resultdPKc # Offset: 5946
    0000173f: 	movq	0x90(%rsp), %rdi
    00001747: 	cmpq	0x18(%rsp), %rdi
    0000174c: 	je	.Ltmp2072 # Offset: 5964
    0000174e: 	movq	0xa0(%rsp), %rax
    00001756: 	leaq	0x1(%rax), %rsi
    0000175a: 	callq	_ZdlPvm@PLT # Offset: 5978
.Ltmp2072:
    0000175f: 	leaq	DATAat0x23373(%rip), %rdx
    00001766: 	movq	%r13, %rsi
    00001769: 	movq	%r12, %rdi
    0000176c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5996
    00001771: 	callq	clock@PLT # Offset: 6001
    00001776: 	movl	iterations(%rip), %edi
    0000177c: 	xorl	%r15d, %r15d
    0000177f: 	movabsq	$-0x7777777777777777, %r14
    00001789: 	movq	%rax, start_time(%rip)
    00001790: 	testl	%edi, %edi
    00001792: 	jle	.Ltmp2073 # Offset: 6034
    00001798: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2076:
    000017a0: 	movq	%rbp, %rcx
    000017a3: 	xorl	%esi, %esi
    000017a5: 	nopl	(%rax) # Size: 3
.Ltmp2074:
    000017a8: 	movq	(%rcx), %r8
    000017ab: 	addq	$0x8, %rcx
    000017af: 	movq	%r8, %rax
    000017b2: 	imulq	%r14
    000017b5: 	addq	%r8, %rdx
    000017b8: 	sarq	$0x3f, %r8
    000017bc: 	sarq	$0x6, %rdx
    000017c0: 	subq	%r8, %rdx
    000017c3: 	addq	%rdx, %rsi
    000017c6: 	cmpq	%rbx, %rcx
    000017c9: 	jne	.Ltmp2074 # Offset: 6089
    000017cb: 	cvttsd2si	init_value(%rip), %rcx
    000017d4: 	movq	%rcx, %rax
    000017d7: 	imulq	%r14
    000017da: 	addq	%rcx, %rdx
    000017dd: 	sarq	$0x3f, %rcx
    000017e1: 	sarq	$0x6, %rdx
    000017e5: 	subq	%rcx, %rdx
    000017e8: 	imulq	$0x1f40, %rdx, %rax
    000017ef: 	cmpq	%rax, %rsi
    000017f2: 	je	.Ltmp2075 # Offset: 6130
    000017f4: 	movl	current_test(%rip), %edx
    000017fa: 	leaq	DATAat0x231d2(%rip), %rsi
    00001801: 	movl	$0x1, %edi
    00001806: 	xorl	%eax, %eax
    00001808: 	callq	__printf_chk@PLT # Offset: 6152
    0000180d: 	movl	iterations(%rip), %edi
.Ltmp2075:
    00001813: 	addl	$0x1, %r15d
    00001817: 	cmpl	%edi, %r15d
    0000181a: 	jl	.Ltmp2076 # Offset: 6170
.Ltmp2073:
    0000181c: 	movq	%r12, %rsi
    0000181f: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00001826: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6182
    0000182b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001832: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001839: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001840: 	je	.Ltmp2077 # Offset: 6208
.Ltmp2175:
    00001846: 	movq	-0x20(%rax), %r14
    0000184a: 	callq	clock@PLT # Offset: 6218
    0000184f: 	pxor	%xmm0, %xmm0
    00001853: 	movq	%rax, end_time(%rip)
    0000185a: 	movq	%r14, %rdi
    0000185d: 	subq	start_time(%rip), %rax
    00001864: 	cvtsi2sd	%rax, %xmm0
    00001869: 	divsd	DATAat0x23450(%rip), %xmm0
    00001871: 	callq	_Z13record_resultdPKc # Offset: 6257
    00001876: 	movq	0x90(%rsp), %rdi
    0000187e: 	cmpq	0x18(%rsp), %rdi
    00001883: 	je	.Ltmp2078 # Offset: 6275
    00001885: 	movq	0xa0(%rsp), %rax
    0000188d: 	leaq	0x1(%rax), %rsi
    00001891: 	callq	_ZdlPvm@PLT # Offset: 6289
.Ltmp2078:
    00001896: 	leaq	DATAat0x2338e(%rip), %rdx
    0000189d: 	movq	%r13, %rsi
    000018a0: 	movq	%r12, %rdi
    000018a3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6307
    000018a8: 	callq	clock@PLT # Offset: 6312
    000018ad: 	movl	iterations(%rip), %ecx
    000018b3: 	xorl	%r14d, %r14d
    000018b6: 	leaq	DATAat0x231d2(%rip), %r15
    000018bd: 	movq	%rax, start_time(%rip)
    000018c4: 	testl	%ecx, %ecx
    000018c6: 	jle	.Ltmp2079 # Offset: 6342
    000018cc: 	nopl	(%rax) # Size: 4
.Ltmp2082:
    000018d0: 	movq	%rbp, %rax
    000018d3: 	pxor	%xmm0, %xmm0
    000018d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2080:
    000018e0: 	movdqa	DATAat0x238e0(%rip), %xmm1
    000018e8: 	paddq	(%rax), %xmm1
    000018ec: 	addq	$0x10, %rax
    000018f0: 	paddq	%xmm1, %xmm0
    000018f4: 	cmpq	%rbx, %rax
    000018f7: 	jne	.Ltmp2080 # Offset: 6391
    000018f9: 	cvttsd2si	init_value(%rip), %rdx
    00001902: 	movdqa	%xmm0, %xmm1
    00001906: 	psrldq	$0x8, %xmm1
    0000190b: 	paddq	%xmm1, %xmm0
    0000190f: 	movq	%xmm0, %rax
    00001914: 	addq	$0x2, %rdx
    00001918: 	imulq	$0x1f40, %rdx, %rdx
    0000191f: 	cmpq	%rax, %rdx
    00001922: 	je	.Ltmp2081 # Offset: 6434
    00001924: 	movl	current_test(%rip), %edx
    0000192a: 	movq	%r15, %rsi
    0000192d: 	movl	$0x1, %edi
    00001932: 	xorl	%eax, %eax
    00001934: 	callq	__printf_chk@PLT # Offset: 6452
    00001939: 	movl	iterations(%rip), %ecx
.Ltmp2081:
    0000193f: 	addl	$0x1, %r14d
    00001943: 	cmpl	%ecx, %r14d
    00001946: 	jl	.Ltmp2082 # Offset: 6470
.Ltmp2079:
    00001948: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000194f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00001956: 	subq	$0x20, %rax
    0000195a: 	cmpq	%rax, %r15
    0000195d: 	je	.Ltmp2083 # Offset: 6493
    00001963: 	leaq	0x10(%r15), %rdi
    00001967: 	movq	0x98(%rsp), %r14
    0000196f: 	movq	%rdi, (%r15)
    00001972: 	movq	0x90(%rsp), %rax
    0000197a: 	movq	%rax, %rsi
    0000197d: 	movq	%rax, (%rsp)
    00001981: 	addq	%r14, %rsi
    00001984: 	je	.Ltmp2084 # Offset: 6532
    00001986: 	testq	%rax, %rax
    00001989: 	je	.Ltmp2085 # Offset: 6537
.Ltmp2084:
    0000198f: 	movq	%r14, 0x30(%rsp)
    00001994: 	cmpq	$0xf, %r14
    00001998: 	ja	.Ltmp2086 # Offset: 6552
    0000199e: 	cmpq	$0x1, %r14
    000019a2: 	jne	.Ltmp2087 # Offset: 6562
    000019a8: 	movq	(%rsp), %rax
    000019ac: 	movzbl	(%rax), %eax
    000019af: 	movb	%al, 0x10(%r15)
.Ltmp2194:
    000019b3: 	movq	%r14, 0x8(%r15)
    000019b7: 	movb	$0x0, (%rdi,%r14)
    000019bc: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000019c3: 	addq	$0x20, %rax
    000019c7: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2174:
    000019ce: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000019d5: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000019dc: 	je	.Ltmp2088 # Offset: 6620
.Ltmp2173:
    000019e2: 	movq	-0x20(%rax), %r14
    000019e6: 	callq	clock@PLT # Offset: 6630
    000019eb: 	pxor	%xmm0, %xmm0
    000019ef: 	movq	%rax, end_time(%rip)
    000019f6: 	movq	%r14, %rdi
    000019f9: 	subq	start_time(%rip), %rax
    00001a00: 	cvtsi2sd	%rax, %xmm0
    00001a05: 	divsd	DATAat0x23450(%rip), %xmm0
    00001a0d: 	callq	_Z13record_resultdPKc # Offset: 6669
    00001a12: 	movq	0x90(%rsp), %rdi
    00001a1a: 	cmpq	0x18(%rsp), %rdi
    00001a1f: 	je	.Ltmp2089 # Offset: 6687
    00001a21: 	movq	0xa0(%rsp), %rax
    00001a29: 	leaq	0x1(%rax), %rsi
    00001a2d: 	callq	_ZdlPvm@PLT # Offset: 6701
.Ltmp2089:
    00001a32: 	leaq	DATAat0x233a9(%rip), %rdx
    00001a39: 	movq	%r13, %rsi
    00001a3c: 	movq	%r12, %rdi
    00001a3f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6719
    00001a44: 	callq	clock@PLT # Offset: 6724
    00001a49: 	movl	iterations(%rip), %ecx
    00001a4f: 	xorl	%r14d, %r14d
    00001a52: 	leaq	DATAat0x231d2(%rip), %r15
    00001a59: 	movq	%rax, start_time(%rip)
    00001a60: 	testl	%ecx, %ecx
    00001a62: 	jle	.Ltmp2090 # Offset: 6754
    00001a64: 	nopl	(%rax) # Size: 4
.Ltmp2093:
    00001a68: 	movq	%rbp, %rax
    00001a6b: 	pxor	%xmm0, %xmm0
    00001a6f: 	nop # Size: 1
.Ltmp2091:
    00001a70: 	paddq	(%rax), %xmm0
    00001a74: 	addq	$0x10, %rax
    00001a78: 	cmpq	%rbx, %rax
    00001a7b: 	jne	.Ltmp2091 # Offset: 6779
    00001a7d: 	cvttsd2si	init_value(%rip), %rdx
    00001a86: 	movdqa	%xmm0, %xmm1
    00001a8a: 	psrldq	$0x8, %xmm1
    00001a8f: 	paddq	%xmm1, %xmm0
    00001a93: 	movq	%xmm0, %rax
    00001a98: 	imulq	$0x1f40, %rdx, %rdx
    00001a9f: 	cmpq	%rax, %rdx
    00001aa2: 	je	.Ltmp2092 # Offset: 6818
    00001aa4: 	movl	current_test(%rip), %edx
    00001aaa: 	movq	%r15, %rsi
    00001aad: 	movl	$0x1, %edi
    00001ab2: 	xorl	%eax, %eax
    00001ab4: 	callq	__printf_chk@PLT # Offset: 6836
    00001ab9: 	movl	iterations(%rip), %ecx
.Ltmp2092:
    00001abf: 	addl	$0x1, %r14d
    00001ac3: 	cmpl	%ecx, %r14d
    00001ac6: 	jl	.Ltmp2093 # Offset: 6854
.Ltmp2090:
    00001ac8: 	movq	%r12, %rsi
    00001acb: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00001ad2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6866
    00001ad7: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001ade: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001ae5: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001aec: 	je	.Ltmp2094 # Offset: 6892
.Ltmp2172:
    00001af2: 	movq	-0x20(%rax), %r14
    00001af6: 	callq	clock@PLT # Offset: 6902
    00001afb: 	pxor	%xmm0, %xmm0
    00001aff: 	movq	%rax, end_time(%rip)
    00001b06: 	movq	%r14, %rdi
    00001b09: 	subq	start_time(%rip), %rax
    00001b10: 	cvtsi2sd	%rax, %xmm0
    00001b15: 	divsd	DATAat0x23450(%rip), %xmm0
    00001b1d: 	callq	_Z13record_resultdPKc # Offset: 6941
    00001b22: 	movq	0x90(%rsp), %rdi
    00001b2a: 	cmpq	0x18(%rsp), %rdi
    00001b2f: 	je	.Ltmp2095 # Offset: 6959
    00001b31: 	movq	0xa0(%rsp), %rax
    00001b39: 	leaq	0x1(%rax), %rsi
    00001b3d: 	callq	_ZdlPvm@PLT # Offset: 6973
.Ltmp2095:
    00001b42: 	leaq	DATAat0x23406(%rip), %rdx
    00001b49: 	movq	%r13, %rsi
    00001b4c: 	movq	%r12, %rdi
    00001b4f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6991
    00001b54: 	callq	clock@PLT # Offset: 6996
    00001b59: 	movl	iterations(%rip), %ecx
    00001b5f: 	movq	%rax, start_time(%rip)
    00001b66: 	testl	%ecx, %ecx
    00001b68: 	jle	.Ltmp2096 # Offset: 7016
    00001b6e: 	movdqa	DATAat0x238b0(%rip), %xmm4
    00001b76: 	xorl	%r14d, %r14d
    00001b79: 	leaq	DATAat0x231d2(%rip), %r15
    00001b80: 	movaps	%xmm4, (%rsp)
    00001b84: 	nopl	(%rax) # Size: 4
.Ltmp2099:
    00001b88: 	movq	%rbp, %rax
    00001b8b: 	pxor	%xmm0, %xmm0
    00001b8f: 	nop # Size: 1
.Ltmp2097:
    00001b90: 	movdqa	(%rsp), %xmm1
    00001b95: 	pand	(%rax), %xmm1
    00001b99: 	addq	$0x10, %rax
    00001b9d: 	paddq	%xmm1, %xmm0
    00001ba1: 	cmpq	%rbx, %rax
    00001ba4: 	jne	.Ltmp2097 # Offset: 7076
    00001ba6: 	cvttsd2si	init_value(%rip), %rdx
    00001baf: 	movdqa	%xmm0, %xmm1
    00001bb3: 	psrldq	$0x8, %xmm1
    00001bb8: 	paddq	%xmm1, %xmm0
    00001bbc: 	movq	%xmm0, %rax
    00001bc1: 	andl	$0xa, %edx
    00001bc4: 	imulq	$0x1f40, %rdx, %rdx
    00001bcb: 	cmpq	%rdx, %rax
    00001bce: 	je	.Ltmp2098 # Offset: 7118
    00001bd0: 	movl	current_test(%rip), %edx
    00001bd6: 	movq	%r15, %rsi
    00001bd9: 	movl	$0x1, %edi
    00001bde: 	xorl	%eax, %eax
    00001be0: 	callq	__printf_chk@PLT # Offset: 7136
    00001be5: 	movl	iterations(%rip), %ecx
.Ltmp2098:
    00001beb: 	addl	$0x1, %r14d
    00001bef: 	cmpl	%ecx, %r14d
    00001bf2: 	jl	.Ltmp2099 # Offset: 7154
.Ltmp2096:
    00001bf4: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001bfb: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00001c02: 	subq	$0x20, %rax
    00001c06: 	cmpq	%rax, %r15
    00001c09: 	je	.Ltmp2100 # Offset: 7177
    00001c0f: 	leaq	0x10(%r15), %rdi
    00001c13: 	movq	0x98(%rsp), %r14
    00001c1b: 	movq	%rdi, (%r15)
    00001c1e: 	movq	0x90(%rsp), %rax
    00001c26: 	movq	%rax, %rsi
    00001c29: 	movq	%rax, (%rsp)
    00001c2d: 	addq	%r14, %rsi
    00001c30: 	je	.Ltmp2101 # Offset: 7216
    00001c32: 	testq	%rax, %rax
    00001c35: 	je	.Ltmp2102 # Offset: 7221
.Ltmp2101:
    00001c3b: 	movq	%r14, 0x30(%rsp)
    00001c40: 	cmpq	$0xf, %r14
    00001c44: 	ja	.Ltmp2103 # Offset: 7236
    00001c4a: 	cmpq	$0x1, %r14
    00001c4e: 	jne	.Ltmp2104 # Offset: 7246
    00001c54: 	movq	(%rsp), %rax
    00001c58: 	movzbl	(%rax), %eax
    00001c5b: 	movb	%al, 0x10(%r15)
.Ltmp2203:
    00001c5f: 	movq	%r14, 0x8(%r15)
    00001c63: 	movb	$0x0, (%rdi,%r14)
    00001c68: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001c6f: 	addq	$0x20, %rax
    00001c73: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2152:
    00001c7a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001c81: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001c88: 	je	.Ltmp2105 # Offset: 7304
.Ltmp2151:
    00001c8e: 	movq	-0x20(%rax), %r14
    00001c92: 	callq	clock@PLT # Offset: 7314
    00001c97: 	pxor	%xmm0, %xmm0
    00001c9b: 	movq	%rax, end_time(%rip)
    00001ca2: 	movq	%r14, %rdi
    00001ca5: 	subq	start_time(%rip), %rax
    00001cac: 	cvtsi2sd	%rax, %xmm0
    00001cb1: 	divsd	DATAat0x23450(%rip), %xmm0
    00001cb9: 	callq	_Z13record_resultdPKc # Offset: 7353
    00001cbe: 	movq	0x90(%rsp), %rdi
    00001cc6: 	cmpq	0x18(%rsp), %rdi
    00001ccb: 	je	.Ltmp2106 # Offset: 7371
    00001ccd: 	movq	0xa0(%rsp), %rax
    00001cd5: 	leaq	0x1(%rax), %rsi
    00001cd9: 	callq	_ZdlPvm@PLT # Offset: 7385
.Ltmp2106:
    00001cde: 	leaq	DATAat0x233fd(%rip), %rdx
    00001ce5: 	movq	%r13, %rsi
    00001ce8: 	movq	%r12, %rdi
    00001ceb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7403
    00001cf0: 	callq	clock@PLT # Offset: 7408
    00001cf5: 	movl	iterations(%rip), %ecx
    00001cfb: 	xorl	%r14d, %r14d
    00001cfe: 	leaq	DATAat0x231d2(%rip), %r15
    00001d05: 	movq	%rax, start_time(%rip)
    00001d0c: 	testl	%ecx, %ecx
    00001d0e: 	jle	.Ltmp2107 # Offset: 7438
.Ltmp2110:
    00001d10: 	movq	%rbp, %rax
    00001d13: 	pxor	%xmm0, %xmm0
    00001d17: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2108:
    00001d20: 	movdqa	DATAat0x238f0(%rip), %xmm1
    00001d28: 	pand	(%rax), %xmm1
    00001d2c: 	addq	$0x10, %rax
    00001d30: 	paddq	%xmm1, %xmm0
    00001d34: 	cmpq	%rbx, %rax
    00001d37: 	jne	.Ltmp2108 # Offset: 7479
    00001d39: 	cvttsd2si	init_value(%rip), %rdx
    00001d42: 	movdqa	%xmm0, %xmm1
    00001d46: 	psrldq	$0x8, %xmm1
    00001d4b: 	paddq	%xmm1, %xmm0
    00001d4f: 	movq	%xmm0, %rax
    00001d54: 	andl	$0xe, %edx
    00001d57: 	imulq	$0x1f40, %rdx, %rdx
    00001d5e: 	cmpq	%rax, %rdx
    00001d61: 	je	.Ltmp2109 # Offset: 7521
    00001d63: 	movl	current_test(%rip), %edx
    00001d69: 	movq	%r15, %rsi
    00001d6c: 	movl	$0x1, %edi
    00001d71: 	xorl	%eax, %eax
    00001d73: 	callq	__printf_chk@PLT # Offset: 7539
    00001d78: 	movl	iterations(%rip), %ecx
.Ltmp2109:
    00001d7e: 	addl	$0x1, %r14d
    00001d82: 	cmpl	%ecx, %r14d
    00001d85: 	jl	.Ltmp2110 # Offset: 7557
.Ltmp2107:
    00001d87: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001d8e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r15
    00001d95: 	subq	$0x20, %rax
    00001d99: 	cmpq	%rax, %r15
    00001d9c: 	je	.Ltmp2111 # Offset: 7580
    00001da2: 	leaq	0x10(%r15), %rdi
    00001da6: 	movq	0x98(%rsp), %r14
    00001dae: 	movq	%rdi, (%r15)
    00001db1: 	movq	0x90(%rsp), %rax
    00001db9: 	movq	%rax, %rsi
    00001dbc: 	movq	%rax, (%rsp)
    00001dc0: 	addq	%r14, %rsi
    00001dc3: 	je	.Ltmp2112 # Offset: 7619
    00001dc5: 	testq	%rax, %rax
    00001dc8: 	je	.Ltmp2113 # Offset: 7624
.Ltmp2112:
    00001dce: 	movq	%r14, 0x30(%rsp)
    00001dd3: 	cmpq	$0xf, %r14
    00001dd7: 	ja	.Ltmp2114 # Offset: 7639
    00001ddd: 	cmpq	$0x1, %r14
    00001de1: 	jne	.Ltmp2115 # Offset: 7649
    00001de7: 	movq	(%rsp), %rax
    00001deb: 	movzbl	(%rax), %eax
    00001dee: 	movb	%al, 0x10(%r15)
.Ltmp2205:
    00001df2: 	movq	%r14, 0x8(%r15)
    00001df6: 	movb	$0x0, (%rdi,%r14)
    00001dfb: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001e02: 	addq	$0x20, %rax
    00001e06: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2150:
    00001e0d: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001e14: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001e1b: 	je	.Ltmp2116 # Offset: 7707
.Ltmp2149:
    00001e21: 	movq	-0x20(%rax), %r14
    00001e25: 	callq	clock@PLT # Offset: 7717
    00001e2a: 	pxor	%xmm0, %xmm0
    00001e2e: 	movq	%rax, end_time(%rip)
    00001e35: 	movq	%r14, %rdi
    00001e38: 	subq	start_time(%rip), %rax
    00001e3f: 	cvtsi2sd	%rax, %xmm0
    00001e44: 	divsd	DATAat0x23450(%rip), %xmm0
    00001e4c: 	callq	_Z13record_resultdPKc # Offset: 7756
    00001e51: 	movq	0x90(%rsp), %rdi
    00001e59: 	cmpq	0x18(%rsp), %rdi
    00001e5e: 	je	.Ltmp2117 # Offset: 7774
    00001e60: 	movq	0xa0(%rsp), %rax
    00001e68: 	leaq	0x1(%rax), %rsi
    00001e6c: 	callq	_ZdlPvm@PLT # Offset: 7788
.Ltmp2117:
    00001e71: 	leaq	DATAat0x2341d(%rip), %rdx
    00001e78: 	movq	%r13, %rsi
    00001e7b: 	movq	%r12, %rdi
    00001e7e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7806
    00001e83: 	callq	clock@PLT # Offset: 7811
    00001e88: 	movl	iterations(%rip), %ecx
    00001e8e: 	movq	%rax, start_time(%rip)
    00001e95: 	testl	%ecx, %ecx
    00001e97: 	jle	.Ltmp2118 # Offset: 7831
    00001e9d: 	movdqa	DATAat0x238b0(%rip), %xmm5
    00001ea5: 	xorl	%r14d, %r14d
    00001ea8: 	leaq	DATAat0x231d2(%rip), %r15
    00001eaf: 	movaps	%xmm5, (%rsp)
    00001eb3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2121:
    00001eb8: 	movq	%rbp, %rax
    00001ebb: 	pxor	%xmm0, %xmm0
    00001ebf: 	nop # Size: 1
.Ltmp2119:
    00001ec0: 	movdqa	(%rsp), %xmm1
    00001ec5: 	por	(%rax), %xmm1
    00001ec9: 	addq	$0x10, %rax
    00001ecd: 	paddq	%xmm1, %xmm0
    00001ed1: 	cmpq	%rbx, %rax
    00001ed4: 	jne	.Ltmp2119 # Offset: 7892
    00001ed6: 	cvttsd2si	init_value(%rip), %rdx
    00001edf: 	movdqa	%xmm0, %xmm1
    00001ee3: 	psrldq	$0x8, %xmm1
    00001ee8: 	paddq	%xmm1, %xmm0
    00001eec: 	movq	%xmm0, %rax
    00001ef1: 	orq	$0xa, %rdx
    00001ef5: 	imulq	$0x1f40, %rdx, %rdx
    00001efc: 	cmpq	%rax, %rdx
    00001eff: 	je	.Ltmp2120 # Offset: 7935
    00001f01: 	movl	current_test(%rip), %edx
    00001f07: 	movq	%r15, %rsi
    00001f0a: 	movl	$0x1, %edi
    00001f0f: 	xorl	%eax, %eax
    00001f11: 	callq	__printf_chk@PLT # Offset: 7953
    00001f16: 	movl	iterations(%rip), %ecx
.Ltmp2120:
    00001f1c: 	addl	$0x1, %r14d
    00001f20: 	cmpl	%ecx, %r14d
    00001f23: 	jl	.Ltmp2121 # Offset: 7971
.Ltmp2118:
    00001f25: 	movq	%r12, %rsi
    00001f28: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00001f2f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7983
    00001f34: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001f3b: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001f42: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001f49: 	je	.Ltmp2122 # Offset: 8009
.Ltmp2156:
    00001f4f: 	movq	-0x20(%rax), %r14
    00001f53: 	callq	clock@PLT # Offset: 8019
    00001f58: 	pxor	%xmm0, %xmm0
    00001f5c: 	movq	%rax, end_time(%rip)
    00001f63: 	movq	%r14, %rdi
    00001f66: 	subq	start_time(%rip), %rax
    00001f6d: 	cvtsi2sd	%rax, %xmm0
    00001f72: 	divsd	DATAat0x23450(%rip), %xmm0
    00001f7a: 	callq	_Z13record_resultdPKc # Offset: 8058
    00001f7f: 	movq	0x90(%rsp), %rdi
    00001f87: 	cmpq	0x18(%rsp), %rdi
    00001f8c: 	je	.Ltmp2123 # Offset: 8076
    00001f8e: 	movq	0xa0(%rsp), %rax
    00001f96: 	leaq	0x1(%rax), %rsi
    00001f9a: 	callq	_ZdlPvm@PLT # Offset: 8090
.Ltmp2123:
    00001f9f: 	leaq	DATAat0x23414(%rip), %rdx
    00001fa6: 	movq	%r13, %rsi
    00001fa9: 	movq	%r12, %rdi
    00001fac: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8108
    00001fb1: 	callq	clock@PLT # Offset: 8113
    00001fb6: 	movl	iterations(%rip), %ecx
    00001fbc: 	xorl	%r14d, %r14d
    00001fbf: 	leaq	DATAat0x231d2(%rip), %r15
    00001fc6: 	movq	%rax, start_time(%rip)
    00001fcd: 	testl	%ecx, %ecx
    00001fcf: 	jle	.Ltmp2124 # Offset: 8143
    00001fd1: 	nopl	(%rax) # Size: 7
.Ltmp2127:
    00001fd8: 	movq	%rbp, %rax
    00001fdb: 	pxor	%xmm0, %xmm0
    00001fdf: 	nop # Size: 1
.Ltmp2125:
    00001fe0: 	movdqa	DATAat0x23900(%rip), %xmm1
    00001fe8: 	por	(%rax), %xmm1
    00001fec: 	addq	$0x10, %rax
    00001ff0: 	paddq	%xmm1, %xmm0
    00001ff4: 	cmpq	%rbx, %rax
    00001ff7: 	jne	.Ltmp2125 # Offset: 8183
    00001ff9: 	cvttsd2si	init_value(%rip), %rdx
    00002002: 	movdqa	%xmm0, %xmm1
    00002006: 	psrldq	$0x8, %xmm1
    0000200b: 	paddq	%xmm1, %xmm0
    0000200f: 	movq	%xmm0, %rax
    00002014: 	orq	$0x3f, %rdx
    00002018: 	imulq	$0x1f40, %rdx, %rdx
    0000201f: 	cmpq	%rax, %rdx
    00002022: 	je	.Ltmp2126 # Offset: 8226
    00002024: 	movl	current_test(%rip), %edx
    0000202a: 	movq	%r15, %rsi
    0000202d: 	movl	$0x1, %edi
    00002032: 	xorl	%eax, %eax
    00002034: 	callq	__printf_chk@PLT # Offset: 8244
    00002039: 	movl	iterations(%rip), %ecx
.Ltmp2126:
    0000203f: 	addl	$0x1, %r14d
    00002043: 	cmpl	%ecx, %r14d
    00002046: 	jl	.Ltmp2127 # Offset: 8262
.Ltmp2124:
    00002048: 	movq	%r12, %rsi
    0000204b: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002052: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8274
    00002057: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000205e: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00002065: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000206c: 	je	.Ltmp2128 # Offset: 8300
.Ltmp2155:
    00002072: 	movq	-0x20(%rax), %r14
    00002076: 	callq	clock@PLT # Offset: 8310
    0000207b: 	pxor	%xmm0, %xmm0
    0000207f: 	movq	%rax, end_time(%rip)
    00002086: 	movq	%r14, %rdi
    00002089: 	subq	start_time(%rip), %rax
    00002090: 	cvtsi2sd	%rax, %xmm0
    00002095: 	divsd	DATAat0x23450(%rip), %xmm0
    0000209d: 	callq	_Z13record_resultdPKc # Offset: 8349
    000020a2: 	movq	0x90(%rsp), %rdi
    000020aa: 	cmpq	0x18(%rsp), %rdi
    000020af: 	je	.Ltmp2129 # Offset: 8367
    000020b1: 	movq	0xa0(%rsp), %rax
    000020b9: 	leaq	0x1(%rax), %rsi
    000020bd: 	callq	_ZdlPvm@PLT # Offset: 8381
.Ltmp2129:
    000020c2: 	leaq	DATAat0x23433(%rip), %rdx
    000020c9: 	movq	%r13, %rsi
    000020cc: 	movq	%r12, %rdi
    000020cf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8399
    000020d4: 	callq	clock@PLT # Offset: 8404
    000020d9: 	movl	iterations(%rip), %ecx
    000020df: 	movq	%rax, start_time(%rip)
    000020e6: 	testl	%ecx, %ecx
    000020e8: 	jle	.Ltmp2130 # Offset: 8424
    000020ee: 	movdqa	DATAat0x238b0(%rip), %xmm6
    000020f6: 	xorl	%r14d, %r14d
    000020f9: 	leaq	DATAat0x231d2(%rip), %r15
    00002100: 	movaps	%xmm6, (%rsp)
    00002104: 	nopl	(%rax) # Size: 4
.Ltmp2133:
    00002108: 	movq	%rbp, %rax
    0000210b: 	pxor	%xmm0, %xmm0
    0000210f: 	nop # Size: 1
.Ltmp2131:
    00002110: 	movdqa	(%rsp), %xmm1
    00002115: 	pxor	(%rax), %xmm1
    00002119: 	addq	$0x10, %rax
    0000211d: 	paddq	%xmm1, %xmm0
    00002121: 	cmpq	%rbx, %rax
    00002124: 	jne	.Ltmp2131 # Offset: 8484
    00002126: 	cvttsd2si	init_value(%rip), %rdx
    0000212f: 	movdqa	%xmm0, %xmm1
    00002133: 	psrldq	$0x8, %xmm1
    00002138: 	paddq	%xmm1, %xmm0
    0000213c: 	movq	%xmm0, %rax
    00002141: 	xorq	$0xa, %rdx
    00002145: 	imulq	$0x1f40, %rdx, %rdx
    0000214c: 	cmpq	%rax, %rdx
    0000214f: 	je	.Ltmp2132 # Offset: 8527
    00002151: 	movl	current_test(%rip), %edx
    00002157: 	movq	%r15, %rsi
    0000215a: 	movl	$0x1, %edi
    0000215f: 	xorl	%eax, %eax
    00002161: 	callq	__printf_chk@PLT # Offset: 8545
    00002166: 	movl	iterations(%rip), %ecx
.Ltmp2132:
    0000216c: 	addl	$0x1, %r14d
    00002170: 	cmpl	%ecx, %r14d
    00002173: 	jl	.Ltmp2133 # Offset: 8563
.Ltmp2130:
    00002175: 	movq	%r12, %rsi
    00002178: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000217f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8575
    00002184: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000218b: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00002192: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002199: 	je	.Ltmp2134 # Offset: 8601
.Ltmp2154:
    0000219f: 	movq	-0x20(%rax), %r14
    000021a3: 	callq	clock@PLT # Offset: 8611
    000021a8: 	pxor	%xmm0, %xmm0
    000021ac: 	movq	%rax, end_time(%rip)
    000021b3: 	movq	%r14, %rdi
    000021b6: 	subq	start_time(%rip), %rax
    000021bd: 	cvtsi2sd	%rax, %xmm0
    000021c2: 	divsd	DATAat0x23450(%rip), %xmm0
    000021ca: 	callq	_Z13record_resultdPKc # Offset: 8650
    000021cf: 	movq	0x90(%rsp), %rdi
    000021d7: 	cmpq	0x18(%rsp), %rdi
    000021dc: 	je	.Ltmp2135 # Offset: 8668
    000021de: 	movq	0xa0(%rsp), %rax
    000021e6: 	leaq	0x1(%rax), %rsi
    000021ea: 	callq	_ZdlPvm@PLT # Offset: 8682
.Ltmp2135:
    000021ef: 	leaq	DATAat0x2342a(%rip), %rdx
    000021f6: 	movq	%r13, %rsi
    000021f9: 	movq	%r12, %rdi
    000021fc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8700
    00002201: 	callq	clock@PLT # Offset: 8705
    00002206: 	movl	iterations(%rip), %ecx
    0000220c: 	xorl	%r14d, %r14d
    0000220f: 	leaq	DATAat0x231d2(%rip), %r15
    00002216: 	movq	%rax, start_time(%rip)
    0000221d: 	testl	%ecx, %ecx
    0000221f: 	jle	.Ltmp2136 # Offset: 8735
    00002221: 	nopl	(%rax) # Size: 7
.Ltmp2139:
    00002228: 	movq	%rbp, %rax
    0000222b: 	pxor	%xmm0, %xmm0
    0000222f: 	nop # Size: 1
.Ltmp2137:
    00002230: 	movdqa	DATAat0x23910(%rip), %xmm1
    00002238: 	pxor	(%rax), %xmm1
    0000223c: 	addq	$0x10, %rax
    00002240: 	paddq	%xmm1, %xmm0
    00002244: 	cmpq	%rbx, %rax
    00002247: 	jne	.Ltmp2137 # Offset: 8775
    00002249: 	cvttsd2si	init_value(%rip), %rdx
    00002252: 	movdqa	%xmm0, %xmm1
    00002256: 	psrldq	$0x8, %xmm1
    0000225b: 	paddq	%xmm1, %xmm0
    0000225f: 	movq	%xmm0, %rax
    00002264: 	xorq	$0x31, %rdx
    00002268: 	imulq	$0x1f40, %rdx, %rdx
    0000226f: 	cmpq	%rax, %rdx
    00002272: 	je	.Ltmp2138 # Offset: 8818
    00002274: 	movl	current_test(%rip), %edx
    0000227a: 	movq	%r15, %rsi
    0000227d: 	movl	$0x1, %edi
    00002282: 	xorl	%eax, %eax
    00002284: 	callq	__printf_chk@PLT # Offset: 8836
    00002289: 	movl	iterations(%rip), %ecx
.Ltmp2138:
    0000228f: 	addl	$0x1, %r14d
    00002293: 	cmpl	%ecx, %r14d
    00002296: 	jl	.Ltmp2139 # Offset: 8854
.Ltmp2136:
    00002298: 	movq	%r12, %rsi
    0000229b: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000022a2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8866
    000022a7: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000022ae: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000022b5: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000022bc: 	je	.Ltmp2140 # Offset: 8892
.Ltmp2153:
    000022c2: 	movq	-0x20(%rax), %rbp
    000022c6: 	callq	clock@PLT # Offset: 8902
    000022cb: 	pxor	%xmm0, %xmm0
    000022cf: 	movq	%rax, end_time(%rip)
    000022d6: 	movq	%rbp, %rdi
    000022d9: 	subq	start_time(%rip), %rax
    000022e0: 	cvtsi2sd	%rax, %xmm0
    000022e5: 	divsd	DATAat0x23450(%rip), %xmm0
    000022ed: 	callq	_Z13record_resultdPKc # Offset: 8941
    000022f2: 	movq	0x90(%rsp), %rdi
    000022fa: 	cmpq	0x18(%rsp), %rdi
    000022ff: 	je	.Ltmp2141 # Offset: 8959
    00002301: 	movq	0xa0(%rsp), %rax
    00002309: 	leaq	0x1(%rax), %rsi
    0000230d: 	callq	_ZdlPvm@PLT # Offset: 8973
.Ltmp2141:
    00002312: 	leaq	DATAat0x232ac(%rip), %rdx
    00002319: 	movq	%r13, %rsi
    0000231c: 	movq	%r12, %rdi
    0000231f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8991
    00002324: 	movl	iterations(%rip), %edx
    0000232a: 	xorl	%r8d, %r8d
    0000232d: 	xorl	%ecx, %ecx
    0000232f: 	movl	$0x1f40, %esi
    00002334: 	movq	0x90(%rsp), %rdi
    0000233c: 	callq	_Z9summarizePKciiii # Offset: 9020
    00002341: 	movl	base_iterations(%rip), %eax
    00002347: 	movq	0x90(%rsp), %rdi
    0000234f: 	movl	%eax, iterations(%rip)
    00002355: 	cmpq	0x18(%rsp), %rdi
    0000235a: 	je	.Ltmp2142 # Offset: 9050
    0000235c: 	movq	0xa0(%rsp), %rax
    00002364: 	leaq	0x1(%rax), %rsi
    00002368: 	callq	_ZdlPvm@PLT # Offset: 9064
.Ltmp2142:
    0000236d: 	movq	0x70(%rsp), %rdi
    00002372: 	leaq	0x80(%rsp), %rax
    0000237a: 	cmpq	%rax, %rdi
    0000237d: 	je	.Ltmp2143 # Offset: 9085
    0000237f: 	movq	0x80(%rsp), %rax
    00002387: 	leaq	0x1(%rax), %rsi
    0000238b: 	callq	_ZdlPvm@PLT # Offset: 9099
.Ltmp2143:
    00002390: 	movq	0x50(%rsp), %rdi
    00002395: 	cmpq	0x28(%rsp), %rdi
    0000239a: 	je	.Ltmp2144 # Offset: 9114
    0000239c: 	movq	0x60(%rsp), %rax
    000023a1: 	leaq	0x1(%rax), %rsi
    000023a5: 	callq	_ZdlPvm@PLT # Offset: 9125
.Ltmp2144:
    000023aa: 	movq	0xfab8(%rsp), %rax
    000023b2: 	subq	%fs:0x28, %rax
    000023bb: 	jne	.Ltmp2145 # Offset: 9147
    000023c1: 	addq	$0xfac8, %rsp
    000023c8: 	popq	%rbx
    000023c9: 	popq	%rbp
    000023ca: 	popq	%r12
    000023cc: 	popq	%r13
    000023ce: 	popq	%r14
    000023d0: 	popq	%r15
    000023d2: 	retq # Offset: 9170
.Ltmp1965:
    000023d3: 	movq	0x20(%rsp), %rsi
    000023d8: 	xorl	%edx, %edx
    000023da: 	movq	%r15, %rdi
    000023dd: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9181
    000023e2: 	movq	%rax, (%r15)
    000023e5: 	movq	%rax, %rdi
    000023e8: 	movq	0x30(%rsp), %rax
    000023ed: 	movq	%rax, 0x10(%r15)
.Ltmp2202:
    000023f1: 	movq	(%rsp), %rsi
    000023f5: 	movq	%r14, %rdx
    000023f8: 	callq	memcpy@PLT # Offset: 9208
    000023fd: 	movq	0x30(%rsp), %r14
    00002402: 	movq	(%r15), %rdi
    00002405: 	jmp	.Ltmp2146 # Offset: 9221
.Ltmp1962:
    0000240a: 	movq	%r12, %rsi
    0000240d: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002414: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9236
    00002419: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002420: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002427: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000242e: 	jne	.Ltmp2147 # Offset: 9262
.Ltmp1967:
    00002434: 	movq	-0x8(%rdx), %rax
    00002438: 	addq	$0x200, %rax
    0000243e: 	jmp	.Ltmp2147 # Offset: 9278
.Ltmp1960:
    00002443: 	movq	-0x8(%rdx), %rax
    00002447: 	addq	$0x200, %rax
    0000244d: 	jmp	.Ltmp2148 # Offset: 9293
.Ltmp2116:
    00002452: 	movq	-0x8(%rdx), %rax
    00002456: 	addq	$0x200, %rax
    0000245c: 	jmp	.Ltmp2149 # Offset: 9308
.Ltmp2111:
    00002461: 	movq	%r12, %rsi
    00002464: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000246b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9323
    00002470: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002477: 	jmp	.Ltmp2150 # Offset: 9335
.Ltmp2105:
    0000247c: 	movq	-0x8(%rdx), %rax
    00002480: 	addq	$0x200, %rax
    00002486: 	jmp	.Ltmp2151 # Offset: 9350
.Ltmp2100:
    0000248b: 	movq	%r12, %rsi
    0000248e: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002495: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9365
    0000249a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000024a1: 	jmp	.Ltmp2152 # Offset: 9377
.Ltmp2140:
    000024a6: 	movq	-0x8(%rdx), %rax
    000024aa: 	addq	$0x200, %rax
    000024b0: 	jmp	.Ltmp2153 # Offset: 9392
.Ltmp2134:
    000024b5: 	movq	-0x8(%rdx), %rax
    000024b9: 	addq	$0x200, %rax
    000024bf: 	jmp	.Ltmp2154 # Offset: 9407
.Ltmp2128:
    000024c4: 	movq	-0x8(%rdx), %rax
    000024c8: 	addq	$0x200, %rax
    000024ce: 	jmp	.Ltmp2155 # Offset: 9422
.Ltmp2122:
    000024d3: 	movq	-0x8(%rdx), %rax
    000024d7: 	addq	$0x200, %rax
    000024dd: 	jmp	.Ltmp2156 # Offset: 9437
.Ltmp1958:
    000024e2: 	movq	-0x8(%rdx), %rax
    000024e6: 	addq	$0x200, %rax
    000024ec: 	jmp	.Ltmp2157 # Offset: 9452
.Ltmp1956:
    000024f1: 	movq	-0x8(%rdx), %rax
    000024f5: 	addq	$0x200, %rax
    000024fb: 	jmp	.Ltmp2158 # Offset: 9467
.Ltmp1954:
    00002500: 	movq	-0x8(%rdx), %rax
    00002504: 	addq	$0x200, %rax
    0000250a: 	jmp	.Ltmp2159 # Offset: 9482
.Ltmp1952:
    0000250f: 	movq	-0x8(%rdx), %rax
    00002513: 	addq	$0x200, %rax
    00002519: 	jmp	.Ltmp2160 # Offset: 9497
.Ltmp1950:
    0000251e: 	movq	-0x8(%rdx), %rax
    00002522: 	addq	$0x200, %rax
    00002528: 	jmp	.Ltmp2161 # Offset: 9512
.Ltmp1993:
    0000252d: 	movq	%r12, %rsi
    00002530: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002537: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9527
    0000253c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002543: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000254a: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002551: 	jne	.Ltmp2162 # Offset: 9553
.Ltmp1998:
    00002557: 	movq	-0x8(%rdx), %rax
    0000255b: 	addq	$0x200, %rax
    00002561: 	jmp	.Ltmp2162 # Offset: 9569
.Ltmp1991:
    00002566: 	movq	-0x8(%rdx), %rax
    0000256a: 	addq	$0x200, %rax
    00002570: 	jmp	.Ltmp2163 # Offset: 9584
.Ltmp1986:
    00002575: 	movq	%r12, %rsi
    00002578: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000257f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9599
    00002584: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000258b: 	jmp	.Ltmp2164 # Offset: 9611
.Ltmp1984:
    00002590: 	movq	-0x8(%rdx), %rax
    00002594: 	addq	$0x200, %rax
    0000259a: 	jmp	.Ltmp2165 # Offset: 9626
.Ltmp1982:
    0000259f: 	movq	-0x8(%rdx), %rax
    000025a3: 	addq	$0x200, %rax
    000025a9: 	jmp	.Ltmp2166 # Offset: 9641
.Ltmp1980:
    000025ae: 	movq	-0x8(%rdx), %rax
    000025b2: 	addq	$0x200, %rax
    000025b8: 	jmp	.Ltmp2167 # Offset: 9656
.Ltmp1978:
    000025bd: 	movq	-0x8(%rdx), %rax
    000025c1: 	addq	$0x200, %rax
    000025c7: 	jmp	.Ltmp2168 # Offset: 9671
.Ltmp1976:
    000025cc: 	movq	-0x8(%rdx), %rax
    000025d0: 	addq	$0x200, %rax
    000025d6: 	jmp	.Ltmp2169 # Offset: 9686
.Ltmp1971:
    000025db: 	movq	%r12, %rsi
    000025de: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000025e5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9701
    000025ea: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000025f1: 	jmp	.Ltmp2170 # Offset: 9713
.Ltmp1969:
    000025f6: 	movq	-0x8(%rdx), %rax
    000025fa: 	addq	$0x200, %rax
    00002600: 	jmp	.Ltmp2171 # Offset: 9728
.Ltmp2094:
    00002605: 	movq	-0x8(%rdx), %rax
    00002609: 	addq	$0x200, %rax
    0000260f: 	jmp	.Ltmp2172 # Offset: 9743
.Ltmp2088:
    00002614: 	movq	-0x8(%rdx), %rax
    00002618: 	addq	$0x200, %rax
    0000261e: 	jmp	.Ltmp2173 # Offset: 9758
.Ltmp2083:
    00002623: 	movq	%r12, %rsi
    00002626: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000262d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9773
    00002632: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002639: 	jmp	.Ltmp2174 # Offset: 9785
.Ltmp2077:
    0000263e: 	movq	-0x8(%rdx), %rax
    00002642: 	addq	$0x200, %rax
    00002648: 	jmp	.Ltmp2175 # Offset: 9800
.Ltmp2071:
    0000264d: 	movq	-0x8(%rdx), %rax
    00002651: 	addq	$0x200, %rax
    00002657: 	jmp	.Ltmp2176 # Offset: 9815
.Ltmp2065:
    0000265c: 	movq	-0x8(%rdx), %rax
    00002660: 	addq	$0x200, %rax
    00002666: 	jmp	.Ltmp2177 # Offset: 9830
.Ltmp2059:
    0000266b: 	movq	-0x8(%rdx), %rax
    0000266f: 	addq	$0x200, %rax
    00002675: 	jmp	.Ltmp2178 # Offset: 9845
.Ltmp2053:
    0000267a: 	movq	-0x8(%rdx), %rax
    0000267e: 	addq	$0x200, %rax
    00002684: 	jmp	.Ltmp2179 # Offset: 9860
.Ltmp2048:
    00002689: 	movq	%r12, %rsi
    0000268c: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002693: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9875
    00002698: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000269f: 	jmp	.Ltmp2180 # Offset: 9887
.Ltmp2042:
    000026a4: 	movq	-0x8(%rdx), %rax
    000026a8: 	addq	$0x200, %rax
    000026ae: 	jmp	.Ltmp2181 # Offset: 9902
.Ltmp2037:
    000026b3: 	movq	%r12, %rsi
    000026b6: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000026bd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9917
    000026c2: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000026c9: 	jmp	.Ltmp2182 # Offset: 9929
.Ltmp2031:
    000026ce: 	movq	-0x8(%rdx), %rax
    000026d2: 	addq	$0x200, %rax
    000026d8: 	jmp	.Ltmp2183 # Offset: 9944
.Ltmp2026:
    000026dd: 	movq	%r12, %rsi
    000026e0: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000026e7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9959
    000026ec: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000026f3: 	jmp	.Ltmp2184 # Offset: 9971
.Ltmp2020:
    000026f8: 	movq	-0x8(%rdx), %rax
    000026fc: 	addq	$0x200, %rax
    00002702: 	jmp	.Ltmp2185 # Offset: 9986
.Ltmp2015:
    00002707: 	movq	%r12, %rsi
    0000270a: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002711: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10001
    00002716: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000271d: 	jmp	.Ltmp2186 # Offset: 10013
.Ltmp2009:
    00002722: 	movq	-0x8(%rdx), %rax
    00002726: 	addq	$0x200, %rax
    0000272c: 	jmp	.Ltmp2187 # Offset: 10028
.Ltmp2004:
    00002731: 	movq	%r12, %rsi
    00002734: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000273b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10043
    00002740: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002747: 	jmp	.Ltmp2188 # Offset: 10055
.Ltmp1997:
    0000274c: 	testq	%r14, %r14
    0000274f: 	je	.Ltmp2189 # Offset: 10063
.Ltmp2210:
    00002755: 	movq	(%rsp), %rsi
    00002759: 	movq	%r14, %rdx
    0000275c: 	callq	memcpy@PLT # Offset: 10076
    00002761: 	movq	0x30(%rsp), %r14
    00002766: 	movq	(%r15), %rdi
    00002769: 	jmp	.Ltmp2189 # Offset: 10089
.Ltmp2019:
    0000276e: 	testq	%r14, %r14
    00002771: 	je	.Ltmp2190 # Offset: 10097
    00002777: 	jmp	.Ltmp2191 # Offset: 10103
    0000277c: 	nopl	(%rax) # Size: 4
.Ltmp2008:
    00002780: 	testq	%r14, %r14
    00002783: 	je	.Ltmp2192 # Offset: 10115
    00002789: 	jmp	.Ltmp2193 # Offset: 10121
    0000278e: 	nop # Size: 2
.Ltmp2087:
    00002790: 	testq	%r14, %r14
    00002793: 	je	.Ltmp2194 # Offset: 10131
    00002799: 	jmp	.Ltmp2195 # Offset: 10137
    0000279e: 	nop # Size: 2
.Ltmp2041:
    000027a0: 	testq	%r14, %r14
    000027a3: 	je	.Ltmp2196 # Offset: 10147
    000027a9: 	jmp	.Ltmp2197 # Offset: 10153
    000027ae: 	nop # Size: 2
.Ltmp2052:
    000027b0: 	testq	%r14, %r14
    000027b3: 	je	.Ltmp2198 # Offset: 10163
    000027b9: 	jmp	.Ltmp2199 # Offset: 10169
    000027be: 	nop # Size: 2
.Ltmp2030:
    000027c0: 	testq	%r14, %r14
    000027c3: 	je	.Ltmp2200 # Offset: 10179
    000027c9: 	jmp	.Ltmp2201 # Offset: 10185
    000027ce: 	nop # Size: 2
.Ltmp1966:
    000027d0: 	testq	%r14, %r14
    000027d3: 	je	.Ltmp2146 # Offset: 10195
    000027d9: 	jmp	.Ltmp2202 # Offset: 10201
    000027de: 	nop # Size: 2
.Ltmp2104:
    000027e0: 	testq	%r14, %r14
    000027e3: 	je	.Ltmp2203 # Offset: 10211
    000027e9: 	jmp	.Ltmp2204 # Offset: 10217
    000027ee: 	nop # Size: 2
.Ltmp2115:
    000027f0: 	testq	%r14, %r14
    000027f3: 	je	.Ltmp2205 # Offset: 10227
    000027f9: 	jmp	.Ltmp2206 # Offset: 10233
    000027fe: 	nop # Size: 2
.Ltmp1990:
    00002800: 	testq	%r14, %r14
    00002803: 	je	.Ltmp2207 # Offset: 10243
.Ltmp2211:
    00002809: 	movq	(%rsp), %rsi
    0000280d: 	movq	%r14, %rdx
    00002810: 	callq	memcpy@PLT # Offset: 10256
    00002815: 	movq	0x30(%rsp), %r14
    0000281a: 	movq	(%r15), %rdi
    0000281d: 	jmp	.Ltmp2207 # Offset: 10269
.Ltmp1975:
    00002822: 	testq	%r14, %r14
    00002825: 	je	.Ltmp2208 # Offset: 10277
.Ltmp2209:
    0000282b: 	movq	(%rsp), %rsi
    0000282f: 	movq	%r14, %rdx
    00002832: 	callq	memcpy@PLT # Offset: 10290
    00002837: 	movq	0x30(%rsp), %r14
    0000283c: 	movq	(%r15), %rdi
    0000283f: 	jmp	.Ltmp2208 # Offset: 10303
.Ltmp2018:
    00002844: 	movq	0x20(%rsp), %rsi
    00002849: 	xorl	%edx, %edx
    0000284b: 	movq	%r15, %rdi
    0000284e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10318
    00002853: 	movq	%rax, (%r15)
    00002856: 	movq	%rax, %rdi
    00002859: 	movq	0x30(%rsp), %rax
    0000285e: 	movq	%rax, 0x10(%r15)
.Ltmp2191:
    00002862: 	movq	(%rsp), %rsi
    00002866: 	movq	%r14, %rdx
    00002869: 	callq	memcpy@PLT # Offset: 10345
    0000286e: 	movq	0x30(%rsp), %r14
    00002873: 	movq	(%r15), %rdi
    00002876: 	jmp	.Ltmp2190 # Offset: 10358
.Ltmp2007:
    0000287b: 	movq	0x20(%rsp), %rsi
    00002880: 	xorl	%edx, %edx
    00002882: 	movq	%r15, %rdi
    00002885: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10373
    0000288a: 	movq	%rax, (%r15)
    0000288d: 	movq	%rax, %rdi
    00002890: 	movq	0x30(%rsp), %rax
    00002895: 	movq	%rax, 0x10(%r15)
.Ltmp2193:
    00002899: 	movq	(%rsp), %rsi
    0000289d: 	movq	%r14, %rdx
    000028a0: 	callq	memcpy@PLT # Offset: 10400
    000028a5: 	movq	0x30(%rsp), %r14
    000028aa: 	movq	(%r15), %rdi
    000028ad: 	jmp	.Ltmp2192 # Offset: 10413
.Ltmp2086:
    000028b2: 	movq	0x20(%rsp), %rsi
    000028b7: 	xorl	%edx, %edx
    000028b9: 	movq	%r15, %rdi
    000028bc: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10428
    000028c1: 	movq	%rax, (%r15)
    000028c4: 	movq	%rax, %rdi
    000028c7: 	movq	0x30(%rsp), %rax
    000028cc: 	movq	%rax, 0x10(%r15)
.Ltmp2195:
    000028d0: 	movq	(%rsp), %rsi
    000028d4: 	movq	%r14, %rdx
    000028d7: 	callq	memcpy@PLT # Offset: 10455
    000028dc: 	movq	0x30(%rsp), %r14
    000028e1: 	movq	(%r15), %rdi
    000028e4: 	jmp	.Ltmp2194 # Offset: 10468
.Ltmp2040:
    000028e9: 	movq	0x20(%rsp), %rsi
    000028ee: 	xorl	%edx, %edx
    000028f0: 	movq	%r15, %rdi
    000028f3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10483
    000028f8: 	movq	%rax, (%r15)
    000028fb: 	movq	%rax, %rdi
    000028fe: 	movq	0x30(%rsp), %rax
    00002903: 	movq	%rax, 0x10(%r15)
.Ltmp2197:
    00002907: 	movq	(%rsp), %rsi
    0000290b: 	movq	%r14, %rdx
    0000290e: 	callq	memcpy@PLT # Offset: 10510
    00002913: 	movq	0x30(%rsp), %r14
    00002918: 	movq	(%r15), %rdi
    0000291b: 	jmp	.Ltmp2196 # Offset: 10523
.Ltmp2051:
    00002920: 	movq	0x20(%rsp), %rsi
    00002925: 	xorl	%edx, %edx
    00002927: 	movq	%r15, %rdi
    0000292a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10538
    0000292f: 	movq	%rax, (%r15)
    00002932: 	movq	%rax, %rdi
    00002935: 	movq	0x30(%rsp), %rax
    0000293a: 	movq	%rax, 0x10(%r15)
.Ltmp2199:
    0000293e: 	movq	(%rsp), %rsi
    00002942: 	movq	%r14, %rdx
    00002945: 	callq	memcpy@PLT # Offset: 10565
    0000294a: 	movq	0x30(%rsp), %r14
    0000294f: 	movq	(%r15), %rdi
    00002952: 	jmp	.Ltmp2198 # Offset: 10578
.Ltmp2029:
    00002957: 	movq	0x20(%rsp), %rsi
    0000295c: 	xorl	%edx, %edx
    0000295e: 	movq	%r15, %rdi
    00002961: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10593
    00002966: 	movq	%rax, (%r15)
    00002969: 	movq	%rax, %rdi
    0000296c: 	movq	0x30(%rsp), %rax
    00002971: 	movq	%rax, 0x10(%r15)
.Ltmp2201:
    00002975: 	movq	(%rsp), %rsi
    00002979: 	movq	%r14, %rdx
    0000297c: 	callq	memcpy@PLT # Offset: 10620
    00002981: 	movq	0x30(%rsp), %r14
    00002986: 	movq	(%r15), %rdi
    00002989: 	jmp	.Ltmp2200 # Offset: 10633
.Ltmp1974:
    0000298e: 	movq	0x20(%rsp), %rsi
    00002993: 	xorl	%edx, %edx
    00002995: 	movq	%r15, %rdi
    00002998: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10648
    0000299d: 	movq	%rax, (%r15)
    000029a0: 	movq	%rax, %rdi
    000029a3: 	movq	0x30(%rsp), %rax
    000029a8: 	movq	%rax, 0x10(%r15)
    000029ac: 	jmp	.Ltmp2209 # Offset: 10668
.Ltmp1996:
    000029b1: 	movq	0x20(%rsp), %rsi
    000029b6: 	xorl	%edx, %edx
    000029b8: 	movq	%r15, %rdi
    000029bb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10683
    000029c0: 	movq	%rax, (%r15)
    000029c3: 	movq	%rax, %rdi
    000029c6: 	movq	0x30(%rsp), %rax
    000029cb: 	movq	%rax, 0x10(%r15)
    000029cf: 	jmp	.Ltmp2210 # Offset: 10703
.Ltmp2103:
    000029d4: 	movq	0x20(%rsp), %rsi
    000029d9: 	xorl	%edx, %edx
    000029db: 	movq	%r15, %rdi
    000029de: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10718
    000029e3: 	movq	%rax, (%r15)
    000029e6: 	movq	%rax, %rdi
    000029e9: 	movq	0x30(%rsp), %rax
    000029ee: 	movq	%rax, 0x10(%r15)
.Ltmp2204:
    000029f2: 	movq	(%rsp), %rsi
    000029f6: 	movq	%r14, %rdx
    000029f9: 	callq	memcpy@PLT # Offset: 10745
    000029fe: 	movq	0x30(%rsp), %r14
    00002a03: 	movq	(%r15), %rdi
    00002a06: 	jmp	.Ltmp2203 # Offset: 10758
.Ltmp2114:
    00002a0b: 	movq	0x20(%rsp), %rsi
    00002a10: 	xorl	%edx, %edx
    00002a12: 	movq	%r15, %rdi
    00002a15: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10773
    00002a1a: 	movq	%rax, (%r15)
    00002a1d: 	movq	%rax, %rdi
    00002a20: 	movq	0x30(%rsp), %rax
    00002a25: 	movq	%rax, 0x10(%r15)
.Ltmp2206:
    00002a29: 	movq	(%rsp), %rsi
    00002a2d: 	movq	%r14, %rdx
    00002a30: 	callq	memcpy@PLT # Offset: 10800
    00002a35: 	movq	0x30(%rsp), %r14
    00002a3a: 	movq	(%r15), %rdi
    00002a3d: 	jmp	.Ltmp2205 # Offset: 10813
.Ltmp1989:
    00002a42: 	movq	0x20(%rsp), %rsi
    00002a47: 	xorl	%edx, %edx
    00002a49: 	movq	%r15, %rdi
    00002a4c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10828
    00002a51: 	movq	%rax, (%r15)
    00002a54: 	movq	%rax, %rdi
    00002a57: 	movq	0x30(%rsp), %rax
    00002a5c: 	movq	%rax, 0x10(%r15)
    00002a60: 	jmp	.Ltmp2211 # Offset: 10848
.Ltmp1973:
    00002a65: 	leaq	DATAat0x23158(%rip), %rdi
    00002a6c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10860
.Ltmp1988:
    00002a71: 	leaq	DATAat0x23158(%rip), %rdi
    00002a78: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10872
.Ltmp1995:
    00002a7d: 	leaq	DATAat0x23158(%rip), %rdi
    00002a84: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10884
.Ltmp2006:
    00002a89: 	leaq	DATAat0x23158(%rip), %rdi
    00002a90: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10896
.Ltmp2017:
    00002a95: 	leaq	DATAat0x23158(%rip), %rdi
    00002a9c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10908
.Ltmp2028:
    00002aa1: 	leaq	DATAat0x23158(%rip), %rdi
    00002aa8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10920
.Ltmp2039:
    00002aad: 	leaq	DATAat0x23158(%rip), %rdi
    00002ab4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10932
.Ltmp2050:
    00002ab9: 	leaq	DATAat0x23158(%rip), %rdi
    00002ac0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10944
.Ltmp2085:
    00002ac5: 	leaq	DATAat0x23158(%rip), %rdi
    00002acc: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10956
.Ltmp2102:
    00002ad1: 	leaq	DATAat0x23158(%rip), %rdi
    00002ad8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10968
.Ltmp2113:
    00002add: 	leaq	DATAat0x23158(%rip), %rdi
    00002ae4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10980
.Ltmp2145:
    00002ae9: 	callq	__stack_chk_fail@PLT # Offset: 10985
.Ltmp1964:
    00002aee: 	leaq	DATAat0x23158(%rip), %rdi
    00002af5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10997
    00002afa: 	endbr64
    00002afe: 	movq	%rax, %rbx
    00002b01: 	jmp	.Ltmp2212 # Offset: 11009
    00002b03: 	endbr64
.Ltmp2214:
    00002b07: 	movq	%rax, %rbx
    00002b0a: 	jmp	.Ltmp2213 # Offset: 11018
    00002b0c: 	endbr64
    00002b10: 	jmp	.Ltmp2214 # Offset: 11024
.Ltmp2213:
    00002b12: 	movq	0x90(%rsp), %rdi
    00002b1a: 	cmpq	0x18(%rsp), %rdi
    00002b1f: 	je	.Ltmp2212 # Offset: 11039
.Ltmp2220:
    00002b21: 	movq	0xa0(%rsp), %rax
    00002b29: 	leaq	0x1(%rax), %rsi
    00002b2d: 	callq	_ZdlPvm@PLT # Offset: 11053
.Ltmp2212:
    00002b32: 	movq	0x50(%rsp), %rdi
    00002b37: 	cmpq	0x28(%rsp), %rdi
    00002b3c: 	je	.Ltmp2215 # Offset: 11068
    00002b3e: 	movq	0x60(%rsp), %rax
    00002b43: 	leaq	0x1(%rax), %rsi
    00002b47: 	callq	_ZdlPvm@PLT # Offset: 11079
.Ltmp2215:
    00002b4c: 	movq	%rbx, %rdi
    00002b4f: 	callq	_Unwind_Resume@PLT # Offset: 11087
    00002b54: 	endbr64
.Ltmp2217:
    00002b58: 	movq	%rax, %rbx
    00002b5b: 	jmp	.Ltmp2216 # Offset: 11099
    00002b60: 	endbr64
    00002b64: 	jmp	.Ltmp2217 # Offset: 11108
    00002b66: 	endbr64
    00002b6a: 	jmp	.Ltmp2214 # Offset: 11114
    00002b6c: 	endbr64
    00002b70: 	jmp	.Ltmp2217 # Offset: 11120
    00002b72: 	endbr64
    00002b76: 	jmp	.Ltmp2217 # Offset: 11126
    00002b78: 	endbr64
    00002b7c: 	jmp	.Ltmp2217 # Offset: 11132
    00002b7e: 	endbr64
    00002b82: 	jmp	.Ltmp2217 # Offset: 11138
    00002b84: 	endbr64
    00002b88: 	jmp	.Ltmp2214 # Offset: 11144
    00002b8d: 	endbr64
    00002b91: 	jmp	.Ltmp2217 # Offset: 11153
    00002b93: 	endbr64
    00002b97: 	jmp	.Ltmp2214 # Offset: 11159
    00002b9c: 	endbr64
    00002ba0: 	jmp	.Ltmp2217 # Offset: 11168
    00002ba2: 	endbr64
    00002ba6: 	jmp	.Ltmp2217 # Offset: 11174
    00002ba8: 	endbr64
    00002bac: 	jmp	.Ltmp2214 # Offset: 11180
    00002bb1: 	endbr64
    00002bb5: 	jmp	.Ltmp2217 # Offset: 11189
    00002bb7: 	endbr64
    00002bbb: 	jmp	.Ltmp2217 # Offset: 11195
    00002bbd: 	endbr64
    00002bc1: 	jmp	.Ltmp2217 # Offset: 11201
    00002bc3: 	endbr64
    00002bc7: 	jmp	.Ltmp2217 # Offset: 11207
    00002bc9: 	endbr64
    00002bcd: 	jmp	.Ltmp2214 # Offset: 11213
    00002bd2: 	endbr64
    00002bd6: 	jmp	.Ltmp2214 # Offset: 11222
    00002bdb: 	endbr64
    00002bdf: 	jmp	.Ltmp2214 # Offset: 11231
    00002be4: 	endbr64
    00002be8: 	jmp	.Ltmp2214 # Offset: 11240
    00002bed: 	endbr64
    00002bf1: 	jmp	.Ltmp2214 # Offset: 11249
    00002bf6: 	endbr64
    00002bfa: 	jmp	.Ltmp2214 # Offset: 11258
    00002bff: 	endbr64
    00002c03: 	movq	%rax, %rbx
    00002c06: 	jmp	.Ltmp2218 # Offset: 11270
    00002c08: 	endbr64
    00002c0c: 	jmp	.Ltmp2217 # Offset: 11276
.Ltmp2216:
    00002c11: 	movq	0x90(%rsp), %rdi
    00002c19: 	cmpq	0x18(%rsp), %rdi
    00002c1e: 	je	.Ltmp2218 # Offset: 11294
    00002c20: 	movq	0xa0(%rsp), %rax
    00002c28: 	leaq	0x1(%rax), %rsi
    00002c2c: 	callq	_ZdlPvm@PLT # Offset: 11308
.Ltmp2218:
    00002c31: 	movq	0x70(%rsp), %rdi
    00002c36: 	leaq	0x80(%rsp), %rax
    00002c3e: 	cmpq	%rax, %rdi
    00002c41: 	je	.Ltmp2212 # Offset: 11329
    00002c47: 	movq	0x80(%rsp), %rax
    00002c4f: 	leaq	0x1(%rax), %rsi
    00002c53: 	callq	_ZdlPvm@PLT # Offset: 11347
    00002c58: 	jmp	.Ltmp2212 # Offset: 11352
    00002c5d: 	endbr64
    00002c61: 	jmp	.Ltmp2217 # Offset: 11361
    00002c66: 	endbr64
    00002c6a: 	jmp	.Ltmp2217 # Offset: 11370
    00002c6f: 	endbr64
    00002c73: 	jmp	.Ltmp2217 # Offset: 11379
    00002c78: 	endbr64
    00002c7c: 	jmp	.Ltmp2217 # Offset: 11388
    00002c81: 	endbr64
    00002c85: 	movq	%rax, %rbx
    00002c88: 	jmp	.Ltmp2219 # Offset: 11400
    00002c8a: 	endbr64
    00002c8e: 	jmp	.Ltmp2214 # Offset: 11406
    00002c93: 	endbr64
    00002c97: 	jmp	.Ltmp2214 # Offset: 11415
.Ltmp2219:
    00002c9c: 	movq	0x90(%rsp), %rdi
    00002ca4: 	leaq	0xa0(%rsp), %rax
    00002cac: 	cmpq	%rax, %rdi
    00002caf: 	jne	.Ltmp2220 # Offset: 11439
    00002cb5: 	jmp	.Ltmp2212 # Offset: 11445
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIlEvv"

Binary Function "_Z11TestOneTypeItEvv" after disassembly {
  Number      : 50
  State       : disassembled
  Address     : 0x196f0
  Size        : 0x3151
  MaxSize     : 0x3160
  Offset      : 0x196f0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeItEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB049:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0x1000, %rsp
    0000002d: 	orq	$0x0, (%rsp)
    00000032: 	subq	$0xf48, %rsp
    00000039: 	movdqa	_Z7gLabelsB5cxx11+16(%rip), %xmm2
    00000041: 	movdqa	_Z7gLabelsB5cxx11+32(%rip), %xmm3
    00000049: 	leaq	_Z7gLabelsB5cxx11(%rip), %r15
    00000050: 	movq	%r15, %rdi
    00000053: 	movq	%fs:0x28, %rax
    0000005c: 	movq	%rax, 0x3f38(%rsp)
    00000064: 	xorl	%eax, %eax
    00000066: 	leaq	0x60(%rsp), %rax
    0000006b: 	leaq	0x30(%rsp), %rsi
    00000070: 	movq	$0x8, 0x58(%rsp)
    00000079: 	movq	%rax, 0x20(%rsp)
    0000007e: 	leaq	0xb0(%rsp), %rbp
    00000086: 	leaq	0x3f30(%rsp), %rbx
    0000008e: 	movq	%rax, 0x50(%rsp)
    00000093: 	movabsq	$0x745f3631746e6975, %rax
    0000009d: 	movq	%rax, 0x60(%rsp)
    000000a2: 	movb	$0x0, 0x68(%rsp)
    000000a7: 	movq	%rsi, 0x18(%rsp)
    000000ac: 	movaps	%xmm2, 0x30(%rsp)
    000000b1: 	movaps	%xmm3, 0x40(%rsp)
    000000b6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 182
    000000bb: 	cvttsd2si	init_value(%rip), %eax
    000000c3: 	movd	%eax, %xmm0
    000000c7: 	movq	%rbp, %rax
    000000ca: 	punpcklwd	%xmm0, %xmm0
    000000ce: 	pshufd	$0x0, %xmm0, %xmm0
    000000d3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2221:
    000000d8: 	movaps	%xmm0, (%rax)
    000000db: 	addq	$0x10, %rax
    000000df: 	cmpq	%rbx, %rax
    000000e2: 	jne	.Ltmp2221 # Offset: 226
    000000e4: 	movl	base_iterations(%rip), %eax
    000000ea: 	leaq	0x90(%rsp), %r12
    000000f2: 	leaq	0x50(%rsp), %r14
    000000f7: 	leaq	DATAat0x231c8(%rip), %rdx
    000000fe: 	movq	%r14, %rsi
    00000101: 	movq	%r12, %rdi
    00000104: 	movl	%eax, iterations(%rip)
    0000010a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 266
    0000010f: 	callq	clock@PLT # Offset: 271
    00000114: 	movq	%r12, %rsi
    00000117: 	movq	%r15, %rdi
    0000011a: 	movq	%rax, start_time(%rip)
    00000121: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 289
    00000126: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000012d: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000134: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000013b: 	je	.Ltmp2222 # Offset: 315
.Ltmp2425:
    00000141: 	movq	-0x20(%rax), %r13
    00000145: 	callq	clock@PLT # Offset: 325
    0000014a: 	pxor	%xmm0, %xmm0
    0000014e: 	movq	%rax, end_time(%rip)
    00000155: 	movq	%r13, %rdi
    00000158: 	subq	start_time(%rip), %rax
    0000015f: 	cvtsi2sd	%rax, %xmm0
    00000164: 	divsd	DATAat0x23450(%rip), %xmm0
    0000016c: 	callq	_Z13record_resultdPKc # Offset: 364
    00000171: 	movq	0x90(%rsp), %rdi
    00000179: 	leaq	0xa0(%rsp), %r13
    00000181: 	cmpq	%r13, %rdi
    00000184: 	je	.Ltmp2223 # Offset: 388
    00000186: 	movq	0xa0(%rsp), %rax
    0000018e: 	leaq	0x1(%rax), %rsi
    00000192: 	callq	_ZdlPvm@PLT # Offset: 402
.Ltmp2223:
    00000197: 	leaq	DATAat0x231e2(%rip), %rdx
    0000019e: 	movq	%r14, %rsi
    000001a1: 	movq	%r12, %rdi
    000001a4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 420
    000001a9: 	callq	clock@PLT # Offset: 425
    000001ae: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    000001b5: 	movq	%rax, start_time(%rip)
    000001bc: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000001c3: 	movq	%rsi, 0x10(%rsp)
    000001c8: 	subq	$0x20, %rax
    000001cc: 	cmpq	%rax, %rsi
    000001cf: 	je	.Ltmp2224 # Offset: 463
    000001d5: 	leaq	0x10(%rsi), %rdi
    000001d9: 	movq	%rdi, (%rsi)
    000001dc: 	movq	0x90(%rsp), %rcx
    000001e4: 	movq	0x98(%rsp), %rsi
    000001ec: 	movq	%rcx, %rax
    000001ef: 	movq	%rcx, 0x28(%rsp)
    000001f4: 	addq	%rsi, %rax
    000001f7: 	movq	%rsi, (%rsp)
    000001fb: 	je	.Ltmp2225 # Offset: 507
    000001fd: 	testq	%rcx, %rcx
    00000200: 	je	.Ltmp2226 # Offset: 512
.Ltmp2225:
    00000206: 	movq	(%rsp), %rax
    0000020a: 	movq	%rax, 0x30(%rsp)
    0000020f: 	cmpq	$0xf, %rax
    00000213: 	ja	.Ltmp2227 # Offset: 531
    00000219: 	cmpq	$0x1, (%rsp)
    0000021e: 	jne	.Ltmp2228 # Offset: 542
    00000224: 	movq	0x28(%rsp), %rax
    00000229: 	movq	0x10(%rsp), %rcx
    0000022e: 	movzbl	(%rax), %eax
    00000231: 	movb	%al, 0x10(%rcx)
.Ltmp2418:
    00000234: 	movq	(%rsp), %rax
    00000238: 	movq	0x10(%rsp), %rcx
    0000023d: 	movq	%rax, 0x8(%rcx)
    00000241: 	movb	$0x0, (%rdi,%rax)
    00000245: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000024c: 	addq	$0x20, %rax
    00000250: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2424:
    00000257: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000025e: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000265: 	je	.Ltmp2229 # Offset: 613
.Ltmp2423:
    0000026b: 	movq	-0x20(%rax), %rdi
    0000026f: 	movq	%rdi, (%rsp)
    00000273: 	callq	clock@PLT # Offset: 627
    00000278: 	movq	(%rsp), %rdi
    0000027c: 	pxor	%xmm0, %xmm0
    00000280: 	movq	%rax, end_time(%rip)
    00000287: 	subq	start_time(%rip), %rax
    0000028e: 	cvtsi2sd	%rax, %xmm0
    00000293: 	divsd	DATAat0x23450(%rip), %xmm0
    0000029b: 	callq	_Z13record_resultdPKc # Offset: 667
    000002a0: 	movq	0x90(%rsp), %rdi
    000002a8: 	cmpq	%r13, %rdi
    000002ab: 	je	.Ltmp2230 # Offset: 683
    000002ad: 	movq	0xa0(%rsp), %rax
    000002b5: 	leaq	0x1(%rax), %rsi
    000002b9: 	callq	_ZdlPvm@PLT # Offset: 697
.Ltmp2230:
    000002be: 	leaq	DATAat0x231f1(%rip), %rdx
    000002c5: 	movq	%r14, %rsi
    000002c8: 	movq	%r12, %rdi
    000002cb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 715
    000002d0: 	callq	clock@PLT # Offset: 720
    000002d5: 	movq	%r12, %rsi
    000002d8: 	movq	%r15, %rdi
    000002db: 	movq	%rax, start_time(%rip)
    000002e2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 738
    000002e7: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000002ee: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000002f5: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000002fc: 	je	.Ltmp2231 # Offset: 764
.Ltmp2431:
    00000302: 	movq	-0x20(%rax), %rdi
    00000306: 	movq	%rdi, (%rsp)
    0000030a: 	callq	clock@PLT # Offset: 778
    0000030f: 	movq	(%rsp), %rdi
    00000313: 	pxor	%xmm0, %xmm0
    00000317: 	movq	%rax, end_time(%rip)
    0000031e: 	subq	start_time(%rip), %rax
    00000325: 	cvtsi2sd	%rax, %xmm0
    0000032a: 	divsd	DATAat0x23450(%rip), %xmm0
    00000332: 	callq	_Z13record_resultdPKc # Offset: 818
    00000337: 	movq	0x90(%rsp), %rdi
    0000033f: 	cmpq	%r13, %rdi
    00000342: 	je	.Ltmp2232 # Offset: 834
    00000344: 	movq	0xa0(%rsp), %rax
    0000034c: 	leaq	0x1(%rax), %rsi
    00000350: 	callq	_ZdlPvm@PLT # Offset: 848
.Ltmp2232:
    00000355: 	leaq	DATAat0x23205(%rip), %rdx
    0000035c: 	movq	%r14, %rsi
    0000035f: 	movq	%r12, %rdi
    00000362: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 866
    00000367: 	callq	clock@PLT # Offset: 871
    0000036c: 	movq	%r12, %rsi
    0000036f: 	movq	%r15, %rdi
    00000372: 	movq	%rax, start_time(%rip)
    00000379: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 889
    0000037e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000385: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000038c: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000393: 	je	.Ltmp2233 # Offset: 915
.Ltmp2430:
    00000399: 	movq	-0x20(%rax), %rdi
    0000039d: 	movq	%rdi, (%rsp)
    000003a1: 	callq	clock@PLT # Offset: 929
    000003a6: 	movq	(%rsp), %rdi
    000003aa: 	pxor	%xmm0, %xmm0
    000003ae: 	movq	%rax, end_time(%rip)
    000003b5: 	subq	start_time(%rip), %rax
    000003bc: 	cvtsi2sd	%rax, %xmm0
    000003c1: 	divsd	DATAat0x23450(%rip), %xmm0
    000003c9: 	callq	_Z13record_resultdPKc # Offset: 969
    000003ce: 	movq	0x90(%rsp), %rdi
    000003d6: 	cmpq	%r13, %rdi
    000003d9: 	je	.Ltmp2234 # Offset: 985
    000003db: 	movq	0xa0(%rsp), %rax
    000003e3: 	leaq	0x1(%rax), %rsi
    000003e7: 	callq	_ZdlPvm@PLT # Offset: 999
.Ltmp2234:
    000003ec: 	leaq	DATAat0x23219(%rip), %rdx
    000003f3: 	movq	%r14, %rsi
    000003f6: 	movq	%r12, %rdi
    000003f9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1017
    000003fe: 	callq	clock@PLT # Offset: 1022
    00000403: 	movq	%r12, %rsi
    00000406: 	movq	%r15, %rdi
    00000409: 	movq	%rax, start_time(%rip)
    00000410: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1040
    00000415: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000041c: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000423: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000042a: 	je	.Ltmp2235 # Offset: 1066
.Ltmp2429:
    00000430: 	movq	-0x20(%rax), %rdi
    00000434: 	movq	%rdi, (%rsp)
    00000438: 	callq	clock@PLT # Offset: 1080
    0000043d: 	movq	(%rsp), %rdi
    00000441: 	pxor	%xmm0, %xmm0
    00000445: 	movq	%rax, end_time(%rip)
    0000044c: 	subq	start_time(%rip), %rax
    00000453: 	cvtsi2sd	%rax, %xmm0
    00000458: 	divsd	DATAat0x23450(%rip), %xmm0
    00000460: 	callq	_Z13record_resultdPKc # Offset: 1120
    00000465: 	movq	0x90(%rsp), %rdi
    0000046d: 	cmpq	%r13, %rdi
    00000470: 	je	.Ltmp2236 # Offset: 1136
    00000472: 	movq	0xa0(%rsp), %rax
    0000047a: 	leaq	0x1(%rax), %rsi
    0000047e: 	callq	_ZdlPvm@PLT # Offset: 1150
.Ltmp2236:
    00000483: 	leaq	DATAat0x233c2(%rip), %rdx
    0000048a: 	movq	%r14, %rsi
    0000048d: 	movq	%r12, %rdi
    00000490: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1168
    00000495: 	callq	clock@PLT # Offset: 1173
    0000049a: 	movq	%r12, %rsi
    0000049d: 	movq	%r15, %rdi
    000004a0: 	movq	%rax, start_time(%rip)
    000004a7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1191
    000004ac: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000004b3: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000004ba: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000004c1: 	je	.Ltmp2237 # Offset: 1217
.Ltmp2428:
    000004c7: 	movq	-0x20(%rax), %rdi
    000004cb: 	movq	%rdi, (%rsp)
    000004cf: 	callq	clock@PLT # Offset: 1231
    000004d4: 	movq	(%rsp), %rdi
    000004d8: 	pxor	%xmm0, %xmm0
    000004dc: 	movq	%rax, end_time(%rip)
    000004e3: 	subq	start_time(%rip), %rax
    000004ea: 	cvtsi2sd	%rax, %xmm0
    000004ef: 	divsd	DATAat0x23450(%rip), %xmm0
    000004f7: 	callq	_Z13record_resultdPKc # Offset: 1271
    000004fc: 	movq	0x90(%rsp), %rdi
    00000504: 	cmpq	%r13, %rdi
    00000507: 	je	.Ltmp2238 # Offset: 1287
    00000509: 	movq	0xa0(%rsp), %rax
    00000511: 	leaq	0x1(%rax), %rsi
    00000515: 	callq	_ZdlPvm@PLT # Offset: 1301
.Ltmp2238:
    0000051a: 	leaq	DATAat0x23279(%rip), %rdx
    00000521: 	movq	%r14, %rsi
    00000524: 	movq	%r12, %rdi
    00000527: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1319
    0000052c: 	callq	clock@PLT # Offset: 1324
    00000531: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00000538: 	movq	%rax, start_time(%rip)
    0000053f: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000546: 	movq	%rsi, 0x10(%rsp)
    0000054b: 	subq	$0x20, %rax
    0000054f: 	cmpq	%rax, %rsi
    00000552: 	je	.Ltmp2239 # Offset: 1362
    00000558: 	leaq	0x10(%rsi), %rdi
    0000055c: 	movq	%rdi, (%rsi)
    0000055f: 	movq	0x90(%rsp), %rcx
    00000567: 	movq	0x98(%rsp), %rsi
    0000056f: 	movq	%rcx, %rax
    00000572: 	movq	%rcx, 0x28(%rsp)
    00000577: 	addq	%rsi, %rax
    0000057a: 	movq	%rsi, (%rsp)
    0000057e: 	je	.Ltmp2240 # Offset: 1406
    00000580: 	testq	%rcx, %rcx
    00000583: 	je	.Ltmp2241 # Offset: 1411
.Ltmp2240:
    00000589: 	movq	(%rsp), %rax
    0000058d: 	movq	%rax, 0x30(%rsp)
    00000592: 	cmpq	$0xf, %rax
    00000596: 	ja	.Ltmp2242 # Offset: 1430
    0000059c: 	cmpq	$0x1, (%rsp)
    000005a1: 	jne	.Ltmp2243 # Offset: 1441
    000005a7: 	movq	0x28(%rsp), %rax
    000005ac: 	movq	0x10(%rsp), %rsi
    000005b1: 	movzbl	(%rax), %eax
    000005b4: 	movb	%al, 0x10(%rsi)
.Ltmp2480:
    000005b7: 	movq	(%rsp), %rax
    000005bb: 	movq	0x10(%rsp), %rcx
    000005c0: 	movq	%rax, 0x8(%rcx)
    000005c4: 	movb	$0x0, (%rdi,%rax)
    000005c8: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000005cf: 	addq	$0x20, %rax
    000005d3: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2427:
    000005da: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000005e1: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000005e8: 	je	.Ltmp2244 # Offset: 1512
.Ltmp2426:
    000005ee: 	movq	-0x20(%rax), %rdi
    000005f2: 	movq	%rdi, (%rsp)
    000005f6: 	callq	clock@PLT # Offset: 1526
    000005fb: 	movq	(%rsp), %rdi
    000005ff: 	pxor	%xmm0, %xmm0
    00000603: 	movq	%rax, end_time(%rip)
    0000060a: 	subq	start_time(%rip), %rax
    00000611: 	cvtsi2sd	%rax, %xmm0
    00000616: 	divsd	DATAat0x23450(%rip), %xmm0
    0000061e: 	callq	_Z13record_resultdPKc # Offset: 1566
    00000623: 	movq	0x90(%rsp), %rdi
    0000062b: 	cmpq	%r13, %rdi
    0000062e: 	je	.Ltmp2245 # Offset: 1582
    00000630: 	movq	0xa0(%rsp), %rax
    00000638: 	leaq	0x1(%rax), %rsi
    0000063c: 	callq	_ZdlPvm@PLT # Offset: 1596
.Ltmp2245:
    00000641: 	leaq	DATAat0x2322b(%rip), %rdx
    00000648: 	movq	%r14, %rsi
    0000064b: 	movq	%r12, %rdi
    0000064e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1614
    00000653: 	callq	clock@PLT # Offset: 1619
    00000658: 	movq	%r12, %rsi
    0000065b: 	movq	%r15, %rdi
    0000065e: 	movq	%rax, start_time(%rip)
    00000665: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1637
    0000066a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000671: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000678: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000067f: 	je	.Ltmp2246 # Offset: 1663
.Ltmp2443:
    00000685: 	movq	-0x20(%rax), %rdi
    00000689: 	movq	%rdi, (%rsp)
    0000068d: 	callq	clock@PLT # Offset: 1677
    00000692: 	movq	(%rsp), %rdi
    00000696: 	pxor	%xmm0, %xmm0
    0000069a: 	movq	%rax, end_time(%rip)
    000006a1: 	subq	start_time(%rip), %rax
    000006a8: 	cvtsi2sd	%rax, %xmm0
    000006ad: 	divsd	DATAat0x23450(%rip), %xmm0
    000006b5: 	callq	_Z13record_resultdPKc # Offset: 1717
    000006ba: 	movq	0x90(%rsp), %rdi
    000006c2: 	cmpq	%r13, %rdi
    000006c5: 	je	.Ltmp2247 # Offset: 1733
    000006c7: 	movq	0xa0(%rsp), %rax
    000006cf: 	leaq	0x1(%rax), %rsi
    000006d3: 	callq	_ZdlPvm@PLT # Offset: 1747
.Ltmp2247:
    000006d8: 	leaq	DATAat0x2323f(%rip), %rdx
    000006df: 	movq	%r14, %rsi
    000006e2: 	movq	%r12, %rdi
    000006e5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1765
    000006ea: 	callq	clock@PLT # Offset: 1770
    000006ef: 	movq	%r12, %rsi
    000006f2: 	movq	%r15, %rdi
    000006f5: 	movq	%rax, start_time(%rip)
    000006fc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1788
    00000701: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000708: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000070f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000716: 	je	.Ltmp2248 # Offset: 1814
.Ltmp2442:
    0000071c: 	movq	-0x20(%rax), %rdi
    00000720: 	movq	%rdi, (%rsp)
    00000724: 	callq	clock@PLT # Offset: 1828
    00000729: 	movq	(%rsp), %rdi
    0000072d: 	pxor	%xmm0, %xmm0
    00000731: 	movq	%rax, end_time(%rip)
    00000738: 	subq	start_time(%rip), %rax
    0000073f: 	cvtsi2sd	%rax, %xmm0
    00000744: 	divsd	DATAat0x23450(%rip), %xmm0
    0000074c: 	callq	_Z13record_resultdPKc # Offset: 1868
    00000751: 	movq	0x90(%rsp), %rdi
    00000759: 	cmpq	%r13, %rdi
    0000075c: 	je	.Ltmp2249 # Offset: 1884
    0000075e: 	movq	0xa0(%rsp), %rax
    00000766: 	leaq	0x1(%rax), %rsi
    0000076a: 	callq	_ZdlPvm@PLT # Offset: 1898
.Ltmp2249:
    0000076f: 	leaq	DATAat0x23257(%rip), %rdx
    00000776: 	movq	%r14, %rsi
    00000779: 	movq	%r12, %rdi
    0000077c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1916
    00000781: 	callq	clock@PLT # Offset: 1921
    00000786: 	movq	%r12, %rsi
    00000789: 	movq	%r15, %rdi
    0000078c: 	movq	%rax, start_time(%rip)
    00000793: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1939
    00000798: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000079f: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000007a6: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000007ad: 	je	.Ltmp2250 # Offset: 1965
.Ltmp2441:
    000007b3: 	movq	-0x20(%rax), %rdi
    000007b7: 	movq	%rdi, (%rsp)
    000007bb: 	callq	clock@PLT # Offset: 1979
    000007c0: 	movq	(%rsp), %rdi
    000007c4: 	pxor	%xmm0, %xmm0
    000007c8: 	movq	%rax, end_time(%rip)
    000007cf: 	subq	start_time(%rip), %rax
    000007d6: 	cvtsi2sd	%rax, %xmm0
    000007db: 	divsd	DATAat0x23450(%rip), %xmm0
    000007e3: 	callq	_Z13record_resultdPKc # Offset: 2019
    000007e8: 	movq	0x90(%rsp), %rdi
    000007f0: 	cmpq	%r13, %rdi
    000007f3: 	je	.Ltmp2251 # Offset: 2035
    000007f5: 	movq	0xa0(%rsp), %rax
    000007fd: 	leaq	0x1(%rax), %rsi
    00000801: 	callq	_ZdlPvm@PLT # Offset: 2049
.Ltmp2251:
    00000806: 	leaq	DATAat0x2326c(%rip), %rdx
    0000080d: 	movq	%r14, %rsi
    00000810: 	movq	%r12, %rdi
    00000813: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2067
    00000818: 	callq	clock@PLT # Offset: 2072
    0000081d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00000824: 	movq	%rax, start_time(%rip)
    0000082b: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000832: 	movq	%rsi, 0x10(%rsp)
    00000837: 	subq	$0x20, %rax
    0000083b: 	cmpq	%rax, %rsi
    0000083e: 	je	.Ltmp2252 # Offset: 2110
    00000844: 	leaq	0x10(%rsi), %rdi
    00000848: 	movq	0x98(%rsp), %rcx
    00000850: 	movq	%rdi, (%rsi)
    00000853: 	movq	0x90(%rsp), %rsi
    0000085b: 	movq	%rcx, (%rsp)
    0000085f: 	movq	%rsi, %rax
    00000862: 	movq	%rsi, 0x28(%rsp)
    00000867: 	addq	%rcx, %rax
    0000086a: 	je	.Ltmp2253 # Offset: 2154
    0000086c: 	testq	%rsi, %rsi
    0000086f: 	je	.Ltmp2254 # Offset: 2159
.Ltmp2253:
    00000875: 	movq	(%rsp), %rax
    00000879: 	movq	%rax, 0x30(%rsp)
    0000087e: 	cmpq	$0xf, %rax
    00000882: 	ja	.Ltmp2255 # Offset: 2178
    00000888: 	cmpq	$0x1, (%rsp)
    0000088d: 	jne	.Ltmp2256 # Offset: 2189
    00000893: 	movq	0x28(%rsp), %rax
    00000898: 	movq	0x10(%rsp), %rcx
    0000089d: 	movzbl	(%rax), %eax
    000008a0: 	movb	%al, 0x10(%rcx)
.Ltmp2469:
    000008a3: 	movq	(%rsp), %rax
    000008a7: 	movq	0x10(%rsp), %rcx
    000008ac: 	movq	%rax, 0x8(%rcx)
    000008b0: 	movb	$0x0, (%rdi,%rax)
    000008b4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000008bb: 	addq	$0x20, %rax
    000008bf: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2440:
    000008c6: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000008cd: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000008d4: 	je	.Ltmp2257 # Offset: 2260
.Ltmp2439:
    000008da: 	movq	-0x20(%rax), %rdi
    000008de: 	movq	%rdi, (%rsp)
    000008e2: 	callq	clock@PLT # Offset: 2274
    000008e7: 	movq	(%rsp), %rdi
    000008eb: 	pxor	%xmm0, %xmm0
    000008ef: 	movq	%rax, end_time(%rip)
    000008f6: 	subq	start_time(%rip), %rax
    000008fd: 	cvtsi2sd	%rax, %xmm0
    00000902: 	divsd	DATAat0x23450(%rip), %xmm0
    0000090a: 	callq	_Z13record_resultdPKc # Offset: 2314
    0000090f: 	movq	0x90(%rsp), %rdi
    00000917: 	cmpq	%r13, %rdi
    0000091a: 	je	.Ltmp2258 # Offset: 2330
    0000091c: 	movq	0xa0(%rsp), %rax
    00000924: 	leaq	0x1(%rax), %rsi
    00000928: 	callq	_ZdlPvm@PLT # Offset: 2344
.Ltmp2258:
    0000092d: 	leaq	DATAat0x2328a(%rip), %rdx
    00000934: 	movq	%r14, %rsi
    00000937: 	movq	%r12, %rdi
    0000093a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2362
    0000093f: 	callq	clock@PLT # Offset: 2367
    00000944: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    0000094b: 	movq	%rax, start_time(%rip)
    00000952: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000959: 	movq	%rsi, 0x10(%rsp)
    0000095e: 	subq	$0x20, %rax
    00000962: 	cmpq	%rax, %rsi
    00000965: 	je	.Ltmp2259 # Offset: 2405
    0000096b: 	leaq	0x10(%rsi), %rdi
    0000096f: 	movq	%rdi, (%rsi)
    00000972: 	movq	0x90(%rsp), %rcx
    0000097a: 	movq	0x98(%rsp), %rsi
    00000982: 	movq	%rcx, %rax
    00000985: 	movq	%rcx, 0x28(%rsp)
    0000098a: 	addq	%rsi, %rax
    0000098d: 	movq	%rsi, (%rsp)
    00000991: 	je	.Ltmp2260 # Offset: 2449
    00000993: 	testq	%rcx, %rcx
    00000996: 	je	.Ltmp2261 # Offset: 2454
.Ltmp2260:
    0000099c: 	movq	(%rsp), %rax
    000009a0: 	movq	%rax, 0x30(%rsp)
    000009a5: 	cmpq	$0xf, %rax
    000009a9: 	ja	.Ltmp2262 # Offset: 2473
    000009af: 	cmpq	$0x1, (%rsp)
    000009b4: 	jne	.Ltmp2263 # Offset: 2484
    000009ba: 	movq	0x28(%rsp), %rax
    000009bf: 	movq	0x10(%rsp), %rsi
    000009c4: 	movzbl	(%rax), %eax
    000009c7: 	movb	%al, 0x10(%rsi)
.Ltmp2479:
    000009ca: 	movq	(%rsp), %rax
    000009ce: 	movq	0x10(%rsp), %rcx
    000009d3: 	movq	%rax, 0x8(%rcx)
    000009d7: 	movb	$0x0, (%rdi,%rax)
    000009db: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000009e2: 	addq	$0x20, %rax
    000009e6: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2438:
    000009ed: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000009f4: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000009fb: 	je	.Ltmp2264 # Offset: 2555
.Ltmp2437:
    00000a01: 	movq	-0x20(%rax), %rdi
    00000a05: 	movq	%rdi, (%rsp)
    00000a09: 	callq	clock@PLT # Offset: 2569
    00000a0e: 	movq	(%rsp), %rdi
    00000a12: 	pxor	%xmm0, %xmm0
    00000a16: 	movq	%rax, end_time(%rip)
    00000a1d: 	subq	start_time(%rip), %rax
    00000a24: 	cvtsi2sd	%rax, %xmm0
    00000a29: 	divsd	DATAat0x23450(%rip), %xmm0
    00000a31: 	callq	_Z13record_resultdPKc # Offset: 2609
    00000a36: 	movq	0x90(%rsp), %rdi
    00000a3e: 	cmpq	%r13, %rdi
    00000a41: 	je	.Ltmp2265 # Offset: 2625
    00000a43: 	movq	0xa0(%rsp), %rax
    00000a4b: 	leaq	0x1(%rax), %rsi
    00000a4f: 	callq	_ZdlPvm@PLT # Offset: 2639
.Ltmp2265:
    00000a54: 	leaq	DATAat0x233d1(%rip), %rdx
    00000a5b: 	movq	%r14, %rsi
    00000a5e: 	movq	%r12, %rdi
    00000a61: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2657
    00000a66: 	callq	clock@PLT # Offset: 2662
    00000a6b: 	movq	%r12, %rsi
    00000a6e: 	movq	%r15, %rdi
    00000a71: 	movq	%rax, start_time(%rip)
    00000a78: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2680
    00000a7d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000a84: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000a8b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000a92: 	je	.Ltmp2266 # Offset: 2706
.Ltmp2436:
    00000a98: 	movq	-0x20(%rax), %rdi
    00000a9c: 	movq	%rdi, (%rsp)
    00000aa0: 	callq	clock@PLT # Offset: 2720
    00000aa5: 	movq	(%rsp), %rdi
    00000aa9: 	pxor	%xmm0, %xmm0
    00000aad: 	movq	%rax, end_time(%rip)
    00000ab4: 	subq	start_time(%rip), %rax
    00000abb: 	cvtsi2sd	%rax, %xmm0
    00000ac0: 	divsd	DATAat0x23450(%rip), %xmm0
    00000ac8: 	callq	_Z13record_resultdPKc # Offset: 2760
    00000acd: 	movq	0x90(%rsp), %rdi
    00000ad5: 	cmpq	%r13, %rdi
    00000ad8: 	je	.Ltmp2267 # Offset: 2776
    00000ada: 	movq	0xa0(%rsp), %rax
    00000ae2: 	leaq	0x1(%rax), %rsi
    00000ae6: 	callq	_ZdlPvm@PLT # Offset: 2790
.Ltmp2267:
    00000aeb: 	leaq	DATAat0x233e0(%rip), %rdx
    00000af2: 	movq	%r14, %rsi
    00000af5: 	movq	%r12, %rdi
    00000af8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2808
    00000afd: 	callq	clock@PLT # Offset: 2813
    00000b02: 	movq	%r12, %rsi
    00000b05: 	movq	%r15, %rdi
    00000b08: 	movq	%rax, start_time(%rip)
    00000b0f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2831
    00000b14: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000b1b: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000b22: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000b29: 	je	.Ltmp2268 # Offset: 2857
.Ltmp2435:
    00000b2f: 	movq	-0x20(%rax), %rdi
    00000b33: 	movq	%rdi, (%rsp)
    00000b37: 	callq	clock@PLT # Offset: 2871
    00000b3c: 	movq	(%rsp), %rdi
    00000b40: 	pxor	%xmm0, %xmm0
    00000b44: 	movq	%rax, end_time(%rip)
    00000b4b: 	subq	start_time(%rip), %rax
    00000b52: 	cvtsi2sd	%rax, %xmm0
    00000b57: 	divsd	DATAat0x23450(%rip), %xmm0
    00000b5f: 	callq	_Z13record_resultdPKc # Offset: 2911
    00000b64: 	movq	0x90(%rsp), %rdi
    00000b6c: 	cmpq	%r13, %rdi
    00000b6f: 	je	.Ltmp2269 # Offset: 2927
    00000b71: 	movq	0xa0(%rsp), %rax
    00000b79: 	leaq	0x1(%rax), %rsi
    00000b7d: 	callq	_ZdlPvm@PLT # Offset: 2941
.Ltmp2269:
    00000b82: 	leaq	DATAat0x233ee(%rip), %rdx
    00000b89: 	movq	%r14, %rsi
    00000b8c: 	movq	%r12, %rdi
    00000b8f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2959
    00000b94: 	callq	clock@PLT # Offset: 2964
    00000b99: 	movq	%r12, %rsi
    00000b9c: 	movq	%r15, %rdi
    00000b9f: 	movq	%rax, start_time(%rip)
    00000ba6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2982
    00000bab: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000bb2: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000bb9: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000bc0: 	je	.Ltmp2270 # Offset: 3008
.Ltmp2434:
    00000bc6: 	movq	-0x20(%rax), %rdi
    00000bca: 	movq	%rdi, (%rsp)
    00000bce: 	callq	clock@PLT # Offset: 3022
    00000bd3: 	movq	(%rsp), %rdi
    00000bd7: 	pxor	%xmm0, %xmm0
    00000bdb: 	movq	%rax, end_time(%rip)
    00000be2: 	subq	start_time(%rip), %rax
    00000be9: 	cvtsi2sd	%rax, %xmm0
    00000bee: 	divsd	DATAat0x23450(%rip), %xmm0
    00000bf6: 	callq	_Z13record_resultdPKc # Offset: 3062
    00000bfb: 	movq	0x90(%rsp), %rdi
    00000c03: 	cmpq	%r13, %rdi
    00000c06: 	je	.Ltmp2271 # Offset: 3078
    00000c08: 	movq	0xa0(%rsp), %rax
    00000c10: 	leaq	0x1(%rax), %rsi
    00000c14: 	callq	_ZdlPvm@PLT # Offset: 3092
.Ltmp2271:
    00000c19: 	leaq	0x70(%rsp), %rdi
    00000c1e: 	leaq	DATAat0x232a5(%rip), %rdx
    00000c25: 	movq	%r14, %rsi
    00000c28: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3112
    00000c2d: 	movl	iterations(%rip), %edx
    00000c33: 	movq	0x70(%rsp), %rdi
    00000c38: 	xorl	%r8d, %r8d
    00000c3b: 	xorl	%ecx, %ecx
    00000c3d: 	movl	$0x1f40, %esi
    00000c42: 	callq	_Z9summarizePKciiii # Offset: 3138
    00000c47: 	movslq	base_iterations(%rip), %rax
    00000c4e: 	movq	%r14, %rsi
    00000c51: 	movq	%r12, %rdi
    00000c54: 	movq	%rax, %rdx
    00000c57: 	imulq	$0x66666667, %rax, %rax
    00000c5e: 	sarl	$0x1f, %edx
    00000c61: 	sarq	$0x22, %rax
    00000c65: 	subl	%edx, %eax
    00000c67: 	leaq	DATAat0x232be(%rip), %rdx
    00000c6e: 	movl	%eax, iterations(%rip)
    00000c74: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3188
    00000c79: 	callq	clock@PLT # Offset: 3193
    00000c7e: 	movl	iterations(%rip), %ecx
    00000c84: 	movq	%rax, start_time(%rip)
    00000c8b: 	testl	%ecx, %ecx
    00000c8d: 	jle	.Ltmp2272 # Offset: 3213
    00000c93: 	movdqa	DATAat0x23820(%rip), %xmm4
    00000c9b: 	movl	$0x0, 0x10(%rsp)
    00000ca3: 	movaps	%xmm4, (%rsp)
    00000ca7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2275:
    00000cb0: 	movq	%rbp, %rax
    00000cb3: 	pxor	%xmm0, %xmm0
    00000cb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2273:
    00000cc0: 	movdqa	(%rsp), %xmm1
    00000cc5: 	paddw	(%rax), %xmm1
    00000cc9: 	addq	$0x10, %rax
    00000ccd: 	paddw	%xmm1, %xmm0
    00000cd1: 	cmpq	%rbx, %rax
    00000cd4: 	jne	.Ltmp2273 # Offset: 3284
    00000cd6: 	movdqa	%xmm0, %xmm1
    00000cda: 	cvttsd2si	init_value(%rip), %eax
    00000ce2: 	psrldq	$0x8, %xmm1
    00000ce7: 	paddw	%xmm1, %xmm0
    00000ceb: 	movdqa	%xmm0, %xmm1
    00000cef: 	psrldq	$0x4, %xmm1
    00000cf4: 	addl	$0xa, %eax
    00000cf7: 	imulw	$0x1f40, %ax, %ax
    00000cfc: 	paddw	%xmm1, %xmm0
    00000d00: 	movdqa	%xmm0, %xmm1
    00000d04: 	psrldq	$0x2, %xmm1
    00000d09: 	paddw	%xmm1, %xmm0
    00000d0d: 	pextrw	$0x0, %xmm0, %edx
    00000d12: 	cmpw	%dx, %ax
    00000d15: 	je	.Ltmp2274 # Offset: 3349
    00000d17: 	movl	current_test(%rip), %edx
    00000d1d: 	leaq	DATAat0x231d2(%rip), %rsi
    00000d24: 	movl	$0x1, %edi
    00000d29: 	xorl	%eax, %eax
    00000d2b: 	callq	__printf_chk@PLT # Offset: 3371
    00000d30: 	movl	iterations(%rip), %ecx
.Ltmp2274:
    00000d36: 	addl	$0x1, 0x10(%rsp)
    00000d3b: 	movl	0x10(%rsp), %eax
    00000d3f: 	cmpl	%ecx, %eax
    00000d41: 	jl	.Ltmp2275 # Offset: 3393
.Ltmp2272:
    00000d47: 	movq	%r12, %rsi
    00000d4a: 	movq	%r15, %rdi
    00000d4d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3405
    00000d52: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000d59: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000d60: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000d67: 	je	.Ltmp2276 # Offset: 3431
.Ltmp2433:
    00000d6d: 	movq	-0x20(%rax), %rdi
    00000d71: 	movq	%rdi, (%rsp)
    00000d75: 	callq	clock@PLT # Offset: 3445
    00000d7a: 	movq	(%rsp), %rdi
    00000d7e: 	pxor	%xmm0, %xmm0
    00000d82: 	movq	%rax, end_time(%rip)
    00000d89: 	subq	start_time(%rip), %rax
    00000d90: 	cvtsi2sd	%rax, %xmm0
    00000d95: 	divsd	DATAat0x23450(%rip), %xmm0
    00000d9d: 	callq	_Z13record_resultdPKc # Offset: 3485
    00000da2: 	movq	0x90(%rsp), %rdi
    00000daa: 	cmpq	%r13, %rdi
    00000dad: 	je	.Ltmp2277 # Offset: 3501
    00000daf: 	movq	0xa0(%rsp), %rax
    00000db7: 	leaq	0x1(%rax), %rsi
    00000dbb: 	callq	_ZdlPvm@PLT # Offset: 3515
.Ltmp2277:
    00000dc0: 	leaq	DATAat0x232cc(%rip), %rdx
    00000dc7: 	movq	%r14, %rsi
    00000dca: 	movq	%r12, %rdi
    00000dcd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3533
    00000dd2: 	callq	clock@PLT # Offset: 3538
    00000dd7: 	movl	iterations(%rip), %ecx
    00000ddd: 	movq	%rax, start_time(%rip)
    00000de4: 	testl	%ecx, %ecx
    00000de6: 	jle	.Ltmp2278 # Offset: 3558
    00000dec: 	movdqa	DATAat0x23820(%rip), %xmm5
    00000df4: 	movl	$0x0, 0x10(%rsp)
    00000dfc: 	movaps	%xmm5, (%rsp)
.Ltmp2281:
    00000e00: 	movq	%rbp, %rax
    00000e03: 	pxor	%xmm0, %xmm0
    00000e07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2279:
    00000e10: 	movdqa	(%rsp), %xmm1
    00000e15: 	paddw	(%rax), %xmm1
    00000e19: 	addq	$0x10, %rax
    00000e1d: 	paddw	%xmm1, %xmm0
    00000e21: 	cmpq	%rbx, %rax
    00000e24: 	jne	.Ltmp2279 # Offset: 3620
    00000e26: 	movdqa	%xmm0, %xmm1
    00000e2a: 	cvttsd2si	init_value(%rip), %eax
    00000e32: 	psrldq	$0x8, %xmm1
    00000e37: 	paddw	%xmm1, %xmm0
    00000e3b: 	movdqa	%xmm0, %xmm1
    00000e3f: 	psrldq	$0x4, %xmm1
    00000e44: 	addl	$0xa, %eax
    00000e47: 	imulw	$0x1f40, %ax, %ax
    00000e4c: 	paddw	%xmm1, %xmm0
    00000e50: 	movdqa	%xmm0, %xmm1
    00000e54: 	psrldq	$0x2, %xmm1
    00000e59: 	paddw	%xmm1, %xmm0
    00000e5d: 	pextrw	$0x0, %xmm0, %edx
    00000e62: 	cmpw	%dx, %ax
    00000e65: 	je	.Ltmp2280 # Offset: 3685
    00000e67: 	movl	current_test(%rip), %edx
    00000e6d: 	leaq	DATAat0x231d2(%rip), %rsi
    00000e74: 	movl	$0x1, %edi
    00000e79: 	xorl	%eax, %eax
    00000e7b: 	callq	__printf_chk@PLT # Offset: 3707
    00000e80: 	movl	iterations(%rip), %ecx
.Ltmp2280:
    00000e86: 	addl	$0x1, 0x10(%rsp)
    00000e8b: 	movl	0x10(%rsp), %eax
    00000e8f: 	cmpl	%ecx, %eax
    00000e91: 	jl	.Ltmp2281 # Offset: 3729
.Ltmp2278:
    00000e97: 	movq	%r12, %rsi
    00000e9a: 	movq	%r15, %rdi
    00000e9d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3741
    00000ea2: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000ea9: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000eb0: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000eb7: 	je	.Ltmp2282 # Offset: 3767
.Ltmp2432:
    00000ebd: 	movq	-0x20(%rax), %rdi
    00000ec1: 	movq	%rdi, (%rsp)
    00000ec5: 	callq	clock@PLT # Offset: 3781
    00000eca: 	movq	(%rsp), %rdi
    00000ece: 	pxor	%xmm0, %xmm0
    00000ed2: 	movq	%rax, end_time(%rip)
    00000ed9: 	subq	start_time(%rip), %rax
    00000ee0: 	cvtsi2sd	%rax, %xmm0
    00000ee5: 	divsd	DATAat0x23450(%rip), %xmm0
    00000eed: 	callq	_Z13record_resultdPKc # Offset: 3821
    00000ef2: 	movq	0x90(%rsp), %rdi
    00000efa: 	cmpq	%r13, %rdi
    00000efd: 	je	.Ltmp2283 # Offset: 3837
    00000eff: 	movq	0xa0(%rsp), %rax
    00000f07: 	leaq	0x1(%rax), %rsi
    00000f0b: 	callq	_ZdlPvm@PLT # Offset: 3851
.Ltmp2283:
    00000f10: 	leaq	DATAat0x232e4(%rip), %rdx
    00000f17: 	movq	%r14, %rsi
    00000f1a: 	movq	%r12, %rdi
    00000f1d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3869
    00000f22: 	callq	clock@PLT # Offset: 3874
    00000f27: 	movl	iterations(%rip), %ecx
    00000f2d: 	movq	%rax, start_time(%rip)
    00000f34: 	testl	%ecx, %ecx
    00000f36: 	jle	.Ltmp2284 # Offset: 3894
    00000f3c: 	movdqa	DATAat0x23830(%rip), %xmm6
    00000f44: 	movl	$0x0, 0x10(%rsp)
    00000f4c: 	movaps	%xmm6, (%rsp)
.Ltmp2287:
    00000f50: 	movq	%rbp, %rax
    00000f53: 	pxor	%xmm0, %xmm0
    00000f57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2285:
    00000f60: 	movdqa	(%rsp), %xmm1
    00000f65: 	paddw	(%rax), %xmm1
    00000f69: 	addq	$0x10, %rax
    00000f6d: 	paddw	%xmm1, %xmm0
    00000f71: 	cmpq	%rax, %rbx
    00000f74: 	jne	.Ltmp2285 # Offset: 3956
    00000f76: 	movdqa	%xmm0, %xmm1
    00000f7a: 	cvttsd2si	init_value(%rip), %eax
    00000f82: 	psrldq	$0x8, %xmm1
    00000f87: 	paddw	%xmm1, %xmm0
    00000f8b: 	movdqa	%xmm0, %xmm1
    00000f8f: 	psrldq	$0x4, %xmm1
    00000f94: 	subl	$0xa, %eax
    00000f97: 	imulw	$0x1f40, %ax, %ax
    00000f9c: 	paddw	%xmm1, %xmm0
    00000fa0: 	movdqa	%xmm0, %xmm1
    00000fa4: 	psrldq	$0x2, %xmm1
    00000fa9: 	paddw	%xmm1, %xmm0
    00000fad: 	pextrw	$0x0, %xmm0, %edx
    00000fb2: 	cmpw	%dx, %ax
    00000fb5: 	je	.Ltmp2286 # Offset: 4021
    00000fb7: 	movl	current_test(%rip), %edx
    00000fbd: 	leaq	DATAat0x231d2(%rip), %rsi
    00000fc4: 	movl	$0x1, %edi
    00000fc9: 	xorl	%eax, %eax
    00000fcb: 	callq	__printf_chk@PLT # Offset: 4043
    00000fd0: 	movl	iterations(%rip), %ecx
.Ltmp2286:
    00000fd6: 	addl	$0x1, 0x10(%rsp)
    00000fdb: 	movl	0x10(%rsp), %eax
    00000fdf: 	cmpl	%ecx, %eax
    00000fe1: 	jl	.Ltmp2287 # Offset: 4065
.Ltmp2284:
    00000fe7: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000fee: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00000ff5: 	subq	$0x20, %rax
    00000ff9: 	movq	%rsi, (%rsp)
    00000ffd: 	cmpq	%rax, %rsi
    00001000: 	je	.Ltmp2288 # Offset: 4096
    00001006: 	leaq	0x10(%rsi), %rdi
    0000100a: 	movq	0x98(%rsp), %rcx
    00001012: 	movq	%rdi, (%rsi)
    00001015: 	movq	0x90(%rsp), %rsi
    0000101d: 	movq	%rcx, 0x10(%rsp)
    00001022: 	movq	%rsi, %rax
    00001025: 	movq	%rsi, 0x28(%rsp)
    0000102a: 	addq	%rcx, %rax
    0000102d: 	je	.Ltmp2289 # Offset: 4141
    0000102f: 	testq	%rsi, %rsi
    00001032: 	je	.Ltmp2290 # Offset: 4146
.Ltmp2289:
    00001038: 	movq	0x10(%rsp), %rax
    0000103d: 	movq	%rax, 0x30(%rsp)
    00001042: 	cmpq	$0xf, %rax
    00001046: 	ja	.Ltmp2291 # Offset: 4166
    0000104c: 	cmpq	$0x1, 0x10(%rsp)
    00001052: 	jne	.Ltmp2292 # Offset: 4178
    00001058: 	movq	0x28(%rsp), %rax
    0000105d: 	movq	(%rsp), %rcx
    00001061: 	movzbl	(%rax), %eax
    00001064: 	movb	%al, 0x10(%rcx)
.Ltmp2464:
    00001067: 	movq	0x10(%rsp), %rax
    0000106c: 	movq	(%rsp), %rcx
    00001070: 	movq	%rax, 0x8(%rcx)
    00001074: 	movb	$0x0, (%rdi,%rax)
    00001078: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000107f: 	addq	$0x20, %rax
    00001083: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2461:
    0000108a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001091: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001098: 	je	.Ltmp2293 # Offset: 4248
.Ltmp2460:
    0000109e: 	movq	-0x20(%rax), %rdi
    000010a2: 	movq	%rdi, (%rsp)
    000010a6: 	callq	clock@PLT # Offset: 4262
    000010ab: 	movq	(%rsp), %rdi
    000010af: 	pxor	%xmm0, %xmm0
    000010b3: 	movq	%rax, end_time(%rip)
    000010ba: 	subq	start_time(%rip), %rax
    000010c1: 	cvtsi2sd	%rax, %xmm0
    000010c6: 	divsd	DATAat0x23450(%rip), %xmm0
    000010ce: 	callq	_Z13record_resultdPKc # Offset: 4302
    000010d3: 	movq	0x90(%rsp), %rdi
    000010db: 	cmpq	%r13, %rdi
    000010de: 	je	.Ltmp2294 # Offset: 4318
    000010e0: 	movq	0xa0(%rsp), %rax
    000010e8: 	leaq	0x1(%rax), %rsi
    000010ec: 	callq	_ZdlPvm@PLT # Offset: 4332
.Ltmp2294:
    000010f1: 	leaq	DATAat0x232f7(%rip), %rdx
    000010f8: 	movq	%r14, %rsi
    000010fb: 	movq	%r12, %rdi
    000010fe: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4350
    00001103: 	callq	clock@PLT # Offset: 4355
    00001108: 	movl	iterations(%rip), %ecx
    0000110e: 	movq	%rax, start_time(%rip)
    00001115: 	testl	%ecx, %ecx
    00001117: 	jle	.Ltmp2295 # Offset: 4375
    0000111d: 	movdqa	DATAat0x23830(%rip), %xmm7
    00001125: 	movl	$0x0, 0x10(%rsp)
    0000112d: 	movaps	%xmm7, (%rsp)
    00001131: 	nopl	(%rax) # Size: 7
.Ltmp2298:
    00001138: 	movq	%rbp, %rax
    0000113b: 	pxor	%xmm0, %xmm0
    0000113f: 	nop # Size: 1
.Ltmp2296:
    00001140: 	movdqa	(%rsp), %xmm1
    00001145: 	paddw	(%rax), %xmm1
    00001149: 	addq	$0x10, %rax
    0000114d: 	paddw	%xmm1, %xmm0
    00001151: 	cmpq	%rbx, %rax
    00001154: 	jne	.Ltmp2296 # Offset: 4436
    00001156: 	movdqa	%xmm0, %xmm1
    0000115a: 	cvttsd2si	init_value(%rip), %eax
    00001162: 	psrldq	$0x8, %xmm1
    00001167: 	paddw	%xmm1, %xmm0
    0000116b: 	movdqa	%xmm0, %xmm1
    0000116f: 	psrldq	$0x4, %xmm1
    00001174: 	subl	$0xa, %eax
    00001177: 	imulw	$0x1f40, %ax, %ax
    0000117c: 	paddw	%xmm1, %xmm0
    00001180: 	movdqa	%xmm0, %xmm1
    00001184: 	psrldq	$0x2, %xmm1
    00001189: 	paddw	%xmm1, %xmm0
    0000118d: 	pextrw	$0x0, %xmm0, %edx
    00001192: 	cmpw	%dx, %ax
    00001195: 	je	.Ltmp2297 # Offset: 4501
    00001197: 	movl	current_test(%rip), %edx
    0000119d: 	leaq	DATAat0x231d2(%rip), %rsi
    000011a4: 	movl	$0x1, %edi
    000011a9: 	xorl	%eax, %eax
    000011ab: 	callq	__printf_chk@PLT # Offset: 4523
    000011b0: 	movl	iterations(%rip), %ecx
.Ltmp2297:
    000011b6: 	addl	$0x1, 0x10(%rsp)
    000011bb: 	movl	0x10(%rsp), %eax
    000011bf: 	cmpl	%ecx, %eax
    000011c1: 	jl	.Ltmp2298 # Offset: 4545
.Ltmp2295:
    000011c7: 	movq	%r12, %rsi
    000011ca: 	movq	%r15, %rdi
    000011cd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4557
    000011d2: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000011d9: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000011e0: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000011e7: 	je	.Ltmp2299 # Offset: 4583
.Ltmp2459:
    000011ed: 	movq	-0x20(%rax), %rdi
    000011f1: 	movq	%rdi, (%rsp)
    000011f5: 	callq	clock@PLT # Offset: 4597
    000011fa: 	movq	(%rsp), %rdi
    000011fe: 	pxor	%xmm0, %xmm0
    00001202: 	movq	%rax, end_time(%rip)
    00001209: 	subq	start_time(%rip), %rax
    00001210: 	cvtsi2sd	%rax, %xmm0
    00001215: 	divsd	DATAat0x23450(%rip), %xmm0
    0000121d: 	callq	_Z13record_resultdPKc # Offset: 4637
    00001222: 	movq	0x90(%rsp), %rdi
    0000122a: 	cmpq	%r13, %rdi
    0000122d: 	je	.Ltmp2300 # Offset: 4653
    0000122f: 	movq	0xa0(%rsp), %rax
    00001237: 	leaq	0x1(%rax), %rsi
    0000123b: 	callq	_ZdlPvm@PLT # Offset: 4667
.Ltmp2300:
    00001240: 	leaq	DATAat0x23314(%rip), %rdx
    00001247: 	movq	%r14, %rsi
    0000124a: 	movq	%r12, %rdi
    0000124d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4685
    00001252: 	callq	clock@PLT # Offset: 4690
    00001257: 	movl	iterations(%rip), %ecx
    0000125d: 	movl	$0x0, (%rsp)
    00001264: 	movq	%rax, start_time(%rip)
    0000126b: 	testl	%ecx, %ecx
    0000126d: 	jle	.Ltmp2301 # Offset: 4717
    00001273: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2304:
    00001278: 	movq	%rbp, %rax
    0000127b: 	pxor	%xmm1, %xmm1
    0000127f: 	nop # Size: 1
.Ltmp2302:
    00001280: 	movdqa	(%rax), %xmm0
    00001284: 	addq	$0x10, %rax
    00001288: 	psllw	$0x4, %xmm0
    0000128d: 	psubw	-0x10(%rax), %xmm0
    00001292: 	psllw	$0x3, %xmm0
    00001297: 	paddw	%xmm0, %xmm1
    0000129b: 	cmpq	%rax, %rbx
    0000129e: 	jne	.Ltmp2302 # Offset: 4766
    000012a0: 	movdqa	%xmm1, %xmm0
    000012a4: 	cvttsd2si	init_value(%rip), %eax
    000012ac: 	psrldq	$0x8, %xmm0
    000012b1: 	paddw	%xmm0, %xmm1
    000012b5: 	movdqa	%xmm1, %xmm0
    000012b9: 	psrldq	$0x4, %xmm0
    000012be: 	imulw	$0xa600, %ax, %ax
    000012c3: 	paddw	%xmm0, %xmm1
    000012c7: 	movdqa	%xmm1, %xmm0
    000012cb: 	psrldq	$0x2, %xmm0
    000012d0: 	paddw	%xmm0, %xmm1
    000012d4: 	pextrw	$0x0, %xmm1, %edx
    000012d9: 	cmpw	%dx, %ax
    000012dc: 	je	.Ltmp2303 # Offset: 4828
    000012de: 	movl	current_test(%rip), %edx
    000012e4: 	leaq	DATAat0x231d2(%rip), %rsi
    000012eb: 	movl	$0x1, %edi
    000012f0: 	xorl	%eax, %eax
    000012f2: 	callq	__printf_chk@PLT # Offset: 4850
    000012f7: 	movl	iterations(%rip), %ecx
.Ltmp2303:
    000012fd: 	addl	$0x1, (%rsp)
    00001301: 	movl	(%rsp), %eax
    00001304: 	cmpl	%ecx, %eax
    00001306: 	jl	.Ltmp2304 # Offset: 4870
.Ltmp2301:
    0000130c: 	movq	%r12, %rsi
    0000130f: 	movq	%r15, %rdi
    00001312: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4882
    00001317: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000131e: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001325: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000132c: 	je	.Ltmp2305 # Offset: 4908
.Ltmp2458:
    00001332: 	movq	-0x20(%rax), %rdi
    00001336: 	movq	%rdi, (%rsp)
    0000133a: 	callq	clock@PLT # Offset: 4922
    0000133f: 	movq	(%rsp), %rdi
    00001343: 	pxor	%xmm0, %xmm0
    00001347: 	movq	%rax, end_time(%rip)
    0000134e: 	subq	start_time(%rip), %rax
    00001355: 	cvtsi2sd	%rax, %xmm0
    0000135a: 	divsd	DATAat0x23450(%rip), %xmm0
    00001362: 	callq	_Z13record_resultdPKc # Offset: 4962
    00001367: 	movq	0x90(%rsp), %rdi
    0000136f: 	cmpq	%r13, %rdi
    00001372: 	je	.Ltmp2306 # Offset: 4978
    00001374: 	movq	0xa0(%rsp), %rax
    0000137c: 	leaq	0x1(%rax), %rsi
    00001380: 	callq	_ZdlPvm@PLT # Offset: 4992
.Ltmp2306:
    00001385: 	leaq	DATAat0x23327(%rip), %rdx
    0000138c: 	movq	%r14, %rsi
    0000138f: 	movq	%r12, %rdi
    00001392: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5010
    00001397: 	callq	clock@PLT # Offset: 5015
    0000139c: 	movl	iterations(%rip), %ecx
    000013a2: 	movl	$0x0, (%rsp)
    000013a9: 	movq	%rax, start_time(%rip)
    000013b0: 	testl	%ecx, %ecx
    000013b2: 	jle	.Ltmp2307 # Offset: 5042
    000013b8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2310:
    000013c0: 	movq	%rbp, %rax
    000013c3: 	pxor	%xmm1, %xmm1
    000013c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2308:
    000013d0: 	movdqa	(%rax), %xmm0
    000013d4: 	addq	$0x10, %rax
    000013d8: 	psllw	$0x4, %xmm0
    000013dd: 	psubw	-0x10(%rax), %xmm0
    000013e2: 	psllw	$0x3, %xmm0
    000013e7: 	paddw	%xmm0, %xmm1
    000013eb: 	cmpq	%rbx, %rax
    000013ee: 	jne	.Ltmp2308 # Offset: 5102
    000013f0: 	movdqa	%xmm1, %xmm0
    000013f4: 	cvttsd2si	init_value(%rip), %eax
    000013fc: 	psrldq	$0x8, %xmm0
    00001401: 	paddw	%xmm0, %xmm1
    00001405: 	movdqa	%xmm1, %xmm0
    00001409: 	psrldq	$0x4, %xmm0
    0000140e: 	imulw	$0xa600, %ax, %ax
    00001413: 	paddw	%xmm0, %xmm1
    00001417: 	movdqa	%xmm1, %xmm0
    0000141b: 	psrldq	$0x2, %xmm0
    00001420: 	paddw	%xmm0, %xmm1
    00001424: 	pextrw	$0x0, %xmm1, %edx
    00001429: 	cmpw	%dx, %ax
    0000142c: 	je	.Ltmp2309 # Offset: 5164
    0000142e: 	movl	current_test(%rip), %edx
    00001434: 	leaq	DATAat0x231d2(%rip), %rsi
    0000143b: 	movl	$0x1, %edi
    00001440: 	xorl	%eax, %eax
    00001442: 	callq	__printf_chk@PLT # Offset: 5186
    00001447: 	movl	iterations(%rip), %ecx
.Ltmp2309:
    0000144d: 	addl	$0x1, (%rsp)
    00001451: 	movl	(%rsp), %eax
    00001454: 	cmpl	%ecx, %eax
    00001456: 	jl	.Ltmp2310 # Offset: 5206
.Ltmp2307:
    0000145c: 	movq	%r12, %rsi
    0000145f: 	movq	%r15, %rdi
    00001462: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5218
    00001467: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000146e: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001475: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000147c: 	je	.Ltmp2311 # Offset: 5244
.Ltmp2457:
    00001482: 	movq	-0x20(%rax), %rdi
    00001486: 	movq	%rdi, (%rsp)
    0000148a: 	callq	clock@PLT # Offset: 5258
    0000148f: 	movq	(%rsp), %rdi
    00001493: 	pxor	%xmm0, %xmm0
    00001497: 	movq	%rax, end_time(%rip)
    0000149e: 	subq	start_time(%rip), %rax
    000014a5: 	cvtsi2sd	%rax, %xmm0
    000014aa: 	divsd	DATAat0x23450(%rip), %xmm0
    000014b2: 	callq	_Z13record_resultdPKc # Offset: 5298
    000014b7: 	movq	0x90(%rsp), %rdi
    000014bf: 	cmpq	%r13, %rdi
    000014c2: 	je	.Ltmp2312 # Offset: 5314
    000014c4: 	movq	0xa0(%rsp), %rax
    000014cc: 	leaq	0x1(%rax), %rsi
    000014d0: 	callq	_ZdlPvm@PLT # Offset: 5328
.Ltmp2312:
    000014d5: 	leaq	DATAat0x23345(%rip), %rdx
    000014dc: 	movq	%r14, %rsi
    000014df: 	movq	%r12, %rdi
    000014e2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5346
    000014e7: 	callq	clock@PLT # Offset: 5351
    000014ec: 	movl	iterations(%rip), %ecx
    000014f2: 	movq	%rax, start_time(%rip)
    000014f9: 	testl	%ecx, %ecx
    000014fb: 	jle	.Ltmp2313 # Offset: 5371
    00001501: 	movl	$0x0, (%rsp)
    00001508: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2316:
    00001510: 	movq	%rbp, %rax
    00001513: 	pxor	%xmm0, %xmm0
    00001517: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2314:
    00001520: 	movdqa	DATAat0x23840(%rip), %xmm1
    00001528: 	paddw	(%rax), %xmm1
    0000152c: 	addq	$0x10, %rax
    00001530: 	paddw	%xmm1, %xmm0
    00001534: 	cmpq	%rax, %rbx
    00001537: 	jne	.Ltmp2314 # Offset: 5431
    00001539: 	movdqa	%xmm0, %xmm1
    0000153d: 	cvttsd2si	init_value(%rip), %eax
    00001545: 	psrldq	$0x8, %xmm1
    0000154a: 	paddw	%xmm1, %xmm0
    0000154e: 	movdqa	%xmm0, %xmm1
    00001552: 	psrldq	$0x4, %xmm1
    00001557: 	addl	$0x78, %eax
    0000155a: 	imulw	$0x1f40, %ax, %ax
    0000155f: 	paddw	%xmm1, %xmm0
    00001563: 	movdqa	%xmm0, %xmm1
    00001567: 	psrldq	$0x2, %xmm1
    0000156c: 	paddw	%xmm1, %xmm0
    00001570: 	pextrw	$0x0, %xmm0, %edx
    00001575: 	cmpw	%dx, %ax
    00001578: 	je	.Ltmp2315 # Offset: 5496
    0000157a: 	movl	current_test(%rip), %edx
    00001580: 	leaq	DATAat0x231d2(%rip), %rsi
    00001587: 	movl	$0x1, %edi
    0000158c: 	xorl	%eax, %eax
    0000158e: 	callq	__printf_chk@PLT # Offset: 5518
    00001593: 	movl	iterations(%rip), %ecx
.Ltmp2315:
    00001599: 	addl	$0x1, (%rsp)
    0000159d: 	movl	(%rsp), %eax
    000015a0: 	cmpl	%ecx, %eax
    000015a2: 	jl	.Ltmp2316 # Offset: 5538
.Ltmp2313:
    000015a8: 	movq	%r12, %rsi
    000015ab: 	movq	%r15, %rdi
    000015ae: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5550
    000015b3: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000015ba: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000015c1: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000015c8: 	je	.Ltmp2317 # Offset: 5576
.Ltmp2456:
    000015ce: 	movq	-0x20(%rax), %rdi
    000015d2: 	movq	%rdi, (%rsp)
    000015d6: 	callq	clock@PLT # Offset: 5590
    000015db: 	movq	(%rsp), %rdi
    000015df: 	pxor	%xmm0, %xmm0
    000015e3: 	movq	%rax, end_time(%rip)
    000015ea: 	subq	start_time(%rip), %rax
    000015f1: 	cvtsi2sd	%rax, %xmm0
    000015f6: 	divsd	DATAat0x23450(%rip), %xmm0
    000015fe: 	callq	_Z13record_resultdPKc # Offset: 5630
    00001603: 	movq	0x90(%rsp), %rdi
    0000160b: 	cmpq	%r13, %rdi
    0000160e: 	je	.Ltmp2318 # Offset: 5646
    00001610: 	movq	0xa0(%rsp), %rax
    00001618: 	leaq	0x1(%rax), %rsi
    0000161c: 	callq	_ZdlPvm@PLT # Offset: 5660
.Ltmp2318:
    00001621: 	leaq	DATAat0x23362(%rip), %rdx
    00001628: 	movq	%r14, %rsi
    0000162b: 	movq	%r12, %rdi
    0000162e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5678
    00001633: 	callq	clock@PLT # Offset: 5683
    00001638: 	movl	iterations(%rip), %ecx
    0000163e: 	movq	%rax, start_time(%rip)
    00001645: 	testl	%ecx, %ecx
    00001647: 	jle	.Ltmp2319 # Offset: 5703
    0000164d: 	movl	$0x0, (%rsp)
    00001654: 	nopl	(%rax) # Size: 4
.Ltmp2322:
    00001658: 	movq	%rbp, %rax
    0000165b: 	pxor	%xmm1, %xmm1
    0000165f: 	nop # Size: 1
.Ltmp2320:
    00001660: 	movdqa	DATAat0x23920(%rip), %xmm0
    00001668: 	addq	$0x10, %rax
    0000166c: 	pmulhuw	-0x10(%rax), %xmm0
    00001671: 	psrlw	$0x2, %xmm0
    00001676: 	paddw	%xmm0, %xmm1
    0000167a: 	cmpq	%rbx, %rax
    0000167d: 	jne	.Ltmp2320 # Offset: 5757
    0000167f: 	cvttsd2si	init_value(%rip), %eax
    00001687: 	movdqa	%xmm1, %xmm0
    0000168b: 	psrldq	$0x8, %xmm0
    00001690: 	paddw	%xmm0, %xmm1
    00001694: 	movdqa	%xmm1, %xmm0
    00001698: 	movzwl	%ax, %eax
    0000169b: 	psrldq	$0x4, %xmm0
    000016a0: 	imull	$0xcccd, %eax, %eax
    000016a6: 	paddw	%xmm0, %xmm1
    000016aa: 	movdqa	%xmm1, %xmm0
    000016ae: 	psrldq	$0x2, %xmm0
    000016b3: 	shrl	$0x12, %eax
    000016b6: 	paddw	%xmm0, %xmm1
    000016ba: 	imulw	$0x1f40, %ax, %ax
    000016bf: 	pextrw	$0x0, %xmm1, %edx
    000016c4: 	cmpw	%dx, %ax
    000016c7: 	je	.Ltmp2321 # Offset: 5831
    000016c9: 	movl	current_test(%rip), %edx
    000016cf: 	leaq	DATAat0x231d2(%rip), %rsi
    000016d6: 	movl	$0x1, %edi
    000016db: 	xorl	%eax, %eax
    000016dd: 	callq	__printf_chk@PLT # Offset: 5853
    000016e2: 	movl	iterations(%rip), %ecx
.Ltmp2321:
    000016e8: 	addl	$0x1, (%rsp)
    000016ec: 	movl	(%rsp), %eax
    000016ef: 	cmpl	%ecx, %eax
    000016f1: 	jl	.Ltmp2322 # Offset: 5873
.Ltmp2319:
    000016f7: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000016fe: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00001705: 	subq	$0x20, %rax
    00001709: 	movq	%rsi, (%rsp)
    0000170d: 	cmpq	%rax, %rsi
    00001710: 	je	.Ltmp2323 # Offset: 5904
    00001716: 	leaq	0x10(%rsi), %rdi
    0000171a: 	movq	%rdi, (%rsi)
    0000171d: 	movq	0x90(%rsp), %rcx
    00001725: 	movq	0x98(%rsp), %rsi
    0000172d: 	movq	%rcx, %rax
    00001730: 	movq	%rcx, 0x28(%rsp)
    00001735: 	addq	%rsi, %rax
    00001738: 	movq	%rsi, 0x10(%rsp)
    0000173d: 	je	.Ltmp2324 # Offset: 5949
    0000173f: 	testq	%rcx, %rcx
    00001742: 	je	.Ltmp2325 # Offset: 5954
.Ltmp2324:
    00001748: 	movq	0x10(%rsp), %rax
    0000174d: 	movq	%rax, 0x30(%rsp)
    00001752: 	cmpq	$0xf, %rax
    00001756: 	ja	.Ltmp2326 # Offset: 5974
    0000175c: 	cmpq	$0x1, 0x10(%rsp)
    00001762: 	jne	.Ltmp2327 # Offset: 5986
    00001768: 	movq	0x28(%rsp), %rax
    0000176d: 	movq	(%rsp), %rsi
    00001771: 	movzbl	(%rax), %eax
    00001774: 	movb	%al, 0x10(%rsi)
.Ltmp2462:
    00001777: 	movq	0x10(%rsp), %rax
    0000177c: 	movq	(%rsp), %rsi
    00001780: 	movq	%rax, 0x8(%rsi)
    00001784: 	movb	$0x0, (%rdi,%rax)
    00001788: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000178f: 	addq	$0x20, %rax
    00001793: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2455:
    0000179a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000017a1: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000017a8: 	je	.Ltmp2328 # Offset: 6056
.Ltmp2454:
    000017ae: 	movq	-0x20(%rax), %rdi
    000017b2: 	movq	%rdi, (%rsp)
    000017b6: 	callq	clock@PLT # Offset: 6070
    000017bb: 	movq	(%rsp), %rdi
    000017bf: 	pxor	%xmm0, %xmm0
    000017c3: 	movq	%rax, end_time(%rip)
    000017ca: 	subq	start_time(%rip), %rax
    000017d1: 	cvtsi2sd	%rax, %xmm0
    000017d6: 	divsd	DATAat0x23450(%rip), %xmm0
    000017de: 	callq	_Z13record_resultdPKc # Offset: 6110
    000017e3: 	movq	0x90(%rsp), %rdi
    000017eb: 	cmpq	%r13, %rdi
    000017ee: 	je	.Ltmp2329 # Offset: 6126
    000017f0: 	movq	0xa0(%rsp), %rax
    000017f8: 	leaq	0x1(%rax), %rsi
    000017fc: 	callq	_ZdlPvm@PLT # Offset: 6140
.Ltmp2329:
    00001801: 	leaq	DATAat0x23373(%rip), %rdx
    00001808: 	movq	%r14, %rsi
    0000180b: 	movq	%r12, %rdi
    0000180e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6158
    00001813: 	callq	clock@PLT # Offset: 6163
    00001818: 	movl	iterations(%rip), %ecx
    0000181e: 	movq	%rax, start_time(%rip)
    00001825: 	testl	%ecx, %ecx
    00001827: 	jle	.Ltmp2330 # Offset: 6183
    0000182d: 	movl	$0x0, (%rsp)
    00001834: 	nopl	(%rax) # Size: 4
.Ltmp2333:
    00001838: 	movq	%rbp, %rax
    0000183b: 	pxor	%xmm1, %xmm1
    0000183f: 	nop # Size: 1
.Ltmp2331:
    00001840: 	movdqa	DATAat0x23860(%rip), %xmm0
    00001848: 	addq	$0x10, %rax
    0000184c: 	pmulhuw	-0x10(%rax), %xmm0
    00001851: 	psrlw	$0x6, %xmm0
    00001856: 	paddw	%xmm0, %xmm1
    0000185a: 	cmpq	%rax, %rbx
    0000185d: 	jne	.Ltmp2331 # Offset: 6237
    0000185f: 	cvttsd2si	init_value(%rip), %eax
    00001867: 	movdqa	%xmm1, %xmm0
    0000186b: 	psrldq	$0x8, %xmm0
    00001870: 	paddw	%xmm0, %xmm1
    00001874: 	movdqa	%xmm1, %xmm0
    00001878: 	movzwl	%ax, %eax
    0000187b: 	psrldq	$0x4, %xmm0
    00001880: 	imull	$0x8889, %eax, %eax
    00001886: 	paddw	%xmm0, %xmm1
    0000188a: 	movdqa	%xmm1, %xmm0
    0000188e: 	psrldq	$0x2, %xmm0
    00001893: 	shrl	$0x16, %eax
    00001896: 	paddw	%xmm0, %xmm1
    0000189a: 	imulw	$0x1f40, %ax, %ax
    0000189f: 	pextrw	$0x0, %xmm1, %edx
    000018a4: 	cmpw	%dx, %ax
    000018a7: 	je	.Ltmp2332 # Offset: 6311
    000018a9: 	movl	current_test(%rip), %edx
    000018af: 	leaq	DATAat0x231d2(%rip), %rsi
    000018b6: 	movl	$0x1, %edi
    000018bb: 	xorl	%eax, %eax
    000018bd: 	callq	__printf_chk@PLT # Offset: 6333
    000018c2: 	movl	iterations(%rip), %ecx
.Ltmp2332:
    000018c8: 	addl	$0x1, (%rsp)
    000018cc: 	movl	(%rsp), %eax
    000018cf: 	cmpl	%ecx, %eax
    000018d1: 	jl	.Ltmp2333 # Offset: 6353
.Ltmp2330:
    000018d7: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000018de: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rcx
    000018e5: 	subq	$0x20, %rax
    000018e9: 	movq	%rcx, (%rsp)
    000018ed: 	cmpq	%rax, %rcx
    000018f0: 	je	.Ltmp2334 # Offset: 6384
    000018f6: 	leaq	0x10(%rcx), %rdi
    000018fa: 	movq	%rdi, (%rcx)
    000018fd: 	movq	0x90(%rsp), %rsi
    00001905: 	movq	0x98(%rsp), %rcx
    0000190d: 	movq	%rsi, %rax
    00001910: 	movq	%rsi, 0x28(%rsp)
    00001915: 	addq	%rcx, %rax
    00001918: 	movq	%rcx, 0x10(%rsp)
    0000191d: 	je	.Ltmp2335 # Offset: 6429
    0000191f: 	testq	%rsi, %rsi
    00001922: 	je	.Ltmp2336 # Offset: 6434
.Ltmp2335:
    00001928: 	movq	0x10(%rsp), %rax
    0000192d: 	movq	%rax, 0x30(%rsp)
    00001932: 	cmpq	$0xf, %rax
    00001936: 	ja	.Ltmp2337 # Offset: 6454
    0000193c: 	cmpq	$0x1, 0x10(%rsp)
    00001942: 	jne	.Ltmp2338 # Offset: 6466
    00001948: 	movq	0x28(%rsp), %rax
    0000194d: 	movq	(%rsp), %rcx
    00001951: 	movzbl	(%rax), %eax
    00001954: 	movb	%al, 0x10(%rcx)
.Ltmp2468:
    00001957: 	movq	0x10(%rsp), %rax
    0000195c: 	movq	(%rsp), %rcx
    00001960: 	movq	%rax, 0x8(%rcx)
    00001964: 	movb	$0x0, (%rdi,%rax)
    00001968: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000196f: 	addq	$0x20, %rax
    00001973: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2453:
    0000197a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001981: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001988: 	je	.Ltmp2339 # Offset: 6536
.Ltmp2452:
    0000198e: 	movq	-0x20(%rax), %rdi
    00001992: 	movq	%rdi, (%rsp)
    00001996: 	callq	clock@PLT # Offset: 6550
    0000199b: 	movq	(%rsp), %rdi
    0000199f: 	pxor	%xmm0, %xmm0
    000019a3: 	movq	%rax, end_time(%rip)
    000019aa: 	subq	start_time(%rip), %rax
    000019b1: 	cvtsi2sd	%rax, %xmm0
    000019b6: 	divsd	DATAat0x23450(%rip), %xmm0
    000019be: 	callq	_Z13record_resultdPKc # Offset: 6590
    000019c3: 	movq	0x90(%rsp), %rdi
    000019cb: 	cmpq	%r13, %rdi
    000019ce: 	je	.Ltmp2340 # Offset: 6606
    000019d0: 	movq	0xa0(%rsp), %rax
    000019d8: 	leaq	0x1(%rax), %rsi
    000019dc: 	callq	_ZdlPvm@PLT # Offset: 6620
.Ltmp2340:
    000019e1: 	leaq	DATAat0x2338e(%rip), %rdx
    000019e8: 	movq	%r14, %rsi
    000019eb: 	movq	%r12, %rdi
    000019ee: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6638
    000019f3: 	callq	clock@PLT # Offset: 6643
    000019f8: 	movl	iterations(%rip), %ecx
    000019fe: 	movq	%rax, start_time(%rip)
    00001a05: 	testl	%ecx, %ecx
    00001a07: 	jle	.Ltmp2341 # Offset: 6663
    00001a0d: 	movl	$0x0, (%rsp)
    00001a14: 	nopl	(%rax) # Size: 4
.Ltmp2344:
    00001a18: 	movq	%rbp, %rax
    00001a1b: 	pxor	%xmm0, %xmm0
    00001a1f: 	nop # Size: 1
.Ltmp2342:
    00001a20: 	movdqa	DATAat0x23870(%rip), %xmm1
    00001a28: 	paddw	(%rax), %xmm1
    00001a2c: 	addq	$0x10, %rax
    00001a30: 	paddw	%xmm1, %xmm0
    00001a34: 	cmpq	%rbx, %rax
    00001a37: 	jne	.Ltmp2342 # Offset: 6711
    00001a39: 	movdqa	%xmm0, %xmm1
    00001a3d: 	cvttsd2si	init_value(%rip), %eax
    00001a45: 	psrldq	$0x8, %xmm1
    00001a4a: 	paddw	%xmm1, %xmm0
    00001a4e: 	movdqa	%xmm0, %xmm1
    00001a52: 	psrldq	$0x4, %xmm1
    00001a57: 	addl	$0x2, %eax
    00001a5a: 	imulw	$0x1f40, %ax, %ax
    00001a5f: 	paddw	%xmm1, %xmm0
    00001a63: 	movdqa	%xmm0, %xmm1
    00001a67: 	psrldq	$0x2, %xmm1
    00001a6c: 	paddw	%xmm1, %xmm0
    00001a70: 	pextrw	$0x0, %xmm0, %edx
    00001a75: 	cmpw	%dx, %ax
    00001a78: 	je	.Ltmp2343 # Offset: 6776
    00001a7a: 	movl	current_test(%rip), %edx
    00001a80: 	leaq	DATAat0x231d2(%rip), %rsi
    00001a87: 	movl	$0x1, %edi
    00001a8c: 	xorl	%eax, %eax
    00001a8e: 	callq	__printf_chk@PLT # Offset: 6798
    00001a93: 	movl	iterations(%rip), %ecx
.Ltmp2343:
    00001a99: 	addl	$0x1, (%rsp)
    00001a9d: 	movl	(%rsp), %eax
    00001aa0: 	cmpl	%ecx, %eax
    00001aa2: 	jl	.Ltmp2344 # Offset: 6818
.Ltmp2341:
    00001aa8: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001aaf: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00001ab6: 	subq	$0x20, %rax
    00001aba: 	movq	%rsi, (%rsp)
    00001abe: 	cmpq	%rax, %rsi
    00001ac1: 	je	.Ltmp2345 # Offset: 6849
    00001ac7: 	leaq	0x10(%rsi), %rdi
    00001acb: 	movq	%rdi, (%rsi)
    00001ace: 	movq	0x90(%rsp), %rcx
    00001ad6: 	movq	0x98(%rsp), %rsi
    00001ade: 	movq	%rcx, %rax
    00001ae1: 	movq	%rcx, 0x28(%rsp)
    00001ae6: 	addq	%rsi, %rax
    00001ae9: 	movq	%rsi, 0x10(%rsp)
    00001aee: 	je	.Ltmp2346 # Offset: 6894
    00001af0: 	testq	%rcx, %rcx
    00001af3: 	je	.Ltmp2347 # Offset: 6899
.Ltmp2346:
    00001af9: 	movq	0x10(%rsp), %rax
    00001afe: 	movq	%rax, 0x30(%rsp)
    00001b03: 	cmpq	$0xf, %rax
    00001b07: 	ja	.Ltmp2348 # Offset: 6919
    00001b0d: 	cmpq	$0x1, 0x10(%rsp)
    00001b13: 	jne	.Ltmp2349 # Offset: 6931
    00001b19: 	movq	0x28(%rsp), %rax
    00001b1e: 	movq	(%rsp), %rsi
    00001b22: 	movzbl	(%rax), %eax
    00001b25: 	movb	%al, 0x10(%rsi)
.Ltmp2466:
    00001b28: 	movq	0x10(%rsp), %rax
    00001b2d: 	movq	(%rsp), %rsi
    00001b31: 	movq	%rax, 0x8(%rsi)
    00001b35: 	movb	$0x0, (%rdi,%rax)
    00001b39: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001b40: 	addq	$0x20, %rax
    00001b44: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2451:
    00001b4b: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001b52: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001b59: 	je	.Ltmp2350 # Offset: 7001
.Ltmp2450:
    00001b5f: 	movq	-0x20(%rax), %rdi
    00001b63: 	movq	%rdi, (%rsp)
    00001b67: 	callq	clock@PLT # Offset: 7015
    00001b6c: 	movq	(%rsp), %rdi
    00001b70: 	pxor	%xmm0, %xmm0
    00001b74: 	movq	%rax, end_time(%rip)
    00001b7b: 	subq	start_time(%rip), %rax
    00001b82: 	cvtsi2sd	%rax, %xmm0
    00001b87: 	divsd	DATAat0x23450(%rip), %xmm0
    00001b8f: 	callq	_Z13record_resultdPKc # Offset: 7055
    00001b94: 	movq	0x90(%rsp), %rdi
    00001b9c: 	cmpq	%r13, %rdi
    00001b9f: 	je	.Ltmp2351 # Offset: 7071
    00001ba1: 	movq	0xa0(%rsp), %rax
    00001ba9: 	leaq	0x1(%rax), %rsi
    00001bad: 	callq	_ZdlPvm@PLT # Offset: 7085
.Ltmp2351:
    00001bb2: 	leaq	DATAat0x233a9(%rip), %rdx
    00001bb9: 	movq	%r14, %rsi
    00001bbc: 	movq	%r12, %rdi
    00001bbf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7103
    00001bc4: 	callq	clock@PLT # Offset: 7108
    00001bc9: 	movl	iterations(%rip), %ecx
    00001bcf: 	movl	$0x0, (%rsp)
    00001bd6: 	movq	%rax, start_time(%rip)
    00001bdd: 	testl	%ecx, %ecx
    00001bdf: 	jle	.Ltmp2352 # Offset: 7135
    00001be5: 	nopl	(%rax) # Size: 3
.Ltmp2355:
    00001be8: 	movq	%rbp, %rax
    00001beb: 	pxor	%xmm0, %xmm0
    00001bef: 	nop # Size: 1
.Ltmp2353:
    00001bf0: 	paddw	(%rax), %xmm0
    00001bf4: 	addq	$0x10, %rax
    00001bf8: 	cmpq	%rax, %rbx
    00001bfb: 	jne	.Ltmp2353 # Offset: 7163
    00001bfd: 	movdqa	%xmm0, %xmm1
    00001c01: 	cvttsd2si	init_value(%rip), %eax
    00001c09: 	psrldq	$0x8, %xmm1
    00001c0e: 	paddw	%xmm1, %xmm0
    00001c12: 	movdqa	%xmm0, %xmm1
    00001c16: 	psrldq	$0x4, %xmm1
    00001c1b: 	imulw	$0x1f40, %ax, %ax
    00001c20: 	paddw	%xmm1, %xmm0
    00001c24: 	movdqa	%xmm0, %xmm1
    00001c28: 	psrldq	$0x2, %xmm1
    00001c2d: 	paddw	%xmm1, %xmm0
    00001c31: 	pextrw	$0x0, %xmm0, %edx
    00001c36: 	cmpw	%dx, %ax
    00001c39: 	je	.Ltmp2354 # Offset: 7225
    00001c3b: 	movl	current_test(%rip), %edx
    00001c41: 	leaq	DATAat0x231d2(%rip), %rsi
    00001c48: 	movl	$0x1, %edi
    00001c4d: 	xorl	%eax, %eax
    00001c4f: 	callq	__printf_chk@PLT # Offset: 7247
    00001c54: 	movl	iterations(%rip), %ecx
.Ltmp2354:
    00001c5a: 	addl	$0x1, (%rsp)
    00001c5e: 	movl	(%rsp), %eax
    00001c61: 	cmpl	%ecx, %eax
    00001c63: 	jl	.Ltmp2355 # Offset: 7267
.Ltmp2352:
    00001c65: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001c6c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rcx
    00001c73: 	subq	$0x20, %rax
    00001c77: 	movq	%rcx, (%rsp)
    00001c7b: 	cmpq	%rax, %rcx
    00001c7e: 	je	.Ltmp2356 # Offset: 7294
    00001c84: 	leaq	0x10(%rcx), %rdi
    00001c88: 	movq	%rdi, (%rcx)
    00001c8b: 	movq	0x90(%rsp), %rsi
    00001c93: 	movq	0x98(%rsp), %rcx
    00001c9b: 	movq	%rsi, %rax
    00001c9e: 	movq	%rsi, 0x28(%rsp)
    00001ca3: 	addq	%rcx, %rax
    00001ca6: 	movq	%rcx, 0x10(%rsp)
    00001cab: 	je	.Ltmp2357 # Offset: 7339
    00001cad: 	testq	%rsi, %rsi
    00001cb0: 	je	.Ltmp2358 # Offset: 7344
.Ltmp2357:
    00001cb6: 	movq	0x10(%rsp), %rax
    00001cbb: 	movq	%rax, 0x30(%rsp)
    00001cc0: 	cmpq	$0xf, %rax
    00001cc4: 	ja	.Ltmp2359 # Offset: 7364
    00001cca: 	cmpq	$0x1, 0x10(%rsp)
    00001cd0: 	jne	.Ltmp2360 # Offset: 7376
    00001cd6: 	movq	0x28(%rsp), %rax
    00001cdb: 	movq	(%rsp), %rcx
    00001cdf: 	movzbl	(%rax), %eax
    00001ce2: 	movb	%al, 0x10(%rcx)
.Ltmp2474:
    00001ce5: 	movq	0x10(%rsp), %rax
    00001cea: 	movq	(%rsp), %rcx
    00001cee: 	movq	%rax, 0x8(%rcx)
    00001cf2: 	movb	$0x0, (%rdi,%rax)
    00001cf6: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001cfd: 	addq	$0x20, %rax
    00001d01: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2449:
    00001d08: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001d0f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001d16: 	je	.Ltmp2361 # Offset: 7446
.Ltmp2448:
    00001d1c: 	movq	-0x20(%rax), %rdi
    00001d20: 	movq	%rdi, (%rsp)
    00001d24: 	callq	clock@PLT # Offset: 7460
    00001d29: 	movq	(%rsp), %rdi
    00001d2d: 	pxor	%xmm0, %xmm0
    00001d31: 	movq	%rax, end_time(%rip)
    00001d38: 	subq	start_time(%rip), %rax
    00001d3f: 	cvtsi2sd	%rax, %xmm0
    00001d44: 	divsd	DATAat0x23450(%rip), %xmm0
    00001d4c: 	callq	_Z13record_resultdPKc # Offset: 7500
    00001d51: 	movq	0x90(%rsp), %rdi
    00001d59: 	cmpq	%r13, %rdi
    00001d5c: 	je	.Ltmp2362 # Offset: 7516
    00001d5e: 	movq	0xa0(%rsp), %rax
    00001d66: 	leaq	0x1(%rax), %rsi
    00001d6a: 	callq	_ZdlPvm@PLT # Offset: 7530
.Ltmp2362:
    00001d6f: 	leaq	DATAat0x23406(%rip), %rdx
    00001d76: 	movq	%r14, %rsi
    00001d79: 	movq	%r12, %rdi
    00001d7c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7548
    00001d81: 	callq	clock@PLT # Offset: 7553
    00001d86: 	movl	iterations(%rip), %ecx
    00001d8c: 	movq	%rax, start_time(%rip)
    00001d93: 	testl	%ecx, %ecx
    00001d95: 	jle	.Ltmp2363 # Offset: 7573
    00001d9b: 	movdqa	DATAat0x23820(%rip), %xmm4
    00001da3: 	movl	$0x0, 0x10(%rsp)
    00001dab: 	movaps	%xmm4, (%rsp)
    00001daf: 	nop # Size: 1
.Ltmp2366:
    00001db0: 	movq	%rbp, %rax
    00001db3: 	pxor	%xmm0, %xmm0
    00001db7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2364:
    00001dc0: 	movdqa	(%rsp), %xmm1
    00001dc5: 	pand	(%rax), %xmm1
    00001dc9: 	addq	$0x10, %rax
    00001dcd: 	paddw	%xmm1, %xmm0
    00001dd1: 	cmpq	%rbx, %rax
    00001dd4: 	jne	.Ltmp2364 # Offset: 7636
    00001dd6: 	movdqa	%xmm0, %xmm1
    00001dda: 	cvttsd2si	init_value(%rip), %eax
    00001de2: 	psrldq	$0x8, %xmm1
    00001de7: 	paddw	%xmm1, %xmm0
    00001deb: 	movdqa	%xmm0, %xmm1
    00001def: 	psrldq	$0x4, %xmm1
    00001df4: 	andl	$0xa, %eax
    00001df7: 	imulw	$0x1f40, %ax, %ax
    00001dfc: 	paddw	%xmm1, %xmm0
    00001e00: 	movdqa	%xmm0, %xmm1
    00001e04: 	psrldq	$0x2, %xmm1
    00001e09: 	paddw	%xmm1, %xmm0
    00001e0d: 	pextrw	$0x0, %xmm0, %edx
    00001e12: 	cmpw	%dx, %ax
    00001e15: 	je	.Ltmp2365 # Offset: 7701
    00001e17: 	movl	current_test(%rip), %edx
    00001e1d: 	leaq	DATAat0x231d2(%rip), %rsi
    00001e24: 	movl	$0x1, %edi
    00001e29: 	xorl	%eax, %eax
    00001e2b: 	callq	__printf_chk@PLT # Offset: 7723
    00001e30: 	movl	iterations(%rip), %ecx
.Ltmp2365:
    00001e36: 	addl	$0x1, 0x10(%rsp)
    00001e3b: 	movl	0x10(%rsp), %eax
    00001e3f: 	cmpl	%ecx, %eax
    00001e41: 	jl	.Ltmp2366 # Offset: 7745
.Ltmp2363:
    00001e47: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001e4e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00001e55: 	subq	$0x20, %rax
    00001e59: 	movq	%rsi, (%rsp)
    00001e5d: 	cmpq	%rax, %rsi
    00001e60: 	je	.Ltmp2367 # Offset: 7776
    00001e66: 	leaq	0x10(%rsi), %rdi
    00001e6a: 	movq	%rdi, (%rsi)
    00001e6d: 	movq	0x90(%rsp), %rcx
    00001e75: 	movq	0x98(%rsp), %rsi
    00001e7d: 	movq	%rcx, %rax
    00001e80: 	movq	%rcx, 0x28(%rsp)
    00001e85: 	addq	%rsi, %rax
    00001e88: 	movq	%rsi, 0x10(%rsp)
    00001e8d: 	je	.Ltmp2368 # Offset: 7821
    00001e8f: 	testq	%rcx, %rcx
    00001e92: 	je	.Ltmp2369 # Offset: 7826
.Ltmp2368:
    00001e98: 	movq	0x10(%rsp), %rax
    00001e9d: 	movq	%rax, 0x30(%rsp)
    00001ea2: 	cmpq	$0xf, %rax
    00001ea6: 	ja	.Ltmp2370 # Offset: 7846
    00001eac: 	cmpq	$0x1, 0x10(%rsp)
    00001eb2: 	jne	.Ltmp2371 # Offset: 7858
    00001eb8: 	movq	0x28(%rsp), %rax
    00001ebd: 	movq	(%rsp), %rsi
    00001ec1: 	movzbl	(%rax), %eax
    00001ec4: 	movb	%al, 0x10(%rsi)
.Ltmp2472:
    00001ec7: 	movq	0x10(%rsp), %rax
    00001ecc: 	movq	(%rsp), %rsi
    00001ed0: 	movq	%rax, 0x8(%rsi)
    00001ed4: 	movb	$0x0, (%rdi,%rax)
    00001ed8: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001edf: 	addq	$0x20, %rax
    00001ee3: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2447:
    00001eea: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001ef1: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001ef8: 	je	.Ltmp2372 # Offset: 7928
.Ltmp2446:
    00001efe: 	movq	-0x20(%rax), %rdi
    00001f02: 	movq	%rdi, (%rsp)
    00001f06: 	callq	clock@PLT # Offset: 7942
    00001f0b: 	movq	(%rsp), %rdi
    00001f0f: 	pxor	%xmm0, %xmm0
    00001f13: 	movq	%rax, end_time(%rip)
    00001f1a: 	subq	start_time(%rip), %rax
    00001f21: 	cvtsi2sd	%rax, %xmm0
    00001f26: 	divsd	DATAat0x23450(%rip), %xmm0
    00001f2e: 	callq	_Z13record_resultdPKc # Offset: 7982
    00001f33: 	movq	0x90(%rsp), %rdi
    00001f3b: 	cmpq	%r13, %rdi
    00001f3e: 	je	.Ltmp2373 # Offset: 7998
    00001f40: 	movq	0xa0(%rsp), %rax
    00001f48: 	leaq	0x1(%rax), %rsi
    00001f4c: 	callq	_ZdlPvm@PLT # Offset: 8012
.Ltmp2373:
    00001f51: 	leaq	DATAat0x233fd(%rip), %rdx
    00001f58: 	movq	%r14, %rsi
    00001f5b: 	movq	%r12, %rdi
    00001f5e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8030
    00001f63: 	callq	clock@PLT # Offset: 8035
    00001f68: 	movl	iterations(%rip), %ecx
    00001f6e: 	movq	%rax, start_time(%rip)
    00001f75: 	testl	%ecx, %ecx
    00001f77: 	jle	.Ltmp2374 # Offset: 8055
    00001f7d: 	movl	$0x0, (%rsp)
    00001f84: 	nopl	(%rax) # Size: 4
.Ltmp2377:
    00001f88: 	movq	%rbp, %rax
    00001f8b: 	pxor	%xmm0, %xmm0
    00001f8f: 	nop # Size: 1
.Ltmp2375:
    00001f90: 	movdqa	DATAat0x23880(%rip), %xmm1
    00001f98: 	pand	(%rax), %xmm1
    00001f9c: 	addq	$0x10, %rax
    00001fa0: 	paddw	%xmm1, %xmm0
    00001fa4: 	cmpq	%rax, %rbx
    00001fa7: 	jne	.Ltmp2375 # Offset: 8103
    00001fa9: 	movdqa	%xmm0, %xmm1
    00001fad: 	cvttsd2si	init_value(%rip), %eax
    00001fb5: 	psrldq	$0x8, %xmm1
    00001fba: 	paddw	%xmm1, %xmm0
    00001fbe: 	movdqa	%xmm0, %xmm1
    00001fc2: 	psrldq	$0x4, %xmm1
    00001fc7: 	andl	$0xe, %eax
    00001fca: 	imulw	$0x1f40, %ax, %ax
    00001fcf: 	paddw	%xmm1, %xmm0
    00001fd3: 	movdqa	%xmm0, %xmm1
    00001fd7: 	psrldq	$0x2, %xmm1
    00001fdc: 	paddw	%xmm1, %xmm0
    00001fe0: 	pextrw	$0x0, %xmm0, %edx
    00001fe5: 	cmpw	%dx, %ax
    00001fe8: 	je	.Ltmp2376 # Offset: 8168
    00001fea: 	movl	current_test(%rip), %edx
    00001ff0: 	leaq	DATAat0x231d2(%rip), %rsi
    00001ff7: 	movl	$0x1, %edi
    00001ffc: 	xorl	%eax, %eax
    00001ffe: 	callq	__printf_chk@PLT # Offset: 8190
    00002003: 	movl	iterations(%rip), %ecx
.Ltmp2376:
    00002009: 	addl	$0x1, (%rsp)
    0000200d: 	movl	(%rsp), %eax
    00002010: 	cmpl	%ecx, %eax
    00002012: 	jl	.Ltmp2377 # Offset: 8210
.Ltmp2374:
    00002018: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000201f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rcx
    00002026: 	subq	$0x20, %rax
    0000202a: 	movq	%rcx, (%rsp)
    0000202e: 	cmpq	%rax, %rcx
    00002031: 	je	.Ltmp2378 # Offset: 8241
    00002037: 	leaq	0x10(%rcx), %rdi
    0000203b: 	movq	%rdi, (%rcx)
    0000203e: 	movq	0x90(%rsp), %rsi
    00002046: 	movq	0x98(%rsp), %rcx
    0000204e: 	movq	%rsi, %rax
    00002051: 	movq	%rsi, 0x28(%rsp)
    00002056: 	addq	%rcx, %rax
    00002059: 	movq	%rcx, 0x10(%rsp)
    0000205e: 	je	.Ltmp2379 # Offset: 8286
    00002060: 	testq	%rsi, %rsi
    00002063: 	je	.Ltmp2380 # Offset: 8291
.Ltmp2379:
    00002069: 	movq	0x10(%rsp), %rax
    0000206e: 	movq	%rax, 0x30(%rsp)
    00002073: 	cmpq	$0xf, %rax
    00002077: 	ja	.Ltmp2381 # Offset: 8311
    0000207d: 	cmpq	$0x1, 0x10(%rsp)
    00002083: 	jne	.Ltmp2382 # Offset: 8323
    00002089: 	movq	0x28(%rsp), %rax
    0000208e: 	movq	(%rsp), %rcx
    00002092: 	movzbl	(%rax), %eax
    00002095: 	movb	%al, 0x10(%rcx)
.Ltmp2475:
    00002098: 	movq	0x10(%rsp), %rax
    0000209d: 	movq	(%rsp), %rcx
    000020a1: 	movq	%rax, 0x8(%rcx)
    000020a5: 	movb	$0x0, (%rdi,%rax)
    000020a9: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000020b0: 	addq	$0x20, %rax
    000020b4: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2445:
    000020bb: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000020c2: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000020c9: 	je	.Ltmp2383 # Offset: 8393
.Ltmp2444:
    000020cf: 	movq	-0x20(%rax), %rdi
    000020d3: 	movq	%rdi, (%rsp)
    000020d7: 	callq	clock@PLT # Offset: 8407
    000020dc: 	movq	(%rsp), %rdi
    000020e0: 	pxor	%xmm0, %xmm0
    000020e4: 	movq	%rax, end_time(%rip)
    000020eb: 	subq	start_time(%rip), %rax
    000020f2: 	cvtsi2sd	%rax, %xmm0
    000020f7: 	divsd	DATAat0x23450(%rip), %xmm0
    000020ff: 	callq	_Z13record_resultdPKc # Offset: 8447
    00002104: 	movq	0x90(%rsp), %rdi
    0000210c: 	cmpq	%r13, %rdi
    0000210f: 	je	.Ltmp2384 # Offset: 8463
    00002111: 	movq	0xa0(%rsp), %rax
    00002119: 	leaq	0x1(%rax), %rsi
    0000211d: 	callq	_ZdlPvm@PLT # Offset: 8477
.Ltmp2384:
    00002122: 	leaq	DATAat0x2341d(%rip), %rdx
    00002129: 	movq	%r14, %rsi
    0000212c: 	movq	%r12, %rdi
    0000212f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8495
    00002134: 	callq	clock@PLT # Offset: 8500
    00002139: 	movl	iterations(%rip), %ecx
    0000213f: 	movq	%rax, start_time(%rip)
    00002146: 	testl	%ecx, %ecx
    00002148: 	jle	.Ltmp2385 # Offset: 8520
    0000214e: 	movdqa	DATAat0x23820(%rip), %xmm5
    00002156: 	movl	$0x0, 0x10(%rsp)
    0000215e: 	movaps	%xmm5, (%rsp)
    00002162: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2388:
    00002168: 	movq	%rbp, %rax
    0000216b: 	pxor	%xmm0, %xmm0
    0000216f: 	nop # Size: 1
.Ltmp2386:
    00002170: 	movdqa	(%rsp), %xmm1
    00002175: 	por	(%rax), %xmm1
    00002179: 	addq	$0x10, %rax
    0000217d: 	paddw	%xmm1, %xmm0
    00002181: 	cmpq	%rbx, %rax
    00002184: 	jne	.Ltmp2386 # Offset: 8580
    00002186: 	movdqa	%xmm0, %xmm1
    0000218a: 	cvttsd2si	init_value(%rip), %eax
    00002192: 	psrldq	$0x8, %xmm1
    00002197: 	paddw	%xmm1, %xmm0
    0000219b: 	movdqa	%xmm0, %xmm1
    0000219f: 	psrldq	$0x4, %xmm1
    000021a4: 	orl	$0xa, %eax
    000021a7: 	imulw	$0x1f40, %ax, %ax
    000021ac: 	paddw	%xmm1, %xmm0
    000021b0: 	movdqa	%xmm0, %xmm1
    000021b4: 	psrldq	$0x2, %xmm1
    000021b9: 	paddw	%xmm1, %xmm0
    000021bd: 	pextrw	$0x0, %xmm0, %edx
    000021c2: 	cmpw	%dx, %ax
    000021c5: 	je	.Ltmp2387 # Offset: 8645
    000021c7: 	movl	current_test(%rip), %edx
    000021cd: 	leaq	DATAat0x231d2(%rip), %rsi
    000021d4: 	movl	$0x1, %edi
    000021d9: 	xorl	%eax, %eax
    000021db: 	callq	__printf_chk@PLT # Offset: 8667
    000021e0: 	movl	iterations(%rip), %ecx
.Ltmp2387:
    000021e6: 	addl	$0x1, 0x10(%rsp)
    000021eb: 	movl	0x10(%rsp), %eax
    000021ef: 	cmpl	%ecx, %eax
    000021f1: 	jl	.Ltmp2388 # Offset: 8689
.Ltmp2385:
    000021f7: 	movq	%r12, %rsi
    000021fa: 	movq	%r15, %rdi
    000021fd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8701
    00002202: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002209: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00002210: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002217: 	je	.Ltmp2389 # Offset: 8727
.Ltmp2422:
    0000221d: 	movq	-0x20(%rax), %rdi
    00002221: 	movq	%rdi, (%rsp)
    00002225: 	callq	clock@PLT # Offset: 8741
    0000222a: 	movq	(%rsp), %rdi
    0000222e: 	pxor	%xmm0, %xmm0
    00002232: 	movq	%rax, end_time(%rip)
    00002239: 	subq	start_time(%rip), %rax
    00002240: 	cvtsi2sd	%rax, %xmm0
    00002245: 	divsd	DATAat0x23450(%rip), %xmm0
    0000224d: 	callq	_Z13record_resultdPKc # Offset: 8781
    00002252: 	movq	0x90(%rsp), %rdi
    0000225a: 	cmpq	%r13, %rdi
    0000225d: 	je	.Ltmp2390 # Offset: 8797
    0000225f: 	movq	0xa0(%rsp), %rax
    00002267: 	leaq	0x1(%rax), %rsi
    0000226b: 	callq	_ZdlPvm@PLT # Offset: 8811
.Ltmp2390:
    00002270: 	leaq	DATAat0x23414(%rip), %rdx
    00002277: 	movq	%r14, %rsi
    0000227a: 	movq	%r12, %rdi
    0000227d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8829
    00002282: 	callq	clock@PLT # Offset: 8834
    00002287: 	movl	iterations(%rip), %ecx
    0000228d: 	movq	%rax, start_time(%rip)
    00002294: 	testl	%ecx, %ecx
    00002296: 	jle	.Ltmp2391 # Offset: 8854
    0000229c: 	movl	$0x0, (%rsp)
    000022a3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2394:
    000022a8: 	movq	%rbp, %rax
    000022ab: 	pxor	%xmm0, %xmm0
    000022af: 	nop # Size: 1
.Ltmp2392:
    000022b0: 	movdqa	DATAat0x23890(%rip), %xmm1
    000022b8: 	por	(%rax), %xmm1
    000022bc: 	addq	$0x10, %rax
    000022c0: 	paddw	%xmm1, %xmm0
    000022c4: 	cmpq	%rax, %rbx
    000022c7: 	jne	.Ltmp2392 # Offset: 8903
    000022c9: 	movdqa	%xmm0, %xmm1
    000022cd: 	cvttsd2si	init_value(%rip), %eax
    000022d5: 	psrldq	$0x8, %xmm1
    000022da: 	paddw	%xmm1, %xmm0
    000022de: 	movdqa	%xmm0, %xmm1
    000022e2: 	psrldq	$0x4, %xmm1
    000022e7: 	orl	$0x3f, %eax
    000022ea: 	imulw	$0x1f40, %ax, %ax
    000022ef: 	paddw	%xmm1, %xmm0
    000022f3: 	movdqa	%xmm0, %xmm1
    000022f7: 	psrldq	$0x2, %xmm1
    000022fc: 	paddw	%xmm1, %xmm0
    00002300: 	pextrw	$0x0, %xmm0, %edx
    00002305: 	cmpw	%dx, %ax
    00002308: 	je	.Ltmp2393 # Offset: 8968
    0000230a: 	movl	current_test(%rip), %edx
    00002310: 	leaq	DATAat0x231d2(%rip), %rsi
    00002317: 	movl	$0x1, %edi
    0000231c: 	xorl	%eax, %eax
    0000231e: 	callq	__printf_chk@PLT # Offset: 8990
    00002323: 	movl	iterations(%rip), %ecx
.Ltmp2393:
    00002329: 	addl	$0x1, (%rsp)
    0000232d: 	movl	(%rsp), %eax
    00002330: 	cmpl	%ecx, %eax
    00002332: 	jl	.Ltmp2394 # Offset: 9010
.Ltmp2391:
    00002338: 	movq	%r12, %rsi
    0000233b: 	movq	%r15, %rdi
    0000233e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9022
    00002343: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000234a: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00002351: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002358: 	je	.Ltmp2395 # Offset: 9048
.Ltmp2421:
    0000235e: 	movq	-0x20(%rax), %rdi
    00002362: 	movq	%rdi, (%rsp)
    00002366: 	callq	clock@PLT # Offset: 9062
    0000236b: 	movq	(%rsp), %rdi
    0000236f: 	pxor	%xmm0, %xmm0
    00002373: 	movq	%rax, end_time(%rip)
    0000237a: 	subq	start_time(%rip), %rax
    00002381: 	cvtsi2sd	%rax, %xmm0
    00002386: 	divsd	DATAat0x23450(%rip), %xmm0
    0000238e: 	callq	_Z13record_resultdPKc # Offset: 9102
    00002393: 	movq	0x90(%rsp), %rdi
    0000239b: 	cmpq	%r13, %rdi
    0000239e: 	je	.Ltmp2396 # Offset: 9118
    000023a0: 	movq	0xa0(%rsp), %rax
    000023a8: 	leaq	0x1(%rax), %rsi
    000023ac: 	callq	_ZdlPvm@PLT # Offset: 9132
.Ltmp2396:
    000023b1: 	leaq	DATAat0x23433(%rip), %rdx
    000023b8: 	movq	%r14, %rsi
    000023bb: 	movq	%r12, %rdi
    000023be: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9150
    000023c3: 	callq	clock@PLT # Offset: 9155
    000023c8: 	movl	iterations(%rip), %ecx
    000023ce: 	movq	%rax, start_time(%rip)
    000023d5: 	testl	%ecx, %ecx
    000023d7: 	jle	.Ltmp2397 # Offset: 9175
    000023dd: 	movdqa	DATAat0x23820(%rip), %xmm6
    000023e5: 	movl	$0x0, 0x10(%rsp)
    000023ed: 	movaps	%xmm6, (%rsp)
    000023f1: 	nopl	(%rax) # Size: 7
.Ltmp2400:
    000023f8: 	movq	%rbp, %rax
    000023fb: 	pxor	%xmm0, %xmm0
    000023ff: 	nop # Size: 1
.Ltmp2398:
    00002400: 	movdqa	(%rsp), %xmm1
    00002405: 	pxor	(%rax), %xmm1
    00002409: 	addq	$0x10, %rax
    0000240d: 	paddw	%xmm1, %xmm0
    00002411: 	cmpq	%rbx, %rax
    00002414: 	jne	.Ltmp2398 # Offset: 9236
    00002416: 	movdqa	%xmm0, %xmm1
    0000241a: 	cvttsd2si	init_value(%rip), %eax
    00002422: 	psrldq	$0x8, %xmm1
    00002427: 	paddw	%xmm1, %xmm0
    0000242b: 	movdqa	%xmm0, %xmm1
    0000242f: 	psrldq	$0x4, %xmm1
    00002434: 	xorl	$0xa, %eax
    00002437: 	imulw	$0x1f40, %ax, %ax
    0000243c: 	paddw	%xmm1, %xmm0
    00002440: 	movdqa	%xmm0, %xmm1
    00002444: 	psrldq	$0x2, %xmm1
    00002449: 	paddw	%xmm1, %xmm0
    0000244d: 	pextrw	$0x0, %xmm0, %edx
    00002452: 	cmpw	%dx, %ax
    00002455: 	je	.Ltmp2399 # Offset: 9301
    00002457: 	movl	current_test(%rip), %edx
    0000245d: 	leaq	DATAat0x231d2(%rip), %rsi
    00002464: 	movl	$0x1, %edi
    00002469: 	xorl	%eax, %eax
    0000246b: 	callq	__printf_chk@PLT # Offset: 9323
    00002470: 	movl	iterations(%rip), %ecx
.Ltmp2399:
    00002476: 	addl	$0x1, 0x10(%rsp)
    0000247b: 	movl	0x10(%rsp), %eax
    0000247f: 	cmpl	%ecx, %eax
    00002481: 	jl	.Ltmp2400 # Offset: 9345
.Ltmp2397:
    00002487: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000248e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00002495: 	subq	$0x20, %rax
    00002499: 	movq	%rsi, (%rsp)
    0000249d: 	cmpq	%rax, %rsi
    000024a0: 	je	.Ltmp2401 # Offset: 9376
    000024a6: 	leaq	0x10(%rsi), %rdi
    000024aa: 	movq	%rdi, (%rsi)
    000024ad: 	movq	0x90(%rsp), %rcx
    000024b5: 	movq	0x98(%rsp), %rsi
    000024bd: 	movq	%rcx, %rax
    000024c0: 	movq	%rcx, 0x28(%rsp)
    000024c5: 	addq	%rsi, %rax
    000024c8: 	movq	%rsi, 0x10(%rsp)
    000024cd: 	je	.Ltmp2402 # Offset: 9421
    000024cf: 	testq	%rcx, %rcx
    000024d2: 	je	.Ltmp2403 # Offset: 9426
.Ltmp2402:
    000024d8: 	movq	0x10(%rsp), %rax
    000024dd: 	movq	%rax, 0x30(%rsp)
    000024e2: 	cmpq	$0xf, %rax
    000024e6: 	ja	.Ltmp2404 # Offset: 9446
    000024ec: 	cmpq	$0x1, 0x10(%rsp)
    000024f2: 	jne	.Ltmp2405 # Offset: 9458
    000024f8: 	movq	0x28(%rsp), %rax
    000024fd: 	movq	(%rsp), %rsi
    00002501: 	movzbl	(%rax), %eax
    00002504: 	movb	%al, 0x10(%rsi)
.Ltmp2477:
    00002507: 	movq	0x10(%rsp), %rax
    0000250c: 	movq	(%rsp), %rsi
    00002510: 	movq	%rax, 0x8(%rsi)
    00002514: 	movb	$0x0, (%rdi,%rax)
    00002518: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000251f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002526: 	addq	$0x20, %rax
    0000252a: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002531: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00002538: 	je	.Ltmp2406 # Offset: 9528
.Ltmp2420:
    0000253e: 	movq	-0x20(%rax), %rdi
    00002542: 	movq	%rdi, (%rsp)
    00002546: 	callq	clock@PLT # Offset: 9542
    0000254b: 	movq	(%rsp), %rdi
    0000254f: 	pxor	%xmm0, %xmm0
    00002553: 	movq	%rax, end_time(%rip)
    0000255a: 	subq	start_time(%rip), %rax
    00002561: 	cvtsi2sd	%rax, %xmm0
    00002566: 	divsd	DATAat0x23450(%rip), %xmm0
    0000256e: 	callq	_Z13record_resultdPKc # Offset: 9582
    00002573: 	movq	0x90(%rsp), %rdi
    0000257b: 	cmpq	%r13, %rdi
    0000257e: 	je	.Ltmp2407 # Offset: 9598
    00002580: 	movq	0xa0(%rsp), %rax
    00002588: 	leaq	0x1(%rax), %rsi
    0000258c: 	callq	_ZdlPvm@PLT # Offset: 9612
.Ltmp2407:
    00002591: 	leaq	DATAat0x2342a(%rip), %rdx
    00002598: 	movq	%r14, %rsi
    0000259b: 	movq	%r12, %rdi
    0000259e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9630
    000025a3: 	callq	clock@PLT # Offset: 9635
    000025a8: 	movl	iterations(%rip), %ecx
    000025ae: 	movq	%rax, start_time(%rip)
    000025b5: 	testl	%ecx, %ecx
    000025b7: 	jle	.Ltmp2408 # Offset: 9655
    000025bd: 	movl	$0x0, (%rsp)
    000025c4: 	nopl	(%rax) # Size: 4
.Ltmp2411:
    000025c8: 	movq	%rbp, %rax
    000025cb: 	pxor	%xmm0, %xmm0
    000025cf: 	nop # Size: 1
.Ltmp2409:
    000025d0: 	movdqa	DATAat0x238a0(%rip), %xmm1
    000025d8: 	pxor	(%rax), %xmm1
    000025dc: 	addq	$0x10, %rax
    000025e0: 	paddw	%xmm1, %xmm0
    000025e4: 	cmpq	%rbx, %rax
    000025e7: 	jne	.Ltmp2409 # Offset: 9703
    000025e9: 	movdqa	%xmm0, %xmm1
    000025ed: 	cvttsd2si	init_value(%rip), %eax
    000025f5: 	psrldq	$0x8, %xmm1
    000025fa: 	paddw	%xmm1, %xmm0
    000025fe: 	movdqa	%xmm0, %xmm1
    00002602: 	psrldq	$0x4, %xmm1
    00002607: 	xorl	$0x31, %eax
    0000260a: 	imulw	$0x1f40, %ax, %ax
    0000260f: 	paddw	%xmm1, %xmm0
    00002613: 	movdqa	%xmm0, %xmm1
    00002617: 	psrldq	$0x2, %xmm1
    0000261c: 	paddw	%xmm1, %xmm0
    00002620: 	pextrw	$0x0, %xmm0, %edx
    00002625: 	cmpw	%ax, %dx
    00002628: 	je	.Ltmp2410 # Offset: 9768
    0000262a: 	movl	current_test(%rip), %edx
    00002630: 	leaq	DATAat0x231d2(%rip), %rsi
    00002637: 	movl	$0x1, %edi
    0000263c: 	xorl	%eax, %eax
    0000263e: 	callq	__printf_chk@PLT # Offset: 9790
    00002643: 	movl	iterations(%rip), %ecx
.Ltmp2410:
    00002649: 	addl	$0x1, (%rsp)
    0000264d: 	movl	(%rsp), %eax
    00002650: 	cmpl	%ecx, %eax
    00002652: 	jl	.Ltmp2411 # Offset: 9810
.Ltmp2408:
    00002658: 	movq	%r12, %rsi
    0000265b: 	movq	%r15, %rdi
    0000265e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9822
    00002663: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000266a: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00002671: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002678: 	je	.Ltmp2412 # Offset: 9848
.Ltmp2419:
    0000267e: 	movq	-0x20(%rax), %rbp
    00002682: 	callq	clock@PLT # Offset: 9858
    00002687: 	pxor	%xmm0, %xmm0
    0000268b: 	movq	%rax, end_time(%rip)
    00002692: 	movq	%rbp, %rdi
    00002695: 	subq	start_time(%rip), %rax
    0000269c: 	cvtsi2sd	%rax, %xmm0
    000026a1: 	divsd	DATAat0x23450(%rip), %xmm0
    000026a9: 	callq	_Z13record_resultdPKc # Offset: 9897
    000026ae: 	movq	0x90(%rsp), %rdi
    000026b6: 	cmpq	%r13, %rdi
    000026b9: 	je	.Ltmp2413 # Offset: 9913
    000026bb: 	movq	0xa0(%rsp), %rax
    000026c3: 	leaq	0x1(%rax), %rsi
    000026c7: 	callq	_ZdlPvm@PLT # Offset: 9927
.Ltmp2413:
    000026cc: 	leaq	DATAat0x232ac(%rip), %rdx
    000026d3: 	movq	%r14, %rsi
    000026d6: 	movq	%r12, %rdi
    000026d9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9945
    000026de: 	movl	iterations(%rip), %edx
    000026e4: 	xorl	%r8d, %r8d
    000026e7: 	xorl	%ecx, %ecx
    000026e9: 	movl	$0x1f40, %esi
    000026ee: 	movq	0x90(%rsp), %rdi
    000026f6: 	callq	_Z9summarizePKciiii # Offset: 9974
    000026fb: 	movl	base_iterations(%rip), %eax
    00002701: 	movq	0x90(%rsp), %rdi
    00002709: 	movl	%eax, iterations(%rip)
    0000270f: 	cmpq	%r13, %rdi
    00002712: 	je	.Ltmp2414 # Offset: 10002
    00002714: 	movq	0xa0(%rsp), %rax
    0000271c: 	leaq	0x1(%rax), %rsi
    00002720: 	callq	_ZdlPvm@PLT # Offset: 10016
.Ltmp2414:
    00002725: 	movq	0x70(%rsp), %rdi
    0000272a: 	leaq	0x80(%rsp), %rax
    00002732: 	cmpq	%rax, %rdi
    00002735: 	je	.Ltmp2415 # Offset: 10037
    00002737: 	movq	0x80(%rsp), %rax
    0000273f: 	leaq	0x1(%rax), %rsi
    00002743: 	callq	_ZdlPvm@PLT # Offset: 10051
.Ltmp2415:
    00002748: 	movq	0x50(%rsp), %rdi
    0000274d: 	cmpq	0x20(%rsp), %rdi
    00002752: 	je	.Ltmp2416 # Offset: 10066
    00002754: 	movq	0x60(%rsp), %rax
    00002759: 	leaq	0x1(%rax), %rsi
    0000275d: 	callq	_ZdlPvm@PLT # Offset: 10077
.Ltmp2416:
    00002762: 	movq	0x3f38(%rsp), %rax
    0000276a: 	subq	%fs:0x28, %rax
    00002773: 	jne	.Ltmp2417 # Offset: 10099
    00002779: 	addq	$0x3f48, %rsp
    00002780: 	popq	%rbx
    00002781: 	popq	%rbp
    00002782: 	popq	%r12
    00002784: 	popq	%r13
    00002786: 	popq	%r14
    00002788: 	popq	%r15
    0000278a: 	retq # Offset: 10122
.Ltmp2227:
    0000278b: 	movq	0x18(%rsp), %rsi
    00002790: 	movq	0x10(%rsp), %rdi
    00002795: 	xorl	%edx, %edx
    00002797: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10135
    0000279c: 	movq	0x10(%rsp), %rcx
    000027a1: 	movq	%rax, %rdi
    000027a4: 	movq	%rax, (%rcx)
    000027a7: 	movq	0x30(%rsp), %rax
    000027ac: 	movq	%rax, 0x10(%rcx)
.Ltmp2471:
    000027b0: 	movq	(%rsp), %rdx
    000027b4: 	movq	0x28(%rsp), %rsi
    000027b9: 	callq	memcpy@PLT # Offset: 10169
    000027be: 	movq	0x30(%rsp), %rax
    000027c3: 	movq	%rax, (%rsp)
    000027c7: 	movq	0x10(%rsp), %rax
    000027cc: 	movq	(%rax), %rdi
    000027cf: 	jmp	.Ltmp2418 # Offset: 10191
.Ltmp2412:
    000027d4: 	movq	-0x8(%rdx), %rax
    000027d8: 	addq	$0x200, %rax
    000027de: 	jmp	.Ltmp2419 # Offset: 10206
.Ltmp2401:
    000027e3: 	movq	%r12, %rsi
    000027e6: 	movq	%r15, %rdi
    000027e9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10217
    000027ee: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000027f5: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000027fc: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002803: 	jne	.Ltmp2420 # Offset: 10243
.Ltmp2406:
    00002809: 	movq	-0x8(%rdx), %rax
    0000280d: 	addq	$0x200, %rax
    00002813: 	jmp	.Ltmp2420 # Offset: 10259
.Ltmp2395:
    00002818: 	movq	-0x8(%rdx), %rax
    0000281c: 	addq	$0x200, %rax
    00002822: 	jmp	.Ltmp2421 # Offset: 10274
.Ltmp2389:
    00002827: 	movq	-0x8(%rdx), %rax
    0000282b: 	addq	$0x200, %rax
    00002831: 	jmp	.Ltmp2422 # Offset: 10289
.Ltmp2229:
    00002836: 	movq	-0x8(%rdx), %rax
    0000283a: 	addq	$0x200, %rax
    00002840: 	jmp	.Ltmp2423 # Offset: 10304
.Ltmp2224:
    00002845: 	movq	%r12, %rsi
    00002848: 	movq	%r15, %rdi
    0000284b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10315
    00002850: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002857: 	jmp	.Ltmp2424 # Offset: 10327
.Ltmp2222:
    0000285c: 	movq	-0x8(%rdx), %rax
    00002860: 	addq	$0x200, %rax
    00002866: 	jmp	.Ltmp2425 # Offset: 10342
.Ltmp2244:
    0000286b: 	movq	-0x8(%rdx), %rax
    0000286f: 	addq	$0x200, %rax
    00002875: 	jmp	.Ltmp2426 # Offset: 10357
.Ltmp2239:
    0000287a: 	movq	%r12, %rsi
    0000287d: 	movq	%r15, %rdi
    00002880: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10368
    00002885: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000288c: 	jmp	.Ltmp2427 # Offset: 10380
.Ltmp2237:
    00002891: 	movq	-0x8(%rdx), %rax
    00002895: 	addq	$0x200, %rax
    0000289b: 	jmp	.Ltmp2428 # Offset: 10395
.Ltmp2235:
    000028a0: 	movq	-0x8(%rdx), %rax
    000028a4: 	addq	$0x200, %rax
    000028aa: 	jmp	.Ltmp2429 # Offset: 10410
.Ltmp2233:
    000028af: 	movq	-0x8(%rdx), %rax
    000028b3: 	addq	$0x200, %rax
    000028b9: 	jmp	.Ltmp2430 # Offset: 10425
.Ltmp2231:
    000028be: 	movq	-0x8(%rdx), %rax
    000028c2: 	addq	$0x200, %rax
    000028c8: 	jmp	.Ltmp2431 # Offset: 10440
.Ltmp2282:
    000028cd: 	movq	-0x8(%rdx), %rax
    000028d1: 	addq	$0x200, %rax
    000028d7: 	jmp	.Ltmp2432 # Offset: 10455
.Ltmp2276:
    000028dc: 	movq	-0x8(%rdx), %rax
    000028e0: 	addq	$0x200, %rax
    000028e6: 	jmp	.Ltmp2433 # Offset: 10470
.Ltmp2270:
    000028eb: 	movq	-0x8(%rdx), %rax
    000028ef: 	addq	$0x200, %rax
    000028f5: 	jmp	.Ltmp2434 # Offset: 10485
.Ltmp2268:
    000028fa: 	movq	-0x8(%rdx), %rax
    000028fe: 	addq	$0x200, %rax
    00002904: 	jmp	.Ltmp2435 # Offset: 10500
.Ltmp2266:
    00002909: 	movq	-0x8(%rdx), %rax
    0000290d: 	addq	$0x200, %rax
    00002913: 	jmp	.Ltmp2436 # Offset: 10515
.Ltmp2264:
    00002918: 	movq	-0x8(%rdx), %rax
    0000291c: 	addq	$0x200, %rax
    00002922: 	jmp	.Ltmp2437 # Offset: 10530
.Ltmp2259:
    00002927: 	movq	%r12, %rsi
    0000292a: 	movq	%r15, %rdi
    0000292d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10541
    00002932: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002939: 	jmp	.Ltmp2438 # Offset: 10553
.Ltmp2257:
    0000293e: 	movq	-0x8(%rdx), %rax
    00002942: 	addq	$0x200, %rax
    00002948: 	jmp	.Ltmp2439 # Offset: 10568
.Ltmp2252:
    0000294d: 	movq	%r12, %rsi
    00002950: 	movq	%r15, %rdi
    00002953: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10579
    00002958: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000295f: 	jmp	.Ltmp2440 # Offset: 10591
.Ltmp2250:
    00002964: 	movq	-0x8(%rdx), %rax
    00002968: 	addq	$0x200, %rax
    0000296e: 	jmp	.Ltmp2441 # Offset: 10606
.Ltmp2248:
    00002973: 	movq	-0x8(%rdx), %rax
    00002977: 	addq	$0x200, %rax
    0000297d: 	jmp	.Ltmp2442 # Offset: 10621
.Ltmp2246:
    00002982: 	movq	-0x8(%rdx), %rax
    00002986: 	addq	$0x200, %rax
    0000298c: 	jmp	.Ltmp2443 # Offset: 10636
.Ltmp2383:
    00002991: 	movq	-0x8(%rdx), %rax
    00002995: 	addq	$0x200, %rax
    0000299b: 	jmp	.Ltmp2444 # Offset: 10651
.Ltmp2378:
    000029a0: 	movq	%r12, %rsi
    000029a3: 	movq	%r15, %rdi
    000029a6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10662
    000029ab: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000029b2: 	jmp	.Ltmp2445 # Offset: 10674
.Ltmp2372:
    000029b7: 	movq	-0x8(%rdx), %rax
    000029bb: 	addq	$0x200, %rax
    000029c1: 	jmp	.Ltmp2446 # Offset: 10689
.Ltmp2367:
    000029c6: 	movq	%r12, %rsi
    000029c9: 	movq	%r15, %rdi
    000029cc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10700
    000029d1: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000029d8: 	jmp	.Ltmp2447 # Offset: 10712
.Ltmp2361:
    000029dd: 	movq	-0x8(%rdx), %rax
    000029e1: 	addq	$0x200, %rax
    000029e7: 	jmp	.Ltmp2448 # Offset: 10727
.Ltmp2356:
    000029ec: 	movq	%r12, %rsi
    000029ef: 	movq	%r15, %rdi
    000029f2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10738
    000029f7: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000029fe: 	jmp	.Ltmp2449 # Offset: 10750
.Ltmp2350:
    00002a03: 	movq	-0x8(%rdx), %rax
    00002a07: 	addq	$0x200, %rax
    00002a0d: 	jmp	.Ltmp2450 # Offset: 10765
.Ltmp2345:
    00002a12: 	movq	%r12, %rsi
    00002a15: 	movq	%r15, %rdi
    00002a18: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10776
    00002a1d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002a24: 	jmp	.Ltmp2451 # Offset: 10788
.Ltmp2339:
    00002a29: 	movq	-0x8(%rdx), %rax
    00002a2d: 	addq	$0x200, %rax
    00002a33: 	jmp	.Ltmp2452 # Offset: 10803
.Ltmp2334:
    00002a38: 	movq	%r12, %rsi
    00002a3b: 	movq	%r15, %rdi
    00002a3e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10814
    00002a43: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002a4a: 	jmp	.Ltmp2453 # Offset: 10826
.Ltmp2328:
    00002a4f: 	movq	-0x8(%rdx), %rax
    00002a53: 	addq	$0x200, %rax
    00002a59: 	jmp	.Ltmp2454 # Offset: 10841
.Ltmp2323:
    00002a5e: 	movq	%r12, %rsi
    00002a61: 	movq	%r15, %rdi
    00002a64: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10852
    00002a69: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002a70: 	jmp	.Ltmp2455 # Offset: 10864
.Ltmp2317:
    00002a75: 	movq	-0x8(%rdx), %rax
    00002a79: 	addq	$0x200, %rax
    00002a7f: 	jmp	.Ltmp2456 # Offset: 10879
.Ltmp2311:
    00002a84: 	movq	-0x8(%rdx), %rax
    00002a88: 	addq	$0x200, %rax
    00002a8e: 	jmp	.Ltmp2457 # Offset: 10894
.Ltmp2305:
    00002a93: 	movq	-0x8(%rdx), %rax
    00002a97: 	addq	$0x200, %rax
    00002a9d: 	jmp	.Ltmp2458 # Offset: 10909
.Ltmp2299:
    00002aa2: 	movq	-0x8(%rdx), %rax
    00002aa6: 	addq	$0x200, %rax
    00002aac: 	jmp	.Ltmp2459 # Offset: 10924
.Ltmp2293:
    00002ab1: 	movq	-0x8(%rdx), %rax
    00002ab5: 	addq	$0x200, %rax
    00002abb: 	jmp	.Ltmp2460 # Offset: 10939
.Ltmp2288:
    00002ac0: 	movq	%r12, %rsi
    00002ac3: 	movq	%r15, %rdi
    00002ac6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10950
    00002acb: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002ad2: 	jmp	.Ltmp2461 # Offset: 10962
.Ltmp2327:
    00002ad7: 	cmpq	$0x0, 0x10(%rsp)
    00002add: 	je	.Ltmp2462 # Offset: 10973
    00002ae3: 	jmp	.Ltmp2463 # Offset: 10979
    00002ae8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2292:
    00002af0: 	cmpq	$0x0, 0x10(%rsp)
    00002af6: 	je	.Ltmp2464 # Offset: 10998
    00002afc: 	jmp	.Ltmp2465 # Offset: 11004
    00002b01: 	nopl	(%rax) # Size: 7
.Ltmp2349:
    00002b08: 	cmpq	$0x0, 0x10(%rsp)
    00002b0e: 	je	.Ltmp2466 # Offset: 11022
    00002b14: 	jmp	.Ltmp2467 # Offset: 11028
    00002b19: 	nopl	(%rax) # Size: 7
.Ltmp2338:
    00002b20: 	cmpq	$0x0, 0x10(%rsp)
    00002b26: 	je	.Ltmp2468 # Offset: 11046
.Ltmp2482:
    00002b2c: 	movq	0x10(%rsp), %rdx
    00002b31: 	movq	0x28(%rsp), %rsi
    00002b36: 	callq	memcpy@PLT # Offset: 11062
    00002b3b: 	movq	0x30(%rsp), %rax
    00002b40: 	movq	%rax, 0x10(%rsp)
    00002b45: 	movq	(%rsp), %rax
    00002b49: 	movq	(%rax), %rdi
    00002b4c: 	jmp	.Ltmp2468 # Offset: 11084
.Ltmp2256:
    00002b51: 	cmpq	$0x0, (%rsp)
    00002b56: 	je	.Ltmp2469 # Offset: 11094
    00002b5c: 	jmp	.Ltmp2470 # Offset: 11100
    00002b61: 	nopl	(%rax) # Size: 7
.Ltmp2228:
    00002b68: 	cmpq	$0x0, (%rsp)
    00002b6d: 	je	.Ltmp2418 # Offset: 11117
    00002b73: 	jmp	.Ltmp2471 # Offset: 11123
    00002b78: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2371:
    00002b80: 	cmpq	$0x0, 0x10(%rsp)
    00002b86: 	je	.Ltmp2472 # Offset: 11142
    00002b8c: 	jmp	.Ltmp2473 # Offset: 11148
    00002b91: 	nopl	(%rax) # Size: 7
.Ltmp2360:
    00002b98: 	cmpq	$0x0, 0x10(%rsp)
    00002b9e: 	je	.Ltmp2474 # Offset: 11166
.Ltmp2484:
    00002ba4: 	movq	0x10(%rsp), %rdx
    00002ba9: 	movq	0x28(%rsp), %rsi
    00002bae: 	callq	memcpy@PLT # Offset: 11182
    00002bb3: 	movq	0x30(%rsp), %rax
    00002bb8: 	movq	%rax, 0x10(%rsp)
    00002bbd: 	movq	(%rsp), %rax
    00002bc1: 	movq	(%rax), %rdi
    00002bc4: 	jmp	.Ltmp2474 # Offset: 11204
.Ltmp2382:
    00002bc9: 	cmpq	$0x0, 0x10(%rsp)
    00002bcf: 	je	.Ltmp2475 # Offset: 11215
    00002bd5: 	jmp	.Ltmp2476 # Offset: 11221
    00002bda: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2405:
    00002be0: 	cmpq	$0x0, 0x10(%rsp)
    00002be6: 	je	.Ltmp2477 # Offset: 11238
    00002bec: 	jmp	.Ltmp2478 # Offset: 11244
    00002bf1: 	nopl	(%rax) # Size: 7
.Ltmp2263:
    00002bf8: 	cmpq	$0x0, (%rsp)
    00002bfd: 	je	.Ltmp2479 # Offset: 11261
.Ltmp2483:
    00002c03: 	movq	(%rsp), %rdx
    00002c07: 	movq	0x28(%rsp), %rsi
    00002c0c: 	callq	memcpy@PLT # Offset: 11276
    00002c11: 	movq	0x30(%rsp), %rax
    00002c16: 	movq	%rax, (%rsp)
    00002c1a: 	movq	0x10(%rsp), %rax
    00002c1f: 	movq	(%rax), %rdi
    00002c22: 	jmp	.Ltmp2479 # Offset: 11298
.Ltmp2243:
    00002c27: 	cmpq	$0x0, (%rsp)
    00002c2c: 	je	.Ltmp2480 # Offset: 11308
.Ltmp2481:
    00002c32: 	movq	(%rsp), %rdx
    00002c36: 	movq	0x28(%rsp), %rsi
    00002c3b: 	callq	memcpy@PLT # Offset: 11323
    00002c40: 	movq	0x30(%rsp), %rax
    00002c45: 	movq	%rax, (%rsp)
    00002c49: 	movq	0x10(%rsp), %rax
    00002c4e: 	movq	(%rax), %rdi
    00002c51: 	jmp	.Ltmp2480 # Offset: 11345
.Ltmp2381:
    00002c56: 	movq	0x18(%rsp), %rsi
    00002c5b: 	movq	(%rsp), %rdi
    00002c5f: 	xorl	%edx, %edx
    00002c61: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11361
    00002c66: 	movq	(%rsp), %rcx
    00002c6a: 	movq	%rax, %rdi
    00002c6d: 	movq	%rax, (%rcx)
    00002c70: 	movq	0x30(%rsp), %rax
    00002c75: 	movq	%rax, 0x10(%rcx)
.Ltmp2476:
    00002c79: 	movq	0x10(%rsp), %rdx
    00002c7e: 	movq	0x28(%rsp), %rsi
    00002c83: 	callq	memcpy@PLT # Offset: 11395
    00002c88: 	movq	0x30(%rsp), %rax
    00002c8d: 	movq	%rax, 0x10(%rsp)
    00002c92: 	movq	(%rsp), %rax
    00002c96: 	movq	(%rax), %rdi
    00002c99: 	jmp	.Ltmp2475 # Offset: 11417
.Ltmp2370:
    00002c9e: 	movq	0x18(%rsp), %rsi
    00002ca3: 	movq	(%rsp), %rdi
    00002ca7: 	xorl	%edx, %edx
    00002ca9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11433
    00002cae: 	movq	(%rsp), %rsi
    00002cb2: 	movq	%rax, %rdi
    00002cb5: 	movq	%rax, (%rsi)
    00002cb8: 	movq	0x30(%rsp), %rax
    00002cbd: 	movq	%rax, 0x10(%rsi)
.Ltmp2473:
    00002cc1: 	movq	0x10(%rsp), %rdx
    00002cc6: 	movq	0x28(%rsp), %rsi
    00002ccb: 	callq	memcpy@PLT # Offset: 11467
    00002cd0: 	movq	0x30(%rsp), %rax
    00002cd5: 	movq	%rax, 0x10(%rsp)
    00002cda: 	movq	(%rsp), %rax
    00002cde: 	movq	(%rax), %rdi
    00002ce1: 	jmp	.Ltmp2472 # Offset: 11489
.Ltmp2255:
    00002ce6: 	movq	0x18(%rsp), %rsi
    00002ceb: 	movq	0x10(%rsp), %rdi
    00002cf0: 	xorl	%edx, %edx
    00002cf2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11506
    00002cf7: 	movq	0x10(%rsp), %rcx
    00002cfc: 	movq	%rax, %rdi
    00002cff: 	movq	%rax, (%rcx)
    00002d02: 	movq	0x30(%rsp), %rax
    00002d07: 	movq	%rax, 0x10(%rcx)
.Ltmp2470:
    00002d0b: 	movq	(%rsp), %rdx
    00002d0f: 	movq	0x28(%rsp), %rsi
    00002d14: 	callq	memcpy@PLT # Offset: 11540
    00002d19: 	movq	0x30(%rsp), %rax
    00002d1e: 	movq	%rax, (%rsp)
    00002d22: 	movq	0x10(%rsp), %rax
    00002d27: 	movq	(%rax), %rdi
    00002d2a: 	jmp	.Ltmp2469 # Offset: 11562
.Ltmp2242:
    00002d2f: 	movq	0x18(%rsp), %rsi
    00002d34: 	movq	0x10(%rsp), %rdi
    00002d39: 	xorl	%edx, %edx
    00002d3b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11579
    00002d40: 	movq	0x10(%rsp), %rsi
    00002d45: 	movq	%rax, %rdi
    00002d48: 	movq	%rax, (%rsi)
    00002d4b: 	movq	0x30(%rsp), %rax
    00002d50: 	movq	%rax, 0x10(%rsi)
    00002d54: 	jmp	.Ltmp2481 # Offset: 11604
.Ltmp2291:
    00002d59: 	movq	0x18(%rsp), %rsi
    00002d5e: 	movq	(%rsp), %rdi
    00002d62: 	xorl	%edx, %edx
    00002d64: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11620
    00002d69: 	movq	(%rsp), %rcx
    00002d6d: 	movq	%rax, %rdi
    00002d70: 	movq	%rax, (%rcx)
    00002d73: 	movq	0x30(%rsp), %rax
    00002d78: 	movq	%rax, 0x10(%rcx)
.Ltmp2465:
    00002d7c: 	movq	0x10(%rsp), %rdx
    00002d81: 	movq	0x28(%rsp), %rsi
    00002d86: 	callq	memcpy@PLT # Offset: 11654
    00002d8b: 	movq	0x30(%rsp), %rax
    00002d90: 	movq	%rax, 0x10(%rsp)
    00002d95: 	movq	(%rsp), %rax
    00002d99: 	movq	(%rax), %rdi
    00002d9c: 	jmp	.Ltmp2464 # Offset: 11676
.Ltmp2337:
    00002da1: 	movq	0x18(%rsp), %rsi
    00002da6: 	movq	(%rsp), %rdi
    00002daa: 	xorl	%edx, %edx
    00002dac: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11692
    00002db1: 	movq	(%rsp), %rcx
    00002db5: 	movq	%rax, %rdi
    00002db8: 	movq	%rax, (%rcx)
    00002dbb: 	movq	0x30(%rsp), %rax
    00002dc0: 	movq	%rax, 0x10(%rcx)
    00002dc4: 	jmp	.Ltmp2482 # Offset: 11716
.Ltmp2326:
    00002dc9: 	movq	0x18(%rsp), %rsi
    00002dce: 	movq	(%rsp), %rdi
    00002dd2: 	xorl	%edx, %edx
    00002dd4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11732
    00002dd9: 	movq	(%rsp), %rsi
    00002ddd: 	movq	%rax, %rdi
    00002de0: 	movq	%rax, (%rsi)
    00002de3: 	movq	0x30(%rsp), %rax
    00002de8: 	movq	%rax, 0x10(%rsi)
.Ltmp2463:
    00002dec: 	movq	0x10(%rsp), %rdx
    00002df1: 	movq	0x28(%rsp), %rsi
    00002df6: 	callq	memcpy@PLT # Offset: 11766
    00002dfb: 	movq	0x30(%rsp), %rax
    00002e00: 	movq	%rax, 0x10(%rsp)
    00002e05: 	movq	(%rsp), %rax
    00002e09: 	movq	(%rax), %rdi
    00002e0c: 	jmp	.Ltmp2462 # Offset: 11788
.Ltmp2404:
    00002e11: 	movq	0x18(%rsp), %rsi
    00002e16: 	movq	(%rsp), %rdi
    00002e1a: 	xorl	%edx, %edx
    00002e1c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11804
    00002e21: 	movq	(%rsp), %rsi
    00002e25: 	movq	%rax, %rdi
    00002e28: 	movq	%rax, (%rsi)
    00002e2b: 	movq	0x30(%rsp), %rax
    00002e30: 	movq	%rax, 0x10(%rsi)
.Ltmp2478:
    00002e34: 	movq	0x10(%rsp), %rdx
    00002e39: 	movq	0x28(%rsp), %rsi
    00002e3e: 	callq	memcpy@PLT # Offset: 11838
    00002e43: 	movq	0x30(%rsp), %rax
    00002e48: 	movq	%rax, 0x10(%rsp)
    00002e4d: 	movq	(%rsp), %rax
    00002e51: 	movq	(%rax), %rdi
    00002e54: 	jmp	.Ltmp2477 # Offset: 11860
.Ltmp2262:
    00002e59: 	movq	0x18(%rsp), %rsi
    00002e5e: 	movq	0x10(%rsp), %rdi
    00002e63: 	xorl	%edx, %edx
    00002e65: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11877
    00002e6a: 	movq	0x10(%rsp), %rsi
    00002e6f: 	movq	%rax, %rdi
    00002e72: 	movq	%rax, (%rsi)
    00002e75: 	movq	0x30(%rsp), %rax
    00002e7a: 	movq	%rax, 0x10(%rsi)
    00002e7e: 	jmp	.Ltmp2483 # Offset: 11902
.Ltmp2359:
    00002e83: 	movq	0x18(%rsp), %rsi
    00002e88: 	movq	(%rsp), %rdi
    00002e8c: 	xorl	%edx, %edx
    00002e8e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11918
    00002e93: 	movq	(%rsp), %rcx
    00002e97: 	movq	%rax, %rdi
    00002e9a: 	movq	%rax, (%rcx)
    00002e9d: 	movq	0x30(%rsp), %rax
    00002ea2: 	movq	%rax, 0x10(%rcx)
    00002ea6: 	jmp	.Ltmp2484 # Offset: 11942
.Ltmp2348:
    00002eab: 	movq	0x18(%rsp), %rsi
    00002eb0: 	movq	(%rsp), %rdi
    00002eb4: 	xorl	%edx, %edx
    00002eb6: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11958
    00002ebb: 	movq	(%rsp), %rsi
    00002ebf: 	movq	%rax, %rdi
    00002ec2: 	movq	%rax, (%rsi)
    00002ec5: 	movq	0x30(%rsp), %rax
    00002eca: 	movq	%rax, 0x10(%rsi)
.Ltmp2467:
    00002ece: 	movq	0x10(%rsp), %rdx
    00002ed3: 	movq	0x28(%rsp), %rsi
    00002ed8: 	callq	memcpy@PLT # Offset: 11992
    00002edd: 	movq	0x30(%rsp), %rax
    00002ee2: 	movq	%rax, 0x10(%rsp)
    00002ee7: 	movq	(%rsp), %rax
    00002eeb: 	movq	(%rax), %rdi
    00002eee: 	jmp	.Ltmp2466 # Offset: 12014
.Ltmp2241:
    00002ef3: 	leaq	DATAat0x23158(%rip), %rdi
    00002efa: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12026
.Ltmp2254:
    00002eff: 	leaq	DATAat0x23158(%rip), %rdi
    00002f06: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12038
.Ltmp2261:
    00002f0b: 	leaq	DATAat0x23158(%rip), %rdi
    00002f12: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12050
.Ltmp2290:
    00002f17: 	leaq	DATAat0x23158(%rip), %rdi
    00002f1e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12062
.Ltmp2325:
    00002f23: 	leaq	DATAat0x23158(%rip), %rdi
    00002f2a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12074
.Ltmp2336:
    00002f2f: 	leaq	DATAat0x23158(%rip), %rdi
    00002f36: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12086
.Ltmp2347:
    00002f3b: 	leaq	DATAat0x23158(%rip), %rdi
    00002f42: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12098
.Ltmp2358:
    00002f47: 	leaq	DATAat0x23158(%rip), %rdi
    00002f4e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12110
.Ltmp2369:
    00002f53: 	leaq	DATAat0x23158(%rip), %rdi
    00002f5a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12122
.Ltmp2380:
    00002f5f: 	leaq	DATAat0x23158(%rip), %rdi
    00002f66: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12134
.Ltmp2403:
    00002f6b: 	leaq	DATAat0x23158(%rip), %rdi
    00002f72: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12146
.Ltmp2417:
    00002f77: 	callq	__stack_chk_fail@PLT # Offset: 12151
.Ltmp2226:
    00002f7c: 	leaq	DATAat0x23158(%rip), %rdi
    00002f83: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12163
    00002f88: 	endbr64
    00002f8c: 	movq	%rax, %rbx
    00002f8f: 	jmp	.Ltmp2485 # Offset: 12175
    00002f91: 	endbr64
    00002f95: 	movq	%rax, %rbx
    00002f98: 	jmp	.Ltmp2486 # Offset: 12184
    00002f9a: 	endbr64
.Ltmp2492:
    00002f9e: 	movq	%rax, %rbx
    00002fa1: 	jmp	.Ltmp2487 # Offset: 12193
.Ltmp2485:
    00002fa3: 	movq	0x90(%rsp), %rdi
    00002fab: 	leaq	0xa0(%rsp), %rax
    00002fb3: 	cmpq	%rax, %rdi
    00002fb6: 	je	.Ltmp2486 # Offset: 12214
.Ltmp2489:
    00002fb8: 	movq	0xa0(%rsp), %rax
    00002fc0: 	leaq	0x1(%rax), %rsi
    00002fc4: 	callq	_ZdlPvm@PLT # Offset: 12228
.Ltmp2486:
    00002fc9: 	movq	0x50(%rsp), %rdi
    00002fce: 	cmpq	0x20(%rsp), %rdi
    00002fd3: 	je	.Ltmp2488 # Offset: 12243
    00002fd5: 	movq	0x60(%rsp), %rax
    00002fda: 	leaq	0x1(%rax), %rsi
    00002fde: 	callq	_ZdlPvm@PLT # Offset: 12254
.Ltmp2488:
    00002fe3: 	movq	%rbx, %rdi
    00002fe6: 	callq	_Unwind_Resume@PLT # Offset: 12262
.Ltmp2487:
    00002feb: 	movq	0x90(%rsp), %rdi
    00002ff3: 	cmpq	%r13, %rdi
    00002ff6: 	jne	.Ltmp2489 # Offset: 12278
    00002ff8: 	jmp	.Ltmp2486 # Offset: 12280
    00002ffa: 	endbr64
.Ltmp2491:
    00002ffe: 	movq	%rax, %rbx
    00003001: 	jmp	.Ltmp2490 # Offset: 12289
    00003003: 	endbr64
    00003007: 	jmp	.Ltmp2491 # Offset: 12295
    00003009: 	endbr64
    0000300d: 	jmp	.Ltmp2491 # Offset: 12301
    0000300f: 	endbr64
    00003013: 	jmp	.Ltmp2492 # Offset: 12307
.Ltmp2490:
    00003015: 	movq	0x90(%rsp), %rdi
    0000301d: 	cmpq	%r13, %rdi
    00003020: 	je	.Ltmp2493 # Offset: 12320
    00003022: 	movq	0xa0(%rsp), %rax
    0000302a: 	leaq	0x1(%rax), %rsi
    0000302e: 	callq	_ZdlPvm@PLT # Offset: 12334
.Ltmp2493:
    00003033: 	movq	0x70(%rsp), %rdi
    00003038: 	leaq	0x80(%rsp), %rax
    00003040: 	cmpq	%rax, %rdi
    00003043: 	je	.Ltmp2486 # Offset: 12355
    00003045: 	movq	0x80(%rsp), %rax
    0000304d: 	leaq	0x1(%rax), %rsi
    00003051: 	callq	_ZdlPvm@PLT # Offset: 12369
    00003056: 	jmp	.Ltmp2486 # Offset: 12374
    0000305b: 	endbr64
    0000305f: 	jmp	.Ltmp2492 # Offset: 12383
    00003064: 	endbr64
    00003068: 	jmp	.Ltmp2491 # Offset: 12392
    0000306a: 	endbr64
    0000306e: 	jmp	.Ltmp2491 # Offset: 12398
    00003070: 	endbr64
    00003074: 	jmp	.Ltmp2491 # Offset: 12404
    00003076: 	endbr64
    0000307a: 	jmp	.Ltmp2492 # Offset: 12410
    0000307f: 	endbr64
    00003083: 	jmp	.Ltmp2491 # Offset: 12419
    00003088: 	endbr64
    0000308c: 	jmp	.Ltmp2491 # Offset: 12428
    00003091: 	endbr64
    00003095: 	jmp	.Ltmp2491 # Offset: 12437
    0000309a: 	endbr64
    0000309e: 	jmp	.Ltmp2491 # Offset: 12446
    000030a3: 	endbr64
    000030a7: 	jmp	.Ltmp2492 # Offset: 12455
    000030ac: 	endbr64
    000030b0: 	jmp	.Ltmp2491 # Offset: 12464
    000030b5: 	endbr64
    000030b9: 	jmp	.Ltmp2492 # Offset: 12473
    000030be: 	endbr64
    000030c2: 	jmp	.Ltmp2492 # Offset: 12482
    000030c7: 	endbr64
    000030cb: 	jmp	.Ltmp2492 # Offset: 12491
    000030d0: 	endbr64
    000030d4: 	jmp	.Ltmp2492 # Offset: 12500
    000030d9: 	endbr64
    000030dd: 	jmp	.Ltmp2492 # Offset: 12509
    000030e2: 	endbr64
    000030e6: 	movq	%rax, %rbx
    000030e9: 	jmp	.Ltmp2493 # Offset: 12521
    000030ee: 	endbr64
    000030f2: 	jmp	.Ltmp2491 # Offset: 12530
    000030f7: 	endbr64
    000030fb: 	jmp	.Ltmp2491 # Offset: 12539
    00003100: 	endbr64
    00003104: 	jmp	.Ltmp2491 # Offset: 12548
    00003109: 	endbr64
    0000310d: 	jmp	.Ltmp2491 # Offset: 12557
    00003112: 	endbr64
    00003116: 	jmp	.Ltmp2492 # Offset: 12566
    0000311b: 	endbr64
    0000311f: 	jmp	.Ltmp2492 # Offset: 12575
    00003124: 	endbr64
    00003128: 	jmp	.Ltmp2492 # Offset: 12584
    0000312d: 	endbr64
    00003131: 	jmp	.Ltmp2492 # Offset: 12593
    00003136: 	endbr64
    0000313a: 	jmp	.Ltmp2491 # Offset: 12602
    0000313f: 	endbr64
    00003143: 	jmp	.Ltmp2491 # Offset: 12611
    00003148: 	endbr64
    0000314c: 	jmp	.Ltmp2491 # Offset: 12620
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeItEvv"

Binary Function "_Z11TestOneTypeIjEvv" after disassembly {
  Number      : 51
  State       : disassembled
  Address     : 0x1c850
  Size        : 0x3076
  MaxSize     : 0x3080
  Offset      : 0x1c850
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIjEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB050:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x7000(%rsp), %r11
.Ltmp2494:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp2494 # Offset: 37
    00000027: 	subq	$0xdc8, %rsp
    0000002e: 	movdqa	_Z7gLabelsB5cxx11+16(%rip), %xmm3
    00000036: 	movdqa	_Z7gLabelsB5cxx11+32(%rip), %xmm4
    0000003e: 	leaq	_Z7gLabelsB5cxx11(%rip), %r15
    00000045: 	movq	%r15, %rdi
    00000048: 	movq	%fs:0x28, %rax
    00000051: 	movq	%rax, 0x7db8(%rsp)
    00000059: 	xorl	%eax, %eax
    0000005b: 	leaq	0x60(%rsp), %rax
    00000060: 	leaq	0x30(%rsp), %rsi
    00000065: 	movq	$0x8, 0x58(%rsp)
    0000006e: 	movq	%rax, 0x20(%rsp)
    00000073: 	leaq	0xb0(%rsp), %rbp
    0000007b: 	leaq	0x7db0(%rsp), %rbx
    00000083: 	movq	%rax, 0x50(%rsp)
    00000088: 	movabsq	$0x745f3233746e6975, %rax
    00000092: 	movq	%rax, 0x60(%rsp)
    00000097: 	movb	$0x0, 0x68(%rsp)
    0000009c: 	movq	%rsi, 0x18(%rsp)
    000000a1: 	movaps	%xmm3, 0x30(%rsp)
    000000a6: 	movaps	%xmm4, 0x40(%rsp)
    000000ab: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 171
    000000b0: 	cvttsd2si	init_value(%rip), %rax
    000000b9: 	movq	%rax, %xmm0
    000000be: 	movq	%rbp, %rax
    000000c1: 	pshufd	$0x0, %xmm0, %xmm0
    000000c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2495:
    000000d0: 	movaps	%xmm0, (%rax)
    000000d3: 	addq	$0x10, %rax
    000000d7: 	cmpq	%rbx, %rax
    000000da: 	jne	.Ltmp2495 # Offset: 218
    000000dc: 	movl	base_iterations(%rip), %eax
    000000e2: 	leaq	0x90(%rsp), %r12
    000000ea: 	leaq	0x50(%rsp), %r14
    000000ef: 	leaq	DATAat0x231c8(%rip), %rdx
    000000f6: 	movq	%r14, %rsi
    000000f9: 	movq	%r12, %rdi
    000000fc: 	movl	%eax, iterations(%rip)
    00000102: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 258
    00000107: 	callq	clock@PLT # Offset: 263
    0000010c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r13
    00000113: 	movq	%rax, start_time(%rip)
    0000011a: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000121: 	subq	$0x20, %rax
    00000125: 	cmpq	%rax, %r13
    00000128: 	je	.Ltmp2496 # Offset: 296
    0000012e: 	leaq	0x10(%r13), %rdi
    00000132: 	movq	0x98(%rsp), %rsi
    0000013a: 	movq	%rdi, (%r13)
    0000013e: 	movq	0x90(%rsp), %rcx
    00000146: 	movq	%rsi, (%rsp)
    0000014a: 	movq	%rcx, %rax
    0000014d: 	movq	%rcx, 0x10(%rsp)
    00000152: 	addq	%rsi, %rax
    00000155: 	je	.Ltmp2497 # Offset: 341
    00000157: 	testq	%rcx, %rcx
    0000015a: 	je	.Ltmp2498 # Offset: 346
.Ltmp2497:
    00000160: 	movq	(%rsp), %rax
    00000164: 	movq	%rax, 0x30(%rsp)
    00000169: 	cmpq	$0xf, %rax
    0000016d: 	ja	.Ltmp2499 # Offset: 365
    00000173: 	cmpq	$0x1, (%rsp)
    00000178: 	jne	.Ltmp2500 # Offset: 376
    0000017e: 	movq	0x10(%rsp), %rax
    00000183: 	movzbl	(%rax), %eax
    00000186: 	movb	%al, 0x10(%r13)
.Ltmp2692:
    0000018a: 	movq	(%rsp), %rax
    0000018e: 	movq	%rax, 0x8(%r13)
    00000192: 	movb	$0x0, (%rdi,%rax)
    00000196: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000019d: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000001a4: 	addq	$0x20, %rax
    000001a8: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000001af: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    000001b6: 	je	.Ltmp2501 # Offset: 438
.Ltmp2695:
    000001bc: 	movq	-0x20(%rax), %r13
    000001c0: 	callq	clock@PLT # Offset: 448
    000001c5: 	pxor	%xmm0, %xmm0
    000001c9: 	movq	%rax, end_time(%rip)
    000001d0: 	movq	%r13, %rdi
    000001d3: 	subq	start_time(%rip), %rax
    000001da: 	cvtsi2sd	%rax, %xmm0
    000001df: 	divsd	DATAat0x23450(%rip), %xmm0
    000001e7: 	callq	_Z13record_resultdPKc # Offset: 487
    000001ec: 	movq	0x90(%rsp), %rdi
    000001f4: 	leaq	0xa0(%rsp), %r13
    000001fc: 	cmpq	%r13, %rdi
    000001ff: 	je	.Ltmp2502 # Offset: 511
    00000201: 	movq	0xa0(%rsp), %rax
    00000209: 	leaq	0x1(%rax), %rsi
    0000020d: 	callq	_ZdlPvm@PLT # Offset: 525
.Ltmp2502:
    00000212: 	leaq	DATAat0x231e2(%rip), %rdx
    00000219: 	movq	%r14, %rsi
    0000021c: 	movq	%r12, %rdi
    0000021f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 543
    00000224: 	callq	clock@PLT # Offset: 548
    00000229: 	movq	%r12, %rsi
    0000022c: 	movq	%r15, %rdi
    0000022f: 	movq	%rax, start_time(%rip)
    00000236: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 566
    0000023b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000242: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000249: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000250: 	je	.Ltmp2503 # Offset: 592
.Ltmp2697:
    00000256: 	movq	-0x20(%rax), %rdi
    0000025a: 	movq	%rdi, (%rsp)
    0000025e: 	callq	clock@PLT # Offset: 606
    00000263: 	movq	(%rsp), %rdi
    00000267: 	pxor	%xmm0, %xmm0
    0000026b: 	movq	%rax, end_time(%rip)
    00000272: 	subq	start_time(%rip), %rax
    00000279: 	cvtsi2sd	%rax, %xmm0
    0000027e: 	divsd	DATAat0x23450(%rip), %xmm0
    00000286: 	callq	_Z13record_resultdPKc # Offset: 646
    0000028b: 	movq	0x90(%rsp), %rdi
    00000293: 	cmpq	%r13, %rdi
    00000296: 	je	.Ltmp2504 # Offset: 662
    00000298: 	movq	0xa0(%rsp), %rax
    000002a0: 	leaq	0x1(%rax), %rsi
    000002a4: 	callq	_ZdlPvm@PLT # Offset: 676
.Ltmp2504:
    000002a9: 	leaq	DATAat0x231f1(%rip), %rdx
    000002b0: 	movq	%r14, %rsi
    000002b3: 	movq	%r12, %rdi
    000002b6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 694
    000002bb: 	callq	clock@PLT # Offset: 699
    000002c0: 	movq	%r12, %rsi
    000002c3: 	movq	%r15, %rdi
    000002c6: 	movq	%rax, start_time(%rip)
    000002cd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 717
    000002d2: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000002d9: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000002e0: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000002e7: 	je	.Ltmp2505 # Offset: 743
.Ltmp2696:
    000002ed: 	movq	-0x20(%rax), %rdi
    000002f1: 	movq	%rdi, (%rsp)
    000002f5: 	callq	clock@PLT # Offset: 757
    000002fa: 	movq	(%rsp), %rdi
    000002fe: 	pxor	%xmm0, %xmm0
    00000302: 	movq	%rax, end_time(%rip)
    00000309: 	subq	start_time(%rip), %rax
    00000310: 	cvtsi2sd	%rax, %xmm0
    00000315: 	divsd	DATAat0x23450(%rip), %xmm0
    0000031d: 	callq	_Z13record_resultdPKc # Offset: 797
    00000322: 	movq	0x90(%rsp), %rdi
    0000032a: 	cmpq	%r13, %rdi
    0000032d: 	je	.Ltmp2506 # Offset: 813
    0000032f: 	movq	0xa0(%rsp), %rax
    00000337: 	leaq	0x1(%rax), %rsi
    0000033b: 	callq	_ZdlPvm@PLT # Offset: 827
.Ltmp2506:
    00000340: 	leaq	DATAat0x23205(%rip), %rdx
    00000347: 	movq	%r14, %rsi
    0000034a: 	movq	%r12, %rdi
    0000034d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 845
    00000352: 	callq	clock@PLT # Offset: 850
    00000357: 	movq	%r12, %rsi
    0000035a: 	movq	%r15, %rdi
    0000035d: 	movq	%rax, start_time(%rip)
    00000364: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 868
    00000369: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000370: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000377: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000037e: 	je	.Ltmp2507 # Offset: 894
.Ltmp2705:
    00000384: 	movq	-0x20(%rax), %rdi
    00000388: 	movq	%rdi, (%rsp)
    0000038c: 	callq	clock@PLT # Offset: 908
    00000391: 	movq	(%rsp), %rdi
    00000395: 	pxor	%xmm0, %xmm0
    00000399: 	movq	%rax, end_time(%rip)
    000003a0: 	subq	start_time(%rip), %rax
    000003a7: 	cvtsi2sd	%rax, %xmm0
    000003ac: 	divsd	DATAat0x23450(%rip), %xmm0
    000003b4: 	callq	_Z13record_resultdPKc # Offset: 948
    000003b9: 	movq	0x90(%rsp), %rdi
    000003c1: 	cmpq	%r13, %rdi
    000003c4: 	je	.Ltmp2508 # Offset: 964
    000003c6: 	movq	0xa0(%rsp), %rax
    000003ce: 	leaq	0x1(%rax), %rsi
    000003d2: 	callq	_ZdlPvm@PLT # Offset: 978
.Ltmp2508:
    000003d7: 	leaq	DATAat0x23219(%rip), %rdx
    000003de: 	movq	%r14, %rsi
    000003e1: 	movq	%r12, %rdi
    000003e4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 996
    000003e9: 	callq	clock@PLT # Offset: 1001
    000003ee: 	movq	%r12, %rsi
    000003f1: 	movq	%r15, %rdi
    000003f4: 	movq	%rax, start_time(%rip)
    000003fb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1019
    00000400: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000407: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000040e: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000415: 	je	.Ltmp2509 # Offset: 1045
.Ltmp2704:
    0000041b: 	movq	-0x20(%rax), %rdi
    0000041f: 	movq	%rdi, (%rsp)
    00000423: 	callq	clock@PLT # Offset: 1059
    00000428: 	movq	(%rsp), %rdi
    0000042c: 	pxor	%xmm0, %xmm0
    00000430: 	movq	%rax, end_time(%rip)
    00000437: 	subq	start_time(%rip), %rax
    0000043e: 	cvtsi2sd	%rax, %xmm0
    00000443: 	divsd	DATAat0x23450(%rip), %xmm0
    0000044b: 	callq	_Z13record_resultdPKc # Offset: 1099
    00000450: 	movq	0x90(%rsp), %rdi
    00000458: 	cmpq	%r13, %rdi
    0000045b: 	je	.Ltmp2510 # Offset: 1115
    0000045d: 	movq	0xa0(%rsp), %rax
    00000465: 	leaq	0x1(%rax), %rsi
    00000469: 	callq	_ZdlPvm@PLT # Offset: 1129
.Ltmp2510:
    0000046e: 	leaq	DATAat0x233c2(%rip), %rdx
    00000475: 	movq	%r14, %rsi
    00000478: 	movq	%r12, %rdi
    0000047b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1147
    00000480: 	callq	clock@PLT # Offset: 1152
    00000485: 	movq	%r12, %rsi
    00000488: 	movq	%r15, %rdi
    0000048b: 	movq	%rax, start_time(%rip)
    00000492: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1170
    00000497: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000049e: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000004a5: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000004ac: 	je	.Ltmp2511 # Offset: 1196
.Ltmp2703:
    000004b2: 	movq	-0x20(%rax), %rdi
    000004b6: 	movq	%rdi, (%rsp)
    000004ba: 	callq	clock@PLT # Offset: 1210
    000004bf: 	movq	(%rsp), %rdi
    000004c3: 	pxor	%xmm0, %xmm0
    000004c7: 	movq	%rax, end_time(%rip)
    000004ce: 	subq	start_time(%rip), %rax
    000004d5: 	cvtsi2sd	%rax, %xmm0
    000004da: 	divsd	DATAat0x23450(%rip), %xmm0
    000004e2: 	callq	_Z13record_resultdPKc # Offset: 1250
    000004e7: 	movq	0x90(%rsp), %rdi
    000004ef: 	cmpq	%r13, %rdi
    000004f2: 	je	.Ltmp2512 # Offset: 1266
    000004f4: 	movq	0xa0(%rsp), %rax
    000004fc: 	leaq	0x1(%rax), %rsi
    00000500: 	callq	_ZdlPvm@PLT # Offset: 1280
.Ltmp2512:
    00000505: 	leaq	DATAat0x23279(%rip), %rdx
    0000050c: 	movq	%r14, %rsi
    0000050f: 	movq	%r12, %rdi
    00000512: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1298
    00000517: 	callq	clock@PLT # Offset: 1303
    0000051c: 	movq	%r12, %rsi
    0000051f: 	movq	%r15, %rdi
    00000522: 	movq	%rax, start_time(%rip)
    00000529: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1321
    0000052e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000535: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000053c: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000543: 	je	.Ltmp2513 # Offset: 1347
.Ltmp2702:
    00000549: 	movq	-0x20(%rax), %rdi
    0000054d: 	movq	%rdi, (%rsp)
    00000551: 	callq	clock@PLT # Offset: 1361
    00000556: 	movq	(%rsp), %rdi
    0000055a: 	pxor	%xmm0, %xmm0
    0000055e: 	movq	%rax, end_time(%rip)
    00000565: 	subq	start_time(%rip), %rax
    0000056c: 	cvtsi2sd	%rax, %xmm0
    00000571: 	divsd	DATAat0x23450(%rip), %xmm0
    00000579: 	callq	_Z13record_resultdPKc # Offset: 1401
    0000057e: 	movq	0x90(%rsp), %rdi
    00000586: 	cmpq	%r13, %rdi
    00000589: 	je	.Ltmp2514 # Offset: 1417
    0000058b: 	movq	0xa0(%rsp), %rax
    00000593: 	leaq	0x1(%rax), %rsi
    00000597: 	callq	_ZdlPvm@PLT # Offset: 1431
.Ltmp2514:
    0000059c: 	leaq	DATAat0x2322b(%rip), %rdx
    000005a3: 	movq	%r14, %rsi
    000005a6: 	movq	%r12, %rdi
    000005a9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1449
    000005ae: 	callq	clock@PLT # Offset: 1454
    000005b3: 	movq	%r12, %rsi
    000005b6: 	movq	%r15, %rdi
    000005b9: 	movq	%rax, start_time(%rip)
    000005c0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1472
    000005c5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000005cc: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000005d3: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000005da: 	je	.Ltmp2515 # Offset: 1498
.Ltmp2701:
    000005e0: 	movq	-0x20(%rax), %rdi
    000005e4: 	movq	%rdi, (%rsp)
    000005e8: 	callq	clock@PLT # Offset: 1512
    000005ed: 	movq	(%rsp), %rdi
    000005f1: 	pxor	%xmm0, %xmm0
    000005f5: 	movq	%rax, end_time(%rip)
    000005fc: 	subq	start_time(%rip), %rax
    00000603: 	cvtsi2sd	%rax, %xmm0
    00000608: 	divsd	DATAat0x23450(%rip), %xmm0
    00000610: 	callq	_Z13record_resultdPKc # Offset: 1552
    00000615: 	movq	0x90(%rsp), %rdi
    0000061d: 	cmpq	%r13, %rdi
    00000620: 	je	.Ltmp2516 # Offset: 1568
    00000622: 	movq	0xa0(%rsp), %rax
    0000062a: 	leaq	0x1(%rax), %rsi
    0000062e: 	callq	_ZdlPvm@PLT # Offset: 1582
.Ltmp2516:
    00000633: 	leaq	DATAat0x2323f(%rip), %rdx
    0000063a: 	movq	%r14, %rsi
    0000063d: 	movq	%r12, %rdi
    00000640: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1600
    00000645: 	callq	clock@PLT # Offset: 1605
    0000064a: 	movq	%r12, %rsi
    0000064d: 	movq	%r15, %rdi
    00000650: 	movq	%rax, start_time(%rip)
    00000657: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1623
    0000065c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000663: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000066a: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000671: 	je	.Ltmp2517 # Offset: 1649
.Ltmp2700:
    00000677: 	movq	-0x20(%rax), %rdi
    0000067b: 	movq	%rdi, (%rsp)
    0000067f: 	callq	clock@PLT # Offset: 1663
    00000684: 	movq	(%rsp), %rdi
    00000688: 	pxor	%xmm0, %xmm0
    0000068c: 	movq	%rax, end_time(%rip)
    00000693: 	subq	start_time(%rip), %rax
    0000069a: 	cvtsi2sd	%rax, %xmm0
    0000069f: 	divsd	DATAat0x23450(%rip), %xmm0
    000006a7: 	callq	_Z13record_resultdPKc # Offset: 1703
    000006ac: 	movq	0x90(%rsp), %rdi
    000006b4: 	cmpq	%r13, %rdi
    000006b7: 	je	.Ltmp2518 # Offset: 1719
    000006b9: 	movq	0xa0(%rsp), %rax
    000006c1: 	leaq	0x1(%rax), %rsi
    000006c5: 	callq	_ZdlPvm@PLT # Offset: 1733
.Ltmp2518:
    000006ca: 	leaq	DATAat0x23257(%rip), %rdx
    000006d1: 	movq	%r14, %rsi
    000006d4: 	movq	%r12, %rdi
    000006d7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1751
    000006dc: 	callq	clock@PLT # Offset: 1756
    000006e1: 	movq	%r12, %rsi
    000006e4: 	movq	%r15, %rdi
    000006e7: 	movq	%rax, start_time(%rip)
    000006ee: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1774
    000006f3: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000006fa: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000701: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000708: 	je	.Ltmp2519 # Offset: 1800
.Ltmp2699:
    0000070e: 	movq	-0x20(%rax), %rdi
    00000712: 	movq	%rdi, (%rsp)
    00000716: 	callq	clock@PLT # Offset: 1814
    0000071b: 	movq	(%rsp), %rdi
    0000071f: 	pxor	%xmm0, %xmm0
    00000723: 	movq	%rax, end_time(%rip)
    0000072a: 	subq	start_time(%rip), %rax
    00000731: 	cvtsi2sd	%rax, %xmm0
    00000736: 	divsd	DATAat0x23450(%rip), %xmm0
    0000073e: 	callq	_Z13record_resultdPKc # Offset: 1854
    00000743: 	movq	0x90(%rsp), %rdi
    0000074b: 	cmpq	%r13, %rdi
    0000074e: 	je	.Ltmp2520 # Offset: 1870
    00000750: 	movq	0xa0(%rsp), %rax
    00000758: 	leaq	0x1(%rax), %rsi
    0000075c: 	callq	_ZdlPvm@PLT # Offset: 1884
.Ltmp2520:
    00000761: 	leaq	DATAat0x2326c(%rip), %rdx
    00000768: 	movq	%r14, %rsi
    0000076b: 	movq	%r12, %rdi
    0000076e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1902
    00000773: 	callq	clock@PLT # Offset: 1907
    00000778: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    0000077f: 	movq	%rax, start_time(%rip)
    00000786: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000078d: 	movq	%rsi, 0x10(%rsp)
    00000792: 	subq	$0x20, %rax
    00000796: 	cmpq	%rax, %rsi
    00000799: 	je	.Ltmp2521 # Offset: 1945
    0000079f: 	leaq	0x10(%rsi), %rdi
    000007a3: 	movq	0x98(%rsp), %rcx
    000007ab: 	movq	%rdi, (%rsi)
    000007ae: 	movq	0x90(%rsp), %rsi
    000007b6: 	movq	%rcx, (%rsp)
    000007ba: 	movq	%rsi, %rax
    000007bd: 	movq	%rsi, 0x28(%rsp)
    000007c2: 	addq	%rcx, %rax
    000007c5: 	je	.Ltmp2522 # Offset: 1989
    000007c7: 	testq	%rsi, %rsi
    000007ca: 	je	.Ltmp2523 # Offset: 1994
.Ltmp2522:
    000007d0: 	movq	(%rsp), %rax
    000007d4: 	movq	%rax, 0x30(%rsp)
    000007d9: 	cmpq	$0xf, %rax
    000007dd: 	ja	.Ltmp2524 # Offset: 2013
    000007e3: 	cmpq	$0x1, (%rsp)
    000007e8: 	jne	.Ltmp2525 # Offset: 2024
    000007ee: 	movq	0x28(%rsp), %rax
    000007f3: 	movq	0x10(%rsp), %rsi
    000007f8: 	movzbl	(%rax), %eax
    000007fb: 	movb	%al, 0x10(%rsi)
.Ltmp2747:
    000007fe: 	movq	(%rsp), %rax
    00000802: 	movq	0x10(%rsp), %rcx
    00000807: 	movq	%rax, 0x8(%rcx)
    0000080b: 	movb	$0x0, (%rdi,%rax)
    0000080f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000816: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000081d: 	addq	$0x20, %rax
    00000821: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000828: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    0000082f: 	je	.Ltmp2526 # Offset: 2095
.Ltmp2698:
    00000835: 	movq	-0x20(%rax), %rdi
    00000839: 	movq	%rdi, (%rsp)
    0000083d: 	callq	clock@PLT # Offset: 2109
    00000842: 	movq	(%rsp), %rdi
    00000846: 	pxor	%xmm0, %xmm0
    0000084a: 	movq	%rax, end_time(%rip)
    00000851: 	subq	start_time(%rip), %rax
    00000858: 	cvtsi2sd	%rax, %xmm0
    0000085d: 	divsd	DATAat0x23450(%rip), %xmm0
    00000865: 	callq	_Z13record_resultdPKc # Offset: 2149
    0000086a: 	movq	0x90(%rsp), %rdi
    00000872: 	cmpq	%r13, %rdi
    00000875: 	je	.Ltmp2527 # Offset: 2165
    00000877: 	movq	0xa0(%rsp), %rax
    0000087f: 	leaq	0x1(%rax), %rsi
    00000883: 	callq	_ZdlPvm@PLT # Offset: 2179
.Ltmp2527:
    00000888: 	leaq	DATAat0x2328a(%rip), %rdx
    0000088f: 	movq	%r14, %rsi
    00000892: 	movq	%r12, %rdi
    00000895: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2197
    0000089a: 	callq	clock@PLT # Offset: 2202
    0000089f: 	movq	%r12, %rsi
    000008a2: 	movq	%r15, %rdi
    000008a5: 	movq	%rax, start_time(%rip)
    000008ac: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2220
    000008b1: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000008b8: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000008bf: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000008c6: 	je	.Ltmp2528 # Offset: 2246
.Ltmp2713:
    000008cc: 	movq	-0x20(%rax), %rdi
    000008d0: 	movq	%rdi, (%rsp)
    000008d4: 	callq	clock@PLT # Offset: 2260
    000008d9: 	movq	(%rsp), %rdi
    000008dd: 	pxor	%xmm0, %xmm0
    000008e1: 	movq	%rax, end_time(%rip)
    000008e8: 	subq	start_time(%rip), %rax
    000008ef: 	cvtsi2sd	%rax, %xmm0
    000008f4: 	divsd	DATAat0x23450(%rip), %xmm0
    000008fc: 	callq	_Z13record_resultdPKc # Offset: 2300
    00000901: 	movq	0x90(%rsp), %rdi
    00000909: 	cmpq	%r13, %rdi
    0000090c: 	je	.Ltmp2529 # Offset: 2316
    0000090e: 	movq	0xa0(%rsp), %rax
    00000916: 	leaq	0x1(%rax), %rsi
    0000091a: 	callq	_ZdlPvm@PLT # Offset: 2330
.Ltmp2529:
    0000091f: 	leaq	DATAat0x233d1(%rip), %rdx
    00000926: 	movq	%r14, %rsi
    00000929: 	movq	%r12, %rdi
    0000092c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2348
    00000931: 	callq	clock@PLT # Offset: 2353
    00000936: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    0000093d: 	movq	%rax, start_time(%rip)
    00000944: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000094b: 	movq	%rsi, 0x10(%rsp)
    00000950: 	subq	$0x20, %rax
    00000954: 	cmpq	%rax, %rsi
    00000957: 	je	.Ltmp2530 # Offset: 2391
    0000095d: 	leaq	0x10(%rsi), %rdi
    00000961: 	movq	%rdi, (%rsi)
    00000964: 	movq	0x90(%rsp), %rcx
    0000096c: 	movq	0x98(%rsp), %rsi
    00000974: 	movq	%rcx, %rax
    00000977: 	movq	%rcx, 0x28(%rsp)
    0000097c: 	addq	%rsi, %rax
    0000097f: 	movq	%rsi, (%rsp)
    00000983: 	je	.Ltmp2531 # Offset: 2435
    00000985: 	testq	%rcx, %rcx
    00000988: 	je	.Ltmp2532 # Offset: 2440
.Ltmp2531:
    0000098e: 	movq	(%rsp), %rax
    00000992: 	movq	%rax, 0x30(%rsp)
    00000997: 	cmpq	$0xf, %rax
    0000099b: 	ja	.Ltmp2533 # Offset: 2459
    000009a1: 	cmpq	$0x1, (%rsp)
    000009a6: 	jne	.Ltmp2534 # Offset: 2470
    000009ac: 	movq	0x28(%rsp), %rax
    000009b1: 	movq	0x10(%rsp), %rsi
    000009b6: 	movzbl	(%rax), %eax
    000009b9: 	movb	%al, 0x10(%rsi)
.Ltmp2739:
    000009bc: 	movq	(%rsp), %rax
    000009c0: 	movq	0x10(%rsp), %rcx
    000009c5: 	movq	%rax, 0x8(%rcx)
    000009c9: 	movb	$0x0, (%rdi,%rax)
    000009cd: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000009d4: 	addq	$0x20, %rax
    000009d8: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2712:
    000009df: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000009e6: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000009ed: 	je	.Ltmp2535 # Offset: 2541
.Ltmp2711:
    000009f3: 	movq	-0x20(%rax), %rdi
    000009f7: 	movq	%rdi, (%rsp)
    000009fb: 	callq	clock@PLT # Offset: 2555
    00000a00: 	movq	(%rsp), %rdi
    00000a04: 	pxor	%xmm0, %xmm0
    00000a08: 	movq	%rax, end_time(%rip)
    00000a0f: 	subq	start_time(%rip), %rax
    00000a16: 	cvtsi2sd	%rax, %xmm0
    00000a1b: 	divsd	DATAat0x23450(%rip), %xmm0
    00000a23: 	callq	_Z13record_resultdPKc # Offset: 2595
    00000a28: 	movq	0x90(%rsp), %rdi
    00000a30: 	cmpq	%r13, %rdi
    00000a33: 	je	.Ltmp2536 # Offset: 2611
    00000a35: 	movq	0xa0(%rsp), %rax
    00000a3d: 	leaq	0x1(%rax), %rsi
    00000a41: 	callq	_ZdlPvm@PLT # Offset: 2625
.Ltmp2536:
    00000a46: 	leaq	DATAat0x233e0(%rip), %rdx
    00000a4d: 	movq	%r14, %rsi
    00000a50: 	movq	%r12, %rdi
    00000a53: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2643
    00000a58: 	callq	clock@PLT # Offset: 2648
    00000a5d: 	movq	%r12, %rsi
    00000a60: 	movq	%r15, %rdi
    00000a63: 	movq	%rax, start_time(%rip)
    00000a6a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2666
    00000a6f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000a76: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000a7d: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000a84: 	je	.Ltmp2537 # Offset: 2692
.Ltmp2710:
    00000a8a: 	movq	-0x20(%rax), %rdi
    00000a8e: 	movq	%rdi, (%rsp)
    00000a92: 	callq	clock@PLT # Offset: 2706
    00000a97: 	movq	(%rsp), %rdi
    00000a9b: 	pxor	%xmm0, %xmm0
    00000a9f: 	movq	%rax, end_time(%rip)
    00000aa6: 	subq	start_time(%rip), %rax
    00000aad: 	cvtsi2sd	%rax, %xmm0
    00000ab2: 	divsd	DATAat0x23450(%rip), %xmm0
    00000aba: 	callq	_Z13record_resultdPKc # Offset: 2746
    00000abf: 	movq	0x90(%rsp), %rdi
    00000ac7: 	cmpq	%r13, %rdi
    00000aca: 	je	.Ltmp2538 # Offset: 2762
    00000acc: 	movq	0xa0(%rsp), %rax
    00000ad4: 	leaq	0x1(%rax), %rsi
    00000ad8: 	callq	_ZdlPvm@PLT # Offset: 2776
.Ltmp2538:
    00000add: 	leaq	DATAat0x233ee(%rip), %rdx
    00000ae4: 	movq	%r14, %rsi
    00000ae7: 	movq	%r12, %rdi
    00000aea: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2794
    00000aef: 	callq	clock@PLT # Offset: 2799
    00000af4: 	movq	%r12, %rsi
    00000af7: 	movq	%r15, %rdi
    00000afa: 	movq	%rax, start_time(%rip)
    00000b01: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2817
    00000b06: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000b0d: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000b14: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000b1b: 	je	.Ltmp2539 # Offset: 2843
.Ltmp2709:
    00000b21: 	movq	-0x20(%rax), %rdi
    00000b25: 	movq	%rdi, (%rsp)
    00000b29: 	callq	clock@PLT # Offset: 2857
    00000b2e: 	movq	(%rsp), %rdi
    00000b32: 	pxor	%xmm0, %xmm0
    00000b36: 	movq	%rax, end_time(%rip)
    00000b3d: 	subq	start_time(%rip), %rax
    00000b44: 	cvtsi2sd	%rax, %xmm0
    00000b49: 	divsd	DATAat0x23450(%rip), %xmm0
    00000b51: 	callq	_Z13record_resultdPKc # Offset: 2897
    00000b56: 	movq	0x90(%rsp), %rdi
    00000b5e: 	cmpq	%r13, %rdi
    00000b61: 	je	.Ltmp2540 # Offset: 2913
    00000b63: 	movq	0xa0(%rsp), %rax
    00000b6b: 	leaq	0x1(%rax), %rsi
    00000b6f: 	callq	_ZdlPvm@PLT # Offset: 2927
.Ltmp2540:
    00000b74: 	leaq	0x70(%rsp), %rdi
    00000b79: 	leaq	DATAat0x232a5(%rip), %rdx
    00000b80: 	movq	%r14, %rsi
    00000b83: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2947
    00000b88: 	movl	iterations(%rip), %edx
    00000b8e: 	movq	0x70(%rsp), %rdi
    00000b93: 	xorl	%r8d, %r8d
    00000b96: 	xorl	%ecx, %ecx
    00000b98: 	movl	$0x1f40, %esi
    00000b9d: 	callq	_Z9summarizePKciiii # Offset: 2973
    00000ba2: 	movslq	base_iterations(%rip), %rax
    00000ba9: 	movq	%r14, %rsi
    00000bac: 	movq	%r12, %rdi
    00000baf: 	movq	%rax, %rdx
    00000bb2: 	imulq	$0x66666667, %rax, %rax
    00000bb9: 	sarl	$0x1f, %edx
    00000bbc: 	sarq	$0x22, %rax
    00000bc0: 	subl	%edx, %eax
    00000bc2: 	leaq	DATAat0x232be(%rip), %rdx
    00000bc9: 	movl	%eax, iterations(%rip)
    00000bcf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3023
    00000bd4: 	callq	clock@PLT # Offset: 3028
    00000bd9: 	movl	iterations(%rip), %ecx
    00000bdf: 	movq	%rax, start_time(%rip)
    00000be6: 	testl	%ecx, %ecx
    00000be8: 	jle	.Ltmp2541 # Offset: 3048
    00000bee: 	movdqa	DATAat0x23790(%rip), %xmm5
    00000bf6: 	movl	$0x0, 0x10(%rsp)
    00000bfe: 	movaps	%xmm5, (%rsp)
    00000c02: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2544:
    00000c08: 	movq	%rbp, %rax
    00000c0b: 	pxor	%xmm0, %xmm0
    00000c0f: 	nop # Size: 1
.Ltmp2542:
    00000c10: 	movdqa	(%rsp), %xmm1
    00000c15: 	paddd	(%rax), %xmm1
    00000c19: 	addq	$0x10, %rax
    00000c1d: 	paddd	%xmm1, %xmm0
    00000c21: 	cmpq	%rax, %rbx
    00000c24: 	jne	.Ltmp2542 # Offset: 3108
    00000c26: 	cvttsd2si	init_value(%rip), %rdx
    00000c2f: 	movdqa	%xmm0, %xmm1
    00000c33: 	psrldq	$0x8, %xmm1
    00000c38: 	paddd	%xmm1, %xmm0
    00000c3c: 	movdqa	%xmm0, %xmm1
    00000c40: 	addl	$0xa, %edx
    00000c43: 	psrldq	$0x4, %xmm1
    00000c48: 	imull	$0x1f40, %edx, %edx
    00000c4e: 	paddd	%xmm1, %xmm0
    00000c52: 	movd	%xmm0, %eax
    00000c56: 	cmpl	%eax, %edx
    00000c58: 	je	.Ltmp2543 # Offset: 3160
    00000c5a: 	movl	current_test(%rip), %edx
    00000c60: 	leaq	DATAat0x231d2(%rip), %rsi
    00000c67: 	movl	$0x1, %edi
    00000c6c: 	xorl	%eax, %eax
    00000c6e: 	callq	__printf_chk@PLT # Offset: 3182
    00000c73: 	movl	iterations(%rip), %ecx
.Ltmp2543:
    00000c79: 	addl	$0x1, 0x10(%rsp)
    00000c7e: 	movl	0x10(%rsp), %eax
    00000c82: 	cmpl	%ecx, %eax
    00000c84: 	jl	.Ltmp2544 # Offset: 3204
.Ltmp2541:
    00000c8a: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000c91: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00000c98: 	subq	$0x20, %rax
    00000c9c: 	movq	%rsi, (%rsp)
    00000ca0: 	cmpq	%rax, %rsi
    00000ca3: 	je	.Ltmp2545 # Offset: 3235
    00000ca9: 	leaq	0x10(%rsi), %rdi
    00000cad: 	movq	0x98(%rsp), %rcx
    00000cb5: 	movq	%rdi, (%rsi)
    00000cb8: 	movq	0x90(%rsp), %rsi
    00000cc0: 	movq	%rcx, 0x10(%rsp)
    00000cc5: 	movq	%rsi, %rax
    00000cc8: 	movq	%rsi, 0x28(%rsp)
    00000ccd: 	addq	%rcx, %rax
    00000cd0: 	je	.Ltmp2546 # Offset: 3280
    00000cd2: 	testq	%rsi, %rsi
    00000cd5: 	je	.Ltmp2547 # Offset: 3285
.Ltmp2546:
    00000cdb: 	movq	0x10(%rsp), %rax
    00000ce0: 	movq	%rax, 0x30(%rsp)
    00000ce5: 	cmpq	$0xf, %rax
    00000ce9: 	ja	.Ltmp2548 # Offset: 3305
    00000cef: 	cmpq	$0x1, 0x10(%rsp)
    00000cf5: 	jne	.Ltmp2549 # Offset: 3317
    00000cfb: 	movq	0x28(%rsp), %rax
    00000d00: 	movq	(%rsp), %rsi
    00000d04: 	movzbl	(%rax), %eax
    00000d07: 	movb	%al, 0x10(%rsi)
.Ltmp2748:
    00000d0a: 	movq	0x10(%rsp), %rax
    00000d0f: 	movq	(%rsp), %rsi
    00000d13: 	movq	%rax, 0x8(%rsi)
    00000d17: 	movb	$0x0, (%rdi,%rax)
    00000d1b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000d22: 	addq	$0x20, %rax
    00000d26: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2708:
    00000d2d: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000d34: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000d3b: 	je	.Ltmp2550 # Offset: 3387
.Ltmp2707:
    00000d41: 	movq	-0x20(%rax), %rdi
    00000d45: 	movq	%rdi, (%rsp)
    00000d49: 	callq	clock@PLT # Offset: 3401
    00000d4e: 	movq	(%rsp), %rdi
    00000d52: 	pxor	%xmm0, %xmm0
    00000d56: 	movq	%rax, end_time(%rip)
    00000d5d: 	subq	start_time(%rip), %rax
    00000d64: 	cvtsi2sd	%rax, %xmm0
    00000d69: 	divsd	DATAat0x23450(%rip), %xmm0
    00000d71: 	callq	_Z13record_resultdPKc # Offset: 3441
    00000d76: 	movq	0x90(%rsp), %rdi
    00000d7e: 	cmpq	%r13, %rdi
    00000d81: 	je	.Ltmp2551 # Offset: 3457
    00000d83: 	movq	0xa0(%rsp), %rax
    00000d8b: 	leaq	0x1(%rax), %rsi
    00000d8f: 	callq	_ZdlPvm@PLT # Offset: 3471
.Ltmp2551:
    00000d94: 	leaq	DATAat0x232cc(%rip), %rdx
    00000d9b: 	movq	%r14, %rsi
    00000d9e: 	movq	%r12, %rdi
    00000da1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3489
    00000da6: 	callq	clock@PLT # Offset: 3494
    00000dab: 	movl	iterations(%rip), %ecx
    00000db1: 	movq	%rax, start_time(%rip)
    00000db8: 	testl	%ecx, %ecx
    00000dba: 	jle	.Ltmp2552 # Offset: 3514
    00000dc0: 	movdqa	DATAat0x23790(%rip), %xmm6
    00000dc8: 	movl	$0x0, 0x10(%rsp)
    00000dd0: 	movaps	%xmm6, (%rsp)
    00000dd4: 	nopl	(%rax) # Size: 4
.Ltmp2555:
    00000dd8: 	movq	%rbp, %rax
    00000ddb: 	pxor	%xmm0, %xmm0
    00000ddf: 	nop # Size: 1
.Ltmp2553:
    00000de0: 	movdqa	(%rsp), %xmm1
    00000de5: 	paddd	(%rax), %xmm1
    00000de9: 	addq	$0x10, %rax
    00000ded: 	paddd	%xmm1, %xmm0
    00000df1: 	cmpq	%rbx, %rax
    00000df4: 	jne	.Ltmp2553 # Offset: 3572
    00000df6: 	cvttsd2si	init_value(%rip), %rdx
    00000dff: 	movdqa	%xmm0, %xmm1
    00000e03: 	psrldq	$0x8, %xmm1
    00000e08: 	paddd	%xmm1, %xmm0
    00000e0c: 	movdqa	%xmm0, %xmm1
    00000e10: 	addl	$0xa, %edx
    00000e13: 	psrldq	$0x4, %xmm1
    00000e18: 	imull	$0x1f40, %edx, %edx
    00000e1e: 	paddd	%xmm1, %xmm0
    00000e22: 	movd	%xmm0, %eax
    00000e26: 	cmpl	%eax, %edx
    00000e28: 	je	.Ltmp2554 # Offset: 3624
    00000e2a: 	movl	current_test(%rip), %edx
    00000e30: 	leaq	DATAat0x231d2(%rip), %rsi
    00000e37: 	movl	$0x1, %edi
    00000e3c: 	xorl	%eax, %eax
    00000e3e: 	callq	__printf_chk@PLT # Offset: 3646
    00000e43: 	movl	iterations(%rip), %ecx
.Ltmp2554:
    00000e49: 	addl	$0x1, 0x10(%rsp)
    00000e4e: 	movl	0x10(%rsp), %eax
    00000e52: 	cmpl	%ecx, %eax
    00000e54: 	jl	.Ltmp2555 # Offset: 3668
.Ltmp2552:
    00000e5a: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000e61: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00000e68: 	subq	$0x20, %rax
    00000e6c: 	movq	%rsi, (%rsp)
    00000e70: 	cmpq	%rax, %rsi
    00000e73: 	je	.Ltmp2556 # Offset: 3699
    00000e79: 	leaq	0x10(%rsi), %rdi
    00000e7d: 	movq	%rdi, (%rsi)
    00000e80: 	movq	0x90(%rsp), %rcx
    00000e88: 	movq	0x98(%rsp), %rsi
    00000e90: 	movq	%rcx, %rax
    00000e93: 	movq	%rcx, 0x28(%rsp)
    00000e98: 	addq	%rsi, %rax
    00000e9b: 	movq	%rsi, 0x10(%rsp)
    00000ea0: 	je	.Ltmp2557 # Offset: 3744
    00000ea2: 	testq	%rcx, %rcx
    00000ea5: 	je	.Ltmp2558 # Offset: 3749
.Ltmp2557:
    00000eab: 	movq	0x10(%rsp), %rax
    00000eb0: 	movq	%rax, 0x30(%rsp)
    00000eb5: 	cmpq	$0xf, %rax
    00000eb9: 	ja	.Ltmp2559 # Offset: 3769
    00000ebf: 	cmpq	$0x1, 0x10(%rsp)
    00000ec5: 	jne	.Ltmp2560 # Offset: 3781
    00000ecb: 	movq	0x28(%rsp), %rax
    00000ed0: 	movq	(%rsp), %rcx
    00000ed4: 	movzbl	(%rax), %eax
    00000ed7: 	movb	%al, 0x10(%rcx)
.Ltmp2733:
    00000eda: 	movq	0x10(%rsp), %rax
    00000edf: 	movq	(%rsp), %rcx
    00000ee3: 	movq	%rax, 0x8(%rcx)
    00000ee7: 	movb	$0x0, (%rdi,%rax)
    00000eeb: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000ef2: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000ef9: 	addq	$0x20, %rax
    00000efd: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000f04: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00000f0b: 	je	.Ltmp2561 # Offset: 3851
.Ltmp2706:
    00000f11: 	movq	-0x20(%rax), %rdi
    00000f15: 	movq	%rdi, (%rsp)
    00000f19: 	callq	clock@PLT # Offset: 3865
    00000f1e: 	movq	(%rsp), %rdi
    00000f22: 	pxor	%xmm0, %xmm0
    00000f26: 	movq	%rax, end_time(%rip)
    00000f2d: 	subq	start_time(%rip), %rax
    00000f34: 	cvtsi2sd	%rax, %xmm0
    00000f39: 	divsd	DATAat0x23450(%rip), %xmm0
    00000f41: 	callq	_Z13record_resultdPKc # Offset: 3905
    00000f46: 	movq	0x90(%rsp), %rdi
    00000f4e: 	cmpq	%r13, %rdi
    00000f51: 	je	.Ltmp2562 # Offset: 3921
    00000f53: 	movq	0xa0(%rsp), %rax
    00000f5b: 	leaq	0x1(%rax), %rsi
    00000f5f: 	callq	_ZdlPvm@PLT # Offset: 3935
.Ltmp2562:
    00000f64: 	leaq	DATAat0x232e4(%rip), %rdx
    00000f6b: 	movq	%r14, %rsi
    00000f6e: 	movq	%r12, %rdi
    00000f71: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3953
    00000f76: 	callq	clock@PLT # Offset: 3958
    00000f7b: 	movl	iterations(%rip), %ecx
    00000f81: 	movq	%rax, start_time(%rip)
    00000f88: 	testl	%ecx, %ecx
    00000f8a: 	jle	.Ltmp2563 # Offset: 3978
    00000f90: 	movdqa	DATAat0x237a0(%rip), %xmm7
    00000f98: 	movl	$0x0, 0x10(%rsp)
    00000fa0: 	movaps	%xmm7, (%rsp)
    00000fa4: 	nopl	(%rax) # Size: 4
.Ltmp2566:
    00000fa8: 	movq	%rbp, %rax
    00000fab: 	pxor	%xmm0, %xmm0
    00000faf: 	nop # Size: 1
.Ltmp2564:
    00000fb0: 	movdqa	(%rsp), %xmm1
    00000fb5: 	paddd	(%rax), %xmm1
    00000fb9: 	addq	$0x10, %rax
    00000fbd: 	paddd	%xmm1, %xmm0
    00000fc1: 	cmpq	%rax, %rbx
    00000fc4: 	jne	.Ltmp2564 # Offset: 4036
    00000fc6: 	cvttsd2si	init_value(%rip), %rdx
    00000fcf: 	movdqa	%xmm0, %xmm1
    00000fd3: 	psrldq	$0x8, %xmm1
    00000fd8: 	paddd	%xmm1, %xmm0
    00000fdc: 	movdqa	%xmm0, %xmm1
    00000fe0: 	subl	$0xa, %edx
    00000fe3: 	psrldq	$0x4, %xmm1
    00000fe8: 	imull	$0x1f40, %edx, %edx
    00000fee: 	paddd	%xmm1, %xmm0
    00000ff2: 	movd	%xmm0, %eax
    00000ff6: 	cmpl	%eax, %edx
    00000ff8: 	je	.Ltmp2565 # Offset: 4088
    00000ffa: 	movl	current_test(%rip), %edx
    00001000: 	leaq	DATAat0x231d2(%rip), %rsi
    00001007: 	movl	$0x1, %edi
    0000100c: 	xorl	%eax, %eax
    0000100e: 	callq	__printf_chk@PLT # Offset: 4110
    00001013: 	movl	iterations(%rip), %ecx
.Ltmp2565:
    00001019: 	addl	$0x1, 0x10(%rsp)
    0000101e: 	movl	0x10(%rsp), %eax
    00001022: 	cmpl	%ecx, %eax
    00001024: 	jl	.Ltmp2566 # Offset: 4132
.Ltmp2563:
    0000102a: 	movq	%r12, %rsi
    0000102d: 	movq	%r15, %rdi
    00001030: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4144
    00001035: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000103c: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001043: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000104a: 	je	.Ltmp2567 # Offset: 4170
.Ltmp2732:
    00001050: 	movq	-0x20(%rax), %rdi
    00001054: 	movq	%rdi, (%rsp)
    00001058: 	callq	clock@PLT # Offset: 4184
    0000105d: 	movq	(%rsp), %rdi
    00001061: 	pxor	%xmm0, %xmm0
    00001065: 	movq	%rax, end_time(%rip)
    0000106c: 	subq	start_time(%rip), %rax
    00001073: 	cvtsi2sd	%rax, %xmm0
    00001078: 	divsd	DATAat0x23450(%rip), %xmm0
    00001080: 	callq	_Z13record_resultdPKc # Offset: 4224
    00001085: 	movq	0x90(%rsp), %rdi
    0000108d: 	cmpq	%r13, %rdi
    00001090: 	je	.Ltmp2568 # Offset: 4240
    00001092: 	movq	0xa0(%rsp), %rax
    0000109a: 	leaq	0x1(%rax), %rsi
    0000109e: 	callq	_ZdlPvm@PLT # Offset: 4254
.Ltmp2568:
    000010a3: 	leaq	DATAat0x232f7(%rip), %rdx
    000010aa: 	movq	%r14, %rsi
    000010ad: 	movq	%r12, %rdi
    000010b0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4272
    000010b5: 	callq	clock@PLT # Offset: 4277
    000010ba: 	movl	iterations(%rip), %ecx
    000010c0: 	movq	%rax, start_time(%rip)
    000010c7: 	testl	%ecx, %ecx
    000010c9: 	jle	.Ltmp2569 # Offset: 4297
    000010cf: 	movdqa	DATAat0x237a0(%rip), %xmm5
    000010d7: 	movl	$0x0, 0x10(%rsp)
    000010df: 	movaps	%xmm5, (%rsp)
    000010e3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2572:
    000010e8: 	movq	%rbp, %rax
    000010eb: 	pxor	%xmm0, %xmm0
    000010ef: 	nop # Size: 1
.Ltmp2570:
    000010f0: 	movdqa	(%rsp), %xmm1
    000010f5: 	paddd	(%rax), %xmm1
    000010f9: 	addq	$0x10, %rax
    000010fd: 	paddd	%xmm1, %xmm0
    00001101: 	cmpq	%rbx, %rax
    00001104: 	jne	.Ltmp2570 # Offset: 4356
    00001106: 	cvttsd2si	init_value(%rip), %rdx
    0000110f: 	movdqa	%xmm0, %xmm1
    00001113: 	psrldq	$0x8, %xmm1
    00001118: 	paddd	%xmm1, %xmm0
    0000111c: 	movdqa	%xmm0, %xmm1
    00001120: 	subl	$0xa, %edx
    00001123: 	psrldq	$0x4, %xmm1
    00001128: 	imull	$0x1f40, %edx, %edx
    0000112e: 	paddd	%xmm1, %xmm0
    00001132: 	movd	%xmm0, %eax
    00001136: 	cmpl	%eax, %edx
    00001138: 	je	.Ltmp2571 # Offset: 4408
    0000113a: 	movl	current_test(%rip), %edx
    00001140: 	leaq	DATAat0x231d2(%rip), %rsi
    00001147: 	movl	$0x1, %edi
    0000114c: 	xorl	%eax, %eax
    0000114e: 	callq	__printf_chk@PLT # Offset: 4430
    00001153: 	movl	iterations(%rip), %ecx
.Ltmp2571:
    00001159: 	addl	$0x1, 0x10(%rsp)
    0000115e: 	movl	0x10(%rsp), %eax
    00001162: 	cmpl	%ecx, %eax
    00001164: 	jl	.Ltmp2572 # Offset: 4452
.Ltmp2569:
    0000116a: 	movq	%r12, %rsi
    0000116d: 	movq	%r15, %rdi
    00001170: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4464
    00001175: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000117c: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001183: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000118a: 	je	.Ltmp2573 # Offset: 4490
.Ltmp2731:
    00001190: 	movq	-0x20(%rax), %rdi
    00001194: 	movq	%rdi, (%rsp)
    00001198: 	callq	clock@PLT # Offset: 4504
    0000119d: 	movq	(%rsp), %rdi
    000011a1: 	pxor	%xmm0, %xmm0
    000011a5: 	movq	%rax, end_time(%rip)
    000011ac: 	subq	start_time(%rip), %rax
    000011b3: 	cvtsi2sd	%rax, %xmm0
    000011b8: 	divsd	DATAat0x23450(%rip), %xmm0
    000011c0: 	callq	_Z13record_resultdPKc # Offset: 4544
    000011c5: 	movq	0x90(%rsp), %rdi
    000011cd: 	cmpq	%r13, %rdi
    000011d0: 	je	.Ltmp2574 # Offset: 4560
    000011d2: 	movq	0xa0(%rsp), %rax
    000011da: 	leaq	0x1(%rax), %rsi
    000011de: 	callq	_ZdlPvm@PLT # Offset: 4574
.Ltmp2574:
    000011e3: 	leaq	DATAat0x23314(%rip), %rdx
    000011ea: 	movq	%r14, %rsi
    000011ed: 	movq	%r12, %rdi
    000011f0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4592
    000011f5: 	callq	clock@PLT # Offset: 4597
    000011fa: 	movl	iterations(%rip), %ecx
    00001200: 	movl	$0x0, (%rsp)
    00001207: 	movq	%rax, start_time(%rip)
    0000120e: 	testl	%ecx, %ecx
    00001210: 	jle	.Ltmp2575 # Offset: 4624
    00001216: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2578:
    00001220: 	movq	%rbp, %rax
    00001223: 	pxor	%xmm1, %xmm1
    00001227: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2576:
    00001230: 	movdqa	(%rax), %xmm0
    00001234: 	addq	$0x10, %rax
    00001238: 	pslld	$0x4, %xmm0
    0000123d: 	psubd	-0x10(%rax), %xmm0
    00001242: 	pslld	$0x3, %xmm0
    00001247: 	paddd	%xmm0, %xmm1
    0000124b: 	cmpq	%rax, %rbx
    0000124e: 	jne	.Ltmp2576 # Offset: 4686
    00001250: 	cvttsd2si	init_value(%rip), %rdx
    00001259: 	movdqa	%xmm1, %xmm0
    0000125d: 	psrldq	$0x8, %xmm0
    00001262: 	paddd	%xmm0, %xmm1
    00001266: 	movdqa	%xmm1, %xmm0
    0000126a: 	psrldq	$0x4, %xmm0
    0000126f: 	imull	$0xea600, %edx, %edx
    00001275: 	paddd	%xmm0, %xmm1
    00001279: 	movd	%xmm1, %eax
    0000127d: 	cmpl	%eax, %edx
    0000127f: 	je	.Ltmp2577 # Offset: 4735
    00001281: 	movl	current_test(%rip), %edx
    00001287: 	leaq	DATAat0x231d2(%rip), %rsi
    0000128e: 	movl	$0x1, %edi
    00001293: 	xorl	%eax, %eax
    00001295: 	callq	__printf_chk@PLT # Offset: 4757
    0000129a: 	movl	iterations(%rip), %ecx
.Ltmp2577:
    000012a0: 	addl	$0x1, (%rsp)
    000012a4: 	movl	(%rsp), %eax
    000012a7: 	cmpl	%ecx, %eax
    000012a9: 	jl	.Ltmp2578 # Offset: 4777
.Ltmp2575:
    000012af: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000012b6: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    000012bd: 	subq	$0x20, %rax
    000012c1: 	movq	%rsi, (%rsp)
    000012c5: 	cmpq	%rax, %rsi
    000012c8: 	je	.Ltmp2579 # Offset: 4808
    000012ce: 	leaq	0x10(%rsi), %rdi
    000012d2: 	movq	0x98(%rsp), %rcx
    000012da: 	movq	%rdi, (%rsi)
    000012dd: 	movq	0x90(%rsp), %rsi
    000012e5: 	movq	%rcx, 0x10(%rsp)
    000012ea: 	movq	%rsi, %rax
    000012ed: 	movq	%rsi, 0x28(%rsp)
    000012f2: 	addq	%rcx, %rax
    000012f5: 	je	.Ltmp2580 # Offset: 4853
    000012f7: 	testq	%rsi, %rsi
    000012fa: 	je	.Ltmp2581 # Offset: 4858
.Ltmp2580:
    00001300: 	movq	0x10(%rsp), %rax
    00001305: 	movq	%rax, 0x30(%rsp)
    0000130a: 	cmpq	$0xf, %rax
    0000130e: 	ja	.Ltmp2582 # Offset: 4878
    00001314: 	cmpq	$0x1, 0x10(%rsp)
    0000131a: 	jne	.Ltmp2583 # Offset: 4890
    00001320: 	movq	0x28(%rsp), %rax
    00001325: 	movq	(%rsp), %rsi
    00001329: 	movzbl	(%rax), %eax
    0000132c: 	movb	%al, 0x10(%rsi)
.Ltmp2734:
    0000132f: 	movq	0x10(%rsp), %rax
    00001334: 	movq	(%rsp), %rsi
    00001338: 	movq	%rax, 0x8(%rsi)
    0000133c: 	movb	$0x0, (%rdi,%rax)
    00001340: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001347: 	addq	$0x20, %rax
    0000134b: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2730:
    00001352: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001359: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001360: 	je	.Ltmp2584 # Offset: 4960
.Ltmp2729:
    00001366: 	movq	-0x20(%rax), %rdi
    0000136a: 	movq	%rdi, (%rsp)
    0000136e: 	callq	clock@PLT # Offset: 4974
    00001373: 	movq	(%rsp), %rdi
    00001377: 	pxor	%xmm0, %xmm0
    0000137b: 	movq	%rax, end_time(%rip)
    00001382: 	subq	start_time(%rip), %rax
    00001389: 	cvtsi2sd	%rax, %xmm0
    0000138e: 	divsd	DATAat0x23450(%rip), %xmm0
    00001396: 	callq	_Z13record_resultdPKc # Offset: 5014
    0000139b: 	movq	0x90(%rsp), %rdi
    000013a3: 	cmpq	%r13, %rdi
    000013a6: 	je	.Ltmp2585 # Offset: 5030
    000013a8: 	movq	0xa0(%rsp), %rax
    000013b0: 	leaq	0x1(%rax), %rsi
    000013b4: 	callq	_ZdlPvm@PLT # Offset: 5044
.Ltmp2585:
    000013b9: 	leaq	DATAat0x23327(%rip), %rdx
    000013c0: 	movq	%r14, %rsi
    000013c3: 	movq	%r12, %rdi
    000013c6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5062
    000013cb: 	callq	clock@PLT # Offset: 5067
    000013d0: 	movl	iterations(%rip), %ecx
    000013d6: 	movl	$0x0, (%rsp)
    000013dd: 	movq	%rax, start_time(%rip)
    000013e4: 	testl	%ecx, %ecx
    000013e6: 	jle	.Ltmp2586 # Offset: 5094
    000013ec: 	nopl	(%rax) # Size: 4
.Ltmp2589:
    000013f0: 	movq	%rbp, %rax
    000013f3: 	pxor	%xmm1, %xmm1
    000013f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2587:
    00001400: 	movdqa	(%rax), %xmm0
    00001404: 	addq	$0x10, %rax
    00001408: 	pslld	$0x4, %xmm0
    0000140d: 	psubd	-0x10(%rax), %xmm0
    00001412: 	pslld	$0x3, %xmm0
    00001417: 	paddd	%xmm0, %xmm1
    0000141b: 	cmpq	%rbx, %rax
    0000141e: 	jne	.Ltmp2587 # Offset: 5150
    00001420: 	cvttsd2si	init_value(%rip), %rdx
    00001429: 	movdqa	%xmm1, %xmm0
    0000142d: 	psrldq	$0x8, %xmm0
    00001432: 	paddd	%xmm0, %xmm1
    00001436: 	movdqa	%xmm1, %xmm0
    0000143a: 	psrldq	$0x4, %xmm0
    0000143f: 	imull	$0xea600, %edx, %edx
    00001445: 	paddd	%xmm0, %xmm1
    00001449: 	movd	%xmm1, %eax
    0000144d: 	cmpl	%eax, %edx
    0000144f: 	je	.Ltmp2588 # Offset: 5199
    00001451: 	movl	current_test(%rip), %edx
    00001457: 	leaq	DATAat0x231d2(%rip), %rsi
    0000145e: 	movl	$0x1, %edi
    00001463: 	xorl	%eax, %eax
    00001465: 	callq	__printf_chk@PLT # Offset: 5221
    0000146a: 	movl	iterations(%rip), %ecx
.Ltmp2588:
    00001470: 	addl	$0x1, (%rsp)
    00001474: 	movl	(%rsp), %eax
    00001477: 	cmpl	%ecx, %eax
    00001479: 	jl	.Ltmp2589 # Offset: 5241
.Ltmp2586:
    0000147f: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001486: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    0000148d: 	subq	$0x20, %rax
    00001491: 	movq	%rsi, (%rsp)
    00001495: 	cmpq	%rax, %rsi
    00001498: 	je	.Ltmp2590 # Offset: 5272
    0000149e: 	leaq	0x10(%rsi), %rdi
    000014a2: 	movq	%rdi, (%rsi)
    000014a5: 	movq	0x90(%rsp), %rcx
    000014ad: 	movq	0x98(%rsp), %rsi
    000014b5: 	movq	%rcx, %rax
    000014b8: 	movq	%rcx, 0x28(%rsp)
    000014bd: 	addq	%rsi, %rax
    000014c0: 	movq	%rsi, 0x10(%rsp)
    000014c5: 	je	.Ltmp2591 # Offset: 5317
    000014c7: 	testq	%rcx, %rcx
    000014ca: 	je	.Ltmp2592 # Offset: 5322
.Ltmp2591:
    000014d0: 	movq	0x10(%rsp), %rax
    000014d5: 	movq	%rax, 0x30(%rsp)
    000014da: 	cmpq	$0xf, %rax
    000014de: 	ja	.Ltmp2593 # Offset: 5342
    000014e4: 	cmpq	$0x1, 0x10(%rsp)
    000014ea: 	jne	.Ltmp2594 # Offset: 5354
    000014f0: 	movq	0x28(%rsp), %rax
    000014f5: 	movq	(%rsp), %rcx
    000014f9: 	movzbl	(%rax), %eax
    000014fc: 	movb	%al, 0x10(%rcx)
.Ltmp2737:
    000014ff: 	movq	0x10(%rsp), %rax
    00001504: 	movq	(%rsp), %rcx
    00001508: 	movq	%rax, 0x8(%rcx)
    0000150c: 	movb	$0x0, (%rdi,%rax)
    00001510: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001517: 	addq	$0x20, %rax
    0000151b: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2728:
    00001522: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001529: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001530: 	je	.Ltmp2595 # Offset: 5424
.Ltmp2727:
    00001536: 	movq	-0x20(%rax), %rdi
    0000153a: 	movq	%rdi, (%rsp)
    0000153e: 	callq	clock@PLT # Offset: 5438
    00001543: 	movq	(%rsp), %rdi
    00001547: 	pxor	%xmm0, %xmm0
    0000154b: 	movq	%rax, end_time(%rip)
    00001552: 	subq	start_time(%rip), %rax
    00001559: 	cvtsi2sd	%rax, %xmm0
    0000155e: 	divsd	DATAat0x23450(%rip), %xmm0
    00001566: 	callq	_Z13record_resultdPKc # Offset: 5478
    0000156b: 	movq	0x90(%rsp), %rdi
    00001573: 	cmpq	%r13, %rdi
    00001576: 	je	.Ltmp2596 # Offset: 5494
    00001578: 	movq	0xa0(%rsp), %rax
    00001580: 	leaq	0x1(%rax), %rsi
    00001584: 	callq	_ZdlPvm@PLT # Offset: 5508
.Ltmp2596:
    00001589: 	leaq	DATAat0x23345(%rip), %rdx
    00001590: 	movq	%r14, %rsi
    00001593: 	movq	%r12, %rdi
    00001596: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5526
    0000159b: 	callq	clock@PLT # Offset: 5531
    000015a0: 	movl	iterations(%rip), %ecx
    000015a6: 	movq	%rax, start_time(%rip)
    000015ad: 	testl	%ecx, %ecx
    000015af: 	jle	.Ltmp2597 # Offset: 5551
    000015b5: 	movl	$0x0, (%rsp)
    000015bc: 	nopl	(%rax) # Size: 4
.Ltmp2600:
    000015c0: 	movq	%rbp, %rax
    000015c3: 	pxor	%xmm0, %xmm0
    000015c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2598:
    000015d0: 	movdqa	DATAat0x237b0(%rip), %xmm1
    000015d8: 	paddd	(%rax), %xmm1
    000015dc: 	addq	$0x10, %rax
    000015e0: 	paddd	%xmm1, %xmm0
    000015e4: 	cmpq	%rax, %rbx
    000015e7: 	jne	.Ltmp2598 # Offset: 5607
    000015e9: 	cvttsd2si	init_value(%rip), %rdx
    000015f2: 	movdqa	%xmm0, %xmm1
    000015f6: 	psrldq	$0x8, %xmm1
    000015fb: 	paddd	%xmm1, %xmm0
    000015ff: 	movdqa	%xmm0, %xmm1
    00001603: 	addl	$0x78, %edx
    00001606: 	psrldq	$0x4, %xmm1
    0000160b: 	imull	$0x1f40, %edx, %edx
    00001611: 	paddd	%xmm1, %xmm0
    00001615: 	movd	%xmm0, %eax
    00001619: 	cmpl	%eax, %edx
    0000161b: 	je	.Ltmp2599 # Offset: 5659
    0000161d: 	movl	current_test(%rip), %edx
    00001623: 	leaq	DATAat0x231d2(%rip), %rsi
    0000162a: 	movl	$0x1, %edi
    0000162f: 	xorl	%eax, %eax
    00001631: 	callq	__printf_chk@PLT # Offset: 5681
    00001636: 	movl	iterations(%rip), %ecx
.Ltmp2599:
    0000163c: 	addl	$0x1, (%rsp)
    00001640: 	movl	(%rsp), %eax
    00001643: 	cmpl	%ecx, %eax
    00001645: 	jl	.Ltmp2600 # Offset: 5701
.Ltmp2597:
    0000164b: 	movq	%r12, %rsi
    0000164e: 	movq	%r15, %rdi
    00001651: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5713
    00001656: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000165d: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001664: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000166b: 	je	.Ltmp2601 # Offset: 5739
.Ltmp2726:
    00001671: 	movq	-0x20(%rax), %rdi
    00001675: 	movq	%rdi, (%rsp)
    00001679: 	callq	clock@PLT # Offset: 5753
    0000167e: 	movq	(%rsp), %rdi
    00001682: 	pxor	%xmm0, %xmm0
    00001686: 	movq	%rax, end_time(%rip)
    0000168d: 	subq	start_time(%rip), %rax
    00001694: 	cvtsi2sd	%rax, %xmm0
    00001699: 	divsd	DATAat0x23450(%rip), %xmm0
    000016a1: 	callq	_Z13record_resultdPKc # Offset: 5793
    000016a6: 	movq	0x90(%rsp), %rdi
    000016ae: 	cmpq	%r13, %rdi
    000016b1: 	je	.Ltmp2602 # Offset: 5809
    000016b3: 	movq	0xa0(%rsp), %rax
    000016bb: 	leaq	0x1(%rax), %rsi
    000016bf: 	callq	_ZdlPvm@PLT # Offset: 5823
.Ltmp2602:
    000016c4: 	leaq	DATAat0x23362(%rip), %rdx
    000016cb: 	movq	%r14, %rsi
    000016ce: 	movq	%r12, %rdi
    000016d1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5841
    000016d6: 	callq	clock@PLT # Offset: 5846
    000016db: 	movl	iterations(%rip), %ecx
    000016e1: 	movq	%rax, start_time(%rip)
    000016e8: 	testl	%ecx, %ecx
    000016ea: 	jle	.Ltmp2603 # Offset: 5866
    000016f0: 	movl	$0x0, (%rsp)
    000016f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2606:
    00001700: 	movq	%rbp, %rax
    00001703: 	pxor	%xmm2, %xmm2
    00001707: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2604:
    00001710: 	movdqa	(%rax), %xmm0
    00001714: 	addq	$0x10, %rax
    00001718: 	movdqa	%xmm0, %xmm1
    0000171c: 	punpckldq	%xmm0, %xmm1
    00001720: 	punpckhdq	%xmm0, %xmm0
    00001724: 	pmuludq	DATAat0x23930(%rip), %xmm1
    0000172c: 	pmuludq	DATAat0x23930(%rip), %xmm0
    00001734: 	shufps	$0xdd, %xmm0, %xmm1
    00001738: 	psrld	$0x2, %xmm1
    0000173d: 	paddd	%xmm1, %xmm2
    00001741: 	cmpq	%rbx, %rax
    00001744: 	jne	.Ltmp2604 # Offset: 5956
    00001746: 	cvttsd2si	init_value(%rip), %rdx
    0000174f: 	movl	$0xcccccccd, %eax
    00001754: 	movdqa	%xmm2, %xmm0
    00001758: 	psrldq	$0x8, %xmm0
    0000175d: 	paddd	%xmm0, %xmm2
    00001761: 	movdqa	%xmm2, %xmm0
    00001765: 	movl	%edx, %edx
    00001767: 	psrldq	$0x4, %xmm0
    0000176c: 	imulq	%rax, %rdx
    00001770: 	paddd	%xmm0, %xmm2
    00001774: 	movd	%xmm2, %eax
    00001778: 	shrq	$0x22, %rdx
    0000177c: 	imull	$0x1f40, %edx, %edx
    00001782: 	cmpl	%eax, %edx
    00001784: 	je	.Ltmp2605 # Offset: 6020
    00001786: 	movl	current_test(%rip), %edx
    0000178c: 	leaq	DATAat0x231d2(%rip), %rsi
    00001793: 	movl	$0x1, %edi
    00001798: 	xorl	%eax, %eax
    0000179a: 	callq	__printf_chk@PLT # Offset: 6042
    0000179f: 	movl	iterations(%rip), %ecx
.Ltmp2605:
    000017a5: 	addl	$0x1, (%rsp)
    000017a9: 	movl	(%rsp), %eax
    000017ac: 	cmpl	%ecx, %eax
    000017ae: 	jl	.Ltmp2606 # Offset: 6062
.Ltmp2603:
    000017b4: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000017bb: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    000017c2: 	subq	$0x20, %rax
    000017c6: 	movq	%rsi, (%rsp)
    000017ca: 	cmpq	%rax, %rsi
    000017cd: 	je	.Ltmp2607 # Offset: 6093
    000017d3: 	leaq	0x10(%rsi), %rdi
    000017d7: 	movq	0x98(%rsp), %rcx
    000017df: 	movq	%rdi, (%rsi)
    000017e2: 	movq	0x90(%rsp), %rsi
    000017ea: 	movq	%rcx, 0x10(%rsp)
    000017ef: 	movq	%rsi, %rax
    000017f2: 	movq	%rsi, 0x28(%rsp)
    000017f7: 	addq	%rcx, %rax
    000017fa: 	je	.Ltmp2608 # Offset: 6138
    000017fc: 	testq	%rsi, %rsi
    000017ff: 	je	.Ltmp2609 # Offset: 6143
.Ltmp2608:
    00001805: 	movq	0x10(%rsp), %rax
    0000180a: 	movq	%rax, 0x30(%rsp)
    0000180f: 	cmpq	$0xf, %rax
    00001813: 	ja	.Ltmp2610 # Offset: 6163
    00001819: 	cmpq	$0x1, 0x10(%rsp)
    0000181f: 	jne	.Ltmp2611 # Offset: 6175
    00001825: 	movq	0x28(%rsp), %rax
    0000182a: 	movq	(%rsp), %rsi
    0000182e: 	movzbl	(%rax), %eax
    00001831: 	movb	%al, 0x10(%rsi)
.Ltmp2735:
    00001834: 	movq	0x10(%rsp), %rax
    00001839: 	movq	(%rsp), %rsi
    0000183d: 	movq	%rax, 0x8(%rsi)
    00001841: 	movb	$0x0, (%rdi,%rax)
    00001845: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000184c: 	addq	$0x20, %rax
    00001850: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2725:
    00001857: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000185e: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001865: 	je	.Ltmp2612 # Offset: 6245
.Ltmp2724:
    0000186b: 	movq	-0x20(%rax), %rdi
    0000186f: 	movq	%rdi, (%rsp)
    00001873: 	callq	clock@PLT # Offset: 6259
    00001878: 	movq	(%rsp), %rdi
    0000187c: 	pxor	%xmm0, %xmm0
    00001880: 	movq	%rax, end_time(%rip)
    00001887: 	subq	start_time(%rip), %rax
    0000188e: 	cvtsi2sd	%rax, %xmm0
    00001893: 	divsd	DATAat0x23450(%rip), %xmm0
    0000189b: 	callq	_Z13record_resultdPKc # Offset: 6299
    000018a0: 	movq	0x90(%rsp), %rdi
    000018a8: 	cmpq	%r13, %rdi
    000018ab: 	je	.Ltmp2613 # Offset: 6315
    000018ad: 	movq	0xa0(%rsp), %rax
    000018b5: 	leaq	0x1(%rax), %rsi
    000018b9: 	callq	_ZdlPvm@PLT # Offset: 6329
.Ltmp2613:
    000018be: 	leaq	DATAat0x23373(%rip), %rdx
    000018c5: 	movq	%r14, %rsi
    000018c8: 	movq	%r12, %rdi
    000018cb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6347
    000018d0: 	callq	clock@PLT # Offset: 6352
    000018d5: 	movl	iterations(%rip), %ecx
    000018db: 	movq	%rax, start_time(%rip)
    000018e2: 	testl	%ecx, %ecx
    000018e4: 	jle	.Ltmp2614 # Offset: 6372
    000018ea: 	movl	$0x0, (%rsp)
    000018f1: 	nopl	(%rax) # Size: 7
.Ltmp2617:
    000018f8: 	movq	%rbp, %rax
    000018fb: 	pxor	%xmm2, %xmm2
    000018ff: 	nop # Size: 1
.Ltmp2615:
    00001900: 	movdqa	(%rax), %xmm0
    00001904: 	addq	$0x10, %rax
    00001908: 	movdqa	%xmm0, %xmm1
    0000190c: 	punpckldq	%xmm0, %xmm1
    00001910: 	punpckhdq	%xmm0, %xmm0
    00001914: 	pmuludq	DATAat0x237d0(%rip), %xmm1
    0000191c: 	pmuludq	DATAat0x237d0(%rip), %xmm0
    00001924: 	shufps	$0xdd, %xmm0, %xmm1
    00001928: 	psrld	$0x6, %xmm1
    0000192d: 	paddd	%xmm1, %xmm2
    00001931: 	cmpq	%rax, %rbx
    00001934: 	jne	.Ltmp2615 # Offset: 6452
    00001936: 	cvttsd2si	init_value(%rip), %rdx
    0000193f: 	movl	$0x88888889, %eax
    00001944: 	movdqa	%xmm2, %xmm0
    00001948: 	psrldq	$0x8, %xmm0
    0000194d: 	paddd	%xmm0, %xmm2
    00001951: 	movdqa	%xmm2, %xmm0
    00001955: 	movl	%edx, %edx
    00001957: 	psrldq	$0x4, %xmm0
    0000195c: 	imulq	%rax, %rdx
    00001960: 	paddd	%xmm0, %xmm2
    00001964: 	movd	%xmm2, %eax
    00001968: 	shrq	$0x26, %rdx
    0000196c: 	imull	$0x1f40, %edx, %edx
    00001972: 	cmpl	%eax, %edx
    00001974: 	je	.Ltmp2616 # Offset: 6516
    00001976: 	movl	current_test(%rip), %edx
    0000197c: 	leaq	DATAat0x231d2(%rip), %rsi
    00001983: 	movl	$0x1, %edi
    00001988: 	xorl	%eax, %eax
    0000198a: 	callq	__printf_chk@PLT # Offset: 6538
    0000198f: 	movl	iterations(%rip), %ecx
.Ltmp2616:
    00001995: 	addl	$0x1, (%rsp)
    00001999: 	movl	(%rsp), %eax
    0000199c: 	cmpl	%ecx, %eax
    0000199e: 	jl	.Ltmp2617 # Offset: 6558
.Ltmp2614:
    000019a4: 	movq	%r12, %rsi
    000019a7: 	movq	%r15, %rdi
    000019aa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6570
    000019af: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000019b6: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000019bd: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000019c4: 	je	.Ltmp2618 # Offset: 6596
.Ltmp2723:
    000019ca: 	movq	-0x20(%rax), %rdi
    000019ce: 	movq	%rdi, (%rsp)
    000019d2: 	callq	clock@PLT # Offset: 6610
    000019d7: 	movq	(%rsp), %rdi
    000019db: 	pxor	%xmm0, %xmm0
    000019df: 	movq	%rax, end_time(%rip)
    000019e6: 	subq	start_time(%rip), %rax
    000019ed: 	cvtsi2sd	%rax, %xmm0
    000019f2: 	divsd	DATAat0x23450(%rip), %xmm0
    000019fa: 	callq	_Z13record_resultdPKc # Offset: 6650
    000019ff: 	movq	0x90(%rsp), %rdi
    00001a07: 	cmpq	%r13, %rdi
    00001a0a: 	je	.Ltmp2619 # Offset: 6666
    00001a0c: 	movq	0xa0(%rsp), %rax
    00001a14: 	leaq	0x1(%rax), %rsi
    00001a18: 	callq	_ZdlPvm@PLT # Offset: 6680
.Ltmp2619:
    00001a1d: 	leaq	DATAat0x2338e(%rip), %rdx
    00001a24: 	movq	%r14, %rsi
    00001a27: 	movq	%r12, %rdi
    00001a2a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6698
    00001a2f: 	callq	clock@PLT # Offset: 6703
    00001a34: 	movl	iterations(%rip), %ecx
    00001a3a: 	movq	%rax, start_time(%rip)
    00001a41: 	testl	%ecx, %ecx
    00001a43: 	jle	.Ltmp2620 # Offset: 6723
    00001a49: 	movl	$0x0, (%rsp)
.Ltmp2623:
    00001a50: 	movq	%rbp, %rax
    00001a53: 	pxor	%xmm0, %xmm0
    00001a57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2621:
    00001a60: 	movdqa	DATAat0x237e0(%rip), %xmm1
    00001a68: 	paddd	(%rax), %xmm1
    00001a6c: 	addq	$0x10, %rax
    00001a70: 	paddd	%xmm1, %xmm0
    00001a74: 	cmpq	%rbx, %rax
    00001a77: 	jne	.Ltmp2621 # Offset: 6775
    00001a79: 	cvttsd2si	init_value(%rip), %rdx
    00001a82: 	movdqa	%xmm0, %xmm1
    00001a86: 	psrldq	$0x8, %xmm1
    00001a8b: 	paddd	%xmm1, %xmm0
    00001a8f: 	movdqa	%xmm0, %xmm1
    00001a93: 	addl	$0x2, %edx
    00001a96: 	psrldq	$0x4, %xmm1
    00001a9b: 	imull	$0x1f40, %edx, %edx
    00001aa1: 	paddd	%xmm1, %xmm0
    00001aa5: 	movd	%xmm0, %eax
    00001aa9: 	cmpl	%eax, %edx
    00001aab: 	je	.Ltmp2622 # Offset: 6827
    00001aad: 	movl	current_test(%rip), %edx
    00001ab3: 	leaq	DATAat0x231d2(%rip), %rsi
    00001aba: 	movl	$0x1, %edi
    00001abf: 	xorl	%eax, %eax
    00001ac1: 	callq	__printf_chk@PLT # Offset: 6849
    00001ac6: 	movl	iterations(%rip), %ecx
.Ltmp2622:
    00001acc: 	addl	$0x1, (%rsp)
    00001ad0: 	movl	(%rsp), %eax
    00001ad3: 	cmpl	%ecx, %eax
    00001ad5: 	jl	.Ltmp2623 # Offset: 6869
.Ltmp2620:
    00001adb: 	movq	%r12, %rsi
    00001ade: 	movq	%r15, %rdi
    00001ae1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6881
    00001ae6: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001aed: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001af4: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001afb: 	je	.Ltmp2624 # Offset: 6907
.Ltmp2722:
    00001b01: 	movq	-0x20(%rax), %rdi
    00001b05: 	movq	%rdi, (%rsp)
    00001b09: 	callq	clock@PLT # Offset: 6921
    00001b0e: 	movq	(%rsp), %rdi
    00001b12: 	pxor	%xmm0, %xmm0
    00001b16: 	movq	%rax, end_time(%rip)
    00001b1d: 	subq	start_time(%rip), %rax
    00001b24: 	cvtsi2sd	%rax, %xmm0
    00001b29: 	divsd	DATAat0x23450(%rip), %xmm0
    00001b31: 	callq	_Z13record_resultdPKc # Offset: 6961
    00001b36: 	movq	0x90(%rsp), %rdi
    00001b3e: 	cmpq	%r13, %rdi
    00001b41: 	je	.Ltmp2625 # Offset: 6977
    00001b43: 	movq	0xa0(%rsp), %rax
    00001b4b: 	leaq	0x1(%rax), %rsi
    00001b4f: 	callq	_ZdlPvm@PLT # Offset: 6991
.Ltmp2625:
    00001b54: 	leaq	DATAat0x233a9(%rip), %rdx
    00001b5b: 	movq	%r14, %rsi
    00001b5e: 	movq	%r12, %rdi
    00001b61: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7009
    00001b66: 	callq	clock@PLT # Offset: 7014
    00001b6b: 	movl	iterations(%rip), %ecx
    00001b71: 	movl	$0x0, (%rsp)
    00001b78: 	movq	%rax, start_time(%rip)
    00001b7f: 	testl	%ecx, %ecx
    00001b81: 	jle	.Ltmp2626 # Offset: 7041
    00001b83: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2629:
    00001b88: 	movq	%rbp, %rax
    00001b8b: 	pxor	%xmm0, %xmm0
    00001b8f: 	nop # Size: 1
.Ltmp2627:
    00001b90: 	paddd	(%rax), %xmm0
    00001b94: 	addq	$0x10, %rax
    00001b98: 	cmpq	%rax, %rbx
    00001b9b: 	jne	.Ltmp2627 # Offset: 7067
    00001b9d: 	cvttsd2si	init_value(%rip), %rdx
    00001ba6: 	movdqa	%xmm0, %xmm1
    00001baa: 	psrldq	$0x8, %xmm1
    00001baf: 	paddd	%xmm1, %xmm0
    00001bb3: 	movdqa	%xmm0, %xmm1
    00001bb7: 	psrldq	$0x4, %xmm1
    00001bbc: 	imull	$0x1f40, %edx, %edx
    00001bc2: 	paddd	%xmm1, %xmm0
    00001bc6: 	movd	%xmm0, %eax
    00001bca: 	cmpl	%eax, %edx
    00001bcc: 	je	.Ltmp2628 # Offset: 7116
    00001bce: 	movl	current_test(%rip), %edx
    00001bd4: 	leaq	DATAat0x231d2(%rip), %rsi
    00001bdb: 	movl	$0x1, %edi
    00001be0: 	xorl	%eax, %eax
    00001be2: 	callq	__printf_chk@PLT # Offset: 7138
    00001be7: 	movl	iterations(%rip), %ecx
.Ltmp2628:
    00001bed: 	addl	$0x1, (%rsp)
    00001bf1: 	movl	(%rsp), %eax
    00001bf4: 	cmpl	%ecx, %eax
    00001bf6: 	jl	.Ltmp2629 # Offset: 7158
.Ltmp2626:
    00001bf8: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001bff: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rcx
    00001c06: 	subq	$0x20, %rax
    00001c0a: 	movq	%rcx, (%rsp)
    00001c0e: 	cmpq	%rax, %rcx
    00001c11: 	je	.Ltmp2630 # Offset: 7185
    00001c17: 	leaq	0x10(%rcx), %rdi
    00001c1b: 	movq	0x98(%rsp), %rsi
    00001c23: 	movq	%rdi, (%rcx)
    00001c26: 	movq	0x90(%rsp), %rcx
    00001c2e: 	movq	%rsi, 0x10(%rsp)
    00001c33: 	movq	%rcx, %rax
    00001c36: 	movq	%rcx, 0x28(%rsp)
    00001c3b: 	addq	%rsi, %rax
    00001c3e: 	je	.Ltmp2631 # Offset: 7230
    00001c40: 	testq	%rcx, %rcx
    00001c43: 	je	.Ltmp2632 # Offset: 7235
.Ltmp2631:
    00001c49: 	movq	0x10(%rsp), %rax
    00001c4e: 	movq	%rax, 0x30(%rsp)
    00001c53: 	cmpq	$0xf, %rax
    00001c57: 	ja	.Ltmp2633 # Offset: 7255
    00001c5d: 	cmpq	$0x1, 0x10(%rsp)
    00001c63: 	jne	.Ltmp2634 # Offset: 7267
    00001c69: 	movq	0x28(%rsp), %rax
    00001c6e: 	movq	(%rsp), %rcx
    00001c72: 	movzbl	(%rax), %eax
    00001c75: 	movb	%al, 0x10(%rcx)
.Ltmp2744:
    00001c78: 	movq	0x10(%rsp), %rax
    00001c7d: 	movq	(%rsp), %rcx
    00001c81: 	movq	%rax, 0x8(%rcx)
    00001c85: 	movb	$0x0, (%rdi,%rax)
    00001c89: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001c90: 	addq	$0x20, %rax
    00001c94: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2721:
    00001c9b: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001ca2: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001ca9: 	je	.Ltmp2635 # Offset: 7337
.Ltmp2720:
    00001caf: 	movq	-0x20(%rax), %rdi
    00001cb3: 	movq	%rdi, (%rsp)
    00001cb7: 	callq	clock@PLT # Offset: 7351
    00001cbc: 	movq	(%rsp), %rdi
    00001cc0: 	pxor	%xmm0, %xmm0
    00001cc4: 	movq	%rax, end_time(%rip)
    00001ccb: 	subq	start_time(%rip), %rax
    00001cd2: 	cvtsi2sd	%rax, %xmm0
    00001cd7: 	divsd	DATAat0x23450(%rip), %xmm0
    00001cdf: 	callq	_Z13record_resultdPKc # Offset: 7391
    00001ce4: 	movq	0x90(%rsp), %rdi
    00001cec: 	cmpq	%r13, %rdi
    00001cef: 	je	.Ltmp2636 # Offset: 7407
    00001cf1: 	movq	0xa0(%rsp), %rax
    00001cf9: 	leaq	0x1(%rax), %rsi
    00001cfd: 	callq	_ZdlPvm@PLT # Offset: 7421
.Ltmp2636:
    00001d02: 	leaq	DATAat0x23406(%rip), %rdx
    00001d09: 	movq	%r14, %rsi
    00001d0c: 	movq	%r12, %rdi
    00001d0f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7439
    00001d14: 	callq	clock@PLT # Offset: 7444
    00001d19: 	movl	iterations(%rip), %ecx
    00001d1f: 	movq	%rax, start_time(%rip)
    00001d26: 	testl	%ecx, %ecx
    00001d28: 	jle	.Ltmp2637 # Offset: 7464
    00001d2e: 	movdqa	DATAat0x23790(%rip), %xmm6
    00001d36: 	movl	$0x0, 0x10(%rsp)
    00001d3e: 	movaps	%xmm6, (%rsp)
    00001d42: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2640:
    00001d48: 	movq	%rbp, %rax
    00001d4b: 	pxor	%xmm0, %xmm0
    00001d4f: 	nop # Size: 1
.Ltmp2638:
    00001d50: 	movdqa	(%rsp), %xmm1
    00001d55: 	pand	(%rax), %xmm1
    00001d59: 	addq	$0x10, %rax
    00001d5d: 	paddd	%xmm1, %xmm0
    00001d61: 	cmpq	%rbx, %rax
    00001d64: 	jne	.Ltmp2638 # Offset: 7524
    00001d66: 	cvttsd2si	init_value(%rip), %rdx
    00001d6f: 	movdqa	%xmm0, %xmm1
    00001d73: 	psrldq	$0x8, %xmm1
    00001d78: 	paddd	%xmm1, %xmm0
    00001d7c: 	movdqa	%xmm0, %xmm1
    00001d80: 	andl	$0xa, %edx
    00001d83: 	psrldq	$0x4, %xmm1
    00001d88: 	imull	$0x1f40, %edx, %edx
    00001d8e: 	paddd	%xmm1, %xmm0
    00001d92: 	movd	%xmm0, %eax
    00001d96: 	cmpl	%eax, %edx
    00001d98: 	je	.Ltmp2639 # Offset: 7576
    00001d9a: 	movl	current_test(%rip), %edx
    00001da0: 	leaq	DATAat0x231d2(%rip), %rsi
    00001da7: 	movl	$0x1, %edi
    00001dac: 	xorl	%eax, %eax
    00001dae: 	callq	__printf_chk@PLT # Offset: 7598
    00001db3: 	movl	iterations(%rip), %ecx
.Ltmp2639:
    00001db9: 	addl	$0x1, 0x10(%rsp)
    00001dbe: 	movl	0x10(%rsp), %eax
    00001dc2: 	cmpl	%ecx, %eax
    00001dc4: 	jl	.Ltmp2640 # Offset: 7620
.Ltmp2637:
    00001dca: 	movq	%r12, %rsi
    00001dcd: 	movq	%r15, %rdi
    00001dd0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7632
    00001dd5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001ddc: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001de3: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001dea: 	je	.Ltmp2641 # Offset: 7658
.Ltmp2719:
    00001df0: 	movq	-0x20(%rax), %rdi
    00001df4: 	movq	%rdi, (%rsp)
    00001df8: 	callq	clock@PLT # Offset: 7672
    00001dfd: 	movq	(%rsp), %rdi
    00001e01: 	pxor	%xmm0, %xmm0
    00001e05: 	movq	%rax, end_time(%rip)
    00001e0c: 	subq	start_time(%rip), %rax
    00001e13: 	cvtsi2sd	%rax, %xmm0
    00001e18: 	divsd	DATAat0x23450(%rip), %xmm0
    00001e20: 	callq	_Z13record_resultdPKc # Offset: 7712
    00001e25: 	movq	0x90(%rsp), %rdi
    00001e2d: 	cmpq	%r13, %rdi
    00001e30: 	je	.Ltmp2642 # Offset: 7728
    00001e32: 	movq	0xa0(%rsp), %rax
    00001e3a: 	leaq	0x1(%rax), %rsi
    00001e3e: 	callq	_ZdlPvm@PLT # Offset: 7742
.Ltmp2642:
    00001e43: 	leaq	DATAat0x233fd(%rip), %rdx
    00001e4a: 	movq	%r14, %rsi
    00001e4d: 	movq	%r12, %rdi
    00001e50: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7760
    00001e55: 	callq	clock@PLT # Offset: 7765
    00001e5a: 	movl	iterations(%rip), %ecx
    00001e60: 	movq	%rax, start_time(%rip)
    00001e67: 	testl	%ecx, %ecx
    00001e69: 	jle	.Ltmp2643 # Offset: 7785
    00001e6f: 	movl	$0x0, (%rsp)
    00001e76: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2646:
    00001e80: 	movq	%rbp, %rax
    00001e83: 	pxor	%xmm0, %xmm0
    00001e87: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2644:
    00001e90: 	movdqa	DATAat0x237f0(%rip), %xmm1
    00001e98: 	pand	(%rax), %xmm1
    00001e9c: 	addq	$0x10, %rax
    00001ea0: 	paddd	%xmm1, %xmm0
    00001ea4: 	cmpq	%rax, %rbx
    00001ea7: 	jne	.Ltmp2644 # Offset: 7847
    00001ea9: 	cvttsd2si	init_value(%rip), %rdx
    00001eb2: 	movdqa	%xmm0, %xmm1
    00001eb6: 	psrldq	$0x8, %xmm1
    00001ebb: 	paddd	%xmm1, %xmm0
    00001ebf: 	movdqa	%xmm0, %xmm1
    00001ec3: 	andl	$0xe, %edx
    00001ec6: 	psrldq	$0x4, %xmm1
    00001ecb: 	imull	$0x1f40, %edx, %edx
    00001ed1: 	paddd	%xmm1, %xmm0
    00001ed5: 	movd	%xmm0, %eax
    00001ed9: 	cmpl	%edx, %eax
    00001edb: 	je	.Ltmp2645 # Offset: 7899
    00001edd: 	movl	current_test(%rip), %edx
    00001ee3: 	leaq	DATAat0x231d2(%rip), %rsi
    00001eea: 	movl	$0x1, %edi
    00001eef: 	xorl	%eax, %eax
    00001ef1: 	callq	__printf_chk@PLT # Offset: 7921
    00001ef6: 	movl	iterations(%rip), %ecx
.Ltmp2645:
    00001efc: 	addl	$0x1, (%rsp)
    00001f00: 	movl	(%rsp), %eax
    00001f03: 	cmpl	%ecx, %eax
    00001f05: 	jl	.Ltmp2646 # Offset: 7941
.Ltmp2643:
    00001f0b: 	movq	%r12, %rsi
    00001f0e: 	movq	%r15, %rdi
    00001f11: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7953
    00001f16: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001f1d: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001f24: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001f2b: 	je	.Ltmp2647 # Offset: 7979
.Ltmp2718:
    00001f31: 	movq	-0x20(%rax), %rdi
    00001f35: 	movq	%rdi, (%rsp)
    00001f39: 	callq	clock@PLT # Offset: 7993
    00001f3e: 	movq	(%rsp), %rdi
    00001f42: 	pxor	%xmm0, %xmm0
    00001f46: 	movq	%rax, end_time(%rip)
    00001f4d: 	subq	start_time(%rip), %rax
    00001f54: 	cvtsi2sd	%rax, %xmm0
    00001f59: 	divsd	DATAat0x23450(%rip), %xmm0
    00001f61: 	callq	_Z13record_resultdPKc # Offset: 8033
    00001f66: 	movq	0x90(%rsp), %rdi
    00001f6e: 	cmpq	%r13, %rdi
    00001f71: 	je	.Ltmp2648 # Offset: 8049
    00001f73: 	movq	0xa0(%rsp), %rax
    00001f7b: 	leaq	0x1(%rax), %rsi
    00001f7f: 	callq	_ZdlPvm@PLT # Offset: 8063
.Ltmp2648:
    00001f84: 	leaq	DATAat0x2341d(%rip), %rdx
    00001f8b: 	movq	%r14, %rsi
    00001f8e: 	movq	%r12, %rdi
    00001f91: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8081
    00001f96: 	callq	clock@PLT # Offset: 8086
    00001f9b: 	movl	iterations(%rip), %ecx
    00001fa1: 	movq	%rax, start_time(%rip)
    00001fa8: 	testl	%ecx, %ecx
    00001faa: 	jle	.Ltmp2649 # Offset: 8106
    00001fb0: 	movdqa	DATAat0x23790(%rip), %xmm7
    00001fb8: 	movl	$0x0, 0x10(%rsp)
    00001fc0: 	movaps	%xmm7, (%rsp)
    00001fc4: 	nopl	(%rax) # Size: 4
.Ltmp2652:
    00001fc8: 	movq	%rbp, %rax
    00001fcb: 	pxor	%xmm0, %xmm0
    00001fcf: 	nop # Size: 1
.Ltmp2650:
    00001fd0: 	movdqa	(%rsp), %xmm1
    00001fd5: 	por	(%rax), %xmm1
    00001fd9: 	addq	$0x10, %rax
    00001fdd: 	paddd	%xmm1, %xmm0
    00001fe1: 	cmpq	%rbx, %rax
    00001fe4: 	jne	.Ltmp2650 # Offset: 8164
    00001fe6: 	cvttsd2si	init_value(%rip), %rdx
    00001fef: 	movdqa	%xmm0, %xmm1
    00001ff3: 	psrldq	$0x8, %xmm1
    00001ff8: 	paddd	%xmm1, %xmm0
    00001ffc: 	movdqa	%xmm0, %xmm1
    00002000: 	orl	$0xa, %edx
    00002003: 	psrldq	$0x4, %xmm1
    00002008: 	imull	$0x1f40, %edx, %edx
    0000200e: 	paddd	%xmm1, %xmm0
    00002012: 	movd	%xmm0, %eax
    00002016: 	cmpl	%eax, %edx
    00002018: 	je	.Ltmp2651 # Offset: 8216
    0000201a: 	movl	current_test(%rip), %edx
    00002020: 	leaq	DATAat0x231d2(%rip), %rsi
    00002027: 	movl	$0x1, %edi
    0000202c: 	xorl	%eax, %eax
    0000202e: 	callq	__printf_chk@PLT # Offset: 8238
    00002033: 	movl	iterations(%rip), %ecx
.Ltmp2651:
    00002039: 	addl	$0x1, 0x10(%rsp)
    0000203e: 	movl	0x10(%rsp), %eax
    00002042: 	cmpl	%ecx, %eax
    00002044: 	jl	.Ltmp2652 # Offset: 8260
.Ltmp2649:
    0000204a: 	movq	%r12, %rsi
    0000204d: 	movq	%r15, %rdi
    00002050: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8272
    00002055: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000205c: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00002063: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000206a: 	je	.Ltmp2653 # Offset: 8298
.Ltmp2717:
    00002070: 	movq	-0x20(%rax), %rdi
    00002074: 	movq	%rdi, (%rsp)
    00002078: 	callq	clock@PLT # Offset: 8312
    0000207d: 	movq	(%rsp), %rdi
    00002081: 	pxor	%xmm0, %xmm0
    00002085: 	movq	%rax, end_time(%rip)
    0000208c: 	subq	start_time(%rip), %rax
    00002093: 	cvtsi2sd	%rax, %xmm0
    00002098: 	divsd	DATAat0x23450(%rip), %xmm0
    000020a0: 	callq	_Z13record_resultdPKc # Offset: 8352
    000020a5: 	movq	0x90(%rsp), %rdi
    000020ad: 	cmpq	%r13, %rdi
    000020b0: 	je	.Ltmp2654 # Offset: 8368
    000020b2: 	movq	0xa0(%rsp), %rax
    000020ba: 	leaq	0x1(%rax), %rsi
    000020be: 	callq	_ZdlPvm@PLT # Offset: 8382
.Ltmp2654:
    000020c3: 	leaq	DATAat0x23414(%rip), %rdx
    000020ca: 	movq	%r14, %rsi
    000020cd: 	movq	%r12, %rdi
    000020d0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8400
    000020d5: 	callq	clock@PLT # Offset: 8405
    000020da: 	movl	iterations(%rip), %ecx
    000020e0: 	movq	%rax, start_time(%rip)
    000020e7: 	testl	%ecx, %ecx
    000020e9: 	jle	.Ltmp2655 # Offset: 8425
    000020ef: 	movl	$0x0, (%rsp)
    000020f6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2658:
    00002100: 	movq	%rbp, %rax
    00002103: 	pxor	%xmm0, %xmm0
    00002107: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2656:
    00002110: 	movdqa	DATAat0x23800(%rip), %xmm1
    00002118: 	por	(%rax), %xmm1
    0000211c: 	addq	$0x10, %rax
    00002120: 	paddd	%xmm1, %xmm0
    00002124: 	cmpq	%rax, %rbx
    00002127: 	jne	.Ltmp2656 # Offset: 8487
    00002129: 	cvttsd2si	init_value(%rip), %rdx
    00002132: 	movdqa	%xmm0, %xmm1
    00002136: 	psrldq	$0x8, %xmm1
    0000213b: 	paddd	%xmm1, %xmm0
    0000213f: 	movdqa	%xmm0, %xmm1
    00002143: 	orl	$0x3f, %edx
    00002146: 	psrldq	$0x4, %xmm1
    0000214b: 	imull	$0x1f40, %edx, %edx
    00002151: 	paddd	%xmm1, %xmm0
    00002155: 	movd	%xmm0, %eax
    00002159: 	cmpl	%eax, %edx
    0000215b: 	je	.Ltmp2657 # Offset: 8539
    0000215d: 	movl	current_test(%rip), %edx
    00002163: 	leaq	DATAat0x231d2(%rip), %rsi
    0000216a: 	movl	$0x1, %edi
    0000216f: 	xorl	%eax, %eax
    00002171: 	callq	__printf_chk@PLT # Offset: 8561
    00002176: 	movl	iterations(%rip), %ecx
.Ltmp2657:
    0000217c: 	addl	$0x1, (%rsp)
    00002180: 	movl	(%rsp), %eax
    00002183: 	cmpl	%ecx, %eax
    00002185: 	jl	.Ltmp2658 # Offset: 8581
.Ltmp2655:
    0000218b: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00002192: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rsi
    00002199: 	subq	$0x20, %rax
    0000219d: 	movq	%rsi, (%rsp)
    000021a1: 	cmpq	%rax, %rsi
    000021a4: 	je	.Ltmp2659 # Offset: 8612
    000021aa: 	leaq	0x10(%rsi), %rdi
    000021ae: 	movq	0x98(%rsp), %rcx
    000021b6: 	movq	%rdi, (%rsi)
    000021b9: 	movq	0x90(%rsp), %rsi
    000021c1: 	movq	%rcx, 0x10(%rsp)
    000021c6: 	movq	%rsi, %rax
    000021c9: 	movq	%rsi, 0x28(%rsp)
    000021ce: 	addq	%rcx, %rax
    000021d1: 	je	.Ltmp2660 # Offset: 8657
    000021d3: 	testq	%rsi, %rsi
    000021d6: 	je	.Ltmp2661 # Offset: 8662
.Ltmp2660:
    000021dc: 	movq	0x10(%rsp), %rax
    000021e1: 	movq	%rax, 0x30(%rsp)
    000021e6: 	cmpq	$0xf, %rax
    000021ea: 	ja	.Ltmp2662 # Offset: 8682
    000021f0: 	cmpq	$0x1, 0x10(%rsp)
    000021f6: 	jne	.Ltmp2663 # Offset: 8694
    000021fc: 	movq	0x28(%rsp), %rax
    00002201: 	movq	(%rsp), %rsi
    00002205: 	movzbl	(%rax), %eax
    00002208: 	movb	%al, 0x10(%rsi)
.Ltmp2742:
    0000220b: 	movq	0x10(%rsp), %rax
    00002210: 	movq	(%rsp), %rsi
    00002214: 	movq	%rax, 0x8(%rsi)
    00002218: 	movb	$0x0, (%rdi,%rax)
    0000221c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002223: 	addq	$0x20, %rax
    00002227: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2716:
    0000222e: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002235: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000223c: 	je	.Ltmp2664 # Offset: 8764
.Ltmp2715:
    00002242: 	movq	-0x20(%rax), %rdi
    00002246: 	movq	%rdi, (%rsp)
    0000224a: 	callq	clock@PLT # Offset: 8778
    0000224f: 	movq	(%rsp), %rdi
    00002253: 	pxor	%xmm0, %xmm0
    00002257: 	movq	%rax, end_time(%rip)
    0000225e: 	subq	start_time(%rip), %rax
    00002265: 	cvtsi2sd	%rax, %xmm0
    0000226a: 	divsd	DATAat0x23450(%rip), %xmm0
    00002272: 	callq	_Z13record_resultdPKc # Offset: 8818
    00002277: 	movq	0x90(%rsp), %rdi
    0000227f: 	cmpq	%r13, %rdi
    00002282: 	je	.Ltmp2665 # Offset: 8834
    00002284: 	movq	0xa0(%rsp), %rax
    0000228c: 	leaq	0x1(%rax), %rsi
    00002290: 	callq	_ZdlPvm@PLT # Offset: 8848
.Ltmp2665:
    00002295: 	leaq	DATAat0x23433(%rip), %rdx
    0000229c: 	movq	%r14, %rsi
    0000229f: 	movq	%r12, %rdi
    000022a2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8866
    000022a7: 	callq	clock@PLT # Offset: 8871
    000022ac: 	movl	iterations(%rip), %ecx
    000022b2: 	movq	%rax, start_time(%rip)
    000022b9: 	testl	%ecx, %ecx
    000022bb: 	jle	.Ltmp2666 # Offset: 8891
    000022c1: 	movdqa	DATAat0x23790(%rip), %xmm3
    000022c9: 	movl	$0x0, 0x10(%rsp)
    000022d1: 	movaps	%xmm3, (%rsp)
    000022d5: 	nopl	(%rax) # Size: 3
.Ltmp2669:
    000022d8: 	movq	%rbp, %rax
    000022db: 	pxor	%xmm0, %xmm0
    000022df: 	nop # Size: 1
.Ltmp2667:
    000022e0: 	movdqa	(%rsp), %xmm1
    000022e5: 	pxor	(%rax), %xmm1
    000022e9: 	addq	$0x10, %rax
    000022ed: 	paddd	%xmm1, %xmm0
    000022f1: 	cmpq	%rbx, %rax
    000022f4: 	jne	.Ltmp2667 # Offset: 8948
    000022f6: 	cvttsd2si	init_value(%rip), %rdx
    000022ff: 	movdqa	%xmm0, %xmm1
    00002303: 	psrldq	$0x8, %xmm1
    00002308: 	paddd	%xmm1, %xmm0
    0000230c: 	movdqa	%xmm0, %xmm1
    00002310: 	xorl	$0xa, %edx
    00002313: 	psrldq	$0x4, %xmm1
    00002318: 	imull	$0x1f40, %edx, %edx
    0000231e: 	paddd	%xmm1, %xmm0
    00002322: 	movd	%xmm0, %eax
    00002326: 	cmpl	%edx, %eax
    00002328: 	je	.Ltmp2668 # Offset: 9000
    0000232a: 	movl	current_test(%rip), %edx
    00002330: 	leaq	DATAat0x231d2(%rip), %rsi
    00002337: 	movl	$0x1, %edi
    0000233c: 	xorl	%eax, %eax
    0000233e: 	callq	__printf_chk@PLT # Offset: 9022
    00002343: 	movl	iterations(%rip), %ecx
.Ltmp2668:
    00002349: 	addl	$0x1, 0x10(%rsp)
    0000234e: 	movl	0x10(%rsp), %eax
    00002352: 	cmpl	%ecx, %eax
    00002354: 	jl	.Ltmp2669 # Offset: 9044
.Ltmp2666:
    0000235a: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00002361: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rcx
    00002368: 	subq	$0x20, %rax
    0000236c: 	movq	%rcx, (%rsp)
    00002370: 	cmpq	%rax, %rcx
    00002373: 	je	.Ltmp2670 # Offset: 9075
    00002379: 	leaq	0x10(%rcx), %rdi
    0000237d: 	movq	0x98(%rsp), %rsi
    00002385: 	movq	%rdi, (%rcx)
    00002388: 	movq	0x90(%rsp), %rcx
    00002390: 	movq	%rsi, 0x10(%rsp)
    00002395: 	movq	%rcx, %rax
    00002398: 	movq	%rcx, 0x28(%rsp)
    0000239d: 	addq	%rsi, %rax
    000023a0: 	je	.Ltmp2671 # Offset: 9120
    000023a2: 	testq	%rcx, %rcx
    000023a5: 	je	.Ltmp2672 # Offset: 9125
.Ltmp2671:
    000023ab: 	movq	0x10(%rsp), %rax
    000023b0: 	movq	%rax, 0x30(%rsp)
    000023b5: 	cmpq	$0xf, %rax
    000023b9: 	ja	.Ltmp2673 # Offset: 9145
    000023bf: 	cmpq	$0x1, 0x10(%rsp)
    000023c5: 	jne	.Ltmp2674 # Offset: 9157
    000023cb: 	movq	0x28(%rsp), %rax
    000023d0: 	movq	(%rsp), %rcx
    000023d4: 	movzbl	(%rax), %eax
    000023d7: 	movb	%al, 0x10(%rcx)
.Ltmp2750:
    000023da: 	movq	0x10(%rsp), %rax
    000023df: 	movq	(%rsp), %rcx
    000023e3: 	movq	%rax, 0x8(%rcx)
    000023e7: 	movb	$0x0, (%rdi,%rax)
    000023eb: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000023f2: 	addq	$0x20, %rax
    000023f6: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp2714:
    000023fd: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002404: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000240b: 	je	.Ltmp2675 # Offset: 9227
.Ltmp2694:
    00002411: 	movq	-0x20(%rax), %rdi
    00002415: 	movq	%rdi, (%rsp)
    00002419: 	callq	clock@PLT # Offset: 9241
    0000241e: 	movq	(%rsp), %rdi
    00002422: 	pxor	%xmm0, %xmm0
    00002426: 	movq	%rax, end_time(%rip)
    0000242d: 	subq	start_time(%rip), %rax
    00002434: 	cvtsi2sd	%rax, %xmm0
    00002439: 	divsd	DATAat0x23450(%rip), %xmm0
    00002441: 	callq	_Z13record_resultdPKc # Offset: 9281
    00002446: 	movq	0x90(%rsp), %rdi
    0000244e: 	cmpq	%r13, %rdi
    00002451: 	je	.Ltmp2676 # Offset: 9297
    00002453: 	movq	0xa0(%rsp), %rax
    0000245b: 	leaq	0x1(%rax), %rsi
    0000245f: 	callq	_ZdlPvm@PLT # Offset: 9311
.Ltmp2676:
    00002464: 	leaq	DATAat0x2342a(%rip), %rdx
    0000246b: 	movq	%r14, %rsi
    0000246e: 	movq	%r12, %rdi
    00002471: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9329
    00002476: 	callq	clock@PLT # Offset: 9334
    0000247b: 	movl	iterations(%rip), %ecx
    00002481: 	movq	%rax, start_time(%rip)
    00002488: 	testl	%ecx, %ecx
    0000248a: 	jle	.Ltmp2677 # Offset: 9354
    00002490: 	movl	$0x0, (%rsp)
    00002497: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2680:
    000024a0: 	movq	%rbp, %rax
    000024a3: 	pxor	%xmm0, %xmm0
    000024a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2678:
    000024b0: 	movdqa	DATAat0x23810(%rip), %xmm1
    000024b8: 	pxor	(%rax), %xmm1
    000024bc: 	addq	$0x10, %rax
    000024c0: 	paddd	%xmm1, %xmm0
    000024c4: 	cmpq	%rbx, %rax
    000024c7: 	jne	.Ltmp2678 # Offset: 9415
    000024c9: 	cvttsd2si	init_value(%rip), %rdx
    000024d2: 	movdqa	%xmm0, %xmm1
    000024d6: 	psrldq	$0x8, %xmm1
    000024db: 	paddd	%xmm1, %xmm0
    000024df: 	movdqa	%xmm0, %xmm1
    000024e3: 	xorl	$0x31, %edx
    000024e6: 	psrldq	$0x4, %xmm1
    000024eb: 	imull	$0x1f40, %edx, %edx
    000024f1: 	paddd	%xmm1, %xmm0
    000024f5: 	movd	%xmm0, %eax
    000024f9: 	cmpl	%eax, %edx
    000024fb: 	je	.Ltmp2679 # Offset: 9467
    000024fd: 	movl	current_test(%rip), %edx
    00002503: 	leaq	DATAat0x231d2(%rip), %rsi
    0000250a: 	movl	$0x1, %edi
    0000250f: 	xorl	%eax, %eax
    00002511: 	callq	__printf_chk@PLT # Offset: 9489
    00002516: 	movl	iterations(%rip), %ecx
.Ltmp2679:
    0000251c: 	addl	$0x1, (%rsp)
    00002520: 	movl	(%rsp), %eax
    00002523: 	cmpl	%ecx, %eax
    00002525: 	jl	.Ltmp2680 # Offset: 9509
.Ltmp2677:
    0000252b: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00002532: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    00002539: 	subq	$0x20, %rax
    0000253d: 	cmpq	%rax, %rbx
    00002540: 	je	.Ltmp2681 # Offset: 9536
    00002546: 	leaq	0x10(%rbx), %rdi
    0000254a: 	movq	0x98(%rsp), %r15
    00002552: 	movq	%rdi, (%rbx)
    00002555: 	movq	0x90(%rsp), %rbp
    0000255d: 	movq	%rbp, %rax
    00002560: 	addq	%r15, %rax
    00002563: 	je	.Ltmp2682 # Offset: 9571
    00002565: 	testq	%rbp, %rbp
    00002568: 	je	.Ltmp2683 # Offset: 9576
.Ltmp2682:
    0000256e: 	movq	%r15, 0x30(%rsp)
    00002573: 	cmpq	$0xf, %r15
    00002577: 	ja	.Ltmp2684 # Offset: 9591
    0000257d: 	cmpq	$0x1, %r15
    00002581: 	jne	.Ltmp2685 # Offset: 9601
    00002587: 	movzbl	(%rbp), %eax
    0000258b: 	movb	%al, 0x10(%rbx)
.Ltmp2746:
    0000258e: 	movq	%r15, 0x8(%rbx)
    00002592: 	movb	$0x0, (%rdi,%r15)
    00002597: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000259e: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000025a5: 	addq	$0x20, %rax
    000025a9: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000025b0: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    000025b7: 	je	.Ltmp2686 # Offset: 9655
.Ltmp2693:
    000025bd: 	movq	-0x20(%rax), %rbp
    000025c1: 	callq	clock@PLT # Offset: 9665
    000025c6: 	pxor	%xmm0, %xmm0
    000025ca: 	movq	%rax, end_time(%rip)
    000025d1: 	movq	%rbp, %rdi
    000025d4: 	subq	start_time(%rip), %rax
    000025db: 	cvtsi2sd	%rax, %xmm0
    000025e0: 	divsd	DATAat0x23450(%rip), %xmm0
    000025e8: 	callq	_Z13record_resultdPKc # Offset: 9704
    000025ed: 	movq	0x90(%rsp), %rdi
    000025f5: 	cmpq	%r13, %rdi
    000025f8: 	je	.Ltmp2687 # Offset: 9720
    000025fa: 	movq	0xa0(%rsp), %rax
    00002602: 	leaq	0x1(%rax), %rsi
    00002606: 	callq	_ZdlPvm@PLT # Offset: 9734
.Ltmp2687:
    0000260b: 	leaq	DATAat0x232ac(%rip), %rdx
    00002612: 	movq	%r14, %rsi
    00002615: 	movq	%r12, %rdi
    00002618: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9752
    0000261d: 	movl	iterations(%rip), %edx
    00002623: 	xorl	%r8d, %r8d
    00002626: 	xorl	%ecx, %ecx
    00002628: 	movl	$0x1f40, %esi
    0000262d: 	movq	0x90(%rsp), %rdi
    00002635: 	callq	_Z9summarizePKciiii # Offset: 9781
    0000263a: 	movl	base_iterations(%rip), %eax
    00002640: 	movq	0x90(%rsp), %rdi
    00002648: 	movl	%eax, iterations(%rip)
    0000264e: 	cmpq	%r13, %rdi
    00002651: 	je	.Ltmp2688 # Offset: 9809
    00002653: 	movq	0xa0(%rsp), %rax
    0000265b: 	leaq	0x1(%rax), %rsi
    0000265f: 	callq	_ZdlPvm@PLT # Offset: 9823
.Ltmp2688:
    00002664: 	movq	0x70(%rsp), %rdi
    00002669: 	leaq	0x80(%rsp), %rax
    00002671: 	cmpq	%rax, %rdi
    00002674: 	je	.Ltmp2689 # Offset: 9844
    00002676: 	movq	0x80(%rsp), %rax
    0000267e: 	leaq	0x1(%rax), %rsi
    00002682: 	callq	_ZdlPvm@PLT # Offset: 9858
.Ltmp2689:
    00002687: 	movq	0x50(%rsp), %rdi
    0000268c: 	cmpq	0x20(%rsp), %rdi
    00002691: 	je	.Ltmp2690 # Offset: 9873
    00002693: 	movq	0x60(%rsp), %rax
    00002698: 	leaq	0x1(%rax), %rsi
    0000269c: 	callq	_ZdlPvm@PLT # Offset: 9884
.Ltmp2690:
    000026a1: 	movq	0x7db8(%rsp), %rax
    000026a9: 	subq	%fs:0x28, %rax
    000026b2: 	jne	.Ltmp2691 # Offset: 9906
    000026b8: 	addq	$0x7dc8, %rsp
    000026bf: 	popq	%rbx
    000026c0: 	popq	%rbp
    000026c1: 	popq	%r12
    000026c3: 	popq	%r13
    000026c5: 	popq	%r14
    000026c7: 	popq	%r15
    000026c9: 	retq # Offset: 9929
.Ltmp2499:
    000026ca: 	movq	0x18(%rsp), %rsi
    000026cf: 	xorl	%edx, %edx
    000026d1: 	movq	%r13, %rdi
    000026d4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9940
    000026d9: 	movq	%rax, (%r13)
    000026dd: 	movq	%rax, %rdi
    000026e0: 	movq	0x30(%rsp), %rax
    000026e5: 	movq	%rax, 0x10(%r13)
.Ltmp2741:
    000026e9: 	movq	(%rsp), %rdx
    000026ed: 	movq	0x10(%rsp), %rsi
    000026f2: 	callq	memcpy@PLT # Offset: 9970
    000026f7: 	movq	0x30(%rsp), %rax
    000026fc: 	movq	(%r13), %rdi
    00002700: 	movq	%rax, (%rsp)
    00002704: 	jmp	.Ltmp2692 # Offset: 9988
.Ltmp2681:
    00002709: 	movq	%r12, %rsi
    0000270c: 	movq	%r15, %rdi
    0000270f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9999
    00002714: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000271b: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002722: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002729: 	jne	.Ltmp2693 # Offset: 10025
.Ltmp2686:
    0000272f: 	movq	-0x8(%rdx), %rax
    00002733: 	addq	$0x200, %rax
    00002739: 	jmp	.Ltmp2693 # Offset: 10041
.Ltmp2675:
    0000273e: 	movq	-0x8(%rdx), %rax
    00002742: 	addq	$0x200, %rax
    00002748: 	jmp	.Ltmp2694 # Offset: 10056
.Ltmp2496:
    0000274d: 	movq	%r12, %rsi
    00002750: 	movq	%r15, %rdi
    00002753: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10067
    00002758: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000275f: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002766: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000276d: 	jne	.Ltmp2695 # Offset: 10093
.Ltmp2501:
    00002773: 	movq	-0x8(%rdx), %rax
    00002777: 	addq	$0x200, %rax
    0000277d: 	jmp	.Ltmp2695 # Offset: 10109
.Ltmp2505:
    00002782: 	movq	-0x8(%rdx), %rax
    00002786: 	addq	$0x200, %rax
    0000278c: 	jmp	.Ltmp2696 # Offset: 10124
.Ltmp2503:
    00002791: 	movq	-0x8(%rdx), %rax
    00002795: 	addq	$0x200, %rax
    0000279b: 	jmp	.Ltmp2697 # Offset: 10139
.Ltmp2521:
    000027a0: 	movq	%r12, %rsi
    000027a3: 	movq	%r15, %rdi
    000027a6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10150
    000027ab: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000027b2: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000027b9: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000027c0: 	jne	.Ltmp2698 # Offset: 10176
.Ltmp2526:
    000027c6: 	movq	-0x8(%rdx), %rax
    000027ca: 	addq	$0x200, %rax
    000027d0: 	jmp	.Ltmp2698 # Offset: 10192
.Ltmp2519:
    000027d5: 	movq	-0x8(%rdx), %rax
    000027d9: 	addq	$0x200, %rax
    000027df: 	jmp	.Ltmp2699 # Offset: 10207
.Ltmp2517:
    000027e4: 	movq	-0x8(%rdx), %rax
    000027e8: 	addq	$0x200, %rax
    000027ee: 	jmp	.Ltmp2700 # Offset: 10222
.Ltmp2515:
    000027f3: 	movq	-0x8(%rdx), %rax
    000027f7: 	addq	$0x200, %rax
    000027fd: 	jmp	.Ltmp2701 # Offset: 10237
.Ltmp2513:
    00002802: 	movq	-0x8(%rdx), %rax
    00002806: 	addq	$0x200, %rax
    0000280c: 	jmp	.Ltmp2702 # Offset: 10252
.Ltmp2511:
    00002811: 	movq	-0x8(%rdx), %rax
    00002815: 	addq	$0x200, %rax
    0000281b: 	jmp	.Ltmp2703 # Offset: 10267
.Ltmp2509:
    00002820: 	movq	-0x8(%rdx), %rax
    00002824: 	addq	$0x200, %rax
    0000282a: 	jmp	.Ltmp2704 # Offset: 10282
.Ltmp2507:
    0000282f: 	movq	-0x8(%rdx), %rax
    00002833: 	addq	$0x200, %rax
    00002839: 	jmp	.Ltmp2705 # Offset: 10297
.Ltmp2556:
    0000283e: 	movq	%r12, %rsi
    00002841: 	movq	%r15, %rdi
    00002844: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10308
    00002849: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002850: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002857: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000285e: 	jne	.Ltmp2706 # Offset: 10334
.Ltmp2561:
    00002864: 	movq	-0x8(%rdx), %rax
    00002868: 	addq	$0x200, %rax
    0000286e: 	jmp	.Ltmp2706 # Offset: 10350
.Ltmp2550:
    00002873: 	movq	-0x8(%rdx), %rax
    00002877: 	addq	$0x200, %rax
    0000287d: 	jmp	.Ltmp2707 # Offset: 10365
.Ltmp2545:
    00002882: 	movq	%r12, %rsi
    00002885: 	movq	%r15, %rdi
    00002888: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10376
    0000288d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002894: 	jmp	.Ltmp2708 # Offset: 10388
.Ltmp2539:
    00002899: 	movq	-0x8(%rdx), %rax
    0000289d: 	addq	$0x200, %rax
    000028a3: 	jmp	.Ltmp2709 # Offset: 10403
.Ltmp2537:
    000028a8: 	movq	-0x8(%rdx), %rax
    000028ac: 	addq	$0x200, %rax
    000028b2: 	jmp	.Ltmp2710 # Offset: 10418
.Ltmp2535:
    000028b7: 	movq	-0x8(%rdx), %rax
    000028bb: 	addq	$0x200, %rax
    000028c1: 	jmp	.Ltmp2711 # Offset: 10433
.Ltmp2530:
    000028c6: 	movq	%r12, %rsi
    000028c9: 	movq	%r15, %rdi
    000028cc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10444
    000028d1: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000028d8: 	jmp	.Ltmp2712 # Offset: 10456
.Ltmp2528:
    000028dd: 	movq	-0x8(%rdx), %rax
    000028e1: 	addq	$0x200, %rax
    000028e7: 	jmp	.Ltmp2713 # Offset: 10471
.Ltmp2670:
    000028ec: 	movq	%r12, %rsi
    000028ef: 	movq	%r15, %rdi
    000028f2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10482
    000028f7: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000028fe: 	jmp	.Ltmp2714 # Offset: 10494
.Ltmp2664:
    00002903: 	movq	-0x8(%rdx), %rax
    00002907: 	addq	$0x200, %rax
    0000290d: 	jmp	.Ltmp2715 # Offset: 10509
.Ltmp2659:
    00002912: 	movq	%r12, %rsi
    00002915: 	movq	%r15, %rdi
    00002918: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10520
    0000291d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002924: 	jmp	.Ltmp2716 # Offset: 10532
.Ltmp2653:
    00002929: 	movq	-0x8(%rdx), %rax
    0000292d: 	addq	$0x200, %rax
    00002933: 	jmp	.Ltmp2717 # Offset: 10547
.Ltmp2647:
    00002938: 	movq	-0x8(%rdx), %rax
    0000293c: 	addq	$0x200, %rax
    00002942: 	jmp	.Ltmp2718 # Offset: 10562
.Ltmp2641:
    00002947: 	movq	-0x8(%rdx), %rax
    0000294b: 	addq	$0x200, %rax
    00002951: 	jmp	.Ltmp2719 # Offset: 10577
.Ltmp2635:
    00002956: 	movq	-0x8(%rdx), %rax
    0000295a: 	addq	$0x200, %rax
    00002960: 	jmp	.Ltmp2720 # Offset: 10592
.Ltmp2630:
    00002965: 	movq	%r12, %rsi
    00002968: 	movq	%r15, %rdi
    0000296b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10603
    00002970: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002977: 	jmp	.Ltmp2721 # Offset: 10615
.Ltmp2624:
    0000297c: 	movq	-0x8(%rdx), %rax
    00002980: 	addq	$0x200, %rax
    00002986: 	jmp	.Ltmp2722 # Offset: 10630
.Ltmp2618:
    0000298b: 	movq	-0x8(%rdx), %rax
    0000298f: 	addq	$0x200, %rax
    00002995: 	jmp	.Ltmp2723 # Offset: 10645
.Ltmp2612:
    0000299a: 	movq	-0x8(%rdx), %rax
    0000299e: 	addq	$0x200, %rax
    000029a4: 	jmp	.Ltmp2724 # Offset: 10660
.Ltmp2607:
    000029a9: 	movq	%r12, %rsi
    000029ac: 	movq	%r15, %rdi
    000029af: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10671
    000029b4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000029bb: 	jmp	.Ltmp2725 # Offset: 10683
.Ltmp2601:
    000029c0: 	movq	-0x8(%rdx), %rax
    000029c4: 	addq	$0x200, %rax
    000029ca: 	jmp	.Ltmp2726 # Offset: 10698
.Ltmp2595:
    000029cf: 	movq	-0x8(%rdx), %rax
    000029d3: 	addq	$0x200, %rax
    000029d9: 	jmp	.Ltmp2727 # Offset: 10713
.Ltmp2590:
    000029de: 	movq	%r12, %rsi
    000029e1: 	movq	%r15, %rdi
    000029e4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10724
    000029e9: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000029f0: 	jmp	.Ltmp2728 # Offset: 10736
.Ltmp2584:
    000029f5: 	movq	-0x8(%rdx), %rax
    000029f9: 	addq	$0x200, %rax
    000029ff: 	jmp	.Ltmp2729 # Offset: 10751
.Ltmp2579:
    00002a04: 	movq	%r12, %rsi
    00002a07: 	movq	%r15, %rdi
    00002a0a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10762
    00002a0f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002a16: 	jmp	.Ltmp2730 # Offset: 10774
.Ltmp2573:
    00002a1b: 	movq	-0x8(%rdx), %rax
    00002a1f: 	addq	$0x200, %rax
    00002a25: 	jmp	.Ltmp2731 # Offset: 10789
.Ltmp2567:
    00002a2a: 	movq	-0x8(%rdx), %rax
    00002a2e: 	addq	$0x200, %rax
    00002a34: 	jmp	.Ltmp2732 # Offset: 10804
.Ltmp2560:
    00002a39: 	cmpq	$0x0, 0x10(%rsp)
    00002a3f: 	je	.Ltmp2733 # Offset: 10815
.Ltmp2752:
    00002a45: 	movq	0x10(%rsp), %rdx
    00002a4a: 	movq	0x28(%rsp), %rsi
    00002a4f: 	callq	memcpy@PLT # Offset: 10831
    00002a54: 	movq	0x30(%rsp), %rax
    00002a59: 	movq	%rax, 0x10(%rsp)
    00002a5e: 	movq	(%rsp), %rax
    00002a62: 	movq	(%rax), %rdi
    00002a65: 	jmp	.Ltmp2733 # Offset: 10853
.Ltmp2583:
    00002a6a: 	cmpq	$0x0, 0x10(%rsp)
    00002a70: 	je	.Ltmp2734 # Offset: 10864
.Ltmp2751:
    00002a76: 	movq	0x10(%rsp), %rdx
    00002a7b: 	movq	0x28(%rsp), %rsi
    00002a80: 	callq	memcpy@PLT # Offset: 10880
    00002a85: 	movq	0x30(%rsp), %rax
    00002a8a: 	movq	%rax, 0x10(%rsp)
    00002a8f: 	movq	(%rsp), %rax
    00002a93: 	movq	(%rax), %rdi
    00002a96: 	jmp	.Ltmp2734 # Offset: 10902
.Ltmp2611:
    00002a9b: 	cmpq	$0x0, 0x10(%rsp)
    00002aa1: 	je	.Ltmp2735 # Offset: 10913
    00002aa7: 	jmp	.Ltmp2736 # Offset: 10919
    00002aac: 	nopl	(%rax) # Size: 4
.Ltmp2594:
    00002ab0: 	cmpq	$0x0, 0x10(%rsp)
    00002ab6: 	je	.Ltmp2737 # Offset: 10934
    00002abc: 	jmp	.Ltmp2738 # Offset: 10940
    00002ac1: 	nopl	(%rax) # Size: 7
.Ltmp2534:
    00002ac8: 	cmpq	$0x0, (%rsp)
    00002acd: 	je	.Ltmp2739 # Offset: 10957
    00002ad3: 	jmp	.Ltmp2740 # Offset: 10963
    00002ad8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2500:
    00002ae0: 	cmpq	$0x0, (%rsp)
    00002ae5: 	je	.Ltmp2692 # Offset: 10981
    00002aeb: 	jmp	.Ltmp2741 # Offset: 10987
.Ltmp2663:
    00002af0: 	cmpq	$0x0, 0x10(%rsp)
    00002af6: 	je	.Ltmp2742 # Offset: 10998
    00002afc: 	jmp	.Ltmp2743 # Offset: 11004
    00002b01: 	nopl	(%rax) # Size: 7
.Ltmp2634:
    00002b08: 	cmpq	$0x0, 0x10(%rsp)
    00002b0e: 	je	.Ltmp2744 # Offset: 11022
    00002b14: 	jmp	.Ltmp2745 # Offset: 11028
    00002b19: 	nopl	(%rax) # Size: 7
.Ltmp2685:
    00002b20: 	testq	%r15, %r15
    00002b23: 	je	.Ltmp2746 # Offset: 11043
.Ltmp2755:
    00002b29: 	movq	%r15, %rdx
    00002b2c: 	movq	%rbp, %rsi
    00002b2f: 	callq	memcpy@PLT # Offset: 11055
    00002b34: 	movq	0x30(%rsp), %r15
    00002b39: 	movq	(%rbx), %rdi
    00002b3c: 	jmp	.Ltmp2746 # Offset: 11068
.Ltmp2525:
    00002b41: 	cmpq	$0x0, (%rsp)
    00002b46: 	je	.Ltmp2747 # Offset: 11078
.Ltmp2754:
    00002b4c: 	movq	(%rsp), %rdx
    00002b50: 	movq	0x28(%rsp), %rsi
    00002b55: 	callq	memcpy@PLT # Offset: 11093
    00002b5a: 	movq	0x30(%rsp), %rax
    00002b5f: 	movq	%rax, (%rsp)
    00002b63: 	movq	0x10(%rsp), %rax
    00002b68: 	movq	(%rax), %rdi
    00002b6b: 	jmp	.Ltmp2747 # Offset: 11115
.Ltmp2549:
    00002b70: 	cmpq	$0x0, 0x10(%rsp)
    00002b76: 	je	.Ltmp2748 # Offset: 11126
    00002b7c: 	jmp	.Ltmp2749 # Offset: 11132
    00002b81: 	nopl	(%rax) # Size: 7
.Ltmp2674:
    00002b88: 	cmpq	$0x0, 0x10(%rsp)
    00002b8e: 	je	.Ltmp2750 # Offset: 11150
.Ltmp2753:
    00002b94: 	movq	0x10(%rsp), %rdx
    00002b99: 	movq	0x28(%rsp), %rsi
    00002b9e: 	callq	memcpy@PLT # Offset: 11166
    00002ba3: 	movq	0x30(%rsp), %rax
    00002ba8: 	movq	%rax, 0x10(%rsp)
    00002bad: 	movq	(%rsp), %rax
    00002bb1: 	movq	(%rax), %rdi
    00002bb4: 	jmp	.Ltmp2750 # Offset: 11188
.Ltmp2593:
    00002bb9: 	movq	0x18(%rsp), %rsi
    00002bbe: 	movq	(%rsp), %rdi
    00002bc2: 	xorl	%edx, %edx
    00002bc4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11204
    00002bc9: 	movq	(%rsp), %rcx
    00002bcd: 	movq	%rax, %rdi
    00002bd0: 	movq	%rax, (%rcx)
    00002bd3: 	movq	0x30(%rsp), %rax
    00002bd8: 	movq	%rax, 0x10(%rcx)
.Ltmp2738:
    00002bdc: 	movq	0x10(%rsp), %rdx
    00002be1: 	movq	0x28(%rsp), %rsi
    00002be6: 	callq	memcpy@PLT # Offset: 11238
    00002beb: 	movq	0x30(%rsp), %rax
    00002bf0: 	movq	%rax, 0x10(%rsp)
    00002bf5: 	movq	(%rsp), %rax
    00002bf9: 	movq	(%rax), %rdi
    00002bfc: 	jmp	.Ltmp2737 # Offset: 11260
.Ltmp2610:
    00002c01: 	movq	0x18(%rsp), %rsi
    00002c06: 	movq	(%rsp), %rdi
    00002c0a: 	xorl	%edx, %edx
    00002c0c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11276
    00002c11: 	movq	(%rsp), %rsi
    00002c15: 	movq	%rax, %rdi
    00002c18: 	movq	%rax, (%rsi)
    00002c1b: 	movq	0x30(%rsp), %rax
    00002c20: 	movq	%rax, 0x10(%rsi)
.Ltmp2736:
    00002c24: 	movq	0x10(%rsp), %rdx
    00002c29: 	movq	0x28(%rsp), %rsi
    00002c2e: 	callq	memcpy@PLT # Offset: 11310
    00002c33: 	movq	0x30(%rsp), %rax
    00002c38: 	movq	%rax, 0x10(%rsp)
    00002c3d: 	movq	(%rsp), %rax
    00002c41: 	movq	(%rax), %rdi
    00002c44: 	jmp	.Ltmp2735 # Offset: 11332
.Ltmp2662:
    00002c49: 	movq	0x18(%rsp), %rsi
    00002c4e: 	movq	(%rsp), %rdi
    00002c52: 	xorl	%edx, %edx
    00002c54: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11348
    00002c59: 	movq	(%rsp), %rsi
    00002c5d: 	movq	%rax, %rdi
    00002c60: 	movq	%rax, (%rsi)
    00002c63: 	movq	0x30(%rsp), %rax
    00002c68: 	movq	%rax, 0x10(%rsi)
.Ltmp2743:
    00002c6c: 	movq	0x10(%rsp), %rdx
    00002c71: 	movq	0x28(%rsp), %rsi
    00002c76: 	callq	memcpy@PLT # Offset: 11382
    00002c7b: 	movq	0x30(%rsp), %rax
    00002c80: 	movq	%rax, 0x10(%rsp)
    00002c85: 	movq	(%rsp), %rax
    00002c89: 	movq	(%rax), %rdi
    00002c8c: 	jmp	.Ltmp2742 # Offset: 11404
.Ltmp2582:
    00002c91: 	movq	0x18(%rsp), %rsi
    00002c96: 	movq	(%rsp), %rdi
    00002c9a: 	xorl	%edx, %edx
    00002c9c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11420
    00002ca1: 	movq	(%rsp), %rsi
    00002ca5: 	movq	%rax, %rdi
    00002ca8: 	movq	%rax, (%rsi)
    00002cab: 	movq	0x30(%rsp), %rax
    00002cb0: 	movq	%rax, 0x10(%rsi)
    00002cb4: 	jmp	.Ltmp2751 # Offset: 11444
.Ltmp2533:
    00002cb9: 	movq	0x18(%rsp), %rsi
    00002cbe: 	movq	0x10(%rsp), %rdi
    00002cc3: 	xorl	%edx, %edx
    00002cc5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11461
    00002cca: 	movq	0x10(%rsp), %rcx
    00002ccf: 	movq	%rax, %rdi
    00002cd2: 	movq	%rax, (%rcx)
    00002cd5: 	movq	0x30(%rsp), %rax
    00002cda: 	movq	%rax, 0x10(%rcx)
.Ltmp2740:
    00002cde: 	movq	(%rsp), %rdx
    00002ce2: 	movq	0x28(%rsp), %rsi
    00002ce7: 	callq	memcpy@PLT # Offset: 11495
    00002cec: 	movq	0x30(%rsp), %rax
    00002cf1: 	movq	%rax, (%rsp)
    00002cf5: 	movq	0x10(%rsp), %rax
    00002cfa: 	movq	(%rax), %rdi
    00002cfd: 	jmp	.Ltmp2739 # Offset: 11517
.Ltmp2559:
    00002d02: 	movq	0x18(%rsp), %rsi
    00002d07: 	movq	(%rsp), %rdi
    00002d0b: 	xorl	%edx, %edx
    00002d0d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11533
    00002d12: 	movq	(%rsp), %rcx
    00002d16: 	movq	%rax, %rdi
    00002d19: 	movq	%rax, (%rcx)
    00002d1c: 	movq	0x30(%rsp), %rax
    00002d21: 	movq	%rax, 0x10(%rcx)
    00002d25: 	jmp	.Ltmp2752 # Offset: 11557
.Ltmp2548:
    00002d2a: 	movq	0x18(%rsp), %rsi
    00002d2f: 	movq	(%rsp), %rdi
    00002d33: 	xorl	%edx, %edx
    00002d35: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11573
    00002d3a: 	movq	(%rsp), %rsi
    00002d3e: 	movq	%rax, %rdi
    00002d41: 	movq	%rax, (%rsi)
    00002d44: 	movq	0x30(%rsp), %rax
    00002d49: 	movq	%rax, 0x10(%rsi)
.Ltmp2749:
    00002d4d: 	movq	0x10(%rsp), %rdx
    00002d52: 	movq	0x28(%rsp), %rsi
    00002d57: 	callq	memcpy@PLT # Offset: 11607
    00002d5c: 	movq	0x30(%rsp), %rax
    00002d61: 	movq	%rax, 0x10(%rsp)
    00002d66: 	movq	(%rsp), %rax
    00002d6a: 	movq	(%rax), %rdi
    00002d6d: 	jmp	.Ltmp2748 # Offset: 11629
.Ltmp2633:
    00002d72: 	movq	0x18(%rsp), %rsi
    00002d77: 	movq	(%rsp), %rdi
    00002d7b: 	xorl	%edx, %edx
    00002d7d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11645
    00002d82: 	movq	(%rsp), %rcx
    00002d86: 	movq	%rax, %rdi
    00002d89: 	movq	%rax, (%rcx)
    00002d8c: 	movq	0x30(%rsp), %rax
    00002d91: 	movq	%rax, 0x10(%rcx)
.Ltmp2745:
    00002d95: 	movq	0x10(%rsp), %rdx
    00002d9a: 	movq	0x28(%rsp), %rsi
    00002d9f: 	callq	memcpy@PLT # Offset: 11679
    00002da4: 	movq	0x30(%rsp), %rax
    00002da9: 	movq	%rax, 0x10(%rsp)
    00002dae: 	movq	(%rsp), %rax
    00002db2: 	movq	(%rax), %rdi
    00002db5: 	jmp	.Ltmp2744 # Offset: 11701
.Ltmp2673:
    00002dba: 	movq	0x18(%rsp), %rsi
    00002dbf: 	movq	(%rsp), %rdi
    00002dc3: 	xorl	%edx, %edx
    00002dc5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11717
    00002dca: 	movq	(%rsp), %rcx
    00002dce: 	movq	%rax, %rdi
    00002dd1: 	movq	%rax, (%rcx)
    00002dd4: 	movq	0x30(%rsp), %rax
    00002dd9: 	movq	%rax, 0x10(%rcx)
    00002ddd: 	jmp	.Ltmp2753 # Offset: 11741
.Ltmp2524:
    00002de2: 	movq	0x18(%rsp), %rsi
    00002de7: 	movq	0x10(%rsp), %rdi
    00002dec: 	xorl	%edx, %edx
    00002dee: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11758
    00002df3: 	movq	0x10(%rsp), %rsi
    00002df8: 	movq	%rax, %rdi
    00002dfb: 	movq	%rax, (%rsi)
    00002dfe: 	movq	0x30(%rsp), %rax
    00002e03: 	movq	%rax, 0x10(%rsi)
    00002e07: 	jmp	.Ltmp2754 # Offset: 11783
.Ltmp2684:
    00002e0c: 	movq	0x18(%rsp), %rsi
    00002e11: 	xorl	%edx, %edx
    00002e13: 	movq	%rbx, %rdi
    00002e16: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11798
    00002e1b: 	movq	%rax, (%rbx)
    00002e1e: 	movq	%rax, %rdi
    00002e21: 	movq	0x30(%rsp), %rax
    00002e26: 	movq	%rax, 0x10(%rbx)
    00002e2a: 	jmp	.Ltmp2755 # Offset: 11818
.Ltmp2523:
    00002e2f: 	leaq	DATAat0x23158(%rip), %rdi
    00002e36: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11830
.Ltmp2532:
    00002e3b: 	leaq	DATAat0x23158(%rip), %rdi
    00002e42: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11842
.Ltmp2547:
    00002e47: 	leaq	DATAat0x23158(%rip), %rdi
    00002e4e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11854
.Ltmp2558:
    00002e53: 	leaq	DATAat0x23158(%rip), %rdi
    00002e5a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11866
.Ltmp2581:
    00002e5f: 	leaq	DATAat0x23158(%rip), %rdi
    00002e66: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11878
.Ltmp2592:
    00002e6b: 	leaq	DATAat0x23158(%rip), %rdi
    00002e72: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11890
.Ltmp2609:
    00002e77: 	leaq	DATAat0x23158(%rip), %rdi
    00002e7e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11902
.Ltmp2632:
    00002e83: 	leaq	DATAat0x23158(%rip), %rdi
    00002e8a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11914
.Ltmp2661:
    00002e8f: 	leaq	DATAat0x23158(%rip), %rdi
    00002e96: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11926
.Ltmp2672:
    00002e9b: 	leaq	DATAat0x23158(%rip), %rdi
    00002ea2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11938
.Ltmp2683:
    00002ea7: 	leaq	DATAat0x23158(%rip), %rdi
    00002eae: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11950
.Ltmp2691:
    00002eb3: 	callq	__stack_chk_fail@PLT # Offset: 11955
.Ltmp2498:
    00002eb8: 	leaq	DATAat0x23158(%rip), %rdi
    00002ebf: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11967
    00002ec4: 	endbr64
.Ltmp2757:
    00002ec8: 	movq	%rax, %rbx
    00002ecb: 	jmp	.Ltmp2756 # Offset: 11979
    00002ed0: 	endbr64
    00002ed4: 	jmp	.Ltmp2757 # Offset: 11988
    00002ed6: 	endbr64
    00002eda: 	jmp	.Ltmp2757 # Offset: 11994
    00002edc: 	endbr64
.Ltmp2759:
    00002ee0: 	movq	%rax, %rbx
    00002ee3: 	jmp	.Ltmp2758 # Offset: 12003
    00002ee8: 	endbr64
    00002eec: 	jmp	.Ltmp2759 # Offset: 12012
    00002eee: 	endbr64
    00002ef2: 	jmp	.Ltmp2757 # Offset: 12018
    00002ef4: 	endbr64
    00002ef8: 	jmp	.Ltmp2759 # Offset: 12024
    00002efa: 	endbr64
    00002efe: 	jmp	.Ltmp2759 # Offset: 12030
    00002f00: 	endbr64
    00002f04: 	jmp	.Ltmp2759 # Offset: 12036
    00002f06: 	endbr64
    00002f0a: 	jmp	.Ltmp2757 # Offset: 12042
    00002f0c: 	endbr64
    00002f10: 	jmp	.Ltmp2759 # Offset: 12048
    00002f12: 	endbr64
    00002f16: 	jmp	.Ltmp2759 # Offset: 12054
    00002f18: 	endbr64
    00002f1c: 	jmp	.Ltmp2759 # Offset: 12060
    00002f1e: 	endbr64
    00002f22: 	jmp	.Ltmp2759 # Offset: 12066
    00002f24: 	endbr64
    00002f28: 	jmp	.Ltmp2759 # Offset: 12072
    00002f2a: 	endbr64
    00002f2e: 	jmp	.Ltmp2759 # Offset: 12078
    00002f30: 	endbr64
    00002f34: 	jmp	.Ltmp2757 # Offset: 12084
    00002f36: 	endbr64
    00002f3a: 	movq	%rax, %rbx
    00002f3d: 	jmp	.Ltmp2760 # Offset: 12093
    00002f3f: 	endbr64
    00002f43: 	jmp	.Ltmp2759 # Offset: 12099
.Ltmp2760:
    00002f45: 	movq	0x90(%rsp), %rdi
    00002f4d: 	leaq	0xa0(%rsp), %rax
    00002f55: 	cmpq	%rax, %rdi
    00002f58: 	je	.Ltmp2761 # Offset: 12120
.Ltmp2764:
    00002f5a: 	movq	0xa0(%rsp), %rax
    00002f62: 	leaq	0x1(%rax), %rsi
    00002f66: 	callq	_ZdlPvm@PLT # Offset: 12134
.Ltmp2761:
    00002f6b: 	movq	0x50(%rsp), %rdi
    00002f70: 	cmpq	0x20(%rsp), %rdi
    00002f75: 	je	.Ltmp2762 # Offset: 12149
    00002f77: 	movq	0x60(%rsp), %rax
    00002f7c: 	leaq	0x1(%rax), %rsi
    00002f80: 	callq	_ZdlPvm@PLT # Offset: 12160
.Ltmp2762:
    00002f85: 	movq	%rbx, %rdi
    00002f88: 	callq	_Unwind_Resume@PLT # Offset: 12168
    00002f8d: 	endbr64
    00002f91: 	movq	%rax, %rbx
    00002f94: 	jmp	.Ltmp2761 # Offset: 12180
.Ltmp2756:
    00002f96: 	movq	0x90(%rsp), %rdi
    00002f9e: 	cmpq	%r13, %rdi
    00002fa1: 	je	.Ltmp2763 # Offset: 12193
    00002fa3: 	movq	0xa0(%rsp), %rax
    00002fab: 	leaq	0x1(%rax), %rsi
    00002faf: 	callq	_ZdlPvm@PLT # Offset: 12207
.Ltmp2763:
    00002fb4: 	movq	0x70(%rsp), %rdi
    00002fb9: 	leaq	0x80(%rsp), %rax
    00002fc1: 	cmpq	%rax, %rdi
    00002fc4: 	je	.Ltmp2761 # Offset: 12228
    00002fc6: 	movq	0x80(%rsp), %rax
    00002fce: 	leaq	0x1(%rax), %rsi
    00002fd2: 	callq	_ZdlPvm@PLT # Offset: 12242
    00002fd7: 	jmp	.Ltmp2761 # Offset: 12247
    00002fd9: 	endbr64
    00002fdd: 	jmp	.Ltmp2757 # Offset: 12253
    00002fe2: 	endbr64
    00002fe6: 	jmp	.Ltmp2759 # Offset: 12262
    00002feb: 	endbr64
    00002fef: 	jmp	.Ltmp2759 # Offset: 12271
    00002ff4: 	endbr64
    00002ff8: 	movq	%rax, %rbx
    00002ffb: 	jmp	.Ltmp2763 # Offset: 12283
    00002ffd: 	endbr64
    00003001: 	jmp	.Ltmp2757 # Offset: 12289
    00003006: 	endbr64
    0000300a: 	jmp	.Ltmp2757 # Offset: 12298
    0000300f: 	endbr64
    00003013: 	jmp	.Ltmp2757 # Offset: 12307
    00003018: 	endbr64
    0000301c: 	jmp	.Ltmp2757 # Offset: 12316
    00003021: 	endbr64
    00003025: 	jmp	.Ltmp2757 # Offset: 12325
    0000302a: 	endbr64
    0000302e: 	jmp	.Ltmp2757 # Offset: 12334
    00003033: 	endbr64
    00003037: 	jmp	.Ltmp2757 # Offset: 12343
    0000303c: 	endbr64
    00003040: 	jmp	.Ltmp2757 # Offset: 12352
    00003045: 	endbr64
    00003049: 	jmp	.Ltmp2757 # Offset: 12361
    0000304e: 	endbr64
    00003052: 	jmp	.Ltmp2757 # Offset: 12370
    00003057: 	endbr64
    0000305b: 	jmp	.Ltmp2757 # Offset: 12379
.Ltmp2758:
    00003060: 	movq	0x90(%rsp), %rdi
    00003068: 	cmpq	%r13, %rdi
    0000306b: 	jne	.Ltmp2764 # Offset: 12395
    00003071: 	jmp	.Ltmp2761 # Offset: 12401
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIjEvv"

Binary Function "_Z11TestOneTypeImEvv" after disassembly {
  Number      : 52
  State       : disassembled
  Address     : 0x1f8d0
  Size        : 0x30a6
  MaxSize     : 0x30a6
  Offset      : 0x1f8d0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeImEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB051:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp2765:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp2765 # Offset: 37
    00000027: 	subq	$0xac8, %rsp
    0000002e: 	movdqa	_Z7gLabelsB5cxx11+16(%rip), %xmm2
    00000036: 	movdqa	_Z7gLabelsB5cxx11+32(%rip), %xmm3
    0000003e: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000045: 	movq	%fs:0x28, %rax
    0000004e: 	movq	%rax, 0xfab8(%rsp)
    00000056: 	xorl	%eax, %eax
    00000058: 	leaq	0x60(%rsp), %rax
    0000005d: 	leaq	0x30(%rsp), %rsi
    00000062: 	movq	$0x8, 0x58(%rsp)
    0000006b: 	movq	%rax, 0x28(%rsp)
    00000070: 	movq	%rax, 0x50(%rsp)
    00000075: 	movabsq	$0x745f3436746e6975, %rax
    0000007f: 	movq	%rax, 0x60(%rsp)
    00000084: 	movb	$0x0, 0x68(%rsp)
    00000089: 	movq	%rsi, 0x20(%rsp)
    0000008e: 	movaps	%xmm2, 0x30(%rsp)
    00000093: 	movaps	%xmm3, 0x40(%rsp)
    00000098: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 152
    0000009d: 	movsd	init_value(%rip), %xmm0
    000000a5: 	comisd	DATAat0x234a8(%rip), %xmm0
    000000ad: 	jae	.Ltmp2766 # Offset: 173
    000000b3: 	cvttsd2si	%xmm0, %rax
.Ltmp2981:
    000000b8: 	movq	%rax, %xmm0
    000000bd: 	leaq	0xb0(%rsp), %rbp
    000000c5: 	leaq	0xfab0(%rsp), %rbx
    000000cd: 	punpcklqdq	%xmm0, %xmm0
    000000d1: 	movq	%rbp, %rax
    000000d4: 	nopl	(%rax) # Size: 4
.Ltmp2767:
    000000d8: 	movaps	%xmm0, (%rax)
    000000db: 	addq	$0x10, %rax
    000000df: 	cmpq	%rbx, %rax
    000000e2: 	jne	.Ltmp2767 # Offset: 226
    000000e4: 	movl	base_iterations(%rip), %eax
    000000ea: 	leaq	0x90(%rsp), %r12
    000000f2: 	leaq	DATAat0x231c8(%rip), %rdx
    000000f9: 	movq	%r12, %rdi
    000000fc: 	movl	%eax, iterations(%rip)
    00000102: 	leaq	0x50(%rsp), %rax
    00000107: 	movq	%rax, %rsi
    0000010a: 	movq	%rax, 0x18(%rsp)
    0000010f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 271
    00000114: 	callq	clock@PLT # Offset: 276
    00000119: 	movq	%r12, %rsi
    0000011c: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000123: 	movq	%rax, start_time(%rip)
    0000012a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 298
    0000012f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000136: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000013d: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000144: 	je	.Ltmp2768 # Offset: 324
.Ltmp3013:
    0000014a: 	movq	-0x20(%rax), %r13
    0000014e: 	callq	clock@PLT # Offset: 334
    00000153: 	pxor	%xmm0, %xmm0
    00000157: 	movq	%rax, end_time(%rip)
    0000015e: 	movq	%r13, %rdi
    00000161: 	subq	start_time(%rip), %rax
    00000168: 	cvtsi2sd	%rax, %xmm0
    0000016d: 	divsd	DATAat0x23450(%rip), %xmm0
    00000175: 	callq	_Z13record_resultdPKc # Offset: 373
    0000017a: 	movq	0x90(%rsp), %rdi
    00000182: 	leaq	0xa0(%rsp), %rax
    0000018a: 	movq	%rax, 0x10(%rsp)
    0000018f: 	cmpq	%rax, %rdi
    00000192: 	je	.Ltmp2769 # Offset: 402
    00000194: 	movq	0xa0(%rsp), %rax
    0000019c: 	leaq	0x1(%rax), %rsi
    000001a0: 	callq	_ZdlPvm@PLT # Offset: 416
.Ltmp2769:
    000001a5: 	movq	0x18(%rsp), %rsi
    000001aa: 	leaq	DATAat0x231e2(%rip), %rdx
    000001b1: 	movq	%r12, %rdi
    000001b4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 436
    000001b9: 	callq	clock@PLT # Offset: 441
    000001be: 	movq	%r12, %rsi
    000001c1: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000001c8: 	movq	%rax, start_time(%rip)
    000001cf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 463
    000001d4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000001db: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000001e2: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000001e9: 	je	.Ltmp2770 # Offset: 489
.Ltmp3012:
    000001ef: 	movq	-0x20(%rax), %r13
    000001f3: 	callq	clock@PLT # Offset: 499
    000001f8: 	pxor	%xmm0, %xmm0
    000001fc: 	movq	%rax, end_time(%rip)
    00000203: 	movq	%r13, %rdi
    00000206: 	subq	start_time(%rip), %rax
    0000020d: 	cvtsi2sd	%rax, %xmm0
    00000212: 	divsd	DATAat0x23450(%rip), %xmm0
    0000021a: 	callq	_Z13record_resultdPKc # Offset: 538
    0000021f: 	movq	0x90(%rsp), %rdi
    00000227: 	cmpq	0x10(%rsp), %rdi
    0000022c: 	je	.Ltmp2771 # Offset: 556
    0000022e: 	movq	0xa0(%rsp), %rax
    00000236: 	leaq	0x1(%rax), %rsi
    0000023a: 	callq	_ZdlPvm@PLT # Offset: 570
.Ltmp2771:
    0000023f: 	movq	0x18(%rsp), %rsi
    00000244: 	leaq	DATAat0x231f1(%rip), %rdx
    0000024b: 	movq	%r12, %rdi
    0000024e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 590
    00000253: 	callq	clock@PLT # Offset: 595
    00000258: 	movq	%r12, %rsi
    0000025b: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000262: 	movq	%rax, start_time(%rip)
    00000269: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 617
    0000026e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000275: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000027c: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000283: 	je	.Ltmp2772 # Offset: 643
.Ltmp3011:
    00000289: 	movq	-0x20(%rax), %r13
    0000028d: 	callq	clock@PLT # Offset: 653
    00000292: 	pxor	%xmm0, %xmm0
    00000296: 	movq	%rax, end_time(%rip)
    0000029d: 	movq	%r13, %rdi
    000002a0: 	subq	start_time(%rip), %rax
    000002a7: 	cvtsi2sd	%rax, %xmm0
    000002ac: 	divsd	DATAat0x23450(%rip), %xmm0
    000002b4: 	callq	_Z13record_resultdPKc # Offset: 692
    000002b9: 	movq	0x90(%rsp), %rdi
    000002c1: 	cmpq	0x10(%rsp), %rdi
    000002c6: 	je	.Ltmp2773 # Offset: 710
    000002c8: 	movq	0xa0(%rsp), %rax
    000002d0: 	leaq	0x1(%rax), %rsi
    000002d4: 	callq	_ZdlPvm@PLT # Offset: 724
.Ltmp2773:
    000002d9: 	movq	0x18(%rsp), %rsi
    000002de: 	leaq	DATAat0x23205(%rip), %rdx
    000002e5: 	movq	%r12, %rdi
    000002e8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 744
    000002ed: 	callq	clock@PLT # Offset: 749
    000002f2: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r14
    000002f9: 	movq	%rax, start_time(%rip)
    00000300: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000307: 	subq	$0x20, %rax
    0000030b: 	cmpq	%rax, %r14
    0000030e: 	je	.Ltmp2774 # Offset: 782
    00000314: 	leaq	0x10(%r14), %rdi
    00000318: 	movq	0x98(%rsp), %r13
    00000320: 	movq	%rdi, (%r14)
    00000323: 	movq	0x90(%rsp), %r15
    0000032b: 	movq	%r15, %rax
    0000032e: 	addq	%r13, %rax
    00000331: 	je	.Ltmp2775 # Offset: 817
    00000333: 	testq	%r15, %r15
    00000336: 	je	.Ltmp2776 # Offset: 822
.Ltmp2775:
    0000033c: 	movq	%r13, 0x30(%rsp)
    00000341: 	cmpq	$0xf, %r13
    00000345: 	ja	.Ltmp2777 # Offset: 837
    0000034b: 	cmpq	$0x1, %r13
    0000034f: 	jne	.Ltmp2778 # Offset: 847
    00000355: 	movzbl	(%r15), %eax
    00000359: 	movb	%al, 0x10(%r14)
.Ltmp2982:
    0000035d: 	movq	%r13, 0x8(%r14)
    00000361: 	movb	$0x0, (%rdi,%r13)
    00000366: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000036d: 	addq	$0x20, %rax
    00000371: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp3010:
    00000378: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000037f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000386: 	je	.Ltmp2779 # Offset: 902
.Ltmp3007:
    0000038c: 	movq	-0x20(%rax), %r13
    00000390: 	callq	clock@PLT # Offset: 912
    00000395: 	pxor	%xmm0, %xmm0
    00000399: 	movq	%rax, end_time(%rip)
    000003a0: 	movq	%r13, %rdi
    000003a3: 	subq	start_time(%rip), %rax
    000003aa: 	cvtsi2sd	%rax, %xmm0
    000003af: 	divsd	DATAat0x23450(%rip), %xmm0
    000003b7: 	callq	_Z13record_resultdPKc # Offset: 951
    000003bc: 	movq	0x90(%rsp), %rdi
    000003c4: 	cmpq	0x10(%rsp), %rdi
    000003c9: 	je	.Ltmp2780 # Offset: 969
    000003cb: 	movq	0xa0(%rsp), %rax
    000003d3: 	leaq	0x1(%rax), %rsi
    000003d7: 	callq	_ZdlPvm@PLT # Offset: 983
.Ltmp2780:
    000003dc: 	movq	0x18(%rsp), %rsi
    000003e1: 	leaq	DATAat0x23219(%rip), %rdx
    000003e8: 	movq	%r12, %rdi
    000003eb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1003
    000003f0: 	callq	clock@PLT # Offset: 1008
    000003f5: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r14
    000003fc: 	movq	%rax, start_time(%rip)
    00000403: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    0000040a: 	subq	$0x20, %rax
    0000040e: 	cmpq	%rax, %r14
    00000411: 	je	.Ltmp2781 # Offset: 1041
    00000417: 	leaq	0x10(%r14), %rdi
    0000041b: 	movq	0x98(%rsp), %r13
    00000423: 	movq	%rdi, (%r14)
    00000426: 	movq	0x90(%rsp), %r15
    0000042e: 	movq	%r15, %rax
    00000431: 	addq	%r13, %rax
    00000434: 	je	.Ltmp2782 # Offset: 1076
    00000436: 	testq	%r15, %r15
    00000439: 	je	.Ltmp2783 # Offset: 1081
.Ltmp2782:
    0000043f: 	movq	%r13, 0x30(%rsp)
    00000444: 	cmpq	$0xf, %r13
    00000448: 	ja	.Ltmp2784 # Offset: 1096
    0000044e: 	cmpq	$0x1, %r13
    00000452: 	jne	.Ltmp2785 # Offset: 1106
    00000458: 	movzbl	(%r15), %eax
    0000045c: 	movb	%al, 0x10(%r14)
.Ltmp3062:
    00000460: 	movq	%r13, 0x8(%r14)
    00000464: 	movb	$0x0, (%rdi,%r13)
    00000469: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000470: 	addq	$0x20, %rax
    00000474: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp3009:
    0000047b: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000482: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000489: 	je	.Ltmp2786 # Offset: 1161
.Ltmp3008:
    0000048f: 	movq	-0x20(%rax), %r13
    00000493: 	callq	clock@PLT # Offset: 1171
    00000498: 	pxor	%xmm0, %xmm0
    0000049c: 	movq	%rax, end_time(%rip)
    000004a3: 	movq	%r13, %rdi
    000004a6: 	subq	start_time(%rip), %rax
    000004ad: 	cvtsi2sd	%rax, %xmm0
    000004b2: 	divsd	DATAat0x23450(%rip), %xmm0
    000004ba: 	callq	_Z13record_resultdPKc # Offset: 1210
    000004bf: 	movq	0x90(%rsp), %rdi
    000004c7: 	cmpq	0x10(%rsp), %rdi
    000004cc: 	je	.Ltmp2787 # Offset: 1228
    000004ce: 	movq	0xa0(%rsp), %rax
    000004d6: 	leaq	0x1(%rax), %rsi
    000004da: 	callq	_ZdlPvm@PLT # Offset: 1242
.Ltmp2787:
    000004df: 	movq	0x18(%rsp), %rsi
    000004e4: 	leaq	DATAat0x233c2(%rip), %rdx
    000004eb: 	movq	%r12, %rdi
    000004ee: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1262
    000004f3: 	callq	clock@PLT # Offset: 1267
    000004f8: 	movq	%r12, %rsi
    000004fb: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000502: 	movq	%rax, start_time(%rip)
    00000509: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1289
    0000050e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000515: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000051c: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000523: 	je	.Ltmp2788 # Offset: 1315
.Ltmp3021:
    00000529: 	movq	-0x20(%rax), %r13
    0000052d: 	callq	clock@PLT # Offset: 1325
    00000532: 	pxor	%xmm0, %xmm0
    00000536: 	movq	%rax, end_time(%rip)
    0000053d: 	movq	%r13, %rdi
    00000540: 	subq	start_time(%rip), %rax
    00000547: 	cvtsi2sd	%rax, %xmm0
    0000054c: 	divsd	DATAat0x23450(%rip), %xmm0
    00000554: 	callq	_Z13record_resultdPKc # Offset: 1364
    00000559: 	movq	0x90(%rsp), %rdi
    00000561: 	cmpq	0x10(%rsp), %rdi
    00000566: 	je	.Ltmp2789 # Offset: 1382
    00000568: 	movq	0xa0(%rsp), %rax
    00000570: 	leaq	0x1(%rax), %rsi
    00000574: 	callq	_ZdlPvm@PLT # Offset: 1396
.Ltmp2789:
    00000579: 	movq	0x18(%rsp), %rsi
    0000057e: 	leaq	DATAat0x23279(%rip), %rdx
    00000585: 	movq	%r12, %rdi
    00000588: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1416
    0000058d: 	callq	clock@PLT # Offset: 1421
    00000592: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r14
    00000599: 	movq	%rax, start_time(%rip)
    000005a0: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000005a7: 	subq	$0x20, %rax
    000005ab: 	cmpq	%rax, %r14
    000005ae: 	je	.Ltmp2790 # Offset: 1454
    000005b4: 	leaq	0x10(%r14), %rdi
    000005b8: 	movq	0x98(%rsp), %r13
    000005c0: 	movq	%rdi, (%r14)
    000005c3: 	movq	0x90(%rsp), %r15
    000005cb: 	movq	%r15, %rax
    000005ce: 	addq	%r13, %rax
    000005d1: 	je	.Ltmp2791 # Offset: 1489
    000005d3: 	testq	%r15, %r15
    000005d6: 	je	.Ltmp2792 # Offset: 1494
.Ltmp2791:
    000005dc: 	movq	%r13, 0x30(%rsp)
    000005e1: 	cmpq	$0xf, %r13
    000005e5: 	ja	.Ltmp2793 # Offset: 1509
    000005eb: 	cmpq	$0x1, %r13
    000005ef: 	jne	.Ltmp2794 # Offset: 1519
    000005f5: 	movzbl	(%r15), %eax
    000005f9: 	movb	%al, 0x10(%r14)
.Ltmp3056:
    000005fd: 	movq	%r13, 0x8(%r14)
    00000601: 	movb	$0x0, (%rdi,%r13)
    00000606: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000060d: 	addq	$0x20, %rax
    00000611: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp3020:
    00000618: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    0000061f: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000626: 	je	.Ltmp2795 # Offset: 1574
.Ltmp3019:
    0000062c: 	movq	-0x20(%rax), %r13
    00000630: 	callq	clock@PLT # Offset: 1584
    00000635: 	pxor	%xmm0, %xmm0
    00000639: 	movq	%rax, end_time(%rip)
    00000640: 	movq	%r13, %rdi
    00000643: 	subq	start_time(%rip), %rax
    0000064a: 	cvtsi2sd	%rax, %xmm0
    0000064f: 	divsd	DATAat0x23450(%rip), %xmm0
    00000657: 	callq	_Z13record_resultdPKc # Offset: 1623
    0000065c: 	movq	0x90(%rsp), %rdi
    00000664: 	cmpq	0x10(%rsp), %rdi
    00000669: 	je	.Ltmp2796 # Offset: 1641
    0000066b: 	movq	0xa0(%rsp), %rax
    00000673: 	leaq	0x1(%rax), %rsi
    00000677: 	callq	_ZdlPvm@PLT # Offset: 1655
.Ltmp2796:
    0000067c: 	movq	0x18(%rsp), %rsi
    00000681: 	leaq	DATAat0x2322b(%rip), %rdx
    00000688: 	movq	%r12, %rdi
    0000068b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1675
    00000690: 	callq	clock@PLT # Offset: 1680
    00000695: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r14
    0000069c: 	movq	%rax, start_time(%rip)
    000006a3: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000006aa: 	subq	$0x20, %rax
    000006ae: 	cmpq	%rax, %r14
    000006b1: 	je	.Ltmp2797 # Offset: 1713
    000006b7: 	leaq	0x10(%r14), %rdi
    000006bb: 	movq	0x98(%rsp), %r13
    000006c3: 	movq	%rdi, (%r14)
    000006c6: 	movq	0x90(%rsp), %r15
    000006ce: 	movq	%r15, %rax
    000006d1: 	addq	%r13, %rax
    000006d4: 	je	.Ltmp2798 # Offset: 1748
    000006d6: 	testq	%r15, %r15
    000006d9: 	je	.Ltmp2799 # Offset: 1753
.Ltmp2798:
    000006df: 	movq	%r13, 0x30(%rsp)
    000006e4: 	cmpq	$0xf, %r13
    000006e8: 	ja	.Ltmp2800 # Offset: 1768
    000006ee: 	cmpq	$0x1, %r13
    000006f2: 	jne	.Ltmp2801 # Offset: 1778
    000006f8: 	movzbl	(%r15), %eax
    000006fc: 	movb	%al, 0x10(%r14)
.Ltmp3049:
    00000700: 	movq	%r13, 0x8(%r14)
    00000704: 	movb	$0x0, (%rdi,%r13)
    00000709: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000710: 	addq	$0x20, %rax
    00000714: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp3018:
    0000071b: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000722: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000729: 	je	.Ltmp2802 # Offset: 1833
.Ltmp3017:
    0000072f: 	movq	-0x20(%rax), %r13
    00000733: 	callq	clock@PLT # Offset: 1843
    00000738: 	pxor	%xmm0, %xmm0
    0000073c: 	movq	%rax, end_time(%rip)
    00000743: 	movq	%r13, %rdi
    00000746: 	subq	start_time(%rip), %rax
    0000074d: 	cvtsi2sd	%rax, %xmm0
    00000752: 	divsd	DATAat0x23450(%rip), %xmm0
    0000075a: 	callq	_Z13record_resultdPKc # Offset: 1882
    0000075f: 	movq	0x90(%rsp), %rdi
    00000767: 	cmpq	0x10(%rsp), %rdi
    0000076c: 	je	.Ltmp2803 # Offset: 1900
    0000076e: 	movq	0xa0(%rsp), %rax
    00000776: 	leaq	0x1(%rax), %rsi
    0000077a: 	callq	_ZdlPvm@PLT # Offset: 1914
.Ltmp2803:
    0000077f: 	movq	0x18(%rsp), %rsi
    00000784: 	leaq	DATAat0x2323f(%rip), %rdx
    0000078b: 	movq	%r12, %rdi
    0000078e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1934
    00000793: 	callq	clock@PLT # Offset: 1939
    00000798: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r14
    0000079f: 	movq	%rax, start_time(%rip)
    000007a6: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000007ad: 	subq	$0x20, %rax
    000007b1: 	cmpq	%rax, %r14
    000007b4: 	je	.Ltmp2804 # Offset: 1972
    000007ba: 	leaq	0x10(%r14), %rdi
    000007be: 	movq	0x98(%rsp), %r13
    000007c6: 	movq	%rdi, (%r14)
    000007c9: 	movq	0x90(%rsp), %r15
    000007d1: 	movq	%r15, %rax
    000007d4: 	addq	%r13, %rax
    000007d7: 	je	.Ltmp2805 # Offset: 2007
    000007d9: 	testq	%r15, %r15
    000007dc: 	je	.Ltmp2806 # Offset: 2012
.Ltmp2805:
    000007e2: 	movq	%r13, 0x30(%rsp)
    000007e7: 	cmpq	$0xf, %r13
    000007eb: 	ja	.Ltmp2807 # Offset: 2027
    000007f1: 	cmpq	$0x1, %r13
    000007f5: 	jne	.Ltmp2808 # Offset: 2037
    000007fb: 	movzbl	(%r15), %eax
    000007ff: 	movb	%al, 0x10(%r14)
.Ltmp3058:
    00000803: 	movq	%r13, 0x8(%r14)
    00000807: 	movb	$0x0, (%rdi,%r13)
    0000080c: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000813: 	addq	$0x20, %rax
    00000817: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp3016:
    0000081e: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000825: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000082c: 	je	.Ltmp2809 # Offset: 2092
.Ltmp3015:
    00000832: 	movq	-0x20(%rax), %r13
    00000836: 	callq	clock@PLT # Offset: 2102
    0000083b: 	pxor	%xmm0, %xmm0
    0000083f: 	movq	%rax, end_time(%rip)
    00000846: 	movq	%r13, %rdi
    00000849: 	subq	start_time(%rip), %rax
    00000850: 	cvtsi2sd	%rax, %xmm0
    00000855: 	divsd	DATAat0x23450(%rip), %xmm0
    0000085d: 	callq	_Z13record_resultdPKc # Offset: 2141
    00000862: 	movq	0x90(%rsp), %rdi
    0000086a: 	cmpq	0x10(%rsp), %rdi
    0000086f: 	je	.Ltmp2810 # Offset: 2159
    00000871: 	movq	0xa0(%rsp), %rax
    00000879: 	leaq	0x1(%rax), %rsi
    0000087d: 	callq	_ZdlPvm@PLT # Offset: 2173
.Ltmp2810:
    00000882: 	movq	0x18(%rsp), %rsi
    00000887: 	leaq	DATAat0x23257(%rip), %rdx
    0000088e: 	movq	%r12, %rdi
    00000891: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2193
    00000896: 	callq	clock@PLT # Offset: 2198
    0000089b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r14
    000008a2: 	movq	%rax, start_time(%rip)
    000008a9: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000008b0: 	subq	$0x20, %rax
    000008b4: 	cmpq	%rax, %r14
    000008b7: 	je	.Ltmp2811 # Offset: 2231
    000008bd: 	leaq	0x10(%r14), %rdi
    000008c1: 	movq	0x98(%rsp), %r13
    000008c9: 	movq	%rdi, (%r14)
    000008cc: 	movq	0x90(%rsp), %r15
    000008d4: 	movq	%r15, %rax
    000008d7: 	addq	%r13, %rax
    000008da: 	je	.Ltmp2812 # Offset: 2266
    000008dc: 	testq	%r15, %r15
    000008df: 	je	.Ltmp2813 # Offset: 2271
.Ltmp2812:
    000008e5: 	movq	%r13, 0x30(%rsp)
    000008ea: 	cmpq	$0xf, %r13
    000008ee: 	ja	.Ltmp2814 # Offset: 2286
    000008f4: 	cmpq	$0x1, %r13
    000008f8: 	jne	.Ltmp2815 # Offset: 2296
    000008fe: 	movzbl	(%r15), %eax
    00000902: 	movb	%al, 0x10(%r14)
.Ltmp3053:
    00000906: 	movq	%r13, 0x8(%r14)
    0000090a: 	movb	$0x0, (%rdi,%r13)
    0000090f: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000916: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000091d: 	addq	$0x20, %rax
    00000921: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000928: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    0000092f: 	je	.Ltmp2816 # Offset: 2351
.Ltmp3014:
    00000935: 	movq	-0x20(%rax), %r13
    00000939: 	callq	clock@PLT # Offset: 2361
    0000093e: 	pxor	%xmm0, %xmm0
    00000942: 	movq	%rax, end_time(%rip)
    00000949: 	movq	%r13, %rdi
    0000094c: 	subq	start_time(%rip), %rax
    00000953: 	cvtsi2sd	%rax, %xmm0
    00000958: 	divsd	DATAat0x23450(%rip), %xmm0
    00000960: 	callq	_Z13record_resultdPKc # Offset: 2400
    00000965: 	movq	0x90(%rsp), %rdi
    0000096d: 	cmpq	0x10(%rsp), %rdi
    00000972: 	je	.Ltmp2817 # Offset: 2418
    00000974: 	movq	0xa0(%rsp), %rax
    0000097c: 	leaq	0x1(%rax), %rsi
    00000980: 	callq	_ZdlPvm@PLT # Offset: 2432
.Ltmp2817:
    00000985: 	movq	0x18(%rsp), %rsi
    0000098a: 	leaq	DATAat0x2326c(%rip), %rdx
    00000991: 	movq	%r12, %rdi
    00000994: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2452
    00000999: 	callq	clock@PLT # Offset: 2457
    0000099e: 	movq	%r12, %rsi
    000009a1: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000009a8: 	movq	%rax, start_time(%rip)
    000009af: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2479
    000009b4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000009bb: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000009c2: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000009c9: 	je	.Ltmp2818 # Offset: 2505
.Ltmp3037:
    000009cf: 	movq	-0x20(%rax), %r13
    000009d3: 	callq	clock@PLT # Offset: 2515
    000009d8: 	pxor	%xmm0, %xmm0
    000009dc: 	movq	%rax, end_time(%rip)
    000009e3: 	movq	%r13, %rdi
    000009e6: 	subq	start_time(%rip), %rax
    000009ed: 	cvtsi2sd	%rax, %xmm0
    000009f2: 	divsd	DATAat0x23450(%rip), %xmm0
    000009fa: 	callq	_Z13record_resultdPKc # Offset: 2554
    000009ff: 	movq	0x90(%rsp), %rdi
    00000a07: 	cmpq	0x10(%rsp), %rdi
    00000a0c: 	je	.Ltmp2819 # Offset: 2572
    00000a0e: 	movq	0xa0(%rsp), %rax
    00000a16: 	leaq	0x1(%rax), %rsi
    00000a1a: 	callq	_ZdlPvm@PLT # Offset: 2586
.Ltmp2819:
    00000a1f: 	movq	0x18(%rsp), %rsi
    00000a24: 	leaq	DATAat0x2328a(%rip), %rdx
    00000a2b: 	movq	%r12, %rdi
    00000a2e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2606
    00000a33: 	callq	clock@PLT # Offset: 2611
    00000a38: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r14
    00000a3f: 	movq	%rax, start_time(%rip)
    00000a46: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000a4d: 	subq	$0x20, %rax
    00000a51: 	cmpq	%rax, %r14
    00000a54: 	je	.Ltmp2820 # Offset: 2644
    00000a5a: 	leaq	0x10(%r14), %rdi
    00000a5e: 	movq	0x98(%rsp), %r13
    00000a66: 	movq	%rdi, (%r14)
    00000a69: 	movq	0x90(%rsp), %r15
    00000a71: 	movq	%r15, %rax
    00000a74: 	addq	%r13, %rax
    00000a77: 	je	.Ltmp2821 # Offset: 2679
    00000a79: 	testq	%r15, %r15
    00000a7c: 	je	.Ltmp2822 # Offset: 2684
.Ltmp2821:
    00000a82: 	movq	%r13, 0x30(%rsp)
    00000a87: 	cmpq	$0xf, %r13
    00000a8b: 	ja	.Ltmp2823 # Offset: 2699
    00000a91: 	cmpq	$0x1, %r13
    00000a95: 	jne	.Ltmp2824 # Offset: 2709
    00000a9b: 	movzbl	(%r15), %eax
    00000a9f: 	movb	%al, 0x10(%r14)
.Ltmp3045:
    00000aa3: 	movq	%r13, 0x8(%r14)
    00000aa7: 	movb	$0x0, (%rdi,%r13)
    00000aac: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000ab3: 	addq	$0x20, %rax
    00000ab7: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp3036:
    00000abe: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000ac5: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000acc: 	je	.Ltmp2825 # Offset: 2764
.Ltmp3035:
    00000ad2: 	movq	-0x20(%rax), %r13
    00000ad6: 	callq	clock@PLT # Offset: 2774
    00000adb: 	pxor	%xmm0, %xmm0
    00000adf: 	movq	%rax, end_time(%rip)
    00000ae6: 	movq	%r13, %rdi
    00000ae9: 	subq	start_time(%rip), %rax
    00000af0: 	cvtsi2sd	%rax, %xmm0
    00000af5: 	divsd	DATAat0x23450(%rip), %xmm0
    00000afd: 	callq	_Z13record_resultdPKc # Offset: 2813
    00000b02: 	movq	0x90(%rsp), %rdi
    00000b0a: 	cmpq	0x10(%rsp), %rdi
    00000b0f: 	je	.Ltmp2826 # Offset: 2831
    00000b11: 	movq	0xa0(%rsp), %rax
    00000b19: 	leaq	0x1(%rax), %rsi
    00000b1d: 	callq	_ZdlPvm@PLT # Offset: 2845
.Ltmp2826:
    00000b22: 	movq	0x18(%rsp), %rsi
    00000b27: 	leaq	DATAat0x233d1(%rip), %rdx
    00000b2e: 	movq	%r12, %rdi
    00000b31: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2865
    00000b36: 	callq	clock@PLT # Offset: 2870
    00000b3b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r14
    00000b42: 	movq	%rax, start_time(%rip)
    00000b49: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00000b50: 	subq	$0x20, %rax
    00000b54: 	cmpq	%rax, %r14
    00000b57: 	je	.Ltmp2827 # Offset: 2903
    00000b5d: 	leaq	0x10(%r14), %rdi
    00000b61: 	movq	0x98(%rsp), %r13
    00000b69: 	movq	%rdi, (%r14)
    00000b6c: 	movq	0x90(%rsp), %r15
    00000b74: 	movq	%r15, %rax
    00000b77: 	addq	%r13, %rax
    00000b7a: 	je	.Ltmp2828 # Offset: 2938
    00000b7c: 	testq	%r15, %r15
    00000b7f: 	je	.Ltmp2829 # Offset: 2943
.Ltmp2828:
    00000b85: 	movq	%r13, 0x30(%rsp)
    00000b8a: 	cmpq	$0xf, %r13
    00000b8e: 	ja	.Ltmp2830 # Offset: 2958
    00000b94: 	cmpq	$0x1, %r13
    00000b98: 	jne	.Ltmp2831 # Offset: 2968
    00000b9e: 	movzbl	(%r15), %eax
    00000ba2: 	movb	%al, 0x10(%r14)
.Ltmp3051:
    00000ba6: 	movq	%r13, 0x8(%r14)
    00000baa: 	movb	$0x0, (%rdi,%r13)
    00000baf: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000bb6: 	addq	$0x20, %rax
    00000bba: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp3034:
    00000bc1: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00000bc8: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000bcf: 	je	.Ltmp2832 # Offset: 3023
.Ltmp3005:
    00000bd5: 	movq	-0x20(%rax), %r13
    00000bd9: 	callq	clock@PLT # Offset: 3033
    00000bde: 	pxor	%xmm0, %xmm0
    00000be2: 	movq	%rax, end_time(%rip)
    00000be9: 	movq	%r13, %rdi
    00000bec: 	subq	start_time(%rip), %rax
    00000bf3: 	cvtsi2sd	%rax, %xmm0
    00000bf8: 	divsd	DATAat0x23450(%rip), %xmm0
    00000c00: 	callq	_Z13record_resultdPKc # Offset: 3072
    00000c05: 	movq	0x90(%rsp), %rdi
    00000c0d: 	cmpq	0x10(%rsp), %rdi
    00000c12: 	je	.Ltmp2833 # Offset: 3090
    00000c14: 	movq	0xa0(%rsp), %rax
    00000c1c: 	leaq	0x1(%rax), %rsi
    00000c20: 	callq	_ZdlPvm@PLT # Offset: 3104
.Ltmp2833:
    00000c25: 	movq	0x18(%rsp), %rsi
    00000c2a: 	leaq	DATAat0x233e0(%rip), %rdx
    00000c31: 	movq	%r12, %rdi
    00000c34: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3124
    00000c39: 	callq	clock@PLT # Offset: 3129
    00000c3e: 	movq	%r12, %rsi
    00000c41: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000c48: 	movq	%rax, start_time(%rip)
    00000c4f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3151
    00000c54: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000c5b: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000c62: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000c69: 	je	.Ltmp2834 # Offset: 3177
.Ltmp3004:
    00000c6f: 	movq	-0x20(%rax), %r13
    00000c73: 	callq	clock@PLT # Offset: 3187
    00000c78: 	pxor	%xmm0, %xmm0
    00000c7c: 	movq	%rax, end_time(%rip)
    00000c83: 	movq	%r13, %rdi
    00000c86: 	subq	start_time(%rip), %rax
    00000c8d: 	cvtsi2sd	%rax, %xmm0
    00000c92: 	divsd	DATAat0x23450(%rip), %xmm0
    00000c9a: 	callq	_Z13record_resultdPKc # Offset: 3226
    00000c9f: 	movq	0x90(%rsp), %rdi
    00000ca7: 	cmpq	0x10(%rsp), %rdi
    00000cac: 	je	.Ltmp2835 # Offset: 3244
    00000cae: 	movq	0xa0(%rsp), %rax
    00000cb6: 	leaq	0x1(%rax), %rsi
    00000cba: 	callq	_ZdlPvm@PLT # Offset: 3258
.Ltmp2835:
    00000cbf: 	movq	0x18(%rsp), %rsi
    00000cc4: 	leaq	DATAat0x233ee(%rip), %rdx
    00000ccb: 	movq	%r12, %rdi
    00000cce: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3278
    00000cd3: 	callq	clock@PLT # Offset: 3283
    00000cd8: 	movq	%r12, %rsi
    00000cdb: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000ce2: 	movq	%rax, start_time(%rip)
    00000ce9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3305
    00000cee: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000cf5: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000cfc: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000d03: 	je	.Ltmp2836 # Offset: 3331
.Ltmp3003:
    00000d09: 	movq	-0x20(%rax), %r13
    00000d0d: 	callq	clock@PLT # Offset: 3341
    00000d12: 	pxor	%xmm0, %xmm0
    00000d16: 	movq	%rax, end_time(%rip)
    00000d1d: 	movq	%r13, %rdi
    00000d20: 	subq	start_time(%rip), %rax
    00000d27: 	cvtsi2sd	%rax, %xmm0
    00000d2c: 	divsd	DATAat0x23450(%rip), %xmm0
    00000d34: 	callq	_Z13record_resultdPKc # Offset: 3380
    00000d39: 	movq	0x90(%rsp), %rdi
    00000d41: 	cmpq	0x10(%rsp), %rdi
    00000d46: 	je	.Ltmp2837 # Offset: 3398
    00000d48: 	movq	0xa0(%rsp), %rax
    00000d50: 	leaq	0x1(%rax), %rsi
    00000d54: 	callq	_ZdlPvm@PLT # Offset: 3412
.Ltmp2837:
    00000d59: 	movq	0x18(%rsp), %r15
    00000d5e: 	leaq	0x70(%rsp), %rdi
    00000d63: 	leaq	DATAat0x232a5(%rip), %rdx
    00000d6a: 	movq	%r15, %rsi
    00000d6d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3437
    00000d72: 	movl	iterations(%rip), %edx
    00000d78: 	movq	0x70(%rsp), %rdi
    00000d7d: 	xorl	%r8d, %r8d
    00000d80: 	xorl	%ecx, %ecx
    00000d82: 	movl	$0x1f40, %esi
    00000d87: 	callq	_Z9summarizePKciiii # Offset: 3463
    00000d8c: 	movslq	base_iterations(%rip), %rax
    00000d93: 	movq	%r15, %rsi
    00000d96: 	movq	%r12, %rdi
    00000d99: 	movq	%rax, %rdx
    00000d9c: 	imulq	$0x66666667, %rax, %rax
    00000da3: 	sarl	$0x1f, %edx
    00000da6: 	sarq	$0x22, %rax
    00000daa: 	subl	%edx, %eax
    00000dac: 	leaq	DATAat0x232be(%rip), %rdx
    00000db3: 	movl	%eax, iterations(%rip)
    00000db9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3513
    00000dbe: 	callq	clock@PLT # Offset: 3518
    00000dc3: 	movl	iterations(%rip), %ecx
    00000dc9: 	movq	%rax, start_time(%rip)
    00000dd0: 	testl	%ecx, %ecx
    00000dd2: 	jle	.Ltmp2838 # Offset: 3538
    00000dd8: 	movdqa	DATAat0x238b0(%rip), %xmm4
    00000de0: 	xorl	%r13d, %r13d
    00000de3: 	movabsq	$-0x8000000000000000, %r14
    00000ded: 	leaq	DATAat0x231d2(%rip), %r15
    00000df4: 	movaps	%xmm4, (%rsp)
    00000df8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2842:
    00000e00: 	movq	%rbp, %rax
    00000e03: 	pxor	%xmm0, %xmm0
    00000e07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2839:
    00000e10: 	movdqa	(%rsp), %xmm1
    00000e15: 	paddq	(%rax), %xmm1
    00000e19: 	addq	$0x10, %rax
    00000e1d: 	paddq	%xmm1, %xmm0
    00000e21: 	cmpq	%rax, %rbx
    00000e24: 	jne	.Ltmp2839 # Offset: 3620
    00000e26: 	movsd	init_value(%rip), %xmm1
    00000e2e: 	comisd	DATAat0x234a8(%rip), %xmm1
    00000e36: 	jae	.Ltmp2840 # Offset: 3638
    00000e3c: 	cvttsd2si	%xmm1, %rax
.Ltmp2998:
    00000e41: 	addq	$0xa, %rax
    00000e45: 	movdqa	%xmm0, %xmm1
    00000e49: 	imulq	$0x1f40, %rax, %rdx
    00000e50: 	psrldq	$0x8, %xmm1
    00000e55: 	paddq	%xmm1, %xmm0
    00000e59: 	movq	%xmm0, %rax
    00000e5e: 	cmpq	%rax, %rdx
    00000e61: 	je	.Ltmp2841 # Offset: 3681
    00000e63: 	movl	current_test(%rip), %edx
    00000e69: 	movq	%r15, %rsi
    00000e6c: 	movl	$0x1, %edi
    00000e71: 	xorl	%eax, %eax
    00000e73: 	callq	__printf_chk@PLT # Offset: 3699
    00000e78: 	movl	iterations(%rip), %ecx
.Ltmp2841:
    00000e7e: 	addl	$0x1, %r13d
    00000e82: 	cmpl	%ecx, %r13d
    00000e85: 	jl	.Ltmp2842 # Offset: 3717
.Ltmp2838:
    00000e8b: 	movq	%r12, %rsi
    00000e8e: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000e95: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3733
    00000e9a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000ea1: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000ea8: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000eaf: 	je	.Ltmp2843 # Offset: 3759
.Ltmp3000:
    00000eb5: 	movq	-0x20(%rax), %r13
    00000eb9: 	callq	clock@PLT # Offset: 3769
    00000ebe: 	pxor	%xmm0, %xmm0
    00000ec2: 	movq	%rax, end_time(%rip)
    00000ec9: 	movq	%r13, %rdi
    00000ecc: 	subq	start_time(%rip), %rax
    00000ed3: 	cvtsi2sd	%rax, %xmm0
    00000ed8: 	divsd	DATAat0x23450(%rip), %xmm0
    00000ee0: 	callq	_Z13record_resultdPKc # Offset: 3808
    00000ee5: 	movq	0x90(%rsp), %rdi
    00000eed: 	cmpq	0x10(%rsp), %rdi
    00000ef2: 	je	.Ltmp2844 # Offset: 3826
    00000ef4: 	movq	0xa0(%rsp), %rax
    00000efc: 	leaq	0x1(%rax), %rsi
    00000f00: 	callq	_ZdlPvm@PLT # Offset: 3840
.Ltmp2844:
    00000f05: 	movq	0x18(%rsp), %rsi
    00000f0a: 	leaq	DATAat0x232cc(%rip), %rdx
    00000f11: 	movq	%r12, %rdi
    00000f14: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3860
    00000f19: 	callq	clock@PLT # Offset: 3865
    00000f1e: 	movl	iterations(%rip), %ecx
    00000f24: 	movq	%rax, start_time(%rip)
    00000f2b: 	testl	%ecx, %ecx
    00000f2d: 	jle	.Ltmp2845 # Offset: 3885
    00000f33: 	movdqa	DATAat0x238b0(%rip), %xmm5
    00000f3b: 	xorl	%r13d, %r13d
    00000f3e: 	movabsq	$-0x8000000000000000, %r14
    00000f48: 	leaq	DATAat0x231d2(%rip), %r15
    00000f4f: 	movaps	%xmm5, (%rsp)
    00000f53: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2849:
    00000f58: 	movq	%rbp, %rax
    00000f5b: 	pxor	%xmm0, %xmm0
    00000f5f: 	nop # Size: 1
.Ltmp2846:
    00000f60: 	movdqa	(%rsp), %xmm1
    00000f65: 	paddq	(%rax), %xmm1
    00000f69: 	addq	$0x10, %rax
    00000f6d: 	paddq	%xmm1, %xmm0
    00000f71: 	cmpq	%rbx, %rax
    00000f74: 	jne	.Ltmp2846 # Offset: 3956
    00000f76: 	movsd	init_value(%rip), %xmm1
    00000f7e: 	comisd	DATAat0x234a8(%rip), %xmm1
    00000f86: 	jae	.Ltmp2847 # Offset: 3974
    00000f8c: 	cvttsd2si	%xmm1, %rax
.Ltmp2997:
    00000f91: 	addq	$0xa, %rax
    00000f95: 	movdqa	%xmm0, %xmm1
    00000f99: 	imulq	$0x1f40, %rax, %rdx
    00000fa0: 	psrldq	$0x8, %xmm1
    00000fa5: 	paddq	%xmm1, %xmm0
    00000fa9: 	movq	%xmm0, %rax
    00000fae: 	cmpq	%rax, %rdx
    00000fb1: 	je	.Ltmp2848 # Offset: 4017
    00000fb3: 	movl	current_test(%rip), %edx
    00000fb9: 	movq	%r15, %rsi
    00000fbc: 	movl	$0x1, %edi
    00000fc1: 	xorl	%eax, %eax
    00000fc3: 	callq	__printf_chk@PLT # Offset: 4035
    00000fc8: 	movl	iterations(%rip), %ecx
.Ltmp2848:
    00000fce: 	addl	$0x1, %r13d
    00000fd2: 	cmpl	%ecx, %r13d
    00000fd5: 	jl	.Ltmp2849 # Offset: 4053
.Ltmp2845:
    00000fdb: 	movq	%r12, %rsi
    00000fde: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00000fe5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4069
    00000fea: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00000ff1: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00000ff8: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00000fff: 	je	.Ltmp2850 # Offset: 4095
.Ltmp3001:
    00001005: 	movq	-0x20(%rax), %r13
    00001009: 	callq	clock@PLT # Offset: 4105
    0000100e: 	pxor	%xmm0, %xmm0
    00001012: 	movq	%rax, end_time(%rip)
    00001019: 	movq	%r13, %rdi
    0000101c: 	subq	start_time(%rip), %rax
    00001023: 	cvtsi2sd	%rax, %xmm0
    00001028: 	divsd	DATAat0x23450(%rip), %xmm0
    00001030: 	callq	_Z13record_resultdPKc # Offset: 4144
    00001035: 	movq	0x90(%rsp), %rdi
    0000103d: 	cmpq	0x10(%rsp), %rdi
    00001042: 	je	.Ltmp2851 # Offset: 4162
    00001044: 	movq	0xa0(%rsp), %rax
    0000104c: 	leaq	0x1(%rax), %rsi
    00001050: 	callq	_ZdlPvm@PLT # Offset: 4176
.Ltmp2851:
    00001055: 	movq	0x18(%rsp), %rsi
    0000105a: 	leaq	DATAat0x232e4(%rip), %rdx
    00001061: 	movq	%r12, %rdi
    00001064: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4196
    00001069: 	callq	clock@PLT # Offset: 4201
    0000106e: 	movl	iterations(%rip), %ecx
    00001074: 	movq	%rax, start_time(%rip)
    0000107b: 	testl	%ecx, %ecx
    0000107d: 	jle	.Ltmp2852 # Offset: 4221
    00001083: 	movdqa	DATAat0x238c0(%rip), %xmm6
    0000108b: 	xorl	%r13d, %r13d
    0000108e: 	movabsq	$-0x8000000000000000, %r14
    00001098: 	leaq	DATAat0x231d2(%rip), %r15
    0000109f: 	movaps	%xmm6, (%rsp)
    000010a3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2856:
    000010a8: 	movq	%rbp, %rax
    000010ab: 	pxor	%xmm0, %xmm0
    000010af: 	nop # Size: 1
.Ltmp2853:
    000010b0: 	movdqa	(%rsp), %xmm1
    000010b5: 	paddq	(%rax), %xmm1
    000010b9: 	addq	$0x10, %rax
    000010bd: 	paddq	%xmm1, %xmm0
    000010c1: 	cmpq	%rbx, %rax
    000010c4: 	jne	.Ltmp2853 # Offset: 4292
    000010c6: 	movsd	init_value(%rip), %xmm1
    000010ce: 	comisd	DATAat0x234a8(%rip), %xmm1
    000010d6: 	jae	.Ltmp2854 # Offset: 4310
    000010dc: 	cvttsd2si	%xmm1, %rax
.Ltmp2995:
    000010e1: 	subq	$0xa, %rax
    000010e5: 	movdqa	%xmm0, %xmm1
    000010e9: 	imulq	$0x1f40, %rax, %rdx
    000010f0: 	psrldq	$0x8, %xmm1
    000010f5: 	paddq	%xmm1, %xmm0
    000010f9: 	movq	%xmm0, %rax
    000010fe: 	cmpq	%rax, %rdx
    00001101: 	je	.Ltmp2855 # Offset: 4353
    00001103: 	movl	current_test(%rip), %edx
    00001109: 	movq	%r15, %rsi
    0000110c: 	movl	$0x1, %edi
    00001111: 	xorl	%eax, %eax
    00001113: 	callq	__printf_chk@PLT # Offset: 4371
    00001118: 	movl	iterations(%rip), %ecx
.Ltmp2855:
    0000111e: 	addl	$0x1, %r13d
    00001122: 	cmpl	%ecx, %r13d
    00001125: 	jl	.Ltmp2856 # Offset: 4389
.Ltmp2852:
    0000112b: 	movq	%r12, %rsi
    0000112e: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00001135: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4405
    0000113a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001141: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001148: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000114f: 	je	.Ltmp2857 # Offset: 4431
.Ltmp3002:
    00001155: 	movq	-0x20(%rax), %r13
    00001159: 	callq	clock@PLT # Offset: 4441
    0000115e: 	pxor	%xmm0, %xmm0
    00001162: 	movq	%rax, end_time(%rip)
    00001169: 	movq	%r13, %rdi
    0000116c: 	subq	start_time(%rip), %rax
    00001173: 	cvtsi2sd	%rax, %xmm0
    00001178: 	divsd	DATAat0x23450(%rip), %xmm0
    00001180: 	callq	_Z13record_resultdPKc # Offset: 4480
    00001185: 	movq	0x90(%rsp), %rdi
    0000118d: 	cmpq	0x10(%rsp), %rdi
    00001192: 	je	.Ltmp2858 # Offset: 4498
    00001194: 	movq	0xa0(%rsp), %rax
    0000119c: 	leaq	0x1(%rax), %rsi
    000011a0: 	callq	_ZdlPvm@PLT # Offset: 4512
.Ltmp2858:
    000011a5: 	movq	0x18(%rsp), %rsi
    000011aa: 	leaq	DATAat0x232f7(%rip), %rdx
    000011b1: 	movq	%r12, %rdi
    000011b4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4532
    000011b9: 	callq	clock@PLT # Offset: 4537
    000011be: 	movl	iterations(%rip), %ecx
    000011c4: 	movq	%rax, start_time(%rip)
    000011cb: 	testl	%ecx, %ecx
    000011cd: 	jle	.Ltmp2859 # Offset: 4557
    000011d3: 	movdqa	DATAat0x238c0(%rip), %xmm7
    000011db: 	xorl	%r13d, %r13d
    000011de: 	movabsq	$-0x8000000000000000, %r14
    000011e8: 	leaq	DATAat0x231d2(%rip), %r15
    000011ef: 	movaps	%xmm7, (%rsp)
    000011f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2863:
    000011f8: 	movq	%rbp, %rax
    000011fb: 	pxor	%xmm0, %xmm0
    000011ff: 	nop # Size: 1
.Ltmp2860:
    00001200: 	movdqa	(%rsp), %xmm1
    00001205: 	paddq	(%rax), %xmm1
    00001209: 	addq	$0x10, %rax
    0000120d: 	paddq	%xmm1, %xmm0
    00001211: 	cmpq	%rbx, %rax
    00001214: 	jne	.Ltmp2860 # Offset: 4628
    00001216: 	movsd	init_value(%rip), %xmm1
    0000121e: 	comisd	DATAat0x234a8(%rip), %xmm1
    00001226: 	jae	.Ltmp2861 # Offset: 4646
    0000122c: 	cvttsd2si	%xmm1, %rax
.Ltmp2996:
    00001231: 	subq	$0xa, %rax
    00001235: 	movdqa	%xmm0, %xmm1
    00001239: 	imulq	$0x1f40, %rax, %rdx
    00001240: 	psrldq	$0x8, %xmm1
    00001245: 	paddq	%xmm1, %xmm0
    00001249: 	movq	%xmm0, %rax
    0000124e: 	cmpq	%rax, %rdx
    00001251: 	je	.Ltmp2862 # Offset: 4689
    00001253: 	movl	current_test(%rip), %edx
    00001259: 	movq	%r15, %rsi
    0000125c: 	movl	$0x1, %edi
    00001261: 	xorl	%eax, %eax
    00001263: 	callq	__printf_chk@PLT # Offset: 4707
    00001268: 	movl	iterations(%rip), %ecx
.Ltmp2862:
    0000126e: 	addl	$0x1, %r13d
    00001272: 	cmpl	%ecx, %r13d
    00001275: 	jl	.Ltmp2863 # Offset: 4725
.Ltmp2859:
    0000127b: 	movq	%r12, %rsi
    0000127e: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00001285: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4741
    0000128a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001291: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001298: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000129f: 	je	.Ltmp2864 # Offset: 4767
.Ltmp3027:
    000012a5: 	movq	-0x20(%rax), %r13
    000012a9: 	callq	clock@PLT # Offset: 4777
    000012ae: 	pxor	%xmm0, %xmm0
    000012b2: 	movq	%rax, end_time(%rip)
    000012b9: 	movq	%r13, %rdi
    000012bc: 	subq	start_time(%rip), %rax
    000012c3: 	cvtsi2sd	%rax, %xmm0
    000012c8: 	divsd	DATAat0x23450(%rip), %xmm0
    000012d0: 	callq	_Z13record_resultdPKc # Offset: 4816
    000012d5: 	movq	0x90(%rsp), %rdi
    000012dd: 	cmpq	0x10(%rsp), %rdi
    000012e2: 	je	.Ltmp2865 # Offset: 4834
    000012e4: 	movq	0xa0(%rsp), %rax
    000012ec: 	leaq	0x1(%rax), %rsi
    000012f0: 	callq	_ZdlPvm@PLT # Offset: 4848
.Ltmp2865:
    000012f5: 	movq	0x18(%rsp), %rsi
    000012fa: 	leaq	DATAat0x23314(%rip), %rdx
    00001301: 	movq	%r12, %rdi
    00001304: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4868
    00001309: 	callq	clock@PLT # Offset: 4873
    0000130e: 	movl	iterations(%rip), %edi
    00001314: 	xorl	%r13d, %r13d
    00001317: 	movabsq	$-0x8000000000000000, %r15
    00001321: 	movq	%rax, start_time(%rip)
    00001328: 	leaq	DATAat0x231d2(%rip), %r14
    0000132f: 	testl	%edi, %edi
    00001331: 	jle	.Ltmp2866 # Offset: 4913
    00001333: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2870:
    00001338: 	movq	%rbp, %rax
    0000133b: 	xorl	%esi, %esi
    0000133d: 	nopl	(%rax) # Size: 3
.Ltmp2867:
    00001340: 	movq	(%rax), %rcx
    00001343: 	addq	$0x8, %rax
    00001347: 	movq	%rcx, %rdx
    0000134a: 	shlq	$0x4, %rdx
    0000134e: 	subq	%rcx, %rdx
    00001351: 	leaq	(%rsi,%rdx,8), %rsi
    00001355: 	cmpq	%rbx, %rax
    00001358: 	jne	.Ltmp2867 # Offset: 4952
    0000135a: 	movsd	init_value(%rip), %xmm0
    00001362: 	comisd	DATAat0x234a8(%rip), %xmm0
    0000136a: 	jae	.Ltmp2868 # Offset: 4970
    00001370: 	cvttsd2si	%xmm0, %rax
.Ltmp2994:
    00001375: 	imulq	$0xea600, %rax, %rax
    0000137c: 	cmpq	%rax, %rsi
    0000137f: 	je	.Ltmp2869 # Offset: 4991
    00001381: 	movl	current_test(%rip), %edx
    00001387: 	movq	%r14, %rsi
    0000138a: 	movl	$0x1, %edi
    0000138f: 	xorl	%eax, %eax
    00001391: 	callq	__printf_chk@PLT # Offset: 5009
    00001396: 	movl	iterations(%rip), %edi
.Ltmp2869:
    0000139c: 	addl	$0x1, %r13d
    000013a0: 	cmpl	%edi, %r13d
    000013a3: 	jl	.Ltmp2870 # Offset: 5027
.Ltmp2866:
    000013a5: 	movq	%r12, %rsi
    000013a8: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000013af: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5039
    000013b4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000013bb: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000013c2: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000013c9: 	je	.Ltmp2871 # Offset: 5065
.Ltmp3026:
    000013cf: 	movq	-0x20(%rax), %r13
    000013d3: 	callq	clock@PLT # Offset: 5075
    000013d8: 	pxor	%xmm0, %xmm0
    000013dc: 	movq	%rax, end_time(%rip)
    000013e3: 	movq	%r13, %rdi
    000013e6: 	subq	start_time(%rip), %rax
    000013ed: 	cvtsi2sd	%rax, %xmm0
    000013f2: 	divsd	DATAat0x23450(%rip), %xmm0
    000013fa: 	callq	_Z13record_resultdPKc # Offset: 5114
    000013ff: 	movq	0x90(%rsp), %rdi
    00001407: 	cmpq	0x10(%rsp), %rdi
    0000140c: 	je	.Ltmp2872 # Offset: 5132
    0000140e: 	movq	0xa0(%rsp), %rax
    00001416: 	leaq	0x1(%rax), %rsi
    0000141a: 	callq	_ZdlPvm@PLT # Offset: 5146
.Ltmp2872:
    0000141f: 	movq	0x18(%rsp), %rsi
    00001424: 	leaq	DATAat0x23327(%rip), %rdx
    0000142b: 	movq	%r12, %rdi
    0000142e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5166
    00001433: 	callq	clock@PLT # Offset: 5171
    00001438: 	movl	iterations(%rip), %edi
    0000143e: 	xorl	%r13d, %r13d
    00001441: 	movabsq	$-0x8000000000000000, %r15
    0000144b: 	movq	%rax, start_time(%rip)
    00001452: 	leaq	DATAat0x231d2(%rip), %r14
    00001459: 	testl	%edi, %edi
    0000145b: 	jle	.Ltmp2873 # Offset: 5211
    0000145d: 	nopl	(%rax) # Size: 3
.Ltmp2877:
    00001460: 	movq	%rbp, %rax
    00001463: 	xorl	%esi, %esi
    00001465: 	nopl	(%rax) # Size: 3
.Ltmp2874:
    00001468: 	movq	(%rax), %rcx
    0000146b: 	addq	$0x8, %rax
    0000146f: 	movq	%rcx, %rdx
    00001472: 	shlq	$0x4, %rdx
    00001476: 	subq	%rcx, %rdx
    00001479: 	leaq	(%rsi,%rdx,8), %rsi
    0000147d: 	cmpq	%rbx, %rax
    00001480: 	jne	.Ltmp2874 # Offset: 5248
    00001482: 	movsd	init_value(%rip), %xmm0
    0000148a: 	comisd	DATAat0x234a8(%rip), %xmm0
    00001492: 	jae	.Ltmp2875 # Offset: 5266
    00001498: 	cvttsd2si	%xmm0, %rax
.Ltmp2993:
    0000149d: 	imulq	$0xea600, %rax, %rax
    000014a4: 	cmpq	%rax, %rsi
    000014a7: 	je	.Ltmp2876 # Offset: 5287
    000014a9: 	movl	current_test(%rip), %edx
    000014af: 	movq	%r14, %rsi
    000014b2: 	movl	$0x1, %edi
    000014b7: 	xorl	%eax, %eax
    000014b9: 	callq	__printf_chk@PLT # Offset: 5305
    000014be: 	movl	iterations(%rip), %edi
.Ltmp2876:
    000014c4: 	addl	$0x1, %r13d
    000014c8: 	cmpl	%edi, %r13d
    000014cb: 	jl	.Ltmp2877 # Offset: 5323
.Ltmp2873:
    000014cd: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    000014d4: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r14
    000014db: 	subq	$0x20, %rax
    000014df: 	cmpq	%rax, %r14
    000014e2: 	je	.Ltmp2878 # Offset: 5346
    000014e8: 	leaq	0x10(%r14), %rdi
    000014ec: 	movq	0x98(%rsp), %r13
    000014f4: 	movq	%rdi, (%r14)
    000014f7: 	movq	0x90(%rsp), %r15
    000014ff: 	movq	%r15, %rax
    00001502: 	addq	%r13, %rax
    00001505: 	je	.Ltmp2879 # Offset: 5381
    00001507: 	testq	%r15, %r15
    0000150a: 	je	.Ltmp2880 # Offset: 5386
.Ltmp2879:
    00001510: 	movq	%r13, 0x30(%rsp)
    00001515: 	cmpq	$0xf, %r13
    00001519: 	ja	.Ltmp2881 # Offset: 5401
    0000151f: 	cmpq	$0x1, %r13
    00001523: 	jne	.Ltmp2882 # Offset: 5411
    00001529: 	movzbl	(%r15), %eax
    0000152d: 	movb	%al, 0x10(%r14)
.Ltmp3047:
    00001531: 	movq	%r13, 0x8(%r14)
    00001535: 	movb	$0x0, (%rdi,%r13)
    0000153a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001541: 	addq	$0x20, %rax
    00001545: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp3025:
    0000154c: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001553: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    0000155a: 	je	.Ltmp2883 # Offset: 5466
.Ltmp3024:
    00001560: 	movq	-0x20(%rax), %r13
    00001564: 	callq	clock@PLT # Offset: 5476
    00001569: 	pxor	%xmm0, %xmm0
    0000156d: 	movq	%rax, end_time(%rip)
    00001574: 	movq	%r13, %rdi
    00001577: 	subq	start_time(%rip), %rax
    0000157e: 	cvtsi2sd	%rax, %xmm0
    00001583: 	divsd	DATAat0x23450(%rip), %xmm0
    0000158b: 	callq	_Z13record_resultdPKc # Offset: 5515
    00001590: 	movq	0x90(%rsp), %rdi
    00001598: 	cmpq	0x10(%rsp), %rdi
    0000159d: 	je	.Ltmp2884 # Offset: 5533
    0000159f: 	movq	0xa0(%rsp), %rax
    000015a7: 	leaq	0x1(%rax), %rsi
    000015ab: 	callq	_ZdlPvm@PLT # Offset: 5547
.Ltmp2884:
    000015b0: 	movq	0x18(%rsp), %rsi
    000015b5: 	leaq	DATAat0x23345(%rip), %rdx
    000015bc: 	movq	%r12, %rdi
    000015bf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5567
    000015c4: 	callq	clock@PLT # Offset: 5572
    000015c9: 	movl	iterations(%rip), %ecx
    000015cf: 	xorl	%r13d, %r13d
    000015d2: 	movabsq	$-0x8000000000000000, %r14
    000015dc: 	movq	%rax, start_time(%rip)
    000015e3: 	leaq	DATAat0x231d2(%rip), %r15
    000015ea: 	testl	%ecx, %ecx
    000015ec: 	jle	.Ltmp2885 # Offset: 5612
    000015f2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2889:
    000015f8: 	movq	%rbp, %rax
    000015fb: 	pxor	%xmm0, %xmm0
    000015ff: 	nop # Size: 1
.Ltmp2886:
    00001600: 	movdqa	DATAat0x238d0(%rip), %xmm1
    00001608: 	paddq	(%rax), %xmm1
    0000160c: 	addq	$0x10, %rax
    00001610: 	paddq	%xmm1, %xmm0
    00001614: 	cmpq	%rbx, %rax
    00001617: 	jne	.Ltmp2886 # Offset: 5655
    00001619: 	movsd	init_value(%rip), %xmm1
    00001621: 	comisd	DATAat0x234a8(%rip), %xmm1
    00001629: 	jae	.Ltmp2887 # Offset: 5673
    0000162f: 	cvttsd2si	%xmm1, %rax
.Ltmp2992:
    00001634: 	addq	$0x78, %rax
    00001638: 	movdqa	%xmm0, %xmm1
    0000163c: 	imulq	$0x1f40, %rax, %rdx
    00001643: 	psrldq	$0x8, %xmm1
    00001648: 	paddq	%xmm1, %xmm0
    0000164c: 	movq	%xmm0, %rax
    00001651: 	cmpq	%rax, %rdx
    00001654: 	je	.Ltmp2888 # Offset: 5716
    00001656: 	movl	current_test(%rip), %edx
    0000165c: 	movq	%r15, %rsi
    0000165f: 	movl	$0x1, %edi
    00001664: 	xorl	%eax, %eax
    00001666: 	callq	__printf_chk@PLT # Offset: 5734
    0000166b: 	movl	iterations(%rip), %ecx
.Ltmp2888:
    00001671: 	addl	$0x1, %r13d
    00001675: 	cmpl	%ecx, %r13d
    00001678: 	jl	.Ltmp2889 # Offset: 5752
.Ltmp2885:
    0000167e: 	movq	%r12, %rsi
    00001681: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00001688: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5768
    0000168d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001694: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000169b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000016a2: 	je	.Ltmp2890 # Offset: 5794
.Ltmp3022:
    000016a8: 	movq	-0x20(%rax), %r13
    000016ac: 	callq	clock@PLT # Offset: 5804
    000016b1: 	pxor	%xmm0, %xmm0
    000016b5: 	movq	%rax, end_time(%rip)
    000016bc: 	movq	%r13, %rdi
    000016bf: 	subq	start_time(%rip), %rax
    000016c6: 	cvtsi2sd	%rax, %xmm0
    000016cb: 	divsd	DATAat0x23450(%rip), %xmm0
    000016d3: 	callq	_Z13record_resultdPKc # Offset: 5843
    000016d8: 	movq	0x90(%rsp), %rdi
    000016e0: 	cmpq	0x10(%rsp), %rdi
    000016e5: 	je	.Ltmp2891 # Offset: 5861
    000016e7: 	movq	0xa0(%rsp), %rax
    000016ef: 	leaq	0x1(%rax), %rsi
    000016f3: 	callq	_ZdlPvm@PLT # Offset: 5875
.Ltmp2891:
    000016f8: 	movq	0x18(%rsp), %rsi
    000016fd: 	leaq	DATAat0x23362(%rip), %rdx
    00001704: 	movq	%r12, %rdi
    00001707: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5895
    0000170c: 	callq	clock@PLT # Offset: 5900
    00001711: 	movl	iterations(%rip), %edi
    00001717: 	xorl	%r14d, %r14d
    0000171a: 	movabsq	$-0x3333333333333333, %r13
    00001724: 	movq	%rax, start_time(%rip)
    0000172b: 	leaq	DATAat0x231d2(%rip), %r15
    00001732: 	testl	%edi, %edi
    00001734: 	jle	.Ltmp2892 # Offset: 5940
    00001736: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2896:
    00001740: 	movq	%rbp, %rcx
    00001743: 	xorl	%esi, %esi
    00001745: 	nopl	(%rax) # Size: 3
.Ltmp2893:
    00001748: 	movq	%r13, %rax
    0000174b: 	mulq	(%rcx)
    0000174e: 	addq	$0x8, %rcx
    00001752: 	shrq	$0x2, %rdx
    00001756: 	addq	%rdx, %rsi
    00001759: 	cmpq	%rbx, %rcx
    0000175c: 	jne	.Ltmp2893 # Offset: 5980
    0000175e: 	movsd	init_value(%rip), %xmm0
    00001766: 	comisd	DATAat0x234a8(%rip), %xmm0
    0000176e: 	jae	.Ltmp2894 # Offset: 5998
    00001774: 	cvttsd2si	%xmm0, %rdx
.Ltmp2990:
    00001779: 	movq	%rdx, %rax
    0000177c: 	mulq	%r13
    0000177f: 	shrq	$0x2, %rdx
    00001783: 	imulq	$0x1f40, %rdx, %rdx
    0000178a: 	cmpq	%rdx, %rsi
    0000178d: 	je	.Ltmp2895 # Offset: 6029
    0000178f: 	movl	current_test(%rip), %edx
    00001795: 	movq	%r15, %rsi
    00001798: 	movl	$0x1, %edi
    0000179d: 	xorl	%eax, %eax
    0000179f: 	callq	__printf_chk@PLT # Offset: 6047
    000017a4: 	movl	iterations(%rip), %edi
.Ltmp2895:
    000017aa: 	addl	$0x1, %r14d
    000017ae: 	cmpl	%edi, %r14d
    000017b1: 	jl	.Ltmp2896 # Offset: 6065
.Ltmp2892:
    000017b3: 	movq	%r12, %rsi
    000017b6: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000017bd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6077
    000017c2: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000017c9: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    000017d0: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000017d7: 	je	.Ltmp2897 # Offset: 6103
.Ltmp3023:
    000017dd: 	movq	-0x20(%rax), %r13
    000017e1: 	callq	clock@PLT # Offset: 6113
    000017e6: 	pxor	%xmm0, %xmm0
    000017ea: 	movq	%rax, end_time(%rip)
    000017f1: 	movq	%r13, %rdi
    000017f4: 	subq	start_time(%rip), %rax
    000017fb: 	cvtsi2sd	%rax, %xmm0
    00001800: 	divsd	DATAat0x23450(%rip), %xmm0
    00001808: 	callq	_Z13record_resultdPKc # Offset: 6152
    0000180d: 	movq	0x90(%rsp), %rdi
    00001815: 	cmpq	0x10(%rsp), %rdi
    0000181a: 	je	.Ltmp2898 # Offset: 6170
    0000181c: 	movq	0xa0(%rsp), %rax
    00001824: 	leaq	0x1(%rax), %rsi
    00001828: 	callq	_ZdlPvm@PLT # Offset: 6184
.Ltmp2898:
    0000182d: 	movq	0x18(%rsp), %rsi
    00001832: 	leaq	DATAat0x23373(%rip), %rdx
    00001839: 	movq	%r12, %rdi
    0000183c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6204
    00001841: 	callq	clock@PLT # Offset: 6209
    00001846: 	movl	iterations(%rip), %edi
    0000184c: 	xorl	%r14d, %r14d
    0000184f: 	movabsq	$-0x7777777777777777, %r13
    00001859: 	movq	%rax, start_time(%rip)
    00001860: 	leaq	DATAat0x231d2(%rip), %r15
    00001867: 	testl	%edi, %edi
    00001869: 	jle	.Ltmp2899 # Offset: 6249
    0000186b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2903:
    00001870: 	movq	%rbp, %rcx
    00001873: 	xorl	%esi, %esi
    00001875: 	nopl	(%rax) # Size: 3
.Ltmp2900:
    00001878: 	movq	%r13, %rax
    0000187b: 	mulq	(%rcx)
    0000187e: 	addq	$0x8, %rcx
    00001882: 	shrq	$0x6, %rdx
    00001886: 	addq	%rdx, %rsi
    00001889: 	cmpq	%rbx, %rcx
    0000188c: 	jne	.Ltmp2900 # Offset: 6284
    0000188e: 	movsd	init_value(%rip), %xmm0
    00001896: 	comisd	DATAat0x234a8(%rip), %xmm0
    0000189e: 	jae	.Ltmp2901 # Offset: 6302
    000018a4: 	cvttsd2si	%xmm0, %rdx
.Ltmp2991:
    000018a9: 	movq	%rdx, %rax
    000018ac: 	mulq	%r13
    000018af: 	shrq	$0x6, %rdx
    000018b3: 	imulq	$0x1f40, %rdx, %rdx
    000018ba: 	cmpq	%rdx, %rsi
    000018bd: 	je	.Ltmp2902 # Offset: 6333
    000018bf: 	movl	current_test(%rip), %edx
    000018c5: 	movq	%r15, %rsi
    000018c8: 	movl	$0x1, %edi
    000018cd: 	xorl	%eax, %eax
    000018cf: 	callq	__printf_chk@PLT # Offset: 6351
    000018d4: 	movl	iterations(%rip), %edi
.Ltmp2902:
    000018da: 	addl	$0x1, %r14d
    000018de: 	cmpl	%edi, %r14d
    000018e1: 	jl	.Ltmp2903 # Offset: 6369
.Ltmp2899:
    000018e3: 	movq	%r12, %rsi
    000018e6: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000018ed: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6381
    000018f2: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000018f9: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001900: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001907: 	je	.Ltmp2904 # Offset: 6407
.Ltmp3033:
    0000190d: 	movq	-0x20(%rax), %r13
    00001911: 	callq	clock@PLT # Offset: 6417
    00001916: 	pxor	%xmm0, %xmm0
    0000191a: 	movq	%rax, end_time(%rip)
    00001921: 	movq	%r13, %rdi
    00001924: 	subq	start_time(%rip), %rax
    0000192b: 	cvtsi2sd	%rax, %xmm0
    00001930: 	divsd	DATAat0x23450(%rip), %xmm0
    00001938: 	callq	_Z13record_resultdPKc # Offset: 6456
    0000193d: 	movq	0x90(%rsp), %rdi
    00001945: 	cmpq	0x10(%rsp), %rdi
    0000194a: 	je	.Ltmp2905 # Offset: 6474
    0000194c: 	movq	0xa0(%rsp), %rax
    00001954: 	leaq	0x1(%rax), %rsi
    00001958: 	callq	_ZdlPvm@PLT # Offset: 6488
.Ltmp2905:
    0000195d: 	movq	0x18(%rsp), %rsi
    00001962: 	leaq	DATAat0x2338e(%rip), %rdx
    00001969: 	movq	%r12, %rdi
    0000196c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6508
    00001971: 	callq	clock@PLT # Offset: 6513
    00001976: 	movl	iterations(%rip), %ecx
    0000197c: 	xorl	%r13d, %r13d
    0000197f: 	movabsq	$-0x8000000000000000, %r14
    00001989: 	movq	%rax, start_time(%rip)
    00001990: 	leaq	DATAat0x231d2(%rip), %r15
    00001997: 	testl	%ecx, %ecx
    00001999: 	jle	.Ltmp2906 # Offset: 6553
    0000199f: 	nop # Size: 1
.Ltmp2910:
    000019a0: 	movq	%rbp, %rax
    000019a3: 	pxor	%xmm0, %xmm0
    000019a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2907:
    000019b0: 	movdqa	DATAat0x238e0(%rip), %xmm1
    000019b8: 	paddq	(%rax), %xmm1
    000019bc: 	addq	$0x10, %rax
    000019c0: 	paddq	%xmm1, %xmm0
    000019c4: 	cmpq	%rbx, %rax
    000019c7: 	jne	.Ltmp2907 # Offset: 6599
    000019c9: 	movsd	init_value(%rip), %xmm1
    000019d1: 	comisd	DATAat0x234a8(%rip), %xmm1
    000019d9: 	jae	.Ltmp2908 # Offset: 6617
    000019df: 	cvttsd2si	%xmm1, %rax
.Ltmp2989:
    000019e4: 	addq	$0x2, %rax
    000019e8: 	movdqa	%xmm0, %xmm1
    000019ec: 	imulq	$0x1f40, %rax, %rdx
    000019f3: 	psrldq	$0x8, %xmm1
    000019f8: 	paddq	%xmm1, %xmm0
    000019fc: 	movq	%xmm0, %rax
    00001a01: 	cmpq	%rax, %rdx
    00001a04: 	je	.Ltmp2909 # Offset: 6660
    00001a06: 	movl	current_test(%rip), %edx
    00001a0c: 	movq	%r15, %rsi
    00001a0f: 	movl	$0x1, %edi
    00001a14: 	xorl	%eax, %eax
    00001a16: 	callq	__printf_chk@PLT # Offset: 6678
    00001a1b: 	movl	iterations(%rip), %ecx
.Ltmp2909:
    00001a21: 	addl	$0x1, %r13d
    00001a25: 	cmpl	%ecx, %r13d
    00001a28: 	jl	.Ltmp2910 # Offset: 6696
.Ltmp2906:
    00001a2e: 	movq	%r12, %rsi
    00001a31: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00001a38: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6712
    00001a3d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001a44: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001a4b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001a52: 	je	.Ltmp2911 # Offset: 6738
.Ltmp3031:
    00001a58: 	movq	-0x20(%rax), %r13
    00001a5c: 	callq	clock@PLT # Offset: 6748
    00001a61: 	pxor	%xmm0, %xmm0
    00001a65: 	movq	%rax, end_time(%rip)
    00001a6c: 	movq	%r13, %rdi
    00001a6f: 	subq	start_time(%rip), %rax
    00001a76: 	cvtsi2sd	%rax, %xmm0
    00001a7b: 	divsd	DATAat0x23450(%rip), %xmm0
    00001a83: 	callq	_Z13record_resultdPKc # Offset: 6787
    00001a88: 	movq	0x90(%rsp), %rdi
    00001a90: 	cmpq	0x10(%rsp), %rdi
    00001a95: 	je	.Ltmp2912 # Offset: 6805
    00001a97: 	movq	0xa0(%rsp), %rax
    00001a9f: 	leaq	0x1(%rax), %rsi
    00001aa3: 	callq	_ZdlPvm@PLT # Offset: 6819
.Ltmp2912:
    00001aa8: 	movq	0x18(%rsp), %rsi
    00001aad: 	leaq	DATAat0x233a9(%rip), %rdx
    00001ab4: 	movq	%r12, %rdi
    00001ab7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6839
    00001abc: 	callq	clock@PLT # Offset: 6844
    00001ac1: 	movl	iterations(%rip), %ecx
    00001ac7: 	xorl	%r13d, %r13d
    00001aca: 	movabsq	$-0x8000000000000000, %r14
    00001ad4: 	movq	%rax, start_time(%rip)
    00001adb: 	leaq	DATAat0x231d2(%rip), %r15
    00001ae2: 	testl	%ecx, %ecx
    00001ae4: 	jle	.Ltmp2913 # Offset: 6884
    00001aea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2917:
    00001af0: 	movq	%rbp, %rax
    00001af3: 	pxor	%xmm0, %xmm0
    00001af7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2914:
    00001b00: 	paddq	(%rax), %xmm0
    00001b04: 	addq	$0x10, %rax
    00001b08: 	cmpq	%rbx, %rax
    00001b0b: 	jne	.Ltmp2914 # Offset: 6923
    00001b0d: 	movsd	init_value(%rip), %xmm1
    00001b15: 	comisd	DATAat0x234a8(%rip), %xmm1
    00001b1d: 	jae	.Ltmp2915 # Offset: 6941
    00001b23: 	cvttsd2si	%xmm1, %rax
.Ltmp2987:
    00001b28: 	movdqa	%xmm0, %xmm1
    00001b2c: 	imulq	$0x1f40, %rax, %rdx
    00001b33: 	psrldq	$0x8, %xmm1
    00001b38: 	paddq	%xmm1, %xmm0
    00001b3c: 	movq	%xmm0, %rax
    00001b41: 	cmpq	%rax, %rdx
    00001b44: 	je	.Ltmp2916 # Offset: 6980
    00001b46: 	movl	current_test(%rip), %edx
    00001b4c: 	movq	%r15, %rsi
    00001b4f: 	movl	$0x1, %edi
    00001b54: 	xorl	%eax, %eax
    00001b56: 	callq	__printf_chk@PLT # Offset: 6998
    00001b5b: 	movl	iterations(%rip), %ecx
.Ltmp2916:
    00001b61: 	addl	$0x1, %r13d
    00001b65: 	cmpl	%ecx, %r13d
    00001b68: 	jl	.Ltmp2917 # Offset: 7016
.Ltmp2913:
    00001b6a: 	movq	%r12, %rsi
    00001b6d: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00001b74: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7028
    00001b79: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001b80: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001b87: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001b8e: 	je	.Ltmp2918 # Offset: 7054
.Ltmp3032:
    00001b94: 	movq	-0x20(%rax), %r13
    00001b98: 	callq	clock@PLT # Offset: 7064
    00001b9d: 	pxor	%xmm0, %xmm0
    00001ba1: 	movq	%rax, end_time(%rip)
    00001ba8: 	movq	%r13, %rdi
    00001bab: 	subq	start_time(%rip), %rax
    00001bb2: 	cvtsi2sd	%rax, %xmm0
    00001bb7: 	divsd	DATAat0x23450(%rip), %xmm0
    00001bbf: 	callq	_Z13record_resultdPKc # Offset: 7103
    00001bc4: 	movq	0x90(%rsp), %rdi
    00001bcc: 	cmpq	0x10(%rsp), %rdi
    00001bd1: 	je	.Ltmp2919 # Offset: 7121
    00001bd3: 	movq	0xa0(%rsp), %rax
    00001bdb: 	leaq	0x1(%rax), %rsi
    00001bdf: 	callq	_ZdlPvm@PLT # Offset: 7135
.Ltmp2919:
    00001be4: 	movq	0x18(%rsp), %rsi
    00001be9: 	leaq	DATAat0x23406(%rip), %rdx
    00001bf0: 	movq	%r12, %rdi
    00001bf3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7155
    00001bf8: 	callq	clock@PLT # Offset: 7160
    00001bfd: 	movl	iterations(%rip), %ecx
    00001c03: 	movq	%rax, start_time(%rip)
    00001c0a: 	testl	%ecx, %ecx
    00001c0c: 	jle	.Ltmp2920 # Offset: 7180
    00001c12: 	movdqa	DATAat0x238b0(%rip), %xmm4
    00001c1a: 	xorl	%r13d, %r13d
    00001c1d: 	movabsq	$-0x8000000000000000, %r14
    00001c27: 	leaq	DATAat0x231d2(%rip), %r15
    00001c2e: 	movaps	%xmm4, (%rsp)
    00001c32: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2924:
    00001c38: 	movq	%rbp, %rax
    00001c3b: 	pxor	%xmm0, %xmm0
    00001c3f: 	nop # Size: 1
.Ltmp2921:
    00001c40: 	movdqa	(%rsp), %xmm1
    00001c45: 	pand	(%rax), %xmm1
    00001c49: 	addq	$0x10, %rax
    00001c4d: 	paddq	%xmm1, %xmm0
    00001c51: 	cmpq	%rbx, %rax
    00001c54: 	jne	.Ltmp2921 # Offset: 7252
    00001c56: 	movdqa	%xmm0, %xmm1
    00001c5a: 	psrldq	$0x8, %xmm1
    00001c5f: 	paddq	%xmm1, %xmm0
    00001c63: 	movq	%xmm0, %rax
    00001c68: 	movsd	init_value(%rip), %xmm0
    00001c70: 	comisd	DATAat0x234a8(%rip), %xmm0
    00001c78: 	jae	.Ltmp2922 # Offset: 7288
    00001c7e: 	cvttsd2si	%xmm0, %rdx
.Ltmp2988:
    00001c83: 	andl	$0xa, %edx
    00001c86: 	imulq	$0x1f40, %rdx, %rdx
    00001c8d: 	cmpq	%rdx, %rax
    00001c90: 	je	.Ltmp2923 # Offset: 7312
    00001c92: 	movl	current_test(%rip), %edx
    00001c98: 	movq	%r15, %rsi
    00001c9b: 	movl	$0x1, %edi
    00001ca0: 	xorl	%eax, %eax
    00001ca2: 	callq	__printf_chk@PLT # Offset: 7330
    00001ca7: 	movl	iterations(%rip), %ecx
.Ltmp2923:
    00001cad: 	addl	$0x1, %r13d
    00001cb1: 	cmpl	%ecx, %r13d
    00001cb4: 	jl	.Ltmp2924 # Offset: 7348
.Ltmp2920:
    00001cba: 	movq	%r12, %rsi
    00001cbd: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00001cc4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7364
    00001cc9: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001cd0: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001cd7: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001cde: 	je	.Ltmp2925 # Offset: 7390
.Ltmp3030:
    00001ce4: 	movq	-0x20(%rax), %r13
    00001ce8: 	callq	clock@PLT # Offset: 7400
    00001ced: 	pxor	%xmm0, %xmm0
    00001cf1: 	movq	%rax, end_time(%rip)
    00001cf8: 	movq	%r13, %rdi
    00001cfb: 	subq	start_time(%rip), %rax
    00001d02: 	cvtsi2sd	%rax, %xmm0
    00001d07: 	divsd	DATAat0x23450(%rip), %xmm0
    00001d0f: 	callq	_Z13record_resultdPKc # Offset: 7439
    00001d14: 	movq	0x90(%rsp), %rdi
    00001d1c: 	cmpq	0x10(%rsp), %rdi
    00001d21: 	je	.Ltmp2926 # Offset: 7457
    00001d23: 	movq	0xa0(%rsp), %rax
    00001d2b: 	leaq	0x1(%rax), %rsi
    00001d2f: 	callq	_ZdlPvm@PLT # Offset: 7471
.Ltmp2926:
    00001d34: 	movq	0x18(%rsp), %rsi
    00001d39: 	leaq	DATAat0x233fd(%rip), %rdx
    00001d40: 	movq	%r12, %rdi
    00001d43: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7491
    00001d48: 	callq	clock@PLT # Offset: 7496
    00001d4d: 	movl	iterations(%rip), %ecx
    00001d53: 	xorl	%r13d, %r13d
    00001d56: 	movabsq	$-0x8000000000000000, %r14
    00001d60: 	movq	%rax, start_time(%rip)
    00001d67: 	leaq	DATAat0x231d2(%rip), %r15
    00001d6e: 	testl	%ecx, %ecx
    00001d70: 	jle	.Ltmp2927 # Offset: 7536
    00001d76: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2931:
    00001d80: 	movq	%rbp, %rax
    00001d83: 	pxor	%xmm0, %xmm0
    00001d87: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2928:
    00001d90: 	movdqa	DATAat0x238f0(%rip), %xmm1
    00001d98: 	pand	(%rax), %xmm1
    00001d9c: 	addq	$0x10, %rax
    00001da0: 	paddq	%xmm1, %xmm0
    00001da4: 	cmpq	%rbx, %rax
    00001da7: 	jne	.Ltmp2928 # Offset: 7591
    00001da9: 	movsd	init_value(%rip), %xmm1
    00001db1: 	comisd	DATAat0x234a8(%rip), %xmm1
    00001db9: 	jae	.Ltmp2929 # Offset: 7609
    00001dbf: 	cvttsd2si	%xmm1, %rax
.Ltmp2986:
    00001dc4: 	andl	$0xe, %eax
    00001dc7: 	movdqa	%xmm0, %xmm1
    00001dcb: 	imulq	$0x1f40, %rax, %rdx
    00001dd2: 	psrldq	$0x8, %xmm1
    00001dd7: 	paddq	%xmm1, %xmm0
    00001ddb: 	movq	%xmm0, %rax
    00001de0: 	cmpq	%rax, %rdx
    00001de3: 	je	.Ltmp2930 # Offset: 7651
    00001de5: 	movl	current_test(%rip), %edx
    00001deb: 	movq	%r15, %rsi
    00001dee: 	movl	$0x1, %edi
    00001df3: 	xorl	%eax, %eax
    00001df5: 	callq	__printf_chk@PLT # Offset: 7669
    00001dfa: 	movl	iterations(%rip), %ecx
.Ltmp2930:
    00001e00: 	addl	$0x1, %r13d
    00001e04: 	cmpl	%ecx, %r13d
    00001e07: 	jl	.Ltmp2931 # Offset: 7687
.Ltmp2927:
    00001e0d: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00001e14: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r14
    00001e1b: 	subq	$0x20, %rax
    00001e1f: 	cmpq	%rax, %r14
    00001e22: 	je	.Ltmp2932 # Offset: 7714
    00001e28: 	leaq	0x10(%r14), %rdi
    00001e2c: 	movq	0x98(%rsp), %r13
    00001e34: 	movq	%rdi, (%r14)
    00001e37: 	movq	0x90(%rsp), %r15
    00001e3f: 	movq	%r15, %rax
    00001e42: 	addq	%r13, %rax
    00001e45: 	je	.Ltmp2933 # Offset: 7749
    00001e47: 	testq	%r15, %r15
    00001e4a: 	je	.Ltmp2934 # Offset: 7754
.Ltmp2933:
    00001e50: 	movq	%r13, 0x30(%rsp)
    00001e55: 	cmpq	$0xf, %r13
    00001e59: 	ja	.Ltmp2935 # Offset: 7769
    00001e5f: 	cmpq	$0x1, %r13
    00001e63: 	jne	.Ltmp2936 # Offset: 7779
    00001e69: 	movzbl	(%r15), %eax
    00001e6d: 	movb	%al, 0x10(%r14)
.Ltmp3043:
    00001e71: 	movq	%r13, 0x8(%r14)
    00001e75: 	movb	$0x0, (%rdi,%r13)
    00001e7a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001e81: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001e88: 	addq	$0x20, %rax
    00001e8c: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00001e93: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00001e9a: 	je	.Ltmp2937 # Offset: 7834
.Ltmp3029:
    00001ea0: 	movq	-0x20(%rax), %r13
    00001ea4: 	callq	clock@PLT # Offset: 7844
    00001ea9: 	pxor	%xmm0, %xmm0
    00001ead: 	movq	%rax, end_time(%rip)
    00001eb4: 	movq	%r13, %rdi
    00001eb7: 	subq	start_time(%rip), %rax
    00001ebe: 	cvtsi2sd	%rax, %xmm0
    00001ec3: 	divsd	DATAat0x23450(%rip), %xmm0
    00001ecb: 	callq	_Z13record_resultdPKc # Offset: 7883
    00001ed0: 	movq	0x90(%rsp), %rdi
    00001ed8: 	cmpq	0x10(%rsp), %rdi
    00001edd: 	je	.Ltmp2938 # Offset: 7901
    00001edf: 	movq	0xa0(%rsp), %rax
    00001ee7: 	leaq	0x1(%rax), %rsi
    00001eeb: 	callq	_ZdlPvm@PLT # Offset: 7915
.Ltmp2938:
    00001ef0: 	movq	0x18(%rsp), %rsi
    00001ef5: 	leaq	DATAat0x2341d(%rip), %rdx
    00001efc: 	movq	%r12, %rdi
    00001eff: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7935
    00001f04: 	callq	clock@PLT # Offset: 7940
    00001f09: 	movl	iterations(%rip), %ecx
    00001f0f: 	movq	%rax, start_time(%rip)
    00001f16: 	testl	%ecx, %ecx
    00001f18: 	jle	.Ltmp2939 # Offset: 7960
    00001f1e: 	movdqa	DATAat0x238b0(%rip), %xmm5
    00001f26: 	xorl	%r13d, %r13d
    00001f29: 	movabsq	$-0x8000000000000000, %r14
    00001f33: 	leaq	DATAat0x231d2(%rip), %r15
    00001f3a: 	movaps	%xmm5, (%rsp)
    00001f3e: 	nop # Size: 2
.Ltmp2943:
    00001f40: 	movq	%rbp, %rax
    00001f43: 	pxor	%xmm0, %xmm0
    00001f47: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2940:
    00001f50: 	movdqa	(%rsp), %xmm1
    00001f55: 	por	(%rax), %xmm1
    00001f59: 	addq	$0x10, %rax
    00001f5d: 	paddq	%xmm1, %xmm0
    00001f61: 	cmpq	%rbx, %rax
    00001f64: 	jne	.Ltmp2940 # Offset: 8036
    00001f66: 	movsd	init_value(%rip), %xmm1
    00001f6e: 	comisd	DATAat0x234a8(%rip), %xmm1
    00001f76: 	jae	.Ltmp2941 # Offset: 8054
    00001f7c: 	cvttsd2si	%xmm1, %rax
.Ltmp2984:
    00001f81: 	orq	$0xa, %rax
    00001f85: 	movdqa	%xmm0, %xmm1
    00001f89: 	imulq	$0x1f40, %rax, %rdx
    00001f90: 	psrldq	$0x8, %xmm1
    00001f95: 	paddq	%xmm1, %xmm0
    00001f99: 	movq	%xmm0, %rax
    00001f9e: 	cmpq	%rax, %rdx
    00001fa1: 	je	.Ltmp2942 # Offset: 8097
    00001fa3: 	movl	current_test(%rip), %edx
    00001fa9: 	movq	%r15, %rsi
    00001fac: 	movl	$0x1, %edi
    00001fb1: 	xorl	%eax, %eax
    00001fb3: 	callq	__printf_chk@PLT # Offset: 8115
    00001fb8: 	movl	iterations(%rip), %ecx
.Ltmp2942:
    00001fbe: 	addl	$0x1, %r13d
    00001fc2: 	cmpl	%ecx, %r13d
    00001fc5: 	jl	.Ltmp2943 # Offset: 8133
.Ltmp2939:
    00001fcb: 	movq	%r12, %rsi
    00001fce: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00001fd5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8149
    00001fda: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00001fe1: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    00001fe8: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00001fef: 	je	.Ltmp2944 # Offset: 8175
.Ltmp3039:
    00001ff5: 	movq	-0x20(%rax), %r13
    00001ff9: 	callq	clock@PLT # Offset: 8185
    00001ffe: 	pxor	%xmm0, %xmm0
    00002002: 	movq	%rax, end_time(%rip)
    00002009: 	movq	%r13, %rdi
    0000200c: 	subq	start_time(%rip), %rax
    00002013: 	cvtsi2sd	%rax, %xmm0
    00002018: 	divsd	DATAat0x23450(%rip), %xmm0
    00002020: 	callq	_Z13record_resultdPKc # Offset: 8224
    00002025: 	movq	0x90(%rsp), %rdi
    0000202d: 	cmpq	0x10(%rsp), %rdi
    00002032: 	je	.Ltmp2945 # Offset: 8242
    00002034: 	movq	0xa0(%rsp), %rax
    0000203c: 	leaq	0x1(%rax), %rsi
    00002040: 	callq	_ZdlPvm@PLT # Offset: 8256
.Ltmp2945:
    00002045: 	movq	0x18(%rsp), %rsi
    0000204a: 	leaq	DATAat0x23414(%rip), %rdx
    00002051: 	movq	%r12, %rdi
    00002054: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8276
    00002059: 	callq	clock@PLT # Offset: 8281
    0000205e: 	movl	iterations(%rip), %ecx
    00002064: 	xorl	%r13d, %r13d
    00002067: 	movabsq	$-0x8000000000000000, %r14
    00002071: 	movq	%rax, start_time(%rip)
    00002078: 	leaq	DATAat0x231d2(%rip), %r15
    0000207f: 	testl	%ecx, %ecx
    00002081: 	jle	.Ltmp2946 # Offset: 8321
    00002087: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2950:
    00002090: 	movq	%rbp, %rax
    00002093: 	pxor	%xmm0, %xmm0
    00002097: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2947:
    000020a0: 	movdqa	DATAat0x23900(%rip), %xmm1
    000020a8: 	por	(%rax), %xmm1
    000020ac: 	addq	$0x10, %rax
    000020b0: 	paddq	%xmm1, %xmm0
    000020b4: 	cmpq	%rbx, %rax
    000020b7: 	jne	.Ltmp2947 # Offset: 8375
    000020b9: 	movsd	init_value(%rip), %xmm1
    000020c1: 	comisd	DATAat0x234a8(%rip), %xmm1
    000020c9: 	jae	.Ltmp2948 # Offset: 8393
    000020cf: 	cvttsd2si	%xmm1, %rax
.Ltmp2985:
    000020d4: 	orq	$0x3f, %rax
    000020d8: 	movdqa	%xmm0, %xmm1
    000020dc: 	imulq	$0x1f40, %rax, %rdx
    000020e3: 	psrldq	$0x8, %xmm1
    000020e8: 	paddq	%xmm1, %xmm0
    000020ec: 	movq	%xmm0, %rax
    000020f1: 	cmpq	%rax, %rdx
    000020f4: 	je	.Ltmp2949 # Offset: 8436
    000020f6: 	movl	current_test(%rip), %edx
    000020fc: 	movq	%r15, %rsi
    000020ff: 	movl	$0x1, %edi
    00002104: 	xorl	%eax, %eax
    00002106: 	callq	__printf_chk@PLT # Offset: 8454
    0000210b: 	movl	iterations(%rip), %ecx
.Ltmp2949:
    00002111: 	addl	$0x1, %r13d
    00002115: 	cmpl	%ecx, %r13d
    00002118: 	jl	.Ltmp2950 # Offset: 8472
.Ltmp2946:
    0000211e: 	movq	%r12, %rsi
    00002121: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002128: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8488
    0000212d: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002134: 	cmpq	_Z7gLabelsB5cxx11+56(%rip), %rax
    0000213b: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002142: 	je	.Ltmp2951 # Offset: 8514
.Ltmp3038:
    00002148: 	movq	-0x20(%rax), %r13
    0000214c: 	callq	clock@PLT # Offset: 8524
    00002151: 	pxor	%xmm0, %xmm0
    00002155: 	movq	%rax, end_time(%rip)
    0000215c: 	movq	%r13, %rdi
    0000215f: 	subq	start_time(%rip), %rax
    00002166: 	cvtsi2sd	%rax, %xmm0
    0000216b: 	divsd	DATAat0x23450(%rip), %xmm0
    00002173: 	callq	_Z13record_resultdPKc # Offset: 8563
    00002178: 	movq	0x90(%rsp), %rdi
    00002180: 	cmpq	0x10(%rsp), %rdi
    00002185: 	je	.Ltmp2952 # Offset: 8581
    00002187: 	movq	0xa0(%rsp), %rax
    0000218f: 	leaq	0x1(%rax), %rsi
    00002193: 	callq	_ZdlPvm@PLT # Offset: 8595
.Ltmp2952:
    00002198: 	movq	0x18(%rsp), %rsi
    0000219d: 	leaq	DATAat0x23433(%rip), %rdx
    000021a4: 	movq	%r12, %rdi
    000021a7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8615
    000021ac: 	callq	clock@PLT # Offset: 8620
    000021b1: 	movl	iterations(%rip), %ecx
    000021b7: 	movq	%rax, start_time(%rip)
    000021be: 	testl	%ecx, %ecx
    000021c0: 	jle	.Ltmp2953 # Offset: 8640
    000021c6: 	movdqa	DATAat0x238b0(%rip), %xmm6
    000021ce: 	xorl	%r13d, %r13d
    000021d1: 	movabsq	$-0x8000000000000000, %r14
    000021db: 	leaq	DATAat0x231d2(%rip), %r15
    000021e2: 	movaps	%xmm6, (%rsp)
    000021e6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2957:
    000021f0: 	movq	%rbp, %rax
    000021f3: 	pxor	%xmm0, %xmm0
    000021f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2954:
    00002200: 	movdqa	(%rsp), %xmm1
    00002205: 	pxor	(%rax), %xmm1
    00002209: 	addq	$0x10, %rax
    0000220d: 	paddq	%xmm1, %xmm0
    00002211: 	cmpq	%rbx, %rax
    00002214: 	jne	.Ltmp2954 # Offset: 8724
    00002216: 	movsd	init_value(%rip), %xmm1
    0000221e: 	comisd	DATAat0x234a8(%rip), %xmm1
    00002226: 	jae	.Ltmp2955 # Offset: 8742
    0000222c: 	cvttsd2si	%xmm1, %rax
.Ltmp2983:
    00002231: 	xorq	$0xa, %rax
    00002235: 	movdqa	%xmm0, %xmm1
    00002239: 	imulq	$0x1f40, %rax, %rdx
    00002240: 	psrldq	$0x8, %xmm1
    00002245: 	paddq	%xmm1, %xmm0
    00002249: 	movq	%xmm0, %rax
    0000224e: 	cmpq	%rax, %rdx
    00002251: 	je	.Ltmp2956 # Offset: 8785
    00002253: 	movl	current_test(%rip), %edx
    00002259: 	movq	%r15, %rsi
    0000225c: 	movl	$0x1, %edi
    00002261: 	xorl	%eax, %eax
    00002263: 	callq	__printf_chk@PLT # Offset: 8803
    00002268: 	movl	iterations(%rip), %ecx
.Ltmp2956:
    0000226e: 	addl	$0x1, %r13d
    00002272: 	cmpl	%ecx, %r13d
    00002275: 	jl	.Ltmp2957 # Offset: 8821
.Ltmp2953:
    0000227b: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00002282: 	movq	_Z7gLabelsB5cxx11+48(%rip), %r14
    00002289: 	subq	$0x20, %rax
    0000228d: 	cmpq	%rax, %r14
    00002290: 	je	.Ltmp2958 # Offset: 8848
    00002296: 	leaq	0x10(%r14), %rdi
    0000229a: 	movq	0x98(%rsp), %r13
    000022a2: 	movq	%rdi, (%r14)
    000022a5: 	movq	0x90(%rsp), %r15
    000022ad: 	movq	%r15, %rax
    000022b0: 	addq	%r13, %rax
    000022b3: 	je	.Ltmp2959 # Offset: 8883
    000022b5: 	testq	%r15, %r15
    000022b8: 	je	.Ltmp2960 # Offset: 8888
.Ltmp2959:
    000022be: 	movq	%r13, 0x30(%rsp)
    000022c3: 	cmpq	$0xf, %r13
    000022c7: 	ja	.Ltmp2961 # Offset: 8903
    000022cd: 	cmpq	$0x1, %r13
    000022d1: 	jne	.Ltmp2962 # Offset: 8913
    000022d7: 	movzbl	(%r15), %eax
    000022db: 	movb	%al, 0x10(%r14)
.Ltmp3041:
    000022df: 	movq	%r13, 0x8(%r14)
    000022e3: 	movb	$0x0, (%rdi,%r13)
    000022e8: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000022ef: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000022f6: 	addq	$0x20, %rax
    000022fa: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002301: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
    00002308: 	je	.Ltmp2963 # Offset: 8968
.Ltmp3028:
    0000230e: 	movq	-0x20(%rax), %r13
    00002312: 	callq	clock@PLT # Offset: 8978
    00002317: 	pxor	%xmm0, %xmm0
    0000231b: 	movq	%rax, end_time(%rip)
    00002322: 	movq	%r13, %rdi
    00002325: 	subq	start_time(%rip), %rax
    0000232c: 	cvtsi2sd	%rax, %xmm0
    00002331: 	divsd	DATAat0x23450(%rip), %xmm0
    00002339: 	callq	_Z13record_resultdPKc # Offset: 9017
    0000233e: 	movq	0x90(%rsp), %rdi
    00002346: 	cmpq	0x10(%rsp), %rdi
    0000234b: 	je	.Ltmp2964 # Offset: 9035
    0000234d: 	movq	0xa0(%rsp), %rax
    00002355: 	leaq	0x1(%rax), %rsi
    00002359: 	callq	_ZdlPvm@PLT # Offset: 9049
.Ltmp2964:
    0000235e: 	movq	0x18(%rsp), %rsi
    00002363: 	leaq	DATAat0x2342a(%rip), %rdx
    0000236a: 	movq	%r12, %rdi
    0000236d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9069
    00002372: 	callq	clock@PLT # Offset: 9074
    00002377: 	movl	iterations(%rip), %ecx
    0000237d: 	xorl	%r13d, %r13d
    00002380: 	movabsq	$-0x8000000000000000, %r14
    0000238a: 	movq	%rax, start_time(%rip)
    00002391: 	leaq	DATAat0x231d2(%rip), %r15
    00002398: 	testl	%ecx, %ecx
    0000239a: 	jle	.Ltmp2965 # Offset: 9114
.Ltmp2969:
    000023a0: 	movq	%rbp, %rax
    000023a3: 	pxor	%xmm0, %xmm0
    000023a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2966:
    000023b0: 	movdqa	DATAat0x23910(%rip), %xmm1
    000023b8: 	pxor	(%rax), %xmm1
    000023bc: 	addq	$0x10, %rax
    000023c0: 	paddq	%xmm1, %xmm0
    000023c4: 	cmpq	%rbx, %rax
    000023c7: 	jne	.Ltmp2966 # Offset: 9159
    000023c9: 	movsd	init_value(%rip), %xmm1
    000023d1: 	comisd	DATAat0x234a8(%rip), %xmm1
    000023d9: 	jae	.Ltmp2967 # Offset: 9177
    000023df: 	cvttsd2si	%xmm1, %rax
.Ltmp2999:
    000023e4: 	xorq	$0x31, %rax
    000023e8: 	movdqa	%xmm0, %xmm1
    000023ec: 	imulq	$0x1f40, %rax, %rdx
    000023f3: 	psrldq	$0x8, %xmm1
    000023f8: 	paddq	%xmm1, %xmm0
    000023fc: 	movq	%xmm0, %rax
    00002401: 	cmpq	%rax, %rdx
    00002404: 	je	.Ltmp2968 # Offset: 9220
    00002406: 	movl	current_test(%rip), %edx
    0000240c: 	movq	%r15, %rsi
    0000240f: 	movl	$0x1, %edi
    00002414: 	xorl	%eax, %eax
    00002416: 	callq	__printf_chk@PLT # Offset: 9238
    0000241b: 	movl	iterations(%rip), %ecx
.Ltmp2968:
    00002421: 	addl	$0x1, %r13d
    00002425: 	cmpl	%ecx, %r13d
    00002428: 	jl	.Ltmp2969 # Offset: 9256
.Ltmp2965:
    0000242e: 	movq	_Z7gLabelsB5cxx11+64(%rip), %rax
    00002435: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rbx
    0000243c: 	subq	$0x20, %rax
    00002440: 	cmpq	%rax, %rbx
    00002443: 	je	.Ltmp2970 # Offset: 9283
    00002449: 	leaq	0x10(%rbx), %rdi
    0000244d: 	movq	0x98(%rsp), %r13
    00002455: 	movq	%rdi, (%rbx)
    00002458: 	movq	0x90(%rsp), %rbp
    00002460: 	movq	%rbp, %rax
    00002463: 	addq	%r13, %rax
    00002466: 	je	.Ltmp2971 # Offset: 9318
    00002468: 	testq	%rbp, %rbp
    0000246b: 	je	.Ltmp2972 # Offset: 9323
.Ltmp2971:
    00002471: 	movq	%r13, 0x30(%rsp)
    00002476: 	cmpq	$0xf, %r13
    0000247a: 	ja	.Ltmp2973 # Offset: 9338
    00002480: 	cmpq	$0x1, %r13
    00002484: 	jne	.Ltmp2974 # Offset: 9348
    0000248a: 	movzbl	(%rbp), %eax
    0000248e: 	movb	%al, 0x10(%rbx)
.Ltmp3060:
    00002491: 	movq	%r13, 0x8(%rbx)
    00002495: 	movb	$0x0, (%rdi,%r13)
    0000249a: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000024a1: 	addq	$0x20, %rax
    000024a5: 	movq	%rax, _Z7gLabelsB5cxx11+48(%rip)
.Ltmp3040:
    000024ac: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000024b3: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000024ba: 	je	.Ltmp2975 # Offset: 9402
.Ltmp3006:
    000024c0: 	movq	-0x20(%rax), %rbp
    000024c4: 	callq	clock@PLT # Offset: 9412
    000024c9: 	pxor	%xmm0, %xmm0
    000024cd: 	movq	%rax, end_time(%rip)
    000024d4: 	movq	%rbp, %rdi
    000024d7: 	subq	start_time(%rip), %rax
    000024de: 	cvtsi2sd	%rax, %xmm0
    000024e3: 	divsd	DATAat0x23450(%rip), %xmm0
    000024eb: 	callq	_Z13record_resultdPKc # Offset: 9451
    000024f0: 	movq	0x90(%rsp), %rdi
    000024f8: 	cmpq	0x10(%rsp), %rdi
    000024fd: 	je	.Ltmp2976 # Offset: 9469
    000024ff: 	movq	0xa0(%rsp), %rax
    00002507: 	leaq	0x1(%rax), %rsi
    0000250b: 	callq	_ZdlPvm@PLT # Offset: 9483
.Ltmp2976:
    00002510: 	movq	0x18(%rsp), %rsi
    00002515: 	leaq	DATAat0x232ac(%rip), %rdx
    0000251c: 	movq	%r12, %rdi
    0000251f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9503
    00002524: 	movl	iterations(%rip), %edx
    0000252a: 	xorl	%r8d, %r8d
    0000252d: 	xorl	%ecx, %ecx
    0000252f: 	movl	$0x1f40, %esi
    00002534: 	movq	0x90(%rsp), %rdi
    0000253c: 	callq	_Z9summarizePKciiii # Offset: 9532
    00002541: 	movl	base_iterations(%rip), %eax
    00002547: 	movq	0x90(%rsp), %rdi
    0000254f: 	movl	%eax, iterations(%rip)
    00002555: 	cmpq	0x10(%rsp), %rdi
    0000255a: 	je	.Ltmp2977 # Offset: 9562
    0000255c: 	movq	0xa0(%rsp), %rax
    00002564: 	leaq	0x1(%rax), %rsi
    00002568: 	callq	_ZdlPvm@PLT # Offset: 9576
.Ltmp2977:
    0000256d: 	movq	0x70(%rsp), %rdi
    00002572: 	leaq	0x80(%rsp), %rax
    0000257a: 	cmpq	%rax, %rdi
    0000257d: 	je	.Ltmp2978 # Offset: 9597
    0000257f: 	movq	0x80(%rsp), %rax
    00002587: 	leaq	0x1(%rax), %rsi
    0000258b: 	callq	_ZdlPvm@PLT # Offset: 9611
.Ltmp2978:
    00002590: 	movq	0x50(%rsp), %rdi
    00002595: 	cmpq	0x28(%rsp), %rdi
    0000259a: 	je	.Ltmp2979 # Offset: 9626
    0000259c: 	movq	0x60(%rsp), %rax
    000025a1: 	leaq	0x1(%rax), %rsi
    000025a5: 	callq	_ZdlPvm@PLT # Offset: 9637
.Ltmp2979:
    000025aa: 	movq	0xfab8(%rsp), %rax
    000025b2: 	subq	%fs:0x28, %rax
    000025bb: 	jne	.Ltmp2980 # Offset: 9659
    000025c1: 	addq	$0xfac8, %rsp
    000025c8: 	popq	%rbx
    000025c9: 	popq	%rbp
    000025ca: 	popq	%r12
    000025cc: 	popq	%r13
    000025ce: 	popq	%r14
    000025d0: 	popq	%r15
    000025d2: 	retq # Offset: 9682
.Ltmp2766:
    000025d3: 	subsd	DATAat0x234a8(%rip), %xmm0
    000025db: 	cvttsd2si	%xmm0, %rax
    000025e0: 	btcq	$0x3f, %rax
    000025e5: 	jmp	.Ltmp2981 # Offset: 9701
.Ltmp2777:
    000025ea: 	movq	0x20(%rsp), %rsi
    000025ef: 	xorl	%edx, %edx
    000025f1: 	movq	%r14, %rdi
    000025f4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9716
    000025f9: 	movq	%rax, (%r14)
    000025fc: 	movq	%rax, %rdi
    000025ff: 	movq	0x30(%rsp), %rax
    00002604: 	movq	%rax, 0x10(%r14)
.Ltmp3055:
    00002608: 	movq	%r13, %rdx
    0000260b: 	movq	%r15, %rsi
    0000260e: 	callq	memcpy@PLT # Offset: 9742
    00002613: 	movq	0x30(%rsp), %r13
    00002618: 	movq	(%r14), %rdi
    0000261b: 	jmp	.Ltmp2982 # Offset: 9755
.Ltmp2955:
    00002620: 	subsd	DATAat0x234a8(%rip), %xmm1
    00002628: 	cvttsd2si	%xmm1, %rax
    0000262d: 	xorq	%r14, %rax
    00002630: 	jmp	.Ltmp2983 # Offset: 9776
    00002635: 	nopl	(%rax) # Size: 3
.Ltmp2941:
    00002638: 	subsd	DATAat0x234a8(%rip), %xmm1
    00002640: 	cvttsd2si	%xmm1, %rax
    00002645: 	xorq	%r14, %rax
    00002648: 	jmp	.Ltmp2984 # Offset: 9800
    0000264d: 	nopl	(%rax) # Size: 3
.Ltmp2948:
    00002650: 	subsd	DATAat0x234a8(%rip), %xmm1
    00002658: 	cvttsd2si	%xmm1, %rax
    0000265d: 	xorq	%r14, %rax
    00002660: 	jmp	.Ltmp2985 # Offset: 9824
    00002665: 	nopl	(%rax) # Size: 3
.Ltmp2929:
    00002668: 	subsd	DATAat0x234a8(%rip), %xmm1
    00002670: 	cvttsd2si	%xmm1, %rax
    00002675: 	xorq	%r14, %rax
    00002678: 	jmp	.Ltmp2986 # Offset: 9848
    0000267d: 	nopl	(%rax) # Size: 3
.Ltmp2915:
    00002680: 	subsd	DATAat0x234a8(%rip), %xmm1
    00002688: 	cvttsd2si	%xmm1, %rax
    0000268d: 	xorq	%r14, %rax
    00002690: 	jmp	.Ltmp2987 # Offset: 9872
    00002695: 	nopl	(%rax) # Size: 3
.Ltmp2922:
    00002698: 	subsd	DATAat0x234a8(%rip), %xmm0
    000026a0: 	cvttsd2si	%xmm0, %rdx
    000026a5: 	xorq	%r14, %rdx
    000026a8: 	jmp	.Ltmp2988 # Offset: 9896
    000026ad: 	nopl	(%rax) # Size: 3
.Ltmp2908:
    000026b0: 	subsd	DATAat0x234a8(%rip), %xmm1
    000026b8: 	cvttsd2si	%xmm1, %rax
    000026bd: 	xorq	%r14, %rax
    000026c0: 	jmp	.Ltmp2989 # Offset: 9920
    000026c5: 	nopl	(%rax) # Size: 3
.Ltmp2894:
    000026c8: 	subsd	DATAat0x234a8(%rip), %xmm0
    000026d0: 	movabsq	$-0x8000000000000000, %rax
    000026da: 	cvttsd2si	%xmm0, %rdx
    000026df: 	xorq	%rax, %rdx
    000026e2: 	jmp	.Ltmp2990 # Offset: 9954
    000026e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2901:
    000026f0: 	subsd	DATAat0x234a8(%rip), %xmm0
    000026f8: 	movabsq	$-0x8000000000000000, %rax
    00002702: 	cvttsd2si	%xmm0, %rdx
    00002707: 	xorq	%rax, %rdx
    0000270a: 	jmp	.Ltmp2991 # Offset: 9994
    0000270f: 	nop # Size: 1
.Ltmp2887:
    00002710: 	subsd	DATAat0x234a8(%rip), %xmm1
    00002718: 	cvttsd2si	%xmm1, %rax
    0000271d: 	xorq	%r14, %rax
    00002720: 	jmp	.Ltmp2992 # Offset: 10016
    00002725: 	nopl	(%rax) # Size: 3
.Ltmp2875:
    00002728: 	subsd	DATAat0x234a8(%rip), %xmm0
    00002730: 	cvttsd2si	%xmm0, %rax
    00002735: 	xorq	%r15, %rax
    00002738: 	jmp	.Ltmp2993 # Offset: 10040
    0000273d: 	nopl	(%rax) # Size: 3
.Ltmp2868:
    00002740: 	subsd	DATAat0x234a8(%rip), %xmm0
    00002748: 	cvttsd2si	%xmm0, %rax
    0000274d: 	xorq	%r15, %rax
    00002750: 	jmp	.Ltmp2994 # Offset: 10064
    00002755: 	nopl	(%rax) # Size: 3
.Ltmp2854:
    00002758: 	subsd	DATAat0x234a8(%rip), %xmm1
    00002760: 	cvttsd2si	%xmm1, %rax
    00002765: 	xorq	%r14, %rax
    00002768: 	jmp	.Ltmp2995 # Offset: 10088
    0000276d: 	nopl	(%rax) # Size: 3
.Ltmp2861:
    00002770: 	subsd	DATAat0x234a8(%rip), %xmm1
    00002778: 	cvttsd2si	%xmm1, %rax
    0000277d: 	xorq	%r14, %rax
    00002780: 	jmp	.Ltmp2996 # Offset: 10112
    00002785: 	nopl	(%rax) # Size: 3
.Ltmp2847:
    00002788: 	subsd	DATAat0x234a8(%rip), %xmm1
    00002790: 	cvttsd2si	%xmm1, %rax
    00002795: 	xorq	%r14, %rax
    00002798: 	jmp	.Ltmp2997 # Offset: 10136
    0000279d: 	nopl	(%rax) # Size: 3
.Ltmp2840:
    000027a0: 	subsd	DATAat0x234a8(%rip), %xmm1
    000027a8: 	cvttsd2si	%xmm1, %rax
    000027ad: 	xorq	%r14, %rax
    000027b0: 	jmp	.Ltmp2998 # Offset: 10160
    000027b5: 	nopl	(%rax) # Size: 3
.Ltmp2967:
    000027b8: 	subsd	DATAat0x234a8(%rip), %xmm1
    000027c0: 	cvttsd2si	%xmm1, %rax
    000027c5: 	xorq	%r14, %rax
    000027c8: 	jmp	.Ltmp2999 # Offset: 10184
.Ltmp2843:
    000027cd: 	movq	-0x8(%rdx), %rax
    000027d1: 	addq	$0x200, %rax
    000027d7: 	jmp	.Ltmp3000 # Offset: 10199
.Ltmp2850:
    000027dc: 	movq	-0x8(%rdx), %rax
    000027e0: 	addq	$0x200, %rax
    000027e6: 	jmp	.Ltmp3001 # Offset: 10214
.Ltmp2857:
    000027eb: 	movq	-0x8(%rdx), %rax
    000027ef: 	addq	$0x200, %rax
    000027f5: 	jmp	.Ltmp3002 # Offset: 10229
.Ltmp2836:
    000027fa: 	movq	-0x8(%rdx), %rax
    000027fe: 	addq	$0x200, %rax
    00002804: 	jmp	.Ltmp3003 # Offset: 10244
.Ltmp2834:
    00002809: 	movq	-0x8(%rdx), %rax
    0000280d: 	addq	$0x200, %rax
    00002813: 	jmp	.Ltmp3004 # Offset: 10259
.Ltmp2832:
    00002818: 	movq	-0x8(%rdx), %rax
    0000281c: 	addq	$0x200, %rax
    00002822: 	jmp	.Ltmp3005 # Offset: 10274
.Ltmp2975:
    00002827: 	movq	-0x8(%rdx), %rax
    0000282b: 	addq	$0x200, %rax
    00002831: 	jmp	.Ltmp3006 # Offset: 10289
.Ltmp2779:
    00002836: 	movq	-0x8(%rdx), %rax
    0000283a: 	addq	$0x200, %rax
    00002840: 	jmp	.Ltmp3007 # Offset: 10304
.Ltmp2786:
    00002845: 	movq	-0x8(%rdx), %rax
    00002849: 	addq	$0x200, %rax
    0000284f: 	jmp	.Ltmp3008 # Offset: 10319
.Ltmp2781:
    00002854: 	movq	%r12, %rsi
    00002857: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000285e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10334
    00002863: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000286a: 	jmp	.Ltmp3009 # Offset: 10346
.Ltmp2774:
    0000286f: 	movq	%r12, %rsi
    00002872: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002879: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10361
    0000287e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002885: 	jmp	.Ltmp3010 # Offset: 10373
.Ltmp2772:
    0000288a: 	movq	-0x8(%rdx), %rax
    0000288e: 	addq	$0x200, %rax
    00002894: 	jmp	.Ltmp3011 # Offset: 10388
.Ltmp2770:
    00002899: 	movq	-0x8(%rdx), %rax
    0000289d: 	addq	$0x200, %rax
    000028a3: 	jmp	.Ltmp3012 # Offset: 10403
.Ltmp2768:
    000028a8: 	movq	-0x8(%rdx), %rax
    000028ac: 	addq	$0x200, %rax
    000028b2: 	jmp	.Ltmp3013 # Offset: 10418
.Ltmp2811:
    000028b7: 	movq	%r12, %rsi
    000028ba: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000028c1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10433
    000028c6: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000028cd: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    000028d4: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    000028db: 	jne	.Ltmp3014 # Offset: 10459
.Ltmp2816:
    000028e1: 	movq	-0x8(%rdx), %rax
    000028e5: 	addq	$0x200, %rax
    000028eb: 	jmp	.Ltmp3014 # Offset: 10475
.Ltmp2809:
    000028f0: 	movq	-0x8(%rdx), %rax
    000028f4: 	addq	$0x200, %rax
    000028fa: 	jmp	.Ltmp3015 # Offset: 10490
.Ltmp2804:
    000028ff: 	movq	%r12, %rsi
    00002902: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002909: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10505
    0000290e: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002915: 	jmp	.Ltmp3016 # Offset: 10517
.Ltmp2802:
    0000291a: 	movq	-0x8(%rdx), %rax
    0000291e: 	addq	$0x200, %rax
    00002924: 	jmp	.Ltmp3017 # Offset: 10532
.Ltmp2797:
    00002929: 	movq	%r12, %rsi
    0000292c: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002933: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10547
    00002938: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    0000293f: 	jmp	.Ltmp3018 # Offset: 10559
.Ltmp2795:
    00002944: 	movq	-0x8(%rdx), %rax
    00002948: 	addq	$0x200, %rax
    0000294e: 	jmp	.Ltmp3019 # Offset: 10574
.Ltmp2790:
    00002953: 	movq	%r12, %rsi
    00002956: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    0000295d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10589
    00002962: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002969: 	jmp	.Ltmp3020 # Offset: 10601
.Ltmp2788:
    0000296e: 	movq	-0x8(%rdx), %rax
    00002972: 	addq	$0x200, %rax
    00002978: 	jmp	.Ltmp3021 # Offset: 10616
.Ltmp2890:
    0000297d: 	movq	-0x8(%rdx), %rax
    00002981: 	addq	$0x200, %rax
    00002987: 	jmp	.Ltmp3022 # Offset: 10631
.Ltmp2897:
    0000298c: 	movq	-0x8(%rdx), %rax
    00002990: 	addq	$0x200, %rax
    00002996: 	jmp	.Ltmp3023 # Offset: 10646
.Ltmp2883:
    0000299b: 	movq	-0x8(%rdx), %rax
    0000299f: 	addq	$0x200, %rax
    000029a5: 	jmp	.Ltmp3024 # Offset: 10661
.Ltmp2878:
    000029aa: 	movq	%r12, %rsi
    000029ad: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000029b4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10676
    000029b9: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000029c0: 	jmp	.Ltmp3025 # Offset: 10688
.Ltmp2871:
    000029c5: 	movq	-0x8(%rdx), %rax
    000029c9: 	addq	$0x200, %rax
    000029cf: 	jmp	.Ltmp3026 # Offset: 10703
.Ltmp2864:
    000029d4: 	movq	-0x8(%rdx), %rax
    000029d8: 	addq	$0x200, %rax
    000029de: 	jmp	.Ltmp3027 # Offset: 10718
.Ltmp2958:
    000029e3: 	movq	%r12, %rsi
    000029e6: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    000029ed: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10733
    000029f2: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    000029f9: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002a00: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002a07: 	jne	.Ltmp3028 # Offset: 10759
.Ltmp2963:
    00002a0d: 	movq	-0x8(%rdx), %rax
    00002a11: 	addq	$0x200, %rax
    00002a17: 	jmp	.Ltmp3028 # Offset: 10775
.Ltmp2932:
    00002a1c: 	movq	%r12, %rsi
    00002a1f: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002a26: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10790
    00002a2b: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002a32: 	cmpq	%rax, _Z7gLabelsB5cxx11+56(%rip)
    00002a39: 	movq	_Z7gLabelsB5cxx11+72(%rip), %rdx
    00002a40: 	jne	.Ltmp3029 # Offset: 10816
.Ltmp2937:
    00002a46: 	movq	-0x8(%rdx), %rax
    00002a4a: 	addq	$0x200, %rax
    00002a50: 	jmp	.Ltmp3029 # Offset: 10832
.Ltmp2925:
    00002a55: 	movq	-0x8(%rdx), %rax
    00002a59: 	addq	$0x200, %rax
    00002a5f: 	jmp	.Ltmp3030 # Offset: 10847
.Ltmp2911:
    00002a64: 	movq	-0x8(%rdx), %rax
    00002a68: 	addq	$0x200, %rax
    00002a6e: 	jmp	.Ltmp3031 # Offset: 10862
.Ltmp2918:
    00002a73: 	movq	-0x8(%rdx), %rax
    00002a77: 	addq	$0x200, %rax
    00002a7d: 	jmp	.Ltmp3032 # Offset: 10877
.Ltmp2904:
    00002a82: 	movq	-0x8(%rdx), %rax
    00002a86: 	addq	$0x200, %rax
    00002a8c: 	jmp	.Ltmp3033 # Offset: 10892
.Ltmp2827:
    00002a91: 	movq	%r12, %rsi
    00002a94: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002a9b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10907
    00002aa0: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002aa7: 	jmp	.Ltmp3034 # Offset: 10919
.Ltmp2825:
    00002aac: 	movq	-0x8(%rdx), %rax
    00002ab0: 	addq	$0x200, %rax
    00002ab6: 	jmp	.Ltmp3035 # Offset: 10934
.Ltmp2820:
    00002abb: 	movq	%r12, %rsi
    00002abe: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002ac5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10949
    00002aca: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002ad1: 	jmp	.Ltmp3036 # Offset: 10961
.Ltmp2818:
    00002ad6: 	movq	-0x8(%rdx), %rax
    00002ada: 	addq	$0x200, %rax
    00002ae0: 	jmp	.Ltmp3037 # Offset: 10976
.Ltmp2951:
    00002ae5: 	movq	-0x8(%rdx), %rax
    00002ae9: 	addq	$0x200, %rax
    00002aef: 	jmp	.Ltmp3038 # Offset: 10991
.Ltmp2944:
    00002af4: 	movq	-0x8(%rdx), %rax
    00002af8: 	addq	$0x200, %rax
    00002afe: 	jmp	.Ltmp3039 # Offset: 11006
.Ltmp2970:
    00002b03: 	movq	%r12, %rsi
    00002b06: 	leaq	_Z7gLabelsB5cxx11(%rip), %rdi
    00002b0d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 11021
    00002b12: 	movq	_Z7gLabelsB5cxx11+48(%rip), %rax
    00002b19: 	jmp	.Ltmp3040 # Offset: 11033
.Ltmp2962:
    00002b1e: 	testq	%r13, %r13
    00002b21: 	je	.Ltmp3041 # Offset: 11041
    00002b27: 	jmp	.Ltmp3042 # Offset: 11047
    00002b2c: 	nopl	(%rax) # Size: 4
.Ltmp2936:
    00002b30: 	testq	%r13, %r13
    00002b33: 	je	.Ltmp3043 # Offset: 11059
    00002b39: 	jmp	.Ltmp3044 # Offset: 11065
    00002b3e: 	nop # Size: 2
.Ltmp2824:
    00002b40: 	testq	%r13, %r13
    00002b43: 	je	.Ltmp3045 # Offset: 11075
    00002b49: 	jmp	.Ltmp3046 # Offset: 11081
    00002b4e: 	nop # Size: 2
.Ltmp2882:
    00002b50: 	testq	%r13, %r13
    00002b53: 	je	.Ltmp3047 # Offset: 11091
    00002b59: 	jmp	.Ltmp3048 # Offset: 11097
    00002b5e: 	nop # Size: 2
.Ltmp2801:
    00002b60: 	testq	%r13, %r13
    00002b63: 	je	.Ltmp3049 # Offset: 11107
    00002b69: 	jmp	.Ltmp3050 # Offset: 11113
    00002b6e: 	nop # Size: 2
.Ltmp2831:
    00002b70: 	testq	%r13, %r13
    00002b73: 	je	.Ltmp3051 # Offset: 11123
    00002b79: 	jmp	.Ltmp3052 # Offset: 11129
    00002b7e: 	nop # Size: 2
.Ltmp2815:
    00002b80: 	testq	%r13, %r13
    00002b83: 	je	.Ltmp3053 # Offset: 11139
    00002b89: 	jmp	.Ltmp3054 # Offset: 11145
    00002b8e: 	nop # Size: 2
.Ltmp2778:
    00002b90: 	testq	%r13, %r13
    00002b93: 	je	.Ltmp2982 # Offset: 11155
    00002b99: 	jmp	.Ltmp3055 # Offset: 11161
    00002b9e: 	nop # Size: 2
.Ltmp2794:
    00002ba0: 	testq	%r13, %r13
    00002ba3: 	je	.Ltmp3056 # Offset: 11171
    00002ba9: 	jmp	.Ltmp3057 # Offset: 11177
    00002bab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2808:
    00002bb0: 	testq	%r13, %r13
    00002bb3: 	je	.Ltmp3058 # Offset: 11187
    00002bb9: 	jmp	.Ltmp3059 # Offset: 11193
    00002bbe: 	nop # Size: 2
.Ltmp2974:
    00002bc0: 	testq	%r13, %r13
    00002bc3: 	je	.Ltmp3060 # Offset: 11203
    00002bc9: 	jmp	.Ltmp3061 # Offset: 11209
    00002bce: 	nop # Size: 2
.Ltmp2785:
    00002bd0: 	testq	%r13, %r13
    00002bd3: 	je	.Ltmp3062 # Offset: 11219
.Ltmp3063:
    00002bd9: 	movq	%r13, %rdx
    00002bdc: 	movq	%r15, %rsi
    00002bdf: 	callq	memcpy@PLT # Offset: 11231
    00002be4: 	movq	0x30(%rsp), %r13
    00002be9: 	movq	(%r14), %rdi
    00002bec: 	jmp	.Ltmp3062 # Offset: 11244
.Ltmp2793:
    00002bf1: 	movq	0x20(%rsp), %rsi
    00002bf6: 	xorl	%edx, %edx
    00002bf8: 	movq	%r14, %rdi
    00002bfb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11259
    00002c00: 	movq	%rax, (%r14)
    00002c03: 	movq	%rax, %rdi
    00002c06: 	movq	0x30(%rsp), %rax
    00002c0b: 	movq	%rax, 0x10(%r14)
.Ltmp3057:
    00002c0f: 	movq	%r13, %rdx
    00002c12: 	movq	%r15, %rsi
    00002c15: 	callq	memcpy@PLT # Offset: 11285
    00002c1a: 	movq	0x30(%rsp), %r13
    00002c1f: 	movq	(%r14), %rdi
    00002c22: 	jmp	.Ltmp3056 # Offset: 11298
.Ltmp2935:
    00002c27: 	movq	0x20(%rsp), %rsi
    00002c2c: 	xorl	%edx, %edx
    00002c2e: 	movq	%r14, %rdi
    00002c31: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11313
    00002c36: 	movq	%rax, (%r14)
    00002c39: 	movq	%rax, %rdi
    00002c3c: 	movq	0x30(%rsp), %rax
    00002c41: 	movq	%rax, 0x10(%r14)
.Ltmp3044:
    00002c45: 	movq	%r13, %rdx
    00002c48: 	movq	%r15, %rsi
    00002c4b: 	callq	memcpy@PLT # Offset: 11339
    00002c50: 	movq	0x30(%rsp), %r13
    00002c55: 	movq	(%r14), %rdi
    00002c58: 	jmp	.Ltmp3043 # Offset: 11352
.Ltmp2823:
    00002c5d: 	movq	0x20(%rsp), %rsi
    00002c62: 	xorl	%edx, %edx
    00002c64: 	movq	%r14, %rdi
    00002c67: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11367
    00002c6c: 	movq	%rax, (%r14)
    00002c6f: 	movq	%rax, %rdi
    00002c72: 	movq	0x30(%rsp), %rax
    00002c77: 	movq	%rax, 0x10(%r14)
.Ltmp3046:
    00002c7b: 	movq	%r13, %rdx
    00002c7e: 	movq	%r15, %rsi
    00002c81: 	callq	memcpy@PLT # Offset: 11393
    00002c86: 	movq	0x30(%rsp), %r13
    00002c8b: 	movq	(%r14), %rdi
    00002c8e: 	jmp	.Ltmp3045 # Offset: 11406
.Ltmp2881:
    00002c93: 	movq	0x20(%rsp), %rsi
    00002c98: 	xorl	%edx, %edx
    00002c9a: 	movq	%r14, %rdi
    00002c9d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11421
    00002ca2: 	movq	%rax, (%r14)
    00002ca5: 	movq	%rax, %rdi
    00002ca8: 	movq	0x30(%rsp), %rax
    00002cad: 	movq	%rax, 0x10(%r14)
.Ltmp3048:
    00002cb1: 	movq	%r13, %rdx
    00002cb4: 	movq	%r15, %rsi
    00002cb7: 	callq	memcpy@PLT # Offset: 11447
    00002cbc: 	movq	0x30(%rsp), %r13
    00002cc1: 	movq	(%r14), %rdi
    00002cc4: 	jmp	.Ltmp3047 # Offset: 11460
.Ltmp2961:
    00002cc9: 	movq	0x20(%rsp), %rsi
    00002cce: 	xorl	%edx, %edx
    00002cd0: 	movq	%r14, %rdi
    00002cd3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11475
    00002cd8: 	movq	%rax, (%r14)
    00002cdb: 	movq	%rax, %rdi
    00002cde: 	movq	0x30(%rsp), %rax
    00002ce3: 	movq	%rax, 0x10(%r14)
.Ltmp3042:
    00002ce7: 	movq	%r13, %rdx
    00002cea: 	movq	%r15, %rsi
    00002ced: 	callq	memcpy@PLT # Offset: 11501
    00002cf2: 	movq	0x30(%rsp), %r13
    00002cf7: 	movq	(%r14), %rdi
    00002cfa: 	jmp	.Ltmp3041 # Offset: 11514
.Ltmp2830:
    00002cff: 	movq	0x20(%rsp), %rsi
    00002d04: 	xorl	%edx, %edx
    00002d06: 	movq	%r14, %rdi
    00002d09: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11529
    00002d0e: 	movq	%rax, (%r14)
    00002d11: 	movq	%rax, %rdi
    00002d14: 	movq	0x30(%rsp), %rax
    00002d19: 	movq	%rax, 0x10(%r14)
.Ltmp3052:
    00002d1d: 	movq	%r13, %rdx
    00002d20: 	movq	%r15, %rsi
    00002d23: 	callq	memcpy@PLT # Offset: 11555
    00002d28: 	movq	0x30(%rsp), %r13
    00002d2d: 	movq	(%r14), %rdi
    00002d30: 	jmp	.Ltmp3051 # Offset: 11568
.Ltmp2973:
    00002d35: 	movq	0x20(%rsp), %rsi
    00002d3a: 	xorl	%edx, %edx
    00002d3c: 	movq	%rbx, %rdi
    00002d3f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11583
    00002d44: 	movq	%rax, (%rbx)
    00002d47: 	movq	%rax, %rdi
    00002d4a: 	movq	0x30(%rsp), %rax
    00002d4f: 	movq	%rax, 0x10(%rbx)
.Ltmp3061:
    00002d53: 	movq	%r13, %rdx
    00002d56: 	movq	%rbp, %rsi
    00002d59: 	callq	memcpy@PLT # Offset: 11609
    00002d5e: 	movq	0x30(%rsp), %r13
    00002d63: 	movq	(%rbx), %rdi
    00002d66: 	jmp	.Ltmp3060 # Offset: 11622
.Ltmp2800:
    00002d6b: 	movq	0x20(%rsp), %rsi
    00002d70: 	xorl	%edx, %edx
    00002d72: 	movq	%r14, %rdi
    00002d75: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11637
    00002d7a: 	movq	%rax, (%r14)
    00002d7d: 	movq	%rax, %rdi
    00002d80: 	movq	0x30(%rsp), %rax
    00002d85: 	movq	%rax, 0x10(%r14)
.Ltmp3050:
    00002d89: 	movq	%r13, %rdx
    00002d8c: 	movq	%r15, %rsi
    00002d8f: 	callq	memcpy@PLT # Offset: 11663
    00002d94: 	movq	0x30(%rsp), %r13
    00002d99: 	movq	(%r14), %rdi
    00002d9c: 	jmp	.Ltmp3049 # Offset: 11676
.Ltmp2784:
    00002da1: 	movq	0x20(%rsp), %rsi
    00002da6: 	xorl	%edx, %edx
    00002da8: 	movq	%r14, %rdi
    00002dab: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11691
    00002db0: 	movq	%rax, (%r14)
    00002db3: 	movq	%rax, %rdi
    00002db6: 	movq	0x30(%rsp), %rax
    00002dbb: 	movq	%rax, 0x10(%r14)
    00002dbf: 	jmp	.Ltmp3063 # Offset: 11711
.Ltmp2814:
    00002dc4: 	movq	0x20(%rsp), %rsi
    00002dc9: 	xorl	%edx, %edx
    00002dcb: 	movq	%r14, %rdi
    00002dce: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11726
    00002dd3: 	movq	%rax, (%r14)
    00002dd6: 	movq	%rax, %rdi
    00002dd9: 	movq	0x30(%rsp), %rax
    00002dde: 	movq	%rax, 0x10(%r14)
.Ltmp3054:
    00002de2: 	movq	%r13, %rdx
    00002de5: 	movq	%r15, %rsi
    00002de8: 	callq	memcpy@PLT # Offset: 11752
    00002ded: 	movq	0x30(%rsp), %r13
    00002df2: 	movq	(%r14), %rdi
    00002df5: 	jmp	.Ltmp3053 # Offset: 11765
.Ltmp2807:
    00002dfa: 	movq	0x20(%rsp), %rsi
    00002dff: 	xorl	%edx, %edx
    00002e01: 	movq	%r14, %rdi
    00002e04: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11780
    00002e09: 	movq	%rax, (%r14)
    00002e0c: 	movq	%rax, %rdi
    00002e0f: 	movq	0x30(%rsp), %rax
    00002e14: 	movq	%rax, 0x10(%r14)
.Ltmp3059:
    00002e18: 	movq	%r13, %rdx
    00002e1b: 	movq	%r15, %rsi
    00002e1e: 	callq	memcpy@PLT # Offset: 11806
    00002e23: 	movq	0x30(%rsp), %r13
    00002e28: 	movq	(%r14), %rdi
    00002e2b: 	jmp	.Ltmp3058 # Offset: 11819
.Ltmp2783:
    00002e30: 	leaq	DATAat0x23158(%rip), %rdi
    00002e37: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11831
.Ltmp2792:
    00002e3c: 	leaq	DATAat0x23158(%rip), %rdi
    00002e43: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11843
.Ltmp2799:
    00002e48: 	leaq	DATAat0x23158(%rip), %rdi
    00002e4f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11855
.Ltmp2806:
    00002e54: 	leaq	DATAat0x23158(%rip), %rdi
    00002e5b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11867
.Ltmp2813:
    00002e60: 	leaq	DATAat0x23158(%rip), %rdi
    00002e67: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11879
.Ltmp2822:
    00002e6c: 	leaq	DATAat0x23158(%rip), %rdi
    00002e73: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11891
.Ltmp2829:
    00002e78: 	leaq	DATAat0x23158(%rip), %rdi
    00002e7f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11903
.Ltmp2880:
    00002e84: 	leaq	DATAat0x23158(%rip), %rdi
    00002e8b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11915
.Ltmp2934:
    00002e90: 	leaq	DATAat0x23158(%rip), %rdi
    00002e97: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11927
.Ltmp2960:
    00002e9c: 	leaq	DATAat0x23158(%rip), %rdi
    00002ea3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11939
.Ltmp2972:
    00002ea8: 	leaq	DATAat0x23158(%rip), %rdi
    00002eaf: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11951
.Ltmp2980:
    00002eb4: 	callq	__stack_chk_fail@PLT # Offset: 11956
.Ltmp2776:
    00002eb9: 	leaq	DATAat0x23158(%rip), %rdi
    00002ec0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11968
    00002ec5: 	endbr64
.Ltmp3069:
    00002ec9: 	movq	%rax, %rbx
    00002ecc: 	jmp	.Ltmp3064 # Offset: 11980
    00002ece: 	endbr64
    00002ed2: 	movq	%rax, %rbx
    00002ed5: 	jmp	.Ltmp3065 # Offset: 11989
    00002ed7: 	endbr64
.Ltmp3068:
    00002edb: 	movq	%rax, %rbx
    00002ede: 	movq	0x90(%rsp), %rdi
    00002ee6: 	cmpq	0x10(%rsp), %rdi
    00002eeb: 	je	.Ltmp3065 # Offset: 12011
    00002eed: 	movq	0xa0(%rsp), %rax
    00002ef5: 	leaq	0x1(%rax), %rsi
    00002ef9: 	callq	_ZdlPvm@PLT # Offset: 12025
.Ltmp3065:
    00002efe: 	movq	0x70(%rsp), %rdi
    00002f03: 	leaq	0x80(%rsp), %rax
    00002f0b: 	cmpq	%rax, %rdi
    00002f0e: 	je	.Ltmp3066 # Offset: 12046
    00002f10: 	movq	0x80(%rsp), %rax
    00002f18: 	leaq	0x1(%rax), %rsi
    00002f1c: 	callq	_ZdlPvm@PLT # Offset: 12060
    00002f21: 	jmp	.Ltmp3066 # Offset: 12065
.Ltmp3064:
    00002f23: 	movq	0x90(%rsp), %rdi
    00002f2b: 	cmpq	0x10(%rsp), %rdi
    00002f30: 	je	.Ltmp3066 # Offset: 12080
.Ltmp3071:
    00002f32: 	movq	0xa0(%rsp), %rax
    00002f3a: 	leaq	0x1(%rax), %rsi
    00002f3e: 	callq	_ZdlPvm@PLT # Offset: 12094
.Ltmp3066:
    00002f43: 	movq	0x50(%rsp), %rdi
    00002f48: 	cmpq	0x28(%rsp), %rdi
    00002f4d: 	je	.Ltmp3067 # Offset: 12109
    00002f4f: 	movq	0x60(%rsp), %rax
    00002f54: 	leaq	0x1(%rax), %rsi
    00002f58: 	callq	_ZdlPvm@PLT # Offset: 12120
.Ltmp3067:
    00002f5d: 	movq	%rbx, %rdi
    00002f60: 	callq	_Unwind_Resume@PLT # Offset: 12128
    00002f65: 	endbr64
    00002f69: 	jmp	.Ltmp3068 # Offset: 12137
    00002f6e: 	endbr64
    00002f72: 	jmp	.Ltmp3068 # Offset: 12146
    00002f77: 	endbr64
    00002f7b: 	jmp	.Ltmp3068 # Offset: 12155
    00002f80: 	endbr64
    00002f84: 	jmp	.Ltmp3068 # Offset: 12164
    00002f89: 	endbr64
    00002f8d: 	jmp	.Ltmp3068 # Offset: 12173
    00002f92: 	endbr64
    00002f96: 	jmp	.Ltmp3068 # Offset: 12182
    00002f9b: 	endbr64
    00002f9f: 	jmp	.Ltmp3068 # Offset: 12191
    00002fa4: 	endbr64
    00002fa8: 	jmp	.Ltmp3068 # Offset: 12200
    00002fad: 	endbr64
    00002fb1: 	jmp	.Ltmp3068 # Offset: 12209
    00002fb6: 	endbr64
    00002fba: 	jmp	.Ltmp3068 # Offset: 12218
    00002fbf: 	endbr64
    00002fc3: 	jmp	.Ltmp3068 # Offset: 12227
    00002fc8: 	endbr64
    00002fcc: 	jmp	.Ltmp3068 # Offset: 12236
    00002fd1: 	endbr64
    00002fd5: 	jmp	.Ltmp3068 # Offset: 12245
    00002fda: 	endbr64
    00002fde: 	jmp	.Ltmp3069 # Offset: 12254
    00002fe3: 	endbr64
    00002fe7: 	jmp	.Ltmp3069 # Offset: 12263
    00002fec: 	endbr64
    00002ff0: 	jmp	.Ltmp3069 # Offset: 12272
    00002ff5: 	endbr64
    00002ff9: 	jmp	.Ltmp3069 # Offset: 12281
    00002ffe: 	endbr64
    00003002: 	jmp	.Ltmp3069 # Offset: 12290
    00003007: 	endbr64
    0000300b: 	jmp	.Ltmp3069 # Offset: 12299
    00003010: 	endbr64
    00003014: 	movq	%rax, %rbx
    00003017: 	jmp	.Ltmp3070 # Offset: 12311
    00003019: 	endbr64
    0000301d: 	movq	%rax, %rbx
    00003020: 	jmp	.Ltmp3066 # Offset: 12320
    00003025: 	endbr64
    00003029: 	jmp	.Ltmp3068 # Offset: 12329
    0000302e: 	endbr64
    00003032: 	jmp	.Ltmp3068 # Offset: 12338
    00003037: 	endbr64
    0000303b: 	jmp	.Ltmp3068 # Offset: 12347
.Ltmp3070:
    00003040: 	movq	0x90(%rsp), %rdi
    00003048: 	leaq	0xa0(%rsp), %rax
    00003050: 	cmpq	%rax, %rdi
    00003053: 	jne	.Ltmp3071 # Offset: 12371
    00003059: 	jmp	.Ltmp3066 # Offset: 12377
    0000305e: 	endbr64
    00003062: 	jmp	.Ltmp3068 # Offset: 12386
    00003067: 	endbr64
    0000306b: 	jmp	.Ltmp3069 # Offset: 12395
    00003070: 	endbr64
    00003074: 	jmp	.Ltmp3069 # Offset: 12404
    00003079: 	endbr64
    0000307d: 	jmp	.Ltmp3069 # Offset: 12413
    00003082: 	endbr64
    00003086: 	jmp	.Ltmp3069 # Offset: 12422
    0000308b: 	endbr64
    0000308f: 	jmp	.Ltmp3069 # Offset: 12431
    00003094: 	endbr64
    00003098: 	jmp	.Ltmp3069 # Offset: 12440
    0000309d: 	endbr64
    000030a1: 	jmp	.Ltmp3069 # Offset: 12449
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeImEvv"

Binary Function "_fini" after disassembly {
  Number      : 53
  State       : disassembled
  Address     : 0x22978
  Size        : 0xd
  MaxSize     : 0xd
  Offset      : 0x22978
  Section     : .fini
  Orc Section : .local.text._fini
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB052:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	addq	$0x8, %rsp
    0000000c: 	retq # Offset: 12
DWARF CFI Instructions:
    <empty>
End of Function "_fini"

BOLT-INFO: 0 out of 54 functions in the binary (0.0%) have non-empty execution profile
BOLT-INFO: 2386 instructions were shortened
BOLT-INFO: removed 195 empty blocks
BOLT-INFO: patched build-id (flipped last bit)
BOLT: 49 out of 81 functions were overwritten.
BOLT-INFO: rewriting .eh_frame_hdr in-place
BOLT-INFO: setting _end to 0x203028
